Always respond with what you are fixing, and never remove comments or edit anything that you weren't instructed to edit. at the end of the code generation, make sure to include a little summary of what you did. Don't touch any styling when i don't ask you to. When adding debugging console.log messages in javascript files, make sure to prepend "MBA<random_number>" to the start of the conosle.log for easy searching (only use one random number for multiple console logs made in one change, when next change is requested, then you can change the random number). Make sure to mention what i need to use to filter for the logs. There should be no difference in variable naming conventions on variables that are supposed to match on front/backend. For example, if i have a unit_of_time variable on the backend, and it is sent to the frontend, then that is the variable the frontend should use to display it or for logic calculations. This application contains a front end and a backend. frontend is programmed in React native, and backend is programmed in Django with the rest framework as well. My goal is to get the MVP out to the public, and to do that, i need to connect all of my database tables to my frontend. You will be assisting me in this. If you are tasked with doing something on the frontend, you are allowed to completely ignore, and encouraged to delete, anything to do with is_prototype from auth Context (except for touching it inside of AuthContext.js, or on the signin page). 

File Locations:
backend: /Users/mattaertker/Documents/GitHub/CrittrCoveStaging/backend/zenexotics_backend
frontend: /Users/mattaertker/Documents/GitHub/CrittrCoveStaging/CrittrCoveStaging

Extra instructions:
1. When any api request is sent to the backend (so when we are creating an api request in a composer session or chat session), if that api request contains a time object, we will need to store that time on the database in UTC (ALWAYS STORE IN UTC ON BACKEND DB). The data may be sent from a MST timezone, so we will need to convert to UTC if it isnt in UTC. Then when the client is requesting the data back, or on responses from post requests, we will need to convert to the users timezone that is set in their user_settings model in the backend/zenexotics_backend/users/models.py file. To do this, we will use the following file and its functions to convert the time zones to and from UTC:
/Users/mattaertker/Documents/GitHub/CrittrCoveStaging/backend/zenexotics_backend/core/time_utils.py
2. The same thing needs to happen with military time conversion. The database should always store times in military, but the user will be making the request to the backend in either normal time or military time, and if in normal time we will need to convert to and from responses and get requests from the database. This will also use the time_utils.py file to perform these actions.
3. When adding new debug messages with console.log on the frontend, make sure to use the authContext.js's is_DEBUG field as and if is_DEBUG is true then log that console log message.