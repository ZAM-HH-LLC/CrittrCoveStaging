# Generated by Django 4.2.7 on 2025-08-17 23:05

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Add new columns to existing search_logs_searchlog table
        migrations.RunSQL(
            """
            ALTER TABLE search_logs_searchlog 
            ADD COLUMN IF NOT EXISTS user_type VARCHAR(20) DEFAULT 'anonymous',
            ADD COLUMN IF NOT EXISTS service_query VARCHAR(255),
            ADD COLUMN IF NOT EXISTS overnight_service BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS price_range VARCHAR(50),
            ADD COLUMN IF NOT EXISTS radius_miles INTEGER DEFAULT 30,
            ADD COLUMN IF NOT EXISTS filter_background_checked BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS filter_insured BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS filter_elite_pro BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS results_found INTEGER DEFAULT 0,
            ADD COLUMN IF NOT EXISTS has_fallback BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS search_successful BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS original_query_successful BOOLEAN DEFAULT false,
            ADD COLUMN IF NOT EXISTS search_query_summary TEXT,
            ADD COLUMN IF NOT EXISTS ip_address INET,
            ADD COLUMN IF NOT EXISTS user_agent TEXT,
            ADD COLUMN IF NOT EXISTS created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
            ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW();
            """,
            reverse_sql="-- No reverse operation needed"
        ),
        
        # Create GetMatchedLog table
        migrations.CreateModel(
            name='GetMatchedLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('authenticated', 'Authenticated'), ('anonymous', 'Anonymous')], default='anonymous', max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('search_query', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('contacted', 'Contacted'), ('matched', 'Matched'), ('closed', 'Closed')], default='pending', max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True, help_text='Internal notes for tracking follow-up')),
                ('contacted_at', models.DateTimeField(blank=True, null=True)),
                ('matched_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_matched_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'get_matched_logs',
                'ordering': ['-created_at'],
            },
        ),
        
        # Add indexes
        migrations.RunSQL(
            """
            CREATE INDEX IF NOT EXISTS search_logs_searchlog_created_at_idx ON search_logs_searchlog(created_at);
            CREATE INDEX IF NOT EXISTS search_logs_searchlog_user_created_at_idx ON search_logs_searchlog(user_id, created_at);
            CREATE INDEX IF NOT EXISTS search_logs_searchlog_ip_created_at_idx ON search_logs_searchlog(ip_address, created_at);
            CREATE INDEX IF NOT EXISTS search_logs_searchlog_service_query_idx ON search_logs_searchlog(service_query);
            CREATE INDEX IF NOT EXISTS search_logs_searchlog_search_successful_idx ON search_logs_searchlog(search_successful);
            
            CREATE INDEX IF NOT EXISTS get_matched_logs_created_at_idx ON get_matched_logs(created_at);
            CREATE INDEX IF NOT EXISTS get_matched_logs_status_idx ON get_matched_logs(status);
            CREATE INDEX IF NOT EXISTS get_matched_logs_email_idx ON get_matched_logs(email);
            CREATE INDEX IF NOT EXISTS get_matched_logs_ip_created_at_idx ON get_matched_logs(ip_address, created_at);
            """,
            reverse_sql="-- No reverse operation needed"
        ),
    ]
