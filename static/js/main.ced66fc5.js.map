{"version":3,"file":"static/js/main.ced66fc5.js","mappings":"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","sources":["src/components/TutorialModal.js","src/components/ConfirmationModal.js","src/context/TutorialContext.js","src/components/Toast.js","src/components/ToastProvider.js","src/components/RoadmapSection.js","src/data/mockData.js","src/screens/HomeScreen.js","src/screens/OwnerProfile.js","src/components/FloatingSaveButton.js","src/components/common/StepProgressIndicator.js","src/components/serviceCreation/CategorySelectionStep.js","src/components/serviceCreation/ServiceDetailsStep.js","src/components/serviceCreation/RatesAndReviewStep.js","src/components/ServiceCreationModal.js","src/components/ProfessionalServiceCard.js","src/components/ServiceManager.js","src/components/RecordedPets.js","src/components/EditableSection.js","src/components/ProfessionalTab.js","src/components/DatePicker.js","src/components/BackHeader.js","src/components/CrossPlatformView.js","src/components/profile/ProfileInfoTab.js","src/components/profile/ServicesAvailabilityTab.js","src/components/profile/PetsPreferencesTab.js","src/components/profile/SettingsPaymentsTab.js","src/components/TabBar.js","src/screens/MyProfile.js","src/components/CustomButton.js","src/validation/validation.js","src/screens/SignIn.js","src/screens/SignUp.js","src/screens/ResetPassword.js","src/screens/ResetPasswordConfirm.js","src/components/BookingCard.js","src/components/bookingComponents/ReviewAndRatesCard.js","src/components/BookingApprovalModal.js","src/utils/formatStrings.js","src/screens/Dashboard.js","src/screens/BecomeProfessional.js","src/screens/MoreScreen.js","src/components/UnavailableTimeSlot.js","src/components/AvailabilityBookingCard.js","src/components/TimePicker.js","src/components/AddAvailabilityModal.js","src/components/ui/datetime-picker.js","src/components/DefaultSettingsModal.js","src/components/AvailabilityBottomSheet.js","src/components/UnavailableTimesModal.js","src/screens/AvailabilitySettings.js","src/screens/MyPets.js","src/screens/OwnerHistory.js","src/components/DateTimePicker.js","src/utils/dateTimeValidation.js","src/data/calculations.js","src/components/AddOccurrenceModal.js","src/components/RequestBookingModal.js","src/components/bookingComponents/ServiceAndPetsCard.js","src/components/bookingComponents/DateSelectionCard.js","src/components/bookingComponents/TimePickerDropdown.js","src/components/bookingComponents/NewTimeRangeSelector.js","src/components/bookingComponents/DayTimeSelector.js","src/components/bookingComponents/TimeSelectionCard.js","src/components/BookingStepModal.js","src/components/BookingMessageCard.js","src/components/DraftConfirmationModal.js","src/hooks/useWebSocket.js","src/screens/MessageHistory.js","src/components/StripeCardElement.js","src/screens/PaymentMethods.js","src/screens/Settings.js","src/screens/PrivacyPolicy.js","src/screens/ProfessionalSettings.js","src/screens/TermsOfService.js","src/screens/HelpFAQ.js","src/screens/ContactUs.js","src/components/SearchBar.js","src/screens/Owners.js","src/components/CostCalculationModal.js","src/components/ServiceCard.js","src/screens/ProfessionalProfile.js","src/components/ContractList.js","src/components/OwnerPicker.js","src/components/ContractTemplate.js","src/components/ChronicleSummary.js","src/components/QuestionInput.js","src/components/ChronicleForm.js","src/screens/MyContracts.js","src/screens/ChangePassword.js","src/screens/AddPet.js","src/components/CustomMultiSelect.js","src/components/Tooltip.js","src/components/ServiceTypeSelect.js","src/components/SearchRefiner.js","src/components/ProfessionalList.js","src/components/MapView.js","src/screens/SearchProfessionalsListing.js","src/screens/MyBookings.js","src/components/AddRateModal.js","src/components/SnackBar.js","src/screens/BookingDetails.js","src/screens/ServiceManagerScreen.js","src/screens/BlogScreen.js","src/screens/BlogPost.js","src/screens/Waitlist.js","src/screens/TestToast.js","src/components/ConnectionCard.js","src/screens/Connections.js","App.js","src/screens/AboutScreen.js","src/api/API.js","src/components/Navigation.js","src/utils/logging.js","src/config/config.js","src/utils/StripeService.js","src/utils/StripePlatform.js","src/context/AuthContext.js","src/context/MessageNotificationContext.js","src/styles/theme.js","src/utils/time_utils.js","src/utils/websocket.js","node_modules/moment/locale|sync|/^/.//.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Platform, Alert, Animated, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { debugLog } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst TutorialModal = ({\n  step,\n  totalSteps,\n  title,\n  description,\n  onNext,\n  onPrevious,\n  onSkip,\n  onClose,\n  onFinish,\n  position = 'bottomRight', // bottomRight, bottomLeft, topRight, topLeft\n  userRole,\n  is_DEBUG = false\n}) => {\n  const isFirstStep = step === 1;\n  const isLastStep = step === totalSteps;\n  const [isVisible, setIsVisible] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(null);\n  const navigation = useNavigation();\n  \n  // Animation values\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(0)).current;\n  const overlayAnim = useRef(new Animated.Value(1)).current;\n  const { width, height } = Dimensions.get('window');\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal mounted/updated', {\n        isVisible,\n        currentStep: step,\n        userRole,\n        screen: currentScreen\n      });\n    }\n  }, [isVisible, step, userRole, currentScreen]);\n\n  useEffect(() => {\n    // Ensure the tutorial stays visible during screen changes\n    if (isVisible) {\n      debugLog('MBA54321 Tutorial is visible, ensuring it stays visible on screen change');\n      const timer = setTimeout(() => {\n        setIsVisible(true);\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible]);\n\n  // Add a focus listener to ensure the tutorial stays visible when the screen changes\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      if (isVisible) {\n        debugLog('MBA54321 Screen focused, ensuring tutorial stays visible');\n        setIsVisible(true);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, isVisible]);\n\n  // Animation effect\n  useEffect(() => {\n    // Fade in animation for modal\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n\n    // Animate from center to final position\n    Animated.timing(slideAnim, {\n      toValue: 1,\n      duration: 800,\n      useNativeDriver: true,\n    }).start();\n\n    // Fade out the overlay as the modal slides\n    Animated.timing(overlayAnim, {\n      toValue: 0,\n      duration: 800,\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const handleNext = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleNext called', { step, totalSteps });\n    }\n    onNext();\n  };\n\n  const handlePrevious = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handlePrevious called', { step, totalSteps });\n    }\n    onPrevious();\n  };\n\n  const handleSkip = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleSkip called');\n    }\n    onSkip();\n  };\n\n  const handleClose = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleClose called');\n    }\n    onClose();\n  };\n\n  const handleFinish = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleFinish called');\n    }\n    onFinish();\n  };\n\n  const getPositionStyles = () => {\n    switch (position) {\n      case 'bottomRight':\n        return {\n          bottom: 20,\n          right: 20,\n        };\n      case 'bottomLeft':\n        return {\n          bottom: 20,\n          left: 20,\n        };\n      case 'topRight':\n        return {\n          top: 20,\n          right: 20,\n        };\n      case 'topLeft':\n        return {\n          top: 20,\n          left: 20,\n        };\n      default:\n        return {\n          bottom: 20,\n          right: 20,\n        };\n    }\n  };\n\n  // Calculate the initial position (center of screen)\n  const initialPosition = {\n    top: (height + 60) / 2 - 150,\n    left: (width - 15) / 2 - 160,\n  };\n\n  // Get the final position\n  const finalPosition = getPositionStyles();\n\n  // Calculate the slide animation values\n  const slideStyle = {\n    transform: [\n      {\n        translateX: slideAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, finalPosition.right ? width/2 - 160 : -width/2 + 160],\n        }),\n      },\n      {\n        translateY: slideAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, finalPosition.bottom ? height/2 - 150 : -height/2 + 150],\n        }),\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Animated.View \n        style={[\n          styles.overlay,\n          { opacity: overlayAnim }\n        ]}\n        pointerEvents=\"none\"\n      />\n      <Animated.View \n        style={[\n          styles.container, \n          initialPosition,\n          { opacity: fadeAnim },\n          slideStyle\n        ]}\n      >\n        <View style={styles.pulseBorder} />\n        <TouchableOpacity style={styles.closeButton} onPress={handleClose}>\n          <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.text} />\n        </TouchableOpacity>\n\n        <View style={styles.content}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description}</Text>\n\n          <View style={styles.footer}>\n            <View style={styles.leftButtons}>\n              {isFirstStep ? (\n                <TouchableOpacity style={styles.skipButton} onPress={handleSkip}>\n                  <Text style={styles.skipText}>Skip Tutorial</Text>\n                </TouchableOpacity>\n              ) : (\n                <TouchableOpacity style={styles.navigationButton} onPress={handlePrevious}>\n                  <MaterialCommunityIcons name=\"chevron-left\" size={20} color={theme.colors.primary} />\n                  <Text style={styles.navigationText}>Previous</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n\n            <View style={styles.stepIndicator}>\n              <Text style={styles.stepText}>{step}/{totalSteps}</Text>\n            </View>\n\n            {isLastStep ? (\n              <TouchableOpacity style={styles.finishButton} onPress={handleFinish}>\n                <Text style={styles.finishText}>Finish Tutorial</Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity style={styles.navigationButton} onPress={handleNext}>\n                <Text style={styles.navigationText}>Next</Text>\n                <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </Animated.View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 999,\n  },\n  container: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    width: 320,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 8,\n    zIndex: 1000,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  pulseBorder: {\n    position: 'absolute',\n    top: -4,\n    left: -4,\n    right: -4,\n    bottom: -4,\n    borderRadius: 14,\n    opacity: 0.7,\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n    padding: 8,\n    zIndex: 1,\n  },\n  content: {\n    marginTop: 12,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: theme.colors.primary,\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  description: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 20,\n    lineHeight: 22,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  leftButtons: {\n    flex: 1,\n  },\n  skipButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  skipText: {\n    color: theme.colors.secondary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  navigationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  navigationText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  finishButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 4,\n  },\n  finishText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stepIndicator: {\n    paddingHorizontal: 12,\n  },\n  stepText: {\n    color: theme.colors.secondary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default TutorialModal; ","import React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ConfirmationModal = ({ \n  visible, \n  onClose, \n  onConfirm, \n  actionText,\n  isLoading = false\n}) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalText}>\n            Are you sure you want to {actionText}?\n          </Text>\n          \n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.cancelButton]}\n              onPress={onClose}\n              disabled={isLoading}\n            >\n              <Text style={[\n                styles.cancelButtonText,\n                isLoading && styles.disabledText\n              ]}>\n                Cancel\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={[\n                styles.button, \n                styles.confirmButton,\n                isLoading && styles.disabledButton\n              ]}\n              onPress={onConfirm}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color={theme.colors.surface} />\n              ) : (\n                <Text style={styles.confirmButtonText}>Confirm</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalText: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: theme.colors.text,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  confirmButtonText: {\n    color: theme.colors.surface,\n    fontWeight: '500',\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  disabledText: {\n    opacity: 0.5,\n  },\n});\n\nexport default ConfirmationModal;","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext } from './AuthContext';\nimport { debugLog } from './AuthContext';\nimport { navigateToFrom } from '../components/Navigation';\nimport TutorialModal from '../components/TutorialModal';\nimport ConfirmationModal from '../components/ConfirmationModal';\nimport { useNavigation } from '@react-navigation/native';\n\nexport const TutorialContext = createContext();\n\nconst defaultTutorialStatus = {\n  done_client_tutorial: false,\n  done_pro_tutorial: false,\n};\n\nconst tutorialSteps = {\n  client: [\n    {\n      screen: 'MyProfile',\n      tab: 'profile_info',\n      title: 'Welcome to Your Profile',\n      description: 'This is where you can manage your personal information. Start by completing your profile to help professionals understand your needs better.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'pets_preferences',\n      title: 'Add Pets & Home Info',\n      description: 'Add information about your pets and their care preferences along with your home information. This helps professionals provide the best care possible.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'settings_payments',\n      title: 'Payment & Settings',\n      description: 'Set up your settings, payment methods, and subscription preferences to easily book services.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'Dashboard',\n      title: 'Your Dashboard',\n      description: 'Here you can view your upcoming bookings, track ongoing services, and manage your account.',\n      position: 'bottomRight',\n      onStepEnter: (navigation) => {\n        if (navigation) {\n          navigation.navigate('Dashboard');\n        }\n      }\n    },\n    {\n      screen: 'SearchProfessionalsListing',\n      title: 'Find Professionals',\n      description: 'Search for qualified professionals in your area. Filter by service type, availability, and more.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'BecomeProfessional',\n      title: 'Become a Professional',\n      description: 'Want to offer your services? You can apply to become a professional anytime.',\n      position: 'bottomRight',\n    },\n  ],\n  professional: [\n    {\n      screen: 'MyProfile',\n      tab: 'profile_info',\n      title: 'Welcome to Your Professional Profile',\n      description: 'This is where you can manage your professional information. Start by completing your profile to help clients find you.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'services',\n      title: 'Your Services',\n      description: 'Add and manage the services you offer. Set your rates, availability, and service areas.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'settings_payments',\n      title: 'Payment Settings',\n      description: 'Set up your payment methods and subscription preferences to receive payments from clients.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'Dashboard',\n      title: 'Your Dashboard',\n      description: 'Here you can view your upcoming bookings, track ongoing services, and manage your account.',\n      position: 'bottomRight',\n      onStepEnter: (navigation) => {\n        if (navigation) {\n          navigation.navigate('Dashboard');\n        }\n      }\n    },\n    {\n      screen: 'SearchClients',\n      title: 'Find Clients',\n      description: 'Search for potential clients in your area. Filter by service type, pet type, and more.',\n      position: 'bottomRight',\n    },\n  ],\n  // Default steps for when userRole is not set\n  default: [\n    {\n      screen: 'Home',\n      title: 'Welcome',\n      description: 'Welcome to CrittrCove! Let\\'s get started with a quick tour.',\n      position: 'bottomRight',\n    }\n  ]\n};\n\nexport const TutorialProvider = ({ children }) => {\n  const { isSignedIn, userRole, is_DEBUG } = useContext(AuthContext);\n  const navigation = useNavigation();\n  const [tutorialStatus, setTutorialStatus] = useState(defaultTutorialStatus);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [skipConfirmationVisible, setSkipConfirmationVisible] = useState(false);\n  const [closeConfirmationVisible, setCloseConfirmationVisible] = useState(false);\n\n  useEffect(() => {\n    if (isSignedIn && userRole) {\n      debugLog(\"MBA54321 Both isSignedIn and userRole are available, fetching tutorial status\", { isSignedIn, userRole });\n      fetchTutorialStatus();\n    } else {\n      debugLog(\"MBA54321 Waiting for auth data\", { isSignedIn, userRole });\n      setIsLoading(false);\n    }\n  }, [isSignedIn, userRole]);\n\n  const fetchTutorialStatus = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/api/users/v1/tutorial-status/current/`);\n      if (is_DEBUG) {\n        debugLog('MBA54321 Tutorial status:', response.data);\n      }\n      setTutorialStatus(response.data);\n      setHasError(false);\n      setErrorMessage('');\n      \n      // Show tutorial if it's not completed\n      if ((userRole === 'professional' && !response.data.done_pro_tutorial) ||\n          (userRole === 'petOwner' && !response.data.done_client_tutorial)) {\n        setIsVisible(true);\n        \n        // Redirect new users to MyProfile screen\n        if (is_DEBUG) {\n          debugLog('MBA54321 Redirecting new user to MyProfile screen');\n        }\n        // Use navigateToFrom instead of navigation.navigate to ensure proper tab highlighting\n        navigateToFrom(navigation, 'MyProfile', 'Dashboard', { screen: 'profile_info' });\n        \n        if (is_DEBUG) {\n          debugLog('MBA54321 Tutorial should be visible:', {\n            userRole,\n            done_client_tutorial: response.data.done_client_tutorial,\n            done_pro_tutorial: response.data.done_pro_tutorial\n          });\n        }\n      } else {\n        if (is_DEBUG) {\n          debugLog('MBA54321 Tutorial should NOT be visible');\n        }\n        setIsVisible(false);\n      }\n    } catch (error) {\n      console.error('Error fetching tutorial status:', error);\n      setHasError(true);\n      setErrorMessage('We had trouble loading your tutorial settings, but you can still proceed with the tutorial.');\n      // Show tutorial with default settings if there's an error\n      setTutorialStatus(defaultTutorialStatus);\n      setIsVisible(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateTutorialStatus = async (updates) => {\n    try {\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/users/v1/tutorial-status/update_status/`,\n        updates\n      );\n      if (is_DEBUG) {\n        debugLog('MBA54321 Tutorial status updated:', response.data);\n      }\n      setTutorialStatus(response.data);\n      setHasError(false);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error updating tutorial status:', error);\n      setHasError(true);\n      setErrorMessage('We had trouble saving your tutorial progress, but you can continue using the app.');\n      // Continue with local state even if server update fails\n      setTutorialStatus(prev => ({ ...prev, ...updates }));\n    }\n  };\n\n  const getCurrentStepData = () => {\n    // Determine which steps to use based on userRole\n    let roleKey = 'default';\n    if (userRole === 'professional') {\n      roleKey = 'professional';\n    } else if (userRole === 'petOwner' || userRole === 'client') {\n      roleKey = 'client';\n    }\n    \n    const steps = tutorialSteps[roleKey] || tutorialSteps.default;\n    \n    // Make sure currentStep is within bounds\n    const safeCurrentStep = Math.min(Math.max(1, currentStep), steps.length);\n    \n    // Get the step data\n    const stepData = steps[safeCurrentStep - 1];\n    \n    // If there's an error, add it to the first step's description\n    if (hasError && safeCurrentStep === 1) {\n      return {\n        ...stepData,\n        description: `${errorMessage}\\n\\n${stepData.description}`\n      };\n    }\n    \n    return stepData;\n  };\n\n  const handleNext = async () => {\n    debugLog(\"MBA54321 handleNext called\", { currentStep, userRole });\n    \n    // Check if we're at the last step\n    const roleKey = userRole === 'professional' ? 'professional' : 'client';\n    const steps = tutorialSteps[roleKey];\n    \n    if (currentStep >= steps.length) {\n      debugLog(\"MBA54321 At last step, completing tutorial\", { currentStep, totalSteps: steps.length });\n      // Don't complete the tutorial here, just move to the next step\n      // The tutorial will be completed when the user clicks the \"Finish Tutorial\" button\n      return;\n    }\n    \n    // Get the next step data before incrementing the step counter\n    const nextStep = steps[currentStep];\n    const currentStepData = steps[currentStep - 1];\n    \n    debugLog(\"MBA54321 Current step data\", currentStepData);\n    debugLog(\"MBA54321 Next step data\", nextStep);\n    \n    // Increment the step counter first\n    setCurrentStep(prevStep => prevStep + 1);\n    \n    // If we're navigating to a different screen or tab\n    if (nextStep.screen !== currentStepData.screen || (nextStep.tab && nextStep.tab !== currentStepData.tab)) {\n      debugLog(\"MBA54321 Navigating to different screen/tab\", { \n        from: currentStepData.screen, \n        to: nextStep.screen,\n        fromTab: currentStepData.tab,\n        toTab: nextStep.tab\n      });\n      \n      // Use navigateToFrom for consistent navigation behavior\n      if (nextStep.tab) {\n        // If we have a tab parameter, pass it in the params\n        navigateToFrom(navigation, nextStep.screen, currentStepData.screen, { screen: nextStep.tab });\n      } else {\n        // For screens without tabs\n        navigateToFrom(navigation, nextStep.screen, currentStepData.screen);\n      }\n      \n      // Keep the tutorial visible after navigation\n      setTimeout(() => {\n        setIsVisible(true);\n      }, 700);\n    }\n  };\n\n  const handlePrevious = () => {\n    debugLog(\"MBA54321 handlePrevious called\", { currentStep, userRole });\n    \n    if (currentStep > 1) {\n      // Get the previous step data before decrementing the step counter\n      const roleKey = userRole === 'professional' ? 'professional' : 'client';\n      const steps = tutorialSteps[roleKey];\n      const previousStep = steps[currentStep - 2]; // -2 because currentStep is 1-indexed\n      const currentStepData = steps[currentStep - 1];\n      \n      debugLog(\"MBA54321 Previous step data\", previousStep);\n      debugLog(\"MBA54321 Current step data\", currentStepData);\n      \n      // Decrement the step counter\n      setCurrentStep(prevStep => prevStep - 1);\n      \n      // If we're navigating to a different screen or tab\n      if (previousStep.screen !== currentStepData.screen || (previousStep.tab && previousStep.tab !== currentStepData.tab)) {\n        debugLog(\"MBA54321 Navigating back to different screen/tab\", { \n          from: currentStepData.screen, \n          to: previousStep.screen,\n          fromTab: currentStepData.tab,\n          toTab: previousStep.tab\n        });\n        \n        // Use navigateToFrom for consistent navigation behavior\n        if (previousStep.tab) {\n          // If we have a tab parameter, pass it in the params\n          navigateToFrom(navigation, previousStep.screen, currentStepData.screen, { screen: previousStep.tab });\n        } else {\n          // For screens without tabs\n          navigateToFrom(navigation, previousStep.screen, currentStepData.screen);\n        }\n        \n        // Keep the tutorial visible after navigation\n        setTimeout(() => {\n          setIsVisible(true);\n        }, 700);\n      }\n    }\n  };\n\n  const handleSkip = () => {\n    debugLog('MBA54321 handleSkip called through the later');\n    // Show confirmation modal before skipping\n    setSkipConfirmationVisible(true);\n  };\n\n  const handleSkipConfirm = () => {\n    debugLog('MBA54321 handleSkipConfirm called');\n    setSkipConfirmationVisible(false);\n    completeTutorial();\n  };\n\n  const handleSkipCancel = () => {\n    debugLog('MBA54321 handleSkipCancel called');\n    setSkipConfirmationVisible(false);\n  };\n\n  const handleClose = () => {\n    debugLog('MBA54321 handleClose called');\n    setCloseConfirmationVisible(true);\n  };\n\n  const handleCloseConfirm = () => {\n    debugLog('MBA54321 handleCloseConfirm called');\n    setCloseConfirmationVisible(false);\n    completeTutorial();\n  };\n\n  const handleCloseCancel = () => {\n    debugLog('MBA54321 handleCloseCancel called');\n    setCloseConfirmationVisible(false);\n  };\n\n  const completeTutorial = async () => {\n    debugLog(\"MBA54321 Completing tutorial\", { userRole });\n    \n    try {\n      // Update the tutorial status in the backend based on user role\n      const updates = {};\n      \n      // Set the appropriate tutorial completion flag based on user role\n      if (userRole === 'professional') {\n        updates.done_pro_tutorial = true;\n      } else if (userRole === 'petOwner' || userRole === 'client') {\n        updates.done_client_tutorial = true;\n      }\n      \n      // Update the tutorial status in the backend\n      await axios.patch(`${API_BASE_URL}/api/users/v1/tutorial-status/update_status/`, updates);\n      \n      debugLog(\"MBA54321 Tutorial status updated in backend\");\n      \n      // Hide the tutorial modal\n      setIsVisible(false);\n      \n      // Navigate to the Dashboard\n      debugLog(\"MBA54321 Navigating to Dashboard\");\n      navigateToFrom(navigation, 'Dashboard', getCurrentStepData().screen);\n      \n    } catch (error) {\n      debugLog(\"MBA54321 Error completing tutorial\", { error: error.message });\n      console.error('Error completing tutorial:', error);\n      \n      // Even if there's an error, try to navigate to Dashboard\n      navigateToFrom(navigation, 'Dashboard', getCurrentStepData().screen);\n    }\n  };\n\n  // If still loading, return a loading state\n  if (isLoading) {\n    return (\n      <TutorialContext.Provider\n        value={{\n          isVisible: false,\n          currentStep: 1,\n          totalSteps: 1,\n          stepData: tutorialSteps.default[0],\n          tutorialStatus: defaultTutorialStatus,\n          hasError: false,\n          errorMessage: '',\n          handleNext: () => {},\n          handlePrevious: () => {},\n          handleSkip: () => {},\n          completeTutorial: () => {},\n          setIsVisible: () => {},\n          isLoading: true\n        }}\n      >\n        {children}\n      </TutorialContext.Provider>\n    );\n  }\n\n  return (\n    <TutorialContext.Provider\n      value={{\n        isVisible,\n        setIsVisible,\n        currentStep,\n        setCurrentStep,\n        handleNext,\n        handlePrevious,\n        handleSkip,\n        completeTutorial,\n        isLoading,\n      }}\n    >\n      {children}\n      {isVisible && getCurrentStepData() && (\n        <TutorialModal\n          step={currentStep}\n          totalSteps={tutorialSteps[userRole === 'professional' ? 'professional' : \n                     (userRole === 'petOwner' || userRole === 'client') ? 'client' : 'default'].length}\n          title={getCurrentStepData().title}\n          description={getCurrentStepData().description}\n          onNext={handleNext}\n          onPrevious={handlePrevious}\n          onSkip={handleSkip}\n          onClose={handleClose}\n          onFinish={completeTutorial}\n          position={getCurrentStepData().position}\n          userRole={userRole}\n          is_DEBUG={is_DEBUG}\n        />\n      )}\n      <ConfirmationModal\n        visible={skipConfirmationVisible}\n        onClose={handleSkipCancel}\n        onConfirm={handleSkipConfirm}\n        actionText=\"skip the tutorial\"\n        isLoading={false}\n      />\n      <ConfirmationModal\n        visible={closeConfirmationVisible}\n        onClose={handleCloseCancel}\n        onConfirm={handleCloseConfirm}\n        actionText=\"close the tutorial\"\n        isLoading={false}\n      />\n    </TutorialContext.Provider>\n  );\n}; ","import React, { useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Animated, TouchableOpacity, Dimensions, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\n/**\n * Toast notification component that slides in from the right corner\n * \n * @param {Object} props Component props\n * @param {boolean} props.visible Whether the toast is visible\n * @param {string} props.message The message to display in the toast\n * @param {string} props.type The type of toast: 'success', 'error', 'info', 'warning'\n * @param {Function} props.onDismiss Callback when toast is dismissed\n * @param {number} props.duration Duration in ms to show toast before auto-dismissing (default: 3000ms)\n */\nconst Toast = ({ \n  visible, \n  message, \n  type = 'success', \n  onDismiss,\n  duration = 3000\n}) => {\n  const animation = useRef(new Animated.Value(Dimensions.get('window').width)).current;\n  const opacity = useRef(new Animated.Value(0)).current;\n  const timeoutRef = useRef(null);\n\n  const getBackgroundColor = () => {\n    switch (type) {\n      case 'error':\n        return theme.colors.error;\n      case 'warning':\n        return theme.colors.warning || '#FFA726';\n      case 'info':\n        return theme.colors.info || '#29B6F6';\n      case 'success':\n      default:\n        return theme.colors.primary;\n    }\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'error':\n        return 'alert-circle';\n      case 'warning':\n        return 'alert';\n      case 'info':\n        return 'information';\n      case 'success':\n      default:\n        return 'check-circle';\n    }\n  };\n\n  const animateIn = () => {\n    Animated.parallel([\n      Animated.timing(animation, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start();\n  };\n\n  const animateOut = (callback) => {\n    Animated.parallel([\n      Animated.timing(animation, {\n        toValue: Dimensions.get('window').width,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(callback);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      // Clear any existing timer\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      \n      // Animate in\n      animateIn();\n      \n      // Set timer to automatically dismiss\n      timeoutRef.current = setTimeout(() => {\n        handleDismiss();\n      }, duration);\n    }\n\n    // Cleanup\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [visible, duration]);\n\n  const handleDismiss = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    \n    animateOut(() => {\n      if (onDismiss) {\n        onDismiss();\n      }\n    });\n  };\n\n  if (!visible) return null;\n\n  return (\n    <View style={styles.container} pointerEvents=\"box-none\">\n      <Animated.View\n        style={[\n          styles.toast,\n          {\n            backgroundColor: getBackgroundColor(),\n            transform: [{ translateX: animation }],\n            opacity: opacity\n          }\n        ]}\n      >\n        <View style={styles.content}>\n          <MaterialCommunityIcons name={getIcon()} size={24} color=\"white\" style={styles.icon} />\n          <Text style={styles.message} numberOfLines={3} ellipsizeMode=\"tail\">{message}</Text>\n        </View>\n        <TouchableOpacity onPress={handleDismiss} style={styles.closeButton} hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>\n          <MaterialCommunityIcons name=\"close\" size={18} color=\"white\" />\n        </TouchableOpacity>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    bottom: 20,\n    right: 0,\n    zIndex: 9999,\n    paddingHorizontal: 16,\n    width: '100%',\n    alignItems: 'flex-end',\n  },\n  toast: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 12, \n    borderRadius: 8,\n    minWidth: 200,\n    maxWidth: 300,\n    elevation: 6,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 8,\n  },\n  message: {\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: Platform.OS === 'web' ? undefined : theme.fonts?.regular?.fontFamily,\n    flex: 1,\n  },\n  closeButton: {\n    padding: 4,\n  }\n});\n\nexport default Toast; ","import React, { createContext, useState, useContext, useCallback } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Toast from './Toast';\n\n// Create context\nconst ToastContext = createContext();\n\n/**\n * Hook to use the toast functionality\n * @returns {Function} showToast - Function to show a toast\n */\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\n/**\n * Provider component that wraps your app and provides toast functionality\n */\nexport const ToastProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    visible: false,\n    message: '',\n    type: 'success',\n    duration: 3000,\n  });\n\n  // Function to show a toast notification\n  const showToast = useCallback(({ message, type = 'success', duration = 3000 }) => {\n    setToast({\n      visible: true,\n      message,\n      type,\n      duration,\n    });\n  }, []);\n\n  // Function to hide the toast\n  const hideToast = useCallback(() => {\n    setToast(prev => ({\n      ...prev,\n      visible: false,\n    }));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={showToast}>\n      <View style={styles.container}>\n        {children}\n        <Toast\n          visible={toast.visible}\n          message={toast.message}\n          type={toast.type}\n          duration={toast.duration}\n          onDismiss={hideToast}\n        />\n      </View>\n    </ToastContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  }\n});\n\nexport default ToastProvider; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Platform } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RoadmapSection = () => {\n  const [selectedMilestone, setSelectedMilestone] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { screenWidth } = useContext(AuthContext);\n  const isMobile = screenWidth < 768;\n\n  const roadmapData = [\n    {\n      id: 1,\n    //   number: '01',\n      title: 'Prototype Launch',\n      description: 'Initial release of CrittrCove webpage and landing page with no signup or app functionality.',\n      icon: 'dog',\n      color: theme.colors.mainColors.senary // Royal Blue\n    },\n    {\n      id: 2,\n    //   number: '02',\n      title: 'Launch of MVP',\n      description: 'This is when users will be able to sign up and use the app fully for the first time on the website! For a full feature list, please check our blog or discord.',\n      icon: 'dragon',\n      color: theme.colors.mainColors.quinary // Medium Purple\n    },\n    {\n      id: 3,\n    //   number: '03',\n      title: 'Launch of App',\n      description: 'Mobile app release with real-time messaging, notifications, and payment integration. For a full feature list, please check our blog or discord.',\n      icon: 'cat',\n      color: theme.colors.mainColors.quaternary // Royal Blue\n    },\n    {\n      id: 4,\n    //   number: '04',\n      title: 'Community Features',\n      description: 'Adding social features, pet communities, and expert advice forums.',\n      icon: 'fish',\n      color: theme.colors.mainColors.main // Medium Purple\n    }\n  ];\n\n  const handleMilestonePress = (milestone) => {\n    setSelectedMilestone(milestone);\n    setModalVisible(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Roadmap</Text>\n      \n      {isMobile ? (\n        // Mobile Layout\n        <View style={styles.mobileContainer}>\n          {roadmapData.map((milestone, index) => (\n            <View key={milestone.id} style={[\n              styles.mobileItemContainer,\n              index === roadmapData.length - 1 ? { marginBottom: 0 } : null\n            ]}>\n              <TouchableOpacity\n                style={styles.mobileMarker}\n                onPress={() => handleMilestonePress(milestone)}\n              >\n                <View style={[styles.markerContainer, { backgroundColor: milestone.color }]}>\n                  <FontAwesome5 name={milestone.icon} size={24} color=\"white\" />\n                </View>\n              </TouchableOpacity>\n              <Text style={styles.mobileMilestoneTitle}>{milestone.title}</Text>\n              {index < roadmapData.length - 1 && (\n                <View style={styles.mobileDashedLine} />\n              )}\n            </View>\n          ))}\n        </View>\n      ) : (\n        // Web Layout\n        <View style={styles.webContainer}>\n          <View style={[styles.dashedLine, {\n            width: '80%',\n            left: '10%'\n          }]} />\n          {roadmapData.map((milestone, index) => (\n            <TouchableOpacity\n              key={milestone.id}\n              style={[\n                styles.webMarker,\n                { \n                  left: `${10 + (index * (80 / (roadmapData.length - 1)))}%`,\n                }\n              ]}\n              onPress={() => handleMilestonePress(milestone)}\n            >\n              <View style={[styles.markerContainer, { backgroundColor: milestone.color }]}>\n                <FontAwesome5 name={milestone.icon} size={24} color=\"white\" />\n              </View>\n              <Text style={styles.webMilestoneTitle}>{milestone.title}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n\n      {/* Modal for milestone details */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            {selectedMilestone && (\n              <>\n                <View style={[styles.modalIconContainer, { backgroundColor: selectedMilestone.color }]}>\n                  <Text style={styles.modalNumber}>{selectedMilestone.number}</Text>\n                  <FontAwesome5 \n                    name={selectedMilestone.icon} \n                    size={40} \n                    color=\"white\"\n                  />\n                </View>\n                <Text style={styles.modalTitle}>{selectedMilestone.title}</Text>\n                <Text style={styles.modalDescription}>\n                  {selectedMilestone.description}\n                </Text>\n                <TouchableOpacity\n                  style={[styles.closeButton, { backgroundColor: selectedMilestone.color }]}\n                  onPress={() => setModalVisible(false)}\n                >\n                  <Text style={styles.closeButtonText}>Close</Text>\n                </TouchableOpacity>\n              </>\n            )}\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: 'black',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  mobileContainer: {\n    width: '100%',\n    alignItems: 'center',\n    paddingVertical: 20,\n  },\n  mobileItemContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 80,\n    position: 'relative',\n  },\n  mobileMarker: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  mobileMilestoneTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 15,\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  mobileDashedLine: {\n    position: 'absolute',\n    width: 2,\n    height: 60,\n    bottom: -50,\n    borderStyle: 'dashed',\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  webContainer: {\n    // height: 200,\n    position: 'relative',\n    marginTop: 20,\n    marginBottom: 120,\n    width: '100%',\n  },\n  dashedLine: {\n    position: 'absolute',\n    height: 2,\n    top: 30,\n    borderStyle: 'dashed',\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  webMarker: {\n    position: 'absolute',\n    alignItems: 'center',\n    width: 120,\n    transform: [{ translateX: -60 }], // Center the marker\n  },\n  webMilestoneTitle: {\n    marginTop: 10,\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n  },\n  markerContainer: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 15,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center',\n  },\n  modalIconContainer: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalNumber: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 10,\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: 'black',\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  modalDescription: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: 'black',\n    lineHeight: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  closeButton: {\n    padding: 12,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RoadmapSection; ","// First, declare the BOOKING_STATES constant\nexport const BOOKING_STATES = {\n  // # Initial States\n  DRAFT: 'Draft',\n  PENDING_INITIAL_PROFESSIONAL_CHANGES: 'Pending Initial Professional Changes',\n    \n  // # Review States\n  PENDING_PROFESSIONAL_CHANGES: 'Pending Professional Changes',\n  PENDING_CLIENT_APPROVAL: 'Pending Owner Approval',\n    \n  // # Active States\n  CONFIRMED: 'Confirmed',\n  CONFIRMED_PENDING_PROFESSIONAL_CHANGES: 'Confirmed Pending Professional Changes',\n  CONFIRMED_PENDING_CLIENT_APPROVAL: 'Confirmed Pending Owner Approval',\n    \n  // # Terminal States\n  COMPLETED: 'Completed',\n  DENIED: 'Denied',\n  CANCELLED: 'Cancelled',\n\n  // # States where professionals can edit\n  PROFESSIONAL_EDITABLE_STATES: [\n    'Draft',\n    'Pending Initial Professional Changes',\n    'Pending Professional Changes',\n    'Confirmed Pending Professional Changes',\n    'Confirmed'\n  ]\n};\n\nexport const ALL_SERVICES = \"All Services\";\nexport const SERVICE_TYPES = [\n  ALL_SERVICES,\n  \"Overnight Cat Sitting (Owner's Home)\",\n  \"Cat Boarding\",\n  \"Drop-In Visits (30 min)\",\n  \"Drop-In Visits (60 min)\",\n  \"Dog Walking\",\n  \"Doggy Day Care\",\n  \"Pet Boarding\",\n  \"Exotic Pet Care\",\n  \"Daytime Pet Sitting\",\n  \"Ferrier\",\n];\n\nexport const TIME_OPTIONS = [\n  '15 Min',\n  '30 Min',\n  '45 Min',\n  '1 Hour',\n  '2 Hour',\n  '3 Hour',\n  '4 Hour',\n  '5 Hour',\n  '6 Hour',\n  '7 Hour',\n  '8 Hour',\n  '24 Hour',\n  'Per Day',\n  'Per Visit',\n  'Week'\n];\n\n// Mapping of user-friendly time unit labels to backend constants\nexport const TIME_UNIT_MAPPING = {\n  // User-friendly labels mapped to backend constants\n  'Per Visit': 'Per Visit',\n  'Per Day (24 Hours)': 'Per Day',\n  'Per Night': 'Per Night',\n  'Every 15 Minutes': '15 Min',\n  'Every 30 Minutes': '30 Min',\n  'Every 45 Minutes': '45 Min',\n  'Per Hour': '1 Hour',\n  'Every 2 Hours': '2 Hour',\n  'Every 3 Hours': '3 Hour',\n  'Every 4 Hours': '4 Hour',\n  'Every 5 Hours': '5 Hour',\n  'Every 6 Hours': '6 Hour',\n  'Every 7 Hours': '7 Hour',\n  'Every 8 Hours': '8 Hour',\n  'Per Week': 'Week'\n};\n\n// Reverse mapping for display purposes\nexport const BACKEND_TO_FRONTEND_TIME_UNIT = Object.entries(TIME_UNIT_MAPPING).reduce((acc, [key, value]) => {\n  acc[value] = key;\n  return acc;\n}, {});\n\nexport const mockAdditionalRates = {\n  'Fish Tank Cleaning': [\n    { title: 'Extended Stay (7+ days)', amount: 15 },\n    { title: 'Pickup/Dropoff Service', amount: 25 },\n    { title: 'Special Diet Handling', amount: 10 },\n    { title: 'Medication Administration', amount: 15 },\n  ],\n  'Ferrier': [\n    { title: 'Extended Hours', amount: 20 },\n    { title: 'Training Session', amount: 30 },\n    { title: 'Grooming', amount: 25 },\n  ],\n  'Dog Walking': [\n    { title: 'Extra 15 Minutes', amount: 10 },\n    { title: 'Plant Watering', amount: 5 },\n    { title: 'Photo Updates', amount: 5 },\n  ],\n  'Reptile Boarding & Habitat Maintenance': [\n    { title: 'Plant Watering', amount: 10 },\n    { title: 'Mail Collection', amount: 5 },\n    { title: 'Extended Visit (4+ hrs)', amount: 30 },\n  ],\n  'Bird Feeding': [\n    { title: 'Extra 15 Minutes', amount: 10 },\n    { title: 'Multiple Route Options', amount: 5 },\n    { title: 'Training During Walk', amount: 20 },\n  ],\n};\n\nexport const mockServicesForCards = [\n  {\n    id: 1,\n    name: 'Fish Tank Cleaning',\n    startingPrice: 25,\n    animalTypes: ['Fish'],\n    icon: 'fish',\n    additionalRates: mockAdditionalRates['Fish Tank Cleaning']\n  },\n  {\n    id: 2,\n    name: 'Ferrier',\n    startingPrice: 30,\n    animalTypes: ['Dogs'],\n    icon: 'horse',\n    additionalRates: mockAdditionalRates['Ferrier']\n  },\n  {\n    id: 3,\n    name: 'Dog Walking',\n    startingPrice: 40,\n    animalTypes: ['Dogs'],\n    icon: 'dog',\n    additionalRates: mockAdditionalRates['Dog Walking']\n  },\n  {\n    id: 4,\n    name: 'Reptile Boarding & Habitat Maintenance',\n    startingPrice: 35,\n    animalTypes: ['Reptiles'],\n    icon: 'snake',\n    additionalRates: mockAdditionalRates['Reptile Boarding & Habitat Maintenance']\n  },\n  {\n    id: 5,\n    name: 'Bird Feeding',\n    startingPrice: 45,\n    animalTypes: ['Birds'],\n    icon: 'bird',\n    additionalRates: mockAdditionalRates['Bird Feeding']\n  }\n];\n\nexport const GENERAL_CATEGORIES = [\n  'Farm Animals', \n  'Domestic',\n  'Exotic',\n  'Aquatic',\n  'Invertibrates',\n];\n\nexport const mockPets = [\n  {\n    id: '1',\n    name: 'Max',\n    animal_type: 'Dog',\n    breed: 'border collie',\n    age: {\n      months: 0,\n      years: 5,\n    },\n    weight: 32,\n    sex: 'Male',\n    friendlyWithChildren: true,\n    friendlyWithCats: false,\n    friendlyWithDogs: true,\n    spayedNeutered: true,\n    houseTrained: true,\n    microchipped: true,\n    adoptionDate: '2020-01-15',\n    description: 'Loves to play fetch and go for walks.',\n    energyLevel: 'High',\n    feedingSchedule: 'Morning',\n    leftAlone: '1-4 hours',\n    medication: null,\n    additionalInstructions: 'Needs daily exercise.',\n    vetName: 'Dr. Smith',\n    vetAddress: '123 Vet St.',\n    vetPhone: '555-1234',\n    insuranceProvider: 'Pet Insurance Co.',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n  {\n    id: '2',\n    name: 'Whiskers',\n    animal_type: 'Cat',\n    breed: 'tammy ammy',\n    age: {\n      months: 3,\n      years: 4,\n    },\n    weight: 16,\n    sex: 'Female',\n    friendlyWithChildren: true,\n    friendlyWithCats: true,\n    friendlyWithDogs: false,\n    spayedNeutered: true,\n    houseTrained: true,\n    microchipped: false,\n    adoptionDate: '2019-05-20',\n    description: 'Enjoys lounging in the sun.',\n    energyLevel: 'Low',\n    feedingSchedule: 'Twice a day',\n    leftAlone: '4-8 hours',\n    medication: null,\n    additionalInstructions: 'Prefers quiet environments.',\n    vetName: 'Dr. Jones',\n    vetAddress: '456 Vet Ave.',\n    vetPhone: '555-5678',\n    insuranceProvider: 'Pet Health Insurance',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n  {\n    id: '3',\n    name: 'Buddy',\n    animal_type: 'snake',\n    breed: 'leopard gecko',\n    age: {\n      months: 0,\n      years: 2,\n    },\n    weight: 1,\n    sex: 'Male',\n    friendlyWithChildren: false,\n    friendlyWithCats: false,\n    friendlyWithDogs: false,\n    spayedNeutered: false,\n    houseTrained: false,\n    microchipped: false,\n    adoptionDate: '2021-08-10',\n    description: 'A calm and quiet pet.',\n    energyLevel: 'Low',\n    feedingSchedule: ['Custom', '3 times a day with liquid food.'],\n    leftAlone: 'Can be left alone indefinitely',\n    medication: null,\n    additionalInstructions: 'Keep in a warm environment.',\n    vetName: 'Dr. Green',\n    vetAddress: '789 Vet Blvd.',\n    vetPhone: '555-9012',\n    insuranceProvider: 'Reptile Insurance Co.',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n];\n\nexport const mockProfessionals = [\n  {\n    id: 1,\n    name: \"Mike V.\",\n    profilePicture: require('../../assets/user1.png'),\n    location: \"Briargate, Colorado Springs, CO, 80920\",\n    rating: 5.0,\n    reviewCount: 72,\n    price: 35,\n    distance: \"5.7 mi. away\",\n    coordinates: {\n      latitude: 38.8339,\n      longitude: -104.8214,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"5 years\",\n    description: \"Professional pet sitter with extensive experience in dog walking and pet sitting. Certified in pet first aid and CPR.\",\n    repeat_owners: 18,\n    verified: true,\n    bestReview: \"Benny's stay with Mike was outstanding! I would not hesitate to have Benny stay with them again. I would highly recommend Mike to anyone needing pet care services.\"\n  },\n  {\n    id: 2,\n    name: \"Sarah Johnson\",\n    profilePicture: require('../../assets/user2.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 127,\n    price: 45,\n    coordinates: {\n      latitude: 38.8340,\n      longitude: -104.8215,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"8 years\",\n    description: \"Experienced dog trainer and pet sitter. Specializes in working with large breeds and puppies.\",\n    verified: true,\n    bestReview: \"Sarah is amazing with pets! She took great care of my dog and sent regular updates.\"\n  },\n  {\n    id: 3,\n    name: \"Emily Rodriguez\",\n    profilePicture: require('../../assets/user3.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.7,\n    reviewCount: 156,\n    price: 40,\n    coordinates: {\n      latitude: 38.8341,\n      longitude: -104.8216,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\", \"Training\"],\n    experience: \"6 years\",\n    description: \"Professional pet sitter and groomer. Available for both short-term and long-term pet care needs.\",\n    verified: true\n  },\n  {\n    id: 4,\n    name: \"David Kim\",\n    profilePicture: require('../../assets/user4.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 98,\n    price: 55,\n    coordinates: {\n      latitude: 38.8342,\n      longitude: -104.8217,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\", \"Grooming\"],\n    experience: \"10 years\",\n    description: \"Certified dog trainer and experienced pet sitter. Specializes in working with rescue dogs and behavioral training.\",\n    verified: true\n  },\n  {\n    id: 5,\n    name: \"Lisa Thompson\",\n    profilePicture: require('../../assets/user5.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 143,\n    price: 45,\n    coordinates: {\n      latitude: 38.8343,\n      longitude: -104.8218,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"7 years\",\n    description: \"Professional pet sitter with a passion for animal care. Available for both regular and occasional pet sitting needs.\",\n    verified: true\n  },\n  {\n    id: 6,\n    name: \"John Martinez\",\n    profilePicture: require('../../assets/user6.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.6,\n    reviewCount: 89,\n    price: 42,\n    coordinates: {\n      latitude: 38.8344,\n      longitude: -104.8219,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\"],\n    experience: \"4 years\",\n    description: \"Dedicated pet care professional specializing in dog walking and pet sitting services.\",\n    verified: true\n  },\n  {\n    id: 7,\n    name: \"Rachel White\",\n    profilePicture: require('../../assets/user7.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 167,\n    price: 48,\n    coordinates: {\n      latitude: 38.8345,\n      longitude: -104.8220,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"9 years\",\n    description: \"Experienced pet trainer and caregiver with a focus on positive reinforcement techniques.\",\n    verified: true\n  },\n  {\n    id: 8,\n    name: \"Michael Chen\",\n    profilePicture: require('../../assets/user8.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.7,\n    reviewCount: 112,\n    price: 38,\n    coordinates: {\n      latitude: 38.8346,\n      longitude: -104.8221,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"5 years\",\n    description: \"Professional pet groomer and sitter with expertise in handling various breeds.\",\n    verified: true\n  },\n  {\n    id: 9,\n    name: \"Amanda Foster\",\n    profilePicture: require('../../assets/user9.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 134,\n    price: 44,\n    coordinates: {\n      latitude: 38.8347,\n      longitude: -104.8222,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"7 years\",\n    description: \"Certified pet trainer with extensive experience in behavioral modification.\",\n    verified: true\n  },\n  {\n    id: 10,\n    name: \"Robert Taylor\",\n    profilePicture: require('../../assets/user10.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 178,\n    price: 50,\n    coordinates: {\n      latitude: 38.8348,\n      longitude: -104.8223,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\", \"Grooming\"],\n    experience: \"11 years\",\n    description: \"Comprehensive pet care professional offering a full range of services.\",\n    verified: true\n  }\n];\n\nexport const mockOwners = [\n  {\n    id: '1',\n    name: 'Alice Johnson',\n    pet_types: ['Dog', 'Cat'],\n    last_booking: '2024-01-15',\n    pets: ['1', '2'], // References to pet IDs\n    email: 'alice@example.com',\n    phone: '555-0101',\n    address: '123 Pine St, Colorado Springs, CO',\n  },\n  {\n    id: '2',\n    name: 'Bob Wilson',\n    pet_types: ['Dog'],\n    last_booking: '2024-02-01',\n    pets: ['3'],\n    email: 'bob@example.com',\n    phone: '555-0102',\n    address: '456 Oak Ave, Colorado Springs, CO',\n  },\n  {\n    id: '3',\n    name: 'Carol Martinez',\n    pet_types: ['Cat', 'Exotic'],\n    last_booking: '2024-01-28',\n    pets: ['4', '5'],\n    email: 'carol@example.com',\n    phone: '555-0103',\n    address: '789 Maple Dr, Colorado Springs, CO',\n  },\n  {\n    id: '4',\n    name: 'David Brown',\n    pet_types: ['Dog'],\n    last_booking: '2024-02-05',\n    pets: ['6'],\n    email: 'david@example.com',\n    phone: '555-0104',\n    address: '321 Elm St, Colorado Springs, CO',\n  },\n  {\n    id: '5',\n    name: 'Eva Garcia',\n    pet_types: ['Exotic'],\n    last_booking: '2024-01-20',\n    pets: ['7'],\n    email: 'eva@example.com',\n    phone: '555-0105',\n    address: '654 Birch Ln, Colorado Springs, CO',\n  }\n];\n\n// Availability Tab\nexport const fetchAvailabilityData = () => {\n  return new Promise((resolve) => {\n    // to get the bookings, we need to fetch the booking table on backend\n    // to get available/unavailable dates we need to fetch the availability table on backend\n    setTimeout(() => {\n      resolve({\n        availableDates: {\n          '2025-02-01': { startTime: '09:00', endTime: '17:00' },\n          '2025-02-02': { startTime: '10:00', endTime: '18:00' },\n          '2025-02-03': { startTime: '09:00', endTime: '17:00' },\n        },\n        unavailableDates: {\n          '2025-02-04': { startTime: '00:00', endTime: '24:00' },\n          '2025-02-05': { startTime: '10:00', endTime: '18:00' },\n        },\n        bookings: {\n          '2025-02-06': [\n            { id: 'bk1', startTime: '14:00', endTime: '16:00', owner_name: 'Charlie', service_type: 'Dog Walking' },\n            { id: 'bk2', startTime: '16:00', endTime: '18:00', owner_name: 'Bob', service_type: 'Dog Walking' },\n            { id: 'bk3', startTime: '18:00', endTime: '20:00', owner_name: 'Nick', service_type: 'Pet Boarding' },\n            { id: 'bk4', startTime: '20:00', endTime: '22:00', owner_name: 'Alfred', service_type: 'Drop-In Visits (30 min)' }\n          ],\n          '2025-02-07': [\n            { id: 'bk5', startTime: '10:00', endTime: '12:00', owner_name: 'Uhtred', service_type: 'Dog Walking' }\n          ],\n        },\n      });\n    }, 1000);\n  });\n};\n\n// Add mock update functions\nexport const updateAvailability = (updates) => {\n  console.log(\"updateAvailability\", updates);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true, data: updates });\n    }, 500);\n  });\n};\n\nexport const updateBooking = (bookingData) => {\n  console.log(\"updateBooking\", bookingData);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true, data: bookingData });\n    }, 500);\n  });\n};\n\nconst sharedBookingDetails = {\n  booking_id: 'bk1',\n  status: 'Confirmed',\n  owner_name: 'matt aertker',\n  professional_name: 'matt2 aertker2',\n  service_details: {\n    service_type: 'Ferrier'\n  },\n  pets: [\n    {\n      pet_id: 3,\n      name: 'Jack',\n      species: 'DOG',\n      breed: 'Golden'\n    }\n  ],\n  occurrences: [\n    {\n      occurrence_id: 10,\n      start_date: '2025-02-01',\n      end_date: '2025-02-02',\n      start_time: '15:06',\n      end_time: '16:06',\n      calculated_cost: '61.04',\n      base_total: '$26.04',\n      rates: {\n        base_rate: '25.00',\n        additional_animal_rate: '5.00',\n        additional_animal_rate_applies: false,\n        applies_after: 2,\n        unit_of_time: 'PER_DAY',\n        holiday_rate: '35.00',\n        holiday_days: 0,\n        additional_rates: [\n          {\n            title: 'Extra Travel Time Rate',\n            description: 'Far Drive rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Poops Inside Rate',\n            description: 'Dog Poops Inside rate for service',\n            amount: '$5.00'\n          },\n          {\n            title: 'Dog Separation rate',\n            description: 'When we need to separate the dog from other animals in the house',\n            amount: '$5.00'\n          }\n        ]\n      }\n    },\n    {\n      occurrence_id: 9,\n      start_date: '2025-03-13',\n      end_date: '2025-03-14',\n      start_time: '09:00',\n      end_time: '14:00',\n      calculated_cost: '120.08',\n      base_total: '$35.04',\n      rates: {\n        base_rate: '29.00',\n        additional_animal_rate: '8.00',\n        additional_animal_rate_applies: false,\n        applies_after: 1,\n        unit_of_time: 'PER_DAY',\n        holiday_rate: '40.00',\n        holiday_days: 0,\n        additional_rates: [\n          {\n            title: 'Extra Travel Time Rate',\n            description: 'Far Drive rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Poops Inside Rate',\n            description: 'Dog Poops Inside rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Separation rate',\n            description: 'When we need to separate the dog from other animals in the house',\n            amount: '$35.04'\n          }\n        ]\n      }\n    }\n  ],\n  cost_summary: {\n    subtotal: 181.12,\n    platform_fee: 18.11,\n    taxes: 15.94,\n    total_owner_cost: 215.17,\n    total_sitter_payout: 163.01,\n    is_prorated: true\n  }\n};\n\n// Initialize mockBookingDetails with existing mock data\nconst mockBookingDetails = {\n  '1234': {\n    ...sharedBookingDetails,\n    id: '1234',\n    ownerName: 'John Doe',\n    status: BOOKING_STATES.CONFIRMED,\n    startDate: '2024-02-20',\n    startTime: '14:00',\n  },\n  '5678': {\n    ...sharedBookingDetails,\n    id: '5678',\n    ownerName: 'Margarett Laporte',\n    status: BOOKING_STATES.CANCELLED,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '56782': {\n    ...sharedBookingDetails,\n    id: '56782',\n    ownerName: 'Zoe Aerial',\n    status: BOOKING_STATES.DENIED,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5673': {\n    ...sharedBookingDetails,\n    id: '5673',\n    ownerName: 'Matt Clark',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5674': {\n    ...sharedBookingDetails,\n    id: '5674',\n    ownerName: 'Mark Smith',\n    status: BOOKING_STATES.PENDING_CLIENT_APPROVAL,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5675': {\n    ...sharedBookingDetails,\n    id: '5675',\n    ownerName: 'Lauren Smith',\n    status: BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5675': {\n    ...sharedBookingDetails,\n    id: '56712',\n    ownerName: 'Matt Smith',\n    status: BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '56713': {\n    ...sharedBookingDetails,\n    id: '567123',\n    ownerName: 'Albert Einstein',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '3749': {...sharedBookingDetails,\n    id: '567132',\n    ownerName: 'Dr. Mike Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '91011': {\n    ...sharedBookingDetails,\n    id: '91011',\n    ownerName: 'Dr. Bla Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '91012': {\n    ...sharedBookingDetails,\n    id: '91012',\n    ownerName: 'Dr. Blabla Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  }\n};\n\n// Map mockProfessionalBookings from mockBookingDetails\nexport const mockProfessionalBookings = Object.values(mockBookingDetails)\n  .map(booking => ({\n    id: booking.id,\n    ownerName: booking.ownerName,\n    status: booking.status,\n    date: booking.startDate,\n    time: booking.startTime,\n    serviceType: booking.serviceType,\n    numberOfPets: booking.numberOfPets || 1,\n    totalCost: booking.costs?.totalOwnerCost || 0,\n    professionalPayout: booking.costs?.professionalPayout || 0\n  }));\n\n// Add the createBooking function\nexport const createBooking = async (ownerId, freelancerId, initialData = {}) => {\n  const newBookingId = `booking_${Date.now()}`;\n  \n  const newBooking = {\n    id: newBookingId,\n    ownerId: ownerId,\n    freelancerId: freelancerId,\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    ownerName: initialData.ownerName || 'TBD',\n    professionalName: initialData.professionalName || 'TBD',\n    serviceType: initialData.serviceType || 'TBD',\n    animalType: initialData.animalType || 'TBD',\n    numberOfPets: initialData.numberOfPets || 0,\n    duration: initialData.duration || 0,\n    occurrences: initialData.occurrences || [],\n    rates: {\n      baseRate: 0,\n      additionalPetRate: 0,\n      extraServices: []\n    },\n    costs: {\n      baseTotal: 0,\n      additionalPetTotal: 0,\n      extraServicesTotal: 0,\n      subtotal: 0,\n      ownerFee: 0,\n      taxes: 0,\n      totalOwnerCost: 0,\n      professionalPayout: 0\n    },\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    ...initialData\n  };\n\n  // Add to mock database\n  mockBookingDetails[newBookingId] = newBooking;\n  \n  console.log('Created new booking:', {\n    bookingId: newBookingId,\n    booking: newBooking,\n    allBookings: Object.keys(mockBookingDetails)\n  });\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return newBookingId;\n};\n\n// Update fetchBookingDetails with better logging\nexport const fetchBookingDetails = async (bookingId) => {\n  // console.log('Fetching booking details');\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  const bookingDetails = mockBookingDetails[bookingId];\n  if (!bookingDetails) {\n    console.error('Booking not found:', {\n      requestedId: bookingId,\n      availableBookings: Object.keys(mockBookingDetails)\n    });\n    throw new Error('Booking not found');\n  }\n  \n  return bookingDetails;\n};\n\n// Export mockBookingDetails for debugging\nexport const _mockBookingDetails = mockBookingDetails;\n\n// Add new mock function for updating booking status\nexport const updateBookingStatus = async (bookingId, newStatus, reason = '', metadata = {}) => {\n  console.log('updateBookingStatus called with:', {\n    bookingId,\n    newStatus,\n    reason,\n    metadata,\n    availableBookings: Object.keys(mockBookingDetails)\n  });\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  // Find the booking by ID regardless of the key\n  const bookingKey = Object.keys(mockBookingDetails).find(key => \n    mockBookingDetails[key].id === bookingId\n  );\n  \n  if (!bookingKey) {\n    console.error('Booking not found in mockBookingDetails. Available bookings:', \n      Object.keys(mockBookingDetails),\n      '\\nFull mockBookingDetails:', mockBookingDetails\n    );\n    throw new Error('Booking not found');\n  }\n  \n  // Create updated booking object\n  mockBookingDetails[bookingKey] = {\n    ...mockBookingDetails[bookingKey],\n    status: newStatus,\n    statusReason: reason,\n    updated_at: new Date().toISOString(),\n    ...metadata\n  };\n\n  console.log('Updated booking:', mockBookingDetails[bookingKey]);\n  return mockBookingDetails[bookingKey];\n};\n\n// Make sure to update MyBookings.js to use the same BOOKING_STATES constant\nexport const mockOwnerBookings = [\n  {\n    id: '91011',\n    professionalName: 'Sarah Wilson',\n    status: BOOKING_STATES.CONFIRMED,\n    date: '2024-02-22',\n    time: '10:00',\n    serviceType: 'Dog Walking',\n    numberOfPets: 2,\n    totalCost: 75.00,\n  },\n  {\n    id: '91012',\n    professionalName: 'Mike Johnson',\n    status: BOOKING_STATES.PENDING_CLIENT_APPROVAL,\n    date: '2024-02-23',\n    time: '11:00',\n    serviceType: 'Pet Sitting',\n    numberOfPets: 1,\n    totalCost: 50.00,\n  },\n];\n\n// Assuming current user ID is 101 for testing\nexport const CURRENT_USER_ID = 101;\n\nexport const mockConversations = [\n  {\n    id: 'conv_1',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 202,\n    name: \"Dr. Sarah Smith\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"I'd be happy to help! What kind of pet do you have?\",\n    timestamp: \"2024-02-21T07:05:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_2',\n    participant1_id: 303,\n    participant2_id: CURRENT_USER_ID,\n    name: \"Dr. Mike Johnson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"I'm available! Let's set up a booking\",\n    timestamp: \"2024-02-21T15:35:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_3',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 204,\n    name: \"Dr. Emily Wilson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Your cat's checkup is scheduled\",\n    timestamp: \"2024-02-20T10:15:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_4',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 205,\n    name: \"Dr. James Anderson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"See you tomorrow at 2 PM\",\n    timestamp: \"2024-02-19T16:45:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_5',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 206,\n    name: \"Dr. Lisa Brown\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"How is Max doing today?\",\n    timestamp: \"2024-02-18T09:30:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_6',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 207,\n    name: \"Dr. Robert Taylor\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"The medication has been prescribed\",\n    timestamp: \"2024-02-17T14:20:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_7',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 208,\n    name: \"Dr. Maria Garcia\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Your appointment is confirmed\",\n    timestamp: \"2024-02-16T11:25:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_8',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 209,\n    name: \"Dr. David Lee\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Let's schedule a follow-up\",\n    timestamp: \"2024-02-15T13:40:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_9',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 210,\n    name: \"Dr. Sarah Martinez\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"The test results are ready\",\n    timestamp: \"2024-02-14T15:55:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_10',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 211,\n    name: \"Dr. John White\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"How's the new diet working?\",\n    timestamp: \"2024-02-13T08:15:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_11',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 212,\n    name: \"Dr. Anna Clark\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Vaccination reminder\",\n    timestamp: \"2024-02-12T10:30:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_12',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 213,\n    name: \"Dr. Thomas Wright\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Surgery scheduled for next week\",\n    timestamp: \"2024-02-11T12:45:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_13',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 214,\n    name: \"Dr. Patricia Moore\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Emergency consultation available\",\n    timestamp: \"2024-02-10T17:20:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_14',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 215,\n    name: \"Dr. Kevin Hall\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Treatment plan updated\",\n    timestamp: \"2024-02-09T14:10:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_15',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 216,\n    name: \"Dr. Rachel Green\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Prescription ready for pickup\",\n    timestamp: \"2024-02-08T16:35:00Z\",\n    unread: true\n  }\n];\n\nexport const mockMessages = {\n  'conv_1': [\n    {\n      message_id: 1,\n      participant1_id: CURRENT_USER_ID,\n      participant2_id: 202,\n      sender: CURRENT_USER_ID,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"Hi, I'm interested in your pet sitting services\",\n      timestamp: \"2024-02-21T14:00:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n    {\n      message_id: 2,\n      participant1_id: CURRENT_USER_ID,\n      participant2_id: 202,\n      sender: 202,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"I'd be happy to help! What kind of pet do you have?\",\n      timestamp: \"2024-02-21T14:05:00Z\",\n      booking_id: null,\n      status: \"sent\",\n      is_booking_request: false,\n      metadata: {}\n    }\n  ],\n  'conv_2': [\n    {\n      message_id: 3,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: 303,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"Looking for a dog walker next week\",\n      timestamp: \"2024-02-21T15:30:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n    {\n      message_id: 4,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: 303,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      type: 'booking_request',\n      data: {\n        serviceType: \"Dog Walking\",\n        pets: [\n          { id: '1', name: 'Max', type: 'Dog', breed: 'Golden Retriever' }\n        ],\n        occurrences: [\n          {\n            startDate: '2024-02-28',\n            endDate: '2024-02-28',\n            startTime: '14:00',\n            endTime: '15:00'\n          }\n        ]\n      },\n      timestamp: \"2024-02-21T15:35:00Z\",\n      status: \"sent\",\n      is_booking_request: true,\n      metadata: {}\n    },\n    {\n      message_id: 5,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: CURRENT_USER_ID,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"I'll take a look!\",\n      timestamp: \"2024-02-21T15:30:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n  ]\n};\n\n// Helper function to create a new conversation\nexport const createNewConversation = (professionalId, professionalName, ownerId, ownerName) => {\n  const conversationId = `conv_${Date.now()}`;\n  const isCurrentUserOwner = ownerId === CURRENT_USER_ID;\n  \n  return {\n    id: conversationId,\n    participant1_id: isCurrentUserOwner ? ownerId : professionalId,\n    participant2_id: isCurrentUserOwner ? professionalId : ownerId,\n    role_map: {\n      participant1_role: isCurrentUserOwner ? \"owner\" : \"professional\",\n      participant2_role: isCurrentUserOwner ? \"professional\" : \"owner\"\n    },\n    lastMessage: \"\",\n    timestamp: new Date().toISOString(),\n    unread: false,\n    bookingStatus: null\n  };\n};\n\nexport const DEFAULT_SERVICES = [\n  {\n    serviceName: 'Dog Walking',\n    animalTypes: 'Dogs',\n    rates: { base_rate: '20' },\n    additionalAnimalRate: '10',\n  },\n  {\n    serviceName: 'Cat Sitting',\n    animalTypes: 'Cats',\n    rates: { base_rate: '20' },\n    additionalAnimalRate: '5',\n  },\n  {\n    serviceName: 'Exotic Pet Care',\n    animalTypes: 'Lizards, Birds',\n    rates: { base_rate: '25' },\n    additionalAnimalRate: '15',\n  },\n];\n\nexport const SERVICE_TYPE_SUGGESTIONS = [\n  \"Overnight Cat Sitting (Owner's Home)\",\n  \"Cat Boarding\",\n  \"Drop-In Visits (30 min)\",\n  \"Drop-In Visits (60 min)\",\n  \"Dog Walking\",\n  \"Doggy Day Care\",\n  \"Pet Boarding\",\n  \"Exotic Pet Care\",\n  \"Daytime Pet Sitting\",\n  \"Ferrier\", \n];\n\nexport const ANIMAL_TYPE_SUGGESTIONS = [\n  'Dog',\n  'Cat',\n  'Cow',\n  'Calf',\n  'Lizard',\n  'Bird',\n  'Rabbit',\n  'Fish',\n];\n\nexport const BLOG_POSTS = [\n  {\n    id: 'blog_1',\n    title: 'What Your Dog is Really Saying',\n    author: {\n      id: 'author_1',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Professional dog trainer and animal behavior specialist with over 10 years of experience.'\n    },\n    publishDate: '2024-02-22',\n    readTime: '8 min',\n    tags: ['Dogs', 'Behavior', 'Training', 'Pet Care'],\n    content: `You know that moment when your dog tilts their head at you like you just asked them to solve a calculus problem? Turns out, they're not the only ones trying to understand you—they've been communicating with you this whole time, and you probably didn't even realize it.\n\nDogs may not speak English (yet—give them time), but they have an entire language built on tail wags, ear positions, and those big, soulful eyes they use to manipulate you into giving them extra treats. Learning to read their body language isn't just a party trick—it can help prevent stress, deepen your bond, and maybe even stop your dog from embarrassing you at the dog park. So, let's finally crack the code on what your dog has been trying to tell you.\n\nTail Wagging: Not Always a Sign of Happiness\nOne of the biggest myths out there is that a wagging tail means a happy dog. Nope. Not always. A dog's tail is basically their mood ring, and the way they wag tells a whole different story.\nLoose, full-body wag (with bonus butt wiggles): This is the classic \"OMG YOU'RE HOME!!\" happy dance. A+ vibes.\nSlow wag, tail held high: The \"I'm analyzing this situation\" wag. Suspicious, calculating, possibly deciding if you're worth their energy.\nStiff, fast wag with a raised tail: Yikes. This is \"I'm on edge, don't mess with me\" energy. Proceed with caution.\nLow, fast wag: \"I'm nervous, and I don't know what's happening, so I'm just gonna keep wiggling and hope for the best.\"\nTucked tail: Fear. If the tail is all the way tucked under, your dog is basically saying, \"I regret everything, please don't yell at me.\"\nEven the direction of the wag matters—researchers found that dogs wag more to the right when they're happy and to the left when they're unsure or stressed (Quaranta et al., 2007). Yes, your dog's tail literally has anxiety tells.\n\nEars and Eyes: The Silent Storytellers\nDogs don't just talk with their tails—they also use their ears and eyes like tiny, furry actors in a silent film.\nSoft eyes, relaxed ears: Your dog is living their best life. No stress, just vibes.\nWide eyes, whites showing (a.k.a. \"whale eye\"): \"I am uncomfortable with the energy we have created in this room.\" This is a warning sign—your dog feels uneasy or trapped.\nPerked-up ears: \"I heard something, and I will investigate.\" Could be excitement, curiosity, or them preparing to bark at absolutely nothing.\nEars pinned back: \"I'm nervous\" or \"I did something bad, and I hope you don't notice.\" Classic guilty dog move.\nEver notice how some dogs do a little squint when they're happy? It's their version of a smile. On the flip side, prolonged direct eye contact—especially with an unfamiliar dog—can be a challenge. So, if you're having a staring contest with a dog you just met…maybe don't.\n\nThe Freeze: When Your Dog Hits Pause (And You Should Pay Attention)\nIf a dog suddenly stops moving and stiffens, pay attention. Freezing is often their last warning before things escalate to growling, snapping, or biting. A lot of people miss this and then wonder why their dog \"suddenly\" lashed out.\nYou might see this when:\nA child is hugging a dog (which, fun fact, most dogs hate).\nSomeone is petting a dog too aggressively.\nThe dog feels cornered and has no escape route.\nResearch by Rooney Clark and Casey (2016) helped show that when a dog freezes, in some way or another they are stressed, its best to give them space in that moment and take a mental note of your newest training goal! Sometimes, they just need a minute to de-escalate, like when you have to breathe through a customer service call that's not going well.\n\nMouth Matters: Smiles vs. Stress\nDogs can technically smile, but it's not always what you think.\nLoose, open mouth, tongue hanging out: Happy, relaxed, living their best life.\nClosed mouth, tight lips: Alert or unsure. They're analyzing the situation.\nLips pulled back, slight teeth showing: Some dogs do a \"submissive grin,\" which isn't aggression—it's their way of saying, \"Hey, I'm friendly!\"\nWrinkled nose, full teeth bared: This is aggression. Back off.\nExcessive yawning in a new situation: Dogs don't just yawn when they're tired—they also yawn when they're stressed. To put it simply, they are overstimulated. (Glenk, 2020) Don't be fooled by the parrot dog, sometimes they yawn because they saw you yawn first! (D'Aniello, 2019)\n\nConclusion: Your Dog Has Been Sending You Texts—Now You Can Finally Read Them\nDogs may not be able to talk (yet), but they've been communicating loud and clear this whole time. That tail wag? Could be excitement, could be stress. That little squint? Doggy love. The full-body freeze? That's a big ol' \"DO NOT DISTURB\" sign.\nThe more you pay attention, the better you'll understand your dog—and the fewer awkward misunderstandings you'll have (like mistaking a stress yawn for a nap cue). As we said in the beginning, your dog already knows exactly how to read you. They know your routine, when you're about to leave the house, and how to guilt-trip you into sharing your snacks. The least you can do is return the favor.\nSo next time your dog gives you the side-eye, perks their ears, or flops over dramatically after a single walk, you'll finally know what they're saying. And let's be honest—it's probably, \"I love you… now give me a treat.\"`,\n    references: [\n      {\n        title: '7 tips for canine body language',\n        authors: 'American Society for the Prevention of Cruelty to Animals (ASPCA)',\n        publication: 'ASPCApro',\n        url: 'https://www.aspcapro.org/resource/7-tips-canine-body-language'\n      },\n      {\n        title: \"Therapy dogs' salivary cortisol levels vary during animal-assisted interventions\",\n        authors: 'Glenk, L. M., Kothgassner, O. D., Stetina, B. U., Palme, R., & Kepplinger, B.',\n        publication: 'Frontiers in Veterinary Science',\n        year: 2020,\n        doi: '10.3389/fvets.2020.564201'\n      },\n      {\n        title: 'The importance of associative learning in cross-species social bonding: Dogs and humans',\n        authors: \"D'Aniello, B., Scandurra, A., Alterisio, A., Aria, M., & Siniscalchi, M.\",\n        publication: 'Frontiers in Psychology',\n        year: 2019,\n        doi: '10.3389/fpsyg.2019.01678'\n      },\n      {\n        title: 'Oxytocin-gaze positive loop and the coevolution of human-dog bonds',\n        authors: 'Nagasawa, M., Mitsui, S., En, S., Ohtani, N., Ohta, M., Sakuma, Y., Onaka, T., Mogi, K., & Kikusui, T.',\n        publication: 'Science',\n        year: 2015,\n        doi: '10.1126/science.1261022'\n      },\n      {\n        title: 'Asymmetric tail-wagging responses by dogs to different emotive stimuli',\n        authors: 'Quaranta, A., Siniscalchi, M., & Vallortigara, G.',\n        publication: 'Current Biology',\n        year: 2007,\n        doi: '10.1016/j.cub.2007.02.008'\n      },\n      {\n        title: 'Minimizing fear and anxiety in working dogs: A review',\n        authors: 'Rooney, N. J., Clark, C. C. A., & Casey, R. A.',\n        publication: 'Journal of Veterinary Behavior',\n        year: 2016,\n        doi: '10.1016/j.jveb.2016.11.001'\n      }\n    ],\n    likes: 245,\n    comments: 56,\n    shares: 89\n  },\n  {\n    id: 'blog_2',\n    title: 'What Your Cat is Really Saying',\n    author: {\n      id: 'author_2',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Feline behavior specialist and veterinarian with a focus on cat-human relationships.'\n    },\n    publishDate: '2024-02-23',\n    readTime: '7 min',\n    tags: ['Cats', 'Behavior', 'Pet Care', 'Communication'],\n    content: `Ever wonder why your cat stares at you before slowly blinking or why they randomly sprint across the house at 2 AM? While cats may seem mysterious, they actually have a complex system of communication—if you know what to look for. Unlike dogs, who wear their emotions on their tails (literally), cats are more subtle. But once you learn their signals, you'll start to see what your cat has been trying to tell you all along.\n\nThe Myth of the Aloof Cat: Do They Actually Care About You?\nMany people think cats are independent and don't bond with their owners the way dogs do. But research suggests otherwise. A study by Vitale et al. (2019) found that cats form secure attachments to their owners, much like infants do with their caregivers. In an experiment where cats were briefly separated from their owners, many showed signs of distress when left alone and relief upon their owner's return. So yes, your cat does care about you—they just have their own way of showing it.\n\nThe Slow Blink: A Feline \"I Love You\"\nOne of the best-kept secrets of cat communication is the slow blink. If your cat locks eyes with you and then slowly closes and opens their eyes, congratulations! You've just received a cat's version of a smile. Research completed in 2020 (Humphrey) found that when humans slowly blink at their cats, the cats are more likely to return the gesture and approach them in a friendly manner. So, next time you want to say \"I love you\" to your cat, skip the baby talk and try a slow blink instead.\n\nTail Talk: Not Just for Dogs\nA cat's tail is like a built-in mood ring. Learning to read tail signals can help you avoid scratches and strengthen your bond.\nTail up, tip curved: A friendly, confident cat greeting. If your cat walks toward you with their tail high, they're happy to see you.\nPuffed-up tail: This is a defensive reaction. Your cat is startled or feels threatened.\nLow, slow-wagging tail: Unlike dogs, a slow-wagging cat tail isn't a good sign—it often signals irritation or mild aggression.\nTail wrapped around you or another cat: This is a sign of affection, almost like holding hands.\n\nPurring: More Than Just Happiness\nEveryone loves the soothing sound of a purring cat, but did you know cats don't just purr when they're happy? While contentment is a common reason, studies suggest cats also purr when they're stressed, in pain, or even trying to heal themselves. The frequency of cat purrs (between 25 and 150 Hz) has been linked to tissue regeneration and bone healing in studies on vibrational therapy (Muggenthaler, 2001). So, if your cat is purring at the vet's office, they may not be enjoying themselves—they might just be self-soothing.\n\nHeadbutting and Kneading: Strange but Sweet Gestures\nHeadbutting (bunting): When your cat gently bumps their head against you, they're not just being cute—they're marking you with their scent glands, claiming you as their own (Rodan, 2015).\nKneading: The rhythmic pressing of paws against a soft surface (or your lap) is a behavior kittens use to stimulate milk flow. In adult cats, it's a sign of comfort and contentment (Brown & Bradshaw, 2016).\n\nDo Cats Really Ignore Their Names?\nIf you've ever called your cat and been met with a flick of the ear but no movement, you might think they don't recognize their name. But research says otherwise. A study by Saito & Shinozuka (2013) found that cats can distinguish their names from other words, even in a household with multiple cats. They just don't always feel the need to respond. Unlike dogs, who evolved to seek human approval, cats evolved as solitary hunters. They hear you—they're just deciding whether you're worth getting up for.\n\nThe Zoomies: Science Behind the 2 AM Sprints\nThose sudden, chaotic bursts of energy—also known as \"zoomies\"—are actually a by normal part of feline behavior. Cats are natural hunters, and their instincts tell them to be most active at dawn and dusk. If your cat has zoomies at odd hours, they might just be burning off excess energy. Providing interactive play during the day can help prevent nighttime sprints (Turner, 2021).\n\nConclusion: The More You Watch, the More You Understand\nCats may seem mysterious, but once you learn their language, they're basically tiny, furry drama queens with very specific ways of expressing love (and judgment). That slow blink? A kiss. That tail flick? A warning. The 2 AM zoomies? Either pent-up energy or an exorcism—we may never know.\n\nThe more you pay attention to their signals, the better you'll understand them. And honestly your cat already understands you. They know exactly how to guilt-trip you into giving extra treats, how to wake you up precisely one minute before your alarm, and how to act like they don't care—right before curling up in your lap.\n\nAt the end of the day, cats aren't ignoring us. They're just selectively participating. And now that you can read their signals, you're officially part of their very exclusive club.`,\n    references: [\n      {\n        title: 'Communication in the domestic cat: within- and between-species',\n        authors: 'Brown, S. L., & Bradshaw, J. W. S.',\n        publication: 'Animal Behaviour',\n        year: 2016,\n        doi: '10.1016/j.anbehav.2016.05.015'\n      },\n      {\n        title: 'Feline Behavioral Health and Welfare',\n        authors: 'Rodan, I., & Heath, S.',\n        publication: 'Elsevier Health Sciences',\n        year: 2015\n      },\n      {\n        title: 'The felid purr: A healing mechanism?',\n        authors: 'Muggenthaler, E. von.',\n        publication: 'Proceedings of the 12th International Conference on Low Frequency Noise and Vibration',\n        year: 2001,\n        url: 'https://www.researchgate.net/publication/272259095_The_felid_purr_A_healing_mechanism'\n      },\n      {\n        title: 'Vocal recognition of owners by domestic cats (Felis catus)',\n        authors: 'Saito, A., & Shinozuka, K.',\n        publication: 'Animal Cognition',\n        year: 2013,\n        doi: '10.1007/s10071-013-0620-4'\n      },\n      {\n        title: 'The mechanics of social interactions between cats and their owners',\n        authors: 'Turner, D. C.',\n        publication: 'Frontiers in Veterinary Science',\n        year: 2021,\n        doi: '10.3389/fvets.2021.650143'\n      },\n      {\n        title: 'Attachment bonds between domestic cats and humans',\n        authors: 'Vitale, K. R., Behnke, A. C., & Udell, M. A. R.',\n        publication: 'Current Biology',\n        year: 2019,\n        doi: '10.1016/j.cub.2019.08.036'\n      },\n      {\n        title: 'The role of cat eye narrowing movements in cat–human communication',\n        authors: 'Humphrey, T., Proops, L., & McComb, K.',\n        publication: 'Scientific Reports',\n        year: 2020,\n        doi: '10.1038/s41598-020-73426-0'\n      }\n    ],\n    likes: 312,\n    comments: 78,\n    shares: 102\n  },\n  {\n    id: 'blog_3',\n    title: 'What Your Bird is Really Saying',\n    author: {\n      id: 'author_3',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Avian specialist and researcher focusing on bird behavior and communication.'\n    },\n    publishDate: '2024-02-24',\n    readTime: '6 min',\n    tags: ['Birds', 'Behavior', 'Pet Care', 'Avian Communication'],\n    content: `Ever look at your bird and think, What's going on in that tiny dinosaur brain of yours? Well, good news—birds may not text, but they do have an entire language made up of wing flutters, tail flicks, and the occasional judgmental stare. And if you learn to read these signals, you'll finally understand what your feathered friend has been trying to tell you all along.\n\nLet's break down the mysterious world of bird body language so you can stop guessing and start actually communicating with your avian BFF.\n\nThe Head Tilt: Curious or Plotting Something?\nThat adorable head tilt your bird does isn't just to make you go aww—it's actually their way of getting a better look at something. Birds process images differently than we do, so when they tilt their head, they're adjusting their angle to see more clearly (Massen et al., 2014).\n\nSlow, curious head tilt: They're interested in what's happening and trying to analyze the situation. Basically, they're bird detectives.\nFrequent or extreme tilting: Could indicate a vision issue or neurological problem—if it looks excessive, a vet visit is a good idea (Massen et al., 2014).\nOne-eye stare, body stiffened: A sign they're feeling cautious or potentially threatened. If they were a human, this would be the equivalent of side-eye.\n\nFeather Fluffing: Cozy or Cranky?\nFeather movements say a lot about how a bird is feeling. Think of them as mood indicators, kind of like how we use facial expressions—except, you know, with more feathers.\n\nFluffed-up feathers for a few seconds: Just getting comfortable. If your bird puffs up and then smooths back down, they're basically stretching.\nConstantly fluffed-up feathers: Not good. This can be a sign of illness, stress, or even feeling cold (Massen et al., 2014).\nFeathers sleeked back tight to the body: Your bird is nervous or possibly feeling aggressive. Approach with caution (Pika & Bugnyar, 2011).\n\nThe Wing Flutter: Excitement or Back Off?\nBirds use their wings for way more than just flying—they also use them to communicate. Unfortunately, no sign language because birds dont have thumbs\n\nExcited, quick flutters: Happiness! Your bird is basically doing a little happy dance (Osaka University, 2023).\nSlow, controlled wing movements: This can be a \"stay away\" signal, kind of like putting up a hand to say \"not now.\"\nOne wing slightly drooped: Could be a sign of injury—time to check in with your vet.\n\nBunting: Love, Not a Headbutt Attack\nIf your bird presses or rubs their beak against you, congratulations—they're bunting, which is a sign of affection (Pika & Bugnyar, 2011).\n\nGentle beak rubbing: They're marking you as part of their flock. You're officially theirs now.\nAggressive, sudden beak nudging: Might mean \"Hey, stop that\" or \"Give me attention NOW.\"\n\nThe Stare-Down: Challenge or Trust?\nUnlike with dogs, where prolonged eye contact can be a dominance move, birds love staring at their favorite humans. It's actually a good thing—eye contact helps strengthen bonds (Osaka University, 2023).\n\nSoft, relaxed eyes: A sign of trust and comfort. They're chilling.\nWide eyes with pinning pupils: Intense excitement—or potential aggression. If they suddenly go from relaxed to laser-focused, read the room.\n\nTail Wagging: A Whole Different Story Than Dogs\nIf you thought tail wagging only meant happiness (like with dogs), think again—birds have their own unique tail signals.\n\nFast, side-to-side tail wagging: Happy and excited! Your bird is feeling good.\nSlow, deliberate tail flick: Annoyed or getting ready to give you a warning. Think of this as their way of saying \"I'm this close to losing it.\"\nTail fanned out: Displaying dominance or excitement—this is common in birds like parrots when they're trying to show off.\n\nThe Playful Side: Hanging Upside Down & Wing Spreading\nSome birds (especially parrots) love hanging upside down like little acrobats. This is usually a sign of happiness and playfulness. If your bird does this often, they're feeling safe and confident.\n\nUpside-down hanging: Your bird is comfortable with you and their surroundings. They trust you.\nOne wing slightly lifted while playing: This can be an invitation to interact—kind of like a bird's version of waving at you.\n\nConclusion: Your Bird Has Been Speaking—Now You're Fluent\nBirds may not use words the way we do (unless you have a talkative parrot), but their body language speaks volumes. From fluffed feathers to head tilts and beak bunts, every little movement is a clue to how they're feeling.\n\nThe more you watch and learn, the better you'll understand their unique way of communicating. And let's be real—your bird already knows exactly how to get your attention. Whether it's staring at you until you feel guilty enough to offer a treat or flapping their wings dramatically for no reason, they've got you trained.\n\nNow that you can finally read their signals, you're one step closer to becoming the ultimate bird whisperer. Just don't be surprised if they start giving you even more attitude now that you know what's up.`,\n    references: [\n      {\n        title: 'Facial display and blushing: Means of visual communication in blue-and-yellow macaws',\n        authors: 'Massen, J. J. M., Vermunt, D. A., & Sterck, E. H. M.',\n        publication: 'PLoS ONE',\n        year: 2014,\n        doi: '10.1371/journal.pone.0108794'\n      },\n      {\n        title: 'The use of referential gestures in ravens (Corvus corax) in the wild',\n        authors: 'Pika, S., & Bugnyar, T.',\n        publication: 'Nature Communications',\n        year: 2011,\n        doi: '10.1038/ncomms1567'\n      },\n      {\n        title: 'Wild birds gesture \"after you\" to insist their mate go first',\n        authors: 'Osaka University',\n        publication: 'Scientific American',\n        year: 2023,\n        url: 'https://www.scientificamerican.com/article/wild-birds-gesture-after-you-to-insist-their-mate-go-first/'\n      }\n    ],\n    likes: 198,\n    comments: 45,\n    shares: 67\n  }\n];","import React, { useState, useEffect, useContext } from 'react';\nimport { View, ScrollView, Image, StyleSheet, Linking, Dimensions, Platform, TouchableOpacity, TextInput } from 'react-native';\nimport { Button, Text, Card, Title, Paragraph, useTheme } from 'react-native-paper';\nimport { ImageBackground } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { SCREEN_WIDTH } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from '../components/Navigation';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport RoadmapSection from '../components/RoadmapSection';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { FontAwesome6 } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { AuthContext } from '../context/AuthContext';\n\nconst { width: windowWidth, height: windowHeight } = Dimensions.get('window');\n\n// Define a sample reviews array\nconst reviews = [\n  {\n    image: require('../../assets/user1.png'),\n    text: \"\\\"CrittrCove has been amazing for finding reliable pet professionals!\",\n    author: \"John Smith\"\n  },\n  {\n    image: require('../../assets/user2.png'),\n    text: \"\\\"Great experience with pet sitting services!\",\n    author: \"Jane Doe\"\n  },\n  {\n    image: require('../../assets/user3.png'),\n    text: \"\\\"Found the perfect sitter for my exotic pets!\",\n    author: \"Sudhakar Vuluvala\"\n  },\n  {\n    image: require('../../assets/user4.png'),\n    text: \"\\\"I've had a fantastic experience with CrittrCove's pet grooming services!\",\n    author: \"Alice Brown\"\n  }\n];\n\n// Define the ReviewImage component\nconst ReviewImage = ({ source, style }) => {\n  if (Platform.OS === 'web') {\n    return <img src={source} style={style} alt=\"\" />;\n  }\n  return <Image source={source} style={style} />;\n};\n\nexport default function HomeScreen({ navigation }) {\n  const { colors } = useTheme();\n  const { screenWidth } = useContext(AuthContext);\n  const isMobileView = screenWidth < 660;\n  const openAppStore = (url) => {\n    Linking.openURL(url);\n  };\n\n  // Add state for social media popup visibility\n  const [isUserScrolling, setIsUserScrolling] = useState(false);\n\n  const AutoScrollSection = ({ data, renderItem, title, cardWidth = 320 }) => {\n    const scrollViewRef = React.useRef(null);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [userScrolling, setUserScrolling] = useState(false);\n    const autoScrollTimerRef = React.useRef(null);\n\n    // Auto-scroll effect\n    useEffect(() => {\n      if (!userScrolling) {\n        autoScrollTimerRef.current = setInterval(() => {\n          if (scrollViewRef.current) {\n            const nextIndex = (currentIndex + 1) % data.length;\n            scrollToIndex(nextIndex);\n          }\n        }, 3000);\n      }\n\n      return () => {\n        if (autoScrollTimerRef.current) {\n          clearInterval(autoScrollTimerRef.current);\n        }\n      };\n    }, [currentIndex, userScrolling, data.length]);\n\n    const scrollToIndex = (index) => {\n      if (scrollViewRef.current) {\n        scrollViewRef.current.scrollTo({\n          x: index * cardWidth,\n          animated: true\n        });\n        setCurrentIndex(index);\n      }\n    };\n\n    const handleScroll = (event) => {\n      const contentOffset = event.nativeEvent.contentOffset.x;\n      const index = Math.round(contentOffset / cardWidth);\n      setCurrentIndex(index);\n    };\n\n    const handleScrollBegin = () => {\n      setUserScrolling(true);\n      if (autoScrollTimerRef.current) {\n        clearInterval(autoScrollTimerRef.current);\n      }\n    };\n\n    const handleScrollEnd = () => {\n      // Reset after a short delay to prevent immediate auto-scroll\n      setTimeout(() => {\n        setUserScrolling(false);\n      }, 1000);\n    };\n\n    const handleDotPress = (index) => {\n      setUserScrolling(true);\n      scrollToIndex(index);\n      // Reset auto-scroll after a delay\n      setTimeout(() => {\n        setUserScrolling(false);\n      }, 1000);\n    };\n\n    return (\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>{title}</Text>\n        <View style={styles.scrollContainer}>\n          <ScrollView\n            ref={scrollViewRef}\n            horizontal\n            showsHorizontalScrollIndicator={true}\n            style={[styles.scrollContainer, { WebkitOverflowScrolling: 'touch' }]}\n            contentContainerStyle={styles.scrollContent}\n            onScroll={handleScroll}\n            scrollEventThrottle={16}\n            pagingEnabled={Platform.OS !== 'web'}\n            onScrollBeginDrag={handleScrollBegin}\n            onScrollEndDrag={handleScrollEnd}\n            onMomentumScrollEnd={handleScrollEnd}\n          >\n            {data.map((item, index) => renderItem(item, index))}\n          </ScrollView>\n          {/* Clickable scroll indicators */}\n          <View style={styles.scrollIndicators}>\n            {data.map((_, index) => (\n              <TouchableOpacity\n                key={index}\n                onPress={() => handleDotPress(index)}\n                style={styles.scrollIndicatorButton}\n              >\n                <View\n                  style={[\n                    styles.scrollIndicator,\n                    currentIndex === index && styles.scrollIndicatorActive\n                  ]}\n                />\n              </TouchableOpacity>\n            ))}\n          </View>\n          {/* Scroll hint for mobile */}\n          {Platform.OS !== 'web' && (\n            <View style={styles.scrollHint}>\n              <Text style={styles.scrollHintText}>Swipe for more</Text>\n              <MaterialCommunityIcons name=\"gesture-swipe-horizontal\" size={24} color={theme.colors.primary} />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const ReviewsSection = () => {\n    const renderReview = (review, index) => (\n      <View key={index} style={styles.reviewCard}>\n        <Text style={styles.reviewText}>{review.text}</Text>\n        <View style={styles.reviewAuthorContainer}>\n          <ReviewImage\n            source={review.image}\n            style={styles.reviewerImage}\n          />\n          <View>\n            <Text style={styles.reviewAuthorName}>{review.author}</Text>\n            <Text style={styles.reviewAuthorTitle}>Owner Review</Text>\n            <View style={styles.starsContainer}>\n              {[1, 2, 3, 4, 5].map((_, index) => (\n                <MaterialCommunityIcons \n                  key={index}\n                  name=\"star\"\n                  size={16}\n                  color={theme.colors.primary}\n                  style={styles.starIcon}\n                />\n              ))}\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n\n    return (\n      <AutoScrollSection\n        data={reviews}\n        renderItem={renderReview}\n        title=\"Kind Words From Users\"\n      />\n    );\n  };\n\n  const BlogSection = () => {\n    const renderBlogPost = (post, index) => (\n      <TouchableOpacity \n        key={post.id} \n        style={[\n          styles.blogCard,\n          { marginRight: index === BLOG_POSTS.length - 1 ? 0 : 10 }\n        ]} \n        onPress={() => navigateToFrom(navigation, 'BlogPost', 'Home', { post })}\n      >\n        <View style={styles.authorContainer}>\n          <Image\n            source={{ uri: post.author.profilePicture }}\n            style={styles.authorImage}\n          />\n          <View style={styles.blogContent}>\n            <Text style={[styles.title, { color: theme.colors.primary }]} numberOfLines={2}>\n              {post.title}\n            </Text>\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.dot}> • </Text>\n              <Text style={styles.readTime}>{post.readTime}</Text>\n            </View>\n            <Text style={styles.preview} numberOfLines={3}>\n              {post.content.slice(0, 100)}...\n            </Text>\n            <View style={styles.tags}>\n              {post.tags.slice(0, 2).map((tag, tagIndex) => (\n                <View \n                  key={tagIndex} \n                  style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n                >\n                  <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.stats}>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"heart-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.likes}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"comment-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.comments}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"share-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.shares}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n\n    return (\n      <AutoScrollSection\n        data={BLOG_POSTS}\n        renderItem={renderBlogPost}\n        title=\"Blog\"\n        cardWidth={320}\n      />\n    );\n  };\n\n  const Features = () => {\n    const [activeTab, setActiveTab] = useState('owners'); // Default to owners tab\n\n    // Add roadmap colors array\n    const roadmapColors = ['#515d6c', '#516a6c', '#516C61', '#6A6C51'];\n\n    // Update the feature item structure and styles\n    const featureItemStyle = {\n      flexDirection: 'row',\n      marginBottom: 20,\n      alignItems: 'flex-start',\n      width: '100%',\n    };\n\n    const featureContentStyle = {\n      flex: 1,\n      marginLeft: 5,\n    };\n\n    return (\n      <View style={styles.featuresSection}>\n        <Text style={styles.sectionTitle}>How It Works</Text>\n        <View style={styles.toggleContainer}>\n          <TouchableOpacity \n            style={[styles.toggleButton, activeTab === 'owners' && styles.toggleButtonActive]}\n            onPress={() => setActiveTab('owners')}\n          >\n            <Text style={[styles.toggleButtonText, activeTab === 'owners' && styles.toggleButtonTextActive]}>For Pet Owners</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.toggleButton, activeTab === 'sitters' && styles.toggleButtonActive]}\n            onPress={() => setActiveTab('sitters')}\n          >\n            <Text style={[styles.toggleButtonText, activeTab === 'sitters' && styles.toggleButtonTextActive]}>For Pet Professionals</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.featuresContainer}>\n          {activeTab === 'owners' && (\n            <View style={styles.featureColumn}>\n              <Text style={styles.columnTitle}>For Pet Owners</Text>\n              <View style={styles.featuresList}>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[0] }]}>\n                    <FontAwesome6 name=\"person-running\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Complete Your Profile</Text>\n                    <Text style={styles.featureText}>Submit details about you and your requirements.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[1] }]}>\n                    <MaterialCommunityIcons name=\"horse-human\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Complete Pet Profile</Text>\n                    <Text style={styles.featureText}>Submit details about your pet and sitting requirements.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[2] }]}>\n                    <MaterialCommunityIcons name=\"professional-hexagon\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Search for Pro's</Text>\n                    <Text style={styles.featureText}>You can use our marketplace to find the best pro for your desired service.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[3] }]}>\n                    <FontAwesome5 name=\"calendar-check\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Confirm Your Booking</Text>\n                    <Text style={styles.featureText}>Coordinate directly with your professional to finalize details.</Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.actionButton} onPress={() => navigateToFrom(navigation, 'Waitlist', 'Home')}>\n                  <Text style={styles.buttonText}>Sign up Today!</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n          {activeTab === 'sitters' && (\n            <View style={styles.featureColumn}>\n              <Text style={styles.columnTitle}>For Pet Professionals</Text>\n              <View style={styles.featuresList}>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[0] }]}>\n                    <FontAwesome name=\"sign-in\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Apply to Join Pro Community</Text>\n                    <Text style={styles.featureText}>Submit your specialties, documents, bio, and availability to begin.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[1] }]}>\n                    <MaterialCommunityIcons name=\"plus-circle\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Create Services</Text>\n                    <Text style={styles.featureText}>Create services to offer to pet owners.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[2] }]}>\n                    <FontAwesome6 name=\"handshake-simple\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Get Matched with Owners</Text>\n                    <Text style={styles.featureText}>Pet owners in your area will reach out to you for yourservices.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[3] }]}>\n                    <MaterialIcons name=\"auto-graph\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Grow Your Business</Text>\n                    <Text style={styles.featureText}>Manage bookings and get support as you build your pet service business.</Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.actionButton} onPress={() => navigateToFrom(navigation, 'Waitlist', 'Home')}>\n                  <Text style={styles.buttonText}>Become a Professional</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const ContactSection = () => {\n    const [state, handleSubmit] = useForm(\"mkgobpro\");\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleFormSubmit = async (e) => {\n      e.preventDefault();\n      const formData = {\n        name: name,\n        email: email,\n        message: message\n      };\n      \n      await handleSubmit(formData);\n      \n      if (state.succeeded) {\n        setName('');\n        setEmail('');\n        setMessage('');\n      }\n    };\n\n    if (state.succeeded) {\n      return (\n        <View style={styles.contactSection}>\n          <View style={styles.contactContainer}>\n            <Text style={[styles.sectionTitle, { color: theme.colors.primary }]}>\n              Thanks for reaching out!\n            </Text>\n            <Text style={styles.successMessage}>\n              We'll get back to you soon.\n            </Text>\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.contactSection}>\n        <View style={styles.contactContainer}>\n          <Text style={styles.sectionTitle}>Contact Us</Text>\n          <TextInput\n            placeholder=\"Your Name\"\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            name=\"name\"\n          />\n          <ValidationError prefix=\"Name\" field=\"name\" errors={state.errors} />\n          \n          <TextInput\n            placeholder=\"Your Email\"\n            style={styles.input}\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            name=\"email\"\n            autoCapitalize=\"none\"\n          />\n          <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n          \n          <TextInput\n            placeholder=\"Your Message\"\n            style={[styles.input, styles.messageInput]}\n            value={message}\n            onChangeText={setMessage}\n            multiline\n            name=\"message\"\n          />\n          <ValidationError prefix=\"Message\" field=\"message\" errors={state.errors} />\n          \n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[\n                styles.actionButton,\n                state.submitting && styles.disabledButton\n              ]}\n              onPress={handleFormSubmit}\n              disabled={state.submitting}\n            >\n              <Text style={styles.buttonText}>\n                {state.submitting ? 'Sending...' : 'Send'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const ServiceCard = ({ icon, title, description, color }) => {\n    const cardStyles = {\n      container: {\n        width: isMobileView ? '90%' : '45%',\n        minWidth: isMobileView ? 'auto' : 300,\n        maxWidth: 500,\n        padding: 20,\n        backgroundColor: '#fff',\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n        elevation: 3,\n        marginBottom: 20,\n        alignSelf: 'center',\n      },\n      header: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: 15,\n      },\n      iconContainer: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        backgroundColor: `${theme.colors.primary}15`,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 15,\n      },\n      title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: theme.colors.text,\n        fontFamily: theme.fonts.header.fontFamily,\n        textAlign: 'center',\n        marginBottom: 10,\n      },\n      description: {\n        fontSize: 16,\n        lineHeight: 24,\n        color: theme.colors.text,\n        fontFamily: theme.fonts.regular.fontFamily,\n        textAlign: 'center',\n      },\n    };\n\n    return (\n      <View style={cardStyles.container}>\n        <View style={cardStyles.header}>\n          <View style={cardStyles.iconContainer}>\n            <MaterialCommunityIcons name={icon} size={32} color={color} />\n          </View>\n          <Text style={cardStyles.title}>{title}</Text>\n        </View>\n        <Text style={cardStyles.description}>{description}</Text>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.heroSection}>\n        <Image\n          source={require('../../assets/hero-image.jpg')}\n          style={styles.heroImage}\n          resizeMode=\"cover\"\n        />\n        <Text style={styles.heroText}>Welcome to CrittrCove</Text>\n      </View>\n\n      {/* Service Highlights Section */}\n      <View style={styles.serviceHighlightsSection}>\n        <Text style={styles.mainServiceTitle}>Marketplace for Pet Owners and Care Professionals</Text>\n        \n        <View style={[styles.servicesGrid, { \n          flexDirection: isMobileView ? 'column' : 'row',\n          alignItems: isMobileView ? 'center' : 'flex-start',\n        }]}>\n          <ServiceCard\n            icon=\"paw\"\n            title=\"All Animals Welcome\"\n            description=\"From common pets to exotic animals, we connect you with professionals experienced in caring for any type of animal companion.\"\n            color={theme.colors.mainColors.senary}\n          />\n          <ServiceCard\n            icon=\"calendar-clock\"\n            title=\"Flexible Booking Options\"\n            description=\"Book single visits, multiple days, or set up recurring services. Create subscription plans or schedule services months in advance.\"\n            color={theme.colors.mainColors.quinary}\n          />\n          <ServiceCard\n            icon=\"shield-check\"\n            title=\"Verified Professionals\"\n            description=\"All professionals are thoroughly vetted and must maintain active insurance coverage to provide services through our platform.\"\n            color={theme.colors.mainColors.main}\n          />\n          <ServiceCard\n            icon=\"tune-variant\"\n            title=\"Customizable Services\"\n            description=\"Professionals can create custom service packages and pricing plans tailored to your specific needs and preferences.\"\n            color={theme.colors.mainColors.quaternary}\n          />\n        </View>\n      </View>\n\n      <Features />\n      <ReviewsSection />\n      <BlogSection />\n\n      {/* Roadmap Section */}\n      <RoadmapSection />\n\n      {/* FAQ Section */}\n      {/* <View style={styles.section}>\n        <Text style={styles.sectionTitle}>FAQs</Text>\n         {faqs.map((faq, index) => (\n          <View key={index} style={styles.faqItem}>\n            <TouchableOpacity \n              style={styles.faqButton}\n              onPress={() => setSelectedFaq(selectedFaq === index ? null : index)}\n            >\n              <Text style={styles.faqQuestion}>{faq.question}</Text>\n              <Text style={styles.faqToggle}>{selectedFaq === index ? '-' : '+'}</Text>\n            </TouchableOpacity>\n            {selectedFaq === index && (\n              <Text style={styles.faqAnswer}>{faq.answer}</Text>\n            )}\n          </View>\n        ))} \n      </View> */}\n\n      {/* Waitlist Section */}\n      <View style={[styles.section, styles.waitlistSection]}>\n        <Text style={styles.sectionTitle}>Join Our Waitlist</Text>\n        <Text style={styles.waitlistDescription}>\n          Get exclusive bonus offers, promotions, and discounts when the app and website launches by signing up on our waitlist today!\n        </Text>\n        <TouchableOpacity \n          style={[styles.actionButton, styles.waitlistButton]} \n          onPress={() => navigateToFrom(navigation, 'Waitlist', 'Home')}\n        >\n          <Text style={styles.buttonText}>Join Waitlist</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Contact Us Section */}\n      <ContactSection />\n\n      {/* Footer */}\n      <View style={styles.footer}>\n        <View style={styles.socialIconsRow}>\n          <TouchableOpacity \n            style={styles.socialIcon} \n            onPress={() => Linking.openURL('https://www.instagram.com/thezensitter')}\n          >\n            <FontAwesome name=\"instagram\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.socialIcon} \n            onPress={() => Linking.openURL('https://discord.com/your-profile')}\n          >\n            <FontAwesome5 name=\"discord\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.footerLinksRow}>\n          <Text style={styles.footerLink} onPress={() => navigateToFrom(navigation, 'PrivacyPolicy', 'Home')}>Privacy Policy</Text>\n          <Text style={styles.footerLink} onPress={() => navigateToFrom(navigation, 'TermsOfService', 'Home')}>Terms of Service</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n  },\n  contentContainer: {\n    paddingBottom: 80, // Add padding to the bottom of the content\n  },\n  heroSection: {\n    height: Platform.OS === 'web' ? '70vh' : windowHeight * 0.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  heroImage: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  heroText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n    color: 'white',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 10\n  },\n  section: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    alignItems: 'center',\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 10,\n    textAlign: 'center',\n    color: 'black',\n  },\n  card: {\n    marginBottom: 10,\n  },\n  appButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  appButton: {\n    width: '45%',\n  },\n  reviewsSection: {\n    // height: 350,\n    marginBottom: 20,\n  },\n  reviewsBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewsOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  reviewsSubtitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10,\n    textAlign: 'center',\n    width: '100%',\n  },\n  reviewsTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontFamily: theme.fonts.header.fontFamily,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 20,\n    textAlign: 'center',\n    width: '100%',\n  },\n  reviewsContainer: {\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    overflowX: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    msOverflowStyle: 'auto',\n    scrollbarWidth: 'auto',\n    scrollbarColor: `${theme.colors.primary} transparent`,\n  },\n  reviewsContent: {\n    flexDirection: 'row',\n    minWidth: 'min-content',\n    gap: 10,\n    padding: 20,\n    paddingBottom: 40, // Add space for indicators\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewCard: {\n    width: 300,\n    height: 200,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    marginRight: 10,\n  },\n  reviewCardMobile: {\n    width: '100%',\n    height: '100%',\n  },\n  reviewQuote: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10,\n  },\n  reviewText: {\n    fontSize: 18,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 15,\n    flex: 1,\n  },\n  reviewAuthorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  reviewerImage: {\n    width: 45,\n    height: 60,\n    borderRadius: 8,\n    marginRight: 10,\n    objectFit: 'cover',\n  },\n  reviewAuthorName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewAuthorTitle: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 2,\n  },\n  paginationDots: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  paginationDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    margin: 5,\n  },\n  paginationDotActive: {\n    backgroundColor: 'black',\n  },\n  featuresSection: {\n    marginBottom: 80,\n    marginTop: 20,\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n  toggleButton: {\n    padding: 10,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  toggleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  toggleButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  toggleButtonTextActive: {\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  featuresContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  featureColumn: {\n    width: SCREEN_WIDTH < 768 ? '90%' : '100%',\n    maxWidth: 600,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  columnTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: 'black',\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  featuresList: {\n    width: '100%',\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 20,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    alignItems: 'flex-start',\n    width: '100%',\n  },\n  featureIconCircle: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n  },\n  featureIcon: {\n    fontSize: 40,\n  },\n  featureTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    color: 'black',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  featureText: {\n    fontSize: theme.fontSizes.mediumLarge + 2,\n    color: 'black',\n    lineHeight: 22,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButton: {\n    backgroundColor: '#6A6C51',\n    width: '50%',\n    padding: 5,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  blogSection: {\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  blogCard: {\n    width: 300,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    padding: 15,\n    marginRight: 10,\n  },\n  authorContainer: {\n    flexDirection: 'column',\n  },\n  authorImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginBottom: 10,\n  },\n  blogContent: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  authorName: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    color: '#666',\n  },\n  readTime: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  preview: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginBottom: 12,\n    color: '#444',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 12,\n  },\n  tag: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 8,\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  statText: {\n    marginLeft: 4,\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  roadmapSection: {\n    marginBottom: 20,\n  },\n  roadmapImage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  roadmapOverlayText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  faqSection: {\n    marginBottom: 20,\n  },\n  faqItem: {\n    marginBottom: 10,\n  },\n  faqButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  faqQuestion: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  faqToggle: {\n    fontSize: 14,\n    color: 'gray',\n  },\n  faqAnswer: {\n    fontSize: 16,\n  },\n  contactSection: {\n    // maxWidth: 800,\n    width: '100%',\n    // display: 'flex',\n    // flexDirection: 'column',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: 20,\n  },\n  contactContainer: {\n    width: '100%',\n    maxWidth: 600,\n  },\n  input: {\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n  },\n  footer: {\n    padding: 20,\n    backgroundColor: theme.colors.primary,\n    alignItems: 'center',\n  },\n  socialIconsRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  socialIcon: {\n    marginHorizontal: 15,\n    padding: 5,\n  },\n  footerLinksRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  footerLink: {\n    color: 'white',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginHorizontal: 15,\n    textDecorationLine: 'underline',\n  },\n  successMessage: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 10,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  messageInput: {\n    height: 100,\n    textAlignVertical: 'top',\n    paddingTop: 10,\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  validationError: {\n    color: 'red',\n    fontSize: 16,\n    marginTop: -5,\n    marginBottom: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  starsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  starIcon: {\n    marginRight: 2,\n  },\n  waitlistSection: {\n    // backgroundColor: '#f5f5f5',\n    marginVertical: 20,\n    borderRadius: 10,\n  },\n  waitlistDescription: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n    paddingHorizontal: 20,\n    lineHeight: 24,\n  },\n  waitlistButton: {\n    marginTop: 10,\n    width: '80%',\n    maxWidth: 300,\n    padding: 15,\n  },\n  scrollIndicators: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  scrollIndicatorButton: {\n    padding: 10, // Increase touch target\n    marginHorizontal: -6, // Compensate for padding while maintaining visual spacing\n  },\n  scrollIndicator: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: theme.colors.border,\n    marginHorizontal: 4,\n  },\n  scrollIndicatorActive: {\n    backgroundColor: theme.colors.primary,\n    width: 24,\n  },\n  scrollHint: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 10,\n  },\n  scrollHintText: {\n    color: theme.colors.primary,\n    marginRight: 5,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  scrollContainer: {\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    overflowX: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    msOverflowStyle: 'auto',\n    scrollbarWidth: 'auto',\n    scrollbarColor: `${theme.colors.primary} transparent`,\n  },\n  scrollContent: {\n    flexDirection: 'row',\n    minWidth: 'min-content',\n    gap: 10,\n    padding: 20,\n    paddingBottom: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  serviceHighlightsSection: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    alignItems: 'center',\n  },\n  mainServiceTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  servicesGrid: {\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: 20,\n    width: '100%',\n  },\n});\n","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { View, StyleSheet, ScrollView, Image, TouchableOpacity, Platform, useWindowDimensions, SafeAreaView, StatusBar, Alert } from 'react-native';\nimport { Text, TextInput, Button, Portal, Dialog, Paragraph } from 'react-native-paper';\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext } from '../context/AuthContext';\n\nconst fetchOwnerProfileData = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        name: 'Alice Johnson',\n        email: 'alice@example.com',\n        phone: '(555) 123-4567',\n        age: '32',\n        address: '123 Main St',\n        city: 'San Francisco',\n        state: 'CA',\n        zip: '94122',\n        country: 'USA',\n        bio: \"I'm a proud pet parent of two dogs and a cat. I love animals and am always looking for the best care for my furry friends!\",\n        pets: [\n          { id: '1', name: 'Max', type: 'Dog', breed: 'Golden Retriever', age: 5, photo: 'https://example.com/max.jpg' },\n          { id: '2', name: 'Luna', type: 'Cat', breed: 'Siamese', age: 3, photo: 'https://example.com/luna.jpg' },\n          { id: '3', name: 'Rocky', type: 'Dog', breed: 'Beagle', age: 2, photo: 'https://example.com/rocky.jpg' },\n        ],\n        emergencyContact: {\n          name: 'John Smith',\n          phone: '(555) 987-6543',\n        },\n        authorizedHouseholdMembers: ['Sarah Johnson', 'Mike Johnson'],\n      });\n    }, 1000);\n  });\n};\n\nconst OwnerProfile = () => {\n  const navigation = useNavigation();\n  const { width: windowWidth } = useWindowDimensions();\n  const [profilePhoto, setProfilePhoto] = useState(null);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [age, setAge] = useState('');\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [state, setState] = useState('');\n  const [zip, setZip] = useState('');\n  const [country, setCountry] = useState('');\n  const [bio, setBio] = useState('');\n  const [pets, setPets] = useState([]);\n  const [emergencyContact, setEmergencyContact] = useState({ name: '', phone: '' });\n  const [authorizedHouseholdMembers, setAuthorizedHouseholdMembers] = useState(['']);\n  const [isLoading, setIsLoading] = useState(true);\n  const [editMode, setEditMode] = useState({});\n  const [showAuthorizedMembersInfo, setShowAuthorizedMembersInfo] = useState(false);\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\n  const questionMarkRef = useRef(null);\n  const scrollViewRef = useRef(null);\n  const { isApprovedProfessional, switchRole } = useContext(AuthContext);\n  const [localIsApprovedProfessional, setLocalIsApprovedProfessional] = useState(false);\n\n  useEffect(() => {\n    fetchOwnerProfileData().then((data) => {\n      setName(data.name);\n      setEmail(data.email);\n      setPhone(data.phone);\n      setAge(data.age);\n      setAddress(data.address);\n      setCity(data.city);\n      setState(data.state);\n      setZip(data.zip);\n      setCountry(data.country);\n      setBio(data.bio);\n      setPets(data.pets);\n      setEmergencyContact(data.emergencyContact);\n      setAuthorizedHouseholdMembers(data.authorizedHouseholdMembers);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    const fetchProfessionalStatus = async () => {\n      const storedIsApprovedProfessional = await AsyncStorage.getItem('isApprovedProfessional');\n      setLocalIsApprovedProfessional(JSON.parse(storedIsApprovedProfessional));\n    };\n    fetchProfessionalStatus();\n  }, []);\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfilePhoto(result.assets[0].uri);\n    }\n  };\n\n  const saveProfile = async () => {\n    const profileData = {\n      profilePhoto,\n      name,\n      email,\n      phone,\n      age,\n      address,\n      city,\n      state,\n      zip,\n      country,\n      bio,\n      pets,\n      emergencyContact,\n      authorizedHouseholdMembers,\n    };\n\n    setIsLoading(true);\n\n    // Simulate API call to save profile data\n    setTimeout(() => {\n      console.log(\"Profile data saved:\", profileData);\n      setIsLoading(false);\n      Alert.alert(\"Success\", \"Profile saved successfully!\");\n    }, 1000);\n  };\n\n  const toggleEditMode = (section) => {\n    setEditMode(prevState => ({...prevState, [section]: !prevState[section]}));\n  };\n\n  const renderEditableField = (label, value, onChangeText, section) => {\n    return editMode[section] ? (\n      <TextInput\n        label={label}\n        value={value}\n        onChangeText={onChangeText}\n        style={styles.input}\n      />\n    ) : (\n      <Text style={styles.fieldText}>{label}: {value}</Text>\n    );\n  };\n\n  const addHouseholdMember = () => {\n    if (editMode.household) {\n      setAuthorizedHouseholdMembers([...authorizedHouseholdMembers, '']);\n    }\n  };\n\n  const updateHouseholdMember = (index, value) => {\n    if (editMode.household) {\n      const updatedMembers = [...authorizedHouseholdMembers];\n      updatedMembers[index] = value;\n      setAuthorizedHouseholdMembers(updatedMembers);\n    }\n  };\n\n  const showAuthorizedMembersPopup = () => {\n    if (Platform.OS === 'web') {\n      if (questionMarkRef.current && scrollViewRef.current) {\n        questionMarkRef.current.measure((fx, fy, width, height, px, py) => {\n          scrollViewRef.current.measure((_, __, ___, ____, scrollViewX, scrollViewY) => {\n            const popupWidth = 300; // Adjust this value based on your popup width\n            const popupHeight = 200; // Adjust this value based on your popup height\n            \n            setPopupPosition({\n              top: py - scrollViewY - popupHeight,\n              left: px - scrollViewX - (popupWidth - width) / 2,\n            });\n            setShowAuthorizedMembersInfo(true);\n          });\n        });\n      }\n    } else {\n      setShowAuthorizedMembersInfo(true);\n    }\n  };\n\n  const renderIcon = (name, size, color, onPress) => {\n    return (\n      <TouchableOpacity onPress={onPress}>\n        <Ionicons name={name} size={size} color={color} />\n      </TouchableOpacity>\n    );\n  };\n\n  const ContentWrapper = Platform.OS === 'ios' ? SafeAreaView : View;\n\n  const saveSection = (section) => {\n    // Implement the save logic for each section\n    console.log(`Saving ${section} section`);\n    Alert.alert(\"Success\", `${section} information saved successfully!`);\n    toggleEditMode(section);\n  };\n\n  const handleSwitchToProfessional = () => {\n    switchRole();\n    navigation.navigate('ProfessionalProfile');\n  };\n\n  const handleGoBack = () => {\n    navigation.goBack();\n  };\n\n  const renderSaveButton = (section) => {\n    if (editMode[section]) {\n      return (\n        <Button \n          mode=\"contained\" \n          onPress={() => saveSection(section)}\n          style={styles.sectionSaveButton}\n        >\n          Save {section}\n        </Button>\n      );\n    }\n    return null;\n  };\n\n  const renderProfilePhoto = () => {\n    if (profilePhoto) {\n      return <Image source={{ uri: profilePhoto }} style={styles.profilePhoto} />;\n    } else {\n      return (\n        <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n          <MaterialCommunityIcons name=\"account\" size={80} color={theme.colors.primary} />\n        </View>\n      );\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[styles.container, styles.centered]}>\n        <Text>Loading...</Text>\n      </View>\n    );\n  }\n\n  const getContentWidth = () => {\n    if (Platform.OS === 'web') {\n      return windowWidth < 600 ? '90%' : '60%';\n    }\n    return '90%';\n  };\n\n  // Use isApprovedProfessional from context or localIsApprovedProfessional from AsyncStorage\n  const showSwitchToProfessionalButton = isApprovedProfessional || localIsApprovedProfessional;\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <View style={styles.headerLeft}>\n          <TouchableOpacity onPress={() => navigation.navigate('More')} style={styles.backButton}>\n            <Ionicons name=\"chevron-back\" size={24} color={theme.colors.primary} />\n          </TouchableOpacity>\n          <Text style={styles.headerText}>Owner Profile</Text>\n        </View>\n        {showSwitchToProfessionalButton && (\n          <Button \n            mode=\"contained\" \n            onPress={handleSwitchToProfessional}\n            style={styles.switchProfileButton}\n          >\n            Switch to Professional\n          </Button>\n        )}\n      </View>\n      <ScrollView \n        ref={scrollViewRef}\n        contentContainerStyle={styles.scrollViewContent}\n      >\n        <View style={[styles.content, { width: getContentWidth() }]}>\n          <View style={styles.profileHeader}>\n            <TouchableOpacity onPress={pickImage}>\n              {renderProfilePhoto()}\n            </TouchableOpacity>\n            <View style={styles.profileInfo}>\n              <Text style={styles.name}>{name}</Text>\n              <Text style={styles.location}>{city}, {state}</Text>\n            </View>\n          </View>\n\n          <View style={styles.section}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Personal Information</Text>\n              {renderIcon('pencil', 20, theme.colors.primary, () => toggleEditMode('personal'))}\n            </View>\n            {renderEditableField('Name', name, setName, 'personal')}\n            {renderEditableField('Email', email, setEmail, 'personal')}\n            {renderEditableField('Phone', phone, setPhone, 'personal')}\n            {renderEditableField('Age', age, setAge, 'personal')}\n            {renderSaveButton('personal')}\n          </View>\n\n          <View style={styles.section}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Address</Text>\n              {renderIcon('pencil', 20, theme.colors.primary, () => toggleEditMode('address'))}\n            </View>\n            {renderEditableField('Address', address, setAddress, 'address')}\n            {renderEditableField('City', city, setCity, 'address')}\n            {renderEditableField('State', state, setState, 'address')}\n            {renderEditableField('ZIP', zip, setZip, 'address')}\n            {renderEditableField('Country', country, setCountry, 'address')}\n            {renderSaveButton('address')}\n          </View>\n\n          <View style={styles.section}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>About Me</Text>\n              {renderIcon('pencil', 20, theme.colors.primary, () => toggleEditMode('bio'))}\n            </View>\n            {editMode.bio ? (\n              <TextInput\n                multiline\n                numberOfLines={4}\n                value={bio}\n                onChangeText={setBio}\n                style={styles.bioInput}\n              />\n            ) : (\n              <Text style={styles.fieldText}>{bio}</Text>\n            )}\n            {renderSaveButton('bio')}\n          </View>\n\n          <View style={styles.section}>\n            <TouchableOpacity onPress={() => navigation.navigate('MyPets')}>\n              <Text style={styles.sectionTitle}>My Pets</Text>\n            </TouchableOpacity>\n            {pets.map((pet) => (\n              <TouchableOpacity \n                key={pet.id} \n                style={styles.petItem}\n                onPress={() => navigation.navigate('PetProfile', { petId: pet.id })}\n              >\n                <View style={styles.petItemContent}>\n                  <Image source={{ uri: pet.photo }} style={styles.petPhoto} />\n                  <View style={styles.petInfo}>\n                    <Text style={styles.petName}>{pet.name}</Text>\n                    <Text style={styles.petDetails}>{pet.type} • {pet.breed} • {pet.age} years old</Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n            ))}\n          </View>\n\n          <View style={styles.section}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Emergency Contact</Text>\n              {renderIcon('pencil', 20, theme.colors.primary, () => toggleEditMode('emergency'))}\n            </View>\n            {renderEditableField('Name', emergencyContact.name, (text) => setEmergencyContact({...emergencyContact, name: text}), 'emergency')}\n            {renderEditableField('Phone', emergencyContact.phone, (text) => setEmergencyContact({...emergencyContact, phone: text}), 'emergency')}\n            {renderSaveButton('emergency')}\n          </View>\n\n          <View style={styles.section}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Authorized Household Members</Text>\n              <View style={styles.iconContainer}>\n                <TouchableOpacity onPress={showAuthorizedMembersPopup} ref={questionMarkRef}>\n                  <Ionicons name=\"help-circle-outline\" size={20} color={theme.colors.primary} />\n                </TouchableOpacity>\n                {renderIcon('pencil', 20, theme.colors.primary, () => toggleEditMode('household'))}\n              </View>\n            </View>\n            {authorizedHouseholdMembers.map((member, index) => (\n              editMode.household ? (\n                <TextInput\n                  key={index}\n                  label={`Member ${index + 1}`}\n                  value={member}\n                  onChangeText={(text) => updateHouseholdMember(index, text)}\n                  style={styles.input}\n                />\n              ) : (\n                <Text key={index} style={styles.fieldText}>{member}</Text>\n              )\n            ))}\n            {editMode.household && (\n              <Button mode=\"outlined\" onPress={addHouseholdMember} style={styles.addButton}>\n                Add Household Member\n              </Button>\n            )}\n            {renderSaveButton('household')}\n          </View>\n        </View>\n      </ScrollView>\n\n      <Portal>\n        {Platform.OS === 'web' ? (\n          showAuthorizedMembersInfo && (\n            <View\n              style={[\n                styles.webPopup,\n                { top: popupPosition.top, left: popupPosition.left },\n              ]}\n            >\n              <Text style={styles.webPopupTitle}>Authorized Household Members</Text>\n              <Text style={styles.webPopupText}>\n                Authorized household members are individuals who are allowed to make decisions about your pets in your absence. \n                This may include family members, roommates, or trusted friends who have access to your home and can care for your pets if needed.\n              </Text>\n              <Button onPress={() => setShowAuthorizedMembersInfo(false)}>Got it</Button>\n            </View>\n          )\n        ) : (\n          <Dialog visible={showAuthorizedMembersInfo} onDismiss={() => setShowAuthorizedMembersInfo(false)}>\n            <Dialog.Title>Authorized Household Members</Dialog.Title>\n            <Dialog.Content>\n              <Paragraph>\n                Authorized household members are individuals who are allowed to make decisions about your pets in your absence. \n                This may include family members, roommates, or trusted friends who have access to your home and can care for your pets if needed.\n              </Paragraph>\n            </Dialog.Content>\n            <Dialog.Actions>\n              <Button onPress={() => setShowAuthorizedMembersInfo(false)}>Got it</Button>\n            </Dialog.Actions>\n          </Dialog>\n        )}\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n  },\n  content: {\n    alignSelf: 'center',\n    maxWidth: 800,\n    paddingTop: 16, // Add some padding at the top\n  },\n  switchProfileButton: {\n    alignSelf: 'flex-end',\n    marginBottom: 16,\n  },\n  profileHeader: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  sectionSaveButton: {\n    marginTop: 16,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 10,\n    color: theme.colors.primary,\n  },\n  location: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n  },\n  section: {\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  input: {\n    marginBottom: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  bioInput: {\n    backgroundColor: theme.colors.surface,\n  },\n  petItem: {\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    flexWrap: 'wrap',\n  },\n  saveButton: {\n    margin: 20,\n  },\n  addButton: {\n    marginTop: 10,\n  },\n  profilePhoto: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n  },\n  profilePhotoPlaceholder: {\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  centered: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  fieldText: {\n    fontSize: 16,\n    marginBottom: 5,\n    color: theme.colors.text,\n  },\n  iconContainer: {\n    flexDirection: 'row',\n  },\n  petItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  petPhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10,\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 10,\n  },\n  modalContent: {\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  modalText: {\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  webPopup: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 10,\n    width: 300,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    zIndex: 1000,\n  },\n  webPopupTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  webPopupText: {\n    marginBottom: 20,\n  },\n  profileInfo: {\n    alignItems: 'center',\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  location: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n  },\n  headerLeft: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  switchProfileButton: {\n    backgroundColor: theme.colors.primary,\n  },\n});\n\nexport default OwnerProfile;\n","import React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\n\nconst FloatingSaveButton = ({ visible, onSave, btnText = \"Save Changes\" }) => {\n  const { screenWidth, isCollapsed } = React.useContext(AuthContext);\n  \n  // Don't render anything if not visible\n  if (!visible) {\n    return null;\n  }\n  \n  // Simple logging only when visible\n  React.useEffect(() => {\n    if (visible) {\n      debugLog('MBA230uvj0834h9', 'FloatingSaveButton is visible');\n    }\n  }, [visible]);\n\n  // Calculate marginLeft to match sidebar on desktop\n  const marginLeft = screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0;\n\n  return (\n    <View \n      style={[\n        styles.floatingButtonContainer,\n        Platform.OS === 'web' ? styles.webButton : styles.mobileButton,\n        { marginLeft }\n      ]}\n    >\n      <Button \n        mode=\"contained\" \n        onPress={onSave}\n        style={styles.floatingButton}\n        labelStyle={styles.buttonLabel}\n      >\n        {btnText}\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  floatingButtonContainer: {\n    position: 'fixed',\n    bottom: 20,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 9999,\n    backgroundColor: 'transparent',\n  },\n  webButton: {\n    position: 'fixed',\n    bottom: 20,\n    backgroundColor: 'transparent',\n  },\n  mobileButton: {\n    position: 'fixed',\n    bottom: 20,\n    backgroundColor: 'transparent',\n    width: '100%',\n  },\n  floatingButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 25,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    maxWidth: 600,\n    minWidth: 200,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n});\n\nexport default FloatingSaveButton;","import React, { useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\n\n/**\n * @typedef {Object} StepProgressIndicatorProps\n * @property {string[]} steps - Array of step names\n * @property {number} currentStep - Current active step (0-based index)\n * @property {function} [onStepPress] - Optional callback when a step is pressed\n * @property {Object} [style] - Optional style overrides\n */\n\nconst StepProgressIndicator = props => {\n  const {\n    steps,\n    currentStep,\n    onStepPress,\n    style,\n  } = props;\n  \n  const { screenWidth, is_DEBUG } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n\n  if (is_DEBUG) {\n    console.log(\"MBA1234 - Screen width:\", screenWidth);\n    console.log(\"MBA1234 - Is desktop:\", isDesktop);\n    console.log(\"MBA1234 - Steps:\", steps);\n    console.log(\"MBA1234 - Current step:\", currentStep);\n  }\n\n  // Helper function to determine what type of line to render between steps\n  const renderLine = (stepIndex) => {\n    if (stepIndex < currentStep) {\n      // Line between completed steps\n      return (\n        <View style={[styles.line, styles.completedLine]} />\n      );\n    } else if (stepIndex === currentStep) {\n      // Line after the active step - show progress indicator\n      return (\n        <View style={styles.progressLine}>\n          <View style={styles.progressFilled} />\n          <View style={styles.progressEmpty} />\n        </View>\n      );\n    } else {\n      // Line between future steps\n      return (\n        <View style={styles.line} />\n      );\n    }\n  };\n\n  // Render a single step\n  const renderStep = (stepName, index) => {\n    const isActive = index === currentStep;\n    const isCompleted = index < currentStep;\n\n    return (\n      <View key={`step-${index}`} style={styles.step}>\n        <View style={[\n          styles.stepCircle,\n          isActive && styles.activeStepCircle,\n          isCompleted && styles.completedStepCircle\n        ]}>\n          <Text style={[\n            styles.stepNumber,\n            isActive && styles.activeStepNumber,\n            isCompleted && styles.completedStepNumber,\n          ]}>{index + 1}</Text>\n        </View>\n        \n        {(isActive || isDesktop) && (\n          <Text style={[\n            styles.stepName,\n            isActive && styles.activeStepName,\n          ]}>{stepName}</Text>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.wrapper, style]}>\n      <View style={styles.container}>\n        {steps.map((step, index) => (\n          <React.Fragment key={`step-fragment-${index}`}>\n            {renderStep(step, index)}\n            {index < steps.length - 1 && renderLine(index)}\n          </React.Fragment>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: theme.colors.background,\n    paddingVertical: 12,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    paddingHorizontal: 16,\n    justifyContent: 'space-between',\n  },\n  step: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 2,\n  },\n  stepCircle: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    zIndex: 3,\n  },\n  activeStepCircle: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n  },\n  completedStepCircle: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n    opacity: 0.8,\n  },\n  stepNumber: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.5,\n  },\n  activeStepNumber: {\n    color: theme.colors.surface,\n    opacity: 1,\n  },\n  completedStepNumber: {\n    color: theme.colors.surface,\n  },\n  stepName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.7,\n    marginLeft: 8,\n    whiteSpace: 'nowrap',\n  },\n  activeStepName: {\n    color: theme.colors.mainColors.main,\n    opacity: 1,\n  },\n  line: {\n    height: 2,\n    backgroundColor: theme.colors.border,\n    opacity: 0.2,\n    flex: 1,\n    marginHorizontal: 4,\n    zIndex: 1,\n  },\n  completedLine: {\n    backgroundColor: theme.colors.mainColors.main,\n    opacity: 1,\n  },\n  progressLine: {\n    flex: 1,\n    flexDirection: 'row',\n    height: 2,\n    marginHorizontal: 4,\n    zIndex: 1,\n  },\n  progressFilled: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    height: 2,\n  },\n  progressEmpty: {\n    flex: 1,\n    backgroundColor: theme.colors.border,\n    opacity: 0.2,\n    height: 2,\n  },\n});\n\nexport default StepProgressIndicator; ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Modal,\n  TextInput,\n  Platform,\n  Dimensions,\n  Picker\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { debugLog } from '../../context/AuthContext';\n\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n    animalTypes: [] // Will be populated with all animal types\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n    animalTypes: ['Horse', 'Cow', 'Sheep', 'Goat', 'Pig', 'Other']\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n    animalTypes: ['Dogs', 'Cats', 'Birds', 'Rabbits', 'Hamsters', 'Other']\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n    animalTypes: ['Snake', 'Lizard', 'Turtle', 'Gecko', 'Chameleon', 'Other']\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n    animalTypes: ['Fish', 'Frog', 'Newt', 'Axolotl', 'Other']\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n    animalTypes: ['Spider', 'Scorpion', 'Crab', 'Snail', 'Millipede', 'Other']\n  }\n];\n\n// Animal icons lookup\nconst ANIMAL_ICONS = {\n  // Farm animals\n  'Horse': 'horse',\n  'Cow': 'cow',\n  'Sheep': 'sheep',\n  'Goat': 'cow',\n  'Pig': 'pig',\n  \n  // Domestic\n  'Dogs': 'dog',\n  'Cats': 'cat',\n  'Birds': 'bird',\n  'Rabbits': 'rabbit',\n  'Hamsters': 'rodent',\n  \n  // Reptiles\n  'Snake': 'snake',\n  'Lizard': 'snake',\n  'Turtle': 'turtle',\n  'Gecko': 'snake',\n  'Chameleon': 'snake',\n  \n  // Aquatic\n  'Fish': 'fish',\n  'Frog': 'snake',\n  'Newt': 'fish',\n  'Axolotl': 'fish',\n  \n  // Invertebrates\n  'Spider': 'spider',\n  'Scorpion': 'spider',\n  'Crab': 'fish',\n  'Snail': 'snail',\n  'Millipede': 'bug',\n  \n  // Default\n  'Other': 'help-circle-outline'\n};\n\n// Animal categories lookup - hardcoded mapping of each animal to its proper category\nconst ANIMAL_CATEGORIES = {\n  // Farm animals\n  'Horse': 'Farm Animals',\n  'Cow': 'Farm Animals',\n  'Sheep': 'Farm Animals',\n  'Goat': 'Farm Animals',\n  'Pig': 'Farm Animals',\n  \n  // Domestic\n  'Dogs': 'Domestic',\n  'Cats': 'Domestic',\n  'Birds': 'Domestic',\n  'Rabbits': 'Domestic',\n  'Hamsters': 'Domestic',\n  \n  // Reptiles\n  'Snake': 'Reptiles',\n  'Lizard': 'Reptiles',\n  'Turtle': 'Reptiles',\n  'Gecko': 'Reptiles',\n  'Chameleon': 'Reptiles',\n  \n  // Aquatic\n  'Fish': 'Aquatic',\n  'Frog': 'Aquatic',\n  'Newt': 'Aquatic',\n  'Axolotl': 'Aquatic',\n  \n  // Invertebrates\n  'Spider': 'Invertebrates',\n  'Scorpion': 'Invertebrates',\n  'Crab': 'Invertebrates',\n  'Snail': 'Invertebrates',\n  'Millipede': 'Invertebrates'\n};\n\n// Get all animal types from all categories\nconst getAllAnimalTypes = () => {\n  const allTypes = [];\n  GENERAL_CATEGORIES.forEach(category => {\n    if (category.id !== 'all') {\n      category.animalTypes.forEach(type => {\n        if (type !== 'Other' && !allTypes.includes(type)) {\n          allTypes.push(type);\n        }\n      });\n    }\n  });\n  return allTypes;\n};\n\n// Populate the 'all' category with all animal types\nGENERAL_CATEGORIES[0].animalTypes = getAllAnimalTypes();\n\nconst DEFAULT_ANIMAL_TYPES = [\n  'Dogs',\n  'Cats',\n  'Fish',\n  'Birds',\n  'Rabbits',\n  'Snake'\n];\n\n// Most common pets to display first when \"All\" is selected\nconst COMMON_PETS = [\n  'Dogs',\n  'Cats',\n  'Fish',\n  'Birds',\n  'Hamsters',\n  'Rabbits',\n  'Snake',\n  'Turtle'\n];\n\n// Get the appropriate icon for an animal type\nconst getAnimalIcon = (animalName, categoryId = null) => {\n  // If the animal has a predefined icon, use it\n  if (ANIMAL_ICONS[animalName]) {\n    return ANIMAL_ICONS[animalName];\n  }\n  \n  // For custom animals, use the category icon if available\n  if (categoryId) {\n    const category = GENERAL_CATEGORIES.find(cat => cat.id === categoryId);\n    if (category) {\n      return category.icon;\n    }\n  }\n  \n  // Default to paw icon\n  return 'paw';\n};\n\nconst getCategoryIcon = (categoryName) => {\n  const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n  return category ? category.icon : 'paw-outline';\n};\n\nconst CategorySelectionStep = ({ serviceData, setServiceData }) => {\n  const [customAnimalInput, setCustomAnimalInput] = useState('');\n  const [customAnimalCategory, setCustomAnimalCategory] = useState('');\n  const [showCustomAnimalInput, setShowCustomAnimalInput] = useState(false);\n  const [selectedCategoryFilter, setSelectedCategoryFilter] = useState('all');\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n  const isMobile = Platform.OS !== 'web';\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setScreenWidth(Dimensions.get('window').width);\n    };\n\n    Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      // Remove listener on cleanup\n      if (Dimensions.removeEventListener) {\n        Dimensions.removeEventListener('change', updateLayout);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize with first category selected\n    if (!customAnimalCategory && GENERAL_CATEGORIES.length > 1) {\n      setCustomAnimalCategory(GENERAL_CATEGORIES[1].id);\n    }\n    \n    // Debug log to check what animal types we're receiving\n    debugLog('MBA456789', 'CategorySelectionStep received serviceData:', serviceData);\n    if (serviceData.animalTypes && serviceData.animalTypes.length > 0) {\n      debugLog('MBA456789', 'Initial animal types in CategorySelectionStep:', serviceData.animalTypes);\n    }\n  }, []);\n\n  const isAnimalTypeSelected = (animalName) => {\n    if (!serviceData.animalTypes || !serviceData.animalTypes.length) {\n      return false;\n    }\n    \n    // Check all possible formats of animal types\n    return serviceData.animalTypes.some(animal => {\n      if (typeof animal === 'string') {\n        return animal === animalName;\n      } else if (typeof animal === 'object' && animal !== null) {\n        return animal.name === animalName;\n      }\n      return false;\n    });\n  };\n\n  const getCategoryForAnimal = (animalName) => {\n    const animal = serviceData.animalTypes.find(a => a.name === animalName);\n    if (animal && animal.categoryId) {\n      const category = GENERAL_CATEGORIES.find(cat => cat.id === animal.categoryId);\n      return category ? category.name : 'Other';\n    }\n    return 'Other';\n  };\n\n  const handleCategoryFilterSelect = (categoryId) => {\n    setSelectedCategoryFilter(categoryId);\n  };\n\n  const handleAnimalTypeSelect = (animalName, categoryId = null) => {\n    debugLog('MBA456789', `Selecting animal: ${animalName}, categoryId: ${categoryId}`);\n    \n    if (animalName === 'Other') {\n      setShowCustomAnimalInput(true);\n      setCustomAnimalCategory(categoryId || (GENERAL_CATEGORIES[1] && GENERAL_CATEGORIES[1].id));\n      return;\n    }\n\n    setServiceData(prev => {\n      const prevAnimalTypes = prev.animalTypes || [];\n      debugLog('MBA456789', 'Current animal types before update:', prevAnimalTypes);\n      \n      // Check if this animal is already selected\n      const existingAnimalIndex = prevAnimalTypes.findIndex(animal => {\n        if (typeof animal === 'string') {\n          return animal === animalName;\n        } else if (typeof animal === 'object' && animal !== null) {\n          return animal.name === animalName;\n        }\n        return false;\n      });\n      \n      debugLog('MBA456789', `Animal ${animalName} is ${existingAnimalIndex !== -1 ? 'already selected' : 'not selected'}`);\n      \n      if (existingAnimalIndex !== -1) {\n        // If already selected, remove it\n        const updatedTypes = [...prevAnimalTypes];\n        updatedTypes.splice(existingAnimalIndex, 1);\n        debugLog('MBA456789', 'Animal types after removal:', updatedTypes);\n        \n        return {\n          ...prev,\n          animalTypes: updatedTypes\n        };\n      } else {\n        // If not selected, add it with the hardcoded category\n        // Get the proper category from our mapping\n        const hardcodedCategory = ANIMAL_CATEGORIES[animalName] || 'Other';\n        \n        // Find the category ID from the name if needed\n        let categoryToUse = categoryId;\n        if (!categoryToUse) {\n          const foundCategory = GENERAL_CATEGORIES.find(cat => cat.name === hardcodedCategory);\n          categoryToUse = foundCategory ? foundCategory.id : 'other';\n        }\n        \n        const newAnimal = {\n          name: animalName,\n          categoryId: categoryToUse,\n          categoryName: hardcodedCategory, // Always use the hardcoded category name\n          isCustom: false\n        };\n        \n        debugLog('MBA456789', 'Adding new animal:', newAnimal);\n        debugLog('MBA456789', 'Animal types after addition:', [...prevAnimalTypes, newAnimal]);\n        \n        return {\n          ...prev,\n          animalTypes: [...prevAnimalTypes, newAnimal]\n        };\n      }\n    });\n  };\n\n  const handleAddCustomAnimal = () => {\n    if (!customAnimalInput.trim()) return;\n\n    // Find the category name for the custom animal\n    let categoryName = 'Other';\n    if (customAnimalCategory) {\n      const categoryInfo = GENERAL_CATEGORIES.find(cat => cat.id === customAnimalCategory);\n      if (categoryInfo) {\n        categoryName = categoryInfo.name;\n      }\n    }\n\n    setServiceData(prev => ({\n      ...prev,\n      animalTypes: [...prev.animalTypes, { \n        name: customAnimalInput.trim(),\n        categoryId: customAnimalCategory || 'other',\n        categoryName: categoryName, // Add the category name\n        isCustom: true\n      }]\n    }));\n    \n    // Also add the category to generalCategories if it's not already there\n    if (customAnimalCategory) {\n      const categoryExists = serviceData.generalCategories.some(cat => cat.id === customAnimalCategory);\n      if (!categoryExists) {\n        const categoryToAdd = GENERAL_CATEGORIES.find(cat => cat.id === customAnimalCategory);\n        if (categoryToAdd) {\n          setServiceData(prev => ({\n            ...prev,\n            generalCategories: [...prev.generalCategories, {\n              id: categoryToAdd.id,\n              name: categoryToAdd.name,\n              icon: categoryToAdd.icon\n            }]\n          }));\n        }\n      }\n    }\n    \n    setCustomAnimalInput('');\n    setShowCustomAnimalInput(false);\n  };\n\n  const handleSelectAll = () => {\n    let allAnimalTypes = [];\n    \n    if (selectedCategoryFilter && selectedCategoryFilter !== 'all') {\n      // If a category filter is selected, get all animals from that category\n      const categoryData = GENERAL_CATEGORIES.find(cat => cat.id === selectedCategoryFilter);\n      if (categoryData) {\n        allAnimalTypes = categoryData.animalTypes\n          .filter(type => type !== 'Other')\n          .map(type => ({ \n            name: type, \n            categoryId: selectedCategoryFilter \n          }));\n      }\n    } else {\n      // Otherwise get animal types from all categories\n      GENERAL_CATEGORIES.forEach(category => {\n        if (category.id !== 'all') {\n          category.animalTypes\n            .filter(type => type !== 'Other')\n            .forEach(type => {\n              allAnimalTypes.push({ \n                name: type, \n                categoryId: category.id \n              });\n            });\n        }\n      });\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      animalTypes: allAnimalTypes\n    }));\n  };\n\n  const handleClearAll = () => {\n    setServiceData(prev => ({\n      ...prev,\n      animalTypes: []\n    }));\n  };\n\n  const getFilteredAnimalTypes = () => {\n    debugLog('MBA456789', 'Getting filtered animal types with filter:', selectedCategoryFilter);\n    debugLog('MBA456789', 'Current serviceData.animalTypes:', serviceData.animalTypes);\n    \n    let animalTypesToShow = [];\n    let categoriesUsed = new Set();\n    \n    if (selectedCategoryFilter && selectedCategoryFilter !== 'all') {\n      // If a specific category is selected as filter, show only animals from that category\n      const categoryData = GENERAL_CATEGORIES.find(cat => cat.id === selectedCategoryFilter);\n      if (categoryData) {\n        animalTypesToShow = categoryData.animalTypes\n          .filter(type => type !== 'Other')\n          .map(type => ({\n            name: type,\n            categoryId: selectedCategoryFilter,\n            categoryName: categoryData.name,\n            icon: getAnimalIcon(type, selectedCategoryFilter)\n          }));\n        categoriesUsed.add(categoryData.name);\n      }\n    } else {\n      // Show all animal types from all categories (except 'all' category)\n      GENERAL_CATEGORIES.forEach(category => {\n        if (category.id !== 'all') {\n          category.animalTypes\n            .filter(type => type !== 'Other')\n            .forEach(type => {\n              animalTypesToShow.push({\n                name: type,\n                categoryId: category.id,\n                categoryName: category.name,\n                icon: getAnimalIcon(type, category.id)\n              });\n              categoriesUsed.add(category.name);\n            });\n        }\n      });\n    }\n    \n    // Add custom animals that match the filter\n    if (serviceData.animalTypes && serviceData.animalTypes.length > 0) {\n      serviceData.animalTypes.forEach(animal => {\n        // Skip if not an object or has no name\n        if (typeof animal !== 'object' || !animal || !animal.name) {\n          return;\n        }\n        \n        // Check if it's a custom animal or if its name doesn't match any predefined animal types\n        const isCustomOrUnknown = animal.isCustom || \n          !GENERAL_CATEGORIES.some(cat => \n            cat.animalTypes && cat.animalTypes.includes(animal.name)\n          );\n        \n        if (isCustomOrUnknown) {\n          let categoryId = animal.categoryId;\n          let categoryName = animal.categoryName || 'Other';\n          \n          // If we have a categoryName but no categoryId, try to find the corresponding categoryId\n          if (!categoryId && categoryName) {\n            const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n            if (category) {\n              categoryId = category.id;\n            }\n          }\n          \n          // If we still don't have a categoryName, try to derive from categoryId\n          if (!categoryName && categoryId) {\n            const category = GENERAL_CATEGORIES.find(cat => cat.id === categoryId);\n            if (category) {\n              categoryName = category.name;\n            }\n          }\n          \n          // Check if this animal should be shown based on the selected filter\n          if (selectedCategoryFilter === 'all' || categoryId === selectedCategoryFilter) {\n            // Check if this animal is already in the list\n            const existing = animalTypesToShow.find(a => a.name === animal.name);\n            if (!existing) {\n              debugLog('MBA456789', `Adding custom/unknown animal to filtered list: ${animal.name}, category: ${categoryName}`);\n              \n              animalTypesToShow.push({\n                name: animal.name,\n                categoryId: categoryId,\n                categoryName: categoryName,\n                icon: getAnimalIcon(animal.name, categoryId),\n                isCustom: true\n              });\n              categoriesUsed.add(categoryName);\n            }\n          }\n        }\n      });\n    }\n    \n    // Sort with common pets first, then alphabetically\n    animalTypesToShow.sort((a, b) => {\n      const aCommonIndex = COMMON_PETS.indexOf(a.name);\n      const bCommonIndex = COMMON_PETS.indexOf(b.name);\n      \n      // If both are common pets, sort by common pet order\n      if (aCommonIndex !== -1 && bCommonIndex !== -1) {\n        return aCommonIndex - bCommonIndex;\n      }\n      \n      // If only a is a common pet, it comes first\n      if (aCommonIndex !== -1) {\n        return -1;\n      }\n      \n      // If only b is a common pet, it comes first\n      if (bCommonIndex !== -1) {\n        return 1;\n      }\n      \n      // Otherwise sort alphabetically\n      return a.name.localeCompare(b.name);\n    });\n    \n    debugLog('MBA456789', 'Filtered animal types to show:', animalTypesToShow);\n    \n    return { animalTypes: animalTypesToShow, categories: Array.from(categoriesUsed) };\n  };\n\n  const { animalTypes: filteredAnimalTypes } = getFilteredAnimalTypes();\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 16,\n    },\n    title: {\n      fontSize: 24,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 16,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    subtitle: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginTop: 24,\n      marginBottom: 16,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    instructions: {\n      fontSize: 16,\n      color: theme.colors.textSecondary,\n      marginBottom: 16,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    categoryFiltersContainer: {\n      flexDirection: 'row',\n      marginBottom: 24,\n      paddingLeft: 2,\n      paddingRight: 20, // Extra padding at the end for better scrolling\n    },\n    categoryFiltersScrollView: {\n      maxHeight: 60,\n    },\n    categoryFilterButton: {\n      paddingVertical: 12,\n      paddingHorizontal: 20,\n      borderRadius: 50,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: theme.colors.surface,\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: 8,\n      minHeight: 46,\n      marginRight: 10,\n    },\n    selectedCategoryFilter: {\n      backgroundColor: theme.colors.mainColors.mainLight,\n      borderColor: theme.colors.mainColors.main,\n    },\n    categoryFilterText: {\n      fontSize: 16,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedCategoryFilterText: {\n      color: theme.colors.mainColors.main,\n      fontWeight: '600',\n    },\n    actionsContainer: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end',\n      marginBottom: 24,\n      // gap: 16,\n    },\n    actionButton: {\n      paddingVertical: 8,\n      paddingHorizontal: 12,\n    },\n    actionButtonText: {\n      fontSize: 16,\n      color: theme.colors.mainColors.main,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    animalTypesGrid: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 16,\n    },\n    animalTypeItem: {\n      flex: 1,\n      minWidth: Platform.OS === 'web' ? (screenWidth <= 420 ? '45%' : '30%') : '45%',\n      marginBottom: 12,\n    },\n    animalTypeCard: {\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: theme.colors.surface,\n      padding: 16,\n      height: 70,\n      justifyContent: 'center',\n    },\n    selectedAnimalCard: {\n      borderColor: theme.colors.mainColors.main,\n      backgroundColor: theme.colors.mainColors.mainLight,\n    },\n    animalTypeRow: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    animalIconAndName: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: 12,\n    },\n    animalTypeName: {\n      fontSize: 16,\n      fontWeight: '500',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    customInputContainer: {\n      marginVertical: 24,\n      padding: 16,\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: theme.colors.backgroundContrast,\n    },\n    customInputTitle: {\n      fontSize: 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    inputRow: {\n      flexDirection: 'row',\n      gap: 8,\n      marginBottom: 12,\n    },\n    textInput: {\n      flex: 1,\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      paddingHorizontal: 12,\n      backgroundColor: theme.colors.surface,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    pickerContainer: {\n      flex: 1,\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      backgroundColor: theme.colors.surface,\n      justifyContent: 'center',\n    },\n    picker: {\n      height: 48,\n      color: theme.colors.text,\n    },\n    addButton: {\n      backgroundColor: theme.colors.mainColors.main,\n      borderRadius: 8,\n      paddingVertical: 12,\n      paddingHorizontal: 16,\n      alignItems: 'center',\n    },\n    addButtonText: {\n      color: theme.colors.surface,\n      fontSize: 16,\n      fontWeight: '600',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedAnimalsSection: {\n      marginTop: 24,\n      padding: 16,\n      backgroundColor: theme.colors.backgroundContrast,\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n    },\n    selectedAnimalsTitle: {\n      fontSize: 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedAnimalsList: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 8,\n    },\n    animalBubble: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.colors.surface,\n      borderRadius: 20,\n      paddingVertical: 6,\n      paddingHorizontal: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      marginBottom: 8,\n      marginRight: 8,\n      gap: 8,\n    },\n    animalBubbleText: {\n      fontSize: 14,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    removeAnimalButton: {\n      padding: 2,\n    },\n  });\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.title}>Select Animal Types for Your Service</Text>\n      <Text style={styles.instructions}>\n        Choose the animal types your service will cover. You can filter by category or add custom animals.\n      </Text>\n      \n      {/* Category filters */}\n      <ScrollView \n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        contentContainerStyle={styles.categoryFiltersContainer}\n        style={styles.categoryFiltersScrollView}\n      >\n        {GENERAL_CATEGORIES.map((category) => (\n          <TouchableOpacity\n            key={category.id}\n            style={[\n              styles.categoryFilterButton,\n              selectedCategoryFilter === category.id && styles.selectedCategoryFilter\n            ]}\n            onPress={() => handleCategoryFilterSelect(category.id)}\n          >\n            <MaterialCommunityIcons\n              name={category.icon}\n              size={22}\n              color={selectedCategoryFilter === category.id ? theme.colors.mainColors.main : theme.colors.text}\n            />\n            <Text style={[\n              styles.categoryFilterText,\n              selectedCategoryFilter === category.id && styles.selectedCategoryFilterText\n            ]}>\n              {category.name}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n      \n      {/* Actions */}\n      <View style={styles.actionsContainer}>\n        <TouchableOpacity style={styles.actionButton} onPress={handleSelectAll}>\n          <Text style={styles.actionButtonText}>Select All</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.actionButton} onPress={handleClearAll}>\n          <Text style={styles.actionButtonText}>Clear All</Text>\n        </TouchableOpacity>\n        <TouchableOpacity \n          style={styles.actionButton}\n          onPress={() => setShowCustomAnimalInput(true)}\n        >\n          <Text style={styles.actionButtonText}>Add Custom Pet</Text>\n        </TouchableOpacity>\n      </View>\n      \n      {/* Custom Animal Input */}\n      {showCustomAnimalInput && (\n        <View style={styles.customInputContainer}>\n          <Text style={styles.customInputTitle}>Add a Custom Animal Type</Text>\n          <View style={styles.inputRow}>\n            <TextInput\n              style={styles.textInput}\n              placeholder=\"Animal Type (e.g. Hamster)\"\n              value={customAnimalInput}\n              onChangeText={setCustomAnimalInput}\n              placeholderTextColor={theme.colors.placeHolderText}\n            />\n            <View style={styles.pickerContainer}>\n              {Platform.OS === 'ios' || Platform.OS === 'android' ? (\n                <Picker\n                  selectedValue={customAnimalCategory}\n                  style={styles.picker}\n                  onValueChange={(itemValue) => setCustomAnimalCategory(itemValue)}\n                >\n                  {GENERAL_CATEGORIES.filter(cat => cat.id !== 'all').map(category => (\n                    <Picker.Item \n                      key={category.id} \n                      label={category.name} \n                      value={category.id} \n                    />\n                  ))}\n                </Picker>\n              ) : (\n                <select\n                  value={customAnimalCategory}\n                  onChange={(e) => setCustomAnimalCategory(e.target.value)}\n                  style={styles.picker}\n                >\n                  {GENERAL_CATEGORIES.filter(cat => cat.id !== 'all').map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n              )}\n            </View>\n          </View>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={handleAddCustomAnimal}\n            disabled={!customAnimalInput.trim()}\n          >\n            <Text style={styles.addButtonText}>Add Animal</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n      \n      {/* Animal Types Grid */}\n      {filteredAnimalTypes.length > 0 ? (\n        <View style={styles.animalTypesGrid}>\n          {filteredAnimalTypes.map((animalType) => (\n            <View key={`${animalType.categoryId}-${animalType.name}`} style={styles.animalTypeItem}>\n              <TouchableOpacity\n                style={[\n                  styles.animalTypeCard,\n                  isAnimalTypeSelected(animalType.name) && styles.selectedAnimalCard\n                ]}\n                onPress={() => handleAnimalTypeSelect(animalType.name, animalType.categoryId)}\n              >\n                <View style={styles.animalTypeRow}>\n                  <View style={styles.animalIconAndName}>\n                    <MaterialCommunityIcons\n                      name={animalType.icon}\n                      size={24}\n                      color={theme.colors.text}\n                    />\n                    <Text style={styles.animalTypeName}>{animalType.name}</Text>\n                  </View>\n                  {isAnimalTypeSelected(animalType.name) && (\n                    <MaterialCommunityIcons\n                      name=\"check-circle\"\n                      size={24}\n                      color={theme.colors.mainColors.main}\n                    />\n                  )}\n                </View>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      ) : (\n        <Text style={styles.instructions}>\n          No animal types match your current filter. Try selecting a different category or add a custom animal.\n        </Text>\n      )}\n      \n      {/* Selected Animals Summary */}\n      {serviceData.animalTypes.length > 0 && (\n        <View style={styles.selectedAnimalsSection}>\n          <Text style={styles.selectedAnimalsTitle}>\n            Selected Animals ({serviceData.animalTypes.length})\n          </Text>\n          <View style={styles.selectedAnimalsList}>\n            {serviceData.animalTypes.map((animal, index) => {\n              const animalName = animal.name;\n              const icon = getAnimalIcon(animalName, animal.categoryId);\n              \n              return (\n                <View key={index} style={styles.animalBubble}>\n                  <MaterialCommunityIcons\n                    name={icon}\n                    size={18}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.animalBubbleText}>{animalName}</Text>\n                  <TouchableOpacity \n                    onPress={() => handleAnimalTypeSelect(animalName)}\n                    style={styles.removeAnimalButton}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"close-circle\" \n                      size={16} \n                      color={theme.colors.text} \n                    />\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default CategorySelectionStep; ","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Switch\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\n\nconst MAX_SERVICE_NAME_LENGTH = 30;\nconst MAX_DESCRIPTION_LENGTH = 300;\n\nconst ServiceDetailsStep = ({ serviceData, setServiceData }) => {\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n\n  const validateInput = (text, isName = true) => {\n    // Allow only letters, numbers, spaces and & symbol\n    const validRegex = /^[a-zA-Z0-9\\s&\\.\\-\\,]*$/;\n    \n    if (!validRegex.test(text)) {\n      if (isName) {\n        setNameError('Service name can only contain letters, numbers, spaces, and &');\n      } else {\n        setDescriptionError('Description can only contain letters, numbers, spaces, periods, commas, dashes,and &');\n      }\n      return false;\n    }\n    \n    if (isName) {\n      setNameError('');\n    } else {\n      setDescriptionError('');\n    }\n    return true;\n  };\n\n  const handleServiceNameChange = (text) => {\n    // Limit to MAX_SERVICE_NAME_LENGTH characters\n    const truncatedText = text.slice(0, MAX_SERVICE_NAME_LENGTH);\n    \n    if (validateInput(truncatedText, true)) {\n      setServiceData(prev => ({\n        ...prev,\n        serviceName: truncatedText\n      }));\n    }\n  };\n\n  const handleDescriptionChange = (text) => {\n    // Limit to MAX_DESCRIPTION_LENGTH characters\n    const truncatedText = text.slice(0, MAX_DESCRIPTION_LENGTH);\n    \n    if (validateInput(truncatedText, false)) {\n      setServiceData(prev => ({\n        ...prev,\n        serviceDescription: truncatedText\n      }));\n    }\n  };\n\n  const handleOvernightToggle = (value) => {\n    setServiceData(prev => ({\n      ...prev,\n      isOvernight: value\n    }));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Service Details</Text>\n      \n      <View style={styles.inputGroup}>\n        <Text style={styles.label}>Service Name</Text>\n        <TextInput\n          style={styles.input}\n          value={serviceData.serviceName}\n          onChangeText={handleServiceNameChange}\n          placeholder=\"e.g. Premium Pet Grooming\"\n          placeholderTextColor={theme.colors.placeHolderText}\n          maxLength={MAX_SERVICE_NAME_LENGTH}\n        />\n        <Text style={styles.characterCount}>\n          {serviceData.serviceName.length}/{MAX_SERVICE_NAME_LENGTH}\n        </Text>\n        {nameError ? <Text style={styles.errorText}>{nameError}</Text> : null}\n      </View>\n      \n      <View style={styles.inputGroup}>\n        <Text style={styles.label}>Service Description</Text>\n        <TextInput\n          style={[styles.input, styles.textArea]}\n          value={serviceData.serviceDescription}\n          onChangeText={handleDescriptionChange}\n          placeholder=\"Describe your service in detail...\"\n          placeholderTextColor={theme.colors.placeHolderText}\n          multiline={true}\n          numberOfLines={6}\n          textAlignVertical=\"top\"\n          maxLength={MAX_DESCRIPTION_LENGTH}\n        />\n        <Text style={styles.characterCount}>\n          {serviceData.serviceDescription.length}/{MAX_DESCRIPTION_LENGTH}\n        </Text>\n        {descriptionError ? <Text style={styles.errorText}>{descriptionError}</Text> : null}\n      </View>\n      \n      <View style={styles.switchContainer}>\n        <View style={styles.switchGroup}>\n          <Text style={styles.switchLabel}>Overnight Service</Text>\n          <Text style={styles.switchSubLabel}>Does this service require overnight stay?</Text>\n        </View>\n        <Switch\n          value={serviceData.isOvernight}\n          onValueChange={handleOvernightToggle}\n          trackColor={{ false: theme.colors.border, true: theme.colors.mainColors.main }}\n          thumbColor={theme.colors.surface}\n          ios_backgroundColor={theme.colors.border}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputGroup: {\n    marginBottom: 24,\n  },\n  label: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.surface,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  textArea: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  switchContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  switchGroup: {\n    flex: 1,\n    marginRight: 16,\n  },\n  switchLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 4,\n  },\n  switchSubLabel: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 14,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  characterCount: {\n    color: theme.colors.textSecondary,\n    fontSize: 12,\n    marginTop: 4,\n    textAlign: 'right',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceDetailsStep; ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  ScrollView,\n  TouchableWithoutFeedback,\n  Modal\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { TIME_UNIT_MAPPING, BACKEND_TO_FRONTEND_TIME_UNIT } from '../../data/mockData';\nimport { debugLog } from '../../context/AuthContext';\n\nconst TIME_UNITS = Object.keys(TIME_UNIT_MAPPING);\nconst ANIMAL_THRESHOLDS = ['1', '2', '3', '4', '5'];\n\nconst RatesAndReviewStep = ({ serviceData, setServiceData, isUpdatingService, setIsUpdatingService, onProceedWithUpdate }) => {\n  // Debug log for tracking isOvernight status\n  debugLog('MBA5931', 'RatesAndReviewStep render - isOvernight status:', serviceData.isOvernight);\n  \n  const [showTimeUnitDropdown, setShowTimeUnitDropdown] = useState(false);\n  const [showThresholdDropdown, setShowThresholdDropdown] = useState(false);\n  const [customChargeVisible, setCustomChargeVisible] = useState(false);\n  const [isHolidayRatePercent, setIsHolidayRatePercent] = useState(true);\n  const [isEditingExistingRate, setIsEditingExistingRate] = useState(false);\n  const [showUnsavedRateWarning, setShowUnsavedRateWarning] = useState(false);\n  const [newCustomRate, setNewCustomRate] = useState({\n    title: '',\n    rate: '',\n    description: ''\n  });\n\n  // Filter available time units based on isOvernight flag\n  const availableTimeUnits = serviceData.isOvernight ? \n    ['Per Night'] : \n    TIME_UNITS;\n\n  // Check if we need to convert existing data on component mount\n  useEffect(() => {\n    // Initialize isPercent property based on the state\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        isPercent: isHolidayRatePercent\n      }\n    }));\n    \n    // If service is overnight, ensure the base_rate_unit is 'Per Night'\n    if (serviceData.isOvernight) {\n      debugLog('MBA5931', 'Service is overnight, setting rate unit to Per Night');\n      setServiceData(prev => ({\n        ...prev,\n        rates: {\n          ...prev.rates,\n          base_rate_unit: 'Per Night'\n        }\n      }));\n    }\n    // If we have a base_rate_unit from backend but it's not in our mapping, initialize with default\n    else if (serviceData.rates?.base_rate_unit && !BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit]) {\n      debugLog('MBA5931', 'Converting initial base_rate_unit to mapped value');\n      const frontendKey = Object.keys(TIME_UNIT_MAPPING).find(\n        key => TIME_UNIT_MAPPING[key] === serviceData.rates.base_rate_unit\n      );\n      \n      if (!frontendKey && serviceData.rates.base_rate_unit) {\n        // If we don't have a mapping for this value, keep the backend value\n        debugLog('MBA5931', 'No mapping found for:', serviceData.rates.base_rate_unit);\n      }\n    }\n\n    // Check if existing holiday rate has a % sign\n    if (serviceData.rates?.holidayRate) {\n      const holidayRateString = serviceData.rates.holidayRate.toString();\n      if (holidayRateString.includes('%')) {\n        setIsHolidayRatePercent(true);\n        // Strip the % sign for the input field\n        setServiceData(prev => ({\n          ...prev,\n          rates: {\n            ...prev.rates,\n            holidayRate: holidayRateString.replace('%', ''),\n            isPercent: true\n          }\n        }));\n      } else if (holidayRateString.includes('$')) {\n        setIsHolidayRatePercent(false);\n        // Strip the $ sign for the input field\n        setServiceData(prev => ({\n          ...prev,\n          rates: {\n            ...prev.rates,\n            holidayRate: holidayRateString.replace('$', ''),\n            isPercent: false\n          }\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    debugLog('MBA5931', 'Available TIME_UNITS:', TIME_UNITS);\n    debugLog('MBA5931', 'TIME_UNIT_MAPPING:', TIME_UNIT_MAPPING);\n    debugLog('MBA5931', 'Current base_rate_unit:', serviceData.rates?.base_rate_unit);\n    debugLog('MBA5931', 'Displayed unit text:', serviceData.rates?.base_rate_unit ? \n      (BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit] || serviceData.rates.base_rate_unit) : \n      TIME_UNITS[0]);\n  }, [serviceData.rates?.base_rate_unit]);\n\n  // Watch for changes to isOvernight and update rate unit accordingly\n  useEffect(() => {\n    if (serviceData.isOvernight) {\n      debugLog('MBA5931', 'Overnight service detected, forcing Per Night rate unit');\n      setServiceData(prev => ({\n        ...prev,\n        rates: {\n          ...prev.rates,\n          base_rate_unit: 'Per Night'\n        }\n      }));\n    }\n  }, [serviceData.isOvernight]);\n\n  // Helper function to check if there's an unsaved custom rate\n  const hasUnsavedCustomRate = () => {\n    // If the custom rate form is open, we consider it as unsaved\n    // regardless of whether fields have content\n    const result = customChargeVisible;\n    \n    debugLog('MBAno34othg0v', 'hasUnsavedCustomRate check:', { \n      customChargeVisible, \n      title: newCustomRate.title,\n      rate: newCustomRate.rate,\n      description: newCustomRate.description,\n      result \n    });\n    \n    return result;\n  };\n\n  // Add effect to check if trying to update service while custom rate is being added\n  useEffect(() => {\n    debugLog('MBAno34othg0v', 'isUpdatingService changed:', {\n      isUpdatingService,\n      hasUnsaved: hasUnsavedCustomRate()\n    });\n    \n    if (!isUpdatingService) {\n      // Skip processing when isUpdatingService becomes false\n      return;\n    }\n    \n    // Check if there's an unsaved rate\n    const hasUnsaved = hasUnsavedCustomRate();\n    \n    // Only show warning if isUpdatingService becomes true while there's an unsaved rate\n    if (hasUnsaved) {\n      debugLog('MBAno34othg0v', 'Showing unsaved rate warning modal');\n      // Show the modal\n      setShowUnsavedRateWarning(true);\n      // Reset the isUpdatingService flag after showing the modal\n      if (setIsUpdatingService) {\n        debugLog('MBAno34othg0v', 'Setting isUpdatingService to FALSE to prevent API call');\n        setIsUpdatingService(false);\n      }\n    } else {\n      debugLog('MBAno34othg0v', 'No unsaved custom rate, allowing update to proceed');\n      // Here we would directly call the API, but we need to add that functionality to props\n      if (setIsUpdatingService) {\n        // Signal to parent that it's OK to proceed\n        debugLog('MBAno34othg0v', 'Setting isUpdatingService to TRUE to allow parent to call API');\n        setIsUpdatingService(true);\n        \n        // This will trigger the parent component to call its callServiceApi function\n        if (typeof onProceedWithUpdate === 'function') {\n          debugLog('MBAno34othg0v', 'Calling onProceedWithUpdate directly');\n          onProceedWithUpdate();\n        }\n      }\n    }\n  }, [isUpdatingService]);\n\n  // Close dropdowns when clicking outside\n  const handlePressOutside = () => {\n    if (showTimeUnitDropdown) setShowTimeUnitDropdown(false);\n    if (showThresholdDropdown) setShowThresholdDropdown(false);\n  };\n\n  const formatNumericInput = (text) => {\n    // Remove any non-numeric characters except decimal point\n    let numericValue = text.replace(/[^0-9.]/g, '');\n    \n    // Ensure only one decimal point\n    const parts = numericValue.split('.');\n    if (parts.length > 2) {\n      numericValue = parts[0] + '.' + parts.slice(1).join('');\n    }\n    \n    // Limit to 2 decimal places\n    if (parts[1]?.length > 2) {\n      numericValue = parts[0] + '.' + parts[1].slice(0, 2);\n    }\n\n    return numericValue;\n  };\n\n  const handleBaseRateChange = (text) => {\n    const numericValue = formatNumericInput(text);\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        base_rate: numericValue\n      }\n    }));\n  };\n\n  const handleTimeUnitSelect = (unit) => {\n    // If this is an overnight service, always use 'Per Night'\n    // Otherwise, map the user-friendly display value to the backend value\n    const selectedUnit = serviceData.isOvernight ? \n      'Per Night' : \n      TIME_UNIT_MAPPING[unit];\n    \n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        base_rate_unit: selectedUnit\n      }\n    }));\n    setShowTimeUnitDropdown(false);\n  };\n\n  const handleAdditionalAnimalRateChange = (text) => {\n    const numericValue = formatNumericInput(text);\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalAnimalRate: numericValue\n      }\n    }));\n  };\n\n  const handleThresholdSelect = (threshold) => {\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalAnimalThreshold: threshold\n      }\n    }));\n    setShowThresholdDropdown(false);\n  };\n\n  const handleHolidayRateChange = (text) => {\n    const numericValue = formatNumericInput(text);\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        holidayRate: numericValue\n      }\n    }));\n  };\n\n  const toggleHolidayRateType = (isPercent) => {\n    setIsHolidayRatePercent(isPercent);\n    // Update the serviceData with the new holiday rate type\n    setServiceData(prevData => ({\n      ...prevData,\n      rates: {\n        ...prevData.rates,\n        isPercent: isPercent\n      }\n    }));\n  };\n\n  // Calculate the dollar amount for percentage holiday rate\n  const calculateHolidayRateDollarValue = () => {\n    const baseRate = parseFloat(serviceData.rates?.base_rate) || 0;\n    const holidayRatePercent = parseFloat(serviceData.rates?.holidayRate) || 0;\n    \n    if (baseRate > 0 && holidayRatePercent > 0) {\n      const dollarValue = (baseRate * holidayRatePercent / 100).toFixed(2);\n      return `$${dollarValue}`;\n    }\n    return null;\n  };\n\n  // Format holiday rate based on type (% or $)\n  const getFormattedHolidayRate = () => {\n    const value = serviceData.rates?.holidayRate || '';\n    if (!value) return '';\n    \n    return isHolidayRatePercent ? `${value}%` : `$${value}`;\n  };\n\n  const handleCustomRateChange = (field, value) => {\n    if (field === 'rate') {\n      value = formatNumericInput(value);\n    }\n    setNewCustomRate(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleAddCustomRate = () => {\n    if (!customChargeVisible) {\n      debugLog('MBAno34othg0v', 'Opening custom rate form');\n      setCustomChargeVisible(true);\n      setIsEditingExistingRate(false);\n      return;\n    }\n\n    // Check for title\n    if (!newCustomRate.title.trim()) {\n      debugLog('MBAno34othg0v', 'Missing custom rate title');\n      return;\n    }\n    \n    // Check for rate value\n    if (!newCustomRate.rate) {\n      debugLog('MBAno34othg0v', 'Missing custom rate value');\n      return;\n    }\n\n    // Validate rate value\n    const rateValue = parseFloat(newCustomRate.rate);\n    if (isNaN(rateValue) || rateValue <= 0) {\n      debugLog('MBAno34othg0v', 'Invalid rate value:', newCustomRate.rate);\n      return;\n    }\n\n    debugLog('MBAno34othg0v', 'Saving custom rate successfully:', newCustomRate);\n    \n    // Save the custom rate to the service data\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: [...(prev.additionalRates || []), newCustomRate]\n    }));\n    \n    // Reset the form state\n    setNewCustomRate({\n      title: '',\n      rate: '',\n      description: ''\n    });\n    \n    // Close the form\n    setCustomChargeVisible(false);\n    setIsEditingExistingRate(false);\n  };\n\n  const handleEditCustomRate = (index) => {\n    // Get the rate to edit\n    const rateToEdit = serviceData.additionalRates[index];\n    \n    // Set the form with existing values\n    setNewCustomRate({\n      title: rateToEdit.title,\n      rate: rateToEdit.rate,\n      description: rateToEdit.description || ''\n    });\n    \n    // Show the custom charge form and indicate we're editing\n    setCustomChargeVisible(true);\n    setIsEditingExistingRate(true);\n    \n    // Remove the old item\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: prev.additionalRates.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleDeleteCustomRate = (index) => {\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: prev.additionalRates.filter((_, i) => i !== index)\n    }));\n  };\n\n  const renderDropdown = (options, selectedValue, onSelect, visible, containerStyle) => {\n    if (!visible) return null;\n\n    return (\n      <View style={[styles.dropdownContainer, containerStyle]}>\n        <ScrollView style={styles.dropdownScroll} contentContainerStyle={styles.dropdownScrollContent}>\n          {options.map((option) => (\n            <TouchableOpacity\n              key={option}\n              style={[\n                styles.dropdownItem,\n                selectedValue === option && styles.selectedDropdownItem\n              ]}\n              onPress={() => onSelect(option)}\n            >\n              <Text style={[\n                styles.dropdownText,\n                selectedValue === option && styles.selectedDropdownText\n              ]}>\n                {option}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePressOutside}>\n      <ScrollView style={styles.container}>\n        <Text style={styles.title}>Set Your Rates</Text>\n\n        {/* Error Modal */}\n        <Modal\n          visible={showUnsavedRateWarning}\n          transparent={true}\n          animationType=\"fade\"\n          onRequestClose={() => setShowUnsavedRateWarning(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <MaterialCommunityIcons\n                name=\"alert-circle\"\n                size={48}\n                color={theme.colors.error}\n                style={styles.modalIcon}\n              />\n              <Text style={styles.modalTitle}>Unsaved Custom Rate</Text>\n              <Text style={styles.modalText}>\n                Please save or cancel your custom rate before updating the service.\n              </Text>\n              <TouchableOpacity\n                style={styles.modalButton}\n                onPress={() => {\n                  debugLog('MBAno34othg0v', 'Modal OK button clicked');\n                  // Just close the modal, keep the form open for editing\n                  setShowUnsavedRateWarning(false);\n                }}\n              >\n                <Text style={styles.modalButtonText}>OK</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n\n        <View style={[styles.rateContainer, { zIndex: 3 }]}>\n          <Text style={styles.label}>Base Rate <Text style={{ color: theme.colors.placeHolderText }}>(Required)</Text></Text>\n          <View style={styles.rateInputGroup}>\n            <View style={[styles.currencyInputContainer, { flex: 1 }]}>\n              <Text style={styles.currencySymbol}>$</Text>\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0.00\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.base_rate || ''}\n                onChangeText={handleBaseRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n            </View>\n            <View style={{ flex: 1, zIndex: 1 }}>\n              <TouchableOpacity\n                style={[\n                  styles.unitSelector,\n                  serviceData.isOvernight && styles.disabledUnitSelector\n                ]}\n                onPress={() => {\n                  if (!serviceData.isOvernight) {\n                    setShowThresholdDropdown(false);\n                    setShowTimeUnitDropdown(!showTimeUnitDropdown);\n                  }\n                }}\n                disabled={serviceData.isOvernight}\n              >\n                <Text style={styles.unitText}>\n                  {serviceData.isOvernight ? \n                    'Per Night' : \n                    (serviceData.rates?.base_rate_unit ? \n                      (BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit] || serviceData.rates.base_rate_unit) : \n                      TIME_UNITS[0])}\n                </Text>\n                {!serviceData.isOvernight && (\n                  <MaterialCommunityIcons\n                    name={showTimeUnitDropdown ? 'chevron-up' : 'chevron-down'}\n                    size={24}\n                    color={theme.colors.text}\n                  />\n                )}\n              </TouchableOpacity>\n              {renderDropdown(\n                availableTimeUnits,\n                serviceData.rates?.base_rate_unit,\n                handleTimeUnitSelect,\n                showTimeUnitDropdown && !serviceData.isOvernight,\n                { width: '100%' }\n              )}\n            </View>\n          </View>\n        </View>\n\n        <View style={[styles.rateContainer, { zIndex: 2 }]}>\n          <Text style={styles.label}>Additional Animal Rate <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n          <View style={styles.rateInputGroup}>\n            <View style={[styles.currencyInputContainer, { flex: 1 }]}>\n              <Text style={styles.currencySymbol}>$</Text>\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0.00\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.additionalAnimalRate || ''}\n                onChangeText={handleAdditionalAnimalRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n            </View>\n            <View style={{ flex: 1, zIndex: 1 }}>\n              <TouchableOpacity\n                style={styles.unitSelector}\n                onPress={() => {\n                  setShowTimeUnitDropdown(false);\n                  setShowThresholdDropdown(!showThresholdDropdown);\n                }}\n              >\n                <Text style={styles.unitText}>\n                  After {serviceData.rates?.additionalAnimalThreshold || '1'} animals\n                </Text>\n                <MaterialCommunityIcons\n                  name={showThresholdDropdown ? 'chevron-up' : 'chevron-down'}\n                  size={24}\n                  color={theme.colors.text}\n                />\n              </TouchableOpacity>\n              {renderDropdown(\n                ANIMAL_THRESHOLDS,\n                serviceData.rates?.additionalAnimalThreshold,\n                handleThresholdSelect,\n                showThresholdDropdown,\n                { width: '100%' }\n              )}\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.holidayRateContainer}>\n          <View style={styles.holidayRateHeader}>\n            <Text style={styles.label}>Holiday Rate <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n            <View style={styles.rateTypeToggleContainer}>\n              <TouchableOpacity\n                style={[\n                  styles.toggleButton,\n                  isHolidayRatePercent ? styles.activeToggleButton : styles.inactiveToggleButton,\n                  {\n                    borderTopLeftRadius: 8,\n                    borderBottomLeftRadius: 8,\n                    borderTopRightRadius: 0,\n                    borderBottomRightRadius: 0\n                  }\n                ]}\n                onPress={() => toggleHolidayRateType(true)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  isHolidayRatePercent ? styles.activeToggleText : styles.inactiveToggleText\n                ]}>%</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  styles.toggleButton,\n                  !isHolidayRatePercent ? styles.activeToggleButton : styles.inactiveToggleButton,\n                  {\n                    borderTopLeftRadius: 0,\n                    borderBottomLeftRadius: 0,\n                    borderTopRightRadius: 8,\n                    borderBottomRightRadius: 8\n                  }\n                ]}\n                onPress={() => toggleHolidayRateType(false)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  !isHolidayRatePercent ? styles.activeToggleText : styles.inactiveToggleText\n                ]}>$</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={[\n            styles.holidayRateInputWrapper, \n            { marginBottom: isHolidayRatePercent && serviceData.rates?.base_rate && serviceData.rates?.holidayRate ? 28 : 0 }\n          ]}>\n            <View style={isHolidayRatePercent ? styles.percentageInputContainer : styles.currencyInputContainer}>\n              {!isHolidayRatePercent && <Text style={styles.currencySymbol}>$</Text>}\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.holidayRate === '0' ? '' : serviceData.rates?.holidayRate}\n                onChangeText={handleHolidayRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              {isHolidayRatePercent && <Text style={styles.percentageSymbol}>%</Text>}\n            </View>\n            {isHolidayRatePercent && serviceData.rates?.base_rate && serviceData.rates?.holidayRate && (\n              <Text style={styles.calculatedHolidayRate}>\n                {calculateHolidayRateDollarValue()}\n              </Text>\n            )}\n          </View>\n        </View>\n\n        <View style={styles.customRatesContainer}>\n          <Text style={styles.label}>Custom Charges <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n          {serviceData.additionalRates?.length > 0 ? (\n            serviceData.additionalRates.map((rate, index) => (\n              <View key={index} style={styles.customRateItem}>\n                <View style={styles.customRateContent}>\n                  <View style={styles.customRateTitleContainer}>\n                    <Text style={styles.customRateTitle}>{rate.title}</Text>\n                    {rate.description ? (\n                      <Text style={styles.customRateDescription} numberOfLines={1}>\n                        {rate.description}\n                      </Text>\n                    ) : null}\n                  </View>\n                  <Text style={styles.customRateAmount}>${rate.rate}</Text>\n                </View>\n                <View style={styles.customRateActions}>\n                  <TouchableOpacity\n                    onPress={() => handleEditCustomRate(index)}\n                    style={styles.customRateAction}\n                    activeOpacity={0.7}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"pencil\"\n                      size={20}\n                      color={theme.colors.mainColors.main}\n                    />\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => handleDeleteCustomRate(index)}\n                    style={styles.customRateAction}\n                    activeOpacity={0.7}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"delete\"\n                      size={20}\n                      color=\"#F26969\"\n                    />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ))\n          ) : customChargeVisible ? null : (\n            <Text style={styles.noCustomRatesText}>\n              No custom charges added yet. Use the button below to add one.\n            </Text>\n          )}\n          \n          {/* Custom charge form or Add button */}\n          {customChargeVisible ? (\n            <View style={styles.newCustomRateContainer}>\n              <Text style={styles.customRateFormHeading}>\n                {isEditingExistingRate ? 'Edit Custom Rate' : 'New Custom Rate'}\n              </Text>\n              <TextInput\n                style={styles.customRateInput}\n                placeholder=\"Charge Title\"\n                value={newCustomRate.title}\n                onChangeText={(text) => handleCustomRateChange('title', text)}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              <View style={styles.currencyInputContainer}>\n                <Text style={styles.currencySymbol}>$</Text>\n                <TextInput\n                  style={styles.currencyInput}\n                  placeholder=\"0.00\"\n                  keyboardType=\"decimal-pad\"\n                  value={newCustomRate.rate}\n                  onChangeText={(text) => handleCustomRateChange('rate', text)}\n                  placeholderTextColor={theme.colors.placeHolderText}\n                />\n              </View>\n              <TextInput\n                style={[styles.customRateInput, styles.textArea]}\n                placeholder=\"Description\"\n                value={newCustomRate.description}\n                onChangeText={(text) => handleCustomRateChange('description', text)}\n                placeholderTextColor={theme.colors.placeHolderText}\n                multiline={true}\n                numberOfLines={3}\n              />\n              <View style={styles.customRateButtonContainer}>\n                <TouchableOpacity\n                  style={styles.cancelRateButton}\n                  onPress={() => {\n                    debugLog('MBAno34othg0v', 'Cancel button pressed for custom rate form');\n                    // Reset all form-related state\n                    setCustomChargeVisible(false);\n                    setNewCustomRate({\n                      title: '',\n                      rate: '',\n                      description: ''\n                    });\n                    setIsEditingExistingRate(false);\n                    // Ensure any warning modal is also closed\n                    setShowUnsavedRateWarning(false);\n                  }}\n                >\n                  <MaterialCommunityIcons\n                    name=\"close\"\n                    size={20}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.cancelRateText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.addRateButton, \n                    styles.saveRateButton,\n                    (!newCustomRate.title.trim() || !newCustomRate.rate || \n                      isNaN(parseFloat(newCustomRate.rate)) || parseFloat(newCustomRate.rate) <= 0) \n                      ? styles.disabledSaveButton : {}\n                  ]}\n                  onPress={handleAddCustomRate}\n                  disabled={!newCustomRate.title.trim() || !newCustomRate.rate || \n                    isNaN(parseFloat(newCustomRate.rate)) || parseFloat(newCustomRate.rate) <= 0}\n                >\n                  <MaterialCommunityIcons\n                    name=\"content-save\"\n                    size={20}\n                    color={theme.colors.surface}\n                  />\n                  <Text style={styles.saveRateText}>\n                    {isEditingExistingRate ? 'Update Custom Rate' : 'Save Custom Rate'}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          ) : (\n            <TouchableOpacity\n              style={styles.addRateButton}\n              onPress={handleAddCustomRate}\n            >\n              <MaterialCommunityIcons\n                name=\"plus\"\n                size={20}\n                color={theme.colors.mainColors.main}\n              />\n              <Text style={styles.addRateText}>Add Rate</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ScrollView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateContainer: {\n    marginBottom: 24,\n  },\n  label: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateInputGroup: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  currencyInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  currencySymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginRight: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  currencyInput: {\n    flex: 1,\n    fontSize: 16,\n    color: theme.colors.text,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  unitSelector: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    paddingVertical: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  unitText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginTop: 4,\n    zIndex: 1000,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    maxHeight: 200,\n  },\n  dropdownScroll: {\n    width: '100%',\n  },\n  dropdownScrollContent: {\n    flexGrow: 1,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  selectedDropdownItem: {\n    backgroundColor: theme.colors.mainColors.mainLight,\n  },\n  dropdownText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedDropdownText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  holidayRateContainer: {\n    marginBottom: 24,\n  },\n  holidayRateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  rateTypeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderRadius: 8,\n  },\n  toggleButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 40,\n    width: 44,\n    height: 36,\n  },\n  activeToggleButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n  },\n  inactiveToggleButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  toggleButtonText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  activeToggleText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  inactiveToggleText: {\n    color: theme.colors.text,\n  },\n  holidayRateInputWrapper: {\n    position: 'relative',\n  },\n  percentageInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  percentageInput: {\n    flex: 1,\n    fontSize: 16,\n    color: theme.colors.text,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  percentageSymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginRight: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calculatedHolidayRate: {\n    position: 'absolute',\n    bottom: -24,\n    right: 4,\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    paddingTop: 4,\n  },\n  customRatesContainer: {\n    // marginTop: 24,\n  },\n  customRateItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  customRateContent: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  customRateActions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  customRateTitleContainer: {\n    flex: 1,\n    marginRight: 16,\n  },\n  customRateTitle: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateDescription: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    marginTop: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  newCustomRateContainer: {\n    gap: 12,\n    marginBottom: 16,\n  },\n  customRateInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.surface,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  textArea: {\n    height: 80,\n    textAlignVertical: 'top',\n  },\n  addRateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n    borderRadius: 8,\n    justifyContent: 'center',\n  },\n  addRateText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateButtonContainer: {\n    flexDirection: 'row',\n    gap: 12,\n    marginTop: 12,\n  },\n  cancelRateButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    justifyContent: 'center',\n    backgroundColor: theme.colors.surface,\n  },\n  cancelRateText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  saveRateButton: {\n    flex: 2,\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n  },\n  disabledSaveButton: {\n    backgroundColor: theme.colors.placeHolderText,\n    borderColor: theme.colors.placeHolderText,\n  },\n  saveRateText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateFormHeading: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noCustomRatesText: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 16,\n    fontStyle: 'italic',\n  },\n  customRateAction: {\n    padding: 8,\n    borderRadius: 4,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    padding: 24,\n    borderRadius: 12,\n    maxWidth: '85%',\n    minWidth: 280,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  modalIcon: {\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 12,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 24,\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n  modalButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n  },\n  modalButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  disabledUnitSelector: {\n    backgroundColor: theme.colors.surface,\n    opacity: 0.8,\n    borderColor: theme.colors.modernBorder,\n  },\n});\n\nexport default RatesAndReviewStep; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n  Platform,\n  ScrollView,\n  ActivityIndicator\n} from 'react-native';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport StepProgressIndicator from './common/StepProgressIndicator';\nimport { debugLog } from '../context/AuthContext';\nimport CategorySelectionStep from './serviceCreation/CategorySelectionStep';\nimport ServiceDetailsStep from './serviceCreation/ServiceDetailsStep';\nimport RatesAndReviewStep from './serviceCreation/RatesAndReviewStep';\nimport { createService, updateService } from '../api/API';\nimport { useToast } from './ToastProvider';\n\nconst STEPS = {\n  CATEGORY_SELECTION: {\n    id: 0,\n    name: 'Categories & Types'\n  },\n  SERVICE_DETAILS: {\n    id: 1,\n    name: 'Service Details'\n  },\n  RATES_AND_REVIEW: {\n    id: 2,\n    name: 'Rates & Review'\n  }\n};\n\n// Import the hardcoded animal categories directly\nconst ANIMAL_CATEGORIES = {\n  // Farm animals\n  'Horse': 'Farm Animals',\n  'Cow': 'Farm Animals',\n  'Sheep': 'Farm Animals',\n  'Goat': 'Farm Animals',\n  'Pig': 'Farm Animals',\n  \n  // Domestic\n  'Dogs': 'Domestic',\n  'Cats': 'Domestic',\n  'Birds': 'Domestic',\n  'Rabbits': 'Domestic',\n  'Hamsters': 'Domestic',\n  \n  // Reptiles\n  'Snake': 'Reptiles',\n  'Lizard': 'Reptiles',\n  'Turtle': 'Reptiles',\n  'Gecko': 'Reptiles',\n  'Chameleon': 'Reptiles',\n  \n  // Aquatic\n  'Fish': 'Aquatic',\n  'Frog': 'Aquatic',\n  'Newt': 'Aquatic',\n  'Axolotl': 'Aquatic',\n  \n  // Invertebrates\n  'Spider': 'Invertebrates',\n  'Scorpion': 'Invertebrates',\n  'Crab': 'Invertebrates',\n  'Snail': 'Invertebrates',\n  'Millipede': 'Invertebrates'\n};\n\n// Also define GENERAL_CATEGORIES so we can look up category IDs from names\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n  }\n];\n\nconst ServiceCreationModal = ({ \n  visible, \n  onClose,\n  onSave,\n  initialService = null,\n  setHasUnsavedChanges \n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  const [currentStep, setCurrentStep] = useState(STEPS.CATEGORY_SELECTION.id);\n  const [serviceData, setServiceData] = useState({\n    generalCategories: [],\n    animalTypes: [],\n    serviceName: '',\n    serviceDescription: '',\n    isOvernight: false,\n    rates: {\n      base_rate: '',\n      base_rate_unit: 'Per Visit',\n      additionalAnimalRate: '',\n      additionalAnimalThreshold: '1',\n      hasHolidayRate: false,\n      holidayRate: '0',\n      isPercent: true\n    },\n    additionalRates: []\n  });\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isAddingCustomRate, setIsAddingCustomRate] = useState(false);\n  const showToast = useToast();\n\n  // Reset state when modal is opened\n  useEffect(() => {\n    if (visible) {\n      setCurrentStep(STEPS.CATEGORY_SELECTION.id);\n      setError(null);\n      \n      if (initialService) {\n        debugLog('MBA123456', 'Initializing with service data:', initialService);\n        setIsEditMode(true);\n        \n        // Extract animal types from the object\n        let animalTypesArray = [];\n        \n        // Log the animal types we're working with\n        if (initialService.animalTypes && initialService.animalTypes.length > 0) {\n          // If animalTypes is already provided in the expected format, use it directly\n          debugLog('MBA123456', 'Using pre-formatted animalTypes array:', initialService.animalTypes);\n          animalTypesArray = initialService.animalTypes;\n        } else if (initialService.animal_types) {\n          debugLog('MBA123456', 'Using animal_types from backend:', initialService.animal_types);\n          \n          // Handle if animal_types is a dictionary mapping animal types to categories\n          if (typeof initialService.animal_types === 'object' && !Array.isArray(initialService.animal_types)) {\n            debugLog('MBA123456', 'Processing animal_types as dictionary');\n            Object.entries(initialService.animal_types).forEach(([animalName, categoryName]) => {\n              // Find the category ID for this category name\n              const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n              debugLog('MBA123456', `Adding animal: ${animalName}, category: ${categoryName}, categoryId: ${category?.id || 'not found'}`);\n              \n              animalTypesArray.push({\n                name: animalName,\n                categoryName: categoryName,\n                categoryId: category ? category.id : null, \n                isCustom: false\n              });\n            });\n          }\n        } else {\n          debugLog('MBA123456', 'No animal types found in data');\n        }\n        \n        debugLog('MBA123456', 'Final converted animal types:', animalTypesArray);\n        \n        // Parse holiday rate\n        let holidayRate = '0';\n        let isPercent = true;\n        \n        if (initialService.holiday_rate) {\n          if (typeof initialService.holiday_rate === 'string') {\n            if (initialService.holiday_rate.includes('%')) {\n              holidayRate = initialService.holiday_rate.replace('%', '');\n              isPercent = true;\n            } else if (initialService.holiday_rate.includes('$')) {\n              holidayRate = initialService.holiday_rate.replace('$', '');\n              isPercent = false;\n            } else {\n              holidayRate = initialService.holiday_rate;\n              isPercent = initialService.holiday_rate_is_percent !== undefined \n                ? initialService.holiday_rate_is_percent \n                : true;\n            }\n          } else {\n            holidayRate = initialService.holiday_rate.toString();\n            isPercent = initialService.holiday_rate_is_percent !== undefined \n              ? initialService.holiday_rate_is_percent \n              : true;\n          }\n        }\n        \n        // Format additional rates\n        let additionalRates = [];\n        if (initialService.additional_rates && Array.isArray(initialService.additional_rates)) {\n          additionalRates = initialService.additional_rates.map(rate => ({\n            title: rate.title,\n            rate: rate.rate,\n            description: rate.description || ''\n          }));\n        }\n        \n        // Set the service data with the provided initial values\n        setServiceData({\n          service_id: initialService.service_id,\n          generalCategories: [], // We don't need to populate this as it's derived from animalTypes\n          animalTypes: animalTypesArray,\n          serviceName: initialService.service_name || '',\n          serviceDescription: initialService.description || '',\n          isOvernight: initialService.is_overnight || false,\n          rates: {\n            base_rate: initialService.base_rate || '',\n            base_rate_unit: initialService.unit_of_time || 'Per Visit',\n            additionalAnimalRate: initialService.additional_animal_rate || '',\n            additionalAnimalThreshold: initialService.applies_after?.toString() || '1',\n            hasHolidayRate: holidayRate !== '0',\n            holidayRate: holidayRate,\n            isPercent: isPercent\n          },\n          additionalRates: additionalRates\n        });\n      } else {\n        // Reset to default state if not in edit mode\n        setIsEditMode(false);\n        setServiceData({\n          generalCategories: [],\n          animalTypes: [],\n          serviceName: '',\n          serviceDescription: '',\n          isOvernight: false,\n          rates: {\n            base_rate: '',\n            base_rate_unit: 'Per Visit',\n            additionalAnimalRate: '',\n            additionalAnimalThreshold: '1',\n            hasHolidayRate: false,\n            holidayRate: '0',\n            isPercent: true\n          },\n          additionalRates: []\n        });\n      }\n    }\n  }, [visible, initialService]);\n\n  const canProceedToNextStep = () => {\n    switch (currentStep) {\n      case STEPS.CATEGORY_SELECTION.id:\n        return serviceData.animalTypes?.length > 0;\n      \n      case STEPS.SERVICE_DETAILS.id:\n        return (\n          serviceData.serviceName?.trim() &&\n          serviceData.serviceDescription?.trim()\n        );\n      \n      case STEPS.RATES_AND_REVIEW.id:\n        const hasValidBaseRate = serviceData.rates?.base_rate && \n          parseFloat(serviceData.rates.base_rate) > 0;\n        const hasValidAdditionalRate = !serviceData.rates?.additionalAnimalRate || \n          parseFloat(serviceData.rates.additionalAnimalRate) >= 0;\n        const hasValidHolidayRate = !serviceData.rates?.hasHolidayRate || \n          (serviceData.rates.holidayRate && parseFloat(serviceData.rates.holidayRate) >= 0);\n        \n        return hasValidBaseRate && hasValidAdditionalRate && hasValidHolidayRate;\n      \n      default:\n        return false;\n    }\n  };\n\n  // Direct API call function that doesn't depend on state\n  const callServiceApi = async () => {\n    debugLog('MBAno34othg0v', 'Directly calling API without state dependencies');\n    \n    debugLog('MBA54321', 'Original serviceData:', serviceData);\n    setIsSubmitting(true);\n    \n    try {\n      // Format animal types as a dictionary mapping animal types to their categories\n      const animalTypesDict = {};\n      \n      serviceData.animalTypes.forEach(animalType => {\n        const animalName = typeof animalType === 'string' ? animalType : animalType.name;\n        \n        // Use the hardcoded ANIMAL_CATEGORIES mapping\n        if (ANIMAL_CATEGORIES[animalName]) {\n          animalTypesDict[animalName] = ANIMAL_CATEGORIES[animalName];\n        } else {\n          // For custom animals, use the category name if it exists\n          if (typeof animalType === 'object' && animalType.categoryName) {\n            animalTypesDict[animalName] = animalType.categoryName;\n          } else {\n            animalTypesDict[animalName] = 'Other';\n          }\n        }\n      });\n      \n      // Log animal types dictionary for debugging\n      debugLog('MBA54321', 'Animal types dictionary created:', animalTypesDict);\n      \n      // Check what type of data we have for generalCategories (for backward compatibility)\n      const categories = serviceData.generalCategories.map(cat => \n        typeof cat === 'string' ? cat : (cat.name || 'Uncategorized')\n      );\n      \n      // Format holiday rate with appropriate symbol based on type\n      const holidayRateValue = serviceData.rates.holidayRate || '0';\n      const holidayRateString = holidayRateValue && holidayRateValue !== '0' ? \n        (serviceData.rates.isPercent ? `${holidayRateValue}%` : `$${holidayRateValue}`) : \n        '0';\n      \n      // Format the data according to the backend's expected format\n      const formattedData = {\n        service_name: serviceData.serviceName,\n        description: serviceData.serviceDescription,\n        animal_types: animalTypesDict,\n        base_rate: serviceData.rates.base_rate,\n        additional_animal_rate: serviceData.rates.additionalAnimalRate || '0',\n        holiday_rate: holidayRateString,\n        applies_after: parseInt(serviceData.rates.additionalAnimalThreshold) || 1,\n        unit_of_time: serviceData.rates.base_rate_unit,\n        is_overnight: serviceData.isOvernight || false,\n        additional_rates: serviceData.additionalRates.map(rate => ({\n          title: rate.title,\n          description: rate.description || '',\n          rate: rate.rate\n        }))\n      };\n      \n      // If in edit mode, include the service_id in the formatted data\n      if (isEditMode && serviceData.service_id) {\n        formattedData.service_id = serviceData.service_id;\n      }\n      \n      debugLog('MBA54321', 'Formatted data for backend:', formattedData);\n      \n      let response;\n      \n      // Call the appropriate API based on edit mode\n      if (isEditMode && serviceData.service_id) {\n        response = await updateService(formattedData);\n        debugLog('MBA54321', 'Service updated successfully, response:', response);\n      } else {\n        response = await createService(formattedData);\n        debugLog('MBA54321', 'Service created successfully, response:', response);\n      }\n      \n      // Show success toast\n      showToast({\n        message: isEditMode ? 'Service updated successfully!' : 'Service created successfully!',\n        type: 'success',\n        duration: 3000\n      });\n      \n      // Format the data according to what ServiceManager expects\n      const serviceManagerData = {\n        // Use the service_id from the response\n        service_id: response.service_id,\n        // Use the formatted service_name from the response if available\n        serviceName: response.service_name || serviceData.serviceName,\n        serviceDescription: serviceData.serviceDescription,\n        // Use the formatted unit_of_time from the response if available\n        lengthOfService: response.unit_of_time || serviceData.rates.base_rate_unit,\n        isOvernight: serviceData.isOvernight || false,\n        is_active: response.is_active !== undefined ? response.is_active : true,\n        rates: {\n          base_rate: serviceData.rates.base_rate,\n          additionalAnimalRate: serviceData.rates.additionalAnimalRate || '0',\n          holidayRate: holidayRateString\n        },\n        generalCategories: serviceData.generalCategories.map(cat => {\n          if (typeof cat === 'string') {\n            return {\n              id: cat.toLowerCase().replace(/\\s+/g, '_'),\n              name: cat,\n              isCustom: false\n            };\n          }\n          return {\n            id: cat.id || cat.name.toLowerCase().replace(/\\s+/g, '_'),\n            name: cat.name,\n            isCustom: cat.isCustom || false\n          };\n        }),\n        animalTypes: serviceData.animalTypes.map(type => {\n          if (typeof type === 'string') {\n            return {\n              name: type,\n              categoryId: null,\n              isCustom: false\n            };\n          }\n          \n          // Use the categoryName if it exists, otherwise we need to include it\n          return {\n            name: type.name,\n            categoryId: type.categoryId,\n            categoryName: type.categoryName || 'Other', // Ensure categoryName is included\n            isCustom: type.isCustom || false\n          };\n        }),\n        additionalRates: serviceData.additionalRates.map(rate => ({\n          label: rate.title,\n          value: rate.rate,\n          description: rate.description || ''\n        }))\n      };\n      \n      // If the response has additional_rates, use those instead\n      if (response.additional_rates && Array.isArray(response.additional_rates)) {\n        serviceManagerData.additionalRates = response.additional_rates.map(rate => ({\n          label: rate.title,\n          value: rate.rate,\n          description: rate.description || ''\n        }));\n      }\n      \n      debugLog('MBA54321', 'Formatted data for ServiceManager:', serviceManagerData);\n      \n      // Call the onSave prop with properly formatted data\n      if (onSave) {\n        onSave(serviceManagerData);\n      }\n      \n      // Reset form and close modal\n      setServiceData({\n        generalCategories: [],\n        animalTypes: [],\n        serviceName: '',\n        serviceDescription: '',\n        isOvernight: false,\n        rates: {\n          base_rate: '',\n          base_rate_unit: 'Per Visit',\n          additionalAnimalRate: '',\n          additionalAnimalThreshold: '1',\n          hasHolidayRate: false,\n          holidayRate: '0',\n          isPercent: true\n        },\n        additionalRates: []\n      });\n      \n      setCurrentStep(STEPS.CATEGORY_SELECTION.id);\n      setHasUnsavedChanges(true);\n      onClose();\n    } catch (error) {\n      debugLog('MBA54321', 'Error saving service:', error);\n      debugLog('MBA54321', 'Error response:', error.response?.data);\n      \n      // Show error toast\n      showToast({\n        message: `Failed to ${isEditMode ? 'update' : 'create'} service: ${error.response?.data?.error || error.message}`,\n        type: 'error',\n        duration: 4000\n      });\n      \n      setError(`Failed to ${isEditMode ? 'update' : 'create'} service. Please try again.`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleNext = () => {\n    debugLog('MBAno34othg0v', 'handleNext called, currentStep:', currentStep);\n    \n    if (!canProceedToNextStep()) {\n      setError('Please complete all required fields before proceeding');\n      return;\n    }\n\n    setError(null);\n    if (currentStep < STEPS.RATES_AND_REVIEW.id) {\n      setCurrentStep(prev => prev + 1);\n    } else {\n      // We're on the final step (Rates & Review)\n      debugLog('MBAno34othg0v', 'Final step, checking for unsaved custom rates');\n      \n      // Signal to RatesAndReviewStep that we're attempting to update\n      setIsAddingCustomRate(true);\n      \n      // Don't even call handleSaveService\n      // We'll call the API directly from the RatesAndReviewStep when appropriate\n    }\n  };\n\n  const handleSaveService = async () => {\n    debugLog('MBAno34othg0v', 'DEPRECATED: handleSaveService called, this should not happen');\n  };\n\n  const handleBack = () => {\n    if (currentStep > STEPS.CATEGORY_SELECTION.id) {\n      setCurrentStep(prev => prev - 1);\n    } else {\n      onClose();\n    }\n  };\n\n  const renderCurrentStep = () => {\n    debugLog('MBA54321 Rendering step:', currentStep, 'with serviceData:', serviceData);\n    \n    switch (currentStep) {\n      case STEPS.CATEGORY_SELECTION.id:\n        return (\n          <CategorySelectionStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n          />\n        );\n      case STEPS.SERVICE_DETAILS.id:\n        return (\n          <ServiceDetailsStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n          />\n        );\n      case STEPS.RATES_AND_REVIEW.id:\n        return (\n          <RatesAndReviewStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n            isUpdatingService={isAddingCustomRate}\n            setIsUpdatingService={setIsAddingCustomRate}\n            onProceedWithUpdate={callServiceApi}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"fade\"\n      onRequestClose={handleBack}\n      transparent={true}\n    >\n      <View style={styles.modalOverlay}>\n        <SafeAreaView style={styles.modalContent}>\n          <View style={styles.stepIndicatorContainer}>\n            <StepProgressIndicator\n              steps={Object.values(STEPS).map(step => step.name)}\n              currentStep={currentStep}\n            />\n          </View>\n          <ScrollView style={styles.scrollContent} contentContainerStyle={styles.scrollContentContainer}>\n            <View style={styles.content}>\n              {renderCurrentStep()}\n            </View>\n            {error && (\n              <Text style={styles.errorText}>{error}</Text>\n            )}\n          </ScrollView>\n          <View style={styles.footer}>\n            <TouchableOpacity\n              style={styles.cancelButton}\n              onPress={handleBack}\n              disabled={isSubmitting}\n            >\n              <Text style={styles.cancelButtonText}>\n                {currentStep > STEPS.CATEGORY_SELECTION.id ? 'Back' : 'Cancel'}\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.nextButton,\n                (!canProceedToNextStep() || isSubmitting) && styles.disabledButton\n              ]}\n              onPress={handleNext}\n              disabled={!canProceedToNextStep() || isSubmitting}\n            >\n              {isSubmitting && currentStep === STEPS.RATES_AND_REVIEW.id ? (\n                <ActivityIndicator color={theme.colors.surface} size=\"small\" />\n              ) : (\n                <Text style={[\n                  styles.nextButtonText,\n                  !canProceedToNextStep() && styles.disabledButtonText\n                ]}>\n                  {currentStep === STEPS.RATES_AND_REVIEW.id ? \n                    (isEditMode ? 'Update Service' : 'Create Service') : \n                    'Next'}\n                </Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </SafeAreaView>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  modalContent: {\n    width: '95%',\n    maxWidth: Platform.OS === 'web' ? 550 : '100%',\n    maxHeight: '90%',\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  stepIndicatorContainer: {\n    width: '100%',\n    paddingVertical: 12,\n    backgroundColor: theme.colors.background,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  },\n  scrollContent: {\n    flex: 1,\n  },\n  scrollContentContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  footer: {\n    flexDirection: 'row',\n    padding: 16,\n    justifyContent: 'space-between',\n    gap: 12,\n    backgroundColor: theme.colors.background,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.modernBorder,\n  },\n  cancelButton: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  nextButton: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.placeHolderText,\n  },\n  nextButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  disabledButtonText: {\n    color: theme.colors.surface,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceCreationModal; ","import React, { useContext, useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Switch } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport { debugLog } from '../context/AuthContext';\n\nconst ProfessionalServiceCard = ({ \n  item, \n  index, \n  onEdit, \n  onDelete \n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [isActive, setIsActive] = useState(item.is_active !== false); // Default to true if not specified\n  \n  // Log the item data when it changes\n  useEffect(() => {\n    debugLog('MBA3377', 'ProfessionalServiceCard Item Data:', item);\n  }, [item]);\n\n  const handleToggleActive = () => {\n    setIsActive(!isActive);\n    // Here you would normally update this to the backend\n  };\n\n  // Determine background color for pricing section based on service type\n  const getPricingBackgroundColor = () => {\n    // This will cycle through different colors based on the index\n    const colors = [\n      // theme.colors.proDashboard.main, // Light green\n      // theme.colors.proDashboard.secondary, // Light blue\n      // theme.colors.proDashboard.tertiary, // Light orange\n    ];\n    return colors[index % colors.length];\n  };\n\n  // Format the display of unit of time in a user-friendly way\n  const formatUnitOfTime = (unitOfTime) => {\n    if (!unitOfTime) return 'visit';\n    \n    // If we receive a nicely formatted unit of time from the backend, use it\n    return unitOfTime;\n  };\n\n  return (\n    <View style={styles.serviceCard}>\n      <View style={styles.cardHeader}>\n        <Text style={styles.serviceName} numberOfLines={2} ellipsizeMode=\"tail\">{item.serviceName}</Text>\n        <View style={styles.activeToggleContainer}>\n          <Text style={isActive ? styles.activeText : styles.inactiveText}>\n            {isActive ? 'Active' : 'Inactive'}\n          </Text>\n          <Switch\n            value={isActive}\n            onValueChange={handleToggleActive}\n            trackColor={{\n              false: theme.colors.quaternary, \n              true: theme.colors.primary\n            }}\n            thumbColor={theme.colors.surfaceContrast}\n            style={styles.switch}\n          />\n        </View>\n      </View>\n\n      <View style={[styles.ratesContainer, { backgroundColor: getPricingBackgroundColor() }]}>\n        <View style={styles.rateRow}>\n          <Text style={styles.rateLabel}>Base Rate</Text>\n          <Text style={styles.rateValue}>${item.rates.base_rate || 'N/A'}/{formatUnitOfTime(item.lengthOfService)}</Text>\n        </View>\n        \n        {item.rates.additionalAnimalRate && (\n          <View style={styles.rateRow}>\n            <Text style={styles.rateLabel}>Additional Animal</Text>\n            <Text style={styles.rateValue}>${item.rates.additionalAnimalRate}</Text>\n          </View>\n        )}\n        {item.rates.holidayRate && (\n          <View style={styles.rateRow}>\n            <Text style={styles.rateLabel}>Holiday Rate</Text>\n            <Text style={styles.rateValue}>{item.rates.holidayRate}</Text>\n          </View>\n        )}\n        {item.additionalRates && item.additionalRates.map((rate, idx) => (\n          <View key={idx} style={styles.rateRow}>\n            <Text style={styles.rateLabel}>{rate.label}</Text>\n            <Text style={styles.rateValue}>${rate.value}</Text>\n          </View>\n        ))}\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={() => onDelete(index)} style={styles.deleteButton}>\n          <MaterialCommunityIcons name=\"trash-can\" size={20} color={'#F26969'} />\n          <Text style={styles.deleteButtonText}>Delete</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => onEdit(index)} style={styles.editButton}>\n          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.surfaceContrast} />\n          <Text style={styles.buttonText}>Edit</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  serviceCard: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: \"#000\",\n    display: 'flex',\n    justifyContent: 'center',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16,\n  },\n  serviceName: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    flex: 1,\n    flexWrap: 'wrap',\n    marginRight: 8,\n  },\n  activeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  activeText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  inactiveText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  switch: {\n    transform: [{ scaleX: 0.8 }, { scaleY: 0.8 }],\n  },\n  ratesContainer: {\n    gap: 12,\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  rateRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 4,\n  },\n  rateLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  rateValue: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 8,\n  },\n  editButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 10,\n    borderRadius: 8,\n    gap: 8,\n  },\n  deleteButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: '#F26969',\n    borderWidth: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    gap: 8,\n  },\n  buttonText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.surfaceContrast,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  deleteButtonText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    color: '#F26969',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ProfessionalServiceCard;","import React, { useState, useRef, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport ServiceCreationModal from './ServiceCreationModal';\nimport ProfessionalServiceCard from './ProfessionalServiceCard';\nimport ConfirmationModal from './ConfirmationModal';\nimport { Portal } from 'react-native-paper';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { deleteService } from '../api/API';\nimport { useToast } from './ToastProvider';\n\n// Define GENERAL_CATEGORIES for mapping category names to IDs\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n  }\n];\n\nconst ServiceManager = ({ services, setServices, setHasUnsavedChanges, isProfessionalTab = false, isMobile = false }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [collapsedServices, setCollapsedServices] = useState([]);\n  const [allCollapsed, setAllCollapsed] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [serviceToDelete, setServiceToDelete] = useState(null);\n  const [hoveredButton, setHoveredButton] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState(null);\n  const { screenWidth, is_DEBUG } = useContext(AuthContext);\n  const [collapseTooltipPosition, setCollapseTooltipPosition] = useState(null);\n  const buttonRef = useRef(null);\n  const collapseButtonRef = useRef(null);\n  const showToast = useToast();\n\n  const toggleCollapseAll = () => {\n    if (allCollapsed) {\n      setCollapsedServices([]);\n    } else {\n      setCollapsedServices(services.map((_, index) => index));\n    }\n    setAllCollapsed(!allCollapsed);\n  };\n\n  const handleEditService = (index) => {\n    const serviceToEdit = services[index];\n    debugLog('MBA87654', 'Original service for editing:', serviceToEdit);\n    \n    // Convert animal_types from object format to array format if needed\n    let formattedAnimalTypes = [];\n    \n    if (serviceToEdit.animal_types && typeof serviceToEdit.animal_types === 'object' && !Array.isArray(serviceToEdit.animal_types)) {\n      // Convert from backend format {animalName: categoryName} to array of objects\n      formattedAnimalTypes = Object.entries(serviceToEdit.animal_types).map(([animalName, categoryName]) => {\n        // Find category ID from category name\n        const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n        const categoryId = category ? category.id : null;\n        \n        return {\n          name: animalName,\n          categoryName: categoryName,\n          categoryId: categoryId,\n          isCustom: false\n        };\n      });\n      \n      debugLog('MBA87654', 'Converted animal_types to array format:', formattedAnimalTypes);\n    } else if (serviceToEdit.animalTypes) {\n      // If we already have animalTypes in the expected format, use it\n      formattedAnimalTypes = serviceToEdit.animalTypes;\n      debugLog('MBA87654', 'Using existing animalTypes array:', formattedAnimalTypes);\n    }\n    \n    // Transform to the format expected by ServiceCreationModal\n    const formattedService = {\n      service_id: serviceToEdit.service_id,\n      service_name: serviceToEdit.service_name || serviceToEdit.serviceName,\n      description: serviceToEdit.description || serviceToEdit.serviceDescription,\n      animal_types: serviceToEdit.animal_types,  // Keep the original format for API calls\n      animalTypes: formattedAnimalTypes,        // Add the formatted version for the UI\n      base_rate: serviceToEdit.base_rate || (serviceToEdit.rates ? serviceToEdit.rates.base_rate : ''),\n      additional_animal_rate: serviceToEdit.additional_animal_rate || (serviceToEdit.rates ? serviceToEdit.rates.additionalAnimalRate : '0'),\n      holiday_rate: serviceToEdit.holiday_rate || (serviceToEdit.rates ? serviceToEdit.rates.holidayRate : '0'),\n      applies_after: serviceToEdit.applies_after || 1,\n      unit_of_time: serviceToEdit.unit_of_time || serviceToEdit.lengthOfService || 'Per Visit',\n      is_overnight: serviceToEdit.is_overnight || serviceToEdit.isOvernight || false,\n      is_active: serviceToEdit.is_active !== undefined ? serviceToEdit.is_active : true,\n      holiday_rate_is_percent: serviceToEdit.holiday_rate_is_percent,\n      additional_rates: serviceToEdit.additional_rates || \n        (serviceToEdit.additionalRates ? serviceToEdit.additionalRates.map(rate => ({\n          title: rate.label || rate.title,\n          rate: rate.value || rate.rate,\n          description: rate.description || ''\n        })) : [])\n    };\n    \n    debugLog('MBA87654', 'Formatted service for editing modal:', formattedService);\n    setEditingService(formattedService);\n    setShowModal(true);\n  };\n\n  const handleDeleteService = (index) => {\n    setServiceToDelete(index);\n    setShowDeleteModal(true);\n  };\n\n  const handleSaveService = (updatedService) => {\n    // Add debugging log for service data received\n    debugLog('MBA8765', 'Service data received from modal:', updatedService);\n    \n    // Check if we're updating an existing service\n    const isEditingExisting = editingService && updatedService.service_id;\n    \n    if (isEditingExisting) {\n      debugLog('MBA8765', 'Updating existing service with ID:', updatedService.service_id);\n      \n      // Find the index of this service in our list by service_id\n      const serviceIndex = services.findIndex(s => s.service_id === updatedService.service_id);\n      \n      if (serviceIndex !== -1) {\n        // Update the service in the array\n        setServices(prev => {\n          const newServices = [...prev];\n          newServices[serviceIndex] = updatedService;\n          return newServices;\n        });\n        \n        debugLog('MBA8765', 'Service updated at index:', serviceIndex);\n      } else {\n        // If not found by ID, just add it\n        debugLog('MBA8765', 'Service ID not found in existing list, adding as new');\n        setServices(prev => [...prev, updatedService]);\n      }\n      \n      setHasUnsavedChanges(true);\n      setEditingService(null);\n      return;\n    }\n    \n    // For new services\n    if (updatedService.service_id) {\n      debugLog('MBA8765', 'New service created on backend with ID:', updatedService.service_id);\n      \n      // Add the new service to the list\n      setServices(prev => [...prev, updatedService]);\n      setHasUnsavedChanges(true);\n      setEditingService(null);\n      return;\n    }\n    \n    // Legacy support for old-format services (should not reach here with new code)\n    debugLog('MBA8765', 'Warning: Falling back to legacy service format handling');\n    \n    // Create animal_types dictionary from animalTypes array\n    const animalTypesDict = {};\n    if (updatedService.animalTypes && Array.isArray(updatedService.animalTypes)) {\n      updatedService.animalTypes.forEach(animal => {\n        if (animal && animal.name) {\n          // Use the categoryName directly from the animal object if available\n          if (animal.categoryName) {\n            animalTypesDict[animal.name] = animal.categoryName;\n          } \n          // Fallback if no categoryName is available\n          else {\n            animalTypesDict[animal.name] = animal.category || 'Other';\n          }\n        }\n      });\n    }\n\n    // Transform the service data to match the backend structure\n    const transformedService = {\n      service_name: updatedService.serviceName,\n      description: updatedService.serviceDescription,\n      unit_of_time: updatedService.lengthOfService,\n      is_overnight: updatedService.isOvernight || false,\n      base_rate: updatedService.rates.base_rate,\n      additional_animal_rate: updatedService.rates.additionalAnimalRate,\n      holiday_rate: updatedService.rates.holidayRate,\n      animal_types: animalTypesDict,\n      additional_rates: updatedService.additionalRates.map(rate => ({\n        title: rate.label,\n        rate: rate.value,\n        description: rate.description\n      }))\n    };\n\n    // Legacy code for handling legacy editing\n    if (editingService) {\n      const existingIndex = services.findIndex(s => \n        s.service_id === editingService.service_id\n      );\n      \n      if (existingIndex !== -1) {\n        setServices(prev => {\n          const newServices = [...prev];\n          newServices[existingIndex] = transformedService;\n          return newServices;\n        });\n      } else {\n        setServices(prev => [...prev, transformedService]);\n      }\n    } else {\n      setServices(prev => [...prev, transformedService]);\n    }\n    \n    setHasUnsavedChanges(true);\n    setEditingService(null);\n  };\n\n  const toggleCollapse = (index) => {\n    setCollapsedServices((prev) =>\n      prev.includes(index)\n        ? prev.filter((i) => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  const confirmDelete = async () => {\n    try {\n      // Get the service ID from the selected service\n      const serviceToRemove = services[serviceToDelete];\n      if (!serviceToRemove || !serviceToRemove.service_id) {\n        showToast({\n          message: 'Unable to identify service for deletion',\n          type: 'error',\n          duration: 3000\n        });\n        setShowDeleteModal(false);\n        return;\n      }\n\n      // Call the API to delete the service\n      await deleteService(serviceToRemove.service_id);\n\n      // Remove from UI if successful\n      setServices(prevServices => \n        prevServices.filter((_, i) => i !== serviceToDelete)\n      );\n      \n      setHasUnsavedChanges(true);\n      setShowDeleteModal(false);\n      \n      showToast({\n        message: 'Service deleted successfully',\n        type: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      // Handle the error case\n      const errorMessage = error.response?.data?.error || 'Failed to delete service';\n      \n      showToast({\n        message: errorMessage,\n        type: 'error',\n        duration: 3000\n      });\n      \n      setShowDeleteModal(false);\n    }\n  };\n\n  const showTooltip = (ref, tooltipText, setPosition) => {\n    if (ref && ref.current) {\n      try {\n        setTimeout(() => {\n          // Get the button's DOM element\n          const element = ref.current;\n          // Get the button's bounding rectangle relative to the viewport\n          if (element.getBoundingOwnerRect) {\n            const rect = element.getBoundingOwnerRect();\n            \n            setPosition({\n              x: rect.left + (rect.width / 2),\n              y: rect.top, // Position tooltip at the top of the button\n              text: tooltipText\n            });\n            \n            setHoveredButton(tooltipText);\n          } else {\n            console.error('Error: getBoundingOwnerRect method not found on element');\n          }\n        }, 0);\n      } catch (error) {\n        console.error('Error showing tooltip:', error);\n      }\n    }\n  };\n\n  const renderService = ({ item, index }) => {\n    if (!item || typeof item !== 'object') {\n      console.warn('Invalid item detected:', item);\n      return null;\n    }\n\n    debugLog('MBA8765', 'Rendering service item:', item);\n\n    // Check if this is a service that already has a service_id (created on backend)\n    if (item.service_id) {\n      debugLog('MBA8765', 'This is a backend-created service with ID:', item.service_id);\n      \n      // If the item structure already matches what ProfessionalServiceCard expects, use it directly\n      if (item.serviceName && item.rates) {\n        return (\n          <ProfessionalServiceCard\n            key={`service-${index}`}\n            item={item}\n            index={index}\n            onEdit={() => handleEditService(index)}\n            onDelete={() => handleDeleteService(index)}\n            isCollapsed={collapsedServices.includes(index)}\n            onToggleCollapse={() => toggleCollapse(index)}\n            isProfessionalTab={isProfessionalTab}\n          />\n        );\n      }\n    }\n\n    // Convert animal_types from dictionary to array format\n    let animalTypesArray = [];\n    if (item.animal_types && typeof item.animal_types === 'object' && !Array.isArray(item.animal_types)) {\n      // Convert dictionary format to array format\n      animalTypesArray = Object.entries(item.animal_types).map(([name, category]) => ({\n        name: name,\n        categoryId: undefined, // We don't have exact category IDs, just names\n        category: category,    // Store the category name\n        isCustom: false        // Default to false as we don't know\n      }));\n    } else if (Array.isArray(item.animal_types)) {\n      // If it's already an array, use it directly\n      animalTypesArray = item.animal_types;\n    }\n    \n    // Transform the service data to match the frontend structure\n    const serviceData = {\n      service_id: item.service_id,\n      serviceName: item.service_name,\n      description: item.description,\n      lengthOfService: item.unit_of_time,\n      is_active: item.is_active,\n      generalCategories: item.categories?.map(cat => ({\n        id: cat.id,\n        name: cat.name,\n        isCustom: cat.is_custom\n      })) || [],\n      animalTypes: animalTypesArray,\n      rates: {\n        base_rate: item.base_rate,\n        additionalAnimalRate: item.additional_animal_rate,\n        holidayRate: item.holiday_rate\n      },\n      additionalRates: item.additional_rates?.map(rate => ({\n        label: rate.title,\n        value: rate.rate,\n        description: rate.description\n      })) || []\n    };\n\n    return (\n      <ProfessionalServiceCard\n        key={`service-${index}`}\n        item={serviceData}\n        index={index}\n        onEdit={() => handleEditService(index)}\n        onDelete={() => handleDeleteService(index)}\n        isCollapsed={collapsedServices.includes(index)}\n        onToggleCollapse={() => toggleCollapse(index)}\n        isProfessionalTab={isProfessionalTab}\n      />\n    );\n  };\n\n  // {console.log('Services:', services)}\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.serviceListContainer,\n        {\n          maxWidth: 1200,\n          marginHorizontal: 'auto',\n          width: '100%',\n          paddingHorizontal: isMobile ? 20 : 24,\n          paddingTop: isMobile ? 0 : 44,\n        }\n      ]}>\n        <View style={styles.headerContainer}>\n          <Text style={styles.sectionTitle}>Service Manager</Text>\n          <View style={styles.headerActions}>\n            {/* <TouchableOpacity \n              ref={collapseButtonRef}\n              onPress={toggleCollapseAll} \n              style={styles.collapseButton}\n              onMouseEnter={() => {\n                try {\n                  showTooltip(\n                    collapseButtonRef, \n                    allCollapsed ? 'Expand All' : 'Collapse All', \n                    setCollapseTooltipPosition\n                  );\n                } catch (error) {\n                  console.error('Error showing collapse tooltip:', error);\n                }\n              }}\n              onMouseLeave={() => {\n                setHoveredButton(null);\n                setCollapseTooltipPosition(null);\n              }}\n            >\n              <MaterialCommunityIcons \n                name={allCollapsed ? \"chevron-down\" : \"chevron-up\"} \n                size={24} \n                color={theme.colors.text} \n              />\n            </TouchableOpacity> */}\n            \n            <TouchableOpacity\n              ref={buttonRef}\n              style={styles.addServiceButton}\n              onMouseEnter={() => {\n                try {\n                  showTooltip(buttonRef, 'Add Service', setTooltipPosition);\n                } catch (error) {\n                  console.error('Error showing add tooltip:', error);\n                }\n              }}\n              onMouseLeave={() => {\n                setHoveredButton(null);\n                setTooltipPosition(null);\n              }}\n              onPress={() => {\n                setEditingService(null);\n                setShowModal(true);\n              }}\n            >\n              <MaterialCommunityIcons \n                name=\"plus\" \n                size={20} \n                color={theme.colors.surface} \n              />\n              <Text style={styles.addServiceText}>Add New Service</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {(Array.isArray(services) && services.length > 0) ? (\n          <View style={[styles.servicesGrid, { justifyContent: screenWidth > 600 ? '' : 'center' }]}>\n            {services.map((item, index) => (\n              <View key={`service-wrapper-${index}`} style={styles.serviceCardWrapper}>\n                {renderService({ item, index })}\n              </View>\n            ))}\n          </View>\n        ) : (\n          <View style={styles.emptyContainer}>\n            <Text style={styles.emptyText}>No services yet</Text>\n            <TouchableOpacity \n              style={styles.addButton}\n              onPress={() => setShowModal(true)}\n            >\n              <Text style={styles.addButtonText}>Add Services</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n      \n\n      <ServiceCreationModal\n        visible={showModal}\n        onClose={() => {\n          setShowModal(false);\n          setEditingService(null);\n        }}\n        onSave={handleSaveService}\n        initialService={editingService}\n        setHasUnsavedChanges={setHasUnsavedChanges}\n      />\n\n      <ConfirmationModal\n        visible={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={confirmDelete}\n        actionText=\"delete this service\"\n      />\n\n      {tooltipPosition && (\n        <Portal>\n          <View \n            style={[\n              styles.portalTooltip,\n              {\n                position: 'fixed',\n                top: tooltipPosition.y - 40,\n                left: tooltipPosition.x - 35,\n              }\n            ]}\n          >\n            <Text style={styles.tooltipText}>{tooltipPosition.text}</Text>\n          </View>\n        </Portal>\n      )}\n\n      {collapseTooltipPosition && (\n        <Portal>\n          <View \n            style={[\n              styles.portalTooltip,\n              {\n                position: 'fixed',\n                top: collapseTooltipPosition.y - 40,\n                left: collapseTooltipPosition.x - 35,\n              }\n            ]}\n          >\n            <Text style={styles.tooltipText}>{collapseTooltipPosition.text}</Text>\n          </View>\n        </Portal>\n      )}\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n    zIndex: 9998,\n    elevation: 9998,\n    backgroundColor: theme.colors.surface,\n  },\n  serviceListContainer: {\n    flex: 1,\n    paddingVertical: 0,\n  },\n  servicesGrid: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    paddingBottom: 24,\n  },\n  serviceCardWrapper: {\n    flex: 1,\n    minWidth: 300,\n    maxWidth: 375,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24,\n    position: 'relative',\n    zIndex: 9999,\n    elevation: 9999,\n  },\n  headerActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  collapseButton: {\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  addServiceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 50,\n  },\n  addServiceText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  emptyText: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  addButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 50,\n  },\n  addButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  portalTooltip: {\n    backgroundColor: theme.colors.surface,\n    padding: 8,\n    borderRadius: 4,\n    width: 70,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  tooltipText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceManager;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst RecordedPets = ({ pets }) => {\n  return (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>My Pets</Text>\n      {pets.map((pet) => (\n        <TouchableOpacity key={pet.id} style={styles.petItem}>\n          <View style={styles.petItemContent}>\n            <Image source={{ uri: pet.photo }} style={styles.petPhoto} />\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petDetails}>{pet.type} • {pet.breed} • {pet.age} years old</Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 10,\n  },\n  petItem: {\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 5,\n    width: '100%',\n    maxWidth: 600,\n  },\n  petItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  petPhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10,\n  },\n  petName: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petDetails: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n    flexWrap: 'wrap',\n  },\n});\n\nexport default RecordedPets;","import React from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst EditableSection = ({ \n  title, \n  value, \n  onChangeText, \n  editMode, \n  toggleEditMode, \n  setHasUnsavedChanges,\n  getContentWidth,\n  multiline = true \n}) => {\n  const renderEditableField = () => {\n    return editMode ? (\n      <TextInput\n        value={value}\n        onChangeText={(text) => {\n          onChangeText(text);\n          setHasUnsavedChanges(true);\n        }}\n        style={[\n          styles.input,\n          { width: getContentWidth() },\n          multiline && { height: 100, textAlignVertical: 'top' }\n        ]}\n        multiline={multiline}\n        numberOfLines={multiline ? 4 : 1}\n      />\n    ) : (\n      <Text style={[styles.fieldText, { width: getContentWidth() }]}>\n        {value || `No ${title.toLowerCase()} provided`}\n      </Text>\n    );\n  };\n\n  return (\n    <View style={styles.section}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>{title}</Text>\n        <TouchableOpacity onPress={toggleEditMode}>\n          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n        </TouchableOpacity>\n      </View>\n      {renderEditableField()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    // marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  input: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 10,\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  fieldText: {\n    width: '100%',\n    maxWidth: 600,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 10,\n  },\n});\n\nexport default EditableSection;","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n  Modal,\n} from 'react-native';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport ServiceManager from './ServiceManager';\nimport { theme } from '../styles/theme';\nimport RecordedPets from './RecordedPets';\nimport EditableSection from './EditableSection';\nimport * as ImagePicker from 'expo-image-picker';\n\nconst ProfessionalTab = ({ \n  services, \n  setServices, \n  setHasUnsavedChanges,\n  getContentWidth,\n  pets,\n  editMode,\n  toggleEditMode\n}) => {\n  const [professionalPhoto, setProfessionalPhoto] = useState(null);\n  const [professionalBio, setProfessionalBio] = useState('');\n  const [portfolioPhotos, setPortfolioPhotos] = useState([]);\n  const [facilities, setFacilities] = useState('');\n  const [skills, setSkills] = useState({\n    certifications: [],\n    experience: '',\n    specialties: [],\n  });\n  const [selectedFacilities, setSelectedFacilities] = useState([]);\n  const [facilitiesModalVisible, setFacilitiesModalVisible] = useState(false);\n  const [tempSelectedFacilities, setTempSelectedFacilities] = useState([]);\n\n  const FACILITY_OPTIONS = [\n    // Living Situation\n    { id: 'apartment', label: 'Lives in an apartment' },\n    { id: 'house', label: 'Lives in a house' },\n    { id: 'fenced_yard', label: 'Has a fenced yard' },\n    \n    // Household Environment\n    { id: 'non_smoking', label: 'Non-smoking household' },\n    { id: 'no_children', label: 'No children present' },\n    { id: 'has_children', label: 'Children present' },\n    { id: 'security_system', label: 'Has security system' },\n    \n    // Pet Policies\n    { id: 'dogs_bed', label: 'Dogs allowed on bed' },\n    { id: 'dogs_furniture', label: 'Dogs allowed on furniture' },\n    { id: 'crate_available', label: 'Crate available' },\n    { id: 'separate_areas', label: 'Can separate pets' },\n    \n    // Care Details\n    { id: 'potty_0_2', label: 'Potty breaks every 0-2 hours' },\n    { id: 'potty_2_4', label: 'Potty breaks every 2-4 hours' },\n    { id: 'potty_4_6', label: 'Potty breaks every 4-6 hours' },\n    \n    // Resident Pets\n    { id: 'no_pets', label: 'No resident pets' },\n    { id: 'has_dogs', label: 'Has resident dogs' },\n    { id: 'has_cats', label: 'Has resident cats' },\n    \n    // Additional Features\n    { id: 'air_conditioned', label: 'Air-conditioned' },\n    { id: 'outdoor_area', label: 'Has outdoor play area' },\n    { id: 'emergency_transport', label: 'Emergency transport available' },\n  ];\n\n  const pickProfessionalPhoto = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfessionalPhoto(result.assets[0].uri);\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  const addPortfolioPhoto = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      quality: 1,\n      aspect: [4, 3],\n      allowsMultipleSelection: true,\n      selectionLimit: 10,\n    });\n\n    if (!result.canceled) {\n      const newPhotos = result.assets.map(asset => ({\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n        uri: asset.uri,\n        caption: 'New portfolio photo'\n      }));\n      \n      setPortfolioPhotos(prev => [...prev, ...newPhotos]);\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  const renderEditableField = (label, value, onChangeText, section, multiline = false) => {\n    return editMode[section] ? (\n      <TextInput\n        value={value}\n        onChangeText={(text) => {\n          onChangeText(text);\n          setHasUnsavedChanges(true);\n        }}\n        style={[\n          styles.input,\n          { width: getContentWidth() },\n          multiline && { height: 100, textAlignVertical: 'top' }\n        ]}\n        multiline={multiline}\n        numberOfLines={multiline ? 4 : 1}\n      />\n    ) : (\n      <Text style={[styles.fieldText, { width: getContentWidth() }]}>\n        {value || `No ${label.toLowerCase()} provided`}\n      </Text>\n    );\n  };\n\n  const toggleFacility = (facilityId) => {\n    setSelectedFacilities(prev => {\n      if (prev.includes(facilityId)) {\n        return prev.filter(id => id !== facilityId);\n      } else {\n        return [...prev, facilityId];\n      }\n    });\n    setHasUnsavedChanges(true);\n  };\n\n  const openFacilitiesModal = () => {\n    setTempSelectedFacilities([...selectedFacilities]);\n    setFacilitiesModalVisible(true);\n  };\n\n  const saveFacilities = () => {\n    setSelectedFacilities(tempSelectedFacilities);\n    setFacilitiesModalVisible(false);\n    setHasUnsavedChanges(true);\n  };\n\n  const toggleTempFacility = (facilityId) => {\n    setTempSelectedFacilities(prev => {\n      if (prev.includes(facilityId)) {\n        return prev.filter(id => id !== facilityId);\n      } else {\n        return [...prev, facilityId];\n      }\n    });\n  };\n\n  return (\n    <View style={styles.centeredContent}>\n      {/* Professional Photo Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Profile Photo (Professional)</Text>\n        </View>\n        <View style={styles.profileHeader}>\n          <TouchableOpacity onPress={pickProfessionalPhoto}>\n            {professionalPhoto ? (\n              <Image source={{ uri: professionalPhoto }} style={styles.profilePhoto} />\n            ) : (\n              <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n                <Ionicons name=\"person\" size={60} color={theme.colors.placeholder} />\n              </View>\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Professional Bio Section */}\n      <EditableSection\n        title=\"Professional Bio\"\n        value={professionalBio}\n        onChangeText={setProfessionalBio}\n        editMode={editMode.professionalBio}\n        toggleEditMode={() => toggleEditMode('professionalBio')}\n        setHasUnsavedChanges={setHasUnsavedChanges}\n        getContentWidth={getContentWidth}\n      />\n\n      {/* Services Section */}\n      <View style={styles.section}>\n        <ServiceManager\n          services={services || []}\n          setServices={setServices}\n          setHasUnsavedChanges={setHasUnsavedChanges}\n          isProfessionalTab={true}\n        />\n      </View>\n\n      {/* Portfolio Photos Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Portfolio Photos</Text>\n          <TouchableOpacity onPress={addPortfolioPhoto}>\n            <MaterialCommunityIcons \n              name=\"plus\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.portfolioGrid}>\n          {portfolioPhotos.map((photo) => (\n            <TouchableOpacity \n              key={photo.id} \n              style={styles.portfolioCard}\n              onPress={() => {\n                // Handle photo edit/view\n                // Could add modal to edit caption or view full size\n              }}\n            >\n              <View style={styles.portfolioImageContainer}>\n                <Image \n                  source={{ uri: photo.uri }} \n                  style={styles.portfolioPhoto} \n                />\n              </View>\n              <Text style={styles.portfolioCaption}>{photo.caption}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        {portfolioPhotos.length === 0 && (\n          <Text style={styles.emptyText}>\n            No portfolio photos added yet\n          </Text>\n        )}\n      </View>\n        \n      { /* My Pets Section (Read-Only) */}\n      <RecordedPets pets={pets} />\n\n      {/* Home & Facilities Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Home & Facilities</Text>\n          <TouchableOpacity onPress={openFacilitiesModal}>\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.facilitiesContainer}>\n          {selectedFacilities.map((facilityId) => {\n            const facility = FACILITY_OPTIONS.find(f => f.id === facilityId);\n            return (\n              <View key={facilityId} style={styles.facilityTag}>\n                <Text style={styles.facilityTagText}>{facility.label}</Text>\n              </View>\n            );\n          })}\n          {selectedFacilities.length === 0 && (\n            <Text style={styles.emptyText}>No facilities selected</Text>\n          )}\n        </View>\n\n        {/* Facilities Selection Modal */}\n        <Modal\n          visible={facilitiesModalVisible}\n          transparent={true}\n          animationType=\"slide\"\n          onRequestClose={() => setFacilitiesModalVisible(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Select Home & Facilities</Text>\n                <TouchableOpacity onPress={() => setFacilitiesModalVisible(false)}>\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              \n              <ScrollView style={styles.modalScroll}>\n                {FACILITY_OPTIONS.map((facility) => (\n                  <TouchableOpacity\n                    key={facility.id}\n                    style={[\n                      styles.modalFacilityTag,\n                      tempSelectedFacilities.includes(facility.id) && styles.facilityTagSelected\n                    ]}\n                    onPress={() => toggleTempFacility(facility.id)}\n                  >\n                    <Text style={[\n                      styles.modalFacilityText,\n                      tempSelectedFacilities.includes(facility.id) && styles.facilityTagTextSelected\n                    ]}>\n                      {facility.label}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </ScrollView>\n\n              <View style={styles.modalFooter}>\n                <TouchableOpacity \n                  style={[styles.modalButton, styles.cancelButton]}\n                  onPress={() => setFacilitiesModalVisible(false)}\n                >\n                  <Text style={styles.modalButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={[styles.modalButton, styles.saveButton]}\n                  onPress={saveFacilities}\n                >\n                  <Text style={styles.modalButtonText2}>Save</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n\n      {/* Skills & Experience Section */}\n      {/* <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Skills & Experience</Text>\n          <TouchableOpacity onPress={() => toggleEditMode('skills')}>\n            <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        {renderEditableField('Experience', skills.experience, \n          (text) => setSkills(prev => ({ ...prev, experience: text })), \n          'skills', \n          true\n        )}\n      </View> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredContent: {\n    width: '100%',\n    maxWidth: 600,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  profileHeader: {\n    alignItems: 'center',\n    marginBottom: 20,\n    width: '100%',\n    maxWidth: 600,\n  },\n  profilePhoto: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n  },\n  profilePhotoPlaceholder: {\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  input: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 10,\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n  },\n  fieldText: {\n    width: '100%',\n    maxWidth: 600,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 10,\n  },\n  portfolioGrid: {\n    width: '100%',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    gap: 16,\n  },\n  portfolioCard: {\n    width: '48%',\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    overflow: 'hidden',\n    elevation: 2,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  portfolioImageContainer: {\n    aspectRatio: 4/3,\n    width: '100%',\n  },\n  portfolioPhoto: {\n    width: '100%',\n    height: '100%',\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n  },\n  portfolioCaption: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    padding: 8,\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: theme.colors.placeholder,\n    marginTop: 16,\n  },\n  facilitiesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    paddingHorizontal: 4,\n  },\n  facilityTag: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    marginBottom: 8,\n  },\n  facilityTagSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  facilityTagText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.small,\n  },\n  facilityTagTextSelected: {\n    color: theme.colors.surface,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '90%',\n    maxWidth: 500,\n    backgroundColor: theme.colors.background,\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n  },\n  modalScroll: {\n    maxHeight: '70%',\n  },\n  modalFacilityTag: {\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    marginBottom: 8,\n  },\n  modalFacilityText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.primary,\n  },\n  modalFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    padding: 12,\n    borderRadius: 8,\n    width: '48%',\n    alignItems: 'center',\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  modalButtonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  modalButtonText2: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ProfessionalTab;","import React, { useState } from 'react';\nimport { Platform, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\n\n// Called in DefaultSettingsModal.js\n// Called in MyProfile.js\n// Called in BookingDetails.js\n\nconst DatePicker = ({ \n  value, \n  onChange, \n  placeholder = 'Select Date',\n  displayFormat = (date) => date, // Optional custom display format\n  disabled = false,\n  isInModal = false // New prop to handle modal context differently\n}) => {\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const dateValue = value ? new Date(value) : new Date();\n\n  const handleChange = (event, selectedDate) => {\n    const currentDate = selectedDate || dateValue;\n    \n    // Only close picker on Android after selection\n    if (Platform.OS === 'android') {\n      setShowDatePicker(false);\n    }\n    \n    if (selectedDate) {\n      onChange(currentDate.toISOString().split('T')[0]);\n    }\n  };\n\n  if (Platform.OS === 'web') {\n    const handleWrapperEvents = (e) => {\n      if (isInModal) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const handleInputChange = (e) => {\n      if (!disabled) {\n        onChange(e.target.value);\n      }\n    };\n\n    return (\n      <div \n        onClick={handleWrapperEvents}\n        onMouseDown={handleWrapperEvents}\n      >\n        <input\n          type=\"date\"\n          value={value || ''}\n          onChange={handleInputChange}\n          style={{\n            ...styles.webDatePicker,\n            ...(disabled ? styles.disabledInput : {}),\n            cursor: disabled ? 'default' : 'pointer'\n          }}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </div>\n    );\n  } else if (Platform.OS === 'ios') {\n    return (\n      <DateTimePicker\n        value={dateValue}\n        mode=\"date\"\n        display=\"default\"\n        onChange={handleChange}\n        disabled={disabled}\n      />\n    );\n  } else {\n    return (\n      <>\n        <TouchableOpacity \n          onPress={() => !disabled && setShowDatePicker(true)}\n          style={[\n            styles.androidButton,\n            disabled && styles.disabledInput\n          ]}\n          disabled={disabled}\n        >\n          <Text style={[\n            styles.dateText,\n            disabled && styles.disabledText\n          ]}>\n            {value ? displayFormat(value) : placeholder}\n          </Text>\n        </TouchableOpacity>\n        {Platform.OS === 'android' && showDatePicker && (\n          <DateTimePicker\n            value={dateValue}\n            mode=\"date\"\n            display=\"default\"\n            onChange={handleChange}\n            disabled={disabled}\n          />\n        )}\n      </>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  webDatePicker: {\n    padding: 8,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    backgroundColor: theme.colors.background,\n  },\n  androidButton: {\n    padding: 8,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  disabledInput: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  disabledText: {\n    color: theme.colors.placeholder,\n  }\n});\n\nexport default DatePicker;","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\n\nconst BackHeader = ({ \n  title, \n  onBackPress, \n  rightIcon = null, // Optional right icon\n  onRightPress = null, // Optional right icon press handler\n  rightComponent = null, // Add this prop\n  customStyles = {} \n}) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={[styles.header, customStyles]}>\n      <TouchableOpacity onPress={onBackPress} style={styles.backButton}>\n        <MaterialCommunityIcons \n          name=\"arrow-left\" \n          size={24} \n          color={theme.colors.primary} \n        />\n      </TouchableOpacity>\n      \n      <Text style={styles.headerText}>{title}</Text>\n      \n      {rightComponent ? rightComponent : (\n        rightIcon && (\n          <TouchableOpacity \n            onPress={onRightPress} \n            style={styles.rightButton}\n          >\n            <MaterialCommunityIcons \n              name={rightIcon} \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        )\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    zIndex: 100,\n    elevation: 100,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  headerText: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    flex: 1, // This allows the title to take up remaining space\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  rightButton: {\n    marginLeft: 16,\n  },\n});\n\nexport default BackHeader;","import React, { useState, useEffect } from 'react';\nimport { View, SafeAreaView, Platform, StatusBar, StyleSheet, Dimensions } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst CrossPlatformView = ({ \n  children, \n  style,\n  useSafeArea = true,\n  backgroundColor = theme.colors.background,\n  fullWidthHeader = false,\n  contentWidth = '800px'\n}) => {\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const updateDimensions = () => {\n        setWindowWidth(Dimensions.get('window').width);\n      };\n\n      window.addEventListener('resize', updateDimensions);\n      return () => {\n        window.removeEventListener('resize', updateDimensions);\n      };\n    }\n  }, []);\n\n  // For web platform\n  if (Platform.OS === 'web') {\n    // Split children into header and content if fullWidthHeader is true\n    const headerContent = fullWidthHeader ? children[0] : null;\n    const mainContent = fullWidthHeader ? children.slice(1) : children;\n\n    return (\n      <div style={{ \n        backgroundColor,\n        width: '100%',\n        maxWidth: '100%',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        ...style,\n      }}>\n        {fullWidthHeader && (\n          <div style={{ \n            width: '100%', \n            backgroundColor,\n          }}>\n            {headerContent}\n          </div>\n        )}\n        <div style={{\n          ...styles.webContainer,\n          maxWidth: contentWidth,\n          width: '100%',\n          flex: 1,\n          overflow: 'hidden',\n        }}>\n          {mainContent}\n        </div>\n      </div>\n    );\n  }\n\n  // For iOS\n  if (Platform.OS === 'ios' && useSafeArea) {\n    return (\n      <SafeAreaView style={[styles.container, { backgroundColor }, style]}>\n        {children}\n      </SafeAreaView>\n    );\n  }\n\n  // For Android or when SafeAreaView is disabled\n  return (\n    <View style={[\n      styles.container,\n      { \n        paddingTop: useSafeArea ? StatusBar.currentHeight : 0,\n        backgroundColor \n      },\n      style\n    ]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    width: '100%',\n    maxWidth: '100%',\n    overflow: 'hidden',\n  },\n  webContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '85vh',\n    width: '100%',\n    maxWidth: '100%',\n    overflow: 'hidden',\n  },\n});\n\nexport default CrossPlatformView;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image, Modal, Alert, ScrollView, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport * as Location from 'expo-location';\nimport * as ImagePicker from 'expo-image-picker';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport { updateProfileInfo } from '../../api/API';\nimport { useToast } from '../../components/ToastProvider';\n\nconst FACILITY_PRESETS = [\n  { id: 'fenced_yard', icon: 'fence', title: 'Fenced Yard', description: 'Secure outdoor space for pets' },\n  { id: 'pet_door', icon: 'door', title: 'Pet Door', description: 'Easy access to outdoor areas' },\n  { id: 'air_conditioning', icon: 'air-conditioner', title: 'Climate Control', description: 'Temperature controlled environment' },\n  { id: 'security_cameras', icon: 'cctv', title: 'Security Cameras', description: '24/7 monitoring capability' },\n  { id: 'separate_room', icon: 'door-closed', title: 'Separate Pet Room', description: 'Dedicated space for pets' },\n  { id: 'pet_gates', icon: 'gate', title: 'Pet Gates', description: 'Indoor barriers for pet safety' },\n  { id: 'pool', icon: 'pool', title: 'Pool', description: 'Swimming area (with safety features)' },\n  { id: 'cleaning_station', icon: 'shower-head', title: 'Pet Cleaning Station', description: 'Dedicated pet washing area' },\n  { id: 'first_aid', icon: 'medical-bag', title: 'Pet First Aid Kit', description: 'Emergency medical supplies' },\n  { id: 'food_storage', icon: 'food-variant', title: 'Pet Food Storage', description: 'Dedicated food storage area' },\n];\n\nconst INSURANCE_OPTIONS = [\n  { id: 'none', label: 'No Insurance', description: 'I do not have insurance' },\n  { id: 'petplan', label: 'PetPlan Insurance', description: 'Comprehensive pet insurance coverage' },\n  { id: 'trupanion', label: 'Trupanion', description: 'Lifetime coverage for your pets' },\n  { id: 'custom', label: 'Custom Insurance', description: 'Upload my own insurance card' }\n];\n\nconst AddressForm = ({ address, setAddress }) => (\n  <View style={styles.addressForm}>\n    <TextInput\n      style={styles.addressInput}\n      value={address.street}\n      onChangeText={(text) => setAddress(prev => ({ ...prev, street: text }))}\n      placeholder=\"Street Address\"\n    />\n    <TextInput\n      style={styles.addressInput}\n      value={address.apartment}\n      onChangeText={(text) => setAddress(prev => ({ ...prev, apartment: text }))}\n      placeholder=\"Apartment/Suite (optional)\"\n    />\n    <View style={styles.addressRow}>\n      <TextInput\n        style={[styles.addressInput, { flex: 2 }]}\n        value={address.city}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, city: text }))}\n        placeholder=\"City\"\n      />\n      <TextInput\n        style={[styles.addressInput, { flex: 1 }]}\n        value={address.state}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, state: text }))}\n        placeholder=\"State\"\n      />\n    </View>\n    <View style={styles.addressRow}>\n      <TextInput\n        style={[styles.addressInput, { flex: 1 }]}\n        value={address.zip}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, zip: text }))}\n        placeholder=\"ZIP Code\"\n        keyboardType=\"numeric\"\n      />\n      <TextInput\n        style={[styles.addressInput, { flex: 2 }]}\n        value={address.country}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, country: text }))}\n        placeholder=\"Country\"\n      />\n    </View>\n  </View>\n);\n\nconst EditOverlay = ({ visible, onClose, title, value, onSave, isLocation, isMultiline, isProfessional, isInsurance, selectedInsurance = { type: 'none', card: null }, onInsuranceChange }) => {\n  const [localValue, setLocalValue] = useState('');\n  const [localInsurance, setLocalInsurance] = useState(selectedInsurance);\n  const [isLoadingLocation, setIsLoadingLocation] = useState(false);\n  const [addressForm, setAddressForm] = useState({\n    street: '',\n    apartment: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: ''\n  });\n  const [insuranceStep, setInsuranceStep] = useState(1); // 1: Choose type, 2: Upload/Select insurance\n  const [insuranceType, setInsuranceType] = useState(null); // 'own' or 'platform'\n\n  useEffect(() => {\n    if (visible) {\n      if (isInsurance) {\n        setLocalInsurance(selectedInsurance);\n        setInsuranceStep(1);\n        setInsuranceType(null);\n      } else if (isLocation) {\n        // Initialize the address form\n        const newAddressForm = {\n          street: '',\n          apartment: '',\n          city: '',\n          state: '',\n          zip: '',\n          country: 'USA'\n        };\n\n        // If value is an object, use its properties\n        if (value && typeof value === 'object') {\n          if ('address' in value) {\n            newAddressForm.street = value.address || '';\n            newAddressForm.apartment = value.apartment || '';\n          } else if ('street' in value) {\n            newAddressForm.street = value.street || '';\n            newAddressForm.apartment = value.apartment || '';\n          }\n          \n          newAddressForm.city = value.city || '';\n          newAddressForm.state = value.state || '';\n          newAddressForm.zip = value.zip || '';\n          newAddressForm.country = value.country || 'USA';\n        }\n        \n        setAddressForm(newAddressForm);\n      } else {\n        setLocalValue(value || '');\n      }\n    }\n  }, [visible]); // Only depend on visibility changing - nothing else\n\n  const handleSave = () => {\n    if (isInsurance) {\n      onSave(localInsurance);\n    } else if (isLocation) {\n      // Pass the entire addressForm object, not a formatted string\n      debugLog('MBA12345', 'Saving location with addressForm:', addressForm);\n      onSave(addressForm);\n    } else {\n      onSave(localValue);\n    }\n    onClose();\n  };\n\n  const handleInsuranceTypeSelect = (type) => {\n    setInsuranceType(type);\n    setInsuranceStep(2);\n  };\n\n  const handleInsuranceChange = async (insuranceType) => {\n    if (insuranceType === 'custom') {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [16, 9],\n        quality: 1,\n      });\n\n      if (!result.canceled) {\n        const newInsurance = { type: 'custom', card: result.assets[0].uri };\n        setLocalInsurance(newInsurance);\n        onInsuranceChange(insuranceType);\n      }\n    } else {\n      const newInsurance = { type: insuranceType, card: null };\n      setLocalInsurance(newInsurance);\n      onInsuranceChange(insuranceType);\n    }\n  };\n\n  const handleGetCurrentLocation = async () => {\n    setIsLoadingLocation(true);\n    try {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission denied', 'Please enable location services to use this feature.');\n        return;\n      }\n      \n      const location = await Location.getCurrentPositionAsync({});\n      const { latitude, longitude } = location.coords;\n      \n      // Get the address from coordinates\n      const [address] = await Location.reverseGeocodeAsync({ latitude, longitude });\n      \n      if (address) {\n        setAddressForm({\n          street: address.street || '',\n          apartment: '',\n          city: address.city || '',\n          state: address.region || '',\n          zip: address.postalCode || '',\n          country: address.country || ''\n        });\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to get current location. Please enter address manually.');\n    } finally {\n      setIsLoadingLocation(false);\n    }\n  };\n\n  const renderInsuranceContent = () => {\n    if (insuranceStep === 1) {\n      return (\n        <View style={styles.insuranceStepContent}>\n          <Text style={styles.insuranceStepTitle}>Choose Insurance Type</Text>\n          <TouchableOpacity \n            style={styles.insuranceTypeButton}\n            onPress={() => handleInsuranceTypeSelect('own')}\n          >\n            <MaterialCommunityIcons name=\"file-document\" size={24} color={theme.colors.primary} />\n            <View style={styles.insuranceTypeContent}>\n              <Text style={styles.insuranceTypeTitle}>Use My Own Insurance</Text>\n              <Text style={styles.insuranceTypeDescription}>Upload your existing insurance card</Text>\n            </View>\n          </TouchableOpacity>\n          {/* TODO: Implement after MVP\n           <TouchableOpacity \n            style={styles.insuranceTypeButton}\n            onPress={() => handleInsuranceTypeSelect('platform')}\n          >\n            <MaterialCommunityIcons name=\"shield-check\" size={24} color={theme.colors.primary} />\n            <View style={styles.insuranceTypeContent}>\n              <Text style={styles.insuranceTypeTitle}>Use Platform Insurance</Text>\n              <Text style={styles.insuranceTypeDescription}>Select from our insurance providers</Text>\n            </View>\n          </TouchableOpacity> */}\n        </View>\n      );\n    }\n\n    if (insuranceStep === 2) {\n      if (insuranceType === 'own') {\n        return (\n          <View style={styles.insuranceStepContent}>\n            <Text style={styles.insuranceStepTitle}>Upload Insurance Card</Text>\n            <TouchableOpacity \n              style={styles.uploadButton}\n              onPress={() => handleInsuranceChange('custom')}\n            >\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.primary} />\n              <Text style={styles.uploadText}>Upload Insurance Card</Text>\n            </TouchableOpacity>\n            {localInsurance.type === 'custom' && localInsurance.card && (\n              <View style={styles.customInsuranceCard}>\n                <Image \n                  source={{ uri: localInsurance.card }} \n                  style={styles.insuranceCardImage}\n                />\n                <Text style={styles.insuranceCardText}>Custom Insurance Card</Text>\n              </View>\n            )}\n          </View>\n        );\n      }\n\n      return (\n        <View style={styles.insuranceStepContent}>\n          <Text style={styles.insuranceStepTitle}>Select Insurance Provider</Text>\n          {INSURANCE_OPTIONS.filter(opt => opt.id !== 'custom').map((option) => (\n            <TouchableOpacity\n              key={option.id}\n              style={[\n                styles.insuranceOption,\n                localInsurance.type === option.id && styles.selectedInsuranceOption\n              ]}\n              onPress={() => {\n                const newInsurance = { type: option.id, card: null };\n                setLocalInsurance(newInsurance);\n                onInsuranceChange(option.id);\n              }}\n            >\n              <MaterialCommunityIcons \n                name={option.id === 'none' ? 'shield-off' : 'shield-check'} \n                size={24} \n                color={theme.colors.primary} \n              />\n              <View style={styles.insuranceOptionContent}>\n                <Text style={styles.insuranceOptionTitle}>{option.label}</Text>\n                <Text style={styles.insuranceOptionDescription}>{option.description}</Text>\n              </View>\n            </TouchableOpacity>\n          ))}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[\n          styles.modalContent,\n          isInsurance && styles.insuranceModalContent\n        ]}>\n          <View style={styles.modalHeader}>\n            {isInsurance && insuranceStep === 2 && (\n              <TouchableOpacity \n                style={styles.backButton}\n                onPress={() => setInsuranceStep(1)}\n              >\n                <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n                <Text style={styles.backButtonText}>Back</Text>\n              </TouchableOpacity>\n            )}\n            <Text style={[\n              styles.modalTitle,\n              isInsurance && insuranceStep === 2 && styles.modalTitleCentered\n            ]}>{title}</Text>\n          </View>\n          \n          {isInsurance ? renderInsuranceContent() : (\n            isLocation ? (\n              <View style={styles.locationContent}>\n                {!isProfessional && (\n                  <TouchableOpacity \n                    style={styles.locationButton}\n                    onPress={handleGetCurrentLocation}\n                    disabled={isLoadingLocation}\n                  >\n                    {isLoadingLocation ? (\n                      <ActivityIndicator color={theme.colors.background} />\n                    ) : (\n                      <>\n                        <MaterialCommunityIcons name=\"crosshairs-gps\" size={20} color={theme.colors.background} />\n                        <Text style={styles.locationButtonText}>Use Current Location</Text>\n                      </>\n                    )}\n                  </TouchableOpacity>\n                )}\n                <AddressForm address={addressForm} setAddress={setAddressForm} />\n              </View>\n            ) : (\n              <TextInput\n                style={[styles.modalInput, isMultiline && styles.multilineInput]}\n                value={localValue}\n                onChangeText={setLocalValue}\n                multiline={isMultiline}\n                numberOfLines={isMultiline ? 4 : 1}\n                autoFocus\n              />\n            )\n          )}\n          \n          <View style={styles.modalButtons}>\n            <TouchableOpacity style={styles.modalCancelButton} onPress={onClose}>\n              <Text style={styles.modalCancelText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={[\n                styles.modalSaveButton,\n                isLocation && !addressForm.street && styles.modalSaveButtonDisabled\n              ]} \n              onPress={handleSave}\n              disabled={isLocation && !addressForm.street}\n            >\n              <Text style={styles.modalSaveText}>Save</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst ProfileInfoTab = ({\n  profilePhoto,\n  email,\n  phone,\n  age,\n  address,\n  city,\n  state,\n  zip,\n  country,\n  bio,\n  about_me,\n  emergencyContact,\n  authorizedHouseholdMembers,\n  editMode,\n  toggleEditMode,\n  onChangeText,\n  pickImage,\n  setHasUnsavedChanges,\n  onSaveComplete,\n  isMobile,\n  rating,\n  reviews,\n  role,\n  isProfessional,\n  insurance = { type: 'none', card: null },\n  onNavigateToTab,\n  name,\n}) => {\n  const { name: authName } = useContext(AuthContext);\n  \n  // Track direct user edits\n  const [hasEdits, setHasEdits] = useState(false);\n  const [editingField, setEditingField] = useState(null);\n  const [editValue, setEditValue] = useState('');\n  const [portfolioPhotos, setPortfolioPhotos] = useState([]);\n  const [selectedInsurance, setSelectedInsurance] = useState(insurance);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  // Add state to track edited values that should display in the UI\n  const [displayValues, setDisplayValues] = useState({\n    name: name || authName || \"Your Name\",\n    email: email || \"\",\n    bio: isProfessional ? bio : about_me,\n    location: `${address || ''}${city ? `, ${city}` : ''}${state ? `, ${state}` : ''}`,\n  });\n  \n  const showToast = useToast();\n  \n  // Track original values to detect changes\n  const [originalValues, setOriginalValues] = useState({\n    name: '',\n    email: '',\n    bio: '',\n    location: '',\n    address: '',\n    apartment: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: 'USA',\n    insurance: { type: 'none', card: null }\n  });\n\n  // Make sure parent component is notified about unsaved changes\n  useEffect(() => {\n    if (setHasUnsavedChanges) {\n      debugLog('MBA230uvj0834h9', 'Updating parent component with hasUnsavedChanges:', hasEdits);\n      setHasUnsavedChanges(hasEdits);\n    }\n  }, [hasEdits, setHasUnsavedChanges]);\n  \n  // Update the initial useEffect to only run once\n  useEffect(() => {\n    debugLog('MBA230uvj0834h9', 'ProfileInfoTab mounted with props:', { \n      propName: name,\n      authName, \n      email, \n      address, \n      bio, \n      about_me, \n      profilePhoto,\n      isProfessional\n    });\n    \n    // Initialize display values on mount ONLY\n    setDisplayValues({\n      name: name || authName || \"Your Name\",\n      email: email || \"\",\n      bio: isProfessional ? bio : about_me,\n      location: `${address || ''}${city ? `, ${city}` : ''}${state ? `, ${state}` : ''}`\n    });\n  }, []); // Empty dependency array - only run on mount\n\n  // Add effect to update bio when isProfessional changes\n  useEffect(() => {\n    // Update the bio/about_me when the role changes\n    setDisplayValues(prev => ({\n      ...prev,\n      bio: isProfessional ? bio : about_me\n    }));\n    \n    debugLog('MBA230uvj0834h9', 'Role changed - updating bio/about_me:', { \n      isProfessional, \n      bio, \n      about_me \n    });\n  }, [isProfessional, bio, about_me]);\n  \n  // Simplify hasFieldChanged to be more direct\n  const hasFieldChanged = (field, value) => {\n    // For insurance, we need to do a deep comparison\n    if (field === 'insurance') {\n      return JSON.stringify(value) !== JSON.stringify(originalValues.insurance);\n    }\n    \n    // For location, we can use a simpler comparison\n    if (field === 'location') {\n      // If it's an object, check all address fields\n      if (typeof value === 'object') {\n        debugLog('MBA12345', 'Checking location changes:', {\n          originalAddress: originalValues.address,\n          newAddress: value.street || value.address,\n          originalApartment: originalValues.apartment,\n          newApartment: value.apartment,\n          originalCity: originalValues.city,\n          newCity: value.city,\n          originalState: originalValues.state,\n          newState: value.state,\n          originalZip: originalValues.zip,\n          newZip: value.zip,\n          originalCountry: originalValues.country,\n          newCountry: value.country\n        });\n        \n        // Check all fields that could have changed\n        return (value.street || value.address || '') !== originalValues.address ||\n               (value.apartment || '') !== originalValues.apartment ||\n               (value.city || '') !== originalValues.city ||\n               (value.state || '') !== originalValues.state ||\n               (value.zip || '') !== originalValues.zip ||\n               (value.country || 'USA') !== originalValues.country;\n      }\n    }\n    \n    // For other fields, direct comparison\n    return value !== originalValues[field];\n  };\n\n  // Handle edit field\n  const handleEdit = (field, currentValue) => {\n    debugLog('MBA230uvj0834h9', `Edit ${field}:`, currentValue);\n    \n    // For location field, pass an address object with all components\n    if (field === 'location') {\n      const addressObject = {\n        address: originalValues.address || '',\n        apartment: originalValues.apartment || '',\n        city: originalValues.city || '',\n        state: originalValues.state || '',\n        zip: originalValues.zip || '',\n        country: originalValues.country || 'USA'\n      };\n      \n      // Set this once - avoid dependence on originalValues in useEffect\n      setEditValue(addressObject);\n    } else {\n      setEditValue(currentValue);\n    }\n    \n    // This triggers the modal to open\n    setEditingField(field);\n    \n    // Mark that we're starting an edit\n    setHasEdits(true);\n    \n    // Notify parent component\n    if (setHasUnsavedChanges) {\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  // Update extractAddressComponents to handle address objects correctly\n  const extractAddressComponents = (locationData) => {\n    // TODO: In the future, implement a proper address validation library\n    // that contains all US addresses (and eventually international addresses)\n    // to provide autocomplete and validation as the user types.\n    \n    // If we're getting an addressForm object from our modal\n    if (locationData && typeof locationData === 'object') {\n      // If it's an address form with street property\n      if ('street' in locationData) {\n        return {\n          address: locationData.street || '',\n          apartment: locationData.apartment || '',\n          city: locationData.city || '',\n          state: locationData.state || '',\n          zip: locationData.zip || '',\n          country: locationData.country || 'USA'\n        };\n      }\n      \n      // If it's our own object with address property\n      if ('address' in locationData) {\n        return {\n          address: locationData.address || '',\n          apartment: locationData.apartment || '',\n          city: locationData.city || '',\n          state: locationData.state || '',\n          zip: locationData.zip || '',\n          country: locationData.country || 'USA'\n        };\n      }\n    }\n    \n    // If we're getting a string (legacy format)\n    // This is a fallback for backward compatibility\n    if (typeof locationData === 'string') {\n      const components = locationData.split(',').map(part => part.trim());\n      return {\n        address: components[0] || '',\n        apartment: '',\n        city: components[1] || '',\n        state: components[2] || '',\n        zip: components[3] || '',\n        country: components[4] || 'USA'\n      };\n    }\n    \n    // Default empty object if all else fails\n    return {\n      address: '',\n      apartment: '',\n      city: '',\n      state: '',\n      zip: '',\n      country: 'USA'\n    };\n  };\n\n  // Set original values when props change\n  useEffect(() => {\n    // Only set original values once on component mount\n    const locationDisplay = `${city || ''}${state ? `, ${state}` : ''}`;\n    \n    setOriginalValues({\n      name: name || authName || \"Your Name\",\n      email: email || \"\",\n      bio: isProfessional ? bio : about_me,\n      location: locationDisplay,\n      address: address || '',\n      apartment: '',\n      city: city || '',\n      state: state || '',\n      zip: zip || '',\n      country: country || 'USA',\n      insurance: insurance\n    });\n  }, []); // Empty dependency array - only run once on mount\n  \n  // Simplify the handleSaveField function to avoid state update loops\n  const handleSaveField = async (field, value) => {\n    // Skip if no changes (keep this logic)\n    if (!hasFieldChanged(field, value)) {\n      debugLog('MBA230uvj0834h9', `No changes detected for ${field}, skipping save.`);\n      setEditingField(null);\n      \n      // Reset state since no changes were made\n      setHasEdits(false);\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(false);\n      }\n      return;\n    }\n\n    debugLog('MBA12345', `Changes detected for ${field}, proceeding with save.`, { value });\n    setIsSaving(true);\n    \n    try {\n      let profileData = {};\n      \n      switch (field) {\n        case 'name':\n          profileData = { name: value };\n          break;\n        case 'email':\n          profileData = { email: value };\n          break;\n        case 'bio':\n          // Make it clearer which field we're updating\n          if (isProfessional) {\n            profileData = { bio: value };\n            debugLog('MBA4928', 'Saving professional bio:', value);\n          } else {\n            profileData = { about_me: value };\n            debugLog('MBA4928', 'Saving client about_me:', value);\n          }\n          break;\n        case 'location':\n          debugLog('MBA12345', 'Extracting address components from:', value);\n          const locationComponents = extractAddressComponents(value);\n          debugLog('MBA12345', 'Extracted components:', locationComponents);\n          \n          profileData = {\n            address: locationComponents.address,\n            apartment: locationComponents.apartment,\n            city: locationComponents.city,\n            state: locationComponents.state,\n            zip: locationComponents.zip,\n            country: locationComponents.country || 'USA'\n          };\n          break;\n        case 'insurance':\n          profileData = { insurance: value };\n          break;\n        default:\n          break;\n      }\n      \n      // Call API to update only the changed field\n      debugLog('MBA4928', `Saving ${field} to backend:`, profileData);\n      const updatedProfile = await updateProfileInfo(profileData);\n      debugLog('MBA4928', `Backend response for ${field}:`, updatedProfile);\n      \n      // Update display values first\n      if (field === 'name') {\n        setDisplayValues({\n          ...displayValues, \n          name: updatedProfile.name || displayValues.name\n        });\n        \n        // Update original values to match the new values from the server\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          name: updatedProfile.name || prevValues.name\n        }));\n      } else if (field === 'email') {\n        setDisplayValues({\n          ...displayValues, \n          email: updatedProfile.email || displayValues.email\n        });\n        \n        // Update original values\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          email: updatedProfile.email || prevValues.email\n        }));\n      } else if (field === 'bio') {\n        // Update display values with the correct field from the response\n        if (isProfessional) {\n          setDisplayValues({\n            ...displayValues, \n            bio: updatedProfile.bio || displayValues.bio\n          });\n          \n          // Update original values\n          setOriginalValues(prevValues => ({\n            ...prevValues,\n            bio: updatedProfile.bio || prevValues.bio\n          }));\n        } else {\n          setDisplayValues({\n            ...displayValues, \n            bio: updatedProfile.about_me || displayValues.bio\n          });\n          \n          // Update original values\n          setOriginalValues(prevValues => ({\n            ...prevValues,\n            bio: updatedProfile.about_me || prevValues.bio\n          }));\n        }\n      } else if (field === 'location') {\n        // Simple location formatting\n        const newLocation = `${updatedProfile.address || ''}${updatedProfile.city ? `, ${updatedProfile.city}` : ''}${updatedProfile.state ? `, ${updatedProfile.state}` : ''}`;\n        setDisplayValues({\n          ...displayValues, \n          location: newLocation\n        });\n        \n        // Update original values for all address components\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          location: newLocation,\n          address: updatedProfile.address || prevValues.address,\n          apartment: updatedProfile.apartment || prevValues.apartment,\n          city: updatedProfile.city || prevValues.city,\n          state: updatedProfile.state || prevValues.state,\n          zip: updatedProfile.zip || prevValues.zip,\n          country: updatedProfile.country || prevValues.country\n        }));\n      } else if (field === 'insurance') {\n        setSelectedInsurance(value);\n        \n        // Update original values\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          insurance: value\n        }));\n      }\n      \n      // Log the updated original values for debugging\n      debugLog('MBA4928', `Original values updated after save for ${field}`, { \n        originalValues: {\n          ...originalValues,\n          [field]: field === 'location' ? \n            `${updatedProfile.address || ''}${updatedProfile.city ? `, ${updatedProfile.city}` : ''}${updatedProfile.state ? `, ${updatedProfile.state}` : ''}` : \n            updatedProfile[field]\n        }\n      });\n      \n      // Success notification\n      showToast({\n        message: `${field.charAt(0).toUpperCase() + field.slice(1)} updated successfully`,\n        type: 'success',\n        duration: 3000\n      });\n      \n      // Reset state since changes were saved\n      setHasEdits(false);\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(false);\n      }\n      \n      // Notify parent component if needed\n      if (onSaveComplete) {\n        onSaveComplete(updatedProfile);\n      }\n    } catch (error) {\n      debugLog('MBA4928', `Error saving ${field}:`, error);\n      \n      // Show error toast\n      showToast({\n        message: `Failed to update ${field}. Please try again.`,\n        type: 'error',\n        duration: 4000\n      });\n      \n      // Keep edit state if there was an error\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(true);\n      }\n    } finally {\n      setIsSaving(false);\n      setEditingField(null);\n    }\n  };\n\n  // Update handle save to call the new function\n  const handleSave = (value) => {\n    debugLog('MBA4928', `Save ${editingField} to value:`, value);\n    \n    if (editingField === 'insurance') {\n      handleSaveField('insurance', value);\n    } else if (editingField === 'location') {\n      handleSaveField('location', value);\n    } else {\n      // For text fields, update the display value first\n      const newDisplayValues = { ...displayValues };\n      newDisplayValues[editingField] = value;\n      setDisplayValues(newDisplayValues);\n      \n      // Then save to backend\n      handleSaveField(editingField, value);\n    }\n  };\n\n  const location = `${city}${state ? `, ${state}` : ''}`;\n  \n  // Display name (use display values instead of context)\n  const displayName = displayValues.name || \"Your Name\";\n  \n  // Simplify the profile photo handler\n  const handleProfilePhotoSelection = async () => {\n    try {\n      // Let the parent component handle the actual image picking\n      const newPhotoUri = await pickImage();\n      \n      if (newPhotoUri) {\n        setIsSaving(true);\n        \n        // Create form data for photo upload\n        const formData = new FormData();\n        const photoFile = {\n          uri: newPhotoUri,\n          type: 'image/jpeg',\n          name: 'profile_photo.jpg'\n        };\n        \n        formData.append('profile_picture', photoFile);\n        \n        // Upload the photo directly\n        debugLog('MBA4928', 'Uploading profile photo');\n        await updateProfileInfo(formData);\n        \n        showToast({\n          message: 'Profile photo updated successfully',\n          type: 'success',\n          duration: 3000\n        });\n        \n        // No need to update local state - let the parent handle it via onSaveComplete\n      }\n    } catch (error) {\n      debugLog('MBA4928', 'Error uploading profile photo:', error);\n      showToast({\n        message: 'Failed to update profile photo. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  \n  // Simplify the portfolio photo handler\n  const handleAddPortfolioPhoto = async () => {\n    try {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      \n      if (!result.canceled) {\n        setIsSaving(true);\n        \n        // Create form data for photo upload\n        const formData = new FormData();\n        const photoFile = {\n          uri: result.assets[0].uri,\n          type: 'image/jpeg',\n          name: 'portfolio_photo.jpg'\n        };\n        \n        formData.append('portfolio_photo', photoFile);\n        \n        // Upload the photo - don't update state based on response\n        debugLog('MBA4928', 'Uploading portfolio photo');\n        await updateProfileInfo(formData);\n        \n        // Just add to local portfolio photos\n        setPortfolioPhotos([...portfolioPhotos, result.assets[0].uri]);\n        \n        showToast({\n          message: 'Portfolio photo added successfully',\n          type: 'success',\n          duration: 3000\n        });\n      }\n    } catch (error) {\n      debugLog('MBA4928', 'Error adding portfolio photo:', error);\n      showToast({\n        message: 'Failed to add portfolio photo. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  const renderFacilitiesSection = () => {\n    // TODO: Remove the !isProfessional once we have a way to edit facilities\n    if (isProfessional || !isProfessional) return null;\n\n    return (\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Home & Facilities</Text>\n          <TouchableOpacity \n            style={styles.editButton}\n            onPress={() => onNavigateToTab('pets_preferences')}\n          >\n            <View style={styles.editButtonContent}>\n              <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n              <Text style={styles.editButtonText}>Edit Facilities</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.facilitiesGrid}>\n          {[\n            { icon: 'home', title: 'Housing Type', value: 'Private House' },\n            { icon: 'tree', title: 'Outdoor Space', value: 'Fenced Yard' },\n            { icon: 'shield-check', title: 'Security', value: '24/7 Monitoring' }\n          ].map((facility, index) => (\n            <View \n              key={facility.title} \n              style={[\n                styles.facilityItem,\n                { backgroundColor: index % 2 === 0 ? \n                  theme.colors.proDashboard.secondary : \n                  theme.colors.proDashboard.tertiary \n                }\n              ]}\n            >\n              <MaterialCommunityIcons name={facility.icon} size={24} color={theme.colors.text} />\n              <View style={styles.facilityContent}>\n                <Text style={styles.facilityTitle}>{facility.title}</Text>\n                <Text style={styles.facilityValue}>{facility.value}</Text>\n              </View>\n            </View>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const renderInsuranceSection = () => {\n    if (!isProfessional) return null;\n\n    return (\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Insurance</Text>\n          <TouchableOpacity \n            style={styles.editButton}\n            onPress={() => handleEdit('insurance', JSON.stringify(selectedInsurance))}\n          >\n            <View style={styles.editButtonContent}>\n              <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n              <Text style={styles.editButtonText}>Edit Insurance</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.insuranceContent}>\n          {selectedInsurance.type === 'custom' && selectedInsurance.card ? (\n            <View style={styles.customInsuranceCard}>\n              <Image \n                source={{ uri: selectedInsurance.card }} \n                style={styles.insuranceCardImage}\n              />\n              <Text style={styles.insuranceCardText}>Custom Insurance Card</Text>\n            </View>\n          ) : (\n            <View style={styles.insuranceOption}>\n              <MaterialCommunityIcons \n                name={selectedInsurance.type === 'none' ? 'shield-off' : 'shield-check'} \n                size={24} \n                color={theme.colors.primary} \n              />\n              <View style={styles.insuranceOptionContent}>\n                <Text style={styles.insuranceOptionTitle}>\n                  {INSURANCE_OPTIONS.find(opt => opt.id === selectedInsurance.type)?.label || 'No Insurance'}\n                </Text>\n                <Text style={styles.insuranceOptionDescription}>\n                  {INSURANCE_OPTIONS.find(opt => opt.id === selectedInsurance.type)?.description || 'No insurance selected'}\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.contentWrapper}>\n        <View style={[styles.mainContent, !isMobile && styles.desktopLayout]}>\n          {/* Profile Photo Section */}\n          <View style={[styles.profileSection, !isMobile && styles.profileSectionDesktop]}>\n            <View style={styles.profileCard}>\n              <TouchableOpacity onPress={handleProfilePhotoSelection} style={styles.profilePhotoContainer}>\n                {profilePhoto ? (\n                  <Image source={{ uri: profilePhoto }} style={styles.profilePhoto} />\n                ) : (\n                  <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n                    <MaterialCommunityIcons name=\"camera-plus\" size={40} color={theme.colors.placeholder} />\n                  </View>\n                )}\n                <View style={styles.cameraButton}>\n                  <MaterialCommunityIcons name=\"camera\" size={20} color={theme.colors.background} />\n                </View>\n              </TouchableOpacity>\n              <View style={styles.profileInfo}>\n                <View style={styles.nameContainer}>\n                  <Text style={styles.name}>{displayValues.name}</Text>\n                  <TouchableOpacity \n                    style={styles.editIcon}\n                    onPress={() => handleEdit('name', displayValues.name)}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.text} />\n                  </TouchableOpacity>\n                </View>\n                <View style={styles.emailContainer}>\n                  <MaterialCommunityIcons name=\"email\" size={16} color={theme.colors.secondary} />\n                  <Text style={styles.email}>{displayValues.email || 'No email provided'}</Text>\n                  <TouchableOpacity \n                    style={styles.editIcon}\n                    onPress={() => handleEdit('email', displayValues.email)}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={16} color={theme.colors.text} />\n                  </TouchableOpacity>\n                </View>\n                <View style={styles.locationContainer}>\n                  <View style={styles.locationIconWrapper}>\n                    <MaterialCommunityIcons name=\"map-marker\" size={16} color={theme.colors.secondary} />\n                  </View>\n                  <Text style={styles.location}>{displayValues.location || 'Set Location'}</Text>\n                  <TouchableOpacity \n                    style={styles.locationEditIcon}\n                    onPress={() => handleEdit('location', displayValues.location)}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={16} color={theme.colors.text} />\n                  </TouchableOpacity>\n                </View>\n                <View style={styles.reviewsContainer}>\n                  {rating ? (\n                    <View style={styles.ratingContainer}>\n                      <MaterialCommunityIcons name=\"star\" size={20} color={theme.colors.warning} />\n                      <Text style={styles.rating}>{rating}</Text>\n                      <Text style={styles.reviews}>({reviews} reviews)</Text>\n                    </View>\n                  ) : (\n                    <Text style={styles.noReviews}>No reviews yet</Text>\n                  )}\n                </View>\n              </View>\n            </View>\n          </View>\n\n          {/* Right Side Sections */}\n          <View style={[styles.sectionsContainer, !isMobile && styles.sectionsContainerDesktop]}>\n            {/* About Me Section */}\n            <View style={styles.section}>\n              <View style={styles.sectionHeader}>\n                <Text style={styles.sectionTitle}>{isProfessional ? 'Professional Bio' : 'About Me'}</Text>\n                <TouchableOpacity \n                  style={styles.editButton}\n                  onPress={() => handleEdit('bio', displayValues.bio)}\n                >\n                  <Text style={styles.editButtonText}>Edit {isProfessional ? 'Bio' : 'About Me'}</Text>\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.bioText}>\n                {displayValues.bio || 'Tell us about yourself...'}\n              </Text>\n            </View>\n\n            {/* Show either Home & Facilities (for owners) or Insurance (for professionals) */}\n            {/* TODO: UNCOMMONT THIS SECTION after mvp launch and implementation of facilities and insurance */}\n            {/* {isProfessional ? renderInsuranceSection() : renderFacilitiesSection()} */}\n\n            {/* TODO: UNCOMMONT THIS SECTION\n            Portfolio Photos Section - comment this out for now\n            <View style={styles.section}>\n              <View style={styles.sectionHeader}>\n                <Text style={styles.sectionTitle}>Portfolio Photos</Text>\n                <TouchableOpacity \n                  style={styles.addPhotoButton}\n                  onPress={handleAddPortfolioPhoto}\n                >\n                  <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n                  <Text style={styles.addPhotoText}>Add Photos</Text>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.photoGrid}>\n                {portfolioPhotos.map((photo, index) => (\n                  <Image \n                    key={index} \n                    source={{ uri: photo }} \n                    style={styles.portfolioPhoto} \n                  />\n                ))}\n                {portfolioPhotos.length === 0 && (\n                  <Text style={styles.noPhotosText}>No photos added yet</Text>\n                )}\n              </View>\n            </View> */}\n          </View>\n        </View>\n      </View>\n\n      <EditOverlay\n        visible={!!editingField}\n        onClose={() => setEditingField(null)}\n        title={`Edit ${editingField?.charAt(0).toUpperCase()}${editingField?.slice(1)}`}\n        value={editValue}\n        onSave={handleSave}\n        isLocation={editingField === 'location'}\n        isMultiline={editingField === 'bio' || editingField === 'about_me'}\n        isProfessional={isProfessional}\n        isInsurance={editingField === 'insurance'}\n        selectedInsurance={selectedInsurance}\n        onInsuranceChange={setSelectedInsurance}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  contentWrapper: {\n    maxWidth: 1200,\n    alignSelf: 'center',\n    width: '100%',\n    padding: 16,\n  },\n  mainContent: {\n    width: '100%',\n  },\n  desktopLayout: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  profileSection: {\n    marginBottom: 24,\n  },\n  profileSectionDesktop: {\n    width: 300,\n    marginBottom: 0,\n  },\n  profileCard: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n  },\n  profilePhotoContainer: {\n    position: 'relative',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  profilePhoto: {\n    width: 200,\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n  },\n  profilePhotoPlaceholder: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: theme.colors.border,\n  },\n  cameraButton: {\n    position: 'absolute',\n    right: 8,\n    bottom: 8,\n    backgroundColor: theme.colors.primary,\n    padding: 8,\n    borderRadius: 20,\n  },\n  profileInfo: {\n    alignItems: 'center',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    marginBottom: 4,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  emailContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    marginBottom: 4,\n  },\n  email: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  locationContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    width: '100%',\n    position: 'relative',\n    paddingHorizontal: 20,\n  },\n  locationIconWrapper: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  },\n  location: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n    textAlign: 'center',\n    flex: 1,\n  },\n  locationEditIcon: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    padding: 4,\n  },\n  roleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    marginBottom: 4,\n  },\n  role: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  editIcon: {\n    padding: 4,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  rating: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  reviews: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  sectionsContainer: {\n    flex: 1,\n  },\n  sectionsContainerDesktop: {\n    paddingLeft: 24,\n  },\n  section: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 24,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  editButton: {\n    backgroundColor: 'transparent',\n  },\n  editButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  bioInput: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    minHeight: 100,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  facilitiesGrid: {\n    gap: 16,\n  },\n  facilityItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    padding: 12,\n    borderRadius: 8,\n  },\n  facilityContent: {\n    marginLeft: 12,\n  },\n  facilityTitle: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  facilityValue: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginTop: 2,\n  },\n  addPhotoButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    gap: 6,\n  },\n  addPhotoText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    marginTop: 16,\n  },\n  reviewsContainer: {\n    marginBottom: 12,\n  },\n  noReviews: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n  },\n  bioText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    lineHeight: 24,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  locationButtons: {\n    gap: 16,\n  },\n  locationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    justifyContent: 'center',\n    gap: 8,\n  },\n  locationButtonText: {\n    color: theme.colors.background,\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  orText: {\n    textAlign: 'center',\n    color: theme.colors.secondary,\n    fontSize: 14,\n  },\n  multilineInput: {\n    minHeight: 100,\n    textAlignVertical: 'top',\n  },\n  portfolioPhoto: {\n    width: '30%',\n    aspectRatio: 4/3,\n    borderRadius: 8,\n  },\n  noPhotosText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: 20,\n  },\n  facilitiesModalContent: {\n    height: '80%',\n    width: '90%',\n    maxWidth: 500,\n  },\n  facilitiesScrollView: {\n    flex: 1,\n    marginBottom: 16,\n  },\n  facilityPresetItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n    backgroundColor: theme.colors.background,\n  },\n  selectedFacilityPreset: {\n    backgroundColor: theme.colors.primary,\n  },\n  facilityPresetContent: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  facilityPresetTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  facilityPresetDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  selectedFacilityText: {\n    color: theme.colors.background,\n  },\n  checkIcon: {\n    marginLeft: 8,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n  },\n  modalCancelButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n  },\n  modalCancelText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  modalSaveButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    backgroundColor: theme.colors.primary,\n  },\n  modalSaveText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  locationModalContent: {\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '90%',\n  },\n  locationContent: {\n    gap: 16,\n    paddingBottom: 16,\n  },\n  addressForm: {\n    gap: 12,\n  },\n  addressInput: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    minHeight: 44,\n  },\n  addressRow: {\n    flexDirection: 'row',\n    gap: 12,\n    flexWrap: 'wrap',\n  },\n  maxFacilitiesText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 8,\n  },\n  modalSaveButtonDisabled: {\n    opacity: 0.5,\n  },\n  insuranceContent: {\n    gap: 16,\n  },\n  customInsuranceCard: {\n    alignItems: 'center',\n    gap: 8,\n  },\n  insuranceCardImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: theme.colors.background,\n  },\n  insuranceCardText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  insuranceOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 16,\n  },\n  insuranceOptionContent: {\n    flex: 1,\n  },\n  insuranceOptionTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  insuranceOptionDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  editButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  insuranceStepContent: {\n    gap: 16,\n  },\n  insuranceStepTitle: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  insuranceTypeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 16,\n  },\n  insuranceTypeContent: {\n    flex: 1,\n  },\n  insuranceTypeTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  insuranceTypeDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 8,\n  },\n  uploadText: {\n    fontSize: 16,\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  selectedInsuranceOption: {\n    backgroundColor: theme.colors.primary + '20',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n    maxHeight: '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n    position: 'relative',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  modalTitleCentered: {\n    textAlign: 'center',\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    position: 'absolute',\n    left: 0,\n    padding: 8,\n    zIndex: 1,\n  },\n  backButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  modalInput: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  modalCloseButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n  },\n  modalCloseText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n});\n\nexport default ProfileInfoTab; ","import React, { useState, useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Switch, ScrollView } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst DAYS_OF_WEEK = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nconst ServiceIcon = ({ service }) => {\n  const iconMap = {\n    'Dog Walking': 'walk',\n    'Pet Sitting': 'home',\n    'Overnight Care': 'bed',\n    // Add more mappings as needed\n  };\n\n  return (\n    <MaterialCommunityIcons \n      name={iconMap[service] || 'paw'} \n      size={24} \n      color={theme.colors.text} \n    />\n  );\n};\n\nconst ServicesAvailabilityTab = ({\n  services = [\n    {\n      id: 1,\n      name: 'Dog Walking',\n      price: 25,\n      unit: 'walk',\n      isActive: true,\n      unavailableDays: ['Sun']\n    },\n    {\n      id: 2,\n      name: 'Pet Sitting',\n      price: 35,\n      unit: 'visit',\n      isActive: true,\n      unavailableDays: ['Sat', 'Sun']\n    },\n    {\n      id: 3,\n      name: 'Overnight Care',\n      price: 85,\n      unit: 'night',\n      isActive: true,\n      isOvernight: true\n    }\n  ],\n  onToggleService,\n  onEditHours,\n  onBlockService,\n  onPartialDayBlock,\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const navigation = useNavigation();\n  const [selectedService, setSelectedService] = useState(null);\n  const isStacked = screenWidth <= 1250;\n\n  const renderServiceItem = (service, index) => (\n    <TouchableOpacity\n      key={service.id}\n      style={[\n        styles.serviceItem,\n        { backgroundColor: index % 2 === 0 ? \n          theme.colors.proDashboard.secondary : \n          theme.colors.proDashboard.tertiary \n        },\n        selectedService?.id === service.id && styles.selectedServiceItem\n      ]}\n      onPress={() => setSelectedService(service)}\n    >\n      <View style={styles.serviceItemContent}>\n        <ServiceIcon service={service.name} />\n        <View style={styles.serviceInfo}>\n          <Text style={styles.serviceName}>{service.name}</Text>\n          <Text style={styles.servicePrice}>${service.price}/{service.unit}</Text>\n        </View>\n      </View>\n      <Switch\n        value={service.isActive}\n        onValueChange={() => onToggleService(service.id)}\n        trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\n        thumbColor={theme.colors.background}\n      />\n    </TouchableOpacity>\n  );\n\n  const renderDayAvailability = (service) => {\n    if (service.isOvernight) {\n      // For overnight services, show next unavailable date\n      return (\n        <View style={styles.nextUnavailableContainer}>\n          <Text style={styles.nextUnavailableText}>Next Unavailable: Dec 24-25</Text>\n        </View>\n      );\n    }\n\n    return (\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={false}\n        style={styles.daysScrollContainer}\n        contentContainerStyle={styles.daysContainer}\n      >\n        {DAYS_OF_WEEK.map((day) => {\n          const isUnavailable = service.unavailableDays?.includes(day);\n          return (\n            <View \n              key={day} \n              style={[\n                styles.dayItem,\n                isUnavailable && styles.unavailableDayItem\n              ]}\n            >\n              {isUnavailable && <View style={styles.unavailableSlash} />}\n              <Text style={[\n                styles.dayText,\n                isUnavailable && styles.unavailableDayText\n              ]}>{day}</Text>\n            </View>\n          );\n        })}\n      </ScrollView>\n    );\n  };\n\n  const renderAvailabilitySection = (service, index) => (\n    <View style={styles.availabilitySection}>\n      <View style={styles.availabilityHeader}>\n        <Text style={styles.availabilityTitle}>{service.name}</Text>\n        <TouchableOpacity \n          style={styles.editHoursButton}\n          onPress={() => onEditHours(service.id)}\n        >\n          <Text style={styles.editHoursText}>Edit Hours</Text>\n        </TouchableOpacity>\n      </View>\n      {renderDayAvailability(service)}\n      <Text style={styles.availabilityTime}>\n        {service.isOvernight ? 'Check-in: 3 PM, Check-out: 11 AM' : 'Available 9 AM - 5 PM'}\n      </Text>\n      {index !== services.length - 1 && <View style={styles.availabilityDivider} />}\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.content,\n        { flexDirection: isStacked ? 'column' : 'row' }\n      ]}>\n        {/* Services Section */}\n        <View style={[\n          styles.servicesSection,\n          !isStacked && { maxWidth: 400 },\n          styles.sectionBox\n        ]}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>Your Services</Text>\n            <TouchableOpacity \n              style={styles.editButton}\n              onPress={() => navigation.navigate('ServiceManager')}\n            >\n              <Text style={styles.editButtonText}>Edit Services</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.servicesList}>\n            {services.map((service, index) => (\n              <View key={service.id} style={styles.serviceWrapper}>\n                {renderServiceItem(service, index)}\n                {index !== services.length - 1 && <View style={styles.serviceDivider} />}\n              </View>\n            ))}\n          </View>\n        </View>\n\n        {/* Availability Section */}\n        <View style={[\n          styles.availabilityContainer,\n          isStacked && { marginTop: 24 },\n          styles.sectionBox\n        ]}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>Availability</Text>\n          </View>\n          <ScrollView \n            horizontal \n            showsHorizontalScrollIndicator={false}\n            style={styles.controlsScrollContainer}\n            contentContainerStyle={styles.availabilityControls}\n          >\n            <TouchableOpacity \n              style={styles.controlButton}\n              onPress={onBlockService}\n            >\n              <View style={styles.blockButtonContent}>\n                <MaterialCommunityIcons name=\"block-helper\" size={20} color={theme.colors.error} />\n                <Text style={styles.blockButtonText}>Block All Services</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={styles.controlButton}\n              onPress={onPartialDayBlock}\n            >\n              <View style={styles.partialBlockButtonContent}>\n                <MaterialCommunityIcons name=\"clock-outline\" size={20} color=\"#F97316\" />\n                <Text style={styles.partialBlockText}>Partial Day Block</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={styles.controlButton}\n            >\n              <View style={styles.dateRangeButtonContent}>\n                <MaterialCommunityIcons name=\"calendar-range\" size={20} color=\"#3B82F6\" />\n                <Text style={styles.dateRangeText}>Date Range</Text>\n              </View>\n            </TouchableOpacity>\n          </ScrollView>\n          <View style={styles.controlsDivider} />\n          <View style={styles.availabilityList}>\n            {services.map((service, index) => renderAvailabilitySection(service, index))}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  content: {\n    padding: 24,\n    gap: 24,\n  },\n  sectionBox: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    alignSelf: 'flex-start',\n  },\n  servicesSection: {\n    width: '100%',\n  },\n  servicesList: {\n    width: '100%',\n  },\n  serviceWrapper: {\n    width: '100%',\n  },\n  serviceItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  selectedServiceItem: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  serviceItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  serviceInfo: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  serviceName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  servicePrice: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  availabilityContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  controlsScrollContainer: {\n    marginBottom: 16,\n  },\n  availabilityControls: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  controlsDivider: {\n    height: 1,\n    backgroundColor: theme.colors.surface,\n    marginBottom: 16,\n  },\n  daysScrollContainer: {\n    marginBottom: 12,\n  },\n  daysContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  availabilityDivider: {\n    height: 4,\n    backgroundColor: theme.colors.surface,\n    marginTop: 16,\n  },\n  availabilitySection: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  availabilityHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  availabilityTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  editHoursButton: {\n    backgroundColor: 'transparent',\n  },\n  editHoursText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  dayItem: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: 'transparent',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  petsittingDayItem: {\n    backgroundColor: theme.colors.warningLight,\n  },\n  dayText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n    zIndex: 1,\n  },\n  availabilityTime: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  serviceDivider: {\n    // height: 1,\n    backgroundColor: theme.colors.surface,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  availabilityList: {\n    width: '100%',\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  editButton: {\n    backgroundColor: 'transparent',\n  },\n  editButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  controlButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  blockButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#FEE2E2',\n    gap: 6,\n  },\n  blockButtonText: {\n    color: theme.colors.error,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  partialBlockButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#FFEDD5',\n    gap: 6,\n  },\n  partialBlockText: {\n    color: '#F97316',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  dateRangeButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#EFF6FF',\n    gap: 6,\n  },\n  dateRangeText: {\n    color: '#3B82F6',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  unavailableDayItem: {\n    borderColor: theme.colors.error,\n  },\n  unavailableSlash: {\n    position: 'absolute',\n    top: '50%',\n    left: -5,\n    right: -5,\n    height: 1,\n    backgroundColor: theme.colors.error,\n    transform: [{ rotate: '45deg' }],\n  },\n  unavailableDayText: {\n    color: theme.colors.error,\n  },\n  nextUnavailableContainer: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  nextUnavailableText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n});\n\nexport default ServicesAvailabilityTab; ","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image, TextInput, ScrollView, Platform, Modal, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { addPet, updatePet, fixPetOwner } from '../../api/API';\nimport { useToast } from '../../components/ToastProvider';\n\nconst PetsPreferencesTab = ({\n  pets = [],\n  preferences = {\n    homeEnvironment: [],\n    emergencyContacts: [],\n    authorizedHouseholdMembers: []\n  },\n  onAddPet,\n  onEditPet,\n  onDeletePet,\n  onReplacePet, // New prop for atomic replace operation\n  onUpdatePreferences,\n  userRole,\n  isMobile,\n}) => {\n  const [expandedPetIds, setExpandedPetIds] = useState(new Set());\n  const [newEmergencyContact, setNewEmergencyContact] = useState({ name: '', phone: '' });\n  const [newHouseholdMember, setNewHouseholdMember] = useState({ name: '', phone: '' });\n  const [isAddingEmergencyContact, setIsAddingEmergencyContact] = useState(false);\n  const [isAddingHouseholdMember, setIsAddingHouseholdMember] = useState(false);\n  const [editingPetIds, setEditingPetIds] = useState(new Set());\n  const [editedPetsData, setEditedPetsData] = useState({});\n  const [expandedSections, setExpandedSections] = useState({});\n  const [datePickerConfig, setDatePickerConfig] = useState({\n    isVisible: false,\n    currentField: null,\n    currentPetId: null,\n    selectedDate: new Date()\n  });\n  \n  // Add state for calendar display\n  const [displayMonth, setDisplayMonth] = useState(new Date().getMonth());\n  const [displayYear, setDisplayYear] = useState(new Date().getFullYear());\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\n  const toast = useToast();\n\n  // Add this new variable to track if a save operation is in progress\n  const [savingPet, setSavingPet] = useState(false);\n\n  // Add this near other state declarations\n  const [showSuccessModals, setShowSuccessModals] = useState(true);\n\n  // Add window resize listener\n  useEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n\n    Dimensions.addEventListener('change', updateWidth);\n    \n    return () => {\n      // For newer React Native versions, we would use remove\n      // In case this component is using an older version, handle appropriately\n      if (Dimensions.removeEventListener) {\n        Dimensions.removeEventListener('change', updateWidth);\n      }\n    };\n  }, []);\n\n  // Define all available facilities\n  const allFacilities = [\n    { id: 'yard', label: 'Fully fenced backyard', icon: 'fence' },\n    { id: 'roam', label: 'Free roam of house', icon: 'home' },\n    { id: 'ac', label: 'Air Conditioned', icon: 'snowflake' },\n    { id: 'furniture', label: 'Allowed on furniture', icon: 'sofa' },\n    { id: 'bed', label: 'Allowed on bed', icon: 'bed' },\n    { id: 'crate', label: 'Crate Available', icon: 'gate' },\n    { id: 'pet_door', label: 'Pet Door', icon: 'door' },\n    { id: 'toys', label: 'Pet Toy Collection', icon: 'handball' },\n    { id: 'first_aid', label: 'Pet First Aid Kit', icon: 'medical-bag' },\n    { id: 'cameras', label: 'Pet Cameras', icon: 'cctv' },\n    { id: 'covered_patio', label: 'Covered Patio', icon: 'umbrella' },\n    { id: 'garden', label: 'Pet-Safe Garden', icon: 'flower' },\n    { id: 'heating', label: 'Central Heating', icon: 'fire' },\n    { id: 'feeding_station', label: 'Feeding Station', icon: 'food-variant' },\n    { id: 'water_fountain', label: 'Water Fountain', icon: 'fountain' },\n    { id: 'scratching_post', label: 'Cat Posts', icon: 'cat' },\n    { id: 'litter_area', label: 'Private Litter Area', icon: 'broom' }\n  ];\n\n  // Define selectable options for dropdowns\n  const yesNoOptions = [\"Yes\", \"No\", \"N/A\"];\n  const energyLevelOptions = [\"Low\", \"Medium\", \"High\", \"N/A\"];\n  const sexOptions = [\"Male\", \"Female\"];\n\n  // Add at the top of the component, after the other utility functions\n  \n  // Helper function to safely convert any value to a display string\n  const safeDisplayText = (value, defaultText = '') => {\n    if (value === null || value === undefined) {\n      return defaultText;\n    }\n    \n    if (typeof value === 'string') {\n      return value;\n    }\n    \n    if (typeof value === 'number' || typeof value === 'boolean') {\n      return String(value);\n    }\n    \n    // For any other type (like objects), return the default\n    return defaultText;\n  };\n  \n  const returnYesNoContainer = (pet, attributeName) => {\n    let displayValue = 'No Option Selected';\n    \n    if (pet && attributeName) {\n      if (pet[attributeName] === null) {\n        displayValue = 'N/A';\n      } else if (pet[attributeName] === true) {\n        displayValue = 'Yes';\n      } else if (pet[attributeName] === false) {\n        displayValue = 'No';\n      } else if (typeof pet[attributeName] === 'string') {\n        displayValue = pet[attributeName];\n      }\n      // If pet[attributeName] is an object or other non-string type, keep the default \"No Option Selected\"\n    }\n    \n    return (\n      <View style={styles.dropdownContainer}>\n        <Text style={styles.dropdownText}>{displayValue}</Text>\n      </View>\n    );\n  };\n\n  const returnEnergyLevelContainer = (pet) => {\n    // Map backend value to frontend display value\n    let displayValue = 'No Option Selected';\n    \n    // Make sure pet exists before trying to access its energyLevel property\n    if (pet && pet.energyLevel !== undefined) {\n      if (pet.energyLevel === null) {\n        displayValue = 'N/A';\n      } else if (pet.energyLevel === 'LOW') {\n        displayValue = 'Low';\n      } else if (pet.energyLevel === 'MODERATE') {\n        displayValue = 'Medium';\n      } else if (pet.energyLevel === 'HIGH') {\n        displayValue = 'High';\n      } else if (typeof pet.energyLevel === 'string') {\n        displayValue = pet.energyLevel; // Fallback to whatever string is there\n      } else if (pet.energyLevel && typeof pet.energyLevel === 'object') {\n        displayValue = 'No Option Selected';\n      }\n    }\n    \n    return (\n      <View style={styles.dropdownContainer}>\n        <Text style={styles.dropdownText}>{displayValue}</Text>\n      </View>\n    );\n  };\n\n  const togglePetDetails = (petId) => {\n    // Remove the condition that prevents toggling when editing\n    // We want to allow collapsing/expanding even in edit mode\n    setExpandedPetIds(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(petId)) {\n        newSet.delete(petId);\n      } else {\n        newSet.add(petId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleEditPet = (petId) => {\n    // Clone the current pet data to edit\n    const petToEdit = pets.find(pet => pet.id === petId);\n    \n    // Update the edited data for this specific pet\n    setEditedPetsData(prev => ({\n      ...prev,\n      [petId]: {...petToEdit}\n    }));\n    \n    // Add this pet's ID to the set of pets being edited\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(petId);\n      return newSet;\n    });\n  };\n  \n  const handleFixPet = async (petId) => {\n    try {\n      debugLog(\"MBA456\", \"Attempting to fix pet with ID:\", petId);\n      \n      // Show fixing toast\n      toast({\n        message: \"Attempting to repair pet data. Please wait...\",\n        type: 'info',\n        duration: 3000\n      });\n      \n      // Call the fix pet owner API\n      const response = await fixPetOwner(petId);\n      debugLog(\"MBA456\", \"Successfully fixed pet owner:\", response);\n      \n      // Update the pet data with the fixed pet info\n      if (response && response.pet) {\n        // Find the current pet data\n        const currentPetIndex = pets.findIndex(pet => pet.id === petId);\n        if (currentPetIndex !== -1) {\n          // Create updated pet data\n          const updatedPet = {\n            ...pets[currentPetIndex],\n            ...response.pet,\n            // Ensure UI-specific fields are updated\n            type: response.pet.species || pets[currentPetIndex].type,\n            feedingInstructions: response.pet.feeding_schedule || pets[currentPetIndex].feedingInstructions,\n            medicalNotes: response.pet.medication_notes || pets[currentPetIndex].medicalNotes,\n            pottyBreakSchedule: response.pet.potty_break_schedule || pets[currentPetIndex].pottyBreakSchedule,\n            specialCareInstructions: response.pet.special_care_instructions || pets[currentPetIndex].specialCareInstructions,\n            birthday: response.pet.birthday ? formatDateFromBackend(response.pet.birthday) : pets[currentPetIndex].birthday,\n            adoptionDate: response.pet.adoption_date ? formatDateFromBackend(response.pet.adoption_date) : pets[currentPetIndex].adoptionDate,\n            lastEditFailed: false // Clear the error flag\n          };\n          \n          // Update the pet in the parent component\n          onEditPet(petId, updatedPet);\n          \n          // Show success toast\n          toast({\n            message: \"The pet's owner has been restored. You should now be able to edit this pet normally.\",\n            type: 'success',\n            duration: 5000\n          });\n        }\n      }\n    } catch (error) {\n      debugLog(\"MBA456\", \"Error fixing pet:\", error);\n      \n      // Show error toast\n      let errorMessage = \"There was a problem fixing the pet. Please try again or contact support.\";\n      \n      if (error.response && error.response.data) {\n        if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        }\n      }\n      \n      toast({\n        message: errorMessage,\n        type: 'error',\n        duration: 5000\n      });\n    }\n  };\n  \n  const formatDateForBackend = (dateString) => {\n    if (!dateString) return null;\n    \n    // Convert from MM-DD-YYYY to YYYY-MM-DD\n    const [month, day, year] = dateString.split('-');\n    return `${year}-${month}-${day}`;\n  };\n  \n  // Helper function to convert dates from backend format to frontend format\n  const formatDateFromBackend = (dateString) => {\n    if (!dateString) return null;\n    \n    // Convert from YYYY-MM-DD to MM-DD-YYYY\n    const [year, month, day] = dateString.split('-');\n    return `${month}-${day}-${year}`;\n  };\n  \n  const handleSavePetEdit = async (petId) => {\n    // Prevent multiple clicks\n    if (savingPet) {\n      debugLog(\"MBA5555\", \"SAVE PET - Already saving, ignoring duplicate click\");\n      return;\n    }\n    \n    try {\n      // Mark that we're starting a save operation\n      setSavingPet(true);\n      \n      // Log current state for debugging\n      debugLog(\"MBA5555\", \"SAVE PET - Starting save with pets:\", pets.map(p => ({id: p.id, name: p.name || 'unnamed'})));\n      debugLog(\"MBA5555\", \"SAVE PET - Saving petId:\", petId);\n      \n      // Get the edited data for this pet\n      const editedData = editedPetsData[petId] || {};\n      \n      // Format the pet data for the backend\n      const petData = {\n        name: editedData.name || '',\n        species: editedData.type || '',\n        breed: editedData.breed || '',\n        age_years: editedData.ageYears,\n        age_months: editedData.ageMonths,\n        weight: editedData.weight,\n        birthday: editedData.birthday ? formatDateForBackend(editedData.birthday) : null,\n        sex: editedData.sex,\n        adoption_date: editedData.adoptionDate ? formatDateForBackend(editedData.adoptionDate) : null,\n        pet_description: editedData.description || '',\n        friendly_with_children: editedData.childrenFriendly,\n        friendly_with_cats: editedData.catFriendly,\n        friendly_with_dogs: editedData.dogFriendly,\n        spayed_neutered: editedData.spayedNeutered,\n        house_trained: editedData.houseTrained,\n        microchipped: editedData.microchipped,\n        feeding_schedule: editedData.feedingInstructions || '',\n        potty_break_schedule: editedData.pottyBreakSchedule || '',\n        energy_level: editedData.energyLevel || 'LOW',\n        can_be_left_alone: editedData.canBeLeftAlone,\n        medication_notes: editedData.medicalNotes || '',\n        special_care_instructions: editedData.specialCareInstructions || '',\n        vet_name: editedData.vetName || '',\n        vet_address: editedData.vetAddress || '',\n        vet_phone: editedData.vetPhone || '',\n        insurance_provider: editedData.insuranceProvider || '',\n        vet_documents: editedData.vetDocuments || [],\n      };\n      \n      debugLog(\"MBA5555\", \"SAVE PET - Pet data being sent:\", petData);\n      \n      const isNewPet = String(petId).startsWith('temp_');\n      debugLog(\"MBA5555\", \"SAVE PET - Is this a new pet?\", isNewPet);\n      \n      let successMessage = \"\";\n      \n      if (isNewPet) {\n        debugLog(\"MBA5555\", \"SAVE PET - Creating a new pet with backend API call\");\n        \n        try {\n          // Call the API to create the pet\n          const response = await addPet(petData);\n          debugLog(\"MBA5555\", \"SAVE PET - API response from addPet:\", response);\n          \n          // If we have a valid response with pet data\n          if (response && response.pet && response.pet.pet_id) {\n            // Extract the real pet ID from the backend response\n            const newPetId = response.pet.pet_id; \n            \n            // Update our pet data with the real ID and all data from the response\n            const updatedPetData = {\n              ...editedData, // Keep our local edited data\n              ...response.pet, // Add all the pet data from the response\n              id: newPetId, // Ensure the ID field is set properly\n              type: response.pet.species || editedData.type, // Map species to type for UI consistency\n              // Make sure UI-specific fields are properly mapped from backend data\n              feedingInstructions: response.pet.feeding_schedule || editedData.feedingInstructions,\n              medicalNotes: response.pet.medication_notes || editedData.medicalNotes,\n              pottyBreakSchedule: response.pet.potty_break_schedule || editedData.pottyBreakSchedule,\n              specialCareInstructions: response.pet.special_care_instructions || editedData.specialCareInstructions,\n              // Format birthday properly if it exists\n              birthday: response.pet.birthday ? formatDateFromBackend(response.pet.birthday) : editedData.birthday,\n              // Format adoption date properly if it exists\n              adoptionDate: response.pet.adoption_date ? formatDateFromBackend(response.pet.adoption_date) : editedData.adoptionDate,\n            };\n            \n            debugLog(\"MBA5555\", \"SAVE PET - Successfully created pet. Old ID:\", petId, \"New ID:\", newPetId);\n            \n            // *** CRITICAL FIX: Use replacePet instead of separate delete and add operations ***\n            replaceTempPetWithReal(petId, updatedPetData);\n            \n            // Set success message\n            successMessage = `Pet \"${updatedPetData.name}\" was successfully created!`;\n            \n            // Show success toast\n            toast({\n              message: successMessage,\n              type: 'success',\n              duration: 3000\n            });\n            \n            // Reset all editing state for this pet\n            setEditingPetIds(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(petId);\n              return newSet;\n            });\n            \n            setEditedPetsData(prev => {\n              const newData = {...prev};\n              delete newData[petId];\n              return newData;\n            });\n            \n            // Update expanded state to show the real pet\n            setExpandedPetIds(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(petId);\n              newSet.add(newPetId);\n              return newSet;\n            });\n          }\n        } catch (apiError) {\n          debugLog(\"MBA5555\", \"SAVE PET - API error adding pet:\", apiError);\n          setSavingPet(false); // Reset saving flag\n          \n          // Show error message with details from the API error\n          showErrorMessage(\"Failed to Create Pet\", apiError);\n          return; // Exit the function early to prevent further processing\n        }\n      } else {\n        debugLog(\"MBA5555\", \"SAVE PET - Updating existing pet:\", petId);\n        \n        try {\n          const response = await updatePet(petId, petData);\n          debugLog(\"MBA5555\", \"SAVE PET - API response from updatePet:\", response);\n          \n          // Update our local pet data with the response data\n          if (response) {\n            const updatedPetData = {\n              ...editedData,\n              ...response,\n              id: petId,\n              type: response.species || editedData.type,\n              feedingInstructions: response.feeding_schedule || editedData.feedingInstructions,\n              medicalNotes: response.medication_notes || editedData.medicalNotes,\n              pottyBreakSchedule: response.potty_break_schedule || editedData.pottyBreakSchedule,\n              specialCareInstructions: response.special_care_instructions || editedData.specialCareInstructions,\n              birthday: response.birthday ? formatDateFromBackend(response.birthday) : editedData.birthday,\n              adoptionDate: response.adoption_date ? formatDateFromBackend(response.adoption_date) : editedData.adoptionDate,\n            };\n            \n            // Update the pet in the parent component\n            onEditPet(petId, updatedPetData);\n            \n            // Set success message\n            successMessage = `Pet \"${updatedPetData.name}\" was successfully updated!`;\n            \n            // Show success toast\n            toast({\n              message: successMessage,\n              type: 'success',\n              duration: 3000\n            });\n            \n            // Reset editing state for this pet\n            setEditingPetIds(prev => {\n              const newSet = new Set(prev);\n              newSet.delete(petId);\n              return newSet;\n            });\n            \n            setEditedPetsData(prev => {\n              const newData = {...prev};\n              delete newData[petId];\n              return newData;\n            });\n            \n            debugLog(\"MBA5555\", \"SAVE PET - Successfully updated pet:\", petId);\n          }\n        } catch (apiError) {\n          debugLog(\"MBA5555\", \"SAVE PET - API error updating pet:\", apiError);\n          \n          // Show error message with details from the API error\n          showErrorMessage(\"Failed to Update Pet\", apiError);\n          setSavingPet(false); // Reset saving flag\n          return; // Exit early\n        }\n      }\n      \n      // Reset saving flag\n      setTimeout(() => {\n        setSavingPet(false);\n        debugLog(\"MBA5555\", \"SAVE PET - Final state after all operations:\", pets.map(p => ({id: p.id, name: p.name || 'unnamed'})));\n      }, 100);\n    } catch (error) {\n      debugLog(\"MBA5555\", \"SAVE PET - Unexpected error saving pet:\", error);\n      setSavingPet(false); // Reset saving flag even on error\n      \n      // Show generic error message for unexpected errors\n      showErrorMessage(\"Failed to Save Pet\", error);\n    }\n  };\n  \n  const handleCancelPetEdit = (petId) => {\n    // Check if this is a newly added pet (has a temp_ ID)\n    if (petId && petId.toString().startsWith('temp_')) {\n      // Delete the pet instead of just canceling edit mode\n      debugLog(\"MBA456\", \"Discarding newly added pet:\", petId);\n      onDeletePet(petId);\n    }\n    \n    // Remove this pet from editing state\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(petId);\n      return newSet;\n    });\n    \n    // Clean up the edited data for this pet\n    setEditedPetsData(prev => {\n      const newData = {...prev};\n      delete newData[petId];\n      return newData;\n    });\n  };\n  \n  const handleEditChange = (petId, field, value) => {\n    setEditedPetsData(prev => ({\n      ...prev,\n      [petId]: {\n        ...(prev[petId] || {}),\n        [field]: value\n      }\n    }));\n    debugLog(\"MBA456\", \"Editing pet field\", { petId, field, value });\n  };\n\n  const handleAddNewPet = () => {\n    \n    // Check for existing temporary pets first\n    const existingTempPets = pets.filter(pet => String(pet.id).startsWith('temp_'));\n    debugLog(\"MBA5555\", \"ADD PET - Existing temp pets:\", existingTempPets.map(p => p.id));\n    \n    // If we already have a temporary pet being edited, don't create a new one\n    if (existingTempPets.length > 0) {\n      debugLog(\"MBA5555\", \"ADD PET - Found existing temp pet, not creating a new one\");\n      // Just focus on the existing temp pet instead\n      const tempPet = existingTempPets[0];\n      \n      // Make sure it's in edit mode\n      setEditingPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.add(tempPet.id);\n        return newSet;\n      });\n      \n      // Make sure it's expanded\n      setExpandedPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.add(tempPet.id);\n        return newSet;\n      });\n      \n      return;\n    }\n    \n    // Create a temporary ID for the new pet\n    const tempId = `temp_${Date.now()}`;\n    debugLog(\"MBA5555\", \"ADD PET - Creating new pet with temp ID:\", tempId);\n    \n    // Create a blank pet entry\n    const newPet = {\n      id: tempId,\n      name: '',\n      breed: '',\n      birthday: '',\n      type: '',\n      feedingInstructions: '',\n      medicalNotes: '',\n      pottyBreakSchedule: '',\n      specialCareInstructions: '',\n      childrenFriendly: undefined,\n      dogFriendly: undefined,\n      catFriendly: undefined,\n      spayedNeutered: undefined,\n      houseTrained: undefined,\n      microchipped: undefined,\n      energyLevel: undefined,\n      canBeLeftAlone: undefined,\n      medications: '',\n      vetName: '',\n      vetAddress: '',\n      vetPhone: '',\n      insuranceProvider: '',\n      vetDocuments: [],\n      // New fields\n      sex: undefined,\n      weight: '',\n      adoptionDate: ''\n    };\n    \n    // First update our local state to show we're editing this pet\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(tempId);\n      return newSet;\n    });\n    \n    setEditedPetsData(prev => ({\n      ...prev,\n      [tempId]: {...newPet}\n    }));\n    \n    // Expand the pet card\n    setExpandedPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(tempId);\n      return newSet;\n    });\n    \n    // Now add the new pet to the existing pets array via the parent component\n    // Adding at the top of the list instead of the bottom\n    debugLog(\"MBA5555\", \"ADD PET - Calling onAddPet with new pet (adding to top of list)\");\n    onAddPet({...newPet, _addToTop: true});\n    \n    // After everything is done, log the current state\n    setTimeout(() => {\n      debugLog(\"MBA5555\", \"ADD PET - Final state:\", pets.map(p => ({id: p.id, name: p.name || 'unnamed'})));\n    }, 100);\n  };\n\n  const handleUploadDocument = async (petId) => {\n    try {\n      debugLog(\"MBA456\", \"Document upload simulated\");\n      // Simulate a document being selected\n      const mockDocument = {\n        name: `Document_${new Date().getTime()}.pdf`,\n        size: 1024 * 1024 * 2, // 2MB\n        type: 'application/pdf'\n      };\n      \n      setEditedPetsData(prev => ({\n        ...prev,\n        [petId]: {\n          ...(prev[petId] || {}),\n          vetDocuments: [...(prev[petId]?.vetDocuments || []), mockDocument]\n        }\n      }));\n      \n      // Show a toast notification\n      toast({\n        message: \"Document added successfully. Full document upload feature coming soon.\",\n        type: 'info',\n        duration: 3000\n      });\n    } catch (error) {\n      debugLog(\"MBA456\", \"Error with document upload\", error);\n      \n      // Show error toast notification\n      toast({\n        message: \"Failed to add document\",\n        type: 'error',\n        duration: 3000\n      });\n    }\n  };\n\n  const renderVetDocuments = (documents = []) => {\n    if (documents.length === 0) {\n      return <Text style={styles.noDocumentsText}>No documents uploaded</Text>;\n    }\n    \n    return (\n      <View style={styles.documentsList}>\n        {documents.map((doc, index) => (\n          <View key={index} style={styles.documentItem}>\n            <MaterialCommunityIcons name=\"file-document-outline\" size={18} color={theme.colors.primary} />\n            <Text style={styles.documentName} numberOfLines={1} ellipsizeMode=\"middle\">\n              {doc.name}\n            </Text>\n            <TouchableOpacity style={styles.viewDocButton}>\n              <Text style={styles.viewDocText}>View</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const toggleSection = (petId, sectionName, event) => {\n    // A completely rewritten, bulletproof version of toggleSection\n    \n    try {\n      // First, stop event propagation if an event was provided\n      if (event && typeof event.stopPropagation === 'function') {\n        event.stopPropagation();\n      }\n      \n      // Validate inputs - only proceed if we have valid data\n      if (!petId) {\n        console.warn(\"Missing petId in toggleSection\");\n        return;\n      }\n      \n      if (!sectionName) {\n        console.warn(\"Missing sectionName in toggleSection\");\n        return;\n      }\n      \n      // Sanitize inputs to ensure they're simple strings\n      const petIdStr = String(petId);\n      const sectionNameStr = String(sectionName);\n      \n      // Create a consistent key format\n      const key = `${petIdStr}-${sectionNameStr}`;\n      \n      // Update state safely\n      setExpandedSections((prev) => {\n        // If prev is somehow not an object, start fresh\n        if (!prev || typeof prev !== 'object') {\n          const newState = {};\n          newState[key] = true;\n          return newState;\n        }\n        \n        // Create a clean copy of the previous state\n        const newState = { ...prev };\n        \n        // Toggle the value, defaulting to false if not boolean\n        const currentValue = newState[key] === true;\n        newState[key] = !currentValue;\n        \n        return newState;\n      });\n    } catch (err) {\n      // If anything goes wrong, log it but don't crash\n      console.error(\"Error toggling section:\", err.message || \"Unknown error\");\n    }\n  };\n\n  const isSectionExpanded = (petId, sectionName) => {\n    try {\n      // Safety checks for invalid inputs\n      if (!petId || !sectionName) {\n        return false;\n      }\n      \n      // Ensure petId is a string for consistent key format\n      const petIdStr = String(petId);\n      const key = `${petIdStr}-${sectionName}`;\n      \n      // Default to false (closed) for initial view or non-boolean values\n      const result = expandedSections[key] === true;\n      return result;\n    } catch (err) {\n      console.error(\"Error checking if section is expanded:\", err.message || \"Unknown error\");\n      return false; // Default to not expanded on error\n    }\n  };\n\n  const renderSectionHeader = (petId, title, sectionName) => {\n    try {\n      // Safety check for valid inputs\n      if (!petId || !sectionName) {\n        console.warn(\"Missing required parameters in renderSectionHeader\");\n        return null;\n      }\n      \n      // Ensure title has a valid string value\n      const safeTitle = typeof title === 'string' ? title : 'Section';\n      \n      const isExpanded = isSectionExpanded(petId, sectionName);\n      \n      return (\n        <TouchableOpacity \n          style={styles.sectionHeader}\n          onPress={(event) => toggleSection(petId, sectionName, event)}\n        >\n          <Text style={styles.detailTitle}>{safeTitle}</Text>\n          <MaterialCommunityIcons \n            name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n            size={20} \n            color={theme.colors.text}\n          />\n        </TouchableOpacity>\n      );\n    } catch (error) {\n      console.error(\"Error rendering section header:\", error.message || \"Unknown error\");\n      return null; // Return null on error to prevent crashes\n    }\n  };\n\n  const renderPetCard = (pet) => {\n    try {\n      // Safety check to ensure we have a valid pet object\n      if (!pet || typeof pet !== 'object' || !pet.id) {\n        console.warn(\"Invalid pet in renderPetCard\");\n        return null;\n      }\n      \n      const isExpanded = expandedPetIds.has(pet.id);\n      const isEditing = editingPetIds.has(pet.id);\n      const editedPetData = editedPetsData[pet.id] || pet;\n      const isSmallScreen = windowWidth < 500;\n      // Check if this is a pet that hasn't been saved to the database yet\n      const isNewPet = pet.id && String(pet.id).startsWith('temp_');\n      \n      // Safely extract text properties with defaults to prevent rendering objects\n      const petName = typeof pet.name === 'string' ? pet.name : '';\n      const petBreed = typeof pet.breed === 'string' ? pet.breed : '';\n      const petType = typeof pet.type === 'string' ? pet.type : '';\n      const petBirthday = typeof pet.birthday === 'string' ? pet.birthday : 'No birthday set';\n      \n      return (\n        <View key={pet.id} style={styles.petCard}>\n          <TouchableOpacity \n            style={[\n              styles.petHeader,\n              { backgroundColor: theme.colors.surface }\n            ]} \n            onPress={(event) => {\n              // Important: only toggle details if not in edit mode\n              // This prevents any side effects during editing\n              if (!isEditing) {\n                debugLog(\"MBA5555\", \"PET HEADER - Toggle clicked for pet:\", pet.id);\n                togglePetDetails(pet.id);\n              } else {\n                debugLog(\"MBA5555\", \"PET HEADER - Ignoring click while in edit mode for pet:\", pet.id);\n                // Stop propagation to prevent triggering other events\n                event.stopPropagation();\n              }\n            }}\n            activeOpacity={0.2}\n          >\n            <View style={styles.petBasicInfo}>\n              {isEditing ? (\n                <View style={styles.editMainContainer}>\n                  <View style={styles.editHeaderRow}>\n                    <View style={styles.editProfileContainer}>\n                      <TouchableOpacity\n                        style={styles.profilePhotoButton}\n                        onPress={() => handleUploadDocument(pet.id)}\n                      >\n                        <Image \n                          source={require('../../../assets/default-pet-image.png')}\n                          style={styles.petPhoto}\n                        />\n                        <View style={styles.plusIconContainer}>\n                          <MaterialCommunityIcons name=\"plus-circle\" size={20} color={theme.colors.primary} />\n                        </View>\n                      </TouchableOpacity>\n                    </View>\n                    <View style={styles.editActions}>\n                      <TouchableOpacity \n                        style={styles.saveButton}\n                        onPress={(event) => {\n                          // Prevent event propagation\n                          event.stopPropagation();\n                          // Prevent duplicates\n                          if (savingPet) {\n                            debugLog(\"MBA5555\", \"Save button already clicked, ignoring\");\n                            return;\n                          }\n                          debugLog(\"MBA5555\", \"SAVE BUTTON - Clicked for pet:\", pet.id);\n                          handleSavePetEdit(pet.id);\n                        }}\n                        disabled={savingPet}\n                      >\n                        <Text style={styles.saveButtonText}>\n                          {isNewPet ? 'Create Pet' : 'Save Pet'}\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity \n                        style={styles.editButton}\n                        onPress={(event) => {\n                          event.stopPropagation();\n                          handleCancelPetEdit(pet.id);\n                        }}\n                      >\n                        <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                      </TouchableOpacity>\n                      <TouchableOpacity \n                        style={styles.editButton}\n                        onPress={(event) => {\n                          event.stopPropagation();\n                          togglePetDetails(pet.id);\n                        }}\n                      >\n                        <MaterialCommunityIcons \n                          name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n                          size={24} \n                          color={theme.colors.text}\n                        />\n                      </TouchableOpacity>\n                    </View>\n                  </View>\n                  \n                  <View style={styles.editDetailsContainer}>\n                    <View style={styles.detailRow}>\n                      <View style={styles.detailColumn}>\n                        <Text style={styles.inputLabel}>Name</Text>\n                        <TextInput\n                          style={styles.editInput}\n                          value={editedPetData.name || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'name', text)}\n                          placeholder=\"Enter pet name\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      </View>\n                      <View style={styles.detailColumn}>\n                        <Text style={styles.inputLabel}>Breed</Text>\n                        <TextInput\n                          style={styles.editInput}\n                          value={editedPetData.breed || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'breed', text)}\n                          placeholder=\"Enter breed\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      </View>\n                    </View>\n                    \n                    {isSmallScreen ? (\n                      // Stack animal type and birthday vertically on small screens\n                      <View style={styles.stackedFields}>\n                        <View style={[styles.detailColumn, styles.fullWidth]}>\n                          <Text style={styles.inputLabel}>Animal Type</Text>\n                          <TextInput\n                            style={styles.editInput}\n                            value={editedPetData.type || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'type', text)}\n                            placeholder=\"Enter type\"\n                            placeholderTextColor={theme.colors.placeholder}\n                          />\n                        </View>\n                        \n                        <View style={[styles.detailColumn, styles.fullWidth]}>\n                          <Text style={styles.inputLabel}>Birthday</Text>\n                          <View style={styles.customDatePickerContainer}>\n                            <TouchableOpacity \n                              activeOpacity={0.8}\n                              style={styles.dateInputBox}\n                              onPress={() => showDatePicker(pet.id, 'birthday')}\n                            >\n                              <Text style={[\n                                styles.dateInputText, \n                                !editedPetData.birthday && styles.placeholderText\n                              ]}>\n                                {editedPetData.birthday || 'MM-DD-YYYY'}\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity \n                              style={styles.calendarButton}\n                              onPress={() => showDatePicker(pet.id, 'birthday')}\n                              activeOpacity={0.7}\n                            >\n                              <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                      </View>\n                    ) : (\n                      // Original horizontal layout for larger screens\n                      <View style={styles.detailRow}>\n                        <View style={styles.detailColumn}>\n                          <Text style={styles.inputLabel}>Birthday</Text>\n                          <View style={styles.customDatePickerContainer}>\n                            <TouchableOpacity \n                              activeOpacity={0.8}\n                              style={styles.dateInputBox}\n                              onPress={() => showDatePicker(pet.id, 'birthday')}\n                            >\n                              <Text style={[\n                                styles.dateInputText, \n                                !editedPetData.birthday && styles.placeholderText\n                              ]}>\n                                {editedPetData.birthday || 'MM-DD-YYYY'}\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity \n                              style={styles.calendarButton}\n                              onPress={() => showDatePicker(pet.id, 'birthday')}\n                              activeOpacity={0.7}\n                            >\n                              <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                        <View style={styles.detailColumn}>\n                          <Text style={styles.inputLabel}>Animal Type</Text>\n                          <TextInput\n                            style={styles.editInput}\n                            value={editedPetData.type || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'type', text)}\n                            placeholder=\"Enter type\"\n                            placeholderTextColor={theme.colors.placeholder}\n                          />\n                        </View>\n                      </View>\n                    )}\n                  </View>\n                </View>\n              ) : (\n                <>\n                  <Image \n                    source={require('../../../assets/default-pet-image.png')}\n                    style={styles.petPhoto}\n                  />\n                  <View style={styles.petInfo}>\n                    <Text style={styles.petName}>{petName}</Text>\n                    <View style={styles.petDetailsContainer}>\n                      <Text style={styles.petDetails}>\n                        {petBreed ? petBreed : 'No breed'} • {petBirthday} • {petType ? petType : 'No type'}\n                      </Text>\n                    </View>\n                  </View>\n                </>\n              )}\n            </View>\n            <View style={styles.petActions}>\n              {!isEditing ? (\n                <>\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={() => handleEditPet(pet.id)}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={() => togglePetDetails(pet.id)}\n                  >\n                    <MaterialCommunityIcons \n                      name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n                      size={24} \n                      color={theme.colors.text}\n                    />\n                  </TouchableOpacity>\n                </>\n              ) : null}\n            </View>\n          </TouchableOpacity>\n\n          {isExpanded && (\n            <View style={[styles.expandedDetails, { backgroundColor: theme.colors.surfaceContrast }]}>\n              <View style={styles.detailRow}>\n                <View style={styles.detailColumn}>\n                  <Text style={styles.detailTitle}>Feeding Instructions</Text>\n                  {isEditing ? (\n                    <TextInput\n                      style={styles.editInput}\n                      value={editedPetData.feedingInstructions || ''}\n                      onChangeText={(text) => handleEditChange(pet.id, 'feedingInstructions', text)}\n                      placeholder=\"Enter feeding instructions\"\n                      placeholderTextColor={theme.colors.placeholder}\n                      multiline\n                    />\n                  ) : (\n                    <Text style={styles.detailText}>{pet.feedingInstructions || '2 cups of dry food twice daily (morning/evening)'}</Text>\n                  )}\n                </View>\n                <View style={styles.detailColumn}>\n                  <Text style={styles.detailTitle}>Medical Notes</Text>\n                  {isEditing ? (\n                    <TextInput\n                      style={styles.editInput}\n                      value={editedPetData.medicalNotes || ''}\n                      onChangeText={(text) => handleEditChange(pet.id, 'medicalNotes', text)}\n                      placeholder=\"Enter medical notes\"\n                      placeholderTextColor={theme.colors.placeholder}\n                      multiline\n                    />\n                  ) : (\n                    <Text style={styles.detailText}>{pet.medicalNotes || 'Hip dysplasia, daily joint supplement in AM meal'}</Text>\n                  )}\n                </View>\n              </View>\n              <View style={styles.detailRow}>\n                <View style={styles.detailColumn}>\n                  <Text style={styles.detailTitle}>Potty Break Schedule</Text>\n                  {isEditing ? (\n                    <TextInput\n                      style={styles.editInput}\n                      value={editedPetData.pottyBreakSchedule || ''}\n                      onChangeText={(text) => handleEditChange(pet.id, 'pottyBreakSchedule', text)}\n                      placeholder=\"Enter potty break schedule\"\n                      placeholderTextColor={theme.colors.placeholder}\n                      multiline\n                    />\n                  ) : (\n                    <Text style={styles.detailText}>{pet.pottyBreakSchedule || '15 minutes after each meal'}</Text>\n                  )}\n                </View>\n                <View style={styles.detailColumn}>\n                  <Text style={styles.detailTitle}>Special Care Instructions</Text>\n                  {isEditing ? (\n                    <TextInput\n                      style={styles.editInput}\n                      value={editedPetData.specialCareInstructions || ''}\n                      onChangeText={(text) => handleEditChange(pet.id, 'specialCareInstructions', text)}\n                      placeholder=\"Enter special care instructions\"\n                      placeholderTextColor={theme.colors.placeholder}\n                      multiline\n                    />\n                  ) : (\n                    <Text style={styles.detailText}>{pet.specialCareInstructions || 'Don\\'t touch his butt, he will eat your ass'}</Text>\n                  )}\n                </View>\n              </View>\n              \n              <View style={styles.detailSection}>\n                {renderSectionHeader(pet.id, \"Care Information\", \"careInfo\")}\n                \n                {isSectionExpanded(pet.id, \"careInfo\") && (\n                  <View style={styles.detailColumn}>\n                    <View style={styles.careInfoContainer}>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Energy level:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {energyLevelOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.energyLevel === null && option === \"N/A\") || \n                                  editedPetData.energyLevel === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'energyLevel', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.energyLevel === null && option === \"N/A\") || \n                                  editedPetData.energyLevel === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnEnergyLevelContainer(pet)\n                        )}\n                      </View>\n                      \n                      {/* Removing duplicate \"Can be left alone\" section as it's already in the Compatibility & Training section */}\n                      \n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Weight (lbs):</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputWeight}\n                            value={editedPetData.weight || ''}\n                            onChangeText={(text) => {\n                              // Only allow numbers and decimal point\n                              if (/^(\\d*\\.?\\d*)$/.test(text) || text === '') {\n                                handleEditChange(pet.id, 'weight', text);\n                              }\n                            }}\n                            placeholder=\"Enter weight\"\n                            placeholderTextColor={theme.colors.placeholder}\n                            keyboardType=\"numeric\"\n                          />\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.weight || 'Not specified'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.medicationsContainer}>\n                        <Text style={styles.compatibilityLabel}>Medications:</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputMedications}\n                            value={typeof editedPetData.medications === 'string' ? editedPetData.medications : ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'medications', text)}\n                            placeholder=\"Enter medications\"\n                            placeholderTextColor={theme.colors.placeholder}\n                            multiline\n                          />\n                        ) : (\n                          <Text style={styles.medicationsText}>\n                            {typeof pet.medications === 'string' ? pet.medications : \n                             (pet.medications === null ? 'None' : \n                              (typeof pet.medications === 'object' ? 'None' : String(pet.medications)))}\n                          </Text>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                )}\n              </View>\n              \n              <View style={styles.detailSection}>\n                {renderSectionHeader(pet.id, \"Compatibility & Training\", \"compatibility\")}\n                \n                {isSectionExpanded(pet.id, \"compatibility\") && (\n                  <View style={styles.detailColumn}>\n                    <View style={styles.compatibilityContainer}>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Friendly with children:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.childrenFriendly === null && option === \"N/A\") || \n                                  editedPetData.childrenFriendly === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'childrenFriendly', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.childrenFriendly === null && option === \"N/A\") || \n                                  editedPetData.childrenFriendly === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'childrenFriendly')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Friendly with cats:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.catFriendly === null && option === \"N/A\") || \n                                  editedPetData.catFriendly === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'catFriendly', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.catFriendly === null && option === \"N/A\") || \n                                  editedPetData.catFriendly === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'catFriendly')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Friendly with dogs:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.dogFriendly === null && option === \"N/A\") || \n                                  editedPetData.dogFriendly === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'dogFriendly', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.dogFriendly === null && option === \"N/A\") || \n                                  editedPetData.dogFriendly === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'dogFriendly')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Spayed/neutered:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.spayedNeutered === null && option === \"N/A\") || \n                                  editedPetData.spayedNeutered === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'spayedNeutered', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.spayedNeutered === null && option === \"N/A\") || \n                                  editedPetData.spayedNeutered === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'spayedNeutered')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>House trained:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.houseTrained === null && option === \"N/A\") || \n                                  editedPetData.houseTrained === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'houseTrained', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.houseTrained === null && option === \"N/A\") || \n                                  editedPetData.houseTrained === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'houseTrained')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Microchipped:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.microchipped === null && option === \"N/A\") || \n                                  editedPetData.microchipped === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'microchipped', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.microchipped === null && option === \"N/A\") || \n                                  editedPetData.microchipped === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'microchipped')\n                        )}\n                      </View>\n                      <View style={styles.compatibilityItem}>\n                        <Text style={styles.compatibilityLabel}>Can be left alone:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {yesNoOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  (editedPetData.canBeLeftAlone === null && option === \"N/A\") || \n                                  editedPetData.canBeLeftAlone === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'canBeLeftAlone', option === \"N/A\" ? null : option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  (editedPetData.canBeLeftAlone === null && option === \"N/A\") || \n                                  editedPetData.canBeLeftAlone === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          returnYesNoContainer(pet, 'canBeLeftAlone')\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                )}\n              </View>\n              \n              <View style={styles.detailSection}>\n                {renderSectionHeader(pet.id, \"Vet Information\", \"vetInfo\")}\n                \n                {isSectionExpanded(pet.id, \"vetInfo\") && (\n                  <View style={styles.detailColumn}>\n                    <View style={styles.vetInfoContainer}>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Vet name:</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputShort}\n                            value={editedPetData.vetName || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'vetName', text)}\n                            placeholder=\"Enter vet name\"\n                            placeholderTextColor={theme.colors.placeholder}\n                          />\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.vetName || 'None'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Vet address:</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputShort}\n                            value={editedPetData.vetAddress || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'vetAddress', text)}\n                            placeholder=\"Enter vet address\"\n                            placeholderTextColor={theme.colors.placeholder}\n                          />\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.vetAddress || 'None'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Vet phone:</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputShort}\n                            value={editedPetData.vetPhone || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'vetPhone', text)}\n                            placeholder=\"Enter vet phone\"\n                            placeholderTextColor={theme.colors.placeholder}\n                            keyboardType=\"phone-pad\"\n                          />\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.vetPhone || 'None'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Insurance provider:</Text>\n                        {isEditing ? (\n                          <TextInput\n                            style={styles.editInputShort}\n                            value={editedPetData.insuranceProvider || ''}\n                            onChangeText={(text) => handleEditChange(pet.id, 'insuranceProvider', text)}\n                            placeholder=\"Enter insurance provider\"\n                            placeholderTextColor={theme.colors.placeholder}\n                          />\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.insuranceProvider || 'Not specified'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Sex:</Text>\n                        {isEditing ? (\n                          <View style={styles.dropdownContainerEdit}>\n                            {sexOptions.map((option) => (\n                              <TouchableOpacity\n                                key={option}\n                                style={[\n                                  styles.optionButton,\n                                  editedPetData.sex === option ? styles.selectedOption : null\n                                ]}\n                                onPress={() => handleEditChange(pet.id, 'sex', option)}\n                              >\n                                <Text style={[\n                                  styles.optionText,\n                                  editedPetData.sex === option ? styles.selectedOptionText : null\n                                ]}>\n                                  {option}\n                                </Text>\n                              </TouchableOpacity>\n                            ))}\n                          </View>\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.sex || 'None Selected'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Adoption Date:</Text>\n                        {isEditing ? (\n                          <View style={styles.customDatePickerContainer}>\n                            <TouchableOpacity \n                              activeOpacity={0.8}\n                              style={styles.dateInputBox}\n                              onPress={() => showDatePicker(pet.id, 'adoptionDate')}\n                            >\n                              <Text style={[\n                                styles.dateInputText, \n                                !editedPetData.adoptionDate && styles.placeholderText\n                              ]}>\n                                {editedPetData.adoptionDate || 'MM-DD-YYYY'}\n                              </Text>\n                            </TouchableOpacity>\n                            <TouchableOpacity \n                              style={styles.calendarButton}\n                              onPress={() => showDatePicker(pet.id, 'adoptionDate')}\n                              activeOpacity={0.7}\n                            >\n                              <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                            </TouchableOpacity>\n                          </View>\n                        ) : (\n                          <Text style={styles.vetInfoText}>{pet.adoptionDate || 'Not specified'}</Text>\n                        )}\n                      </View>\n                      <View style={styles.vetInfoItem}>\n                        <Text style={styles.vetInfoLabel}>Vet documents:</Text>\n                        {isEditing ? (\n                          <View style={styles.documentActionContainer}>\n                            <TouchableOpacity \n                              style={styles.uploadButton}\n                              onPress={() => handleUploadDocument(pet.id)}\n                            >\n                              <MaterialCommunityIcons name=\"upload\" size={16} color={theme.colors.background} />\n                              <Text style={styles.uploadButtonText}>Upload</Text>\n                            </TouchableOpacity>\n                            {renderVetDocuments(editedPetData.vetDocuments)}\n                          </View>\n                        ) : (\n                          <TouchableOpacity style={styles.documentButton}>\n                            <MaterialCommunityIcons name=\"file-document-outline\" size={16} color={theme.colors.primary} />\n                            <Text style={styles.documentButtonText}>View documents</Text>\n                          </TouchableOpacity>\n                        )}\n                      </View>\n                    </View>\n                  </View>\n                )}\n              </View>\n            </View>\n          )}\n        </View>\n      );\n    } catch (error) {\n      console.error(\"Error rendering pet card: \" + (error.message || \"Unknown error\"));\n      return null; // Return null on error to prevent crashes\n    }\n  };\n\n  const handleAddEmergencyContact = () => {\n    if (newEmergencyContact.name && newEmergencyContact.phone) {\n      debugLog(\"MBA123\", \"Adding emergency contact\", newEmergencyContact);\n      const updatedContacts = [...(preferences.emergencyContacts || []), newEmergencyContact];\n      onUpdatePreferences('emergencyContacts', updatedContacts);\n      setNewEmergencyContact({ name: '', phone: '' });\n      setIsAddingEmergencyContact(false);\n    }\n  };\n\n  const handleAddHouseholdMember = () => {\n    if (newHouseholdMember.name && newHouseholdMember.phone) {\n      debugLog(\"MBA123\", \"Adding household member\", newHouseholdMember);\n      const updatedMembers = [...(preferences.authorizedHouseholdMembers || []), newHouseholdMember];\n      onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n      setNewHouseholdMember({ name: '', phone: '' });\n      setIsAddingHouseholdMember(false);\n    }\n  };\n\n  const handleRemoveEmergencyContact = (index) => {\n    debugLog(\"MBA123\", \"Removing emergency contact\", index);\n    const updatedContacts = [...(preferences.emergencyContacts || [])];\n    updatedContacts.splice(index, 1);\n    onUpdatePreferences('emergencyContacts', updatedContacts);\n  };\n\n  const handleRemoveHouseholdMember = (index) => {\n    debugLog(\"MBA123\", \"Removing household member\", index);\n    const updatedMembers = [...(preferences.authorizedHouseholdMembers || [])];\n    updatedMembers.splice(index, 1);\n    onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n  };\n\n  const handleAddAsHouseholdMember = (contact) => {\n    debugLog(\"MBA123\", \"Adding emergency contact as household member\", contact);\n    const updatedMembers = [...(preferences.authorizedHouseholdMembers || [])];\n    \n    // Check if already exists\n    const exists = updatedMembers.some(member => \n      member.name === contact.name && member.phone === contact.phone\n    );\n    \n    if (!exists) {\n      updatedMembers.push(contact);\n      onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n    }\n  };\n\n  const renderEmergencyContactsSection = () => {\n    if (userRole !== 'petOwner') return null;\n\n    return (\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Emergency Contacts</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={() => setIsAddingEmergencyContact(!isAddingEmergencyContact)}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Contact</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {isAddingEmergencyContact && (\n          <View style={styles.addContactForm}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Contact Name\"\n              value={newEmergencyContact.name}\n              onChangeText={(text) => setNewEmergencyContact({...newEmergencyContact, name: text})}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Phone Number\"\n              value={newEmergencyContact.phone}\n              onChangeText={(text) => setNewEmergencyContact({...newEmergencyContact, phone: text})}\n              keyboardType=\"phone-pad\"\n            />\n            <TouchableOpacity \n              style={styles.submitButton}\n              onPress={handleAddEmergencyContact}\n            >\n              <Text style={styles.submitButtonText}>Save Contact</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        <View style={styles.contactsList}>\n          {(preferences.emergencyContacts || []).map((contact, index) => (\n            <View key={index} style={styles.contactCard}>\n              <View style={styles.contactInfo}>\n                <Text style={styles.contactName}>{contact.name}</Text>\n                <Text style={styles.contactPhone}>{contact.phone}</Text>\n              </View>\n              <View style={styles.contactActions}>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleAddAsHouseholdMember(contact)}\n                >\n                  <MaterialCommunityIcons name=\"account-plus\" size={20} color={theme.colors.primary} />\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleRemoveEmergencyContact(index)}\n                >\n                  <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n          {(preferences.emergencyContacts || []).length === 0 && !isAddingEmergencyContact && (\n            <Text style={styles.emptyListText}>No emergency contacts added yet</Text>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHouseholdMembersSection = () => {\n    if (userRole !== 'petOwner') return null;\n\n    return (\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Authorized Household Members</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={() => setIsAddingHouseholdMember(!isAddingHouseholdMember)}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Member</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {isAddingHouseholdMember && (\n          <View style={styles.addContactForm}>\n            <TextInput\n              style={styles.input}\n              placeholder=\"Member Name\"\n              value={newHouseholdMember.name}\n              onChangeText={(text) => setNewHouseholdMember({...newHouseholdMember, name: text})}\n            />\n            <TextInput\n              style={styles.input}\n              placeholder=\"Phone Number\"\n              value={newHouseholdMember.phone}\n              onChangeText={(text) => setNewHouseholdMember({...newHouseholdMember, phone: text})}\n              keyboardType=\"phone-pad\"\n            />\n            <TouchableOpacity \n              style={styles.submitButton}\n              onPress={handleAddHouseholdMember}\n            >\n              <Text style={styles.submitButtonText}>Save Member</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        <View style={styles.contactsList}>\n          {(preferences.authorizedHouseholdMembers || []).map((member, index) => (\n            <View key={index} style={styles.contactCard}>\n              <View style={styles.contactInfo}>\n                <Text style={styles.contactName}>{member.name}</Text>\n                <Text style={styles.contactPhone}>{member.phone}</Text>\n              </View>\n              <View style={styles.contactActions}>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleRemoveHouseholdMember(index)}\n                >\n                  <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n          {(preferences.authorizedHouseholdMembers || []).length === 0 && !isAddingHouseholdMember && (\n            <Text style={styles.emptyListText}>No household members added yet</Text>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const formatDateString = (date) => {\n    if (!date) return '';\n    \n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const year = date.getFullYear();\n    \n    return `${month}-${day}-${year}`;\n  };\n\n  const parseDate = (dateString) => {\n    if (!dateString) return new Date();\n    \n    const [month, day, year] = dateString.split('-').map(part => parseInt(part, 10));\n    \n    if (!month || !day || !year || isNaN(month) || isNaN(day) || isNaN(year)) {\n      return new Date();\n    }\n    \n    return new Date(year, month - 1, day);\n  };\n\n  const showDatePicker = (petId, field) => {\n    const currentDate = parseDate(editedPetsData[petId]?.[field]);\n    \n    setDisplayMonth(currentDate.getMonth());\n    setDisplayYear(currentDate.getFullYear());\n    \n    setDatePickerConfig({\n      isVisible: true,\n      currentField: field,\n      currentPetId: petId,\n      selectedDate: currentDate\n    });\n  };\n\n  const handleDatePickerSelect = (event, date) => {\n    // On Android, this is called immediately when a date is selected\n    if (Platform.OS === 'android') {\n      if (event?.type === 'dismissed') {\n        setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n        return;\n      }\n      \n      if (date) {\n        const formattedDate = formatDateString(date);\n        handleEditChange(datePickerConfig.currentPetId, datePickerConfig.currentField, formattedDate);\n      }\n      \n      setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n      return;\n    }\n    \n    // For iOS and Web, this is called when the confirm button is pressed\n    if (date) {\n      const formattedDate = formatDateString(date);\n      handleEditChange(datePickerConfig.currentPetId, datePickerConfig.currentField, formattedDate);\n    }\n    \n    setDatePickerConfig({\n      isVisible: false,\n      currentField: null,\n      currentPetId: null,\n      selectedDate: null\n    });\n  };\n\n  // Generate calendar grid data\n  const calendarData = useMemo(() => {\n    if (!datePickerConfig.isVisible) return [];\n    \n    const currentDate = datePickerConfig.selectedDate || new Date();\n    const firstDayOfMonth = new Date(displayYear, displayMonth, 1);\n    const lastDayOfMonth = new Date(displayYear, displayMonth + 1, 0);\n    const daysInMonth = lastDayOfMonth.getDate();\n    const startingDayOfWeek = firstDayOfMonth.getDay(); // 0 = Sunday, 1 = Monday, etc.\n    \n    // Create calendar grid with padding for previous and next month days\n    const totalDays = Math.ceil((daysInMonth + startingDayOfWeek) / 7) * 7;\n    const calendarDays = [];\n    \n    let dayCounter = 1 - startingDayOfWeek;\n    for (let i = 0; i < totalDays; i++) {\n      const dayDate = new Date(displayYear, displayMonth, dayCounter);\n      const isCurrentMonth = dayDate.getMonth() === displayMonth;\n      const isSelectedDate = isCurrentMonth && \n        dayDate.getDate() === currentDate.getDate() && \n        dayDate.getMonth() === currentDate.getMonth() && \n        dayDate.getFullYear() === currentDate.getFullYear();\n      \n      calendarDays.push({\n        date: dayDate,\n        day: dayDate.getDate(),\n        isCurrentMonth,\n        isSelectedDate,\n      });\n      \n      dayCounter++;\n    }\n    \n    // Group by weeks\n    const weeks = [];\n    for (let i = 0; i < calendarDays.length; i += 7) {\n      weeks.push(calendarDays.slice(i, i + 7));\n    }\n    \n    return weeks;\n  }, [displayMonth, displayYear, datePickerConfig.selectedDate, datePickerConfig.isVisible]);\n  \n  // Navigation functions\n  const goToPreviousMonth = () => {\n    if (displayMonth === 0) {\n      setDisplayMonth(11);\n      setDisplayYear(prevYear => prevYear - 1);\n    } else {\n      setDisplayMonth(prevMonth => prevMonth - 1);\n    }\n  };\n  \n  const goToNextMonth = () => {\n    if (displayMonth === 11) {\n      setDisplayMonth(0);\n      setDisplayYear(prevYear => prevYear + 1);\n    } else {\n      setDisplayMonth(prevMonth => prevMonth + 1);\n    }\n  };\n  \n  const selectDate = (date) => {\n    handleDatePickerSelect(null, date);\n  };\n\n  const renderDatePickerModal = () => {\n    if (!datePickerConfig.isVisible) return null;\n    \n    // For Android, use the native date picker\n    if (Platform.OS === 'android') {\n      return (\n        <DateTimePicker\n          value={datePickerConfig.selectedDate}\n          mode=\"date\"\n          display=\"default\"\n          onChange={handleDatePickerSelect}\n        />\n      );\n    }\n    \n    // Month names for header\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    \n    return (\n      <Modal\n        visible={datePickerConfig.isVisible}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setDatePickerConfig(prev => ({ ...prev, isVisible: false }))}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.calendarModalContent}>\n            <View style={styles.calendarModalHeader}>\n              <Text style={styles.calendarModalTitle}>\n                Select {datePickerConfig.currentField === 'birthday' ? 'Birthday' : 'Adoption Date'}\n              </Text>\n              <TouchableOpacity \n                onPress={() => setDatePickerConfig(prev => ({ ...prev, isVisible: false }))}\n                style={styles.closeButton}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            {/* Calendar Header */}\n            <View style={styles.calendarHeader}>\n              <TouchableOpacity onPress={goToPreviousMonth} style={styles.calendarNavButton}>\n                <MaterialCommunityIcons name=\"chevron-left\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n              \n              <Text style={styles.calendarMonthYear}>{monthNames[displayMonth]} {displayYear}</Text>\n              \n              <TouchableOpacity onPress={goToNextMonth} style={styles.calendarNavButton}>\n                <MaterialCommunityIcons name=\"chevron-right\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n            </View>\n            \n            {/* Weekday Headers */}\n            <View style={styles.weekdayLabels}>\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => (\n                <Text key={index} style={styles.weekdayLabel}>{day}</Text>\n              ))}\n            </View>\n            \n            {/* Calendar Grid */}\n            <View style={styles.calendarGrid}>\n              {calendarData.map((week, weekIndex) => (\n                <View key={weekIndex} style={styles.calendarRow}>\n                  {week.map((dayObj, dayIndex) => (\n                    <TouchableOpacity\n                      key={dayIndex}\n                      style={[\n                        styles.calendarDay,\n                        !dayObj.isCurrentMonth && styles.calendarDayOtherMonth,\n                        dayObj.isSelectedDate && styles.calendarDaySelected\n                      ]}\n                      onPress={() => dayObj.isCurrentMonth && selectDate(dayObj.date)}\n                      disabled={!dayObj.isCurrentMonth}\n                    >\n                      <Text style={[\n                        styles.calendarDayText,\n                        !dayObj.isCurrentMonth && styles.calendarDayTextOtherMonth,\n                        dayObj.isSelectedDate && styles.calendarDayTextSelected\n                      ]}>\n                        {dayObj.day}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              ))}\n            </View>\n            \n            <TouchableOpacity \n              style={styles.confirmButton}\n              onPress={() => handleDatePickerSelect(null, datePickerConfig.selectedDate)}\n            >\n              <Text style={styles.confirmButtonText}>Confirm</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    );\n  };\n\n  // Helper function to show error toasts with consistent formatting\n  const showErrorMessage = (title, error) => {\n    let errorMessage = \"There was a problem with this operation. Please try again.\";\n    \n    // Check if we have more specific error details from the API\n    if (error.response && error.response.data) {\n      const details = error.response.data.details;\n      if (details) {\n        // Build a more specific error message\n        errorMessage = \"Error details: \";\n        \n        Object.keys(details).forEach(field => {\n          errorMessage += `${field}: ${details[field].join(\", \")}`;\n        });\n      } else if (error.response.data.error) {\n        errorMessage = error.response.data.error;\n      }\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n    \n    toast({\n      message: `${title}: ${errorMessage}`,\n      type: 'error',\n      duration: 5000\n    });\n  };\n\n\n  // New helper function to replace a temporary pet with a real one in a single operation\n  const replaceTempPetWithReal = (tempPetId, realPetData) => {\n    try {\n      debugLog(\"MBA5555\", \"REPLACE PET - Replacing temp pet with real pet in parent state\");\n      \n      // Find the current pets array and create a new one with the temp pet replaced by the real one\n      const currentPetsArray = [...pets];\n      const tempPetIndex = currentPetsArray.findIndex(p => p.id === tempPetId);\n      \n      if (tempPetIndex !== -1) {\n        // Create a new array with the temp pet replaced by the real one\n        const updatedPets = [\n          ...currentPetsArray.slice(0, tempPetIndex),\n          realPetData,\n          ...currentPetsArray.slice(tempPetIndex + 1)\n        ];\n        \n        // Log the before and after state for debugging\n        debugLog(\"MBA5555\", \"REPLACE PET - Before replace:\", currentPetsArray.map(p => ({id: p.id, name: p.name || 'unnamed'})));\n        debugLog(\"MBA5555\", \"REPLACE PET - After replace:\", updatedPets.map(p => ({id: p.id, name: p.name || 'unnamed'})));\n        \n        // Update the parent's state with the new array\n        try {\n          debugLog(\"MBA5555\", \"REPLACE PET - Calling onReplacePet with new array\");\n          onReplacePet(updatedPets);\n          debugLog(\"MBA5555\", \"REPLACE PET - Atomic replacement completed\");\n        } catch (callbackError) {\n          debugLog(\"MBA5555\", \"REPLACE PET - Error in onReplacePet callback:\", callbackError);\n          // If the callback fails, try the fallback approach\n          try {\n            debugLog(\"MBA5555\", \"REPLACE PET - Trying fallback: delete + add\");\n            onDeletePet(tempPetId);\n            setTimeout(() => {\n              onAddPet(realPetData);\n            }, 50);\n          } catch (fallbackError) {\n            debugLog(\"MBA5555\", \"REPLACE PET - Even fallback failed:\", fallbackError);\n            // At this point, we've tried everything - just re-throw\n            throw fallbackError;\n          }\n        }\n      } else {\n        debugLog(\"MBA5555\", \"REPLACE PET - Temp pet not found in array of length \" + currentPetsArray.length);\n        debugLog(\"MBA5555\", \"REPLACE PET - Current pet IDs: \" + currentPetsArray.map(p => p.id).join(', '));\n        debugLog(\"MBA5555\", \"REPLACE PET - Temp pet ID we're looking for: \" + tempPetId);\n        debugLog(\"MBA5555\", \"REPLACE PET - Falling back to add\");\n        \n        try {\n          onAddPet(realPetData);\n        } catch (addError) {\n          debugLog(\"MBA5555\", \"REPLACE PET - Error in onAddPet fallback:\", addError);\n          throw addError;\n        }\n      }\n    } catch (error) {\n      debugLog(\"MBA5555\", \"REPLACE PET - Unexpected error during pet replacement:\", error);\n      // Re-throw the error so the caller can handle it\n      throw error;\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {renderDatePickerModal()}\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>My Pets</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={handleAddNewPet}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Pet</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.petsList}>\n          {pets.map(renderPetCard)}\n        </View>\n      </View>\n\n      {/* TODO: uncomment this once we have implemented edit facilities */}\n      {/* <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <Text style={styles.sectionTitle}>\n          {userRole === 'professional' ? 'My Home & Environment Facilities' : 'Home & Environment Preferences'}\n        </Text>\n        <Text style={styles.sectionDescription}>\n          {userRole === 'professional' \n            ? 'Select the facilities available in your home for pet care'\n            : 'Select your preferences for pet care facilities'\n          }\n        </Text>\n        <View style={styles.preferencesGrid}>\n          {allFacilities.map((facility) => {\n            const isSelected = preferences.homeEnvironment.includes(facility.id);\n            return (\n              <TouchableOpacity\n                key={facility.id}\n                style={[\n                  styles.preferenceButton,\n                  isSelected && styles.selectedPreference\n                ]}\n                onPress={() => onUpdatePreferences('homeEnvironment', facility.id)}\n              >\n                <MaterialCommunityIcons \n                  name={facility.icon} \n                  size={20} \n                  color={theme.colors.primary}\n                />\n                <Text style={[\n                  styles.preferenceText,\n                  isSelected && styles.selectedPreferenceText\n                ]}>\n                  {facility.label}\n                </Text>\n                {isSelected && (\n                  <MaterialCommunityIcons \n                    name=\"check\" \n                    size={18} \n                    color={theme.colors.primary}\n                    style={styles.checkmark}\n                  />\n                )}\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      </View>\n\n      {renderEmergencyContactsSection()}\n      {renderHouseholdMembersSection()} */}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    gap: 24,\n  },\n  section: {\n    borderRadius: 12,\n    padding: 24,\n    marginBottom: 24,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    marginBottom: 12,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  sectionDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 16,\n  },\n  addButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 6,\n    gap: 8,\n  },\n  addButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  petsList: {\n    gap: 16,\n  },\n  petCard: {\n    borderRadius: 12,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  petBasicInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    flex: 1,\n  },\n  petPhoto: {\n    width: 68,\n    height: 68,\n    borderRadius: 50,\n  },\n  petInfo: {\n    flex: 1,\n    marginLeft: 12,\n    justifyContent: 'center',\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  petDetailsContainer: {\n    flexDirection: 'column',\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 2,\n  },\n  expandedDetails: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    padding: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    gap: 24,\n    marginBottom: 16,\n  },\n  detailColumn: {\n    flex: 1,\n  },\n  detailTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  preferencesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    marginTop: 16,\n  },\n  preferenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: theme.colors.surface,\n  },\n  selectedPreference: {\n    borderColor: theme.colors.primary,\n    backgroundColor: `${theme.colors.primary}15`, // 15 is the hex opacity (about 8%)\n  },\n  preferenceText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    flex: 1,\n  },\n  selectedPreferenceText: {\n    color: theme.colors.primary,\n  },\n  checkmark: {\n    marginLeft: 'auto',\n  },\n  petActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  editButton: {\n    padding: 4,\n  },\n  fixButton: {\n    padding: 4,\n    backgroundColor: `${theme.colors.warning}15`,\n    borderRadius: 4,\n    marginHorizontal: 4,\n  },\n  // New styles for emergency contacts and household members\n  addContactForm: {\n    marginBottom: 16,\n    gap: 12,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  contactsList: {\n    gap: 12,\n  },\n  contactCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  contactInfo: {\n    flex: 1,\n  },\n  contactName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  contactPhone: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  contactActions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  actionButton: {\n    padding: 8,\n  },\n  emptyListText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: 12,\n  },\n  compatibilityContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  compatibilityItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    flexWrap: 'wrap',\n  },\n  compatibilityLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 0.4,\n    marginRight: 10,\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    minWidth: 60,\n    justifyContent: 'flex-end',\n  },\n  dropdownText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  careInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  medicationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  medicationsText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  vetInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  vetInfoItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  vetInfoLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  vetInfoText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  documentButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  documentButtonText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n  },\n  dropdownContainerEdit: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    minWidth: 60,\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap'\n  },\n  optionButton: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    marginLeft: 10,\n    marginBottom: 5\n  },\n  selectedOption: {\n    borderColor: theme.colors.primary,\n    backgroundColor: `${theme.colors.primary}15`,\n  },\n  optionText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  selectedOptionText: {\n    color: theme.colors.primary,\n  },\n  editInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  editInputMedications: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    marginLeft: 10\n  },\n  editInputShort: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    width: '55%',\n    marginLeft: 'auto'\n  },\n  editInputWeight: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    width: '40%',\n    marginLeft: 'auto'\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n  },\n  uploadButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  documentActionContainer: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  documentsList: {\n    marginTop: 8,\n  },\n  documentItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingVertical: 6,\n  },\n  documentName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  viewDocButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    backgroundColor: `${theme.colors.primary}15`,\n  },\n  viewDocText: {\n    fontSize: 12,\n    color: theme.colors.primary,\n  },\n  noDocumentsText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    marginTop: 8,\n  },\n  detailSection: {\n    marginTop: 16,\n  },\n  editContainer: {\n    flexWrap: 'wrap',\n    gap: 16,\n    alignItems: 'flex-start',\n  },\n  inputsWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    flex: 1,\n  },\n  inputWrapper: {\n    minWidth: 150,\n    flexBasis: '46%',\n    flexGrow: 1,\n    marginBottom: 8,\n  },\n  inputLabel: {\n    fontSize: 12,\n    color: theme.colors.secondary,\n    marginBottom: 4,\n  },\n  profilePhotoButton: {\n    position: 'relative',\n  },\n  plusIconContainer: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    backgroundColor: theme.colors.background,\n    borderRadius: 10,\n  },\n  sectionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  editMainContainer: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  editHeaderRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 16,\n  },\n  editProfileContainer: {\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  editDetailsContainer: {\n    width: '100%',\n  },\n  editActions: {\n    flexDirection: 'row',\n    gap: 12,\n    alignItems: 'center',\n  },\n  dateInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  dateInfoItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dateInfoLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  dateInfoText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  customDatePickerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    overflow: 'hidden',\n    height: 46,\n  },\n  dateInputBox: {\n    flex: 1,\n    height: '100%',\n    justifyContent: 'center',\n    paddingHorizontal: 12,\n  },\n  dateInputText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  placeholderText: {\n    color: theme.colors.placeholder,\n  },\n  calendarButton: {\n    width: 46,\n    height: '100%',\n    backgroundColor: theme.colors.surface,\n    borderLeftWidth: 1,\n    borderLeftColor: theme.colors.border,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  datePickerContainer: {\n    flex: 1,\n    maxWidth: '60%',\n    marginLeft: 'auto',\n    marginRight: 10,\n  },\n  // Media query style for larger screens\n  '@media (min-width: 900px)': {\n    petDetailsContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 8,\n    },\n    petDetails: {\n      marginRight: 8,\n    },\n  },\n  // Modal calendar styles\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  calendarModalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 420,\n  },\n  calendarModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  calendarModalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  calendarHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  calendarNavButton: {\n    padding: 8,\n  },\n  calendarMonthYear: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  weekdayLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  weekdayLabel: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.secondary,\n    paddingVertical: 8,\n  },\n  calendarGrid: {\n    marginBottom: 16,\n  },\n  calendarRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  calendarDay: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    margin: 2,\n  },\n  calendarDayText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  calendarDayOtherMonth: {\n    opacity: 0.3,\n  },\n  calendarDayTextOtherMonth: {\n    color: theme.colors.placeholder,\n  },\n  calendarDaySelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  calendarDayTextSelected: {\n    color: theme.colors.white,\n    fontWeight: '600',\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n    padding: 14,\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  confirmButtonText: {\n    color: theme.colors.white,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stackedFields: {\n    flexDirection: 'column',\n    gap: 16,\n    marginBottom: 16,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  saveButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 6,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    backgroundColor: theme.colors.primary,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  // Error modal styles\n  errorModalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 24,\n    width: '90%',\n    maxWidth: 500,\n  },\n  successModalContent: {\n    borderLeftWidth: 4,\n    borderLeftColor: theme.colors.success,\n  },\n  errorModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  successModalHeader: {\n    // Same styles, but we might want to customize in the future\n  },\n  errorModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.error,\n  },\n  successModalTitle: {\n    color: theme.colors.success,\n  },\n  errorModalMessage: {\n    marginBottom: 24,\n    fontSize: 16,\n    lineHeight: 24,\n  },\n  successModalMessage: {\n    // Same styles, but we might want to customize in the future\n  },\n  errorModalButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  successModalButton: {\n    backgroundColor: theme.colors.success,\n  },\n  errorModalButtonText: {\n    color: theme.colors.surface,\n    fontWeight: 'bold',\n  },\n  successModalButtonText: {\n    // Same styles, but we might want to customize in the future\n  },\n});\n\nexport default PetsPreferencesTab; ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Switch, ScrollView, Modal, FlatList } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { getTimeSettings, updateTimeSettings } from '../../api/API';\nimport { debugLog } from '../../context/AuthContext';\nimport { useToast } from '../../components/ToastProvider';\n\nconst SubscriptionPlan = ({ plan, isPopular, isCurrent, onSwitch }) => (\n  <View style={[\n    styles.planCard,\n    isCurrent && styles.currentPlanBorder\n  ]}>\n    {isPopular && (\n      <View style={styles.popularTag}>\n        <Text style={styles.popularTagText}>Popular</Text>\n      </View>\n    )}\n    <Text style={styles.planTitle}>{plan.title}</Text>\n    <Text style={styles.planPrice}>{plan.price}</Text>\n    <Text style={styles.planDescription}>{plan.description}</Text>\n    <View style={styles.featuresList}>\n      {plan.features.map((feature, index) => (\n        <View key={index} style={styles.featureItem}>\n          <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />\n          <Text style={styles.featureText}>{feature}</Text>\n        </View>\n      ))}\n    </View>\n    <TouchableOpacity\n      style={[styles.planButton, isCurrent && styles.currentPlanButton]}\n      onPress={() => !isCurrent && onSwitch(plan.id)}\n    >\n      <Text style={[styles.planButtonText, isCurrent && styles.currentPlanButtonText]}>\n        {isCurrent ? 'Current Plan' : 'Switch Plan'}\n      </Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst SettingsPaymentsTab = ({\n  push_notifications,\n  email_updates,\n  marketing_communications,\n  profile_visibility,\n  timezone: propTimezone,\n  use_military_time,\n  onUpdateSetting,\n  paymentMethods,\n  onAddPaymentMethod,\n  onRemovePaymentMethod,\n  onSetDefaultPayment,\n  isMobile,\n  currentPlan = { \n    id: 'waitlist',\n    title: 'Waitlist Signup',\n    nextBilling: 'N/A',\n    connections: { used: 0, total: 'Unlimited' }\n  },\n  onSwitchPlan,\n  userRole,\n  isApprovedProfessional,\n}) => {\n  const [timezone, setTimezone] = useState(propTimezone || 'UTC');\n  const [timezoneModalVisible, setTimezoneModalVisible] = useState(false);\n  const [timezones, setTimezones] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const showToast = useToast();\n\n  useEffect(() => {\n    // Fetch user's time settings when component mounts\n    const fetchTimeSettings = async () => {\n      try {\n        setLoading(true);\n        const timeSettings = await getTimeSettings();\n        setTimezone(timeSettings.timezone);\n        debugLog('MBA12345 Fetched time settings:', timeSettings);\n      } catch (error) {\n        debugLog('MBA12345 Error fetching time settings:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Check if timezone is in the props already\n    if (propTimezone) {\n      setTimezone(propTimezone);\n    } else {\n      fetchTimeSettings();\n    }\n  }, [propTimezone]);\n\n  useEffect(() => {\n    debugLog('MBA54321 SettingsPaymentsTab received paymentMethods:', paymentMethods);\n  }, [paymentMethods]);\n\n  const handleTimezoneChange = async (newTimezone) => {\n    try {\n      setLoading(true);\n      await updateTimeSettings(newTimezone);\n      setTimezone(newTimezone);\n      setTimezoneModalVisible(false);\n      debugLog('MBA12345 Updated timezone to:', newTimezone);\n      showToast({\n        message: 'Timezone updated successfully',\n        type: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      debugLog('MBA12345 Error updating timezone:', error);\n      showToast({\n        message: 'Failed to update timezone. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openTimezoneModal = () => {\n    // Use the same timezone list as in TimezoneSettings.js\n    const COMMON_TIMEZONES = [\n      'America/New_York',\n      'America/Chicago',\n      'America/Denver',\n      'America/Los_Angeles',\n      'America/Anchorage',\n      'America/Adak',\n      'Pacific/Honolulu',\n      'America/Phoenix',\n      'America/Boise',\n      'America/Detroit',\n      'America/Indiana/Indianapolis',\n      'America/Indiana/Knox',\n      'America/Indiana/Marengo',\n      'America/Indiana/Petersburg',\n      'America/Indiana/Tell_City',\n      'America/Indiana/Vevay',\n      'America/Indiana/Vincennes',\n      'America/Indiana/Winamac',\n      'America/Kentucky/Louisville',\n      'America/Kentucky/Monticello',\n      'America/Menominee',\n      'America/North_Dakota/Beulah',\n      'America/North_Dakota/Center',\n      'America/North_Dakota/New_Salem',\n      'America/Sitka',\n      'America/Yakutat',\n      'Europe/London',\n      'Europe/Paris',\n      'Europe/Berlin',\n      'Europe/Moscow',\n      'Asia/Tokyo',\n      'Asia/Shanghai',\n      'Asia/Dubai',\n      'Australia/Sydney',\n      'Pacific/Auckland',\n      'UTC'\n    ];\n    \n    setTimezones(COMMON_TIMEZONES);\n    setTimezoneModalVisible(true);\n  };\n\n  const renderTimezoneModal = () => (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={timezoneModalVisible}\n      onRequestClose={() => setTimezoneModalVisible(false)}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Select Timezone</Text>\n            <TouchableOpacity onPress={() => setTimezoneModalVisible(false)}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          <FlatList\n            data={timezones}\n            keyExtractor={(item) => item}\n            renderItem={({ item }) => (\n              <TouchableOpacity\n                style={[\n                  styles.timezoneItem,\n                  item === timezone && styles.selectedTimezoneItem\n                ]}\n                onPress={() => handleTimezoneChange(item)}\n              >\n                <Text style={[\n                  styles.timezoneText,\n                  item === timezone && styles.selectedTimezoneText\n                ]}>\n                  {item}\n                </Text>\n                {item === timezone && (\n                  <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />\n                )}\n              </TouchableOpacity>\n            )}\n            initialNumToRender={20}\n            maxToRenderPerBatch={20}\n            windowSize={10}\n          />\n        </View>\n      </View>\n    </Modal>\n  );\n\n  const getSubscriptionPlans = () => {\n    const commonPlans = [\n      {\n        id: 'free',\n        title: 'Free Tier',\n        price: 'Free',\n        description: '1 Free Booking/Month, then 15% per booking',\n        features: ['Basic profile listing', 'Up to 1 booking/month', 'Standard support'],\n        isPopular: false,\n      },\n      {\n        id: 'waitlist',\n        title: 'Waitlist Tier',\n        price: 'Free',\n        description: 'No commissions, no subscriptions, no fees',\n        features: ['Early signup discounts', 'Waitlist for early access', 'Unlimited connections', 'Priority support',],\n        isPopular: false,\n      }\n    ];\n\n    if (userRole === 'professional') {\n      return [\n        ...commonPlans,\n        {\n          id: 'subscription',\n          title: 'Pro Subscription',\n          price: '$29.99/month',\n          description: 'No fees as pro',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees'],\n          isPopular: true,\n        },\n        {\n          id: 'dual_subscription',\n          title: 'Dual Role Subscription',\n          price: '$39.99/month',\n          description: 'No fees as pro or owner',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees', 'Use as both pro and owner'],\n          isPopular: false,\n        }\n      ];\n    } else {\n      return [\n        ...commonPlans,\n        {\n          id: 'subscription',\n          title: 'Owner Subscription',\n          price: '$19.99/month',\n          description: 'Unlimited bookings',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics'],\n          isPopular: true,\n        }\n      ];\n\n      if (isApprovedProfessional) {\n        plans.push({\n          id: 'dual_subscription',\n          title: 'Dual Role Subscription',\n          price: '$39.99/month',\n          description: 'No fees as pro or owner',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees', 'Use as both pro and owner'],\n          isPopular: false,\n        });\n      }\n\n      return plans;\n    }\n  };\n\n  const renderPlansSection = () => (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>Subscription Plans</Text>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={true}\n        style={styles.plansScroll}\n        contentContainerStyle={styles.plansScrollContent}\n      >\n        {getSubscriptionPlans().map((plan) => (\n          <View key={plan.id} style={styles.planCardContainer}>\n            <SubscriptionPlan\n              plan={plan}\n              isPopular={plan.isPopular}\n              isCurrent={currentPlan?.id === plan.id}\n              onSwitch={onSwitchPlan}\n            />\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n\n  const renderCurrentPlanInfo = () => (\n    <View style={styles.currentPlanInfo}>\n      <Text style={styles.currentPlanTitle}>{currentPlan?.title || 'Waitlist Signup'}</Text>\n      <Text style={styles.currentPlanBilling}>\n        Next billing date: {currentPlan?.nextBilling || 'N/A'}\n      </Text>\n      <View style={styles.usageStats}>\n        <Text style={styles.usageText}>\n          {currentPlan?.id === 'waitlist' ? 'Unlimited connections available' : `${currentPlan?.connections?.used || 0} of ${currentPlan?.connections?.total || 'Unlimited'} connections used`}\n        </Text>\n        {currentPlan?.id !== 'waitlist' && (\n          <View style={styles.usageBar}>\n            <View style={[styles.usageProgress, { width: `${(currentPlan?.connections?.used / currentPlan?.connections?.total) * 100 || 0}%` }]} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n\n  const renderPaymentMethodsSection = () => (\n    <View style={styles.section}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>{userRole === 'professional' ? 'Payout Methods' : 'Payment Methods' }</Text>\n        <TouchableOpacity style={styles.addButton} onPress={onAddPaymentMethod}>\n          <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n          <Text style={styles.addButtonText}>Add New</Text>\n        </TouchableOpacity>\n      </View>\n      {paymentMethods && paymentMethods.length > 0 ? (\n        paymentMethods.map(renderPaymentMethod)\n      ) : (\n        <View style={styles.noPaymentMethodsContainer}>\n          <Text style={styles.noPaymentMethodsText}>No payment methods added yet</Text>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderDesktopLayout = () => (\n    <View style={styles.desktopContainer}>\n      <View style={styles.leftColumn}>\n        {renderPlansSection()}\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Notification Preferences</Text>\n          {renderNotificationSettings()}\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Privacy Settings</Text>\n          {renderPrivacySettings()}\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Time Settings</Text>\n          <View style={styles.settingItem}>\n            <View style={styles.settingContent}>\n              <MaterialCommunityIcons name=\"clock-outline\" size={24} color={theme.colors.primary} />\n              <View style={styles.settingTextContainer}>\n                <Text style={styles.settingTitle}>Timezone</Text>\n                <Text style={styles.settingDescription}>Set your local timezone for accurate time display</Text>\n              </View>\n            </View>\n            <TouchableOpacity \n              style={styles.timezoneButton}\n              onPress={openTimezoneModal}\n            >\n              <Text style={styles.timezoneButtonText}>{timezone}</Text>\n              <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n            </TouchableOpacity>\n          </View>\n          \n          {/* TODO: implement after MVP Launch \n          <View style={styles.settingItem}>\n            <View style={styles.settingContent}>\n              <MaterialCommunityIcons name=\"clock-time-eight\" size={24} color={theme.colors.primary} />\n              <View style={styles.settingTextContainer}>\n                <Text style={styles.settingTitle}>Military Time (24-hour)</Text>\n                <Text style={styles.settingDescription}>Use 24-hour time format instead of 12-hour format</Text>\n              </View>\n            </View>\n            <Switch\n              value={use_military_time}\n              onValueChange={(value) => handleUpdateSetting('use_military_time', value)}\n              trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n            />\n          </View> */}\n        </View>\n      </View>\n\n      <View style={styles.rightColumn}>\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Current Plan</Text>\n          {renderCurrentPlanInfo()}\n        </View>\n\n        {renderPaymentMethodsSection()}\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Billing History</Text>\n          {/* Add billing history items here */}\n          <TouchableOpacity style={styles.viewAllButton}>\n            <Text style={styles.viewAllText}>View All Transactions</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderMobileLayout = () => (\n    <ScrollView style={styles.mobileContainer}>\n      {renderPlansSection()}\n      {renderPaymentMethodsSection()}\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Notification Settings</Text>\n        {renderNotificationSettings()}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Privacy Settings</Text>\n        {renderPrivacySettings()}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Time Settings</Text>\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"clock-outline\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Timezone</Text>\n              <Text style={styles.settingDescription}>Set your local timezone for accurate time display</Text>\n            </View>\n          </View>\n          <TouchableOpacity \n            style={styles.timezoneButton}\n            onPress={openTimezoneModal}\n          >\n            <Text style={styles.timezoneButtonText}>{timezone}</Text>\n            <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        \n        {/* TODO: implement after MVP Launch \n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"clock-time-eight\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Military Time (24-hour)</Text>\n              <Text style={styles.settingDescription}>Use 24-hour time format instead of 12-hour format</Text>\n            </View>\n          </View>\n          <Switch\n            value={use_military_time}\n            onValueChange={(value) => handleUpdateSetting('use_military_time', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View> */}\n      </View>\n    </ScrollView>\n  );\n\n  const renderNotificationSettings = () => {\n    return (\n      <>\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"bell\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Push Notifications</Text>\n              <Text style={styles.settingDescription}>Receive push notifications for updates</Text>\n            </View>\n          </View>\n          <Switch\n            value={push_notifications}\n            onValueChange={(value) => handleUpdateSetting('push_notifications', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"email\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Email Updates</Text>\n              <Text style={styles.settingDescription}>Receive important updates via email</Text>\n            </View>\n          </View>\n          <Switch\n            value={email_updates}\n            onValueChange={(value) => handleUpdateSetting('email_updates', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"bell-outline\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Marketing Communications</Text>\n              <Text style={styles.settingDescription}>Receive promotions and marketing emails</Text>\n            </View>\n          </View>\n          <Switch\n            value={marketing_communications}\n            onValueChange={(value) => handleUpdateSetting('marketing_communications', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n      </>\n    );\n  };\n\n  const renderPrivacySettings = () => {\n    return (\n      <>\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"account-eye\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Profile Visibility</Text>\n              <Text style={styles.settingDescription}>Make your profile visible to others</Text>\n            </View>\n          </View>\n          <Switch\n            value={profile_visibility}\n            onValueChange={(value) => handleUpdateSetting('profile_visibility', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n        \n        {/* TODO: Add location privacy toggle after MVP launch */}\n      </>\n    );\n  };\n\n  const renderSettingItem = (setting) => (\n    <View key={setting.id} style={styles.settingItem}>\n      <View style={styles.settingContent}>\n        <MaterialCommunityIcons name={setting.icon} size={24} color={theme.colors.primary} />\n        <View style={styles.settingTextContainer}>\n          <Text style={styles.settingTitle}>{setting.title}</Text>\n          {setting.description && (\n            <Text style={styles.settingDescription}>{setting.description}</Text>\n          )}\n        </View>\n      </View>\n      {setting.type === 'toggle' ? (\n        <Switch\n          value={setting.value}\n          onValueChange={(value) => handleUpdateSetting(setting.id, value)}\n          trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n        />\n      ) : setting.type === 'timezone' ? (\n        <TouchableOpacity \n          style={styles.timezoneButton}\n          onPress={openTimezoneModal}\n        >\n          <Text style={styles.timezoneButtonText}>{timezone}</Text>\n          <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity \n          style={styles.actionButton}\n          onPress={() => handleUpdateSetting(setting.id)}\n        >\n          <Text style={styles.actionButtonText}>{setting.actionText || 'Update'}</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n\n  const renderPaymentMethod = (method) => (\n    <View key={method.id} style={styles.paymentItem}>\n      <View style={styles.paymentContent}>\n        <MaterialCommunityIcons \n          name={method.type === 'card' ? 'credit-card' : 'bank'} \n          size={24} \n          color={theme.colors.primary} \n        />\n        <View style={styles.paymentTextContainer}>\n          <View style={styles.paymentTitleRow}>\n            <Text style={styles.paymentTitle}>\n              {method.type === 'card' ? `•••• ${method.last4}` : method.bankName}\n            </Text>\n            {!method.isDefault && (\n              <TouchableOpacity \n                style={styles.setDefaultButton}\n                onPress={() => onSetDefaultPayment(method.id)}\n              >\n                <Text style={styles.setDefaultText}>Set Default</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n          <Text style={styles.paymentDescription} numberOfLines={1}>\n            {method.type === 'card' ? `Expires ${method.expiry}` : `Account ending in ${method.last4}`}\n          </Text>\n        </View>\n      </View>\n      <TouchableOpacity \n        style={styles.deleteButton} \n        onPress={() => onRemovePaymentMethod(method.id)}\n      >\n        <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n      </TouchableOpacity>\n    </View>\n  );\n\n  // Handle setting updates with toast notifications\n  const handleUpdateSetting = (id, value) => {\n    debugLog('MBA54321 Updating setting:', { id, value });\n    \n    // Get readable setting name for toast messages\n    const settingNames = {\n      'push_notifications': 'Push Notifications',\n      'email_updates': 'Email Updates',\n      'marketing_communications': 'Marketing Communications',\n      'profile_visibility': 'Profile Visibility',\n      'use_military_time': 'Military Time'\n    };\n    \n    const settingName = settingNames[id] || id;\n    \n    // Call the parent update function\n    onUpdateSetting(id, value)\n      .then(() => {\n        // Show success toast\n        showToast({\n          message: `${settingName} ${value ? 'enabled' : 'disabled'} successfully`,\n          type: 'success',\n          duration: 3000\n        });\n      })\n      .catch(error => {\n        debugLog('MBA54321 Error updating setting:', error);\n        // Show error toast\n        showToast({\n          message: `Failed to update ${settingName.toLowerCase()}. Please try again.`,\n          type: 'error',\n          duration: 4000\n        });\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      {isMobile ? renderMobileLayout() : renderDesktopLayout()}\n      {renderTimezoneModal()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  desktopContainer: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  leftColumn: {\n    flex: 1,\n    gap: 24,\n  },\n  rightColumn: {\n    width: '35%',\n    minWidth: 300,\n    gap: 24,\n  },\n  mobileContainer: {\n    flex: 1,\n  },\n  section: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 15,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 15,\n  },\n  plansScroll: {\n    marginHorizontal: -20,\n  },\n  plansScrollContent: {\n    paddingHorizontal: 20,\n    paddingBottom: 16,\n  },\n  planCardContainer: {\n    width: 280,\n    marginRight: 16,\n    paddingBottom: 4,\n  },\n  planCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    position: 'relative',\n    marginTop: 12,\n    height: '100%',\n    borderWidth: 0,\n  },\n  currentPlanBorder: {\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  popularPlan: {\n  },\n  popularTag: {\n    position: 'absolute',\n    top: -12,\n    right: 20,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n    zIndex: 2,\n  },\n  popularTagText: {\n    color: theme.colors.surfaceContrast,\n    fontWeight: '600',\n    fontSize: 12,\n  },\n  planTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  planPrice: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginBottom: 5,\n  },\n  planDescription: {\n    color: theme.colors.secondary,\n    marginBottom: 15,\n  },\n  featuresList: {\n    gap: 10,\n    marginBottom: 20,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  featureText: {\n    color: theme.colors.text,\n  },\n  planButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 'auto',\n    marginBottom: 0,\n  },\n  currentPlanButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  planButtonText: {\n    color: theme.colors.surfaceContrast,\n    fontWeight: '600',\n  },\n  currentPlanButtonText: {\n    color: theme.colors.primary,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.placeHolderText,\n  },\n  settingContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  settingTextContainer: {\n    marginLeft: 15,\n    flex: 1,\n  },\n  settingTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  settingDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  actionButton: {\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  actionButtonText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  currentPlanInfo: {\n    backgroundColor: theme.colors.surface,\n    padding: 15,\n    borderRadius: 8,\n  },\n  currentPlanTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginBottom: 5,\n  },\n  currentPlanBilling: {\n    color: theme.colors.secondary,\n    marginBottom: 15,\n  },\n  usageStats: {\n    gap: 8,\n  },\n  usageText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  usageBar: {\n    height: 8,\n    backgroundColor: theme.colors.background,\n    borderRadius: 4,\n  },\n  usageProgress: {\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n    borderRadius: 4,\n  },\n  paymentItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 10,\n  },\n  paymentContent: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flex: 1,\n    marginRight: 12,\n  },\n  paymentTextContainer: {\n    marginLeft: 15,\n    flex: 1,\n  },\n  paymentTitleRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  paymentTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  paymentDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  setDefaultButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  setDefaultText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  deleteButton: {\n    padding: 4,\n  },\n  addButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  addButtonText: {\n    color: theme.colors.surfaceContrast,\n    marginLeft: 5,\n    fontWeight: '500',\n  },\n  viewAllButton: {\n    padding: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n  },\n  viewAllText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    paddingBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  timezoneItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  selectedTimezoneItem: {\n    backgroundColor: theme.colors.primaryLight,\n  },\n  timezoneText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  selectedTimezoneText: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  timezoneButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  timezoneButtonText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 5,\n  },\n  noPaymentMethodsContainer: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n  },\n  noPaymentMethodsText: {\n    color: theme.colors.secondary,\n    fontSize: 16,\n  },\n});\n\nexport default SettingsPaymentsTab; ","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst TabBar = ({ tabs, activeTab, onTabPress, isMobile }) => {\n  return (\n    <ScrollView \n      horizontal={isMobile}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={[\n        styles.container,\n        isMobile && styles.mobileContainer\n      ]}\n    >\n      {tabs.map((tab) => (\n        <TouchableOpacity\n          key={tab.id}\n          style={[\n            styles.tab,\n            activeTab === tab.id && styles.activeTab,\n            isMobile && styles.mobileTab\n          ]}\n          onPress={() => onTabPress(tab.id)}\n        >\n          <Text style={[\n            styles.tabText,\n            activeTab === tab.id && styles.activeTabText,\n            isMobile && styles.mobileTabText\n          ]}>\n            {tab.label}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 8,\n    marginBottom: 16,\n  },\n  mobileContainer: {\n    padding: 4,\n    marginBottom: 10,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 6,\n    marginHorizontal: 4,\n  },\n  mobileTab: {\n    flex: 0,\n    minWidth: 150,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  activeTab: {\n    backgroundColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  mobileTabText: {\n    fontSize: 14,\n  },\n  activeTabText: {\n    color: theme.colors.whiteText || theme.colors.background,\n  },\n});\n\nexport default TabBar; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, Image, Platform, StatusBar, Alert, useWindowDimensions, SafeAreaView, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport { Button, Portal, Dialog, Paragraph } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { theme } from '../styles/theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { TutorialContext } from '../context/TutorialContext';\nimport FloatingSaveButton from '../components/FloatingSaveButton';\nimport ServiceManager from '../components/ServiceManager';\nimport ProfessionalTab from '../components/ProfessionalTab';\nimport RecordedPets from '../components/RecordedPets';\nimport EditableSection from '../components/EditableSection';\nimport DatePicker from '../components/DatePicker';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport TutorialModal from '../components/TutorialModal';\nimport { DEFAULT_SERVICES } from '../data/mockData';\nimport ProfileInfoTab from '../components/profile/ProfileInfoTab';\nimport ServicesAvailabilityTab from '../components/profile/ServicesAvailabilityTab';\nimport PetsPreferencesTab from '../components/profile/PetsPreferencesTab';\nimport SettingsPaymentsTab from '../components/profile/SettingsPaymentsTab';\nimport TabBar from '../components/TabBar';\nimport { userProfile, updateProfileInfo } from '../api/API';\n\nconst MyProfile = () => {\n  const navigation = useNavigation();\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG, userRole, isApprovedProfessional, user, logout } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1200);\n  const styles = createStyles(screenWidth, isCollapsed);\n  const [activeTab, setActiveTab] = useState('profile_info');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  \n  // Profile state\n  const [profileData, setProfileData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [editMode, setEditMode] = useState({});\n\n  const [currentPlan, setCurrentPlan] = useState({\n    id: 'waitlist',\n    title: 'Waitlist Signup',\n    nextBilling: 'N/A',\n    connections: { used: 0, total: 'Unlimited' }\n  });\n\n  const { \n    isVisible: isTutorialVisible,\n    currentStep,\n    totalSteps,\n    stepData,\n    handleNext,\n    handlePrevious,\n    handleSkip,\n    completeTutorial,\n  } = useContext(TutorialContext);\n\n  // Define loadActiveTab at component level so it's accessible throughout the component\n  const loadActiveTab = async () => {\n    try {\n      // First, check URL parameters directly when on web\n      if (Platform.OS === 'web') {\n        const urlParams = new URLSearchParams(window.location.search);\n        const tabFromUrl = urlParams.get('initialTab') || urlParams.get('screen');\n        \n        if (tabFromUrl && ['profile_info', 'pets_preferences', 'settings_payments', 'services_availability'].includes(tabFromUrl)) {\n          debugLog('MBA54321 MyProfile retrieved tab from URL params', { tabFromUrl });\n          setActiveTab(tabFromUrl);\n          // Store this tab in storage for persistence\n          sessionStorage.setItem('myProfileActiveTab', tabFromUrl);\n          return;\n        }\n      }\n      \n      // Then check navigation params\n      const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n      debugLog('MBA54321 MyProfile navigation params', params);\n      \n      if (params?.initialTab) {\n        debugLog('MBA54321 MyProfile received initialTab param', { initialTab: params.initialTab });\n        setActiveTab(params.initialTab);\n        // Store in storage\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('myProfileActiveTab', params.initialTab);\n        } else {\n          await AsyncStorage.setItem('myProfileActiveTab', params.initialTab);\n        }\n        return;\n      } else if (params?.screen) {\n        debugLog('MBA54321 MyProfile received screen param', { screen: params.screen });\n        setActiveTab(params.screen);\n        // Store in storage\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('myProfileActiveTab', params.screen);\n        } else {\n          await AsyncStorage.setItem('myProfileActiveTab', params.screen);\n        }\n        return;\n      } else if (stepData?.tab) {\n        debugLog('MBA54321 MyProfile received tab from stepData', { tab: stepData.tab });\n        setActiveTab(stepData.tab);\n        // Store in storage\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('myProfileActiveTab', stepData.tab);\n        } else {\n          await AsyncStorage.setItem('myProfileActiveTab', stepData.tab);\n        }\n        return;\n      }\n      \n      // If we reach here, attempt to load from storage\n      if (Platform.OS === 'web') {\n        const storedTab = sessionStorage.getItem('myProfileActiveTab');\n        if (storedTab) {\n          debugLog('MBA54321 MyProfile loaded tab from sessionStorage', { storedTab });\n          setActiveTab(storedTab);\n        }\n      } else {\n        const storedTab = await AsyncStorage.getItem('myProfileActiveTab');\n        if (storedTab) {\n          debugLog('MBA54321 MyProfile loaded tab from AsyncStorage', { storedTab });\n          setActiveTab(storedTab);\n        }\n      }\n    } catch (error) {\n      debugLog('MBA54321 Error loading active tab', error);\n    }\n  };\n\n  // Get initialTab from navigation params\n  useEffect(() => {\n    loadActiveTab();\n  }, [navigation, stepData]);\n\n  // Store the active tab whenever it changes\n  useEffect(() => {\n    const storeActiveTab = async () => {\n      try {\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('myProfileActiveTab', activeTab);\n          \n          // Update URL params without reloading the page\n          const url = new URL(window.location.href);\n          url.searchParams.set('initialTab', activeTab);\n          window.history.replaceState({}, '', url.toString());\n          \n          debugLog('MBA54321 Stored active tab in sessionStorage and URL', { activeTab });\n        } else {\n          await AsyncStorage.setItem('myProfileActiveTab', activeTab);\n          debugLog('MBA54321 Stored active tab in AsyncStorage', { activeTab });\n        }\n      } catch (error) {\n        debugLog('MBA54321 Error storing active tab', error);\n      }\n    };\n    \n    if (activeTab) {\n      storeActiveTab();\n    }\n  }, [activeTab]);\n\n  // Add a new useEffect to handle tab changes from the tutorial\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n      if (params?.screen) {\n        debugLog('MBA54321 MyProfile focus event - setting active tab', { screen: params.screen });\n        setActiveTab(params.screen);\n      } else if (params?.initialTab) {\n        debugLog('MBA54321 MyProfile focus event - setting active tab', { initialTab: params.initialTab });\n        setActiveTab(params.initialTab);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  // Add a new useEffect to handle tab changes from the tutorial\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('state', () => {\n      const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n      if (params?.screen) {\n        debugLog('MBA54321 MyProfile state change - setting active tab', { screen: params.screen });\n        setActiveTab(params.screen);\n      } else if (params?.initialTab) {\n        debugLog('MBA54321 MyProfile state change - setting active tab', { initialTab: params.initialTab });\n        setActiveTab(params.initialTab);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n      setIsWideScreen(screenWidth >= 1200);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    loadProfileData();\n  }, []);\n\n  const loadProfileData = async () => {\n    try {\n      setLoading(true);\n      const response = await userProfile();\n      setProfileData(response);\n      \n      // Check for pets with missing owners and fix them if needed\n      await checkAndFixPetOwners();\n      \n      setLoading(false);\n      \n      // Wait for the tab to be loaded before trying to update active tab from URL\n      setTimeout(() => {\n        loadActiveTab();\n      }, 100);\n    } catch (error) {\n      setError('Failed to load profile data');\n      setLoading(false);\n      debugLog('Failed to load profile data:', error);\n    }\n  };\n  \n  const checkAndFixPetOwners = async () => {\n    try {\n      // Check if we have any pets that need fixing\n      if (profileData?.pets && profileData.pets.length > 0) {\n        const petsWithMissingOwners = profileData.pets.filter(pet => {\n          // Try to determine if a pet might have a missing owner\n          // Unfortunately we can't directly check the owner field from frontend\n          // So we look for potential symptoms like 404 errors on editing\n          if (pet.lastUpdateFailed || pet.ownerMissing) {\n            return true;\n          }\n          return false;\n        });\n        \n        if (petsWithMissingOwners.length > 0) {\n          debugLog('MBA5432', 'Found pets with potential missing owners:', petsWithMissingOwners);\n          \n          // Try to fix each pet\n          for (const pet of petsWithMissingOwners) {\n            try {\n              const { fixPetOwner } = require('../api/API');\n              const result = await fixPetOwner(pet.id);\n              debugLog('MBA5432', 'Fixed pet owner successfully:', result);\n            } catch (err) {\n              debugLog('MBA5432', 'Failed to fix pet owner:', err);\n            }\n          }\n          \n          // Reload profile data to get updated pets\n          const response = await userProfile();\n          setProfileData(response);\n        }\n      }\n    } catch (error) {\n      debugLog('MBA5432', 'Error checking/fixing pet owners:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n    } catch (err) {\n      debugLog('MBA1234', 'Error during logout:', err);\n    }\n  };\n\n  const tabs = [\n    { id: 'profile_info', label: userRole === 'professional' ? 'Professional Profile Info' : 'Owner Profile Info' },\n    // ...(userRole === 'professional' ? [{ id: 'services_availability', label: 'Services & Availability' }] : []), TODO: Add back in after MVP\n    { id: 'pets_preferences', label: 'Pets & Preferences' },\n    { id: 'settings_payments', label: userRole === 'professional' ? 'Settings & Payout Methods' : 'Settings & Payment Methods' }\n  ];\n\n  const handlePickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfileData(prev => ({ ...prev, profilePhoto: result.assets[0].uri }));\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  // Handle save completion from child components\n  const handleSaveComplete = (updatedProfile) => {\n    debugLog('MBA9876', 'Save completed with updated profile:', updatedProfile);\n    \n    // Update the profileData with the saved data\n    setProfileData(prev => {\n      const newProfileData = {\n        ...prev,\n        ...updatedProfile\n      };\n      \n      // Log the updated profile data for debugging\n      debugLog('MBA9876', 'Updated profile data after save:', {\n        name: newProfileData.name,\n        email: newProfileData.email,\n        address: newProfileData.address,\n        city: newProfileData.city,\n        state: newProfileData.state,\n        zip: newProfileData.zip,\n        country: newProfileData.country\n      });\n      \n      return newProfileData;\n    });\n    \n    // Reset state flags\n    setHasUnsavedChanges(false);\n    setEditMode({});\n    \n    // Show success indicator if needed\n    debugLog('MBA5678', 'Changes saved successfully');\n  };\n\n  // Handle field updates before saving\n  const handleUpdateField = (field, value) => {\n    debugLog('MBA9876', `Updating field ${field} locally, will be saved later:`, value);\n    \n    // Only update local state, actual save will happen in the child component\n    setProfileData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Mark that we have unsaved changes\n    setHasUnsavedChanges(true);\n  };\n\n  const toggleEditMode = (section) => {\n    setEditMode(prev => ({ ...prev, [section]: !prev[section] }));\n  };\n\n  const handleSwitchPlan = (planId) => {\n    // TODO: Implement API call to switch plans\n    debugLog('Switching to plan:', planId);\n  };\n\n  const renderActiveTab = () => {\n    debugLog('MBA54321', 'Rendering active tab with profile data:', {\n      activeTab,\n      profileName: profileData?.name,\n      paymentMethods: profileData?.payment_methods\n    });\n    \n    switch (activeTab) {\n      case 'profile_info':\n        return (\n          <ProfileInfoTab\n            profilePhoto={profileData?.profilePhoto}\n            email={profileData?.email}\n            phone={profileData?.phone}\n            age={profileData?.age}\n            address={profileData?.address}\n            city={profileData?.city}\n            state={profileData?.state}\n            zip={profileData?.zip}\n            country={profileData?.country}\n            bio={profileData?.bio}\n            about_me={profileData?.about_me}\n            name={profileData?.name}\n            emergencyContact={profileData?.emergency_contact}\n            authorizedHouseholdMembers={profileData?.authorized_household_members}\n            editMode={editMode}\n            toggleEditMode={toggleEditMode}\n            onChangeText={handleUpdateField}\n            pickImage={handlePickImage}\n            setHasUnsavedChanges={(hasChanges) => {\n              debugLog('MBA9876', 'ProfileInfoTab setting hasUnsavedChanges:', hasChanges);\n              setHasUnsavedChanges(hasChanges);\n            }}\n            onSaveComplete={handleSaveComplete}\n            isMobile={isMobile}\n            rating={profileData?.rating}\n            reviews={profileData?.reviews}\n            role={userRole}\n            isProfessional={userRole === 'professional'}\n            insurance={profileData?.insurance}\n            onNavigateToTab={setActiveTab}\n          />\n        );\n      case 'services_availability':\n        return (\n          <ServicesAvailabilityTab\n            services={profileData?.services}\n            onToggleService={(id) => {\n              const updatedServices = profileData?.services.map(s => \n                s.id === id ? { ...s, isActive: !s.isActive } : s\n              );\n              handleUpdateField('services', updatedServices);\n            }}\n            onEditHours={() => {}}\n            onBlockService={() => {}}\n            onPartialDayBlock={() => {}}\n            isMobile={isMobile}\n          />\n        );\n      case 'pets_preferences':\n        return (\n          <PetsPreferencesTab\n            pets={profileData?.pets}\n            onAddPet={(newPet) => {\n              // Check if the pet should be added to the top of the list\n              const shouldAddToTop = newPet._addToTop;\n              \n              // Remove the _addToTop flag before adding to state\n              const { _addToTop, ...petToAdd } = newPet;\n              \n              // Add the new pet to the local state (at the top or bottom)\n              const updatedPets = shouldAddToTop \n                ? [petToAdd, ...(profileData?.pets || [])] \n                : [...(profileData?.pets || []), petToAdd];\n                \n              handleUpdateField('pets', updatedPets);\n              \n              // This will mark that there are unsaved changes\n              debugLog('MBA5432', 'Added new pet locally:', petToAdd, shouldAddToTop ? '(at top of list)' : '(at bottom of list)');\n            }}\n            onEditPet={(petId, updatedPetData) => {\n              // Update the existing pet in local state\n              const updatedPets = (profileData?.pets || []).map(pet => \n                pet.id === petId ? { ...pet, ...updatedPetData } : pet\n              );\n              handleUpdateField('pets', updatedPets);\n              debugLog('MBA5432', 'Updated pet locally:', { petId, updatedPetData });\n            }}\n            onDeletePet={(petId) => {\n              // Remove the pet from local state\n              const updatedPets = (profileData?.pets || []).filter(pet => pet.id !== petId);\n              handleUpdateField('pets', updatedPets);\n              debugLog('MBA5432', 'Deleted pet locally:', petId);\n            }}\n            onReplacePet={(newPetsArray) => {\n              // Replace the entire pets array with the new one\n              // This prevents the issue with double updates causing blank pets\n              handleUpdateField('pets', newPetsArray);\n              debugLog('MBA5432', 'Replaced entire pets array:', newPetsArray);\n            }}\n            preferences={profileData?.preferences}\n            onUpdatePreferences={(section, id) => {\n              const updatedPreferences = { ...profileData?.preferences };\n              if (section === 'homeEnvironment') {\n                if (updatedPreferences[section].includes(id)) {\n                  updatedPreferences[section] = updatedPreferences[section].filter(item => item !== id);\n                } else {\n                  updatedPreferences[section] = [...updatedPreferences[section], id];\n                }\n              } else {\n                updatedPreferences[section] = updatedPreferences[section].map(p =>\n                  p.id === id ? { ...p, selected: !p.selected } : p\n                );\n              }\n              handleUpdateField('preferences', updatedPreferences);\n            }}\n            userRole={userRole}\n            isMobile={isMobile}\n          />\n        );\n      case 'settings_payments':\n        debugLog('MBA54321 Rendering settings_payments tab with payment methods:', {\n          paymentMethods: profileData?.payment_methods\n        });\n        return (\n          <SettingsPaymentsTab\n            {...profileData}\n            onUpdateSetting={(id, value) => {\n              debugLog('Updating setting:', { id, value });\n              // Create an update object with just the changed setting\n              const updateData = { [id]: value };\n              \n              // Return the promise for proper chaining in the component\n              return updateProfileInfo(updateData)\n                .then(updatedProfile => {\n                  // Update the profile data with the response\n                  setProfileData(prev => ({\n                    ...prev,\n                    ...updatedProfile\n                  }));\n                  debugLog('MBA54321 Setting updated successfully:', updateData);\n                  // Return the updated profile for the promise chain\n                  return updatedProfile;\n                });\n            }}\n            paymentMethods={profileData?.payment_methods || []}\n            onAddPaymentMethod={() => navigation.navigate('AddPaymentMethod')}\n            onRemovePaymentMethod={(id) => {\n              debugLog('Removing payment method:', id);\n              // TODO: Implement API call to remove payment method\n            }}\n            onSetDefaultPayment={(id) => {\n              debugLog('Setting default payment method:', id);\n              // TODO: Implement API call to set default payment method\n            }}\n            currentPlan={profileData?.currentPlan || currentPlan}\n            onSwitchPlan={handleSwitchPlan}\n            isMobile={isMobile}\n            userRole={userRole}\n            isApprovedProfessional={isApprovedProfessional}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        {isMobile && (\n          <BackHeader \n            title=\"Profile Settings\" \n            onBackPress={() => navigation.goBack()} \n          />\n        )}\n        \n        <View style={styles.content}>\n          <View style={styles.mainContent}>\n            <View style={styles.headerSection}>\n              <Text style={styles.title}>Profile Settings</Text>\n              <ScrollView \n                horizontal \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.tabScrollContainer}\n              >\n                <View style={styles.tabContainer}>\n                  {tabs.map((tab) => (\n                    <TouchableOpacity\n                      key={tab.id}\n                      style={[styles.tab, activeTab === tab.id && styles.activeTab]}\n                      onPress={() => {\n                        setActiveTab(tab.id);\n                        // Update URL params without navigation\n                        if (Platform.OS === 'web') {\n                          const url = new URL(window.location.href);\n                          url.searchParams.set('initialTab', tab.id);\n                          window.history.replaceState({}, '', url.toString());\n                          // Also store in sessionStorage for reload persistence\n                          sessionStorage.setItem('myProfileActiveTab', tab.id);\n                          debugLog('MBA54321 Tab clicked - updated URL and storage', { tabId: tab.id });\n                        } else {\n                          // For mobile, just update AsyncStorage\n                          AsyncStorage.setItem('myProfileActiveTab', tab.id);\n                          debugLog('MBA54321 Tab clicked - updated storage', { tabId: tab.id });\n                        }\n                      }}\n                    >\n                      <Text style={[styles.tabText, activeTab === tab.id && styles.activeTabText]}>\n                        {tab.label}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              </ScrollView>\n            </View>\n\n            <View style={styles.tabContent}>\n              {renderActiveTab()}\n            </View>\n          </View>\n        </View>\n\n        {isTutorialVisible && stepData?.screen === 'MyProfile' && (\n          <TutorialModal\n            step={currentStep}\n            totalSteps={totalSteps}\n            title={stepData.title}\n            description={stepData.description}\n            position={stepData.position}\n            onNext={handleNext}\n            onPrevious={handlePrevious}\n            onSkip={handleSkip}\n            onClose={completeTutorial}\n          />\n        )}\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n    backgroundColor: theme.colors.surface,\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.surface,\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabScrollContainer: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: screenWidth <= 900 ? 22 : 32,\n    paddingRight: screenWidth <= 900 ? 16 : 0,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  tabContent: {\n    flex: 1,\n    padding: screenWidth <= 900 ? 10 : 24,\n    backgroundColor: theme.colors.surface,\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginTop: 20,\n  },\n});\n\nexport default MyProfile;\n","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nexport default function CustomButton({ title, onPress }) {\n  return (\n    <TouchableOpacity style={styles.button} onPress={onPress}>\n      <Text style={styles.buttonText}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing.small,\n    paddingHorizontal: theme.spacing.medium,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginVertical: theme.spacing.small,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n  },\n});","/**\n * Validation utility functions for form inputs\n * These functions are used across the app to ensure data integrity and security\n */\n\n// Import is_PRODUCTION from AuthContext\nimport { IsProduction } from '../context/AuthContext';\n\n/**\n * Validates an email address\n * @param {string} email - The email address to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validateEmail = (email) => {\n  // Check if email is empty\n  if (!email || email.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Email is required'\n    };\n  }\n\n  // Basic email format validation\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  \n  if (!emailRegex.test(email)) {\n    return {\n      isValid: false,\n      message: 'Please enter a valid email address'\n    };\n  }\n\n  // Check for potential XSS or injection attempts\n  const sanitizedEmail = email.replace(/[<>]/g, '');\n  if (sanitizedEmail !== email) {\n    return {\n      isValid: false,\n      message: 'Email contains invalid characters'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Validates a first or last name\n * @param {string} name - The name to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validateName = (name) => {\n  // Check if name is empty\n  if (!name || name.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Name is required'\n    };\n  }\n\n  // Only allow letters, spaces, hyphens, and apostrophes\n  const nameRegex = /^[a-zA-Z\\s\\-']+$/;\n  \n  if (!nameRegex.test(name)) {\n    return {\n      isValid: false,\n      message: 'Name can only contain letters, spaces, hyphens, and apostrophes'\n    };\n  }\n\n  // Check for potential XSS or injection attempts\n  const sanitizedName = name.replace(/[<>]/g, '');\n  if (sanitizedName !== name) {\n    return {\n      isValid: false,\n      message: 'Name contains invalid characters'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Validates a password\n * @param {string} password - The password to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePassword = (password) => {\n  // Check if password is empty\n  if (!password || password.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Password is required'\n    };\n  }\n\n  // Password strength requirements\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(password);\n  const hasLowerCase = /[a-z]/.test(password);\n  const hasNumbers = /\\d/.test(password);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n  // Check for potential XSS or injection attempts\n  if (IsProduction()) {\n    const sanitizedPassword = password.replace(/[<>]/g, '');\n    if (sanitizedPassword !== password) {\n      return {\n        isValid: false,\n        message: `Password contains invalid characters: <, >`\n      };\n    }\n  }\n\n  // Validate password strength\n  if (IsProduction()) {\n    if (password.length < minLength) {\n        return {\n        isValid: false,\n        message: `Password must be at least ${minLength} characters long`\n        };\n    }\n  }\n\n  // Only enforce strict password requirements in production\n  if (IsProduction()) {\n    if (!hasUpperCase || !hasLowerCase || !hasNumbers || !hasSpecialChar) {\n      return {\n        isValid: false,\n        message: 'Password must contain uppercase, lowercase, numbers, and special characters'\n      };\n    }\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Validates that two passwords match\n * @param {string} password - The first password\n * @param {string} confirmPassword - The confirmation password\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePasswordMatch = (password, confirmPassword) => {\n  if (password !== confirmPassword) {\n    return {\n      isValid: false,\n      message: 'Passwords do not match'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Validates a phone number\n * @param {string} phoneNumber - The phone number to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePhoneNumber = (phoneNumber) => {\n  // If phone number is optional, allow empty values\n  if (!phoneNumber || phoneNumber.trim() === '') {\n    return {\n      isValid: true,\n      message: ''\n    };\n  }\n\n  // Basic phone number format validation (allows various formats)\n  const phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n  \n  if (!phoneRegex.test(phoneNumber)) {\n    return {\n      isValid: false,\n      message: 'Please enter a valid phone number'\n    };\n  }\n\n  // Check for potential XSS or injection attempts\n  const sanitizedPhone = phoneNumber.replace(/[<>]/g, '');\n  if (sanitizedPhone !== phoneNumber) {\n    return {\n      isValid: false,\n      message: 'Phone number contains invalid characters'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Sanitizes input to prevent XSS attacks\n * @param {string} input - The input to sanitize\n * @returns {string} - The sanitized input\n */\nexport const sanitizeInput = (input) => {\n  if (!input) return '';\n  \n  // Remove potentially dangerous characters\n  return input\n    .replace(/[<>]/g, '') // Remove < and > to prevent HTML injection\n    .replace(/javascript:/gi, '') // Remove javascript: protocol\n    .replace(/on\\w+=/gi, ''); // Remove event handlers\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, TextInput, Text, StyleSheet, TouchableOpacity, Dimensions, Alert, ActivityIndicator, Platform, Keyboard, SafeAreaView, KeyboardAvoidingView, ScrollView } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport axios from 'axios';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport { AuthContext } from '../context/AuthContext';\nimport { API_BASE_URL } from '../config/config';\nimport { navigateToFrom } from '../components/Navigation';\nimport { validateEmail, validatePassword } from '../validation/validation';\nimport { debugLog } from '../context/AuthContext';\nimport { updateTimeSettings } from '../api/API';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const navigation = useNavigation();\n  const { signIn, is_prototype, is_DEBUG } = useContext(AuthContext);\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate email\n    const emailValidation = validateEmail(email);\n    setEmailError(emailValidation.message);\n    if (!emailValidation.isValid) isValid = false;\n    \n    // Validate password\n    const passwordValidation = validatePassword(password);\n    setPasswordError(passwordValidation.message);\n    if (!passwordValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  const handleLogin = async () => {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      Keyboard.dismiss();\n    }\n\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      debugLog('MBA67890 Starting login process');\n      debugLog('MBA67890 API Base URL:', API_BASE_URL);\n      debugLog('MBA67890 Login request details:', {\n        url: `${API_BASE_URL}/api/token/`,\n        method: 'POST',\n        data: {\n          email: email.toLowerCase(),\n          password: '***' // masked for security\n        }\n      });\n\n      debugLog('MBA67890 Attempting to authenticate with backend');\n      \n      const response = await axios.post(`${API_BASE_URL}/api/token/`, {\n        email: email.toLowerCase(),\n        password: password,\n      });\n\n      debugLog('MBA67890 Login response:', {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n      });\n\n      const { access, refresh } = response.data;\n      \n      debugLog('MBA67890 Authentication successful, received tokens');\n      \n      // Pass both tokens to signIn and get the status\n      const status = await signIn(access, refresh, navigation);\n      debugLog('MBA67890 Sign in status:', status);\n      \n      // After successful login, detect and send timezone to backend\n      try {\n        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        debugLog('MBA67890 Detected timezone:', timezone);\n        console.log('MBA67890 Detected timezone:', timezone);\n        // Pass only the timezone parameter, useMilitaryTime is optional\n        await updateTimeSettings(timezone);\n        debugLog('MBA67890 Successfully updated timezone in backend');\n      } catch (timezoneError) {\n        debugLog('MBA67890 Error updating timezone:', timezoneError);\n        // Continue with login process even if timezone update fails\n      }\n      \n      // Check if user needs to complete tutorial\n      try {\n        const tutorialResponse = await axios.get(`${API_BASE_URL}/api/users/v1/tutorial-status/current/`);\n        const needsTutorial = tutorialResponse.data.first_time_logging_in || \n                             tutorialResponse.data.first_time_logging_in_after_signup;\n        \n        debugLog('MBA67890 Tutorial status:', tutorialResponse.data);\n        debugLog('MBA67890 Needs tutorial:', needsTutorial);\n        \n        // Navigate based on tutorial status\n        if (needsTutorial) {\n          debugLog('MBA67890 Navigating to MyProfile for tutorial');\n          navigateToFrom(navigation, 'MyProfile', 'SignIn');\n        } else {\n          debugLog('MBA67890 Navigating to Dashboard');\n          navigateToFrom(navigation, 'Dashboard', 'SignIn');\n        }\n      } catch (tutorialError) {\n        debugLog('MBA67890 Error checking tutorial status:', tutorialError);\n        // Default to Dashboard if tutorial check fails\n        navigateToFrom(navigation, 'Dashboard', 'SignIn');\n      }\n    } catch (error) {\n      debugLog('MBA67890 Login failed', error.response?.data || error.message);\n      \n      const errorMessage = error.response && error.response.status === 401\n        ? 'Invalid credentials. Please try again.'\n        : 'An unexpected error occurred.';\n\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Login Failed', errorMessage);\n      } else {\n        setSuccessMessage(`Login Failed: ${errorMessage}`);\n      }\n\n      setEmailError('Invalid email or password');\n      setPasswordError('Invalid email or password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add useEffect to handle document-wide keyboard events\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const handleDocumentKeyPress = (e) => {\n        if (e.key === 'Enter') {\n          handleLogin();\n        }\n      };\n\n      document.addEventListener('keydown', handleDocumentKeyPress);\n\n      // Cleanup listener when component unmounts\n      return () => {\n        document.removeEventListener('keydown', handleDocumentKeyPress);\n      };\n    }\n  }, [email, password]); // Dependencies ensure we have latest state values\n\n  // Keep the existing handleKeyPress for input fields\n  const handleKeyPress = (e) => {\n    if (Platform.OS === 'web' && e.nativeEvent.key === 'Enter') {\n      handleLogin();\n    }\n  };\n\n  // Add this inside the SignIn component, after any existing useEffect\n  useEffect(() => {\n    // Check if we're on web and have an invitation token in the URL\n    if (Platform.OS === 'web') {\n      const url = window.location.pathname;\n      debugLog('MBA5555 SignIn screen - Current URL path:', url);\n      \n      if (url.includes('/invite/')) {\n        // Extract token and redirect to signup\n        const pathParts = url.split('/');\n        const inviteIndex = pathParts.findIndex(part => part === 'invite');\n        if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n          const token = pathParts[inviteIndex + 1];\n          debugLog('MBA5555 SignIn detected invite token, redirecting to SignUp:', token);\n          // Navigate to SignUp with the token\n          navigation.navigate('SignUp', { token });\n        }\n      }\n    }\n  }, []);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.card}>\n        <Text style={styles.title}>Log in</Text>\n        \n        {is_prototype && (\n          <Text style={styles.prototypeWarning}>\n            Prototype Mode: You can sign in with anything for email and password\n          </Text>\n        )}\n        \n        <View style={styles.createAccountContainer}>\n          <Text style={styles.createAccountText}>Need a CrittrCove account?</Text>\n          <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\n            <Text style={styles.createAccountLink}>Create an account</Text>\n          </TouchableOpacity>\n        </View>\n        \n        <View style={styles.inputLabelContainer}>\n          <Text style={styles.inputLabel}>Username or Email</Text>\n          <TextInput\n            style={[styles.input, emailError ? styles.errorInput : null]}\n            value={email}\n            onChangeText={(text) => {\n              setEmail(text);\n              setEmailError('');\n            }}\n            autoCapitalize=\"none\"\n            onKeyPress={Platform.OS === 'web' ? handleKeyPress : undefined}\n          />\n          {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n        </View>\n        \n        <View style={styles.inputLabelContainer}>\n          <View style={styles.passwordLabelContainer}>\n            <Text style={styles.inputLabel}>Password</Text>\n            <TouchableOpacity onPress={togglePasswordVisibility}>\n              <Text style={styles.showHideText}>{showPassword ? 'Hide' : 'Show'}</Text>\n            </TouchableOpacity>\n          </View>\n          <TextInput\n            style={[styles.input, passwordError ? styles.errorInput : null]}\n            secureTextEntry={!showPassword}\n            value={password}\n            onChangeText={(text) => {\n              setPassword(text);\n              setPasswordError('');\n            }}\n            onKeyPress={Platform.OS === 'web' ? handleKeyPress : undefined}\n          />\n          {passwordError ? <Text style={styles.errorText}>{passwordError}</Text> : null}\n        </View>\n        \n        <View style={styles.rememberMeContainer}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setRememberMe(!rememberMe)}\n          >\n            {rememberMe && (\n              <View style={styles.checkboxInner}>\n                <MaterialCommunityIcons name=\"check\" size={14} color={theme.colors.whiteText} />\n              </View>\n            )}\n          </TouchableOpacity>\n          <Text style={styles.rememberMeText}>Keep me logged in</Text>\n        </View>\n        \n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n          <Text style={styles.loginButtonText}>Log in</Text>\n        </TouchableOpacity>\n        \n        {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} />}\n        {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n        \n        <TouchableOpacity onPress={() => navigation.navigate('ResetPassword')} style={styles.forgotPasswordContainer}>\n          <Text style={styles.link}>Forgot Password?</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.medium,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: theme.spacing.large * 1.5,\n    width: '100%',\n    maxWidth: 480,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  title: {\n    fontSize: theme.fontSizes.extraLarge * 1.4,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: theme.spacing.medium,\n    textAlign: 'left',\n  },\n  createAccountContainer: {\n    flexDirection: 'row',\n    marginBottom: theme.spacing.large,\n  },\n  createAccountText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginRight: 5,\n  },\n  createAccountLink: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.primary,\n    textDecorationLine: 'underline',\n  },\n  inputLabelContainer: {\n    marginBottom: theme.spacing.medium,\n  },\n  inputLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n    fontWeight: '500',\n  },\n  passwordLabelContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small,\n  },\n  showHideText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.smallMedium,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingHorizontal: theme.spacing.small * 1.5,\n    fontSize: theme.fontSizes.medium,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  errorInput: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.smallMedium,\n    marginTop: 4,\n  },\n  rememberMeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: theme.spacing.large,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 2,\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  checkboxInner: {\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  rememberMeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  loginButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing.small * 1.75,\n    borderRadius: 4,\n    alignItems: 'center',\n    marginBottom: theme.spacing.medium,\n  },\n  loginButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  forgotPasswordContainer: {\n    alignItems: 'center',\n    marginTop: theme.spacing.small,\n  },\n  link: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.smallMedium,\n  },\n  message: {\n    marginTop: theme.spacing.small,\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.smallMedium,\n    textAlign: 'center',\n  },\n  prototypeWarning: {\n    backgroundColor: '#FFF3CD',\n    color: '#856404',\n    padding: theme.spacing.small * 1.5,\n    marginBottom: theme.spacing.medium,\n    borderRadius: 4,\n    textAlign: 'center',\n  },\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, TextInput, Text, StyleSheet, ActivityIndicator, Dimensions, KeyboardAvoidingView, Platform, ScrollView, Alert, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext, debugLog } from '../context/AuthContext'; // Import AuthContext\nimport { validateEmail, validateName, validatePassword, validatePasswordMatch } from '../validation/validation';\nimport { verifyInvitation } from '../api/API';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function SignUp() {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const { signIn, is_DEBUG } = useContext(AuthContext); // Use AuthContext to update auth state\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [inviterName, setInviterName] = useState('');\n  const [inviteToken, setInviteToken] = useState(null);\n  const [inviteVerified, setInviteVerified] = useState(false);\n  const [verifyingInvite, setVerifyingInvite] = useState(false);\n  \n  // Location state\n  const [location, setLocation] = useState('');\n  const [showLocationDropdown, setShowLocationDropdown] = useState(false);\n  const [locationError, setLocationError] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [loadingLocations, setLoadingLocations] = useState(true);\n  \n  // Fallback locations in case API fails\n  const fallbackLocations = [\n    { name: 'Colorado Springs', supported: true },\n    { name: 'Denver', supported: false },\n    { name: 'Other', supported: false }\n  ];\n  \n  // Validation states\n  const [firstNameError, setFirstNameError] = useState('');\n  const [lastNameError, setLastNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n\n  // Check for invitation token when component mounts\n  useEffect(() => {\n    // Check if we have an invitation token in the route params or URL\n    const checkInvitation = async () => {\n      try {\n        // First check if we're on the 'Invite' screen\n        const isInviteScreen = route.name === 'Invite';\n        debugLog('MBA4321 Current route name:', route.name);\n        \n        // Check route params\n        let token = route.params?.token;\n        debugLog('MBA4321 Token from route params:', token);\n        \n        // If not in route params, check if we're on web and have it in the URL\n        if (!token && Platform.OS === 'web') {\n          const url = window.location.pathname;\n          debugLog('MBA4321 Current URL path:', url);\n          debugLog('MBA4321 Full location object:', {\n            pathname: window.location.pathname,\n            href: window.location.href,\n            search: window.location.search,\n            hash: window.location.hash\n          });\n          \n          if (url.includes('/invite/')) {\n            // Extract token from invite URL format\n            const pathParts = url.split('/');\n            const inviteIndex = pathParts.findIndex(part => part === 'invite');\n            if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n              token = pathParts[inviteIndex + 1];\n              debugLog('MBA4321 Found invitation token from invite URL path:', token);\n            }\n          } else if (url.includes('/signup/')) {\n            // Extract token from signup URL format\n            const pathParts = url.split('/');\n            const signupIndex = pathParts.findIndex(part => part === 'signup');\n            if (signupIndex !== -1 && pathParts.length > signupIndex + 1) {\n              token = pathParts[signupIndex + 1];\n              debugLog('MBA4321 Found invitation token from signup URL path:', token);\n            }\n          }\n        }\n        \n        // If we still don't have a token, check the URL search params\n        if (!token && Platform.OS === 'web') {\n          const searchParams = new URLSearchParams(window.location.search);\n          const searchToken = searchParams.get('token');\n          if (searchToken) {\n            token = searchToken;\n            debugLog('MBA4321 Found invitation token from URL search params:', token);\n          }\n        }\n        \n        if (token) {\n          debugLog('MBA4321 Processing invitation token:', token);\n          setInviteToken(token);\n          setVerifyingInvite(true);\n          \n          try {\n            // Verify the token with the backend\n            const inviteInfo = await verifyInvitation(token);\n            debugLog('MBA4321 Invitation verification result:', inviteInfo);\n            \n            if (inviteInfo.valid) {\n              setInviteVerified(true);\n              setInviterName(inviteInfo.inviter_name);\n              \n              // If it's an email invitation, set the email field\n              if (inviteInfo.email) {\n                setEmail(inviteInfo.email);\n              }\n              \n              setSuccessMessage(`You've been invited by ${inviteInfo.inviter_name}!`);\n            } else {\n              setSuccessMessage(`This invitation is no longer valid: ${inviteInfo.error}`);\n            }\n          } catch (error) {\n            debugLog('MBA4321 Error verifying invitation:', error);\n            setSuccessMessage('This invitation link is invalid or has expired.');\n          } finally {\n            setVerifyingInvite(false);\n          }\n        }\n      } catch (error) {\n        debugLog('MBA4321 Error processing invitation:', error);\n        setVerifyingInvite(false);\n      }\n    };\n    \n    checkInvitation();\n  }, [route.params, route.name]);\n\n  // Fetch supported locations from backend\n  useEffect(() => {\n    const fetchLocations = async () => {\n      setLoadingLocations(true);\n      try {\n        // Fetch locations from backend\n        const response = await axios.get(`${API_BASE_URL}/api/locations/v1/supported/`);\n        debugLog('MBA6789: Locations fetched from backend', response.data);\n        \n        if (response.data && Array.isArray(response.data.locations)) {\n          setLocations(response.data.locations);\n        } else {\n          // Fallback to hardcoded locations if response format is unexpected\n          debugLog('MBA6789: Using fallback locations due to unexpected response format', response.data);\n          setLocations(fallbackLocations);\n        }\n      } catch (error) {\n        debugLog('MBA6789: Error fetching locations', error);\n        // Use fallback locations if API call fails\n        setLocations(fallbackLocations);\n      } finally {\n        setLoadingLocations(false);\n      }\n    };\n    \n    fetchLocations();\n  }, []);\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate location only if not invited\n    if (!inviteVerified && !location) {\n      setLocationError('Please select your location');\n      isValid = false;\n    }\n    \n    // Validate first name\n    const firstNameValidation = validateName(firstName);\n    setFirstNameError(firstNameValidation.message);\n    if (!firstNameValidation.isValid) isValid = false;\n    \n    // Validate last name\n    const lastNameValidation = validateName(lastName);\n    setLastNameError(lastNameValidation.message);\n    if (!lastNameValidation.isValid) isValid = false;\n    \n    // Validate email\n    const emailValidation = validateEmail(email);\n    setEmailError(emailValidation.message);\n    if (!emailValidation.isValid) isValid = false;\n    \n    // Validate password\n    const passwordValidation = validatePassword(password);\n    setPasswordError(passwordValidation.message);\n    if (!passwordValidation.isValid) isValid = false;\n    \n    // Validate password match\n    const passwordMatchValidation = validatePasswordMatch(password, confirmPassword);\n    setConfirmPasswordError(passwordMatchValidation.message);\n    if (!passwordMatchValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  const handleSignUp = async () => {\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      debugLog('MBA12345 Starting user registration process');\n      \n      // Get user's timezone and time format preferences\n      let userTimezone = 'UTC';\n      try {\n        // Try to get the timezone using Intl API\n        userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        debugLog('MBA12345 User timezone detected using Intl API', { userTimezone });\n      } catch (error) {\n        debugLog('MBA12345 Error detecting timezone using Intl API', error);\n        // Fallback to a default timezone\n        userTimezone = 'UTC';\n      }\n      \n      const useMilitaryTime = false; // Default to non-military time\n      \n      debugLog('MBA12345 User timezone and preferences', { userTimezone, useMilitaryTime });\n      \n      // Prepare user data with time settings and invitation token\n      const registrationData = {\n        ...userData,\n        timezone: userTimezone,\n        use_military_time: useMilitaryTime,\n        invitation_token: inviteToken\n      };\n      \n      // First register the user\n      const registerResponse = await axios.post(`${API_BASE_URL}/api/users/v1/register/`, registrationData);\n      \n      debugLog('MBA12345 User registration successful', registerResponse.data);\n      \n      // After successful registration, log the user in to get authentication tokens\n      debugLog('MBA12345 Attempting to log in with new credentials');\n      \n      const loginResponse = await axios.post(`${API_BASE_URL}/api/token/`, {\n        email: email.toLowerCase(),\n        password: password,\n      });\n      \n      debugLog('MBA12345 Login successful, received tokens');\n      \n      const { access, refresh } = loginResponse.data;\n      \n      // Use the signIn function from AuthContext to properly set up authentication\n      debugLog('MBA12345 Calling signIn function from AuthContext');\n      \n      await signIn(access, refresh);\n      \n      debugLog('MBA12345 Authentication setup complete');\n      \n      // If the user came from an invitation, accept the invitation\n      if (inviteToken && inviteVerified) {\n        try {\n          await axios.post(\n            `${API_BASE_URL}/api/users/v1/invitations/${inviteToken}/accept/`,\n            {},\n            {\n              headers: {\n                Authorization: `Bearer ${access}`,\n                'Content-Type': 'application/json'\n              }\n            }\n          );\n          debugLog('MBA12345 Invitation accepted successfully');\n        } catch (error) {\n          debugLog('MBA12345 Error accepting invitation:', error);\n          // Continue even if this fails\n        }\n      }\n      \n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Success', 'Account created successfully!', [\n          { text: 'OK', onPress: () => navigation.navigate('MyProfile') }\n        ]);\n      } else {\n        navigation.navigate('MyProfile');\n      }\n    } catch (error) {\n      debugLog('MBA12345 Error during signup process', error.response?.data || error.message);\n      \n      let errorMessage = 'Signup Failed: An error occurred during signup.';\n      if (error.response) {\n        const errorData = error.response.data;\n        // Handle specific field errors\n        if (errorData) {\n          const firstError = Object.entries(errorData)[0];\n          if (firstError) {\n            const [field, messages] = firstError;\n            errorMessage = `${field}: ${Array.isArray(messages) ? messages[0] : messages}`;\n          }\n        }\n      }\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', errorMessage);\n      } else {\n        setSuccessMessage(errorMessage);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Navigate to the sign in page\n  const navigateToSignIn = () => {\n    navigation.navigate('SignIn');\n  };\n\n  // Navigate to the waitlist page\n  const navigateToWaitlist = () => {\n    navigation.navigate('Waitlist');\n  };\n\n  // Handle location selection \n  const selectLocation = (selectedLocation) => {\n    console.log(\"Location selected:\", selectedLocation);\n    debugLog('MBA6789: Location selected', selectedLocation);\n    setLocation(selectedLocation);\n    setShowLocationDropdown(false);\n    setLocationError('');\n  };\n\n  // Updated data structure to match new backend expectations\n  const userData = {\n    name: `${firstName.trim().charAt(0).toUpperCase() + firstName.trim().slice(1).toLowerCase()} ${lastName.trim().charAt(0).toUpperCase() + lastName.trim().slice(1).toLowerCase()}`, // Combine first and last name with first letter capitalized and all other letters lowercase\n    email: email.trim().toLowerCase(),\n    password: password,\n    password2: confirmPassword, // Add confirmation password\n    phone_number: '', // Add empty phone number for now\n    location: inviteVerified ? 'Colorado Springs' : location, // Use default location for invited users\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      keyboardVerticalOffset={Platform.OS === 'ios' ? 64 : 0}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.formContainer}>\n          <Text style={styles.title}>Sign Up</Text>\n          <Text style={styles.subtitle}>Sign up to continue</Text>\n          \n          {verifyingInvite && (\n            <View style={styles.inviteContainer}>\n              <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n              <Text style={styles.inviteText}>Verifying invitation...</Text>\n            </View>\n          )}\n          \n          {inviteVerified && (\n            <View style={styles.inviteContainer}>\n              <Text style={styles.inviteText}>\n                You've been invited by {inviterName}!\n              </Text>\n            </View>\n          )}\n          \n          {/* Location Dropdown - Only show if not invited */}\n          {!inviteVerified && (\n            <View style={styles.locationContainer}>\n              <Text style={styles.label}>Where are you located?</Text>\n              {loadingLocations ? (\n                <View style={[styles.input, styles.dropdown, styles.loadingContainer]}>\n                  <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n                  <Text style={styles.placeholderText}>Loading locations...</Text>\n                </View>\n              ) : (\n                <View style={styles.dropdownWrapper}>\n                  <TouchableOpacity\n                    style={[\n                      styles.input,\n                      styles.dropdown,\n                      locationError ? styles.errorInput : null\n                    ]}\n                    onPress={() => setShowLocationDropdown(!showLocationDropdown)}\n                  >\n                    <Text style={location ? styles.inputText : styles.placeholderText}>\n                      {location || 'Select your location'}\n                    </Text>\n                    <MaterialCommunityIcons\n                      name={showLocationDropdown ? \"chevron-up\" : \"chevron-down\"}\n                      size={24}\n                      color={theme.colors.text}\n                    />\n                  </TouchableOpacity>\n                  \n                  {showLocationDropdown && (\n                    <View style={styles.dropdownMenu}>\n                      {locations.map((loc) => (\n                        <TouchableOpacity\n                          key={loc.name}\n                          style={styles.dropdownItem}\n                          onPress={() => selectLocation(loc.name)}\n                        >\n                          <Text style={styles.dropdownItemText}>\n                            {loc.name} {!loc.supported && \"(Coming Soon)\"}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  )}\n                </View>\n              )}\n              {locationError ? <Text style={styles.errorText}>{locationError}</Text> : null}\n            </View>\n          )}\n          \n          {/* Regular form fields */}\n          {(inviteVerified || !location || locations.find(loc => loc.name === location && loc.supported)) ? (\n            <>\n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, firstNameError ? styles.errorInput : null]}\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChangeText={(text) => {\n                    setFirstName(text);\n                    setFirstNameError('');\n                  }}\n                />\n                {firstNameError ? <Text style={styles.errorText}>{firstNameError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, lastNameError ? styles.errorInput : null]}\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChangeText={(text) => {\n                    setLastName(text);\n                    setLastNameError('');\n                  }}\n                />\n                {lastNameError ? <Text style={styles.errorText}>{lastNameError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, emailError ? styles.errorInput : null]}\n                  placeholder=\"Email\"\n                  value={email}\n                  onChangeText={(text) => {\n                    setEmail(text);\n                    setEmailError('');\n                  }}\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                  editable={true}\n                />\n                {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, passwordError ? styles.errorInput : null]}\n                  placeholder=\"Password\"\n                  value={password}\n                  onChangeText={(text) => {\n                    setPassword(text);\n                    setPasswordError('');\n                  }}\n                  secureTextEntry\n                />\n                {passwordError ? <Text style={styles.errorText}>{passwordError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, confirmPasswordError ? styles.errorInput : null]}\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChangeText={(text) => {\n                    setConfirmPassword(text);\n                    setConfirmPasswordError('');\n                  }}\n                  secureTextEntry\n                />\n                {confirmPasswordError ? <Text style={styles.errorText}>{confirmPasswordError}</Text> : null}\n              </View>\n              \n              <CustomButton title=\"Sign Up\" onPress={handleSignUp} style={styles.signupButton} />\n            </>\n          ) : (\n            /* Show waitlist button if unsupported location is selected */\n            <View style={styles.waitlistContainer}>\n              <Text style={styles.waitlistMessage}>\n                CrittrCove isn't available in {location} yet, but we're expanding soon!\n              </Text>\n              <Text style={styles.waitlistSubMessage}>\n                Join our waitlist to be notified when we launch in your area.\n              </Text>\n              <CustomButton\n                title=\"Join Waitlist\"\n                onPress={navigateToWaitlist}\n                style={styles.waitlistButton}\n              />\n            </View>\n          )}\n          \n          {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} style={styles.loader} />}\n          {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n        </View>\n        \n        {/* Sign In Link */}\n        <View style={styles.signInContainer}>\n          <Text style={styles.signInText}>Already have an account? </Text>\n          <TouchableOpacity onPress={navigateToSignIn}>\n            <Text style={styles.signInLink}>Sign in</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  scrollContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100%',\n  },\n  formContainer: {\n    backgroundColor: theme.colors.surfaceContrast,\n    padding: 30,\n    borderRadius: 10,\n    width: '100%',\n    maxWidth: 500,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  title: {\n    fontSize: 32,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: theme.colors.text,\n    fontSize: 16,\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.surface,\n    fontSize: 16,\n  },\n  errorInput: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 5,\n  },\n  message: {\n    marginTop: 20,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  inviteContainer: {\n    marginBottom: 20,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: '#f0f9ff',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  inviteText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    marginLeft: 8,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n  signupButton: {\n    marginTop: 24,\n    width: '100%',\n  },\n  loader: {\n    marginTop: 20,\n  },\n  signInContainer: {\n    flexDirection: 'row',\n    marginTop: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  signInText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  signInLink: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  dropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 50,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  placeholderText: {\n    color: theme.colors.placeHolderText,\n    fontSize: 16,\n  },\n  inputText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  dropdownMenu: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    zIndex: 1002,\n    marginTop: 4,\n    maxHeight: 200,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  label: {\n    color: theme.colors.text,\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  locationContainer: {\n    width: '100%',\n    marginBottom: 16,\n    position: 'relative',\n    zIndex: 1000,\n  },\n  dropdownWrapper: {\n    position: 'relative',\n    zIndex: 1001,\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n  },\n  waitlistContainer: {\n    marginTop: 20,\n    padding: 20,\n    borderRadius: 8,\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#f0f9ff',\n    borderWidth: 1,\n    borderColor: '#e0e7ff',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  waitlistMessage: {\n    color: theme.colors.text,\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  waitlistSubMessage: {\n    color: theme.colors.text,\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  waitlistButton: {\n    marginTop: 24,\n    width: '100%',\n    backgroundColor: '#6B7280',\n  },\n});","import React, { useState } from 'react';\nimport { View, TextInput, Text, StyleSheet, Alert, ActivityIndicator, Dimensions, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\nimport CustomButton from '../components/CustomButton';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigation = useNavigation();\n\n  const handleResetPassword = async () => {\n    if (!email) {\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', 'Please enter your email address.');\n      } else {\n        setSuccessMessage('Error: Please enter your email address.');\n      }\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/reset-password/`, { email });\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Success', 'A reset password link has been sent to your email.', [\n          { text: 'OK', onPress: () => navigation.navigate('Home') }\n        ]);\n      } else {\n        setSuccessMessage('A reset password link has been sent to your email.');\n        setTimeout(() => {\n          navigation.navigate('Home');\n        }, 2000); // Navigate after 2 seconds\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 404) {\n        setEmailError(true);\n        if (Platform.OS === 'ios' || Platform.OS === 'android') {\n          Alert.alert('Error', 'Email is not associated with any user.');\n        } else {\n          setSuccessMessage('Error: Email is not associated with any user.');\n        }\n      } else {\n        if (Platform.OS === 'ios' || Platform.OS === 'android') {\n          Alert.alert('Error', 'Failed to send reset password email. Please try again later.');\n        } else {\n          setSuccessMessage('Error: Failed to send reset password email. Please try again later.');\n        }\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reset Password</Text>\n      <TextInput\n        style={[styles.input, emailError && styles.inputError]}\n        placeholder=\"Email\"\n        value={email}\n        onChangeText={(text) => {\n          setEmail(text);\n          setEmailError(false);\n        }}\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n      />\n      <CustomButton title=\"Reset Password\" onPress={handleResetPassword} />\n      {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} />}\n      {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.medium,\n    backgroundColor: theme.colors.background,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.primary,\n    marginBottom: theme.spacing.medium,\n  },\n  input: {\n    width: screenWidth > 600 ? 600 : '100%',\n    maxWidth: 600,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: theme.spacing.small,\n    paddingHorizontal: theme.spacing.small,\n  },\n  inputError: {\n    borderColor: 'red',\n  },\n  message: {\n    marginTop: theme.spacing.small,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, TextInput, Text, StyleSheet, ActivityIndicator, Dimensions, Alert, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function ResetPasswordConfirm({ route }) {\n  const { uid, token } = route.params;\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigation = useNavigation();\n\n  const handlePasswordReset = async () => {\n    if (newPassword !== confirmPassword) {\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', 'Passwords do not match.');\n      } else {\n        setSuccessMessage('Passwords do not match.');\n      }\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/reset-password-confirm/${uid}/${token}/`, {\n        new_password: newPassword,\n      });\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Success', 'Your password has been reset.', [\n          { text: 'OK', onPress: () => navigateToFrom(navigation, 'SignIn', 'ResetPasswordConfirm') }\n        ]);\n      } else {\n        setSuccessMessage('Your password has been reset.');\n        setTimeout(() => {\n          navigateToFrom(navigation, 'SignIn', 'ResetPasswordConfirm');\n        }, 2000); // Navigate after 2 seconds\n      }\n    } catch (error) {\n      const errorMessage = 'Failed to reset password. Please try again later.';\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', errorMessage);\n      } else {\n        setSuccessMessage(errorMessage);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reset Password</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"New Password\"\n        value={newPassword}\n        onChangeText={setNewPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <CustomButton title=\"Reset Password\" onPress={handlePasswordReset} />\n      {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} />}\n      {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.medium,\n    backgroundColor: theme.colors.background,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.primary,\n    marginBottom: theme.spacing.medium,\n  },\n  input: {\n    width: screenWidth > 600 ? 600 : '100%',\n    maxWidth: 600,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: theme.spacing.small,\n    paddingHorizontal: theme.spacing.small,\n  },\n  message: {\n    marginTop: theme.spacing.small,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n});","// components/BookingCard.js\nimport React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { convertDateTimeFromUTC, formatDate } from '../utils/time_utils';\n\nconst getStatusInfo = (status) => {\n  // Add debugging for status values\n  debugLog(\"MBA5677: Processing status\", { status });\n  \n  switch (status) {\n    case 'Pending Initial Professional Changes':\n    case 'Pending Professional Changes':\n      return {\n        text: 'Pending Pro',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n    case 'Pending Owner Approval':\n      return {\n        text: 'Pending Owner',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n    case 'Confirmed':\n      return {\n        text: 'Confirmed',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    case 'Completed':\n      return {\n        text: 'Completed',\n        bgColor: theme.colors.mybookings.completedBg,\n        textColor: theme.colors.mybookings.completedText,\n        icon: 'flag-checkered'\n      };\n    case 'Confirmed Pending Professional Changes':\n      return {\n        text: 'Confirmed • Pending Pro',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    case 'Confirmed Pending Owner Approval':\n      return {\n        text: 'Confirmed • Pending Owner',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    default:\n      return {\n        text: status || 'Unknown',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n  }\n};\n\nconst BookingCard = ({ booking, type, onViewDetails }) => {\n  const { id, status, date, time, serviceName } = booking;\n  \n  // Handle both client_name and professional_name, with fallbacks for backward compatibility\n  let name = '';\n  if (type === 'professional') {\n    name = booking.client_name || booking.ownerName || 'Client';\n    debugLog(\"MBA5677: Using client name for professional view\", { client_name: booking.client_name, ownerName: booking.ownerName });\n  } else {\n    name = booking.professional_name || booking.professionalName || 'Professional';\n    debugLog(\"MBA5677: Using professional name for client view\", { professional_name: booking.professional_name, professionalName: booking.professionalName });\n  }\n  \n  const statusInfo = getStatusInfo(status);\n  const pets = booking.pets || [];\n  const { screenWidth, timeSettings } = useContext(AuthContext);\n  const isMobile = screenWidth < 600;\n  const [isHovered, setIsHovered] = useState(false);\n\n  // Add debugging for incoming date\n  debugLog(\"MBA5677: Original booking date/time\", { date, time });\n\n  // Convert time from UTC to user's timezone if needed\n  const convertedDateTime = timeSettings?.timezone !== 'UTC' && date && time\n    ? convertDateTimeFromUTC(date, time, timeSettings?.timezone || 'America/Denver', timeSettings?.use_military_time || false)\n    : date && time ? { date, time } : null;\n\n  // Format the date for display using the moment-based approach\n  const formattedDate = convertedDateTime?.date \n    ? (() => {\n        debugLog(\"MBA5677: Formatting with direct date\", convertedDateTime.date);\n        const parts = convertedDateTime.date.split('-');\n        if (parts.length === 3) {\n          const [year, month, day] = parts;\n          // Create date object directly\n          const dateObj = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n          if (!isNaN(dateObj.getTime())) {\n            const monthName = dateObj.toLocaleString('default', { month: 'short' });\n            debugLog(\"MBA5677: Formatted date parts\", { year, month, day, monthName, day: dateObj.getDate() });\n            return `${monthName} ${dateObj.getDate()}`;\n          }\n        }\n        // Fallback to original date if parsing fails\n        return convertedDateTime.date;\n      })()\n    : 'No date selected';\n    \n  const convertedTime = convertedDateTime?.time;\n\n  debugLog(\"MBA5677: Converted date/time\", { \n    formattedDate,\n    convertedTime,\n    convertedDateTime,\n    timezone: timeSettings?.timezone,\n    originalDate: date,\n    originalTime: time\n  });\n\n  const getMetaText = () => {\n    const timeText = convertedTime || 'No time selected';\n    const serviceText = serviceName || 'No service selected';\n\n    if (isMobile) {\n      return (\n        <View style={styles.mobileMetaInfo}>\n          <View style={styles.mobileMetaRow}>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"calendar\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{formattedDate}</Text>\n            </View>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"clock-outline\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{timeText}</Text>\n            </View>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"briefcase-outline\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{serviceText}</Text>\n            </View>\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.metaInfo}>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"calendar\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{formattedDate}</Text>\n        </View>\n        <Text style={styles.metaText}> • </Text>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"clock-outline\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{timeText}</Text>\n        </View>\n        <Text style={styles.metaText}> • </Text>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"briefcase-outline\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{serviceText}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  // Add debugging for complete booking object and type\n  debugLog(\"MBA5677: Rendering BookingCard\", { \n    booking,\n    type,\n    name,\n    status\n  });\n\n  return (\n    <TouchableOpacity \n      style={[\n        styles.card,\n        Platform.OS === 'web' && isHovered && styles.cardHovered\n      ]}\n      onPress={onViewDetails}\n      onMouseEnter={() => Platform.OS === 'web' && setIsHovered(true)}\n      onMouseLeave={() => Platform.OS === 'web' && setIsHovered(false)}\n    >\n      <View style={[styles.cardContent, isMobile && styles.mobileCardContent]}>\n        <View style={[styles.topContent, isMobile && styles.mobileTopContent]}>\n          <Image \n            source={require('../../assets/default-profile.png')} \n            style={[\n              styles.profileImage,\n              isMobile && styles.mobileProfileImage\n            ]}\n          />\n          <View style={[styles.contentContainer, isMobile && styles.mobileContentContainer]}>\n            <View style={[styles.headerContainer, isMobile && styles.mobileHeaderContainer]}>\n              <View style={styles.nameAndPets}>\n                <View style={[styles.clientContainer, isMobile && styles.mobileClientContainer]}>\n                  <MaterialCommunityIcons \n                    name=\"account\" \n                    size={isMobile ? 16 : 18} \n                    color={theme.colors.mybookings.ownername} \n                  />\n                  <Text style={[styles.name, isMobile && styles.mobileName]}>{name}</Text>\n                </View>\n                <View style={[styles.petContainer, isMobile && styles.mobilePetContainer]}>\n                  <MaterialCommunityIcons name=\"paw\" size={isMobile ? 14 : 14} color={theme.colors.mybookings.metaText} />\n                  <Text style={[styles.petInfo, isMobile && styles.mobilePetInfo]}>\n                    {pets.length > 0 ? pets.map(pet => pet.name).join(', ') : 'No pets selected'}\n                  </Text>\n                </View>\n              </View>\n              <View style={[\n                styles.statusBadge, \n                { backgroundColor: statusInfo.bgColor },\n                isMobile && styles.mobileStatusBadge\n              ]}>\n                <View style={styles.statusContent}>\n                  <MaterialCommunityIcons \n                    name={statusInfo.icon} \n                    size={isMobile ? 12 : 16} \n                    color={statusInfo.textColor}\n                  />\n                  <Text style={[\n                    styles.statusText, \n                    { color: statusInfo.textColor },\n                    isMobile && styles.mobileStatusText\n                  ]}>\n                    {statusInfo.text}\n                  </Text>\n                </View>\n              </View>\n            </View>\n            {!isMobile && getMetaText()}\n          </View>\n          {!isMobile && (\n            <TouchableOpacity\n              style={styles.viewDetailsButton}\n              onPress={onViewDetails}\n            >\n              <Text style={styles.viewDetailsText}>View Details</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        {isMobile && (\n          <>\n            <View style={styles.mobileDivider} />\n            {getMetaText()}\n          </>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  cardHovered: {\n    transform: [{ scale: 1.02 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  cardContent: {\n    flexDirection: 'column',\n  },\n  mobileCardContent: {\n    gap: 12,\n  },\n  topContent: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    gap: 16,\n  },\n  mobileTopContent: {\n    marginBottom: 0,\n  },\n  profileImage: {\n    width: 88,\n    height: 88,\n    borderRadius: 44,\n  },\n  mobileProfileImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  mobileContentContainer: {\n    flex: 1,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  mobileHeaderContainer: {\n    marginBottom: 0,\n  },\n  nameAndPets: {\n    flex: 1,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 16,\n  },\n  statusContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  clientContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n    marginBottom: 6,\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.mybookings.ownerName,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  petInfo: {\n    fontSize: 14,\n    color: '#888975',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileDivider: {\n    height: 1,\n    backgroundColor: theme.colors.surface,\n    width: '100%',\n    // marginVertical: 12,\n  },\n  metaInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  mobileMetaInfo: {\n    width: '100%',\n  },\n  mobileMetaRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  metaItemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  metaText: {\n    fontSize: 14,\n    color: theme.colors.mybookings.metaText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  viewDetailsButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  viewDetailsText: {\n    color: theme.colors.surfaceContrast,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileClientContainer: {\n    marginBottom: 4,\n  },\n  mobileName: {\n    fontSize: 15,\n    color: theme.colors.mybookings.ownerName,\n  },\n  mobilePetContainer: {\n    marginBottom: 2,\n  },\n  mobilePetInfo: {\n    fontSize: 13,\n    color: theme.colors.mybookings.metaText,\n  },\n  mobileStatusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 12,\n  },\n  mobileStatusText: {\n    fontSize: 10,\n  },\n});\n\nexport default BookingCard;","// THIS FILE IS FOR THE BOOKING STEP MODAL\nimport React, { useEffect, useContext, useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  TextInput,\n  useWindowDimensions,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport { formatDateTimeRangeFromUTC, formatFromUTC, FORMAT_TYPES } from '../../utils/time_utils';\nimport { updateBookingDraftRates } from '../../api/API';\n\nconst ReviewAndRatesCard = ({ bookingData, onRatesUpdate, bookingId, showEditControls = true, isProfessional = true }) => {\n  const { timeSettings } = useContext(AuthContext);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isAddingRate, setIsAddingRate] = useState(false);\n  const [editedRates, setEditedRates] = useState(null);\n  const [newRate, setNewRate] = useState({ name: '', amount: '', description: '' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [expandedRates, setExpandedRates] = useState(new Set());\n  const [editingOccurrenceId, setEditingOccurrenceId] = useState(null);\n  const [occurrenceEdits, setOccurrenceEdits] = useState({});\n  const [isAddingRateForOccurrence, setIsAddingRateForOccurrence] = useState(null);\n  const [newOccurrenceRate, setNewOccurrenceRate] = useState({ name: '', amount: '', description: '' });\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    debugLog('MBA54321 ReviewAndRatesCard received bookingData:', bookingData);\n    debugLog('MBA54321 ReviewAndRatesCard received bookingId:', bookingId);\n    \n    if (bookingData?.occurrences?.[0]) {\n      // Create a safe default rates object\n      const defaultRates = {\n        base_rate: 0,\n        additional_animal_rate: 0,\n        applies_after: 1,\n        holiday_rate: 0,\n        holiday_days: 0,\n        additional_rates: []\n      };\n      \n      // Get the occurrence\n      const occurrence = bookingData.occurrences[0];\n      \n      // Use the existing rates or default to our safe defaults\n      const safeRates = occurrence.rates || defaultRates;\n      \n      // Initialize edited rates\n      setEditedRates({ ...safeRates });\n    }\n  }, [bookingData, bookingId]);\n\n  // Log whenever either editMode or editingOccurrenceId changes\n  useEffect(() => {\n    debugLog('MBA66777 Edit state changed:', { \n      isEditMode, \n      editingOccurrenceId, \n      occurrencesCount: bookingData?.occurrences?.length || 0\n    });\n  }, [isEditMode, editingOccurrenceId, bookingData?.occurrences?.length]);\n\n  const formatCurrency = (amount) => {\n    if (!amount) return '$0.00';\n    return `$${parseFloat(amount).toFixed(2)}`;\n  };\n\n  const toggleEditMode = () => {\n    if (isEditMode) {\n      // Save changes\n      saveRateChanges();\n    } else {\n      // Enter edit mode\n      setIsEditMode(true);\n      setIsAddingRate(false);\n    }\n  };\n\n  const toggleAddRate = () => {\n    setIsAddingRate(!isAddingRate);\n    // Don't exit edit mode when adding a rate for overnight bookings\n    setNewRate({ name: '', amount: '', description: '' });\n  };\n\n  // Helper function to sanitize amount input for consistent handling\n  const sanitizeAmountInput = (value) => {\n    // Remove non-numeric characters except decimal point\n    let sanitized = value\n      .replace(/[^\\d.]/g, '') // Remove anything that's not a digit or decimal point\n      .replace(/(\\..*)\\./g, '$1'); // Remove multiple decimal points, keep only the first one\n    \n    // Limit to 2 decimal places\n    const parts = sanitized.split('.');\n    if (parts.length > 1 && parts[1].length > 2) {\n      sanitized = `${parts[0]}.${parts[1].substring(0, 2)}`;\n    }\n    \n    return sanitized;\n  };\n  \n  // Update the setNewRate for amount field to apply consistent validation\n  const handleNewRateAmountChange = (text) => {\n    setNewRate(prev => ({\n      ...prev,\n      amount: sanitizeAmountInput(text)\n    }));\n  };\n  \n  // Update the setNewOccurrenceRate for amount field to apply consistent validation\n  const handleNewOccurrenceRateAmountChange = (text) => {\n    setNewOccurrenceRate(prev => ({\n      ...prev,\n      amount: sanitizeAmountInput(text)\n    }));\n  };\n\n  const saveRateChanges = async () => {\n    // Create a copy of bookingData with updated rates\n    if (!editedRates) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      debugLog('MBA66777 Saving rate changes:', editedRates);\n      debugLog('MBA66777 Using bookingId:', bookingId);\n      \n      // Create a clean version of editedRates to send to API\n      const cleanEditedRates = {\n        ...editedRates,\n        additional_rates: editedRates.additional_rates && editedRates.additional_rates.length > 0 \n          ? editedRates.additional_rates.map(rate => ({\n              title: rate.name || rate.title, // Always use 'title' for backend\n              // Convert empty or string amount values to number\n              amount: rate.amount === '' ? 0 : typeof rate.amount === 'string' ? parseFloat(rate.amount) : rate.amount,\n              description: rate.description || `Additional rate`\n            }))\n          : []\n      };\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, index) => {\n        // For the first occurrence (the one being edited in this case), update its rates\n        if (index === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: editedRates.base_rate === '' ? 0 : typeof editedRates.base_rate === 'string' ? parseFloat(editedRates.base_rate) : editedRates.base_rate,\n              additional_animal_rate: editedRates.additional_animal_rate === '' ? 0 : typeof editedRates.additional_animal_rate === 'string' ? parseFloat(editedRates.additional_animal_rate) : editedRates.additional_animal_rate || 0,\n              applies_after: parseInt(editedRates.applies_after || 1),\n              holiday_rate: editedRates.holiday_rate === '' ? 0 : typeof editedRates.holiday_rate === 'string' ? parseFloat(editedRates.holiday_rate) : editedRates.holiday_rate || 0,\n              additional_rates: cleanEditedRates.additional_rates\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 Rate update API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n      \n      // Reset all edit state\n      setIsEditMode(false);\n      setEditingOccurrenceId(null);\n      setOccurrenceEdits({});\n      setExpandedRates(new Set());\n      setIsAddingRate(false);\n      setIsAddingRateForOccurrence(null);\n    } catch (err) {\n      debugLog('MBA66777 Error saving rate changes:', err);\n      setError('Failed to update rates. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveNewRate = async () => {\n    if (!newRate.name || (!newRate.amount && newRate.amount !== '')) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create the new rate object\n      const newAdditionalRate = {\n        title: newRate.name,\n        amount: newRate.amount === '' ? 0 : typeof newRate.amount === 'string' ? parseFloat(newRate.amount) : newRate.amount,\n        description: newRate.description || `Additional rate`\n      };\n      \n      // Create an updated rates object\n      const updatedRates = { ...editedRates };\n      \n      if (!updatedRates.additional_rates) {\n        updatedRates.additional_rates = [];\n      }\n      \n      updatedRates.additional_rates.push({\n        name: newRate.name,\n        title: newRate.name, // Add title for consistency\n        amount: newRate.amount === '' ? 0 : typeof newRate.amount === 'string' ? parseFloat(newRate.amount) : newRate.amount,\n        description: newRate.description || `Additional rate`\n      });\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, index) => {\n        // For the first occurrence (the one being edited in this case), update its rates with the new rate\n        if (index === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedRates.base_rate),\n              additional_animal_rate: parseFloat(updatedRates.additional_animal_rate || 0),\n              applies_after: parseInt(updatedRates.applies_after || 1),\n              holiday_rate: parseFloat(updatedRates.holiday_rate || 0),\n              additional_rates: updatedRates.additional_rates.map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || `Additional rate`\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences with new rate to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 New rate added API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Set the edited rates from the response\n        if (response.draft_data.occurrences && response.draft_data.occurrences[0]) {\n          setEditedRates(response.draft_data.occurrences[0].rates);\n        }\n        \n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n      \n      setIsAddingRate(false);\n      setNewRate({ name: '', amount: '', description: '' });\n    } catch (err) {\n      debugLog('MBA66777 Error adding new rate:', err);\n      setError('Failed to add new rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateBaseRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      base_rate: sanitizedValue\n    }));\n  };\n\n  const updateAdditionalAnimalRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      additional_animal_rate: sanitizedValue\n    }));\n  };\n\n  const updateHolidayRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      holiday_rate: sanitizedValue\n    }));\n  };\n\n  const updateAdditionalRate = (index, field, value) => {\n    if (!editedRates?.additional_rates) return;\n    \n    const updatedAdditionalRates = [...editedRates.additional_rates];\n    \n    if (field === 'amount') {\n      // Apply consistent amount sanitization\n      const sanitizedValue = sanitizeAmountInput(value);\n      \n      updatedAdditionalRates[index] = {\n        ...updatedAdditionalRates[index],\n        amount: sanitizedValue === '' ? '' : sanitizedValue\n      };\n    } else if (field === 'name') {\n      updatedAdditionalRates[index] = {\n        ...updatedAdditionalRates[index],\n        name: value\n      };\n    }\n    \n    setEditedRates(prev => ({\n      ...prev,\n      additional_rates: updatedAdditionalRates\n    }));\n  };\n\n  const deleteAdditionalRate = async (index) => {\n    if (!editedRates?.additional_rates) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create an updated rates object\n      const updatedRates = { ...editedRates };\n      const updatedAdditionalRates = [...updatedRates.additional_rates];\n      updatedAdditionalRates.splice(index, 1);\n      updatedRates.additional_rates = updatedAdditionalRates;\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, occIndex) => {\n        // For the first occurrence (the one being edited in this case), update its rates with the updated rates\n        if (occIndex === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedRates.base_rate),\n              additional_animal_rate: parseFloat(updatedRates.additional_animal_rate || 0),\n              applies_after: parseInt(updatedRates.applies_after || 1),\n              holiday_rate: parseFloat(updatedRates.holiday_rate || 0),\n              additional_rates: updatedRates.additional_rates.map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || `Additional rate`\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences with updated rates to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 Rate deleted API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Set the edited rates from the response\n        if (response.draft_data.occurrences && response.draft_data.occurrences[0]) {\n          setEditedRates(response.draft_data.occurrences[0].rates);\n        }\n        \n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n    } catch (err) {\n      debugLog('MBA66777 Error deleting rate:', err);\n      setError('Failed to delete rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEditOccurrence = (occurrence) => {\n    debugLog('MBA66777 Editing occurrence:', occurrence);\n    \n    // Set the occurrence ID being edited\n    setEditingOccurrenceId(occurrence.occurrence_id);\n    \n    // For single occurrence bookings (typically overnight), also enter edit mode\n    if (bookingData.occurrences.length === 1) {\n      debugLog('MBA66777 Setting isEditMode for single occurrence booking');\n      setIsEditMode(true);\n      \n      // Make sure we have the correct rates in editedRates\n      setEditedRates({\n        base_rate: occurrence.rates.base_rate,\n        additional_animal_rate: occurrence.rates.additional_animal_rate || 0,\n        applies_after: occurrence.rates.applies_after || 1,\n        holiday_rate: occurrence.rates.holiday_rate || 0,\n        additional_rates: occurrence.rates.additional_rates?.map(r => ({\n          name: r.name || r.title,\n          amount: r.amount,\n          description: r.description || ''\n        })) || []\n      });\n    } else {\n      // For multiple occurrences, expand the rates panel\n      setExpandedRates(new Set([occurrence.occurrence_id]));\n    }\n    \n    // Set the occurrence edits for either case\n    setOccurrenceEdits({\n      base_rate: occurrence.rates.base_rate,\n      additional_animal_rate: occurrence.rates.additional_animal_rate || 0,\n      applies_after: occurrence.rates.applies_after || 1,\n      holiday_rate: occurrence.rates.holiday_rate || 0,\n      additional_rates: occurrence.rates.additional_rates?.map(r => ({\n        name: r.name || r.title,\n        amount: r.amount,\n        description: r.description || ''\n      })) || []\n    });\n  };\n\n  const handleCancelEdit = () => {\n    setEditingOccurrenceId(null);\n    setOccurrenceEdits({});\n    \n    // If we were editing a single occurrence booking, exit edit mode\n    if (bookingData.occurrences.length === 1) {\n      setIsEditMode(false);\n    }\n    \n    // Also cancel adding a rate if that was in progress\n    setIsAddingRate(false);\n    setIsAddingRateForOccurrence(null);\n  };\n\n  const handleOccurrenceInputChange = (field, value) => {\n    if (field === 'base_rate' || field === 'additional_animal_rate' || field === 'holiday_rate') {\n      // Apply consistent amount sanitization\n      const sanitizedValue = sanitizeAmountInput(value);\n      \n      setOccurrenceEdits(prev => ({\n        ...prev,\n        [field]: sanitizedValue\n      }));\n    } else {\n      setOccurrenceEdits(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleAdditionalRateChange = (index, field, value) => {\n    debugLog(`MBA66778 Changing additional rate at index ${index}, field ${field} to value: ${value}`, {\n      currentOccurrenceEdits: occurrenceEdits,\n      currentAdditionalRates: occurrenceEdits.additional_rates\n    });\n    \n    setOccurrenceEdits(prev => {\n      const updated = [...(prev.additional_rates || [])];\n      \n      if (field === 'amount') {\n        // Apply consistent amount sanitization\n        const sanitizedValue = sanitizeAmountInput(value);\n        \n        updated[index] = {\n          ...updated[index],\n          amount: sanitizedValue === '' ? '' : sanitizedValue\n        };\n      } else if (field === 'name') {\n        updated[index] = {\n          ...updated[index],\n          name: value\n        };\n      }\n      \n      debugLog(`MBA66778 Updated additional rate:`, {\n        updatedRate: updated[index],\n        allRates: updated\n      });\n      \n      return { ...prev, additional_rates: updated };\n    });\n  };\n\n  const handleSaveOccurrenceRates = async (occurrence) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Clean up any empty amount values in occurrenceEdits\n      const cleanOccurrenceEdits = {\n        ...occurrenceEdits,\n        additional_rates: (occurrenceEdits.additional_rates || []).map(rate => ({\n          title: rate.name || rate.title, // Always use 'title' for backend\n          // Convert empty or string amount values to number\n          amount: rate.amount === '' ? 0 : typeof rate.amount === 'string' ? parseFloat(rate.amount) : rate.amount,\n          description: rate.description || ''\n        }))\n      };\n      \n      // Create a list of occurrences to send to the API\n      const occurrencesForApi = bookingData.occurrences.map(occ => {\n        // For the occurrence being edited, update its rates\n        if (occ.occurrence_id === occurrence.occurrence_id) {\n          return {\n            occurrence_id: occurrence.occurrence_id,\n            rates: {\n              base_rate: occurrenceEdits.base_rate === '' ? 0 : typeof occurrenceEdits.base_rate === 'string' ? parseFloat(occurrenceEdits.base_rate) : occurrenceEdits.base_rate,\n              additional_animal_rate: occurrenceEdits.additional_animal_rate === '' ? 0 : typeof occurrenceEdits.additional_animal_rate === 'string' ? parseFloat(occurrenceEdits.additional_animal_rate) : occurrenceEdits.additional_animal_rate || 0,\n              applies_after: parseInt(occurrenceEdits.applies_after || 1),\n              holiday_rate: occurrenceEdits.holiday_rate === '' ? 0 : typeof occurrenceEdits.holiday_rate === 'string' ? parseFloat(occurrenceEdits.holiday_rate) : occurrenceEdits.holiday_rate || 0,\n              additional_rates: cleanOccurrenceEdits.additional_rates\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA54321 - Sending all occurrences to API:', occurrencesForApi);\n      \n      const response = await updateBookingDraftRates(\n        bookingId,\n        occurrencesForApi\n      );\n      \n      if (response.draft_data) {\n        if (onRatesUpdate) onRatesUpdate(response.draft_data);\n        \n        // Reset all edit state\n        setEditingOccurrenceId(null);\n        setOccurrenceEdits({});\n        \n        // If we're in edit mode for a single occurrence booking, exit that mode too\n        if (bookingData.occurrences.length === 1) {\n          setIsEditMode(false);\n        }\n        \n        // Also remove any expanded rates and cancel any rate addition in progress\n        setExpandedRates(new Set());\n        setIsAddingRate(false);\n        setIsAddingRateForOccurrence(null);\n      }\n    } catch (err) {\n      debugLog('MBA54321 - Error saving occurrence rates:', err);\n      setError('Failed to update rates. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleAddRateForOccurrence = (occurrenceId) => {\n    if (isAddingRateForOccurrence === occurrenceId) {\n      setIsAddingRateForOccurrence(null);\n    } else {\n      setIsAddingRateForOccurrence(occurrenceId);\n    }\n    setNewOccurrenceRate({ name: '', amount: '', description: '' });\n  };\n\n  const saveNewRateForOccurrence = async (occurrence) => {\n    if (!newOccurrenceRate.name || (!newOccurrenceRate.amount && newOccurrenceRate.amount !== '')) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create updated occurrence edits with the new rate\n      const updatedOccurrenceEdits = { ...occurrenceEdits };\n      \n      if (!updatedOccurrenceEdits.additional_rates) {\n        updatedOccurrenceEdits.additional_rates = [];\n      }\n      \n      updatedOccurrenceEdits.additional_rates.push({\n        name: newOccurrenceRate.name,\n        title: newOccurrenceRate.name, // Add title for consistency\n        amount: newOccurrenceRate.amount === '' ? 0 : typeof newOccurrenceRate.amount === 'string' ? parseFloat(newOccurrenceRate.amount) : newOccurrenceRate.amount,\n        description: newOccurrenceRate.description || `Additional rate`\n      });\n      \n      // Update state\n      setOccurrenceEdits(updatedOccurrenceEdits);\n      \n      // Call API to save the new rate\n      const occurrencesForApi = bookingData.occurrences.map(occ => {\n        // For the occurrence being edited, update its rates with the new rate\n        if (occ.occurrence_id === occurrence.occurrence_id) {\n          return {\n            occurrence_id: occurrence.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedOccurrenceEdits.base_rate),\n              additional_animal_rate: parseFloat(updatedOccurrenceEdits.additional_animal_rate || 0),\n              applies_after: parseInt(updatedOccurrenceEdits.applies_after || 1),\n              holiday_rate: parseFloat(updatedOccurrenceEdits.holiday_rate || 0),\n              additional_rates: updatedOccurrenceEdits.additional_rates.map(rate => ({\n                title: rate.name,\n                amount: parseFloat(rate.amount),\n                description: rate.description || ''\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA54321 - Sending all occurrences with new rate to API:', occurrencesForApi);\n      \n      const response = await updateBookingDraftRates(\n        bookingId,\n        occurrencesForApi\n      );\n      \n      debugLog('MBA54321 - New rate added to occurrence API response:', response);\n      \n      if (response.draft_data) {\n        if (onRatesUpdate) onRatesUpdate(response.draft_data);\n      }\n      \n      // Close add rate form\n      setIsAddingRateForOccurrence(null);\n      setNewOccurrenceRate({ name: '', amount: '', description: '' });\n      \n    } catch (err) {\n      debugLog('MBA66777 Error adding new rate for occurrence:', err);\n      setError('Failed to add new rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const deleteRateForOccurrence = async (occurrence, rateIndex) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create updated occurrence edits with the rate removed\n      const updatedOccurrenceEdits = { ...occurrenceEdits };\n      \n      if (updatedOccurrenceEdits.additional_rates && updatedOccurrenceEdits.additional_rates.length > rateIndex) {\n        // Remove the rate at the specified index\n        updatedOccurrenceEdits.additional_rates.splice(rateIndex, 1);\n        \n        // Update state\n        setOccurrenceEdits(updatedOccurrenceEdits);\n        \n        // Call API to save the updated rates\n        const occurrencesForApi = bookingData.occurrences.map(occ => {\n          // For the occurrence being edited, update its rates with the rate removed\n          if (occ.occurrence_id === occurrence.occurrence_id) {\n            return {\n              occurrence_id: occurrence.occurrence_id,\n              rates: {\n                base_rate: parseFloat(updatedOccurrenceEdits.base_rate),\n                additional_animal_rate: parseFloat(updatedOccurrenceEdits.additional_animal_rate || 0),\n                applies_after: parseInt(updatedOccurrenceEdits.applies_after || 1),\n                holiday_rate: parseFloat(updatedOccurrenceEdits.holiday_rate || 0),\n                additional_rates: updatedOccurrenceEdits.additional_rates.map(rate => ({\n                  title: rate.name,\n                  amount: parseFloat(rate.amount),\n                  description: rate.description || ''\n                }))\n              }\n            };\n          }\n          // For other occurrences, keep them as they are\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(occ.rates.base_rate),\n              additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n              applies_after: parseInt(occ.rates.applies_after || 1),\n              holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n              additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || ''\n              }))\n            }\n          };\n        });\n        \n        debugLog('MBA54321 - Sending all occurrences with rate deleted to API:', occurrencesForApi);\n        \n        const response = await updateBookingDraftRates(\n          bookingId,\n          occurrencesForApi\n        );\n        \n        debugLog('MBA54321 - Rate deleted from occurrence API response:', response);\n        \n        if (response.draft_data) {\n          if (onRatesUpdate) onRatesUpdate(response.draft_data);\n        }\n      }\n    } catch (err) {\n      debugLog('MBA66777 Error deleting rate for occurrence:', err);\n      setError('Failed to delete rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Helper function to get the correct value for an additional rate field based on edit state\n  const getAdditionalRateValue = (occurrence, index, field) => {\n    // If we're editing this occurrence, get value from occurrenceEdits\n    if (editingOccurrenceId === occurrence.occurrence_id && occurrenceEdits.additional_rates) {\n      const value = occurrenceEdits.additional_rates[index]?.[field];\n      // For numeric fields like 'amount', 0 is a valid value\n      if (field === 'amount' && value === 0) return '';\n      return value || '';\n    }\n    \n    // If we're in edit mode (for single occurrence bookings), get from editedRates\n    if (isEditMode && editedRates?.additional_rates) {\n      const value = editedRates.additional_rates[index]?.[field];\n      // For numeric fields like 'amount', 0 is a valid value\n      if (field === 'amount' && value === 0) return '';\n      return value || '';\n    }\n    \n    // Otherwise get from the rate directly\n    const rates = occurrence.rates?.additional_rates || [];\n    const rate = rates[index] || {};\n    const value = field === 'name' ? (rate.name || rate.title) : rate[field];\n    \n    // For numeric fields like 'amount', 0 is a valid value\n    if (field === 'amount' && value === 0) return '';\n    return value || '';\n  };\n\n  const renderBookingBreakdown = () => {\n    debugLog('MBAio3htg5uohg: Rendering booking breakdown with data:', bookingData?.occurrences?.[0]);\n    const occurrences = bookingData?.occurrences;\n    if (!occurrences || occurrences.length === 0) return null;\n\n    // Get the user's timezone from context\n    const { timeSettings } = useContext(AuthContext);\n    const userTimezone = timeSettings?.timezone || 'US/Mountain';\n    debugLog('MBAio3htg5uohg: userTimezone: ', userTimezone);\n\n    // Check if we're dealing with multiple individual dates\n    // Updated logic to properly handle midnight end times\n    const isMultipleDates = occurrences.length > 1 || \n      // Consider a booking with 00:00 end time as a multiple date booking even if\n      // there's only one occurrence and end_date is different from start_date\n      (occurrences.length === 1 && \n       ((occurrences[0].end_date !== occurrences[0].start_date && occurrences[0].end_time === \"00:00\") ||\n        occurrences[0].start_date === occurrences[0].end_date));\n    \n    debugLog('MBAio3htg5uohg: isMultipleDates detection:', { \n      isMultipleDates, \n      count: occurrences.length,\n      firstOccurrence: occurrences[0] ? {\n        start_date: occurrences[0].start_date,\n        end_date: occurrences[0].end_date,\n        end_time: occurrences[0].end_time\n      } : null\n    });\n\n    if (isMultipleDates) {\n      return (\n        <View style={[styles.section, { marginTop: showEditControls ? 24 : 0 }]}>\n          <View style={styles.sectionHeaderContainer}>\n            <Text style={styles.sectionHeader}>Booking Breakdown</Text>\n          </View>\n          <View style={[styles.card, { paddingTop: 16 }]}>\n            {occurrences.map((occurrence, index) => {\n              // Ensure we have a valid unit_of_time - check in multiple places\n              const unitOfTime = \n                (occurrence.unit_of_time) || \n                (occurrence.rates && occurrence.rates.unit_of_time) || \n                'Per Visit';\n                \n              // Ensure multiple is properly formatted as a number\n              const multiple = parseFloat(occurrence.multiple) || 1;\n              \n              // Log each occurrence for debugging\n              debugLog('MBAio3htg5uohg: Processing occurrence in UI:', {\n                id: occurrence.occurrence_id,\n                unit_of_time: unitOfTime,\n                multiple: multiple,\n                calculated_cost: occurrence.calculated_cost\n              });\n              \n              return (\n                <View key={occurrence.occurrence_id} style={styles.multipleDatesContainer}>\n                  <View style={styles.dateHeader}>\n                    <View style={styles.dateTextContainer}>\n                      <Text style={styles.dateText}>\n                        {formatDateTimeRangeFromUTC({\n                          startDate: occurrence.start_date,\n                          startTime: occurrence.start_time,\n                          endDate: occurrence.end_date,\n                          endTime: occurrence.end_time,\n                          userTimezone: userTimezone,\n                          includeTimes: true,\n                          includeTimezone: true\n                        })}\n                      </Text>\n                    </View>\n                    <Text style={styles.occurrenceCost}>\n                      {formatCurrency(occurrence.calculated_cost)}\n                    </Text>\n                    {/* Edit/Cancel Button - moved here, only one icon */}\n                    {editingOccurrenceId === occurrence.occurrence_id ? (\n                      <TouchableOpacity onPress={handleCancelEdit}>\n                        <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                      </TouchableOpacity>\n                    ) : (\n                      showEditControls && (\n                        <TouchableOpacity onPress={() => handleEditOccurrence(occurrence)}>\n                          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.mainColors.main} />\n                        </TouchableOpacity>\n                      )\n                    )}\n                  </View>\n\n                  {/* Collapsible Rates Section */}\n                  <TouchableOpacity \n                    style={styles.ratesToggleButton}\n                    onPress={() => {\n                      const newExpandedRates = new Set(expandedRates);\n                      if (newExpandedRates.has(occurrence.occurrence_id)) {\n                        newExpandedRates.delete(occurrence.occurrence_id);\n                      } else {\n                        newExpandedRates.add(occurrence.occurrence_id);\n                      }\n                      setExpandedRates(newExpandedRates);\n                    }}\n                  >\n                    <Text style={styles.ratesToggleText}>\n                      {expandedRates.has(occurrence.occurrence_id) ? 'Hide Rates' : 'Show Rates'}\n                    </Text>\n                    <MaterialCommunityIcons \n                      name={expandedRates.has(occurrence.occurrence_id) ? \"chevron-up\" : \"chevron-down\"} \n                      size={20} \n                      color={theme.colors.mainColors.main} \n                    />\n                  </TouchableOpacity>\n\n                  {expandedRates.has(occurrence.occurrence_id) && (\n                    <View style={styles.ratesBreakdown}>\n                      {/* Base Rate */}\n                      <View style={styles.rateItem}>\n                        {editingOccurrenceId === occurrence.occurrence_id ? (\n                          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                            <Text style={styles.rateLabel}>Base Rate ({unitOfTime})</Text>\n                            <TextInput\n                              style={{ \n                                width: 80, \n                                borderWidth: 1,\n                                borderColor: theme.colors.border,\n                                borderRadius: 4,\n                                padding: 8\n                              }}\n                              keyboardType=\"decimal-pad\"\n                              value={occurrenceEdits.base_rate?.toString() || ''}\n                              onChangeText={v => handleOccurrenceInputChange('base_rate', v)}\n                            />\n                          </View>\n                        ) : (\n                          <View>\n                            <Text style={styles.rateLabel}>Base Rate</Text>\n                            <Text style={styles.breakdownCalculation}>\n                              {formatCurrency(occurrence.rates.base_rate)} ({unitOfTime}) × {multiple} = {formatCurrency(occurrence.base_total)}\n                            </Text>\n                          </View>\n                        )}\n                        {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                          <Text style={styles.rateAmount}>{formatCurrency(occurrence.base_total)}</Text>\n                        )}\n                      </View>\n\n                      {/* Additional Animal Rate */}\n                      {occurrence.rates?.additional_animal_rate && parseFloat(occurrence.rates.additional_animal_rate) > 0 && occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0) && (\n                        <View style={styles.rateItem}>\n                          {editingOccurrenceId === occurrence.occurrence_id ? (\n                            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                              <Text style={styles.rateLabel}>\n                                Additional Pet Rate (after {occurrence.rates.applies_after} {occurrence.rates.applies_after !== 1 ? 'pets' : 'pet'})\n                              </Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={occurrenceEdits.additional_animal_rate?.toString() || ''}\n                                onChangeText={v => handleOccurrenceInputChange('additional_animal_rate', v)}\n                              />\n                            </View>\n                          ) : (\n                            <Text style={styles.rateLabel}>\n                              Additional Pet Rate (after {occurrence.rates.applies_after} {occurrence.rates.applies_after !== 1 ? 'pets' : 'pet'})\n                            </Text>\n                          )}\n                          {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                            <Text style={styles.rateAmount}>{formatCurrency(occurrence.rates.additional_animal_rate)}</Text>\n                          )}\n                        </View>\n                      )}\n\n                      {/* Holiday Rate - only show if there are actually holiday days */}\n                      {occurrence.rates?.holiday_rate && parseFloat(occurrence.rates.holiday_rate) > 0 && \n                       (occurrence.rates?.holiday_days > 0 || !('holiday_days' in occurrence.rates)) && (\n                        <View style={styles.rateItem}>\n                          {editingOccurrenceId === occurrence.occurrence_id ? (\n                            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                              <Text style={styles.rateLabel}>Holiday Rate</Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={occurrenceEdits.holiday_rate?.toString() || ''}\n                                onChangeText={v => handleOccurrenceInputChange('holiday_rate', v)}\n                              />\n                            </View>\n                          ) : (\n                            <Text style={styles.rateLabel}>Holiday Rate</Text>\n                          )}\n                          {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                            <Text style={styles.rateAmount}>{formatCurrency(occurrence.rates.holiday_rate)}</Text>\n                          )}\n                        </View>\n                      )}\n\n                      {/* Additional Rates */}\n                      {((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).length > 0 ? \n                        ((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).map((rate, index) => (\n                          <View key={index} style={styles.breakdownItem}>\n                            <View style={styles.breakdownLabelContainer}>\n                              {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                                width < 600 ? (\n                                  // Mobile layout - stacked with trash icon on the right\n                                  <View style={{ width: '100%' }}>\n                                    <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                                      {/* Debug log for rate name */}\n                                      {debugLog(`MBA66778 Rendering rate at index ${index}:`, {\n                                        isEditMode,\n                                        editingOccurrenceId: editingOccurrenceId,\n                                        occurrenceId: occurrence.occurrence_id,\n                                        rateName: rate.name || rate.title,\n                                        rateAmount: rate.amount,\n                                        occurrenceEditsRate: occurrenceEdits.additional_rates?.[index],\n                                        valueToShow: editingOccurrenceId === occurrence.occurrence_id ? \n                                          (occurrenceEdits.additional_rates && occurrenceEdits.additional_rates[index]?.amount?.toString()) || '0' : \n                                          rate.amount?.toString() || '0'\n                                      })}\n                                      <TextInput\n                                        style={[styles.nameInput, { flex: 1, marginRight: 8 }]}\n                                        value={getAdditionalRateValue(occurrence, index, 'name')}\n                                        onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                          handleAdditionalRateChange(index, 'name', value) : \n                                          updateAdditionalRate(index, 'name', value)}\n                                        placeholder=\"Rate Name\"\n                                      />\n                                      <TouchableOpacity \n                                        style={styles.deleteButton} \n                                        onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                          deleteRateForOccurrence(occurrence, index) : \n                                          deleteAdditionalRate(index)}\n                                      >\n                                        <MaterialCommunityIcons \n                                          name=\"trash-can-outline\" \n                                          size={22} \n                                          color={theme.colors.error} \n                                        />\n                                      </TouchableOpacity>\n                                    </View>\n                                    <View style={{ marginTop: 8 }}>\n                                      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                        <Text style={{ marginRight: 8 }}>Amount: $</Text>\n                                        <TextInput\n                                          style={{ \n                                            width: 80, \n                                            borderWidth: 1,\n                                            borderColor: theme.colors.border,\n                                            borderRadius: 4,\n                                            padding: 8\n                                          }}\n                                          keyboardType=\"decimal-pad\"\n                                          value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                                getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                          onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                            handleAdditionalRateChange(index, 'amount', value) : \n                                            updateAdditionalRate(index, 'amount', value)}\n                                        />\n                                      </View>\n                                    </View>\n                                  </View>\n                                ) : (\n                                  // Desktop layout - side by side\n                                  <View style={styles.editableAdditionalRateRow}>\n                                    <View style={styles.rateNameAmountRowWithDelete}>\n                                      <TextInput\n                                        style={styles.nameInput}\n                                        value={getAdditionalRateValue(occurrence, index, 'name')}\n                                        onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                          handleAdditionalRateChange(index, 'name', value) : \n                                          updateAdditionalRate(index, 'name', value)}\n                                        placeholder=\"Rate Name\"\n                                      />\n                                      <View style={styles.amountInputContainer}>\n                                        <Text style={styles.currencySymbol}>$</Text>\n                                        <TextInput\n                                          style={styles.rateInput}\n                                          keyboardType=\"decimal-pad\"\n                                          value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                                getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                          onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                            handleAdditionalRateChange(index, 'amount', value) : \n                                            updateAdditionalRate(index, 'amount', value)}\n                                        />\n                                      </View>\n                                    </View>\n                                    <TouchableOpacity \n                                      style={styles.deleteButton} \n                                      onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                        deleteRateForOccurrence(occurrence, index) : \n                                        deleteAdditionalRate(index)}\n                                    >\n                                      <MaterialCommunityIcons \n                                        name=\"trash-can-outline\" \n                                        size={22} \n                                        color={theme.colors.error} \n                                      />\n                                    </TouchableOpacity>\n                                  </View>\n                                )\n                              ) : (\n                                <>\n                                  <Text style={styles.breakdownLabel}>{rate.name || rate.title}</Text>\n                                  <Text style={styles.breakdownCalculation}>{rate.description || \"Additional Rate\"}</Text>\n                                </>\n                              )}\n                            </View>\n                            {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                              <Text style={styles.breakdownAmount}>+{formatCurrency(rate.amount)}</Text>\n                            )}\n                          </View>\n                        ))\n                      : null}\n                    </View>\n                  )}\n\n                  {/* Add New Rate Form for individual occurrence */}\n                  {isAddingRateForOccurrence === occurrence.occurrence_id && (\n                    <View>\n                      <View style={styles.addRateContainer}>\n                        <View style={styles.formDivider} />\n                        \n                        {width < 600 ? (\n                          // Mobile layout - stacked\n                          <View>\n                            <TextInput\n                              style={[styles.nameInput, { marginRight: 0, marginBottom: 12 }]}\n                              value={newOccurrenceRate.name}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, name: text }))}\n                              placeholder=\"Rate Name\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                            <View style={[styles.amountInputContainer, { marginBottom: 12 }]}>\n                              <Text style={styles.currencySymbol}>$</Text>\n                              <TextInput\n                                style={styles.rateInput}\n                                keyboardType=\"decimal-pad\"\n                                value={newOccurrenceRate.amount}\n                                onChangeText={handleNewOccurrenceRateAmountChange}\n                                placeholder=\"0.00\"\n                                placeholderTextColor={theme.colors.placeHolderText}\n                              />\n                            </View>\n                            <TextInput\n                              style={styles.descriptionInput}\n                              value={newOccurrenceRate.description}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, description: text }))}\n                              placeholder=\"Description (optional)\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                          </View>\n                        ) : (\n                          // Desktop layout - side by side\n                          <>\n                            <View style={styles.rateNameAmountRow}>\n                              <TextInput\n                                style={styles.nameInput}\n                                value={newOccurrenceRate.name}\n                                onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, name: text }))}\n                                placeholder=\"Rate Name\"\n                                placeholderTextColor={theme.colors.placeHolderText}\n                              />\n                              <View style={styles.amountInputContainer}>\n                                <Text style={styles.currencySymbol}>$</Text>\n                                <TextInput\n                                  style={styles.rateInput}\n                                  keyboardType=\"decimal-pad\"\n                                  value={newOccurrenceRate.amount}\n                                  onChangeText={handleNewOccurrenceRateAmountChange}\n                                  placeholder=\"0.00\"\n                                  placeholderTextColor={theme.colors.placeHolderText}\n                                />\n                              </View>\n                            </View>\n                            \n                            <TextInput\n                              style={styles.descriptionInput}\n                              value={newOccurrenceRate.description}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, description: text }))}\n                              placeholder=\"Description (optional)\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                          </>\n                        )}\n                        \n                        <View style={styles.formDivider} />\n                      </View>\n                      <View style={styles.buttonsContainer}>\n                        <TouchableOpacity style={styles.cancelButton} onPress={() => setIsAddingRateForOccurrence(null)}>\n                          <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.saveButton} onPress={() => saveNewRateForOccurrence(occurrence)}>\n                          <Text style={styles.saveButtonText}>Save New Rate</Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  )}\n\n                  {/* Add Rate and Save buttons for edit mode for this occurrence */}\n                  {editingOccurrenceId === occurrence.occurrence_id && !isAddingRateForOccurrence && (\n                    <View style={styles.buttonsContainer}>\n                      <TouchableOpacity \n                        style={styles.cancelButton} \n                        onPress={() => toggleAddRateForOccurrence(occurrence.occurrence_id)}\n                      >\n                        <Text style={styles.cancelButtonText}>+ Add Rate</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity \n                        style={styles.saveButton} \n                        onPress={() => handleSaveOccurrenceRates(occurrence)}\n                      >\n                        <Text style={styles.saveButtonText}>Save Changes</Text>\n                      </TouchableOpacity>\n                    </View>\n                  )}\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      );\n    }\n   \n    // Rest of the function for non-multiple dates case\n    const occurrence = occurrences[0];\n    if (!occurrence) return null;\n\n    const formattedDateRange = formatDateTimeRangeFromUTC({\n      startDate: occurrence.start_date,\n      startTime: occurrence.start_time,\n      endDate: occurrence.end_date,\n      endTime: occurrence.end_time,\n      userTimezone: userTimezone,\n      includeTimes: true,\n      includeTimezone: true\n    });\n\n    debugLog('MBA54321 Formatted date range:', formattedDateRange);\n\n    // Initialize rates object if it doesn't exist\n    if (!occurrence.rates) {\n      debugLog('MBA54321 occurrence.rates is undefined, initializing with defaults');\n      occurrence.rates = {\n        base_rate: 0,\n        additional_animal_rate: 0,\n        applies_after: 1,\n        holiday_rate: 0,\n        holiday_days: 0,\n        additional_rates: []\n      };\n    }\n\n    return (\n      <View style={[styles.section, { marginTop: showEditControls ? 24 : 0 }]}>\n        <View style={styles.sectionHeaderContainer}>\n          <Text style={styles.sectionHeader}>Booking Breakdown</Text>\n        </View>\n        <View style={[styles.card, { paddingTop: 16 }]}>\n          <View style={styles.breakdownSection}>\n            <View style={styles.dateHeader}>\n              <View style={styles.dateTextContainer}>\n                <Text style={styles.dateText}>\n                  {formatDateTimeRangeFromUTC({\n                    startDate: occurrence.start_date,\n                    startTime: occurrence.start_time,\n                    endDate: occurrence.end_date,\n                    endTime: occurrence.end_time,\n                    userTimezone: userTimezone,\n                    includeTimes: true,\n                    includeTimezone: true\n                  })}\n                </Text>\n              </View>\n              <Text style={styles.occurrenceCost}>\n                {formatCurrency(occurrence.calculated_cost)}\n              </Text>\n              {/* Edit/Cancel Button - moved here, only one icon */}\n              {editingOccurrenceId === occurrence.occurrence_id ? (\n                <TouchableOpacity onPress={handleCancelEdit}>\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              ) : (\n                showEditControls && (\n                  <TouchableOpacity onPress={() => handleEditOccurrence(occurrence)}>\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.mainColors.main} />\n                  </TouchableOpacity>\n                )\n              )}\n            </View>\n            \n            {/* Base Rate */}\n            <View style={styles.breakdownItem}>\n              <View style={styles.breakdownLabelContainer}>\n                <View style={styles.rateNameAmountRow}>\n                  <Text style={styles.breakdownLabel}>\n                    Base Rate ({(occurrence.unit_of_time) || \n                              (occurrence.rates && occurrence.rates.unit_of_time) || \n                              'Per Visit'})\n                  </Text>\n                  {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                    <View style={styles.amountInputContainer}>\n                      <Text style={styles.currencySymbol}>$</Text>\n                      <TextInput\n                        style={styles.rateInput}\n                        keyboardType=\"decimal-pad\"\n                        value={editingOccurrenceId === occurrence.occurrence_id ? \n                          occurrenceEdits.base_rate?.toString() || '0' : \n                          editedRates?.base_rate?.toString() || '0'}\n                        onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                          v => handleOccurrenceInputChange('base_rate', v) : \n                          updateBaseRate}\n                      />\n                    </View>\n                  ) : null}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownCalculation}>\n                    {occurrence.multiple || 1} × {formatCurrency(occurrence.rates?.base_rate || 0)} = {formatCurrency(occurrence.base_total || occurrence.rates?.base_rate || 0)}\n                  </Text>\n                )}\n              </View>\n              {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                <Text style={styles.breakdownAmount}>{formatCurrency(occurrence.base_total || occurrence.rates?.base_rate || 0)}</Text>\n              )}\n            </View>\n            \n            {/* Additional Animal Rate */}\n            {occurrence.rates?.additional_animal_rate && occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0) ? (\n              <View style={styles.breakdownItem}>\n                <View style={styles.breakdownLabelContainer}>\n                  <View style={styles.rateNameAmountRow}>\n                    <Text style={styles.breakdownLabel}>\n                      Additional Pet Rate (after {occurrence.rates?.applies_after || 1} {occurrence.rates?.applies_after !== 1 ? 'pets' : 'pet'})\n                    </Text>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      <View style={styles.amountInputContainer}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={editingOccurrenceId === occurrence.occurrence_id ? \n                            occurrenceEdits.additional_animal_rate?.toString() || '0' : \n                            editedRates?.additional_animal_rate?.toString() || '0'}\n                          onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                            v => handleOccurrenceInputChange('additional_animal_rate', v) : \n                            updateAdditionalAnimalRate}\n                        />\n                        <Text style={styles.inputLabel}> / pet / {(occurrence.unit_of_time) || \n                                                                (occurrence.rates && occurrence.rates.unit_of_time) || \n                                                                'Per Visit'}</Text>\n                      </View>\n                    ) : null}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownCalculation}>\n                      ${occurrence.rates?.additional_animal_rate || 0} / pet / {(occurrence.unit_of_time) || \n                                                                              (occurrence.rates && occurrence.rates.unit_of_time) || \n                                                                              'Per Visit'}\n                    </Text>\n                  )}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownAmount}>\n                    {(occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0)) ? '+' : ''}\n                    {(occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0)) \n                      ? formatCurrency(occurrence.rates?.additional_animal_rate_total || occurrence.rates?.additional_animal_rate || 0) \n                      : 'NA'}\n                  </Text>\n                )}\n              </View>\n            ) : null}\n            \n            {/* Holiday Rate */}\n            {occurrence.rates?.holiday_rate && occurrence.rates?.holiday_days && occurrence.rates.holiday_days > 0 ? (\n              <View style={[styles.breakdownItem, { borderBottomWidth: (occurrence.rates?.additional_rates?.length > 0 || isAddingRate) ? 1 : 0 }]}>\n                <View style={styles.breakdownLabelContainer}>\n                  <View style={styles.rateNameAmountRow}>\n                    <Text style={styles.breakdownLabel}>\n                      Holiday Rate\n                    </Text>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      <View style={styles.amountInputContainer}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={editingOccurrenceId === occurrence.occurrence_id ? \n                            occurrenceEdits.holiday_rate?.toString() || '0' : \n                            editedRates?.holiday_rate?.toString() || '0'}\n                          onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                            v => handleOccurrenceInputChange('holiday_rate', v) : \n                            updateHolidayRate}\n                        />\n                        <Text style={styles.inputLabel}> × {occurrence.rates?.holiday_days || 0} {occurrence.rates?.holiday_days !== 1 ? 'holidays' : 'holiday'}</Text>\n                      </View>\n                    ) : null}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownCalculation}>\n                      {formatCurrency(occurrence.rates?.holiday_rate || 0)} × {occurrence.rates?.holiday_days || 0} {occurrence.rates?.holiday_days !== 1 ? 'holidays' : 'holiday'}\n                    </Text>\n                  )}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownAmount}>\n                    {occurrence.rates?.holiday_days ? '+' : ''}\n                    {occurrence.rates?.holiday_days ? formatCurrency(occurrence.rates?.holiday_rate_total || occurrence.rates?.holiday_rate || 0) : 'NA'}\n                  </Text>\n                )}\n              </View>\n            ) : null}\n            \n            {/* Additional Rates */}\n            {((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).length > 0 ? \n              ((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).map((rate, index) => (\n                <View key={index} style={styles.breakdownItem}>\n                  <View style={styles.breakdownLabelContainer}>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      width < 600 ? (\n                        // Mobile layout - stacked with trash icon on the right\n                        <View style={{ width: '100%' }}>\n                          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {/* Debug log for rate name */}\n                            {debugLog(`MBA66778 Rendering rate at index ${index}:`, {\n                              isEditMode,\n                              editingOccurrenceId: editingOccurrenceId,\n                              occurrenceId: occurrence.occurrence_id,\n                              rateName: rate.name || rate.title,\n                              rateAmount: rate.amount,\n                              occurrenceEditsRate: occurrenceEdits.additional_rates?.[index],\n                              valueToShow: editingOccurrenceId === occurrence.occurrence_id ? \n                                (occurrenceEdits.additional_rates && occurrenceEdits.additional_rates[index]?.amount?.toString()) || '0' : \n                                rate.amount?.toString() || '0'\n                            })}\n                            <TextInput\n                              style={[styles.nameInput, { flex: 1, marginRight: 8 }]}\n                              value={getAdditionalRateValue(occurrence, index, 'name')}\n                              onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                handleAdditionalRateChange(index, 'name', value) : \n                                updateAdditionalRate(index, 'name', value)}\n                              placeholder=\"Rate Name\"\n                            />\n                            <TouchableOpacity \n                              style={styles.deleteButton} \n                              onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                deleteRateForOccurrence(occurrence, index) : \n                                deleteAdditionalRate(index)}\n                            >\n                              <MaterialCommunityIcons \n                                name=\"trash-can-outline\" \n                                size={22} \n                                color={theme.colors.error} \n                              />\n                            </TouchableOpacity>\n                          </View>\n                          <View style={{ marginTop: 8 }}>\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                              <Text style={{ marginRight: 8 }}>Amount: $</Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                      getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                  handleAdditionalRateChange(index, 'amount', value) : \n                                  updateAdditionalRate(index, 'amount', value)}\n                              />\n                            </View>\n                          </View>\n                        </View>\n                      ) : (\n                        // Desktop layout - side by side\n                        <View style={styles.editableAdditionalRateRow}>\n                          <View style={styles.rateNameAmountRowWithDelete}>\n                            <TextInput\n                              style={styles.nameInput}\n                              value={getAdditionalRateValue(occurrence, index, 'name')}\n                              onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                handleAdditionalRateChange(index, 'name', value) : \n                                updateAdditionalRate(index, 'name', value)}\n                              placeholder=\"Rate Name\"\n                            />\n                            <View style={styles.amountInputContainer}>\n                              <Text style={styles.currencySymbol}>$</Text>\n                              <TextInput\n                                style={styles.rateInput}\n                                keyboardType=\"decimal-pad\"\n                                value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                      getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                  handleAdditionalRateChange(index, 'amount', value) : \n                                  updateAdditionalRate(index, 'amount', value)}\n                              />\n                            </View>\n                          </View>\n                          <TouchableOpacity \n                            style={styles.deleteButton} \n                            onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                              deleteRateForOccurrence(occurrence, index) : \n                              deleteAdditionalRate(index)}\n                          >\n                            <MaterialCommunityIcons \n                              name=\"trash-can-outline\" \n                              size={22} \n                              color={theme.colors.error} \n                            />\n                          </TouchableOpacity>\n                        </View>\n                      )\n                    ) : (\n                      <>\n                        <Text style={styles.breakdownLabel}>{rate.name || rate.title}</Text>\n                        <Text style={styles.breakdownCalculation}>{rate.description || \"Additional Rate\"}</Text>\n                      </>\n                    )}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownAmount}>+{formatCurrency(rate.amount)}</Text>\n                  )}\n                </View>\n              ))\n            : null}\n            \n            {/* Add New Rate Form */}\n            {isAddingRate ? (\n              <View>\n                <View style={styles.addRateContainer}>\n                  <View style={styles.formDivider} />\n                  \n                  {width < 600 ? (\n                    // Mobile layout - stacked\n                    <View>\n                      <TextInput\n                        style={[styles.nameInput, { marginRight: 0, marginBottom: 12 }]}\n                        value={newRate.name}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                        placeholder=\"Rate Name\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                      <View style={[styles.amountInputContainer, { marginBottom: 12 }]}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={newRate.amount}\n                          onChangeText={handleNewRateAmountChange}\n                          placeholder=\"0.00\"\n                          placeholderTextColor={theme.colors.placeHolderText}\n                        />\n                      </View>\n                      <TextInput\n                        style={styles.descriptionInput}\n                        value={newRate.description}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, description: text }))}\n                        placeholder=\"Description (optional)\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                    </View>\n                  ) : (\n                    // Desktop layout - side by side\n                    <>\n                      <View style={styles.rateNameAmountRow}>\n                        <TextInput\n                          style={styles.nameInput}\n                          value={newRate.name}\n                          onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                          placeholder=\"Rate Name\"\n                          placeholderTextColor={theme.colors.placeHolderText}\n                        />\n                        <View style={styles.amountInputContainer}>\n                          <Text style={styles.currencySymbol}>$</Text>\n                          <TextInput\n                            style={styles.rateInput}\n                            keyboardType=\"decimal-pad\"\n                            value={newRate.amount}\n                            onChangeText={handleNewRateAmountChange}\n                            placeholder=\"0.00\"\n                            placeholderTextColor={theme.colors.placeHolderText}\n                          />\n                        </View>\n                      </View>\n                      \n                      <TextInput\n                        style={styles.descriptionInput}\n                        value={newRate.description}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, description: text }))}\n                        placeholder=\"Description (optional)\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                    </>\n                  )}\n                  \n                  <View style={styles.formDivider} />\n                </View>\n                <View style={styles.buttonsContainer}>\n                  <TouchableOpacity style={styles.cancelButton} onPress={toggleAddRate}>\n                    <Text style={styles.cancelButtonText}>Cancel</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity style={styles.saveButton} onPress={saveNewRate}>\n                    <Text style={styles.saveButtonText}>Save New Rate</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ) : null}\n            \n            {/* Add buttons for edit mode on single occurrence bookings */}\n            {isEditMode && !isAddingRate && (\n              <View style={styles.buttonsContainer}>\n                <TouchableOpacity style={styles.cancelButton} onPress={toggleAddRate}>\n                  <Text style={styles.cancelButtonText}>+ Add Rate</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.saveButton} onPress={saveRateChanges}>\n                  <Text style={styles.saveButtonText}>Save Changes</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderTotalAmount = () => {\n    debugLog('MBA54321 Rendering total amount with data:', bookingData?.cost_summary);\n    \n    // Create default cost summary in case it's missing\n    const defaultCostSummary = {\n      subtotal: 0,\n      client_platform_fee: 0,\n      pro_platform_fee: 0,\n      taxes: 0,\n      tax_state: '',\n      total_client_cost: 0,\n      total_sitter_payout: 0,\n      pro_subscription_plan: 0\n    };\n    \n    // Use the actual cost summary or our default\n    const costSummary = bookingData?.cost_summary || defaultCostSummary;\n\n    return (\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Cost Summary</Text>\n        <View style={[styles.card, { paddingTop: 16 }]}>\n          <View style={styles.subtotalRow}>\n            <Text style={styles.subtotalLabel}>Subtotal</Text>\n            <Text style={styles.subtotalAmount}>{formatCurrency(costSummary.subtotal)}</Text>\n          </View>\n          \n          {/* Platform Fee */}\n          <View style={styles.feeRow}>\n            <Text style={styles.feeLabel}>Service Fee</Text>\n            <Text style={styles.feeAmount}>{formatCurrency(costSummary.client_platform_fee)}</Text>\n          </View>\n          \n          {/* Taxes */}\n          <View style={styles.feeRow}>\n            <Text style={styles.feeLabel}>{costSummary.tax_state}{costSummary.tax_state ? ' - ' : ''}Taxes</Text>\n            <Text style={styles.feeAmount}>{formatCurrency(costSummary.taxes)}</Text>\n          </View>\n\n          {/* Total Owner Cost */}\n          <View style={[styles.totalAmountContainer, { paddingBottom: isProfessional ? 16 : 0, marginBottom: isProfessional ? 16 : 0 }]}>\n            <Text style={styles.totalLabel}>Total Owner Cost</Text>\n            <Text style={styles.totalAmount}>{formatCurrency(costSummary.total_client_cost)}</Text>\n          </View>\n\n          {/* Divider */}\n          {isProfessional ? <View style={styles.divider} /> : null}\n\n          {/* Professional Payout - Only show when isProfessional is true */}\n          {isProfessional ? (\n            <View style={styles.payoutContainer}>\n              <Text style={styles.payoutLabel}>Professional Payout</Text>\n              <Text style={styles.payoutAmount}>{formatCurrency(costSummary.total_sitter_payout)}</Text>\n              <Text style={styles.payoutBreakdown}>\n                (Subtotal {formatCurrency(costSummary.subtotal)} - Service Fee {formatCurrency(costSummary.pro_platform_fee)})\n              </Text>\n              {costSummary.pro_platform_fee === 0 ? (\n                <Text style={styles.badge}>{costSummary.pro_subscription_plan === 0 ? 'Free Tier - ' \n                  : costSummary.pro_subscription_plan === 1 ? 'Waitlist Tier - ' \n                  : costSummary.pro_subscription_plan === 2 ? 'Commission Tier - ' \n                  : costSummary.pro_subscription_plan === 3 ? 'Pro Subscription - ' \n                  : costSummary.pro_subscription_plan === 4 ? 'Pro Subscription - ' \n                  :  costSummary.pro_subscription_plan === 5 ? 'Client Subscription - ' \n                  : ''} Saved {formatCurrency(costSummary.subtotal * 0.15)}</Text>\n              ) : null}\n            </View>\n          ) : null}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      {renderBookingBreakdown()}\n      {renderTotalAmount()}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  section: {\n    marginTop: 24,\n  },\n  badge: {\n    fontSize: 12,\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: 'bold',\n    backgroundColor: theme.colors.mainColors.main,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    marginTop: 4,\n  },\n  sectionHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontFamily: theme.fonts.header.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  addRateText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  breakdownSection: {\n    width: '100%',\n  },\n  dateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  dateTextContainer: {\n    flex: 1,\n    marginRight: 8,\n  },\n  dateText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  breakdownLabelContainer: {\n    flex: 1,\n    marginRight: 16,\n  },\n  breakdownLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownCalculation: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalItem: {\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  // Fee and total styles\n  subtotalRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  subtotalLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  subtotalAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  feeRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  feeLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  feeAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmountContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n    paddingBottom: 16,\n  },\n  totalLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmount: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n  },\n  payoutContainer: {\n    alignItems: 'flex-end',\n  },\n  payoutLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  payoutAmount: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: theme.colors.success,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 4,\n  },\n  payoutBreakdown: {\n    fontSize: 12,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 4,\n  },\n  // Input styles for editable fields\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  addRateContainer: {\n    padding: 16,\n    width: '100%',\n  },\n  rateNameAmountRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 12,\n  },\n  rateEditContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  amountInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    minWidth: 120,\n    maxWidth: 150,\n  },\n  rateInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    minWidth: 100,\n    flex: 1,\n  },\n  currencySymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginRight: 4,\n    marginLeft: 2,\n  },\n  inputLabel: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 4,\n  },\n  nameInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    flex: 1,\n    marginRight: 16,\n  },\n  descriptionInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    width: '100%',\n  },\n  saveButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderRadius: 4,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginTop: 0,\n    marginBottom: 0,\n    marginRight: 0,\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  formDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginVertical: 12,\n    width: '100%',\n  },\n  editableAdditionalRateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  rateNameAmountRowWithDelete: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  deleteButton: {\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 8,\n    marginRight: 16,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginRight: 12,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  multipleDatesContainer: {\n    marginBottom: 16,\n  },\n  occurrenceCost: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  ratesToggleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n  },\n  ratesToggleText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  ratesBreakdown: {\n    padding: 16,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  rateLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  rateDescription: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n  },\n});\n\nexport default ReviewAndRatesCard; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  ActivityIndicator,\n  TextInput,\n  Dimensions,\n  Platform\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport ReviewAndRatesCard from './bookingComponents/ReviewAndRatesCard';\nimport { getBookingDetails, approveBooking, requestBookingChanges } from '../api/API';\nimport { capitalizeWords } from '../utils/formatStrings';\n\nconst BookingApprovalModal = ({ \n  visible, \n  onClose, \n  bookingId,\n  onApproveSuccess,\n  onApproveError,\n  onRequestChangesSuccess,\n  onRequestChangesError,\n  initialData = null,\n  isProfessional = true,\n  modalTitle = \"Booking Approval Request\",\n  hideButtons = false,\n  isReadOnly = false\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n  \n  // Create a safe default initial data structure if initialData is null\n  const defaultInitialData = initialData || {\n    booking_id: bookingId,\n    service_type: 'Loading...',\n    pets: [],\n    occurrences: [],\n    cost_summary: {\n      subtotal: 0,\n      client_platform_fee: 0,\n      pro_platform_fee: 0,\n      taxes: 0,\n      tax_state: '',\n      total_client_cost: 0,\n      total_sitter_payout: 0,\n      pro_subscription_plan: 0\n    }\n  };\n  \n  const [bookingData, setBookingData] = useState(defaultInitialData);\n  const [loading, setLoading] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"Loading booking details...\");\n  const [error, setError] = useState(null);\n  const [changeRequestMessage, setChangeRequestMessage] = useState('');\n  const [showChangeRequestInput, setShowChangeRequestInput] = useState(false);\n  \n  // Use a ref to store a cached copy of the booking data that won't be affected by re-renders\n  const bookingDataRef = useRef(defaultInitialData);\n  // Flag to track if data has been fully loaded\n  const dataLoadedRef = useRef(false);\n\n  useEffect(() => {\n    if (visible && bookingId) {\n      fetchBookingDetails();\n    }\n  }, [visible, bookingId]);\n\n  // Update modal title based on mode\n  const getModalTitle = () => {\n    // Debug log to help with modal title decisions\n    debugLog('MBA4321: Modal title decision factors:', {\n      isReadOnly,\n      modalTitle,\n      bookingId\n    });\n    \n    if (isReadOnly) {\n      return \"Booking Details\";\n    }\n    \n    // Keep the provided modal title\n    return modalTitle;\n  };\n\n  // Update bookingData when initialData changes\n  useEffect(() => {\n    if (initialData && !dataLoadedRef.current) {\n      debugLog('MBAio3htg5uohg: Updating bookingData from initialData');\n      setBookingData(initialData);\n      bookingDataRef.current = initialData;\n    }\n  }, [initialData]);\n\n  // Add this useEffect to detect when a websocket update or unread count changes might occur\n  // and protect the bookingData from being affected\n  useEffect(() => {\n    // This sets a regular interval to check if bookingData is still intact\n    const dataProtectionInterval = setInterval(() => {\n      if (visible && dataLoadedRef.current) {\n        // Check if booking data has been unexpectedly cleared\n        const hasNoData = !bookingData || \n                         !bookingData.occurrences || \n                         bookingData.occurrences.length === 0;\n                         \n        const hasRefData = bookingDataRef.current && \n                          bookingDataRef.current.occurrences && \n                          bookingDataRef.current.occurrences.length > 0;\n        \n        if (hasNoData && hasRefData) {\n          debugLog('MBAio3htg5uohg: Detected that bookingData was cleared unexpectedly, restoring from cache');\n          setBookingData({...bookingDataRef.current});\n        }\n      }\n    }, 1000); // Check every second\n    \n    return () => {\n      // Clean up interval on unmount\n      clearInterval(dataProtectionInterval);\n    };\n  }, [visible, bookingData]);\n\n  const fetchBookingDetails = async () => {\n    if (!bookingId) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setLoadingText(\"Loading booking details...\");\n      \n      debugLog('MBAio3htg5uohg: Fetching booking details for ID:', bookingId);\n      const response = await getBookingDetails(bookingId);\n      \n      debugLog('MBAio3htg5uohg: Booking details fetched:', response);\n      \n      // Ensure the response has the expected structure\n      const safeResponse = {\n        ...response,\n        occurrences: response.occurrences || [],\n        pets: response.pets || [],\n        cost_summary: response.cost_summary || {\n          subtotal: 0,\n          client_platform_fee: 0,\n          pro_platform_fee: 0,\n          taxes: 0,\n          tax_state: '',\n          total_client_cost: 0,\n          total_sitter_payout: 0,\n          pro_subscription_plan: 0\n        },\n        service_type: response.service_type || 'N/A'\n      };\n      \n      // Make sure we have at least one occurrence with required fields\n      if (safeResponse.occurrences.length === 0) {\n        safeResponse.occurrences = [{\n          occurrence_id: '0',\n          start_date: new Date().toISOString().split('T')[0],\n          end_date: new Date().toISOString().split('T')[0],\n          start_time: '09:00',\n          end_time: '17:00',\n          unit_of_time: 'visit',\n          multiple: 1,\n          base_total: 0,\n          rates: {\n            base_rate: 0,\n            additional_animal_rate: 0,\n            applies_after: 1,\n            holiday_rate: 0,\n            holiday_days: 0,\n            additional_rates: []\n          }\n        }];\n      } else {\n        // Ensure each occurrence has a rates object and that unit_of_time is preserved\n        safeResponse.occurrences = safeResponse.occurrences.map(occ => {\n          // Log detailed info about each occurrence for debugging\n          debugLog('MBAio3htg5uohg: Processing occurrence:', {\n            id: occ.occurrence_id,\n            unit_of_time: occ.unit_of_time,\n            multiple: occ.multiple\n          });\n          \n          return {\n            ...occ,\n            unit_of_time: occ.unit_of_time || 'visit',\n            multiple: parseFloat(occ.multiple) || 1,\n            base_total: occ.base_total || 0,\n            rates: occ.rates || {\n              base_rate: 0,\n              additional_animal_rate: 0,\n              applies_after: 1,\n              holiday_rate: 0,\n              holiday_days: 0,\n              additional_rates: []\n            }\n          };\n        });\n      }\n      \n      // Store the processed response both in state and ref\n      setBookingData(safeResponse);\n      bookingDataRef.current = safeResponse;\n      dataLoadedRef.current = true;\n      \n      debugLog('MBAio3htg5uohg: Booking data processed and stored');\n    } catch (err) {\n      debugLog('MBAio3htg5uohg: Error fetching booking details:', err);\n      setError('Failed to load booking details. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Add a safety effect that restores booking data from ref if it's cleared unexpectedly\n  useEffect(() => {\n    // Only run this check if we have actually loaded data before\n    if (dataLoadedRef.current) {\n      // Check if booking data was cleared but we have a cache in the ref\n      const hasNoData = !bookingData || !bookingData.occurrences || bookingData.occurrences.length === 0;\n      const hasRefData = bookingDataRef.current && bookingDataRef.current.occurrences && bookingDataRef.current.occurrences.length > 0;\n      \n      if (hasNoData && hasRefData) {\n        debugLog('MBAio3htg5uohg: Booking data was cleared unexpectedly, restoring from cache');\n        setBookingData(bookingDataRef.current);\n      }\n    }\n  }, [bookingData]);\n\n  const handleApprove = async () => {\n    try {\n      setLoading(true);\n      setLoadingText(\"Approving booking...\");\n      setError(null);\n      \n      const response = await approveBooking(bookingId);\n      \n      if (onApproveSuccess) {\n        onApproveSuccess(response);\n      }\n      \n      onClose();\n    } catch (err) {\n      debugLog('MBA77788 Error approving booking:', err);\n      setError('Failed to approve booking. Please try again.');\n      \n      if (onApproveError) {\n        onApproveError(err.response?.data?.error || 'Failed to approve booking');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleShowChangeRequest = () => {\n    setShowChangeRequestInput(true);\n  };\n\n  const handleCancelChangeRequest = () => {\n    setShowChangeRequestInput(false);\n    setChangeRequestMessage('');\n  };\n\n  const handleSubmitChangeRequest = async () => {\n    if (!changeRequestMessage.trim()) {\n      setError('Please provide details about your requested changes.');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setLoadingText(\"Submitting change request...\");\n      setError(null);\n      \n      const response = await requestBookingChanges(bookingId, changeRequestMessage);\n      \n      if (onRequestChangesSuccess) {\n        debugLog('MBA77788 Notifying parent of successful change request submission');\n        onRequestChangesSuccess(response);\n      }\n      \n      onClose();\n    } catch (err) {\n      debugLog('MBA77788 Error requesting booking changes:', err);\n      setError('Failed to submit change request. Please try again.');\n      \n      if (onRequestChangesError) {\n        onRequestChangesError(err.response?.data?.error || 'Failed to submit change request');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    setShowChangeRequestInput(false);\n    setChangeRequestMessage('');\n    onClose();\n  };\n\n  // Main content of the modal\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>{loadingText}</Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.errorContainer}>\n          <MaterialCommunityIcons name=\"alert-circle\" size={48} color={theme.colors.error} />\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity style={styles.retryButton} onPress={fetchBookingDetails}>\n            <Text style={styles.retryButtonText}>Retry</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    if (!bookingData) {\n      return (\n        <View style={styles.emptyContainer}>\n          <Text style={styles.emptyText}>No booking data available</Text>\n        </View>\n      );\n    }\n\n    return (\n      <>\n        <View style={[styles.section, { marginTop: 0 }]}>\n          <Text style={styles.sectionHeader}>Service & Pets</Text>\n          <View style={styles.card}>\n            <View style={styles.serviceContainer}>\n              <Text style={styles.serviceLabel}>Service:</Text>\n              <Text style={styles.serviceValue}>{bookingData.service_details?.service_type || 'N/A'}</Text>\n            </View>\n            \n            <View style={styles.serviceDivider} />\n            \n            <View style={styles.petsContainer}>\n              <Text style={styles.petsLabel}>Pets:</Text>\n              <View style={styles.petsList}>\n                {bookingData.pets && bookingData.pets.length > 0 ? (\n                  bookingData.pets.map((pet, index) => (\n                    <View key={index} style={styles.petItem}>\n                      <Text style={styles.petName}>{pet.name}</Text>\n                      <Text style={styles.petType}>{capitalizeWords(pet.species)} | {pet.breed}</Text>\n                    </View>\n                  ))\n                ) : (\n                  <Text style={styles.noPets}>No pets selected</Text>\n                )}\n              </View>\n            </View>\n          </View>\n        </View>\n        \n        {/* ReviewAndRatesCard for booking details */}\n        {bookingData && (\n          <ReviewAndRatesCard \n            bookingData={bookingData} \n            bookingId={bookingId}\n            onRatesUpdate={(updatedData) => setBookingData(updatedData)}\n            showEditControls={false}\n            isProfessional={isProfessional}\n          />\n        )}\n      </>\n    );\n  };\n\n  // Render change request input\n  const renderChangeRequestInput = () => {\n    return (\n      <View style={styles.changeRequestContainer}>\n        <TextInput\n          style={styles.changeRequestInput}\n          placeholder=\"Enter details about your requested changes...\"\n          value={changeRequestMessage}\n          onChangeText={setChangeRequestMessage}\n          multiline={true}\n          numberOfLines={3}\n          placeholderTextColor={theme.colors.placeHolderText}\n        />\n        <View style={styles.buttonWrapper}>\n          <View style={styles.changeRequestButtons}>\n            <TouchableOpacity\n              style={styles.cancelRequestButton}\n              onPress={handleCancelChangeRequest}\n            >\n              <Text style={styles.cancelRequestButtonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.submitRequestButton}\n              onPress={handleSubmitChangeRequest}\n              disabled={!changeRequestMessage.trim()}\n            >\n              <Text style={styles.submitRequestButtonText}>Request Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  // Footer with action buttons\n  const renderFooter = () => {\n    // Log the current state for debugging\n    debugLog('MBA4321: Footer render state:', {\n      hideButtons,\n      isReadOnly,\n      showChangeRequestInput,\n      isProfessional,\n      modalTitle\n    });\n    \n    // Don't render any footer if the buttons should be hidden\n    if (hideButtons) {\n      return null;\n    }\n    \n    // Read-only mode for confirmed bookings - just show a close button\n    if (isReadOnly) {\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n    \n    // Show change request input or default buttons\n    if (showChangeRequestInput) {\n      return null; // Don't render footer when change request input is shown\n    }\n    \n    if (isProfessional) {\n      // Professional only gets Close button\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      // For booking updates or regular approvals, show all action buttons\n      const isBookingUpdate = modalTitle === \"Booking Update\";\n      \n      // Client gets two or three buttons: Close, Approve, Request Changes\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.button, styles.changeButton]}\n            onPress={handleShowChangeRequest}\n          >\n            <Text style={styles.buttonText}>Request Changes</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.button, styles.approveButton]}\n            onPress={handleApprove}\n          >\n            <Text style={styles.approveText}>{isBookingUpdate ? \"Approve Update\" : \"Approve\"}</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={handleClose}\n    >\n      <SafeAreaView style={styles.safeArea}>\n        <View style={[\n          styles.container, \n          isDesktop ? styles.desktopContainer : {},\n          showChangeRequestInput ? styles.shortenedContainer : {}\n        ]}>\n          {/* Header with customizable title */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{getModalTitle()}</Text>\n            <TouchableOpacity style={styles.closeButton} onPress={handleClose}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Content */}\n          {showChangeRequestInput ? (\n            // Render change request input as direct content\n            renderChangeRequestInput()\n          ) : (\n            // Render scrollable booking details\n            <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.scrollContent}>\n              {renderContent()}\n            </ScrollView>\n          )}\n          \n          {/* Footer with action buttons - only shown when not in change request mode */}\n          {!showChangeRequestInput && renderFooter()}\n        </View>\n      </SafeAreaView>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    margin: Platform.OS === 'web' ? 0 : 24,\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  desktopContainer: {\n    maxWidth: 800,\n    maxHeight: '90%',\n    alignSelf: 'center',\n    marginTop: '5%',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  scrollContainer: {\n    flex: 1,\n  },\n  scrollContent: {\n    padding: 16,\n    paddingBottom: 32,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  button: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  buttonText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  approveButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  approveText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  errorText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: theme.colors.error,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    marginTop: 16,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n  },\n  retryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  // Service and Pets section styles\n  section: {\n    marginTop: 24,\n    marginHorizontal: 16,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    // fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  serviceContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    alignItems: 'center',\n    paddingBottom: 16,\n  },\n  serviceDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n    width: '100%',\n  },\n  serviceLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    width: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceValue: {\n    fontSize: 16,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petsContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  petsLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    width: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petsList: {\n    flex: 1,\n  },\n  petItem: {\n    marginBottom: 8,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petType: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noPets: {\n    fontSize: 16,\n    color: theme.colors.placeHolderText,\n    fontStyle: 'italic',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  // Change request styles\n  changeRequestContainer: {\n    padding: 16,\n  },\n  changeRequestInput: {\n    backgroundColor: theme.colors.background,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    minHeight: 120,\n    textAlignVertical: 'top',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 16,\n  },\n  buttonWrapper: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  changeRequestButtons: {\n    flexDirection: 'row',\n    width: 300,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  cancelRequestButton: {\n    width: 140,\n    height: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border || '#E0E0E0',\n    borderRadius: 8,\n    backgroundColor: 'white',\n  },\n  cancelRequestButtonText: {\n    color: theme.colors.text || '#333333',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitRequestButton: {\n    width: 140,\n    height: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.olive || '#707855',\n    borderRadius: 8,\n  },\n  submitRequestButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  changeButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  shortenedContainer: {\n    flex: 0,\n    backgroundColor: theme.colors.background,\n    margin: Platform.OS === 'web' ? 0 : 24,\n    borderRadius: 12,\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: 500,\n    minHeight: 320,\n  },\n});\n\nexport default BookingApprovalModal; ","/**\n * Capitalizes the first letter of each word in a string, with all other letters lowercase\n * @param {string} str - The string to format\n * @returns {string} - Formatted string with first letter of each word capitalized\n * \n * Examples:\n * 1. \"DOG\" -> \"Dog\"\n * 2. \"HouSE CAt\" -> \"House Cat\"\n */\nexport const capitalizeWords = (str) => {\n  if (!str) return str;\n  \n  return str\n    .split(' ')\n    .map(word => \n      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n    )\n    .join(' ');\n};\n","import React, { useContext, useState, useEffect } from 'react';\nimport { View, ScrollView, StyleSheet, Platform, SafeAreaView, Dimensions, StatusBar, TouchableOpacity, Text } from 'react-native';\nimport { Card, Title, Paragraph, List, Button, useTheme, Appbar, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { TutorialContext } from '../context/TutorialContext';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\nimport ProfessionalServiceCard from '../components/ProfessionalServiceCard';\nimport { getProfessionalServices } from '../api/API';\nimport BookingCard from '../components/BookingCard';\nimport TutorialModal from '../components/TutorialModal';\nimport BookingApprovalModal from '../components/BookingApprovalModal';\n\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\n\nconst Dashboard = ({ navigation }) => {\n  const { colors } = useTheme();\n  const { signOut, firstName, is_prototype, screenWidth, is_DEBUG, isSignedIn, isCollapsed, userRole } = useContext(AuthContext);\n  const { \n    isVisible: isTutorialVisible,\n    currentStep,\n    totalSteps,\n    stepData,\n    handleNext,\n    handlePrevious,\n    handleSkip,\n    completeTutorial,\n  } = useContext(TutorialContext);\n  const [bookings, setBookings] = useState([]);\n  const [services, setServices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeFilter, setActiveFilter] = useState('upcoming');\n  const [onboardingProgress, setOnboardingProgress] = useState({\n    profile_complete: 0,\n    has_bank_account: false,\n    has_services: false,\n    subscription_plan: 0\n  });\n\n  // Add state for the BookingApprovalModal\n  const [bookingModalVisible, setBookingModalVisible] = useState(false);\n  const [selectedBookingId, setSelectedBookingId] = useState(null);\n\n  const isLargeScreen = screenWidth > 900;\n  const isMobile = screenWidth <= 900;\n  const isProfessional = userRole === 'professional';\n\n  // Filter bookings based on active filter\n  const filteredBookings = bookings.filter(booking => {\n    const now = new Date();\n    let bookingDate = null;\n    \n    // Ensure we have a valid date before parsing\n    if (booking.start_date) {\n      try {\n        bookingDate = new Date(booking.start_date);\n        // Check if date is valid\n        if (isNaN(bookingDate.getTime())) {\n          debugLog(\"MBA5677: Invalid booking date\", booking.start_date);\n          return false;\n        }\n      } catch (error) {\n        debugLog(\"MBA5677: Error parsing booking date\", { date: booking.start_date, error });\n        return false;\n      }\n    }\n    \n    debugLog(\"MBA5677: Filtering booking\", { \n      id: booking.booking_id || booking.id,\n      date: booking.start_date || booking.date,\n      parsedDate: bookingDate ? bookingDate.toISOString() : null,\n      now: now.toISOString(),\n      filter: activeFilter\n    });\n    \n    switch (activeFilter) {\n      case 'upcoming':\n        return bookingDate && bookingDate > now;\n      case 'active':\n        return bookingDate && bookingDate <= now && !booking.completed;\n      case 'past':\n        return bookingDate && bookingDate < now && booking.completed;\n      default:\n        return true;\n    }\n  });\n\n  // Limit bookings for owner view\n  const displayedBookings = !isProfessional ? filteredBookings.slice(0, 3) : filteredBookings;\n\n  // Dynamic styles based on screen size\n  const dynamicStyles = {\n    welcomeTitle: {\n      fontSize: isLargeScreen ? 32 : 24,\n      fontWeight: '600',\n      color: theme.colors.whiteText,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    bookingCount: {\n      fontSize: isLargeScreen ? 16 : 14,\n      color: theme.colors.whiteText,\n      fontFamily: theme.fonts.regular.fontFamily,\n      opacity: 0.8,\n      marginTop: 12,\n    },\n    statValue: {\n      fontSize: isLargeScreen ? 20 : 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    statLabel: {\n      fontSize: isLargeScreen ? 16 : 14,\n      color: theme.colors.textSecondary,\n      fontFamily: theme.fonts.regular.fontFamily,\n      marginTop: 4,\n    },\n    statChange: {\n      fontSize: isLargeScreen ? 14 : 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n      marginTop: 4,\n    },\n    sectionTitle: {\n      fontSize: isLargeScreen ? 20 : 18,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.header.fontFamily,\n      marginBottom: 16,\n      marginTop: 24,\n    },\n  };\n\n  const refreshToken = async () => {\n    try {\n      const refreshToken = await AsyncStorage.getItem('refreshToken');\n      const response = await axios.post(`${API_BASE_URL}/api/token/refresh/`, {\n        refresh: refreshToken,\n      });\n      const { access } = response.data;\n      await AsyncStorage.setItem('userToken', access);\n      return access;\n    } catch (error) {\n      console.error('Error refreshing token:', error);\n      await signOut();\n      navigation.navigate('SignIn');\n    }\n  };\n\n  // Prototype data\n  const prototypeBookings = [\n    { id: '56782', owner: 'John Doe', pet: 'Max (Dog)', date: '2023-05-15', time: '14:00', status: 'upcoming' },\n    { id: '5678', owner: 'Jane Smith', pet: 'Whiskers (Cat)', date: '2023-05-17', time: '10:00', status: 'active' },\n  ];\n\n  const prototypeServices = [\n    {\n      service_name: \"Dog Walking\",\n      description: \"Professional dog walking service\",\n      unit_of_time: \"30 minutes\",\n      base_rate: 25,\n      additional_animal_rate: 10,\n      holiday_rate: 35,\n      additional_rates: []\n    },\n    // Add more prototype services as needed\n  ];\n\n  const fetchDashboardData = async () => {\n    if (is_prototype) {\n      setBookings(prototypeBookings);\n      setServices(prototypeServices);\n      setOnboardingProgress({\n        profile_complete: 0.5,\n        has_bank_account: false,\n        has_services: true,\n        subscription_plan: 0\n      });\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      let token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n      \n      // Fetch bookings based on user role\n      const endpoint = isProfessional ? 'professionals' : 'clients';\n      const response = await axios.get(\n        `${API_BASE_URL}/api/${endpoint}/v1/dashboard/`,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      debugLog('MBA5677: Dashboard response data', response.data);\n      \n      // Log the structure of the first booking for debugging\n      if (response.data && response.data.upcoming_bookings && response.data.upcoming_bookings.length > 0) {\n        const firstBooking = response.data.upcoming_bookings[0];\n        debugLog('MBA5677: First booking complete structure', firstBooking);\n        \n        // Log all the keys in the booking object to see available fields\n        debugLog('MBA5677: First booking keys', Object.keys(firstBooking));\n        \n        // Explicitly check for client_name\n        debugLog('MBA5677: First booking client_name field', {\n          client_name: firstBooking.client_name,\n          owner_name: firstBooking.owner_name,\n          client_name_exists: 'client_name' in firstBooking\n        });\n      }\n\n      // Process the incoming bookings to ensure dates are properly formatted\n      const processedBookings = (response.data.upcoming_bookings || []).map(booking => {\n        debugLog('MBA5677: Processing booking', booking);\n        \n        // Make sure we have a valid booking object\n        if (!booking) {\n          debugLog('MBA5677: Null booking received');\n          return null;\n        }\n        \n        // Normalize date format if needed\n        let normalizedDate = booking.start_date;\n        if (normalizedDate && normalizedDate.includes(' ')) {\n          // Handle if the date includes time\n          normalizedDate = normalizedDate.split(' ')[0];\n        }\n        \n        // Return a properly formatted booking object with the client_name explicitly mapped\n        return {\n          ...booking,\n          start_date: normalizedDate, // Ensure date is in YYYY-MM-DD format\n          client_name: booking.client_name || booking.owner_name // Ensure client_name is set\n        };\n      }).filter(booking => booking !== null); // Remove any null bookings\n\n      debugLog('MBA5677: Processed bookings', processedBookings);\n      setBookings(processedBookings);\n      \n      setOnboardingProgress(response.data.onboarding_progress || {\n        profile_complete: 0,\n        has_bank_account: false,\n        has_services: false,\n        subscription_plan: 0\n      });\n\n      // Fetch services if professional\n      if (isProfessional) {\n        try {\n          const servicesData = await getProfessionalServices();\n          setServices(servicesData || []);\n        } catch (error) {\n          console.error('Error fetching professional services:', error);\n        }\n      }\n    } catch (error) {\n      if (error.response?.status === 401) {\n        const newToken = await refreshToken();\n        if (newToken) {\n          try {\n            // Retry fetching data with new token\n            const response = await axios.get(\n              `${API_BASE_URL}/api/${isProfessional ? 'professionals' : 'owners'}/v1/dashboard/`,\n              { headers: { Authorization: `Bearer ${newToken}` } }\n            );\n            setBookings(response.data.upcoming_bookings || []);\n            setOnboardingProgress(response.data.onboarding_progress || {\n              profile_complete: 0,\n              has_bank_account: false,\n              has_services: false,\n              subscription_plan: 0\n            });\n          } catch (retryError) {\n            console.error('Error fetching dashboard data after token refresh:', retryError);\n          }\n        }\n      } else {\n        console.error('Error fetching dashboard data:', error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [userRole, is_prototype]);\n\n  // Add useEffect to check for active bookings and select the active tab if there are any\n  useEffect(() => {\n    if (!isLoading && bookings.length > 0) {\n      const now = new Date();\n      \n      // Check if there are any active bookings (date <= now && !completed)\n      const hasActiveBookings = bookings.some(booking => {\n        try {\n          const bookingDate = booking.start_date ? new Date(booking.start_date) : null;\n          return bookingDate && bookingDate <= now && !booking.completed;\n        } catch (error) {\n          return false;\n        }\n      });\n      \n      debugLog(\"MBA5677: Checking for active bookings\", { \n        hasActiveBookings, \n        bookingsCount: bookings.length,\n        currentActiveFilter: activeFilter\n      });\n      \n      // If there are active bookings, set the active filter to 'active'\n      if (hasActiveBookings && activeFilter !== 'active') {\n        debugLog(\"MBA5677: Setting active filter to 'active' due to active bookings\");\n        setActiveFilter('active');\n      }\n    }\n  }, [bookings, isLoading]);\n\n  // TODO: Fetch owner requests from the backend\n  const ownerRequests = [\n    { id: '1', owner: 'Alice Johnson', pet: 'Fluffy (Rabbit)', date: '2023-05-20', time: '09:00' },\n    { id: '2', owner: 'Bob Williams', pet: 'Spike (Iguana)', date: '2023-05-22', time: '16:00' },\n  ];\n\n  const IconComponent = Platform.OS === 'web'\n    ? ({ name, ...props }) => <MaterialCommunityIcons name={name} {...props} />\n    : List.Icon;\n\n  const navigateToServiceManager = async () => {\n    if (is_DEBUG) {\n      console.log('Setting previousRoute to:', 'Dashboard');\n      console.log('Setting currentRoute to:', 'ServiceManager');\n    }\n    setTimeout(async () => {\n      await navigateToFrom(navigation, 'ServiceManager', 'Dashboard');\n    }, 100);\n  };\n\n  const renderHeader = () => {\n    if (isMobile) return null;\n    \n    return (\n      <View style={styles.headerContainer}>\n        <View style={styles.headerRight}>\n          <TouchableOpacity style={styles.notificationButton}>\n            <MaterialCommunityIcons name=\"bell-outline\" size={24} color={theme.colors.text} />\n            <View style={styles.notificationBadge}>\n              <Text style={styles.notificationCount}>3</Text>\n            </View>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.profileButton}\n            onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard')}\n          >\n            <Avatar.Image \n              size={40} \n              source={require('../../assets/default-profile.png')} \n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const renderWelcomeSection = () => (\n    <View style={styles.welcomeSection}>\n      <View style={styles.welcomeContent}>\n        <View style={styles.welcomeCard}>\n          <View style={styles.welcomeHeader}>\n            <View style={styles.welcomeTextContainer}>\n              <Text style={dynamicStyles.welcomeTitle}>\n                Welcome back{firstName ? ', ' + firstName : ''}! 👋\n              </Text>\n              <Text style={dynamicStyles.bookingCount}>\n                You have {bookings.filter(b => !b.completed).length} active bookings today and {bookings.filter(b => new Date(b.start_date) > new Date()).length} upcoming appointments.\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n\n  const renderOnboardingProgress = () => (\n    <View style={styles.statsContainer}>\n      <View style={styles.statsGrid}>\n        {isProfessional ? (\n          // Professional onboarding cards\n          <>\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'profile_info' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#F0F9E5' }]}>\n                  <MaterialCommunityIcons name=\"account-check\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.profile_complete === 1 ? theme.colors.success : theme.colors.warning }]}>\n                  {Math.round(onboardingProgress.profile_complete * 100)}% Complete\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Profile</Text>\n              <Text style={dynamicStyles.statLabel}>Complete your profile to get started</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E7F3F8' }]}>\n                  <MaterialCommunityIcons name=\"bank\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_bank_account ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_bank_account ? 'Connected' : 'Not Connected'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Bank Account</Text>\n              <Text style={dynamicStyles.statLabel}>Connect your bank to receive payments</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard')}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#FEF0DA' }]}>\n                  <MaterialCommunityIcons name=\"briefcase\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_services ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_services ? 'Active' : 'No Services'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Services</Text>\n              <Text style={dynamicStyles.statLabel}>Add services to start accepting bookings</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E1E2DB' }]}>\n                  <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.subscription_plan > 0 ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.subscription_plan === 0 ? 'Free Tier' : 'Premium'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Subscription</Text>\n              <Text style={dynamicStyles.statLabel}>Upgrade for more features</Text>\n            </TouchableOpacity>\n          </>\n        ) : (\n          // Owner onboarding cards\n          <>\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'profile_info' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#F0F9E5' }]}>\n                  <MaterialCommunityIcons name=\"account-check\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.profile_complete === 1 ? theme.colors.success : theme.colors.warning }]}>\n                  {Math.round(onboardingProgress.profile_complete * 100)}% Complete\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Profile</Text>\n              <Text style={dynamicStyles.statLabel}>Complete your profile to get started</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E7F3F8' }]}>\n                  <MaterialCommunityIcons name=\"credit-card\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_payment_method ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_payment_method ? 'Connected' : 'Not Connected'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Payment Method</Text>\n              <Text style={dynamicStyles.statLabel}>Add a payment method to book services</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'pets_preferences' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#FEF0DA' }]}>\n                  <MaterialCommunityIcons name=\"paw\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_pets ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_pets ? 'Added' : 'No Pets'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Pets</Text>\n              <Text style={dynamicStyles.statLabel}>Add your pets to book services</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E1E2DB' }]}>\n                  <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.subscription_plan > 0 ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.subscription_plan === 0 ? 'Free Tier' : 'Premium'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Subscription</Text>\n              <Text style={dynamicStyles.statLabel}>Upgrade for more features</Text>\n            </TouchableOpacity>\n          </>\n        )}\n      </View>\n    </View>\n  );\n\n  const renderBookingFilters = () => (\n    <View style={styles.filterContainer}>\n      <View style={styles.filterButtons}>\n        {['upcoming', 'active'].map((filter) => (\n          <TouchableOpacity\n            key={filter}\n            style={[\n              styles.filterButton,\n              activeFilter === filter && styles.activeFilterButton\n            ]}\n            onPress={() => setActiveFilter(filter)}\n          >\n            <Text style={[\n              styles.filterText,\n              activeFilter === filter && styles.activeFilterText\n            ]}>\n              {filter.charAt(0).toUpperCase() + filter.slice(1)}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      {/* TODO: UNCOMMONT THIS SECTION after mvp launch and implementation of mybookings screen\n      <TouchableOpacity\n        style={styles.viewAllButton}\n        onPress={() => navigateToFrom(navigation, 'MyBookings', 'Dashboard')}\n      >\n        <Text style={styles.viewAllText}>View All</Text>\n        <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n      </TouchableOpacity> */}\n    </View>\n  );\n\n  // Handle opening the booking modal\n  const handleViewBookingDetails = (bookingId) => {\n    setSelectedBookingId(bookingId);\n    setBookingModalVisible(true);\n    debugLog(\"MBA5677: Opening booking modal for ID:\", bookingId);\n  };\n\n  // Handle closing the booking modal\n  const handleCloseBookingModal = () => {\n    setBookingModalVisible(false);\n    setSelectedBookingId(null);\n  };\n\n  const renderBookings = () => (\n    <View style={styles.bookingsContainer}>\n      {isLoading ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"small\" color={colors.primary} />\n        </View>\n      ) : filteredBookings.length > 0 ? (\n        filteredBookings.map((booking) => {\n          debugLog('MBA5677: Rendering booking', { \n            id: is_prototype ? booking.id : booking.booking_id,\n            date: is_prototype ? booking.date : booking.start_date,\n            time: is_prototype ? booking.time : booking.start_time,\n            client_name: is_prototype ? booking.owner : booking.client_name,\n            professional_name: is_prototype ? booking.professional : booking.professional_name,\n            status: is_prototype ? booking.status : booking.status\n          });\n          \n          const bookingId = is_prototype ? booking.id : booking.booking_id;\n          \n          // Set name based on user role\n          let name;\n          if (isProfessional) {\n            name = is_prototype ? booking.owner : (booking.client_name || booking.owner_name || 'Client');\n            debugLog('MBA5677: Using client name', name);\n          } else {\n            name = is_prototype ? booking.professional : (booking.professional_name || 'Professional');\n            debugLog('MBA5677: Using professional name', name);\n          }\n          \n          return (\n            <BookingCard\n              key={bookingId}\n              booking={{\n                id: bookingId,\n                client_name: isProfessional ? name : null,\n                professional_name: !isProfessional ? name : null,\n                serviceName: is_prototype ? booking.service : booking.service_type,\n                date: is_prototype ? booking.date : booking.start_date,\n                time: is_prototype ? booking.time : booking.start_time,\n                status: is_prototype ? booking.status : booking.status,\n                pets: is_prototype ? [{ name: booking.pet }] : booking.pets\n              }}\n              type={isProfessional ? \"professional\" : \"client\"}\n              onViewDetails={() => handleViewBookingDetails(bookingId)}\n            />\n          );\n        })\n      ) : (\n        <View style={styles.emptyStateContainer}>\n          <MaterialCommunityIcons name=\"calendar\" size={48} color={theme.colors.textSecondary} />\n          <Text style={styles.emptyStateTitle}>No {activeFilter} bookings</Text>\n          <Text style={styles.emptyStateText}>\n            {isProfessional \n              ? 'Create services to start receiving bookings from owners.'\n              : 'Find professional services to book your first appointment.'}\n          </Text>\n          <TouchableOpacity\n            style={styles.createServiceButton}\n            onPress={() => navigateToFrom(navigation, \n              isProfessional ? 'ServiceManager' : 'SearchProfessionals', \n              'Dashboard'\n            )}\n          >\n            <MaterialCommunityIcons \n              name={isProfessional ? \"plus\" : \"magnify\"} \n              size={20} \n              color={theme.colors.surface} \n            />\n            <Text style={styles.createServiceButtonText}>\n              {isProfessional ? 'Create Service' : 'Find Professionals'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderServiceCard = (service) => (\n    <View style={styles.serviceCard} key={service.id}>\n      <View style={styles.serviceContent}>\n        <View style={styles.serviceHeader}>\n          <Text \n            style={styles.serviceTitle}\n            numberOfLines={1}\n            ellipsizeMode=\"tail\"\n          >\n            {service.service_name}\n          </Text>\n          <Text style={styles.serviceRate}>${service.base_rate} {service.unit_of_time || 'Per Visit'}</Text>\n        </View>\n        <Text style={styles.serviceCategory}>{service.category || 'Exotic'}</Text>\n      </View>\n      <View style={styles.serviceFooter}>\n        {/* TODO: Implement this section after mvp */}\n        {/* <View style={styles.bookingsCount}>\n          <MaterialCommunityIcons name=\"calendar\" size={16} color={theme.colors.textSecondary} />\n          <Text style={styles.bookingsText}>{service.booking_count || 8} bookings</Text>\n        </View> */}\n        <TouchableOpacity \n          style={styles.viewButton}\n          onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard', { serviceId: service.id })}\n        >\n          <Text style={styles.viewButtonText}>View</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  const renderServices = () => {\n    if (!isProfessional) return null;\n\n    return (\n      <View style={styles.servicesContainer}>\n        <View style={styles.sectionHeader}>\n          <Text style={dynamicStyles.sectionTitle}>My Services</Text>\n          <TouchableOpacity\n            style={styles.viewAllButton}\n            onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard')}\n          >\n            <Text style={styles.viewAllText}>View All</Text>\n            <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.servicesGrid}>\n          {services.map(service => renderServiceCard(service))}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <ScrollView \n        style={[\n          styles.scrollView,\n          {\n            marginLeft: !isMobile && isSignedIn ? (isCollapsed ? 70 : 250) : 0,\n            marginTop: isMobile ? 60 : 0,\n          }\n        ]}\n        contentContainerStyle={[\n          styles.scrollViewContent,\n          {\n            maxWidth: 1200,\n            marginHorizontal: 'auto',\n            paddingTop: isMobile ? 24 : 0,\n          }\n        ]}\n      >\n        {renderHeader()}\n        {renderWelcomeSection()}\n        {renderOnboardingProgress()}\n        {renderBookingFilters()}\n        {renderBookings()}\n        {renderServices()}\n      </ScrollView>\n      \n      {/* Custom BookingApprovalModal with modified title */}\n      <BookingApprovalModal\n        visible={bookingModalVisible}\n        onClose={handleCloseBookingModal}\n        bookingId={selectedBookingId}\n        isProfessional={isProfessional}\n        modalTitle=\"Review Details\" // Custom title for dashboard view\n        hideButtons={true} // Hide action buttons when viewed from dashboard\n      />\n      \n      {isTutorialVisible && stepData?.screen === 'Dashboard' && (\n        <TutorialModal\n          step={currentStep}\n          totalSteps={totalSteps}\n          title={stepData.title}\n          description={stepData.description}\n          position={stepData.position}\n          onNext={() => handleNext(navigation)}\n          onPrevious={handlePrevious}\n          onSkip={handleSkip}\n          onClose={completeTutorial}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: '#f5f5f5',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n  },\n  scrollView: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  scrollViewContent: {\n    width: '100%',\n    paddingBottom: 40,\n  },\n  headerContainer: {\n    padding: 24,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight + 24 : 24,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  notificationButton: {\n    position: 'relative',\n    padding: 8,\n  },\n  notificationBadge: {\n    position: 'absolute',\n    top: 4,\n    right: 4,\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  notificationCount: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  profileButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  welcomeSection: {\n    padding: 24,\n    paddingTop: 0,\n  },\n  welcomeContent: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  welcomeCard: {\n    backgroundColor: 'transparent',\n    backgroundImage: 'linear-gradient(to right, #6B6C53, #86C5D9)',\n    borderRadius: 12,\n    padding: 24,\n    marginBottom: 24,\n  },\n  welcomeHeader: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  welcomeTextContainer: {\n    flex: 1,\n    minWidth: 280,\n  },\n  statsContainer: {\n    padding: 24,\n    paddingTop: 0,\n    backgroundColor: '#f5f5f5',\n  },\n  statsGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\n    gap: 24,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  statCard: {\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    ...Platform.select({\n      ios: {\n        activeOpacity: 0.7,\n      },\n      android: {\n        android_ripple: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n      },\n    }),\n  },\n  statHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  statIconContainer: {\n    width: 48,\n    height: 48,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  bookingsContainer: {\n    padding: 24,\n    paddingTop: 0,\n    backgroundColor: '#f5f5f5',\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  bookingItem: {\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  bookingContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  bookingInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  bookingDetails: {\n    marginLeft: 12,\n  },\n  bookingTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  bookingTime: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  bookingStatus: {\n    alignItems: 'flex-end',\n  },\n  statusText: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 8,\n  },\n  progressBar: {\n    width: 100,\n    height: 4,\n    backgroundColor: theme.colors.border,\n    borderRadius: 2,\n    overflow: 'hidden',\n  },\n  progress: {\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n  },\n  timeLeft: {\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n    marginTop: 4,\n  },\n  emptyStateContainer: {\n    padding: 40,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  emptyStateTitle: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.text,\n    fontWeight: '600',\n    marginTop: 16,\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  emptyStateText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 24,\n  },\n  createServiceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#6B6C53',\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    gap: 8,\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    borderRadius: 30,\n    // marginHorizontal: 24,\n  },\n  filterButtons: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(238, 241, 245)', //rgb(227, 229, 232)\n    padding: 4,\n    borderRadius: 5,\n    // gap: 4,\n  },\n  filterButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  activeFilterButton: {\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  filterText: {\n    color: '#6B7280',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  activeFilterText: {\n    color: '#111827',\n    fontWeight: '600',\n  },\n  viewAllButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    paddingRight: 12,\n  },\n  viewAllText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  servicesContainer: {\n    padding: 24,\n    paddingTop: 0,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  servicesGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: 16,\n  },\n  serviceCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 3,\n    elevation: 2,\n    justifyContent: 'space-between',\n  },\n  serviceContent: {\n    marginBottom: 20,\n  },\n  serviceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 4,\n  },\n  serviceTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    maxWidth: '50%',\n  },\n  serviceCategory: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  bookingsCount: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  bookingsText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceRate: {\n    fontSize: 16,\n    color: '#6B6C53',\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  viewButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 1,\n  },\n  viewButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default Dashboard;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TextInput, StyleSheet, ScrollView, SafeAreaView, Platform, StatusBar, TouchableOpacity, ActivityIndicator, Alert, Image, useWindowDimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport * as ImagePicker from 'expo-image-picker';\nimport { AuthContext } from '../context/AuthContext';\nimport { navigateToFrom, handleBack } from '../components/Navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// TODO: mention to user initially we are doing a manual verification process, will implement automation later.\nconst BecomeProfessional = ({ navigation }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [selectedPets, setSelectedPets] = useState({\n    dog: false,\n    cat: false,\n    exotics: false,\n  });\n  const [about, setAbout] = useState('');\n  const [certifications, setCertifications] = useState([]);\n  const [insuranceProof, setInsuranceProof] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const initializeNavigation = async () => {\n      const currentRoute = Platform.OS === 'web' ? sessionStorage.getItem('currentRoute') : await AsyncStorage.getItem('currentRoute');\n      if (currentRoute !== 'BecomeProfessional') {\n        await navigateToFrom(navigation, 'BecomeProfessional', currentRoute);\n      } else {\n        if (is_DEBUG) {\n          console.log('Error, currentRoute is BecomeProfessional');\n        }\n      }\n    };\n    initializeNavigation();\n  }, []);\n\n  const handleBackPress = () => {\n    handleBack(navigation);\n  };\n\n  const togglePetSelection = (pet) => {\n    setSelectedPets({ ...selectedPets, [pet]: !selectedPets[pet] });\n  };\n\n  const pickCertification = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      const newCertification = {\n        uri: result.assets[0].uri,\n        base64: result.assets[0].base64,\n        name: result.assets[0].uri.split('/').pop()\n      };\n      setCertifications([...certifications, newCertification]);\n    }\n  };\n\n  const pickInsuranceProof = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      const newProof = {\n        uri: result.assets[0].uri,\n        base64: result.assets[0].base64,\n        name: result.assets[0].uri.split('/').pop()\n      };\n      setInsuranceProof([...insuranceProof, newProof]);\n    }\n  };\n\n  const removeCertification = (index) => {\n    setCertifications(certifications.filter((_, i) => i !== index));\n  };\n\n  const removeInsuranceProof = (index) => {\n    setInsuranceProof(insuranceProof.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n\n    \n      // Original submission logic for non-prototype mode\n      setTimeout(() => {\n        setIsSubmitting(false);\n        setSelectedPets({\n          dog: false,\n          cat: false,\n          exotics: false,\n        });\n        setAbout('');\n        setCertifications([]);\n        setInsuranceProof([]);\n        if (Platform.OS === 'web') {\n          window.confirm('Success: Your application has been submitted successfully!') && navigation.navigate('More');\n        } else {\n          Alert.alert('Success', 'Your application has been submitted successfully!', [\n            { text: 'OK', onPress: () => navigation.navigate('More', { screen: 'More', transition: 'slide' }) },\n          ]);\n        }\n      }, 2000);\n  };\n\n  const createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100vh',\n      overflow: 'hidden',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n      transition: 'margin-left 0.3s ease',\n    },\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    },\n    scrollContent: {\n      flexGrow: 1,\n      padding: screenWidth <= 900 ? 16 : 20,\n      width: screenWidth > 900 ? '60%' : '90%',\n      maxWidth: 800,\n      alignSelf: 'center',\n    },\n    header: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: 16,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.border,\n      display: screenWidth <= 900 ? 'flex' : 'none',\n    },\n    backButton: {\n      marginRight: 16,\n    },\n    headerText: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: theme.colors.primary,\n    },\n    title: {\n      fontSize: screenWidth <= 900 ? 24 : 32,\n      color: theme.colors.text,\n      textAlign: 'center',\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    label: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      marginBottom: screenWidth <= 900 ? 8 : 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    checkboxContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: screenWidth <= 900 ? 'space-between' : 'flex-start',\n      gap: screenWidth <= 900 ? 8 : 16,\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n    },\n    petButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: screenWidth <= 900 ? 8 : 12,\n      borderWidth: 1,\n      borderColor: theme.colors.primary,\n      borderRadius: 8,\n      backgroundColor: theme.colors.surface,\n      minWidth: screenWidth <= 900 ? '45%' : 150,\n    },\n    selectedPetButton: {\n      backgroundColor: theme.colors.primary,\n    },\n    petButtonText: {\n      marginLeft: 8,\n      color: theme.colors.primary,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedPetButtonText: {\n      color: theme.colors.surface,\n    },\n    textInput: {\n      borderColor: theme.colors.border,\n      borderWidth: 1,\n      borderRadius: 8,\n      padding: screenWidth <= 900 ? 12 : 16,\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n      backgroundColor: theme.colors.inputBackground,\n      minHeight: 120,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    uploadButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: screenWidth <= 900 ? 12 : 16,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      borderStyle: 'dashed',\n      marginBottom: screenWidth <= 900 ? 12 : 16,\n    },\n    uploadText: {\n      marginLeft: 8,\n      color: theme.colors.text,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    uploadedFileContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.colors.surfaceVariant,\n      padding: screenWidth <= 900 ? 8 : 12,\n      borderRadius: 8,\n      marginBottom: 8,\n    },\n    uploadedFilePreview: {\n      width: 40,\n      height: 40,\n      borderRadius: 4,\n      marginRight: 8,\n    },\n    certificationText: {\n      flex: 1,\n      fontSize: theme.fontSizes.small,\n      color: theme.colors.text,\n      marginRight: 8,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    removeFileButton: {\n      padding: 4,\n    },\n    submitButton: {\n      backgroundColor: theme.colors.primary,\n      padding: screenWidth <= 900 ? 12 : 16,\n      borderRadius: 8,\n      alignItems: 'center',\n      marginTop: screenWidth <= 900 ? 20 : 32,\n    },\n    submitButtonDisabled: {\n      opacity: 0.6,\n    },\n    submitButtonText: {\n      color: theme.colors.surface,\n      fontSize: theme.fontSizes.medium,\n      fontWeight: 'bold',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    loadingIndicator: {\n      marginTop: 16,\n    },\n    formContainer: {\n      width: '100%',\n    },\n  });\n\n  return (\n    <View style={createStyles(screenWidth, isCollapsed).mainContainer}>\n      <SafeAreaView style={createStyles(screenWidth, isCollapsed).container}>\n        {isMobile && (\n          <View style={createStyles(screenWidth, isCollapsed).header}>\n            <TouchableOpacity onPress={handleBackPress} style={createStyles(screenWidth, isCollapsed).backButton}>\n              <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n            </TouchableOpacity>\n            <Text style={createStyles(screenWidth, isCollapsed).headerText}>Become a Professional</Text>\n          </View>\n        )}\n        \n        <ScrollView contentContainerStyle={createStyles(screenWidth, isCollapsed).scrollContent}>\n          <View style={createStyles(screenWidth, isCollapsed).formContainer}>\n            <Text style={createStyles(screenWidth, isCollapsed).title}>Become a Professional</Text>\n            \n            <Text style={createStyles(screenWidth, isCollapsed).label}>Select Pets You Can Sit:</Text>\n            <View style={createStyles(screenWidth, isCollapsed).checkboxContainer}>\n              {['dog', 'cat', 'exotics'].map((pet) => (\n                <TouchableOpacity\n                  key={pet}\n                  style={[\n                    createStyles(screenWidth, isCollapsed).petButton,\n                    selectedPets[pet] && createStyles(screenWidth, isCollapsed).selectedPetButton,\n                  ]}\n                  onPress={() => togglePetSelection(pet)}\n                >\n                  <MaterialCommunityIcons\n                    name={pet === 'exotics' ? 'turtle' : pet}\n                    size={24}\n                    color={selectedPets[pet] ? theme.colors.surface : theme.colors.primary}\n                  />\n                  <Text style={[\n                    createStyles(screenWidth, isCollapsed).petButtonText,\n                    selectedPets[pet] && createStyles(screenWidth, isCollapsed).selectedPetButtonText\n                  ]}>\n                    {pet.charAt(0).toUpperCase() + pet.slice(1)}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>About You:</Text>\n            <TextInput\n              style={createStyles(screenWidth, isCollapsed).textInput}\n              multiline\n              numberOfLines={4}\n              placeholder=\"Write a little about yourself...\"\n              value={about}\n              onChangeText={setAbout}\n            />\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>Upload Certifications/Resume:</Text>\n            <TouchableOpacity style={createStyles(screenWidth, isCollapsed).uploadButton} onPress={pickCertification}>\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.text} />\n              <Text style={createStyles(screenWidth, isCollapsed).uploadText}>Upload Documents</Text>\n            </TouchableOpacity>\n            {certifications.map((cert, index) => (\n              <View key={index} style={createStyles(screenWidth, isCollapsed).uploadedFileContainer}>\n                <Image source={{ uri: cert.uri }} style={createStyles(screenWidth, isCollapsed).uploadedFilePreview} />\n                <Text style={createStyles(screenWidth, isCollapsed).certificationText} numberOfLines={1}>\n                  {cert.name}\n                </Text>\n                <TouchableOpacity \n                  style={createStyles(screenWidth, isCollapsed).removeFileButton}\n                  onPress={() => removeCertification(index)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            ))}\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>Upload Insurance Proof:</Text>\n            <TouchableOpacity style={createStyles(screenWidth, isCollapsed).uploadButton} onPress={pickInsuranceProof}>\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.text} />\n              <Text style={createStyles(screenWidth, isCollapsed).uploadText}>Upload Insurance</Text>\n            </TouchableOpacity>\n            {insuranceProof.map((proof, index) => (\n              <View key={index} style={createStyles(screenWidth, isCollapsed).uploadedFileContainer}>\n                <Image source={{ uri: proof.uri }} style={createStyles(screenWidth, isCollapsed).uploadedFilePreview} />\n                <Text style={createStyles(screenWidth, isCollapsed).certificationText} numberOfLines={1}>\n                  {proof.name}\n                </Text>\n                <TouchableOpacity \n                  style={createStyles(screenWidth, isCollapsed).removeFileButton}\n                  onPress={() => removeInsuranceProof(index)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            ))}\n\n            <TouchableOpacity \n              style={[\n                createStyles(screenWidth, isCollapsed).submitButton,\n                isSubmitting && createStyles(screenWidth, isCollapsed).submitButtonDisabled\n              ]} \n              onPress={handleSubmit} \n              disabled={isSubmitting}\n            >\n              <Text style={createStyles(screenWidth, isCollapsed).submitButtonText}>\n                {isSubmitting ? 'Submitting...' : 'Submit Application'}\n              </Text>\n            </TouchableOpacity>\n            \n            {isSubmitting && (\n              <ActivityIndicator \n                style={createStyles(screenWidth, isCollapsed).loadingIndicator} \n                size=\"small\" \n                color={theme.colors.primary} \n              />\n            )}\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default BecomeProfessional;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { View, StyleSheet, Alert, Platform, SafeAreaView, StatusBar } from 'react-native';\nimport { List, Divider, Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst MoreScreen = ({ navigation }) => {\n  const { isSignedIn, isApprovedProfessional, userRole, switchRole, signOut, screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const initializeRoutes = async () => {\n      try {\n        const initialRoute = isSignedIn \n          ? 'Dashboard'\n          : 'Home';\n\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('currentRoute', initialRoute);\n          sessionStorage.setItem('previousRoute', 'More');\n        } else {\n          await AsyncStorage.setItem('currentRoute', initialRoute);\n          await AsyncStorage.setItem('previousRoute', 'More');\n        }\n      } catch (error) {\n        console.error('Error initializing routes:', error);\n      }\n    };\n\n    initializeRoutes();\n  }, [isSignedIn, userRole]);\n\n  const handleNavigation = async (route, tab) => {\n    try {\n      await navigateToFrom(navigation, route, 'More', tab);\n    } catch (error) {\n      console.error('Error handling navigation:', error);\n      navigation.navigate(route);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await signOut();\n      // Clear navigation history on logout\n      if (Platform.OS === 'web') {\n        sessionStorage.removeItem('currentRoute');\n        sessionStorage.removeItem('previousRoute');\n      } else {\n        await AsyncStorage.multiRemove(['currentRoute', 'previousRoute']);\n      }\n      Alert.alert('Logged Out', 'You have been successfully logged out.');\n      navigation.navigate('Home');\n    } catch (error) {\n      console.error('Logout failed', error);\n      Alert.alert('Logout Failed', 'An error occurred while logging out.');\n    }\n  };\n\n  const handleSwitchRole = async () => {\n    if (isApprovedProfessional) {\n      const newRole = userRole === 'professional' ? 'petOwner' : 'professional';\n      \n      await switchRole();\n      \n      // Store new route before navigating\n      const newRoute = 'Dashboard';\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('currentRoute', newRoute);\n      } else {\n        await AsyncStorage.setItem('currentRoute', newRoute);\n      }\n      \n      // Add a small delay to ensure state is updated before navigation\n      setTimeout(() => {\n        navigation.navigate(newRoute);\n      }, 0);\n    } else {\n      Alert.alert('Not Approved', 'You are not approved as a professional yet.');\n      handleNavigation('BecomeProfessional', 'Overview');\n    }\n  };\n\n  const menuItems = {\n    notSignedIn: [\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n    ],\n    petOwner: [\n      { title: 'Profile', icon: 'account', route: 'MyProfile' },\n      { title: 'My Bookings', icon: 'calendar-clock', route: 'MyBookings' },\n      { title: 'Payment Methods', icon: 'credit-card', route: 'PaymentMethods' },\n      { title: 'Become a Professional', icon: 'account-tie', route: 'BecomeProfessional' },\n      { title: 'Settings', icon: 'cog', route: 'Settings' },\n      { title: 'My Pets', icon: 'paw', route: 'MyPets' },\n      { title: 'Blog', icon: 'post', route: 'Blog' },\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n      { title: 'Contact Us', icon: 'email', route: 'ContactUs' },\n    ],\n    professional: [\n      { title: 'Profile', icon: 'account', route: 'MyProfile' },\n      { title: 'My Services', icon: 'briefcase-outline', route: 'ServiceManager' },\n      { title: 'My Bookings', icon: 'calendar-clock', route: 'MyBookings' },\n      { title: 'My Pets', icon: 'paw', route: 'MyPets' },\n      { title: 'Payment Methods', icon: 'credit-card', route: 'PaymentMethods' },\n      { title: 'Settings', icon: 'cog', route: 'Settings' },\n      { title: 'Blog', icon: 'post', route: 'Blog' },\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n      { title: 'Contact Us', icon: 'email', route: 'ContactUs' },\n    ],\n  };\n\n  const renderMenuItems = () => {\n    let items;\n    if (!isSignedIn) {\n      items = menuItems.notSignedIn;\n    } else if (userRole === 'professional') {\n      items = menuItems.professional;\n    } else {\n      items = menuItems.petOwner;\n    }\n\n    return items.map((item, index) => (\n      <React.Fragment key={index}>\n        <List.Item\n          title={item.title}\n          titleStyle={styles.listItemTitle}\n          left={props => \n            Platform.OS === 'web' \n              ? <MaterialCommunityIcons \n                  name={item.icon} \n                  size={screenWidth <= 900 ? 20 : 24} \n                  color={theme.colors.primary} \n                />\n              : <List.Icon {...props} icon={item.icon} />\n          }\n          onPress={() => handleNavigation(item.route, item.tab || 'Overview')}\n          style={[\n            styles.webListItem,\n            { paddingHorizontal: screenWidth <= 900 ? 8 : 16 }\n          ]}\n        />\n        {index < items.length - 1 && <Divider />}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          <View style={styles.webContent}>\n            <List.Section style={styles.listSection}>\n              {renderMenuItems()}\n            </List.Section>\n            {isSignedIn && (\n              <View style={styles.buttonContainer}>\n                <Button \n                  mode=\"contained\" \n                  onPress={handleLogout} \n                  style={[styles.logoutButton]}\n                  labelStyle={styles.buttonText}\n                >\n                  Log Out\n                </Button>\n              </View>\n            )}\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  webContent: {\n    width: '100%',\n    maxWidth: screenWidth > 900 ? 800 : 600,\n    alignSelf: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n    paddingTop: screenWidth <= 900 ? 80 : 16,\n  },\n  listSection: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  webListItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingVertical: screenWidth <= 900 ? 8 : 12,\n  },\n  listItemTitle: {\n    fontSize: screenWidth <= 900 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  buttonContainer: {\n    marginBottom: 16,\n  },\n  switchRoleButton: {\n    borderColor: theme.colors.primary,\n  },\n  logoutButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  }\n});\n\nexport default MoreScreen;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\n\nconst UnavailableTimeSlot = ({ startTime, endTime, reason, onPress, onRemove }) => {\n  const [showAllServices, setShowAllServices] = useState(false);\n  \n  const isAllDay = startTime === '00:00' && endTime === '24:00';\n\n  const formatTime = (time) => {\n    if (isAllDay) {\n      return 'All Day';\n    }\n    \n    if (typeof time === 'string') {\n      try {\n        const date = parse(time, 'HH:mm', new Date());\n        return format(date, 'h:mm a');\n      } catch (error) {\n        console.warn(`Invalid time format: ${time}`);\n        return 'Invalid Time';\n      }\n    } else if (time instanceof Date) {\n      return format(time, 'h:mm a');\n    } else {\n      console.warn(`Invalid time format: ${time}`);\n      return 'Invalid Time';\n    }\n  };\n\n  const formatServicesDisplay = () => {\n    const services = reason?.replace('Unavailable for: ', '').split(', ') || [];\n    \n    if (services.length === 0) return 'No services specified';\n    if (services.length === 10) return 'All Services';\n    return `${services.length} ${services.length === 1 ? 'Service' : 'Services'}`;\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <TouchableOpacity \n          style={styles.removeButton} \n          onPress={onRemove}\n        >\n          <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n        </TouchableOpacity>\n        \n        <View style={styles.contentContainer}>\n          <Text style={styles.time}>\n            {isAllDay ? 'All Day' : `${formatTime(startTime)} - ${formatTime(endTime)}`}\n          </Text>\n          <View style={styles.serviceContainer}>\n            <Text style={styles.reason}>{formatServicesDisplay()}</Text>\n            {reason && (\n              <TouchableOpacity \n                onPress={() => setShowAllServices(true)}\n                style={styles.seeMoreButton}\n              >\n                <Text style={styles.seeMoreText}>See All</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </View>\n\n      <Modal\n        visible={showAllServices}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowAllServices(false)}\n      >\n        <TouchableOpacity \n          style={styles.modalOverlay}\n          activeOpacity={1}\n          onPress={() => setShowAllServices(false)}\n        >\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Unavailable Services</Text>\n              <TouchableOpacity onPress={() => setShowAllServices(false)}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            <Text style={styles.modalTime}>\n              {formatTime(startTime)} - {formatTime(endTime)}\n            </Text>\n            {reason?.replace('Unavailable for: ', '').split(', ').map((service, index) => (\n              <Text key={index} style={styles.serviceItem}>• {service}</Text>\n            ))}\n          </View>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.lightGrey,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  removeButton: {\n    padding: 5,\n    marginRight: 5,\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  time: {\n    fontSize: theme.fontSizes.small,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  serviceContainer: {\n    flex: 2,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  reason: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n    marginRight: 8,\n  },\n  seeMoreButton: {\n    padding: 4,\n    borderRadius: 4,\n    backgroundColor: theme.colors.primary,\n  },\n  seeMoreText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.small,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    width: '80%',\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  modalTime: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 12,\n  },\n  serviceItem: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    paddingVertical: 4,\n  },\n});\n\nexport default UnavailableTimeSlot;\n","// First, create a new BookingCard component\n// src/components/BookingCard.js\n\nimport React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { format, parse } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\n\nconst AvailabilityBookingCard = ({ booking, onPress, onEdit }) => {\n  const navigation = useNavigation();\n  const formatTime = (time) => {\n    try {\n      const date = parse(time, 'HH:mm', new Date());\n      return format(date, 'h:mm a');\n    } catch (error) {\n      console.warn(`Invalid time format: ${time}`);\n      return 'Invalid Time';\n    }\n  };\n\n  const handlePress = () => {\n    if (onPress) {\n      onPress(booking);\n    }\n  };\n\n  return (\n    <TouchableOpacity \n      style={styles.card} \n      onPress={handlePress}\n    >\n      <View style={styles.cardContent}>\n        <View style={styles.timeContainer}>\n          <MaterialCommunityIcons name=\"clock-outline\" size={20} color={theme.colors.primary} />\n          <Text style={styles.timeText}>\n            {formatTime(booking.startTime)} - {formatTime(booking.endTime)}\n          </Text>\n        </View>\n        <Text style={styles.ownerName}>Booked with {booking.owner_name}</Text>\n      </View>\n      <TouchableOpacity \n        style={styles.editButton} \n        onPress={handlePress}\n      >\n        <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n      </TouchableOpacity>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  cardContent: {\n    flex: 1,\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  timeText: {\n    marginLeft: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  ownerName: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  editButton: {\n    padding: 8,\n  },\n});\n\nexport default AvailabilityBookingCard;","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\n\nconst TimePicker = ({ \n  label, \n  value, \n  onChange, \n  fullWidth = false, \n  containerStyle,\n  error,\n  disabled = false \n}) => {\n  const [showPicker, setShowPicker] = React.useState(false);\n  const { screenWidth } = useContext(AuthContext);\n  const showClockIcon = screenWidth > 400;\n\n  const handleChange = (event, selectedDate) => {\n    setShowPicker(Platform.OS === 'ios');\n    if (selectedDate) {\n      onChange(selectedDate);\n    }\n  };\n\n  const showTimepicker = () => {\n    setShowPicker(true);\n  };\n\n  if (Platform.OS === 'web') {\n    // Add browser detection for Chrome\n    const isChrome = typeof navigator !== 'undefined' && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n    return (\n      <View style={[styles.container, fullWidth && styles.fullWidth, containerStyle]}>\n        {label && <Text style={[styles.label, error && styles.errorText]}>{label}</Text>}\n        <View style={[\n          styles.webInputContainer,\n          !fullWidth && styles.compactTimeButton,\n          error && styles.errorBorder,\n          disabled && styles.disabled\n        ]}>\n          <style>\n            {`\n              input[type=\"time\"]::-webkit-calendar-picker-indicator {\n                display: ${showClockIcon && isChrome ? 'block' : 'none'};\n              }\n              input[type=\"time\"]::-webkit-inner-spin-button,\n              input[type=\"time\"]::-webkit-clear-button {\n                display: none;\n              }\n            `}\n          </style>\n          <input\n            type=\"time\"\n            value={value.toTimeString().slice(0, 5)}\n            onChange={(e) => onChange(new Date(`2000-01-01T${e.target.value}`))}\n            style={{\n              ...styles.webInput,\n              paddingRight: '12px',\n            }}\n            disabled={disabled}\n          />\n          {showClockIcon && !isChrome && (\n            <MaterialCommunityIcons \n              name=\"clock-outline\" \n              size={24} \n              color={disabled ? theme.colors.placeholder : theme.colors.text}\n              style={styles.webIcon}\n              onPress={disabled ? null : () => {\n                const input = document.querySelector('input[type=\"time\"]');\n                if (input) input.showPicker();\n              }}\n            />\n          )}\n        </View>\n        {error && <Text style={styles.errorMessage}>{error}</Text>}\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, fullWidth && styles.fullWidth, containerStyle]}>\n      {label && <Text style={[styles.label, error && styles.errorText]}>{label}</Text>}\n      <TouchableOpacity \n        onPress={showTimepicker}\n        style={[\n          styles.timeButton, \n          !fullWidth && styles.compactTimeButton,\n          error && styles.errorBorder,\n          disabled && styles.disabled\n        ]}\n        disabled={disabled}\n      >\n        <Text style={[styles.timeText, disabled && styles.disabledText]}>\n          {value.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n        </Text>\n        {showClockIcon && (\n          <MaterialCommunityIcons \n            name=\"clock-outline\" \n            size={24} \n            color={disabled ? theme.colors.placeholder : theme.colors.text} \n          />\n        )}\n      </TouchableOpacity>\n      {error && <Text style={styles.errorMessage}>{error}</Text>}\n      {showPicker && (\n        <DateTimePicker\n          value={value}\n          mode=\"time\"\n          is24Hour={true}\n          display=\"default\"\n          onChange={handleChange}\n          disabled={disabled}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // marginVertical: 8,\n    // marginBottom: 8,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  label: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n    fontWeight: '500',\n  },\n  timeButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 8,\n    backgroundColor: theme.colors.background,\n    minHeight: 20,\n  },\n  compactTimeButton: {\n    width: 150,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  webInputContainer: {\n    position: 'relative',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    backgroundColor: theme.colors.background,\n    overflow: 'hidden',\n    height: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  webInput: {\n    padding: '8px 36px 8px 12px',\n    fontSize: theme.fontSizes.medium,\n    marginLeft: 12,\n    width: '90%',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: 'transparent',\n    color: theme.colors.text,\n  },\n  webIcon: {\n    position: 'absolute',\n    right: 12,\n    cursor: 'pointer',\n    pointerEvents: 'auto',\n  },\n  errorBorder: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  disabled: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  disabledText: {\n    color: theme.colors.placeholder,\n  },\n});\n\nexport default TimePicker;\n\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, Switch, Platform, Dimensions, ScrollView } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\nimport UnavailableTimeSlot from './UnavailableTimeSlot';\nimport { format, parse } from 'date-fns';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SERVICE_TYPES, ALL_SERVICES } from '../data/mockData';\nimport AvailabilityBookingCard from './AvailabilityBookingCard';\nimport { useNavigation } from '@react-navigation/native';\nimport TimePicker from './TimePicker';\n\nconst { width, height: SCREEN_HEIGHT } = Dimensions.get('window');\nconst modalWidth = Platform.OS === 'web' ? width * 0.4 : width * 0.9;\n\nconst AddAvailabilityModal = ({ isVisible: propIsVisible, onClose, onSave, selectedDates, currentAvailability, bookings, onRemoveTimeSlot }) => {\n  const [isVisible, setIsVisible] = useState(propIsVisible);\n  const [isAllDay, setIsAllDay] = useState(false);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [showStartTimePicker, setShowStartTimePicker] = useState(false);\n  const [showEndTimePicker, setShowEndTimePicker] = useState(false);\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [modalWidth, setModalWidth] = useState(getModalWidth());\n  const [activeView, setActiveView] = useState('bookings');\n  const [editingBooking, setEditingBooking] = useState(null);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    setIsVisible(propIsVisible);\n  }, [propIsVisible]);\n\n  function getModalWidth() {\n    const { width } = Dimensions.get('window');\n    return width < 600 ? width * 0.9 : width * 0.4;\n  }\n\n  useEffect(() => {\n    const updateWidth = () => {\n      setModalWidth(getModalWidth());\n    };\n\n    const dimensionsHandler = Dimensions.addEventListener('change', updateWidth);\n\n    return () => {\n      dimensionsHandler.remove();\n    };\n  }, []);\n\n  const isTimeSlotUnavailable = () => {\n    if (!startTime || !endTime || isAllDay) return false;\n    \n    return selectedDates.some(date => {\n      const existingTimes = currentAvailability[date]?.unavailableTimes || [];\n      return existingTimes.some(time => {\n        const [existingStartHour, existingStartMin] = time.startTime.split(':').map(Number);\n        const [existingEndHour, existingEndMin] = time.endTime.split(':').map(Number);\n        const newStartStr = format(startTime, 'HH:mm');\n        const newEndStr = format(endTime, 'HH:mm');\n        const [newStartHour, newStartMin] = newStartStr.split(':').map(Number);\n        const [newEndHour, newEndMin] = newEndStr.split(':').map(Number);\n        \n        return newStartHour === existingStartHour && \n               newStartMin === existingStartMin && \n               newEndHour === existingEndHour && \n               newEndMin === existingEndMin;\n      });\n    });\n  };\n\n  const handleMarkUnavailable = () => {\n    if (selectedServices.length === 0 || isTimeSlotUnavailable()) return;\n    \n    const services = selectedServices.includes(ALL_SERVICES) \n      ? SERVICE_TYPES.filter(service => service !== ALL_SERVICES) \n      : selectedServices;\n\n    onSave({\n      dates: selectedDates,\n      isAllDay,\n      startTime: isAllDay ? null : format(startTime, 'HH:mm'),\n      endTime: isAllDay ? null : format(endTime, 'HH:mm'),\n      isUnavailable: true,\n      serviceTypes: services,\n      reason: `Unavailable for: ${services.join(', ')}`,\n    });\n  };\n\n  const handleMarkAvailable = () => {\n    if (selectedServices.length === 0 || !isTimeSlotUnavailable()) return;\n\n    const newStartStr = format(startTime, 'HH:mm');\n    const newEndStr = format(endTime, 'HH:mm');\n\n    const updatedAvailability = {};\n    \n    selectedDates.forEach(selectedDate => {\n      if (currentAvailability[selectedDate]?.unavailableTimes) {\n        const currentTimes = currentAvailability[selectedDate].unavailableTimes;\n        const filteredTimes = currentTimes.filter(time => \n          time.startTime !== newStartStr || time.endTime !== newEndStr\n        );\n\n        updatedAvailability[selectedDate] = {\n          ...currentAvailability[selectedDate],\n          unavailableTimes: filteredTimes\n        };\n      }\n    });\n\n    onRemoveTimeSlot(selectedDates[0], { startTime: newStartStr, endTime: newEndStr }, updatedAvailability, selectedDates);\n  };\n\n  const handleRemoveTimeSlot = (date, timeSlot) => {\n    if (selectedDates.length === 1) {\n      onRemoveTimeSlot(date, timeSlot);\n      return;\n    }\n\n    const updatedAvailability = {};\n    \n    selectedDates.forEach(selectedDate => {\n      if (currentAvailability[selectedDate]?.unavailableTimes) {\n        const currentTimes = currentAvailability[selectedDate].unavailableTimes;\n        const filteredTimes = currentTimes.filter(time => \n          time.startTime !== timeSlot.startTime || time.endTime !== timeSlot.endTime\n        );\n\n        updatedAvailability[selectedDate] = {\n          ...currentAvailability[selectedDate],\n          unavailableTimes: filteredTimes\n        };\n      }\n    });\n\n    onRemoveTimeSlot(date, timeSlot, updatedAvailability, selectedDates);\n  };\n\n  const renderUnavailableTimes = () => {\n    if (selectedDates.length === 0) return null;\n\n    const date = selectedDates[0];\n    const unavailableTimes = currentAvailability[date]?.unavailableTimes || [];\n\n    if (unavailableTimes.length === 0) return null;\n\n    return (\n      <View style={styles.unavailableTimesContainer}>\n        <Text style={styles.sectionTitle}>Unavailable Times:</Text>\n        <ScrollView>\n          {unavailableTimes.map((time, index) => (\n            <UnavailableTimeSlot\n              key={index}\n              startTime={time.startTime}\n              endTime={time.endTime}\n              reason={time.reason}\n              onRemove={() => handleRemoveTimeSlot(date, time)}\n            />\n          ))}\n        </ScrollView>\n      </View>\n    );\n  };\n\nconst renderTimePicker = () => (\n  <>\n    <View style={styles.timePickerContainer}>\n      <Text>Start Time:</Text>\n      <TimePicker\n        value={startTime}\n        onChange={setStartTime}\n        showPicker={showStartTimePicker}\n        setShowPicker={setShowStartTimePicker}\n        fullWidth\n      />\n    </View>\n    <View style={styles.timePickerContainer}>\n      <Text>End Time:</Text>\n      <TimePicker\n        value={endTime}\n        onChange={setEndTime}\n        showPicker={showEndTimePicker}\n        setShowPicker={setShowEndTimePicker}\n        fullWidth\n      />\n    </View>\n  </>\n);\n\nconst formatSelectedDates = () => {\n  if (!selectedDates || selectedDates.length === 0) return '';\n  \n  const startDate = selectedDates[0];\n  const endDate = selectedDates[selectedDates.length - 1];\n  \n  if (startDate === endDate) {\n    return startDate;\n  }\n  \n  return `${startDate} - ${endDate}`;\n};\n\nconst handleEditBooking = async (booking) => {\n  setEditingBooking(booking);\n  // Implement your booking edit logic here\n  try {\n    const response = await updateBooking({\n      ...booking,\n      // Add your updated booking data\n    });\n    \n    if (response.success) {\n      // Update local state\n      // Implement your state update logic\n    }\n  } catch (error) {\n    console.error('Failed to update booking:', error);\n  }\n};\n\nconst renderToggleButtons = () => (\n  <View style={styles.toggleContainer}>\n    <TouchableOpacity\n      style={[\n        styles.toggleButton,\n        activeView === 'unavailable' && styles.activeToggle\n      ]}\n      onPress={() => setActiveView('unavailable')}\n    >\n      <Text style={[\n        styles.toggleText,\n        activeView === 'unavailable' && styles.activeToggleText\n      ]}>\n        Unavailable Times\n      </Text>\n    </TouchableOpacity>\n    <TouchableOpacity\n      style={[\n        styles.toggleButton,\n        activeView === 'bookings' && styles.activeToggle\n      ]}\n      onPress={() => setActiveView('bookings')}\n    >\n      <Text style={[\n        styles.toggleText,\n        activeView === 'bookings' && styles.activeToggleText\n      ]}>\n        Bookings\n      </Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst renderBookings = () => {\n  const dateBookings = selectedDates.reduce((acc, date) => {\n    if (bookings[date]) {\n      acc.push(...bookings[date].map(booking => ({\n        ...booking,\n        date\n      })));\n    }\n    return acc;\n  }, []);\n\n  if (dateBookings.length === 0) {\n    return (\n      <View style={styles.emptyState}>\n        <MaterialCommunityIcons \n          name=\"calendar-blank\" \n          size={48} \n          color={theme.colors.textSecondary} \n        />\n        <Text style={styles.emptyStateText}>No bookings for selected dates</Text>\n      </View>\n    );\n  }\n\n  const handleBookingPress = (booking) => {\n    onClose();\n    \n    // Navigate after a short delay\n    setTimeout(() => {\n      navigation.navigate('BookingDetails', { bookingId: booking.id });\n    }, 300);\n  };\n\n  return (\n    <View style={styles.bookingsContainer}>\n      <ScrollView \n        style={styles.bookingsList}\n        nestedScrollEnabled={true}\n      >\n        {dateBookings.map((booking, index) => (\n          <AvailabilityBookingCard\n            key={index}\n            booking={booking}\n            onPress={() => handleBookingPress(booking)}\n            onEdit={() => handleBookingPress(booking)}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\n  return (\n    <Modal\n      visible={isVisible}\n      animationType=\"slide\"\n      transparent={true}\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={[styles.modalContent, { width: modalWidth }]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>\n              {selectedDates.length > 1 ? 'Edit Multiple Days' : 'Edit Availability'}\n            </Text>\n            <TouchableOpacity \n              style={styles.closeButton} \n              onPress={onClose}\n            >\n              <MaterialCommunityIcons \n                name=\"close\" \n                size={24} \n                color={theme.colors.text} \n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.selectedDatesText}>\n            Selected Dates: {formatSelectedDates()}\n          </Text>\n\n          {renderToggleButtons()}\n          \n          <ScrollView \n            style={styles.contentScrollView}\n            nestedScrollEnabled={true}\n          >\n            {activeView === 'unavailable' ? (\n              <View style={styles.unavailableTimesWrapper}>\n                {renderUnavailableTimes()}\n              </View>\n            ) : (\n              <View style={styles.bookingsWrapper}>\n                {renderBookings()}\n              </View>\n            )}\n\n            <View style={styles.availabilityControls}>\n              <View style={styles.inputWrapper}>\n                <Text style={styles.inputLabel}>Service Type(s) *</Text>\n                <TouchableOpacity\n                  style={[\n                    styles.input,\n                    styles.customDropdown,\n                    selectedServices.length === 0 && styles.inputError\n                  ]}\n                  onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n                >\n                  <Text style={{\n                    color: selectedServices.length > 0 ? theme.colors.text : theme.colors.placeHolderText\n                  }}>\n                    {selectedServices.length > 0 \n                      ? selectedServices.includes(ALL_SERVICES)\n                        ? \"All Services\"\n                        : selectedServices.length > 1\n                          ? `${selectedServices.length} services selected`\n                          : selectedServices[0]\n                      : \"Select service type(s)\"\n                    }\n                  </Text>\n                  <MaterialCommunityIcons \n                    name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n                    size={24} \n                    color={theme.colors.primary} \n                  />\n                </TouchableOpacity>\n                \n                {showServiceDropdown && (\n                  <View style={styles.dropdownContainer}>\n                    <ScrollView style={styles.dropdownScroll}>\n                      {SERVICE_TYPES.map((service) => (\n                        <TouchableOpacity\n                          key={service}\n                          style={styles.dropdownItem}\n                          onPress={() => {\n                            if (service === ALL_SERVICES) {\n                              setSelectedServices(\n                                selectedServices.includes(ALL_SERVICES) \n                                  ? [] \n                                  : [ALL_SERVICES]\n                              );\n                            } else {\n                              setSelectedServices(prev => {\n                                // Remove \"All Services\" if it was selected\n                                const withoutAll = prev.filter(s => s !== ALL_SERVICES);\n                                \n                                if (prev.includes(service)) {\n                                  return withoutAll.filter(s => s !== service);\n                                } else {\n                                  return [...withoutAll, service];\n                                }\n                              });\n                            }\n                          }}\n                        >\n                          <View style={styles.dropdownItemContent}>\n                            <Text style={[\n                              styles.dropdownText,\n                              selectedServices.includes(service) && styles.selectedOption\n                            ]}>\n                              {service}\n                            </Text>\n                            {selectedServices.includes(service) && (\n                              <MaterialCommunityIcons \n                                name=\"check\" \n                                size={20} \n                                color={theme.colors.primary} \n                              />\n                            )}\n                          </View>\n                        </TouchableOpacity>\n                      ))}\n                    </ScrollView>\n                  </View>\n                )}\n              </View>\n\n              <View style={styles.switchContainer}>\n                <Text>All Day</Text>\n                <Switch value={isAllDay} onValueChange={setIsAllDay} />\n              </View>\n\n              {!isAllDay && renderTimePicker()}\n\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={[\n                    styles.availabilityButton,\n                    styles.availableButton,\n                    (selectedServices.length === 0 || !isTimeSlotUnavailable()) && styles.disabledButton\n                  ]}\n                  onPress={handleMarkAvailable}\n                  disabled={selectedServices.length === 0 || !isTimeSlotUnavailable()}\n                >\n                  <Text style={styles.availabilityButtonText}>\n                    Mark Available\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[\n                    styles.availabilityButton,\n                    styles.unavailableButton,\n                    (selectedServices.length === 0 || isTimeSlotUnavailable()) && styles.disabledButton\n                  ]}\n                  onPress={handleMarkUnavailable}\n                  disabled={selectedServices.length === 0 || isTimeSlotUnavailable()}\n                >\n                  <Text style={styles.availabilityButtonText}>\n                    Mark Unavailable\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </ScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    padding: 22,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 17,\n    maxHeight: SCREEN_HEIGHT * 0.7,\n    zIndex: 1,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 15,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    padding: 5,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n    zIndex: 1,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginTop: 20,\n    gap: 10,\n  },\n  availabilityButton: {\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.danger,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  availabilityButtonText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n  },\n  timePickerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n    zIndex: 1,\n  },\n  webTimePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  unavailableTimesContainer: {\n    marginTop: 20,\n    maxHeight: 200,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  inputWrapper: {\n    position: 'relative',\n    width: '100%',\n    marginBottom: 15,\n    zIndex: 2,\n  },\n  \n  inputLabel: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 5,\n    fontWeight: '500',\n  },\n  \n  input: {\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: theme.colors.inputBackground,\n  },\n  \n  customDropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 40,\n  },\n  \n  dropdownContainer: {\n    position: 'absolute',\n    top: '95%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    marginTop: 2,\n    maxHeight: 160,\n    zIndex: 1000,\n    elevation: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  \n  dropdownScroll: {\n    maxHeight: 160,\n  },\n  \n  dropdownItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    height: 40,\n  },\n  \n  dropdownText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.medium,\n  },\n  \n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  \n  inputError: {\n    borderColor: theme.colors.danger,\n  },\n  \n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingRight: 10,\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    padding: 4,\n  },\n  toggleButton: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    margin: 2,\n  },\n  activeToggle: {\n    backgroundColor: theme.colors.primary,\n  },\n  toggleText: {\n    textAlign: 'center',\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  activeToggleText: {\n    color: theme.colors.whiteText,\n    fontWeight: '500',\n  },\n  bookingsList: {\n    maxHeight: 300,\n  },\n  emptyState: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  emptyStateText: {\n    marginTop: 16,\n    color: theme.colors.textSecondary,\n    fontSize: theme.fontSizes.medium,\n    textAlign: 'center',\n  },\n  contentScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  availabilityControls: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    width: '100%',\n  },\n  bookingsContainer: {\n    maxHeight: 200,\n    marginBottom: 16,\n  },\n  unavailableTimesWrapper: {\n    maxHeight: 200,\n    marginBottom: 16,\n  },\n  bookingsWrapper: {\n    marginBottom: 16,\n  },\n  selectedDatesText: {\n    marginVertical: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n});\n\nexport default AddAvailabilityModal;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport { theme } from '../../styles/theme';\n\nconst DatetimePicker = ({ \n  format = [\n    [\"months\", \"days\", \"years\"],\n    [\"hours\", \"minutes\", \"am/pm\"]\n  ],\n  value,\n  onChange,\n  disabled = false,\n  isInModal = false,\n  error = false\n}) => {\n  const [selectedValues, setSelectedValues] = useState({\n    months: '',\n    days: '',\n    years: '',\n    hours: '',\n    minutes: '',\n    ampm: 'AM'\n  });\n\n  const handleSelectChange = (type, value) => {\n    if (disabled) return;\n    \n    const newValues = { ...selectedValues, [type]: value };\n    setSelectedValues(newValues);\n    \n    if (onChange) {\n      // Convert to date object and call onChange\n      const date = convertToDate(newValues);\n      onChange(date);\n    }\n  };\n\n  const convertToDate = (values) => {\n    const { months, days, years, hours, minutes, ampm } = values;\n    if (!months || !days || !years) return null;\n    \n    let hour = parseInt(hours || '12');\n    if (ampm === 'PM' && hour !== 12) hour += 12;\n    if (ampm === 'AM' && hour === 12) hour = 0;\n    \n    return new Date(\n      parseInt(years),\n      parseInt(months) - 1,\n      parseInt(days),\n      hour,\n      parseInt(minutes || '0')\n    );\n  };\n\n  const renderSelect = (type) => {\n    let options = [];\n    switch (type) {\n      case 'months':\n        options = Array.from({ length: 12 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: new Date(2000, i).toLocaleString('default', { month: 'long' })\n        }));\n        break;\n      case 'days':\n        options = Array.from({ length: 31 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: (i + 1).toString()\n        }));\n        break;\n      case 'years':\n        const currentYear = new Date().getFullYear();\n        options = Array.from({ length: 100 }, (_, i) => ({\n          value: (currentYear - 50 + i).toString(),\n          label: (currentYear - 50 + i).toString()\n        }));\n        break;\n      case 'hours':\n        options = Array.from({ length: 12 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: (i + 1).toString()\n        }));\n        break;\n      case 'minutes':\n        options = Array.from({ length: 60 }, (_, i) => ({\n          value: i.toString().padStart(2, '0'),\n          label: i.toString().padStart(2, '0')\n        }));\n        break;\n      case 'am/pm':\n        options = [\n          { value: 'AM', label: 'AM' },\n          { value: 'PM', label: 'PM' }\n        ];\n        break;\n    }\n\n    const handleChange = (e) => {\n      if (isInModal && Platform.OS === 'web') {\n        e.stopPropagation();\n      }\n      handleSelectChange(type === 'am/pm' ? 'ampm' : type, e.target.value);\n    };\n\n    const selectStyle = {\n      ...styles.select,\n      ...(error ? styles.errorSelect : {}),\n      ...(type === 'months' ? styles.monthSelect : {}),\n      ...(type === 'years' ? styles.yearSelect : {}),\n      ...(type === 'days' ? styles.daySelect : {})\n    };\n\n    return (\n      <select\n        value={selectedValues[type === 'am/pm' ? 'ampm' : type]}\n        onChange={handleChange}\n        style={selectStyle}\n        disabled={disabled}\n      >\n        <option value=\"\">{type.charAt(0).toUpperCase() + type.slice(1)}</option>\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      {format.map((row, rowIndex) => (\n        <View key={rowIndex} style={styles.row}>\n          {row.map((type, index) => (\n            <View key={type} style={styles.selectContainer}>\n              {renderSelect(type)}\n            </View>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    marginBottom: 8,\n    gap: 8,\n  },\n  selectContainer: {\n    flex: 1,\n  },\n  select: {\n    width: '100%',\n    padding: 8,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    appearance: 'none',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    paddingRight: 8,\n    cursor: 'pointer',\n  },\n  monthSelect: {\n    flex: 1.5,\n  },\n  daySelect: {\n    flex: 0.8,\n  },\n  yearSelect: {\n    flex: 1.2,\n  },\n  errorSelect: {\n    borderColor: theme.colors.danger,\n  }\n});\n\nexport { DatetimePicker }; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, Switch, ScrollView, Platform, Dimensions, Animated } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext } from '../context/AuthContext';\nimport { DatetimePicker } from './ui/datetime-picker';\n\nconst { width } = Dimensions.get('window');\nconst modalWidth = Platform.OS === 'web' ? width * 0.4 : width * 0.9;\n\nconst ALL_DAYS = \"All Days\";\nconst DAYS_OF_WEEK = [\n  ALL_DAYS,\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];\n\nconst DefaultSettingsModal = ({ isVisible, onClose, onSave, defaultSettings }) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [settings, setSettings] = useState(defaultSettings || {\n    Monday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Tuesday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Wednesday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Thursday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Friday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Saturday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Sunday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n  });\n\n  const [showTimePicker, setShowTimePicker] = useState({ visible: false, type: '', value: '' });\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [isCurrentlyUnavailable, setIsCurrentlyUnavailable] = useState(false);\n  const [showDayDropdown, setShowDayDropdown] = useState(false);\n  const [validationError, setValidationError] = useState(\"Please select day(s) first\");\n\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(600)).current;\n\n  const handleClose = () => {\n    // Animate out\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnim, {\n        toValue: 600,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(() => {\n      // Call onClose after animations complete\n      onClose();\n    });\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      // Fade in the background overlay\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n\n      // Slide up the modal content\n      Animated.spring(slideAnim, {\n        toValue: 0,\n        tension: 50,\n        friction: 8,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [isVisible]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const dropdownButton = document.getElementById('dropdown-button');\n      const dropdownContainer = document.getElementById('dropdown-container');\n      \n      // If click is not on the button and not inside the dropdown, close it\n      if (showDayDropdown && \n          dropdownContainer && \n          !dropdownContainer.contains(event.target) &&\n          !dropdownButton.contains(event.target)) {\n        setShowDayDropdown(false);\n      }\n    };\n\n    if (Platform.OS === 'web') {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [showDayDropdown]);\n\n  const handleSave = () => {\n    onSave({\n      ...settings,\n      [selectedDays[0]]: {\n        ...settings[selectedDays[0]],\n        isUnavailable: !isCurrentlyUnavailable\n      }\n    });\n  };\n\n  const updateDaySettings = (day, newSettings) => {\n    setSettings(prevSettings => ({\n      ...prevSettings,\n      [day]: { ...prevSettings[day], ...newSettings }\n    }));\n  };\n\n  const handleDaySelection = (day) => {\n    setSelectedDays(current => {\n      if (day === ALL_DAYS) {\n        return current.includes(ALL_DAYS) \n          ? [] \n          : DAYS_OF_WEEK.filter(d => d !== ALL_DAYS);\n      }\n      \n      const withoutAll = current.filter(d => d !== ALL_DAYS);\n      if (withoutAll.includes(day)) {\n        return withoutAll.filter(d => d !== day);\n      } else {\n        if (withoutAll.length + 1 === DAYS_OF_WEEK.length - 1) {\n          return DAYS_OF_WEEK.filter(d => d !== ALL_DAYS);\n        } else {\n          return [...withoutAll, day];\n        }\n      }\n    });\n  };\n\n  const handleAvailabilityChange = (makeAvailable) => {\n    console.log(\"Selected days:\", selectedDays);\n    if (selectedDays.length === 0) return;\n\n    const daysToUpdate = selectedDays.includes(ALL_DAYS) \n      ? DAYS_OF_WEEK.filter(day => day !== ALL_DAYS)\n      : selectedDays;\n    \n    console.log(\"Days to update:\", daysToUpdate);\n    console.log(\"Current settings:\", settings);\n    console.log(\"Making available:\", makeAvailable);\n\n    const newSettings = { ...settings };\n    daysToUpdate.forEach(day => {\n      console.log(`Updating ${day}`);\n      newSettings[day] = {\n        ...settings[day],\n        isUnavailable: !makeAvailable,\n        startTime: settings[selectedDays[0]].startTime,\n        endTime: settings[selectedDays[0]].endTime,\n        isAllDay: settings[selectedDays[0]].isAllDay,\n        endDate: settings[selectedDays[0]].endDate\n      };\n    });\n    \n    console.log(\"New settings:\", newSettings);\n    setSettings(newSettings);\n    onSave(newSettings);\n    setIsCurrentlyUnavailable(!makeAvailable);\n  };\n\n  // Update validation error whenever selected days changes\n  useEffect(() => {\n    if (selectedDays.length === 0) {\n      setValidationError(\"Please select day(s) first\");\n    } else {\n      setValidationError(\"\");\n    }\n  }, [selectedDays]);\n\n  const renderTimePicker = (type, value, onChange) => {\n      return (\n      <TimePicker\n        value={new Date(`2000-01-01T${value}`)}\n        onChange={(selectedTime) => {\n          const timeString = selectedTime.toTimeString().slice(0, 5);\n          onChange(timeString);\n        }}\n        fullWidth={false}\n        disabled={selectedDays.length === 0}\n        error={validationError}\n      />\n    );\n  };\n\n  const renderEndDatePicker = () => {\n    // Guard against no selected days\n    if (!selectedDays || selectedDays.length === 0) {\n      return (\n        <View style={styles.datePickerWrapper}>\n          <View \n            style={[styles.datePickerContainer]} \n            onClick={(e) => e.stopPropagation()}\n            onMouseDown={(e) => e.stopPropagation()}\n          >\n            <DatetimePicker\n              format={[[\"months\", \"days\", \"years\"]]}\n              disabled={true}\n              isInModal={true}\n              error={true}\n            />\n          </View>\n          <Text style={styles.validationErrorText}>{validationError}</Text>\n        </View>\n      );\n    }\n\n    const daySettings = settings[selectedDays[0]];\n    \n    return (\n      <View style={styles.datePickerWrapper}>\n        <View \n          style={styles.datePickerContainer}\n          onClick={(e) => e.stopPropagation()}\n          onMouseDown={(e) => e.stopPropagation()}\n        >\n          <DatetimePicker\n            format={[[\"months\", \"days\", \"years\"]]}\n            value={daySettings.endDate ? new Date(daySettings.endDate) : null}\n            onChange={(date) => updateDaySettings(selectedDays[0], { endDate: date.toISOString().split('T')[0] })}\n            disabled={false}\n            isInModal={true}\n            error={false}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  const renderDaySettings = () => {\n    const daySettings = settings[selectedDays[0]] || {\n      isAllDay: false,\n      startTime: '09:00',\n      endTime: '17:00',\n      endDate: null\n    };\n    \n    return (\n      <View style={styles.daySettingsContainer}>\n        <View style={styles.settingRow}>\n          <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>All Day:</Text>\n          <Switch\n            value={daySettings.isAllDay}\n            onValueChange={(value) => {\n              if (selectedDays.length === 0) return;\n              const newSettings = { ...settings };\n              selectedDays.forEach(day => {\n                newSettings[day] = {\n                  ...newSettings[day],\n                  isAllDay: value\n                };\n              });\n              setSettings(newSettings);\n            }}\n            disabled={selectedDays.length === 0}\n          />\n        </View>\n        {!daySettings.isAllDay && (\n          <>\n            <View style={styles.settingRow}>\n              <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>Start Time:</Text>\n              <View style={styles.timePickerContainer}>\n                {renderTimePicker(\n                  'startTime',\n                  daySettings.startTime,\n                  (newTime) => {\n                    if (selectedDays.length === 0) return;\n                    const newSettings = { ...settings };\n                    selectedDays.forEach(day => {\n                      newSettings[day] = {\n                        ...newSettings[day],\n                        startTime: newTime\n                      };\n                    });\n                    setSettings(newSettings);\n                  }\n                )}\n              </View>\n            </View>\n            <View style={styles.settingRow}>\n              <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>End Time:</Text>\n              <View style={styles.timePickerContainer}>\n                {renderTimePicker(\n                  'endTime',\n                  daySettings.endTime,\n                  (newTime) => {\n                    if (selectedDays.length === 0) return;\n                    const newSettings = { ...settings };\n                    selectedDays.forEach(day => {\n                      newSettings[day] = {\n                        ...newSettings[day],\n                        endTime: newTime\n                      };\n                    });\n                    setSettings(newSettings);\n                  }\n                )}\n              </View>\n            </View>\n          </>\n        )}\n        <View style={styles.settingRow}>\n          <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>End Date:</Text>\n          <View pointerEvents={selectedDays.length === 0 ? 'none' : 'auto'}>\n            {renderEndDatePicker()}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const checkCurrentAvailability = (days, settings) => {\n    if (!days || days.length === 0) return false;\n    \n    return days.some(day => settings[day]?.isUnavailable);\n  };\n\n  useEffect(() => {\n    if (selectedDays.length > 0) {\n      const isUnavailable = checkCurrentAvailability(selectedDays, settings);\n      setIsCurrentlyUnavailable(isUnavailable);\n    } else {\n      setIsCurrentlyUnavailable(false);\n    }\n  }, [selectedDays, settings]);\n\n  const renderDaySelector = () => (\n    <View style={styles.inputWrapper}>\n      <Text style={styles.inputLabel}>Day(s) *</Text>\n      <TouchableOpacity\n        id=\"dropdown-button\"\n        style={[\n          styles.input,\n          styles.customDropdown,\n          selectedDays.length === 0 && styles.inputError\n        ]}\n        onPress={() => setShowDayDropdown(!showDayDropdown)}\n      >\n        <Text style={{\n          color: selectedDays.length > 0 ? theme.colors.text : theme.colors.placeHolderText\n        }}>\n          {selectedDays.length === 0 \n            ? 'Select Days' \n            : selectedDays.includes(ALL_DAYS)\n              ? 'All Days'\n              : selectedDays.length > 2\n                ? `${selectedDays.length} Days Selected`\n                : selectedDays.join(', ')}\n        </Text>\n        <MaterialCommunityIcons \n          name={showDayDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={24} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n      \n      {showDayDropdown && (\n        <View \n          id=\"dropdown-container\"\n          style={styles.dropdownContainer}\n        >\n          <ScrollView style={styles.dropdownScroll}>\n            {DAYS_OF_WEEK.map((day) => (\n              <TouchableOpacity\n                key={day}\n                style={styles.dropdownItem}\n                onPress={() => handleDaySelection(day)}\n              >\n                <View style={styles.dropdownItemContent}>\n                  <Text style={[\n                    styles.dropdownText,\n                    selectedDays.includes(day) && styles.selectedOption\n                  ]}>\n                    {day}\n                  </Text>\n                  {selectedDays.includes(day) && (\n                    <MaterialCommunityIcons \n                      name=\"check\" \n                      size={20} \n                      color={theme.colors.primary} \n                    />\n                  )}\n                </View>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  return (\n    <Modal\n      visible={isVisible}\n      transparent={true}\n      onRequestClose={handleClose}\n    >\n      <Animated.View style={[\n        styles.modalContainer,\n        {\n          opacity: fadeAnim,\n        }\n      ]}>\n        <Animated.View style={[\n          styles.modalContent,\n          {\n            width: screenWidth < 600 ? '90%' : 600,\n            transform: [{ translateY: slideAnim }]\n          }\n        ]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Default Settings</Text>\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          {renderDaySelector()}\n          {renderDaySettings()}\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.availableButton]}\n              onPress={() => handleAvailabilityChange(true)}\n              disabled={selectedDays.length === 0}\n            >\n              <Text style={styles.buttonText}>Mark Available</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, styles.unavailableButton]}\n              onPress={() => handleAvailabilityChange(false)}\n              disabled={selectedDays.length === 0}\n            >\n              <Text style={styles.buttonText}>Mark Unavailable</Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    padding: 22,\n    borderRadius: 17,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  settingContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  dayContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 5,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 12,\n    marginTop: 20,\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    marginBottom: 15,\n  },\n  tab: {\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  selectedTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedTabText: {\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  daySettingsContainer: {\n    marginBottom: 15,\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    gap: 12,\n  },\n  webTimePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  webDatePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  inputWrapper: {\n    position: 'relative',\n    width: '100%',\n    marginBottom: 15,\n    zIndex: 2,\n  },\n  inputLabel: {\n    marginBottom: 5,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  customDropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    maxHeight: 200,\n    zIndex: 1000,\n  },\n  dropdownScroll: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputError: {\n    borderColor: theme.colors.danger,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  disabledText: {\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  enabledText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timePickerContainer: {\n    flex: 1,\n    maxWidth: 150,\n  },\n  datePickerContainer: {\n    flex: 1,\n    maxWidth: 200,\n  },\n  datePickerWrapper: {\n    width: '100%',\n  },\n  validationErrorText: {\n    color: theme.colors.danger,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default DefaultSettingsModal;\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Platform, Switch, Animated } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\nimport TimePicker from './TimePicker';\nimport { SERVICE_TYPES, ALL_SERVICES } from '../data/mockData';\nimport { AuthContext } from '../context/AuthContext';\n\nconst AvailabilityBottomSheet = ({ \n  selectedDates, \n  currentAvailability,\n  onClose,\n  onViewUnavailableTimes,\n  onSave,\n  onMinimize\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [isAllDay, setIsAllDay] = useState(false);\n  const [error, setError] = useState(null);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const animatedHeight = useRef(new Animated.Value(1)).current;\n  const animatedOpacity = useRef(new Animated.Value(1)).current;\n  const slideAnimation = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Start the entrance animation when the component mounts\n    Animated.spring(slideAnimation, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 8\n    }).start();\n  }, []);\n\n  const getAvailabilityStatus = () => {\n    if (!selectedDates || selectedDates.length === 0) return 'Unknown';\n\n    const date = selectedDates[0];\n    const dateAvailability = currentAvailability[date];\n\n    if (!dateAvailability) return 'Available';\n    if (!dateAvailability.isAvailable) return 'Unavailable';\n    if (dateAvailability.unavailableTimes?.length > 0) return 'Partially Available';\n    return 'Available';\n  };\n\n  const getStatusColor = () => {\n    const status = getAvailabilityStatus();\n    switch (status) {\n      case 'Available':\n        return theme.colors.success;\n      case 'Partially Available':\n        return theme.colors.warning;\n      case 'Unavailable':\n        return theme.colors.error;\n      default:\n        return theme.colors.text;\n    }\n  };\n\n  const formatDateRange = () => {\n    if (!selectedDates || selectedDates.length === 0) return '';\n    \n    if (selectedDates.length === 1) {\n      return format(parse(selectedDates[0], 'yyyy-MM-dd', new Date()), 'MMM dd, yyyy');\n    }\n\n    return `${format(parse(selectedDates[0], 'yyyy-MM-dd', new Date()), 'MMM dd')} - ${format(parse(selectedDates[selectedDates.length - 1], 'yyyy-MM-dd', new Date()), 'MMM dd, yyyy')}`;\n  };\n\n  const validateAndSave = (isAvailable) => {\n    if (selectedServices.length === 0) {\n      setError('Please select at least one service type');\n      return;\n    }\n    setError(null);\n    onSave({ \n      startTime: isAllDay ? '00:00' : format(startTime, 'HH:mm'),\n      endTime: isAllDay ? '24:00' : format(endTime, 'HH:mm'),\n      services: selectedServices,\n      isAvailable,\n      isAllDay\n    });\n  };\n\n  const toggleMinimized = () => {\n    const toValue = isMinimized ? 1 : 0;\n    \n    // Call onMinimize first to start the background fade\n    const newMinimizedState = !isMinimized;\n    onMinimize?.(newMinimizedState);\n    \n    // Then start our animations\n    Animated.parallel([\n      Animated.timing(animatedHeight, {\n        toValue,\n        duration: 300,\n        useNativeDriver: false\n      }),\n      Animated.timing(animatedOpacity, {\n        toValue,\n        duration: 300,\n        useNativeDriver: false\n      })\n    ]).start(() => {\n      setIsMinimized(newMinimizedState);\n    });\n  };\n\n  const handleClose = () => {\n    // Animate the slide down\n    Animated.timing(slideAnimation, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true\n    }).start(() => {\n      // Call the onClose prop after animation completes\n      onClose();\n    });\n  };\n\n  const maxHeight = isAllDay ? 364 : 445; // Adjust this value based on your content\n  const minHeight = 96;\n\n  const containerHeight = animatedHeight.interpolate({\n    inputRange: [0, 1],\n    outputRange: [minHeight, maxHeight]\n  });\n\n  const renderHandle = () => {\n    if (Platform.OS === 'web') {\n      return (\n        <TouchableOpacity \n          onPress={toggleMinimized}\n          style={styles.handleContainer}\n        >\n          <MaterialCommunityIcons \n            name={isMinimized ? \"chevron-up\" : \"chevron-down\"}\n            size={24}\n            color={theme.colors.text}\n          />\n        </TouchableOpacity>\n      );\n    }\n\n    return (\n      <TouchableOpacity \n        onPress={toggleMinimized}\n        style={styles.handleContainer}\n      >\n        <View style={styles.handle} />\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.overlay,\n      { pointerEvents: isMinimized ? 'box-none' : 'auto' } // Allow clicks through when minimized\n    ]}>\n      <Animated.View \n        style={[\n          styles.container,\n          { \n            height: containerHeight,\n            transform: [{\n              translateY: slideAnimation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [600, 0]\n              })\n            }]\n          }\n        ]}\n      >\n        {renderHandle()}\n        \n        <View style={[styles.header, isMinimized && styles.headerMinimized]}>\n          {!isMinimized && (\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          )}\n          <View style={styles.headerCenter}>\n            <Text style={styles.dateText}>{formatDateRange()}</Text>\n            <Text style={[styles.statusText, { color: getStatusColor() }]}>\n              {getAvailabilityStatus()}\n            </Text>\n          </View>\n          {!isMinimized && (\n            <Animated.View style={{ opacity: animatedOpacity }}>\n              <TouchableOpacity \n                style={styles.actionButton}\n                onPress={onViewUnavailableTimes}\n              >\n                <MaterialCommunityIcons \n                  name=\"clock-outline\" \n                  size={24} \n                  color={theme.colors.primary} \n                />\n                <Text style={styles.actionButtonText}>\n                  {'Unavailable\\nTimes'}\n                </Text>\n              </TouchableOpacity>\n            </Animated.View>\n          )}\n        </View>\n\n        <Animated.View \n          style={[\n            styles.content,\n            { opacity: animatedOpacity,\n             }\n          ]}\n        >\n          <View style={styles.serviceSection}>\n            <Text style={[styles.label, { textAlign: 'center' }]}>Change Availability for Services</Text>\n            <TouchableOpacity\n              style={[styles.serviceSelector, error && selectedServices.length <= 0 && styles.serviceSelectorError]}\n              onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n            >\n              <Text style={styles.serviceSelectorText}>\n                {selectedServices.length > 0 \n                  ? selectedServices.includes(ALL_SERVICES)\n                    ? \"All Services\"\n                    : selectedServices.length > 1\n                      ? `${selectedServices.length} services selected`\n                      : selectedServices[0]\n                  : \"Select one or more service types\"\n                }\n              </Text>\n              <MaterialCommunityIcons \n                name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            {error && selectedServices.length <= 0 && !showServiceDropdown && <Text style={styles.errorText}>{error}</Text>}\n\n            {showServiceDropdown && (\n              <View style={styles.dropdownContainer}>\n                <ScrollView style={styles.dropdownScroll}>\n                  {SERVICE_TYPES.map((service) => (\n                    <TouchableOpacity\n                      key={service}\n                      style={styles.dropdownItem}\n                      onPress={() => {\n                        if (service === ALL_SERVICES) {\n                          setSelectedServices(\n                            selectedServices.includes(ALL_SERVICES) \n                              ? [] \n                              : [ALL_SERVICES]\n                          );\n                        } else {\n                          setSelectedServices(prev => {\n                            const withoutAll = prev.filter(s => s !== ALL_SERVICES);\n                            if (prev.includes(service)) {\n                              return withoutAll.filter(s => s !== service);\n                            } else {\n                              return [...withoutAll, service];\n                            }\n                          });\n                        }\n                      }}\n                    >\n                      <View style={styles.dropdownItemContent}>\n                        <Text style={[\n                          styles.dropdownText,\n                          selectedServices.includes(service) && styles.selectedOption\n                        ]}>\n                          {service}\n                        </Text>\n                        {selectedServices.includes(service) && (\n                          <MaterialCommunityIcons \n                            name=\"check\" \n                            size={20} \n                            color={theme.colors.primary} \n                          />\n                        )}\n                      </View>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n              </View>\n            )}\n          </View>\n\n          <View style={styles.timeToggleContainer}>\n            <Text style={[styles.label, { marginBottom: 0 }]}>Time Selection</Text>\n            <View style={styles.customToggle}>\n              <TouchableOpacity \n                style={[\n                  styles.toggleButton,\n                  isAllDay ? styles.toggleButtonActive : styles.toggleButtonInactive\n                ]}\n                onPress={() => setIsAllDay(true)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  isAllDay && styles.toggleButtonTextActive\n                ]}>All Day</Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[\n                  styles.toggleButton,\n                  !isAllDay ? styles.toggleButtonActive : styles.toggleButtonInactive\n                ]}\n                onPress={() => setIsAllDay(false)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  !isAllDay && styles.toggleButtonTextActive\n                ]}>Custom Hours</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          {!isAllDay && (\n            <View style={styles.timeSection}>\n              <View style={styles.timeContainer}>\n                <Text style={[styles.label, { marginBottom: 0 }]}>Start Time</Text>\n                <TimePicker\n                  value={startTime}\n                  onChange={setStartTime}\n                  fullWidth\n                />\n              </View>\n              <View style={styles.timeContainer}>\n                <Text style={[styles.label, { marginBottom: 0 }]}>End Time</Text>\n                <TimePicker\n                  value={endTime}\n                  onChange={setEndTime}\n                  fullWidth\n                />\n              </View>\n            </View>\n          )}\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.availableButton]}\n              onPress={() => validateAndSave(true)}\n            >\n              <Text style={styles.buttonText}>Mark Available</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, styles.unavailableButton]}\n              onPress={() => validateAndSave(false)}\n            >\n              <Text style={styles.buttonText}>Mark Unavailable</Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    width: '100%',\n    pointerEvents: 'box-none', // This allows clicks to pass through to elements behind\n  },\n  container: {\n    backgroundColor: theme.colors.surface,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n    paddingBottom: Platform.OS === 'ios' ? 40 : 16,\n    maxWidth: 600,\n    width: '100%',\n    alignSelf: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  handleContainer: {\n    width: '100%',\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 4,\n  },\n  handle: {\n    width: 40,\n    height: 4,\n    backgroundColor: theme.colors.border,\n    borderRadius: 2,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    paddingRight: 8,\n    marginTop: 4, // Add a small margin to separate from the chevron\n  },\n  headerMinimized: {\n    marginBottom: 8,\n    paddingBottom: 12, // Add padding at the bottom when minimized\n    justifyContent: 'space-between',\n  },\n  headerCenter: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  closeButton: {\n    width: 60,\n    height: 40,\n    // marginBottom: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  statusText: {\n    fontSize: theme.fontSizes.medium,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButton: {\n    width: 60,\n    alignItems: 'center',\n  },\n  actionButtonText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.primary,\n    marginTop: 4,\n    textAlign: 'center',\n    lineHeight: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  content: {\n    gap: 12,\n  },\n  timeToggleContainer: {\n    // marginBottom: 8,\n  },\n  customToggle: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 4,\n    // marginTop: 8,\n    gap: 8,\n  },\n  toggleButton: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  toggleButtonActive: {\n    backgroundColor: theme.colors.primary,\n    borderColor: theme.colors.primary,\n  },\n  toggleButtonInactive: {\n    backgroundColor: 'transparent',\n  },\n  toggleButtonText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  toggleButtonTextActive: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timeSection: {\n    flexDirection: 'row',\n    gap: 16,\n  },\n  timeContainer: {\n    flex: 1,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceSection: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  serviceSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.background,\n  },\n  serviceSelectorText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    maxHeight: 200,\n    zIndex: 1000,\n  },\n  dropdownScroll: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 12,\n    // marginTop: 12,\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceSelectorError: {\n    borderColor: theme.colors.error,\n    borderWidth: 1,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default AvailabilityBottomSheet; ","import React, { useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, ScrollView, Animated } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst UnavailableTimesModal = ({ \n  visible, \n  onClose, \n  selectedDates,\n  currentAvailability,\n  onRemoveTimeSlot,\n  bookings\n}) => {\n  const navigation = useNavigation();\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(600)).current;\n\n  useEffect(() => {\n    if (visible) {\n      // Fade in the background overlay\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n\n      // Slide up the modal content\n      Animated.spring(slideAnim, {\n        toValue: 0,\n        tension: 50,\n        friction: 8,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  const handleClose = () => {\n    // Animate out\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnim, {\n        toValue: 600,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(() => {\n      // Call onClose after animations complete\n      onClose();\n    });\n  };\n\n  const formatTime = (time) => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(parseInt(hours), parseInt(minutes));\n    return format(date, 'h:mm a');\n  };\n\n  const handleBookingPress = async (bookingId) => {\n    onClose(); // Close the modal first\n    await navigateToFrom(navigation, 'BookingDetails', 'AvailabilitySettings', { bookingId });\n  };\n\n  const getUnavailableTimes = () => {\n    if (!selectedDates || selectedDates.length === 0) return [];\n\n    const allTimes = [];\n    const processedTimes = new Set(); // Track processed time slots\n\n    selectedDates.forEach(date => {\n      const dateBookings = bookings[date] || [];\n      const dateAvailability = currentAvailability[date];\n\n      // Add bookings first\n      dateBookings.forEach(booking => {\n        const timeKey = `${date}-${booking.startTime}-${booking.endTime}`;\n        if (!processedTimes.has(timeKey)) {\n          allTimes.push({\n            date,\n            startTime: booking.startTime,\n            endTime: booking.endTime,\n            reason: `${booking.service_type}\\nBooked with ${booking.owner_name}`,\n            isBooking: true,\n            ownerId: booking.ownerId\n          });\n          processedTimes.add(timeKey);\n        }\n      });\n\n      // Add personal unavailable times, excluding any that overlap with bookings\n      if (dateAvailability?.unavailableTimes) {\n        dateAvailability.unavailableTimes\n          .filter(time => !time.ownerId) // Only include non-booking unavailable times\n          .forEach(time => {\n            const timeKey = `${date}-${time.startTime}-${time.endTime}`;\n            if (!processedTimes.has(timeKey)) {\n              allTimes.push({\n                date,\n                startTime: time.startTime,\n                endTime: time.endTime,\n                reason: time.reason,\n                isBooking: false\n              });\n              processedTimes.add(timeKey);\n            }\n          });\n      }\n    });\n\n    // Sort by date and then by start time\n    return allTimes.sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      return a.startTime.localeCompare(b.startTime);\n    });\n  };\n\n  const renderActionButton = (item) => {\n    if (item.isBooking) {\n      return (\n        <TouchableOpacity\n          style={styles.bookingButton}\n          onPress={() => handleBookingPress(item.ownerId)}\n        >\n          <MaterialCommunityIcons name=\"arrow-right\" size={24} color={theme.colors.primary} />\n        </TouchableOpacity>\n      );\n    }\n    \n    return (\n      <TouchableOpacity\n        style={styles.removeButton}\n        onPress={() => onRemoveTimeSlot(item.date, item)}\n      >\n        <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.error} />\n      </TouchableOpacity>\n    );\n  };\n\n  const renderTimeSlot = (item, index) => {\n    const formattedDate = format(parse(item.date, 'yyyy-MM-dd', new Date()), 'MMM d, yyyy');\n    const formattedStartTime = formatTime(item.startTime);\n    const formattedEndTime = formatTime(item.endTime);\n\n    return (\n      <View key={index} style={styles.timeSlotContainer}>\n        <View style={styles.dateHeader}>\n          <Text style={styles.dateText}>{formattedDate}</Text>\n        </View>\n        <View style={[\n          styles.timeSlotContent,\n          item.isBooking && styles.bookingContent\n        ]}>\n          <View style={styles.timeAndReason}>\n            <Text style={styles.timeText}>\n              {formattedStartTime} - {formattedEndTime}\n            </Text>\n            <Text style={styles.reasonText}>\n              {item.reason}\n            </Text>\n          </View>\n          {renderActionButton(item)}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      onRequestClose={handleClose}\n    >\n      <Animated.View style={[\n        styles.modalContainer,\n        {\n          opacity: fadeAnim,\n        }\n      ]}>\n        <Animated.View style={[\n          styles.modalContent,\n          {\n            transform: [{ translateY: slideAnim }]\n          }\n        ]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Unavailable Times</Text>\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          <ScrollView style={styles.timesList}>\n            {getUnavailableTimes().map((item, index) => renderTimeSlot(item, index))}\n            {getUnavailableTimes().length === 0 && (\n              <Text style={styles.emptyText}>No unavailable times for selected date(s)</Text>\n            )}\n          </ScrollView>\n        </Animated.View>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 5,\n  },\n  timesList: {\n    maxHeight: '90%',\n  },\n  timeSlotContainer: {\n    marginBottom: 15,\n  },\n  dateHeader: {\n    marginBottom: 8,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  timeSlotContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    backgroundColor: theme.colors.background,\n    padding: 12,\n    borderRadius: 8,\n  },\n  bookingContent: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  timeAndReason: {\n    flex: 1,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reasonText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  removeButton: {\n    padding: 5,\n    marginLeft: 10,\n  },\n  bookingButton: {\n    padding: 5,\n    marginLeft: 10,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    width: 34,\n    height: 34,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: theme.colors.textSecondary,\n    fontSize: theme.fontSizes.medium,\n    marginTop: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default UnavailableTimesModal; ","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView, Platform, StatusBar, Dimensions, ActivityIndicator, Animated } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport AddAvailabilityModal from '../components/AddAvailabilityModal';\nimport DefaultSettingsModal from '../components/DefaultSettingsModal';\nimport { format, parse } from 'date-fns';\nimport { SERVICE_TYPES, fetchAvailabilityData, ALL_SERVICES } from '../data/mockData';\nimport AvailabilityBottomSheet from '../components/AvailabilityBottomSheet';\nimport UnavailableTimesModal from '../components/UnavailableTimesModal';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\n\nconst daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconst AvailabilitySettings = () => {\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n  const [markedDates, setMarkedDates] = useState({});\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isSettingsModalVisible, setIsSettingsModalVisible] = useState(false);\n  const [defaultAvailability, setDefaultAvailability] = useState('available');\n  const [currentAvailability, setCurrentAvailability] = useState({});\n  const [bookings, setBookings] = useState({});\n  const [defaultSettings, setDefaultSettings] = useState({\n    Monday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Tuesday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Wednesday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Thursday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Friday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Saturday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Sunday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showBottomSheet, setShowBottomSheet] = useState(false);\n  const [showUnavailableTimesModal, setShowUnavailableTimesModal] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [isBottomSheetMinimized, setIsBottomSheetMinimized] = useState(false);\n  const navigation = useNavigation();\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const loadAvailabilityData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchAvailabilityData();\n        updateMarkedDates(data.availableDates, data.unavailableDates, data.bookings);\n        \n        const combinedAvailability = {};\n        Object.keys(data.availableDates).forEach(date => {\n          combinedAvailability[date] = { \n            isAvailable: true,\n            unavailableTimes: [] // Initialize empty array for partially unavailable times\n          };\n        });\n        Object.keys(data.unavailableDates).forEach(date => {\n          combinedAvailability[date] = { \n            isAvailable: false,\n            unavailableTimes: [{\n              startTime: data.unavailableDates[date].startTime,\n              endTime: data.unavailableDates[date].endTime,\n              reason: ' Personal Time'\n            }]\n          };\n        });\n        Object.keys(data.bookings).forEach(date => {\n          if (!combinedAvailability[date]) {\n            combinedAvailability[date] = { \n              isAvailable: true,\n              unavailableTimes: []\n            };\n          }\n          combinedAvailability[date].unavailableTimes = [\n            ...combinedAvailability[date].unavailableTimes,\n            ...data.bookings[date].map(booking => ({\n              startTime: booking.startTime,\n              endTime: booking.endTime,\n              reason: ` Booked with ${booking.owner_name}`,\n              ownerId: booking.ownerId // Assuming each booking has a ownerId\n            }))\n          ];\n        });\n        setCurrentAvailability(combinedAvailability);\n        setBookings(data.bookings);\n      } catch (err) {\n        setError('Failed to load availability data');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadAvailabilityData();\n  }, []);\n\n  const updateMarkedDates = (availableDates, unavailableDates, bookings) => {\n    const newMarkedDates = {};\n\n    // Helper function to check if all services are selected for a time slot\n    const hasAllServices = (reason) => {\n      if (!reason) return false;\n      const services = reason.replace('Unavailable for: ', '').split(', ');\n      return services.length === (SERVICE_TYPES.length - 1);\n    };\n\n    Object.entries(unavailableDates).forEach(([date, time]) => {\n      const isFullDay = time.startTime === '00:00' && time.endTime === '24:00';\n      const allServicesSelected = hasAllServices(time.reason);\n      \n      newMarkedDates[date] = {\n        customStyles: {\n          container: { \n            backgroundColor: isFullDay && allServicesSelected ? 'lightgrey' : theme.colors.calendarColor,\n            width: 35,\n            height: 35,\n            borderRadius: 17.5,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          text: { color: 'white' }\n        }\n      };\n    });\n\n    Object.entries(availableDates).forEach(([date, time]) => {\n      if (!newMarkedDates[date]) {\n        newMarkedDates[date] = {\n          customStyles: {\n            container: { \n              backgroundColor: 'white',\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'black' }\n          }\n        };\n      }\n    });\n\n    Object.entries(bookings).forEach(([date, bookingList]) => {\n      const isFullDay = bookingList.some(booking => \n        booking.startTime === '00:00' && booking.endTime === '24:00'\n      );\n      newMarkedDates[date] = { \n        marked: true,\n        dotColor: theme.colors.primary,\n        customStyles: {\n          container: { \n            backgroundColor: isFullDay ? theme.colors.primary : theme.colors.calendarColorYellowBrown,\n            width: 35,\n            height: 35,\n            borderRadius: 17.5,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          text: { color: 'white' }\n        }\n      };\n    });\n\n    setMarkedDates(newMarkedDates);\n  };\n\n  const toggleBottomSheet = (show) => {\n    if (show) {\n      setIsClosing(false);\n      setShowBottomSheet(true);\n      Animated.timing(fadeAnim, {\n        toValue: 0.5,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      setIsClosing(true);\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start(() => {\n        setShowBottomSheet(false);\n        setIsClosing(false);\n      });\n    }\n  };\n\n  const handleBottomSheetMinimize = (minimized) => {\n    setIsBottomSheetMinimized(minimized);\n    Animated.timing(fadeAnim, {\n      toValue: minimized ? 0 : 0.5,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const onDayPress = (day) => {\n    const { dateString } = day;\n    const selectedDate = new Date(dateString);\n    selectedDate.setDate(selectedDate.getDate() + 1); // Adjust for timezone offset\n    selectedDate.setHours(0, 0, 0, 0);\n  \n    if (selectedDates.length === 0) {\n      setSelectedDates([dateString]);\n      toggleBottomSheet(true);\n    } else if (selectedDates.length >= 1) {\n      const firstDate = new Date(selectedDates[0]);\n      firstDate.setDate(firstDate.getDate() + 1); // Adjust for timezone offset\n      firstDate.setHours(0, 0, 0, 0);    \n\n      if (selectedDate.getTime() === firstDate.getTime()) {\n        return;\n      }\n\n      if (selectedDate < firstDate) {\n        setSelectedDates([dateString]);\n        toggleBottomSheet(true);\n        return;\n      }\n\n      const range = [];\n      const currentDate = new Date(firstDate);\n      const endDate = new Date(selectedDate);\n\n      while (currentDate <= endDate) {\n        range.push(format(currentDate, 'yyyy-MM-dd'));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n    \n      setSelectedDates(range);\n    }\n  };\n\n  const handleAddAvailability = (availabilityData) => {\n    const newMarkedDates = { ...markedDates };\n    const newCurrentAvailability = { ...currentAvailability };\n\n    availabilityData.dates.forEach(date => {\n      const allServicesSelected = availabilityData.serviceTypes.includes(ALL_SERVICES) || \n                                 availabilityData.serviceTypes.length === SERVICE_TYPES.length - 1;\n\n      if (!availabilityData.isAvailable) {\n        newCurrentAvailability[date] = {\n          isAvailable: false,\n          unavailableTimes: [{\n            startTime: availabilityData.startTime,\n            endTime: availabilityData.endTime,\n            reason: availabilityData.reason\n          }]\n        };\n\n        newMarkedDates[date] = {\n          customStyles: {\n            container: {\n              backgroundColor: availabilityData.isAllDay && allServicesSelected ? 'lightgrey' : theme.colors.calendarColor,\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'white' }\n          }\n        };\n      } else {\n        newCurrentAvailability[date] = {\n          isAvailable: true,\n          unavailableTimes: []\n        };\n        newMarkedDates[date] = {\n          customStyles: {\n            container: { \n              backgroundColor: 'white',\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'black' }\n          }\n        };\n      }\n    });\n\n    setMarkedDates(newMarkedDates);\n    setCurrentAvailability(newCurrentAvailability);\n    setIsAddModalVisible(false);\n    setSelectedDates([]);\n  };\n\n  const applyDefaultSettingsToCalendar = (settings) => {\n    const newMarkedDates = { ...markedDates };\n    const newCurrentAvailability = { ...currentAvailability };\n    \n    const today = new Date();\n    const oneYearFromNow = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());\n\n    const daysMapping = {\n      'Sunday': 0,\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6\n    };\n\n    Object.entries(settings).forEach(([day, daySettings]) => {\n      let currentDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()));\n      const targetDayNumber = daysMapping[day];\n      \n      while (currentDate <= (daySettings.endDate ? new Date(daySettings.endDate) : oneYearFromNow)) {\n        const currentDayNumber = currentDate.getUTCDay();\n        const dateString = currentDate.toISOString().split('T')[0];\n        \n        if (currentDayNumber === targetDayNumber) {\n          if (daySettings.isUnavailable) {\n            if (daySettings.isAllDay) {\n              newMarkedDates[dateString] = {\n                customStyles: {\n                  container: { backgroundColor: 'lightgrey' },\n                  text: { color: 'white' }\n                }\n              };\n              newCurrentAvailability[dateString] = {\n                isAvailable: false,\n                unavailableTimes: [{ startTime: '00:00', endTime: '24:00', reason: 'Default Setting' }]\n              };\n            } else {\n              newMarkedDates[dateString] = {\n                customStyles: {\n                  container: { backgroundColor: theme.colors.calendarColor },\n                  text: { color: 'white' }\n                }\n              };\n              newCurrentAvailability[dateString] = {\n                isAvailable: true,\n                unavailableTimes: [{\n                  startTime: daySettings.startTime,\n                  endTime: daySettings.endTime,\n                  reason: 'Default Setting'\n                }]\n              };\n            }\n          } else {\n            // Reset to available\n            delete newMarkedDates[dateString];\n            delete newCurrentAvailability[dateString];\n          }\n        }\n        currentDate.setUTCDate(currentDate.getUTCDate() + 1);\n      }\n    });\n\n    setMarkedDates(newMarkedDates);\n    setCurrentAvailability(newCurrentAvailability);\n  };\n\n  //TODO: implement this in future for making owners on bookings clickable\n  // const handleOwnerPress = (ownerId) => {\n  //   // Navigate to the owner history page\n  //   // You'll need to implement this navigation logic\n  //   console.log(`Navigating to owner history for owner ID: ${ownerId}`);\n  // };\n\n  const IconComponent = Platform.OS === 'web' ? MaterialCommunityIcons : Icon;\n\n  const renderArrow = (direction) => {\n    let iconName;\n    if (Platform.OS === 'web') {\n      iconName = direction === 'left' ? 'chevron-left' : 'chevron-right';\n    } else {\n      iconName = direction === 'left' ? 'chevron-back' : 'chevron-forward';\n    }\n    return (\n      <IconComponent \n        name={iconName} \n        size={24} \n        color={theme.colors.primary}\n      />\n    );\n  };\n\n  const handleDefaultSettingsSave = (newSettings) => {\n    console.log(\"Before updating defaultSettings:\", defaultSettings);\n    console.log(\"New settings to be applied:\", newSettings);\n    setDefaultSettings(newSettings);\n    \n    // Add a setTimeout to check the state after update\n    setTimeout(() => {\n      console.log(\"After updating defaultSettings:\", defaultSettings);\n    }, 0);\n    \n    // Call applyDefaultSettingsToCalendar to update the calendar view\n    applyDefaultSettingsToCalendar(newSettings);\n    setIsSettingsModalVisible(false);\n  };\n\n  const handleSaveAvailability = (data) => {\n    const { startTime, endTime, services, isAvailable } = data;\n    const isAllDay = startTime === '00:00' && endTime === '24:00';\n    handleAddAvailability({\n      dates: selectedDates,\n      isAllDay,\n      startTime,\n      endTime,\n      isUnavailable: !isAvailable,\n      serviceTypes: services,\n      reason: `Unavailable for: ${services.join(', ')}`,\n    });\n    toggleBottomSheet(false);\n    setSelectedDates([]);\n  };\n\n  // TODO: make this actually remove the timeslot on the backend\n  const handleRemoveTimeSlot = (date, timeSlot, updatedAvailability, selectedDates) => {\n    if (updatedAvailability && selectedDates) {\n      // Handle multiple dates\n      setCurrentAvailability(prev => ({\n        ...prev,\n        ...updatedAvailability\n      }));\n\n      // Update marked dates for multiple dates\n      const newMarkedDates = { ...markedDates };\n      selectedDates.forEach(date => {\n        if (updatedAvailability[date]?.unavailableTimes.length === 0) {\n          newMarkedDates[date] = {\n            customStyles: {\n              container: { backgroundColor: 'white' },\n              text: { color: 'black' }\n            }\n          };\n        }\n      });\n      setMarkedDates(newMarkedDates);\n    } else {\n      // Handle single date (existing functionality)\n      setCurrentAvailability(prev => {\n        const currentDateAvailability = prev[date];\n        if (!currentDateAvailability) return prev;\n\n        const filteredTimes = currentDateAvailability.unavailableTimes.filter(\n          time => !(time.startTime === timeSlot.startTime && time.endTime === timeSlot.endTime)\n        );\n\n        // Update marked dates for single date\n        const newMarkedDates = { ...markedDates };\n        if (filteredTimes.length === 0) {\n          newMarkedDates[date] = {\n            customStyles: {\n              container: { backgroundColor: 'white' },\n              text: { color: 'black' }\n            }\n          };\n          setMarkedDates(newMarkedDates);\n        }\n\n        return {\n          ...prev,\n          [date]: {\n            ...currentDateAvailability,\n            unavailableTimes: filteredTimes\n          }\n        };\n      });\n    }\n  };\n\n  const handleViewBookings = () => {\n    if (selectedDates.length > 0) {\n      navigation.navigate('MyBookings', {\n        selectedDates,\n        initialTab: 'Upcoming'\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>Loading availability...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (error) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity \n            style={styles.retryButton}\n            onPress={() => {\n              setError(null);\n              loadAvailabilityData();\n            }}\n          >\n            <Text style={styles.retryButtonText}>Retry</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <View style={createStyles(screenWidth, isCollapsed).mainContainer}>\n      <View style={createStyles(screenWidth, isCollapsed).container}>\n        <ScrollView \n          style={createStyles(screenWidth, isCollapsed).scrollView}\n          contentContainerStyle={createStyles(screenWidth, isCollapsed).scrollContent}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={createStyles(screenWidth, isCollapsed).centeredContainer}>\n            <View style={createStyles(screenWidth, isCollapsed).header}>\n              <Text style={createStyles(screenWidth, isCollapsed).title}>Availability Settings</Text>\n              <TouchableOpacity \n                style={createStyles(screenWidth, isCollapsed).defaultSettingsButton}\n                onPress={() => setIsSettingsModalVisible(true)}\n              >\n                <Text style={createStyles(screenWidth, isCollapsed).defaultSettingsText}>Default Settings</Text>\n                <IconComponent \n                  name={Platform.OS === 'web' ? 'cog' : 'settings-outline'} \n                  size={24} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n            </View>\n\n            <Calendar\n              style={[createStyles(screenWidth, isCollapsed).calendar, { width: screenWidth <= 900 ? '100%' : 'auto' }]}\n              markedDates={markedDates}\n              onDayPress={onDayPress}\n              theme={{\n                backgroundColor: 'transparent',\n                calendarBackground: 'transparent',\n                textSectionTitleColor: theme.colors.text,\n                selectedDayBackgroundColor: theme.colors.primary,\n                selectedDayTextColor: '#ffffff',\n                todayTextColor: theme.colors.primary,\n                dayTextColor: theme.colors.text,\n                textDisabledColor: '#d9e1e8',\n                dotColor: theme.colors.primary,\n                monthTextColor: theme.colors.text,\n                arrowColor: theme.colors.primary,\n                indicatorColor: theme.colors.primary,\n              }}\n            />\n\n            <View style={createStyles(screenWidth, isCollapsed).colorKeyContainer}>\n              <Text style={createStyles(screenWidth, isCollapsed).colorKeyTitle}>Color Key</Text>\n              <View style={createStyles(screenWidth, isCollapsed).colorKeyItem}>\n                <View style={[createStyles(screenWidth, isCollapsed).colorBox, { backgroundColor: theme.colors.calendarColor }]} />\n                <Text style={createStyles(screenWidth, isCollapsed).colorKeyText}>Unavailable</Text>\n              </View>\n              <View style={createStyles(screenWidth, isCollapsed).colorKeyItem}>\n                <View style={[createStyles(screenWidth, isCollapsed).colorBox, { backgroundColor: theme.colors.calendarColorYellowBrown }]} />\n                <Text style={createStyles(screenWidth, isCollapsed).colorKeyText}>Partially Available</Text>\n              </View>\n            </View>\n          </View>\n        </ScrollView>\n\n        <TouchableOpacity \n          style={createStyles(screenWidth, isCollapsed).addButton}\n          onPress={() => setIsAddModalVisible(true)}\n        >\n          <Icon name=\"add\" size={24} color={theme.colors.whiteText} />\n        </TouchableOpacity>\n      </View>\n\n      {isAddModalVisible && (\n        <AddAvailabilityModal\n          visible={isAddModalVisible}\n          onClose={() => setIsAddModalVisible(false)}\n          onSave={handleAddAvailability}\n          selectedDate={selectedDates.length > 0 ? selectedDates[0] : null}\n        />\n      )}\n\n      {isSettingsModalVisible && (\n        <DefaultSettingsModal\n          isVisible={isSettingsModalVisible}\n          onClose={() => setIsSettingsModalVisible(false)}\n          onSave={handleDefaultSettingsSave}\n          defaultSettings={defaultSettings}\n        />\n      )}\n\n      {(showBottomSheet || isClosing) && (\n        <>\n          <Animated.View \n            style={[\n              styles.overlay,\n              {\n                opacity: fadeAnim,\n                backgroundColor: 'black',\n                pointerEvents: isBottomSheetMinimized ? 'none' : 'auto'\n              }\n            ]} \n          />\n          <View style={[\n            styles.bottomSheetContainer,\n            { pointerEvents: 'box-none' }\n          ]}>\n            <AvailabilityBottomSheet\n              selectedDates={selectedDates}\n              currentAvailability={currentAvailability}\n              onClose={() => {\n                toggleBottomSheet(false);\n                setSelectedDates([]);\n              }}\n              onViewUnavailableTimes={() => {\n                setShowUnavailableTimesModal(true);\n              }}\n              onSave={handleSaveAvailability}\n              onViewBookings={handleViewBookings}\n              onMinimize={handleBottomSheetMinimize}\n            />\n          </View>\n        </>\n      )}\n\n      <UnavailableTimesModal\n        visible={showUnavailableTimesModal}\n        onClose={() => setShowUnavailableTimesModal(false)}\n        selectedDates={selectedDates}\n        currentAvailability={currentAvailability}\n        onRemoveTimeSlot={handleRemoveTimeSlot}\n        bookings={bookings}\n      />\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  bottomSheetOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  centeredContainer: {\n    maxWidth: screenWidth > 900 ? 1000 : '100%',\n    width: '100%',\n    alignSelf: 'center',\n    flex: 1,\n    padding: screenWidth <= 900 ? 10 : 20,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n    flexWrap: screenWidth <= 600 ? 'wrap' : 'nowrap',\n    gap: screenWidth <= 600 ? 10 : 0,\n  },\n  title: {\n    fontSize: screenWidth <= 600 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    width: screenWidth <= 600 ? '100%' : 'auto',\n  },\n  addButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  defaultSettingsButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  defaultSettingsText: {\n    marginRight: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  colorKeyContainer: {\n    marginTop: 20,\n    padding: screenWidth <= 600 ? 15 : 10,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    elevation: 2,\n    flexDirection: screenWidth <= 600 ? 'column' : 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  colorKeyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  colorKeyItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: screenWidth <= 600 ? 2 : 5,\n    flex: screenWidth <= 600 ? 0 : 1,\n  },\n  colorBox: {\n    width: 20,\n    height: 20,\n    borderRadius: 3,\n    marginRight: 10,\n  },\n  colorKeyText: {\n    fontSize: 14,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 5,\n  },\n  retryButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'black',\n  },\n  bottomSheetContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n});\n\nexport default AvailabilitySettings;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, Image, Platform, SafeAreaView, StatusBar, Dimensions, ActivityIndicator } from 'react-native';\nimport { Card, Title, Paragraph, Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport { handleBack } from '../components/Navigation';\nimport { AuthContext } from '../context/AuthContext';\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst MyPets = ({ navigation }) => {\n  const [pets, setPets] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { screenWidth } = useContext(AuthContext);\n\n  useEffect(() => {\n    fetchPets();\n  }, []);\n\n  const fetchPets = async () => {\n    setLoading(true);\n    try {\n      // Simulate network delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n\n      // Mock data\n      const mockPets = [\n        {\n          id: '1',\n          name: 'Max',\n          animal_type: 'Dog',\n          breed: 'border collie',\n          age: {\n            months: 0,\n            years: 5,\n          },\n          weight: 32,\n          sex: 'Male',\n          friendlyWithChildren: true,\n          friendlyWithCats: false,\n          friendlyWithDogs: true,\n          spayedNeutered: true,\n          houseTrained: true,\n          microchipped: true,\n          adoptionDate: '2020-01-15',\n          description: 'Loves to play fetch and go for walks.',\n          energyLevel: 'High',\n          feedingSchedule: 'Morning',\n          leftAlone: '1-4 hours',\n          medication: null,\n          additionalInstructions: 'Needs daily exercise.',\n          vetName: 'Dr. Smith',\n          vetAddress: '123 Vet St.',\n          vetPhone: '555-1234',\n          insuranceProvider: 'Pet Insurance Co.',\n          vetDocuments: [],\n          galleryImages: [],\n        },\n        {\n          id: '2',\n          name: 'Whiskers',\n          animal_type: 'Cat',\n          breed: 'tammy ammy',\n          age: {\n            months: 3,\n            years: 4,\n          },\n          weight: 16,\n          sex: 'Female',\n          friendlyWithChildren: true,\n          friendlyWithCats: true,\n          friendlyWithDogs: false,\n          spayedNeutered: true,\n          houseTrained: true,\n          microchipped: false,\n          adoptionDate: '2019-05-20',\n          description: 'Enjoys lounging in the sun.',\n          energyLevel: 'Low',\n          feedingSchedule: 'Twice a day',\n          leftAlone: '4-8 hours',\n          medication: null,\n          additionalInstructions: 'Prefers quiet environments.',\n          vetName: 'Dr. Jones',\n          vetAddress: '456 Vet Ave.',\n          vetPhone: '555-5678',\n          insuranceProvider: 'Pet Health Insurance',\n          vetDocuments: [],\n          galleryImages: [],\n        },\n        {\n          id: '3',\n          name: 'Buddy',\n          animal_type: 'Lizard',\n          breed: 'leopard gecko',\n          age: {\n            months: 0,\n            years: 2,\n          },\n          weight: 1,\n          sex: 'Male',\n          friendlyWithChildren: false,\n          friendlyWithCats: false,\n          friendlyWithDogs: false,\n          spayedNeutered: false,\n          houseTrained: false,\n          microchipped: false,\n          adoptionDate: '2021-08-10',\n          description: 'A calm and quiet pet.',\n          energyLevel: 'Low',\n          feedingSchedule: ['Custom', '3 times a day with liquid food.'],\n          leftAlone: 'Can be left alone indefinitely',\n          medication: null,\n          additionalInstructions: 'Keep in a warm environment.',\n          vetName: 'Dr. Green',\n          vetAddress: '789 Vet Blvd.',\n          vetPhone: '555-9012',\n          insuranceProvider: 'Reptile Insurance Co.',\n          vetDocuments: [],\n          galleryImages: [],\n        },\n      ];\n\n      setPets(mockPets);\n    } catch (error) {\n      console.error('Error fetching pets:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const PetCard = ({ pet }) => (\n    <TouchableOpacity \n      onPress={() => {\n        if (Platform.OS === 'web') {\n          // Store pet data before navigation\n          sessionStorage.setItem('editPetData', JSON.stringify(pet));\n          // Navigate and immediately clean URL\n          navigation.navigate('AddPet');\n          window.history.replaceState({}, '', '/AddPet');\n        } else {\n          navigation.navigate('AddPet', { pet });\n        }\n      }}\n    >\n      <Card style={styles.petCard}>\n        <Card.Content style={styles.petCardContent}>\n          {pet.image ? (\n            <Image source={{ uri: pet.image }} style={styles.petImage} />\n          ) : (\n            <View style={styles.petImagePlaceholder}>\n              <MaterialCommunityIcons \n                name={getAnimalIcon(pet.animal_type ? pet.animal_type : 'paw')} \n                size={40} \n                color={theme.colors.primary} \n              />\n            </View>\n          )}\n          <View style={styles.petInfo}>\n            <Title>{pet.name}</Title>\n            <Paragraph>{pet.animal_type ? pet.animal_type : 'paw'}</Paragraph>\n            <Paragraph>{pet.age.years} years {pet.age.months} months old</Paragraph>\n          </View>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  );\n\n  const getAnimalIcon = (animalType) => {\n    switch (animalType.toLowerCase()) {\n      case 'dog':\n        return 'dog';\n      case 'cat':\n        return 'cat';\n      case 'rabbit':\n        return 'rabbit';\n      case 'reptile':\n      case 'lizard':\n        return 'snake';\n      case 'snake':\n        return 'snake';\n      case 'turtle':\n        return 'turtle';\n      case 'bird':\n      case 'parrot':\n        return 'bird';\n      case 'horse':\n        return 'horse';\n      case 'fish':\n        return 'fish';\n      default:\n        return 'paw';\n    }\n  };\n\n  const getCardWidth = () => {\n    if (screenWidth <= 600) {\n      return '90%';\n    } else if (screenWidth <= 800) {\n      return '60%';\n    } else {\n      return '30%';\n    }\n  };\n\n  const Content = () => {\n    if (loading) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        </View>\n      );\n    }\n\n    return (\n      <ScrollView contentContainerStyle={[\n        styles.scrollContent,\n        Platform.OS === 'web' && { alignItems: 'center' },\n        { marginBottom: 15 }\n      ]}>\n        <View style={[styles.contentWrapper, { width: getCardWidth() }]}>\n          {pets.map(pet => (\n            <PetCard key={pet.id} pet={pet} />\n          ))}\n          <Button\n            mode=\"contained\"\n            onPress={() => navigation.navigate('AddPet', { pet: {} })}\n            style={styles.addButton}\n            icon={({ size, color }) => (\n              <MaterialCommunityIcons name=\"plus\" size={size} color={color} />\n            )}\n          >\n            Add Pet\n          </Button>\n        </View>\n      </ScrollView>\n    );\n  };\n\n  if (Platform.OS === 'ios') {\n    return (\n      <SafeAreaView style={styles.container}>\n        <BackHeader \n          title=\"My Pets\" \n          onBackPress={() => handleBack(navigation)}\n        />\n        <Content />\n      </SafeAreaView>\n    );\n  } else if (Platform.OS === 'android') {\n    return (\n      <View style={[styles.container, { paddingTop: StatusBar.currentHeight }]}>\n        <BackHeader \n          title=\"My Pets\" \n          onBackPress={() => handleBack(navigation)}\n        />\n        <Content />\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <BackHeader \n          title=\"My Pets\" \n          onBackPress={() => handleBack(navigation)}\n        />\n        <Content />\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    padding: 16,\n  },\n  contentWrapper: {\n    alignSelf: 'center',\n  },\n  title: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  petCard: {\n    marginBottom: 16,\n    transform: [{ scale: Platform.OS === 'web' ? (screenWidth <= 800 && screenWidth > 600 ? 1.15 : 1) : 1 }],\n  },\n  petCardContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  petImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    marginRight: 16,\n  },\n  petImagePlaceholder: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    marginRight: 16,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  petInfo: {\n    flex: 1,\n  },\n  addButton: {\n    marginTop: 5,\n    alignSelf: 'center',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default MyPets;\n","import React from 'react';\nimport { View, StyleSheet, ScrollView, Platform, SafeAreaView, StatusBar } from 'react-native';\nimport { Card, Title, Paragraph, List, Button, useTheme } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst OwnerHistory = ({ route, navigation }) => {\n  const { ownerId } = route.params;\n  const { colors } = useTheme();\n\n  // Mock data - replace with actual data from your backend\n  const ownerData = {\n    id: ownerId,\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    phone: '(123) 456-7890',\n    contracts: [\n      { id: '1', date: '2023-05-01', status: 'Completed' },\n      { id: '2', date: '2023-04-15', status: 'Pending' },\n    ],\n    invoices: [\n      { id: '1', date: '2023-05-02', amount: '$100', status: 'Paid' },\n      { id: '2', date: '2023-04-16', amount: '$75', status: 'Unpaid' },\n    ],\n    upcomingBookings: [\n      { id: '1', date: '2023-06-01', service: 'Dog Walking' },\n      { id: '2', date: '2023-06-15', service: 'Cat Sitting' },\n    ],\n  };\n\n  const Content = () => (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollViewContent}>\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>{ownerData.name}</Title>\n          <Paragraph>Email: {ownerData.email}</Paragraph>\n          <Paragraph>Phone: {ownerData.phone}</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Upcoming Bookings</Title>\n          {ownerData.upcomingBookings.map(booking => (\n            <List.Item\n              key={booking.id}\n              title={`Booking ${booking.id}`}\n              description={`Date: ${booking.date} - Service: ${booking.service}`}\n              left={props => <List.Icon {...props} icon=\"calendar\" />}\n            />\n          ))}\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Contracts</Title>\n          {ownerData.contracts.map(contract => (\n            <List.Item\n              key={contract.id}\n              title={`Contract ${contract.id}`}\n              description={`Date: ${contract.date} - Status: ${contract.status}`}\n              left={props => <List.Icon {...props} icon=\"file-document-outline\" />}\n            />\n          ))}\n        </Card.Content>\n        <Card.Actions>\n          <Button onPress={() => navigateToFrom(navigation, 'Contracts', 'OwnerHistory', { ownerId })}>View All Contracts</Button>\n        </Card.Actions>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Invoices</Title>\n          {ownerData.invoices.map(invoice => (\n            <List.Item\n              key={invoice.id}\n              title={`Invoice ${invoice.id}`}\n              description={`Date: ${invoice.date} - Amount: ${invoice.amount} - Status: ${invoice.status}`}\n              left={props => <List.Icon {...props} icon=\"file-document-outline\" />}\n            />\n          ))}\n        </Card.Content>\n        <Card.Actions>\n          <Button onPress={() => navigateToFrom(navigation, 'Invoices', 'OwnerHistory', { ownerId })}>View All Invoices</Button>\n        </Card.Actions>\n      </Card>\n\n      <View style={styles.messageButtonContainer}>\n        <Button \n          mode=\"contained\" \n          onPress={() => navigateToFrom(navigation, 'MessageHistory', 'OwnerHistory', { ownerId })}\n          style={styles.messageButton}\n        >\n          View Messages\n        </Button>\n      </View>\n    </ScrollView>\n  );\n\n  if (Platform.OS === 'ios') {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Content />\n      </SafeAreaView>\n    );\n  } else if (Platform.OS === 'android') {\n    return (\n      <View style={[styles.container, styles.androidContainer]}>\n        <Content />\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <Content />\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  androidContainer: {\n    paddingTop: StatusBar.currentHeight,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    padding: 16,\n    paddingBottom: Platform.OS === 'web' ? 16 : 90, // Extra padding for iOS and Android\n  },\n  card: {\n    marginBottom: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  messageButtonContainer: {\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n    marginTop: 16,\n  },\n  messageButton: {\n    width: '100%',\n  },\n});\n\nexport default OwnerHistory;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TextInput, Pressable, ScrollView, Animated } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst DateTimePicker = ({\n  value,\n  onChange,\n  error,\n  disabled = false,\n  containerStyle,\n  isMilitary = true,\n  onPickerStateChange\n}) => {\n  const { is_DEBUG, screenWidth } = useContext(AuthContext);\n  const [inputs, setInputs] = useState({\n    month: '',\n    day: '',\n    year: '',\n    hours: '',\n    minutes: '',\n    period: isMilitary ? null : 'AM'\n  });\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTimeSelector, setShowTimeSelector] = useState(false);\n  const containerRef = useRef(null);\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  const animatePickerVisibility = (show) => {\n    Animated.timing(fadeAnim, {\n      toValue: show ? 1 : 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    animatePickerVisibility(showCalendar || showTimeSelector);\n  }, [showCalendar, showTimeSelector]);\n\n  useEffect(() => {\n    if (value instanceof Date && !isNaN(value)) {\n      if (is_DEBUG) {\n        console.log('MBA1234 Received date value:', value.toISOString());\n      }\n      \n      const hours24 = value.getHours();\n      const hours12 = hours24 % 12 || 12;\n      const period = isMilitary ? null : (hours24 >= 12 ? 'PM' : 'AM');\n      \n      if (is_DEBUG) {\n        console.log('MBA1234 Time format detection:', {\n          hours24,\n          hours12,\n          period,\n          isMilitary\n        });\n      }\n      \n      setInputs({\n        month: String(value.getMonth() + 1).padStart(2, '0'),\n        day: String(value.getDate()).padStart(2, '0'),\n        year: String(value.getFullYear()),\n        hours: isMilitary ? String(hours24).padStart(2, '0') : String(hours12).padStart(2, '0'),\n        minutes: String(value.getMinutes()).padStart(2, '0'),\n        period\n      });\n    }\n  }, [value, isMilitary]);\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA5678 DateTimePicker picker states:', {\n        showCalendar,\n        showTimeSelector,\n        isPickerActive: showCalendar || showTimeSelector\n      });\n    }\n    onPickerStateChange?.(showCalendar || showTimeSelector);\n  }, [showCalendar, showTimeSelector]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        if (is_DEBUG) {\n          console.log('MBA5678 Click outside - closing pickers');\n        }\n        setShowCalendar(false);\n        setShowTimeSelector(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const formatTwoDigitInput = (input, field, currentValue) => {\n    // Remove any non-numeric characters\n    const numbers = input.replace(/[^0-9]/g, '');\n    \n    if (is_DEBUG) {\n      console.log('MBA1234 Formatting input:', {\n        field,\n        input,\n        numbers,\n        currentValue\n      });\n    }\n\n    // Handle backspace (empty input)\n    if (numbers.length === 0) {\n      return '00';\n    }\n\n    // If we only have one digit\n    if (numbers.length === 1) {\n      return `0${numbers}`;\n    }\n\n    // If we have two digits\n    if (numbers.length >= 2) {\n      const firstDigit = parseInt(numbers[0], 10);\n      const secondDigit = parseInt(numbers[1], 10);\n      \n      if (field === 'month') {\n        if (firstDigit > 1 || (firstDigit === 1 && secondDigit > 2)) {\n          return '12';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'day') {\n        if (firstDigit > 3 || (firstDigit === 3 && secondDigit > 1)) {\n          return '31';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'hours') {\n        if (!currentValue.period) {\n          // 24-hour format\n          if (firstDigit > 2 || (firstDigit === 2 && secondDigit > 3)) {\n            return '23';\n          }\n        } else {\n          // 12-hour format\n          if (firstDigit > 1 || (firstDigit === 1 && secondDigit > 2)) {\n            return '12';\n          }\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'minutes') {\n        if (firstDigit > 5) {\n          return '59';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n    }\n    \n    return numbers.slice(0, 2);\n  };\n\n  const formatYearInput = (input) => {\n    const numbers = input.replace(/[^0-9]/g, '');\n    if (numbers.length === 0) return '0000';\n    return numbers.padStart(4, '0').slice(0, 4);\n  };\n\n  const handleInputChange = (field, value) => {\n    let formattedValue = value;\n\n    if (is_DEBUG) {\n      console.log('MBA1234 Input change:', {\n        field,\n        value,\n        currentInputs: inputs\n      });\n    }\n\n    switch (field) {\n      case 'month':\n        formattedValue = formatTwoDigitInput(value, 'month', inputs);\n        break;\n      case 'day':\n        formattedValue = formatTwoDigitInput(value, 'day', inputs);\n        break;\n      case 'year':\n        formattedValue = formatYearInput(value);\n        break;\n      case 'hours':\n        formattedValue = formatTwoDigitInput(value, 'hours', inputs);\n        break;\n      case 'minutes':\n        formattedValue = formatTwoDigitInput(value, 'minutes', inputs);\n        break;\n      case 'period':\n        formattedValue = value;\n        break;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA1234 Formatted value:', {\n        field,\n        formattedValue\n      });\n    }\n\n    const newInputs = { ...inputs, [field]: formattedValue };\n    setInputs(newInputs);\n\n    // Only create new date if we have all required fields\n    if (newInputs.month && newInputs.day && newInputs.year && \n        newInputs.hours && newInputs.minutes) {\n      createNewDate(newInputs);\n    }\n  };\n\n  const createNewDate = (currentInputs) => {\n    try {\n      let hours = parseInt(currentInputs.hours, 10);\n      if (currentInputs.period) {\n        // Only convert hours if we're using AM/PM\n        if (currentInputs.period === 'PM' && hours !== 12) {\n          hours += 12;\n        } else if (currentInputs.period === 'AM' && hours === 12) {\n          hours = 0;\n        }\n      }\n\n      const newDate = new Date(\n        parseInt(currentInputs.year, 10),\n        parseInt(currentInputs.month, 10) - 1,\n        parseInt(currentInputs.day, 10),\n        hours,\n        parseInt(currentInputs.minutes, 10)\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Created new date:', {\n          inputs: currentInputs,\n          newDate: newDate.toISOString()\n        });\n      }\n\n      if (!isNaN(newDate.getTime())) {\n        onChange(newDate);\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA1234 Error creating date:', error);\n      }\n    }\n  };\n\n  const handleDatePress = () => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Date press - toggling calendar');\n    }\n    setShowCalendar(prev => !prev);\n    setShowTimeSelector(false);\n  };\n\n  const handleTimePress = () => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Time press - toggling time selector');\n    }\n    setShowTimeSelector(prev => !prev);\n    setShowCalendar(false);\n  };\n\n  const handleDaySelect = (day) => {\n    handleInputChange('day', String(day));\n    setShowCalendar(false);\n  };\n\n  if (is_DEBUG) {\n    console.log('MBA1234 Current state:', {\n      inputs,\n      isMilitary\n    });\n  }\n\n  return (\n    <View style={[styles.container, containerStyle]} ref={containerRef}>\n      <View style={[\n        styles.dateTimeContainer,\n        error && styles.errorBorder,\n        disabled && styles.disabled\n      ]}>\n        {/* Date Inputs */}\n        <Pressable \n          style={styles.dateInputGroup}\n          onPress={() => !disabled && handleDatePress()}\n        >\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.month}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('month', text)}\n            placeholder=\"MM\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>/</Text>\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.day}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('day', text)}\n            placeholder=\"DD\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>/</Text>\n          <TextInput\n            style={styles.yearInput}\n            value={inputs.year}\n            maxLength={4}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('year', text)}\n            placeholder=\"YYYY\"\n            editable={!disabled}\n          />\n          {screenWidth > 410 && (\n            <MaterialCommunityIcons \n              name=\"calendar\" \n              size={20} \n              color={theme.colors.text} \n              style={styles.icon} \n            />\n          )}\n        </Pressable>\n        \n        <Text style={styles.divider}>|</Text>\n        \n        {/* Time Inputs */}\n        <Pressable \n          style={styles.timeInputGroup}\n          onPress={() => !disabled && handleTimePress()}\n        >\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.hours}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('hours', text)}\n            placeholder=\"HH\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>:</Text>\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.minutes}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('minutes', text)}\n            placeholder=\"MM\"\n            editable={!disabled}\n          />\n          \n          {/* AM/PM Toggle - only show if not military time */}\n          {!isMilitary && (\n            <Pressable\n              style={styles.periodButton}\n              onPress={() => !disabled && handleInputChange('period', inputs.period)}\n              disabled={disabled}\n            >\n              <Text style={styles.periodText}>{inputs.period}</Text>\n            </Pressable>\n          )}\n          {screenWidth > 410 && (\n            <MaterialCommunityIcons \n              name=\"clock-outline\" \n              size={20} \n              color={theme.colors.text} \n              style={styles.icon} \n            />\n          )}\n        </Pressable>\n      </View>\n\n      <Animated.View style={[\n        styles.pickerContainer,\n        { opacity: fadeAnim },\n        { display: (showCalendar || showTimeSelector) ? 'flex' : 'none' }\n      ]}>\n        {showCalendar && !disabled && (\n          <View style={styles.calendar}>\n            <View style={styles.calendarHeader}>\n              <Text style={styles.calendarHeaderText}>\n                {value.toLocaleString('default', { month: 'long' })} {value.getFullYear()}\n              </Text>\n            </View>\n            <View style={styles.calendarWeekDays}>\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <Text key={day} style={styles.calendarWeekDay}>{day}</Text>\n              ))}\n            </View>\n            {/* Calendar grid */}\n            {Array.from({ length: 6 }).map((_, weekIndex) => (\n              <View key={`week-${weekIndex}`} style={styles.calendarWeek}>\n                {Array.from({ length: 7 }).map((__, dayIndex) => {\n                  const dayNumber = weekIndex * 7 + dayIndex - value.getDay() + 1;\n                  const isCurrentMonth = dayNumber > 0 && dayNumber <= new Date(value.getFullYear(), value.getMonth() + 1, 0).getDate();\n                  const isSelected = parseInt(inputs.day) === dayNumber;\n                  \n                  return (\n                    <Pressable\n                      key={`day-${dayIndex}`}\n                      style={[\n                        styles.calendarDay,\n                        isSelected && styles.selectedDay,\n                        !isCurrentMonth && styles.disabledDay\n                      ]}\n                      onPress={() => isCurrentMonth && handleDaySelect(dayNumber)}\n                    >\n                      {isCurrentMonth && (\n                        <Text style={[\n                          styles.calendarDayText,\n                          isSelected && styles.selectedDayText\n                        ]}>\n                          {dayNumber}\n                        </Text>\n                      )}\n                    </Pressable>\n                  );\n                })}\n              </View>\n            ))}\n          </View>\n        )}\n\n        {showTimeSelector && !disabled && (\n          <View style={styles.timeSelector}>\n            <View style={styles.timeSelectorColumn}>\n              <Text style={styles.timeSelectorLabel}>Hour</Text>\n              <ScrollView style={styles.timeSelectorScroll}>\n                {Array.from({ length: isMilitary ? 24 : 12 }, (_, i) => (\n                  <Pressable\n                    key={i}\n                    style={[\n                      styles.timeSelectorItem,\n                      parseInt(inputs.hours) === (isMilitary ? i : i + 1) && styles.selectedTime\n                    ]}\n                    onPress={() => {\n                      handleInputChange('hours', String(isMilitary ? i : i + 1).padStart(2, '0'));\n                    }}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      parseInt(inputs.hours) === (isMilitary ? i : i + 1) && styles.selectedTimeText\n                    ]}>\n                      {String(isMilitary ? i : i + 1).padStart(2, '0')}\n                    </Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n\n            <View style={styles.timeSelectorColumn}>\n              <Text style={styles.timeSelectorLabel}>Minute</Text>\n              <ScrollView style={styles.timeSelectorScroll}>\n                {Array.from({ length: 60 }, (_, i) => (\n                  <Pressable\n                    key={i}\n                    style={[\n                      styles.timeSelectorItem,\n                      parseInt(inputs.minutes) === i && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('minutes', String(i).padStart(2, '0'))}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      parseInt(inputs.minutes) === i && styles.selectedTimeText\n                    ]}>\n                      {String(i).padStart(2, '0')}\n                    </Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n\n            {!isMilitary && (\n              <View style={styles.timeSelectorColumn}>\n                <Text style={styles.timeSelectorLabel}>Period</Text>\n                <View style={styles.periodContainer}>\n                  <Pressable\n                    style={[\n                      styles.timeSelectorItem,\n                      inputs.period === 'AM' && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('period', 'AM')}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      inputs.period === 'AM' && styles.selectedTimeText\n                    ]}>\n                      AM\n                    </Text>\n                  </Pressable>\n                  <Pressable\n                    style={[\n                      styles.timeSelectorItem,\n                      inputs.period === 'PM' && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('period', 'PM')}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      inputs.period === 'PM' && styles.selectedTimeText\n                    ]}>\n                      PM\n                    </Text>\n                  </Pressable>\n                </View>\n              </View>\n            )}\n          </View>\n        )}\n      </Animated.View>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  dateTimeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    paddingHorizontal: 12,\n    height: 40,\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n  dateInputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 4,\n  },\n  timeInputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 4,\n  },\n  numberInput: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    width: 24,\n    textAlign: 'center',\n    padding: 0,\n  },\n  yearInput: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    width: 42,\n    textAlign: 'center',\n    padding: 0,\n  },\n  separator: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginHorizontal: 2,\n  },\n  divider: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.border,\n    marginHorizontal: 8,\n  },\n  periodButton: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    marginLeft: 8,\n  },\n  periodText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  errorBorder: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  disabled: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  icon: {\n    marginLeft: 8,\n  },\n  pickerContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n  },\n  calendar: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginTop: 4,\n    padding: 12,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  calendarHeader: {\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  calendarHeaderText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  calendarWeekDays: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  calendarWeekDay: {\n    width: 36,\n    textAlign: 'center',\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.placeholder,\n  },\n  calendarWeek: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 4,\n  },\n  calendarDay: {\n    width: 36,\n    height: 36,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 18,\n  },\n  calendarDayText: {\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedDay: {\n    backgroundColor: theme.colors.primary,\n  },\n  selectedDayText: {\n    color: theme.colors.surface,\n  },\n  timeSelector: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginTop: 4,\n    padding: 12,\n    gap: 12,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  timeSelectorColumn: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  timeSelectorLabel: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.placeholder,\n    marginBottom: 8,\n  },\n  timeSelectorScroll: {\n    height: 200,\n    width: '100%',\n  },\n  timeSelectorItem: {\n    padding: 12,\n    alignItems: 'center',\n    borderRadius: 4,\n    width: '100%',\n  },\n  timeSelectorText: {\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedTime: {\n    backgroundColor: theme.colors.primary,\n  },\n  selectedTimeText: {\n    color: theme.colors.surface,\n  },\n  periodContainer: {\n    width: '100%',\n  },\n  disabledDay: {\n    opacity: 0.3,\n  },\n});\n\nexport default DateTimePicker; ","/**\n * Validates that the end date/time is not before the start date/time\n * @param {string} startDate - Start date in ISO format\n * @param {string} endDate - End date in ISO format (optional)\n * @param {string} startTime - Start time in HH:mm format\n * @param {string} endTime - End time in HH:mm format\n * @returns {Object} - { isValid: boolean, error: string | null }\n */\nexport const validateDateTimeRange = (startDate, endDate, startTime, endTime) => {\n  // Convert dates and times to comparable format\n  const [startHour, startMinute] = startTime.split(':').map(Number);\n  const [endHour, endMinute] = endTime.split(':').map(Number);\n  \n  const startDateTime = new Date(startDate);\n  startDateTime.setHours(startHour, startMinute, 0);\n  \n  let endDateTime;\n  if (endDate) {\n    endDateTime = new Date(endDate);\n    endDateTime.setHours(endHour, endMinute, 0);\n  } else {\n    // If no end date, use start date\n    endDateTime = new Date(startDate);\n    endDateTime.setHours(endHour, endMinute, 0);\n  }\n\n  if (endDateTime < startDateTime) {\n    return {\n      isValid: false,\n      error: 'End date/time cannot be before start date/time'\n    };\n  }\n\n  return {\n    isValid: true,\n    error: null\n  };\n}; ","// This is a calculation for the addpet.js file\nexport const calculateAge = (birthday) => {\n    const today = new Date();\n    const birthDate = new Date(birthday);\n    let ageYears = today.getFullYear() - birthDate.getFullYear();\n    let ageMonths = today.getMonth() - birthDate.getMonth();\n\n    if (ageMonths < 0) {\n      ageYears--;\n      ageMonths += 12;\n    }\n\n    setAgeYears(ageYears.toString());\n    setAgeMonths(ageMonths.toString());\n  };\n\nexport const calculateProratedMultiplier = (startDate, endDate, startTime, endTime, timeUnit) => {\n    // Parse the dates and times separately\n    const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n\n    console.log('MBA12348785 ========= Starting calculateProratedMultiplier =========');\n    console.log('MBA12348785 Input parameters:', {\n        startDate,\n        endDate,\n        startTime,\n        endTime,\n        timeUnit\n    });\n\n    console.log('MBA12348785 Parsed components:', {\n        start: {\n            year: startYear,\n            month: startMonth,\n            day: startDay,\n            hour: startHour,\n            minute: startMinute\n        },\n        end: {\n            year: endYear,\n            month: endMonth,\n            day: endDay,\n            hour: endHour,\n            minute: endMinute\n        }\n    });\n\n    // Calculate days difference directly\n    const startDateOnly = new Date(Date.UTC(startYear, startMonth - 1, startDay));\n    const endDateOnly = new Date(Date.UTC(endYear, endMonth - 1, endDay));\n    const daysDiff = Math.floor((endDateOnly - startDateOnly) / (1000 * 60 * 60 * 24));\n    const daysDiffHours = daysDiff * 24;\n    \n    console.log('MBA12348785 Date difference calculation:', {\n        startDateOnly: startDateOnly.toISOString(),\n        endDateOnly: endDateOnly.toISOString(),\n        daysDiff,\n        daysDiffHours\n    });\n    \n    // Calculate time difference\n    const startTimeMinutes = startHour * 60 + startMinute;\n    const endTimeMinutes = endHour * 60 + endMinute;\n    const timeDiffHours = (endTimeMinutes - startTimeMinutes) / 60;\n    \n    console.log('MBA12348785 Time difference calculation:', {\n        startTimeMinutes,\n        endTimeMinutes,\n        timeDiffHours\n    });\n    \n    // Total hours is days difference plus time difference\n    const totalHours = daysDiffHours + timeDiffHours;\n    \n    console.log('MBA12348785 Total duration:', {\n        daysDiffHours,\n        timeDiffHours,\n        totalHours\n    });\n\n    let result;\n    switch(timeUnit) {\n        case '15 Min':\n            result = totalHours / .25;\n            break;\n        case '30 Min':\n            result = totalHours / .5;\n            break;\n        case '45 Min':\n            result = totalHours / .75;\n            break;\n        case '1 Hour':\n            result = totalHours / 1;\n            break;\n        case '2 Hour':\n            result = totalHours / 2;\n            break;\n        case '3 Hour':\n            result = totalHours / 3;\n            break;\n        case '4 Hour':\n            result = totalHours / 4;\n            break;\n        case '5 Hour':\n            result = totalHours / 5;\n            break;\n        case '6 Hour':\n            result = totalHours / 6;\n            break;\n        case '7 Hour':\n            result = totalHours / 7;\n            break;\n        case '8 Hour':\n            result = totalHours / 8;\n            break;\n        case '24 Hour':\n        case 'Per Day':\n            result = totalHours / 24;\n            break;\n        case 'Week':\n            result = totalHours / 168;\n            break;\n        case 'Per Visit':\n            result = 1;\n            break;\n        default:\n            result = 1;\n    }\n\n    console.log('MBA12348785 Final calculation:', {\n        timeUnit,\n        totalHours,\n        divisor: timeUnit === 'Per Visit' ? 1 : timeUnit === 'Week' ? 168 : parseInt(timeUnit) || 24,\n        result\n    });\n    console.log('MBA12348785 ========= End calculateProratedMultiplier =========');\n\n    return result;\n};\n  \n// Implementation of the backend's calculate_cost function in JavaScript\nexport const calculateOccurrenceCost = (occurrenceData, numPets = 0) => {\n    console.log('MBA93652 Starting cost calculation with data:', {\n        occurrenceData,\n        numPets\n    });\n\n    // Extract values from occurrence data\n    const {\n        start_date,\n        end_date,\n        start_time,\n        end_time,\n        rates: {\n            base_rate,\n            additional_animal_rate,\n            applies_after,\n            holiday_rate,\n            unit_of_time,\n            additional_rates = []\n        }\n    } = occurrenceData;\n\n    // Calculate number of units needed (this already handles the unit_of_time appropriately)\n    const numberOfUnits = calculateProratedMultiplier(\n        start_date,\n        end_date,\n        start_time,\n        end_time,\n        unit_of_time\n    );\n\n    console.log('MBA93652 calculateProratedMultiplier returned:', {\n        numberOfUnits,\n        unit_of_time,\n        start: `${start_date} ${start_time}`,\n        end: `${end_date} ${end_time}`\n    });\n    \n    // Calculate base cost - simply multiply base rate by number of units\n    const baseTotal = parseFloat(base_rate) * numberOfUnits;\n\n    console.log('MBA93652 Base cost calculation:', {\n        numberOfUnits,\n        baseTotal,\n        base_rate\n    });\n\n    // Calculate additional animal cost\n    let additionalAnimalRateTotal = 0;\n    if (numPets > parseInt(applies_after)) {\n        const additionalPets = numPets - parseInt(applies_after);\n        additionalAnimalRateTotal = parseFloat(additional_animal_rate) * additionalPets;\n    }\n\n    console.log('MBA93652 Additional animal cost:', {\n        additionalAnimalRateTotal,\n        numPets,\n        applies_after,\n        additional_animal_rate\n    });\n\n    // Add holiday rate if applicable (currently not implemented)\n    const holidayRateTotal = 0;\n\n    // Calculate additional rates total\n    const additionalRatesTotal = additional_rates.reduce((sum, rate) => \n        sum + parseFloat(rate.amount || 0), 0);\n\n    console.log('MBA93652 Additional rates:', {\n        additionalRatesTotal,\n        additional_rates\n    });\n\n    // Calculate total\n    const totalCost = baseTotal + additionalAnimalRateTotal + holidayRateTotal + additionalRatesTotal;\n\n    console.log('MBA93652 Final calculation:', {\n        baseTotal,\n        additionalAnimalRateTotal,\n        holidayRateTotal,\n        additionalRatesTotal,\n        totalCost\n    });\n\n    return {\n        base_total: baseTotal,\n        multiplier: numberOfUnits,\n        additional_animal_rate_total: additionalAnimalRateTotal,\n        holiday_rate_total: holidayRateTotal,\n        additional_rates_total: additionalRatesTotal,\n        total_cost: totalCost\n    };\n};","import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { View, Text, Modal, TextInput, TouchableOpacity, StyleSheet, ScrollView, Picker, ActivityIndicator, Platform, Animated, Alert } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport DateTimePicker from './DateTimePicker';\nimport { AuthContext } from '../context/AuthContext'\nimport { format, parse } from 'date-fns';\nimport { TIME_OPTIONS } from '../data/mockData';\nimport { validateDateTimeRange } from '../utils/dateTimeValidation';\nimport { Button } from 'react-native-paper';\nimport { API_BASE_URL } from '../config/config';\nimport ConfirmationModal from './ConfirmationModal';\nimport { getStorage } from '../context/AuthContext';\nimport { debounce } from 'lodash';\nimport { calculateOccurrenceCost } from '../data/calculations';\n\nconst ANIMAL_COUNT_OPTIONS = ['1', '2', '3', '4', '5'];\n\nconst WebScrollStyles = `\n  .modal-scroll-container {\n    max-height: 60vh;\n    overflow-y: scroll !important;\n    padding-right: 16px;\n    display: block;\n    position: relative;\n    scrollbar-width: auto;\n    scrollbar-color: rgba(0, 0, 0, 0.5) rgba(0, 0, 0, 0.1);\n  }\n\n  .modal-scroll-container::-webkit-scrollbar {\n    width: 10px;\n    background-color: #F5F5F5;\n    display: block;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.1);\n    border: 1px solid #ccc;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid #aaa;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nconst ScrollableContent = ({ children }) => {\n  if (Platform.OS === 'web') {\n    return (\n      <>\n        <style>{WebScrollStyles}</style>\n        <div className=\"modal-scroll-container\">\n          {children}\n        </div>\n      </>\n    );\n  }\n  \n  return (\n    <ScrollView showsVerticalScrollIndicator={true} persistentScrollbar={true}>\n      {children}\n    </ScrollView>\n  );\n};\n\nconst AddOccurrenceModal = ({ \n  visible, \n  onClose, \n  onAdd, \n  defaultRates, \n  hideRates = false,\n  initialOccurrence = null,\n  isEditing = false,\n  modalTitle = 'Add New Occurrence',\n  isFromRequestBooking = false,\n  booking\n}) => {\n  const { is_DEBUG, screenWidth, timeSettings } = useContext(AuthContext);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [isAnyPickerActive, setIsAnyPickerActive] = useState(false);\n  const heightAnim = useRef(new Animated.Value(0)).current;\n  const [validationError, setValidationError] = useState(null);\n  const initialValues = useRef(null);\n  const [isCalculatingCost, setIsCalculatingCost] = useState(false);\n\n  const parseInitialDates = (initialOccurrence) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Parsing initial occurrence:', initialOccurrence);\n      console.log('MBA1234 Time settings:', timeSettings);\n    }\n\n    if (!initialOccurrence) {\n      const now = new Date();\n      const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000);\n      return {\n        startDateTime: now,\n        endDateTime: oneHourLater,\n        isMilitary: timeSettings.use_military_time\n      };\n    }\n\n    try {\n      const { startDate, startTime, endDate, endTime } = initialOccurrence;\n      \n      // Use the user's time format preference from settings \n      const isMilitary = timeSettings.use_military_time;\n      \n      if (is_DEBUG) {\n        console.log('MBA1234 Time format detection:', {\n          startTime,\n          endTime,\n          isMilitary,\n          timeSettings\n        });\n      }\n\n      // Parse the date and time strings based on format\n      let startDateTime, endDateTime;\n      \n      if (isMilitary) {\n        startDateTime = parse(\n          `${startDate} ${startTime}`,\n          'yyyy-MM-dd HH:mm',\n          new Date()\n        );\n        endDateTime = parse(\n          `${endDate} ${endTime}`,\n          'yyyy-MM-dd HH:mm',\n          new Date()\n        );\n      } else {\n        startDateTime = parse(\n          `${startDate} ${startTime}`,\n          'yyyy-MM-dd hh:mm aa',\n          new Date()\n        );\n        endDateTime = parse(\n          `${endDate} ${endTime}`,\n          'yyyy-MM-dd hh:mm aa',\n          new Date()\n        );\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Parsed dates:', {\n          startDateTime: startDateTime.toISOString(),\n          endDateTime: endDateTime.toISOString(),\n          isMilitary\n        });\n      }\n\n      return {\n        startDateTime,\n        endDateTime,\n        isMilitary\n      };\n    } catch (error) {\n      console.error('MBA1234 Error parsing dates:', error);\n      const now = new Date();\n      const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000);\n      return {\n        startDateTime: now,\n        endDateTime: oneHourLater,\n        isMilitary: timeSettings.use_military_time\n      };\n    }\n  };\n\n  const initialDates = parseInitialDates(initialOccurrence);\n  \n  if (is_DEBUG) {\n    console.log('MBA565656 AddOccurrenceModal initializing with:', {\n      defaultRates,\n      initialOccurrence,\n      initialDates\n    });\n  }\n\n  const [occurrence, setOccurrence] = useState(() => {\n    const initialState = {\n      startDateTime: initialDates.startDateTime,\n      endDateTime: initialDates.endDateTime,\n      isMilitary: timeSettings.use_military_time,\n      rates: {\n        baseRate: '0',\n        additionalAnimalRate: '0',\n        appliesAfterAnimals: '1',\n        holidayRate: '0',\n        unit_of_time: 'Per Visit',\n        additionalRates: []\n      },\n      calculatedCost: '0'\n    };\n\n    // If we have an initial occurrence, use its rates\n    if (initialOccurrence?.rates) {\n      initialState.rates = initialOccurrence.rates;\n      initialState.calculatedCost = initialOccurrence.calculatedCost || '0';\n    }\n    // Otherwise if we have default rates, use those\n    else if (defaultRates) {\n      initialState.rates = {\n        baseRate: defaultRates.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates.applies_after?.toString() || '1',\n        holidayRate: defaultRates.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      };\n      initialState.calculatedCost = defaultRates.calculated_cost?.toString() || '0';\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA565656 Initial state calculated:', initialState);\n    }\n\n    return initialState;\n  });\n\n  const [unit_of_time, setUnitOfTime] = useState(\n    initialOccurrence?.rates?.unit_of_time || \n    defaultRates?.unit_of_time || \n    'Per Visit'\n  );\n\n  // Clear validation error and set initial values when modal becomes visible\n  useEffect(() => {\n    if (visible) {\n      setValidationError(null);\n      // Store initial values when modal opens, including dates\n      initialValues.current = {\n        baseRate: occurrence.rates.baseRate,\n        additionalAnimalRate: occurrence.rates.additionalAnimalRate,\n        holidayRate: occurrence.rates.holidayRate,\n        unit_of_time: occurrence.rates.unit_of_time,\n        additionalRates: [...occurrence.rates.additionalRates],\n        startDateTime: new Date(occurrence.startDateTime),\n        endDateTime: new Date(occurrence.endDateTime)\n      };\n      if (is_DEBUG) {\n        console.log('MBA565656 Setting initial values:', initialValues.current);\n      }\n    }\n  }, [visible]); // Only depend on visible prop\n\n  const handlePickerStateChange = (isActive) => {\n    setIsAnyPickerActive(isActive);\n    if (is_DEBUG) {\n      console.log('MBA5678 Picker state changed:', {\n        isActive,\n        isFromRequestBooking,\n        currentModalHeight: isActive && isFromRequestBooking ? '65vh' : '80%'\n      });\n    }\n\n    // Animate to new height\n    Animated.timing(heightAnim, {\n      toValue: isActive && isFromRequestBooking ? 1 : 0,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Modal state:', {\n        isFromRequestBooking,\n        isAnyPickerActive,\n        visible\n      });\n    }\n  }, [isFromRequestBooking, isAnyPickerActive, visible]);\n\n  // Add effect to update rates when defaultRates changes\n  useEffect(() => {\n    if (!initialOccurrence && defaultRates) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Updating rates from defaultRates:', {\n          defaultRates,\n          currentRates: occurrence.rates\n        });\n      }\n\n      const newRates = {\n        baseRate: defaultRates.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates.applies_after?.toString() || '1',\n        holidayRate: defaultRates.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      };\n\n      if (is_DEBUG) {\n        console.log('MBA565656 Setting new rates:', newRates);\n        console.log('MBA565656 Setting calculated cost:', defaultRates.calculated_cost);\n      }\n\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          rates: newRates,\n          calculatedCost: defaultRates.calculated_cost?.toString() || '0'\n        };\n        if (is_DEBUG) {\n          console.log('MBA565656 Updated occurrence state:', updated);\n        }\n        return updated;\n      });\n      \n      setUnitOfTime(defaultRates.unit_of_time || 'Per Visit');\n    }\n  }, [defaultRates, initialOccurrence]);\n\n  // Replace the debounced API call with frontend calculation\n  const debouncedCalculateCosts = useCallback(\n    debounce((occurrenceData) => {\n      if (!booking?.booking_id) return;\n\n      try {\n        setIsCalculatingCost(true);\n        \n        // Calculate cost using frontend function\n        const result = calculateOccurrenceCost(occurrenceData, booking.pets?.length || 0);\n\n        if (is_DEBUG) {\n          console.log('MBA565656 Cost calculation result:', result);\n        }\n\n        setOccurrence(prev => ({\n          ...prev,\n          calculatedCost: result.total_cost.toFixed(2)\n        }));\n      } catch (error) {\n        if (is_DEBUG) {\n          console.error('MBA565656 Error calculating costs:', error);\n        }\n      } finally {\n        setIsCalculatingCost(false);\n      }\n    }, 500),\n    [booking?.booking_id, booking?.pets?.length]\n  );\n\n  // Update the cost calculation effect\n  useEffect(() => {\n    // Only calculate costs if:\n    // 1. Modal is visible\n    // 2. We have initial values set\n    // 3. Have a valid booking ID\n    // 4. User has made actual changes to the form\n    if (visible && initialValues.current && booking?.booking_id) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Checking for changes:', {\n          current: {\n            rates: occurrence.rates,\n            startDateTime: occurrence.startDateTime.toISOString(),\n            endDateTime: occurrence.endDateTime.toISOString()\n          },\n          initial: {\n            rates: initialValues.current,\n            startDateTime: initialValues.current.startDateTime.toISOString(),\n            endDateTime: initialValues.current.endDateTime.toISOString()\n          }\n        });\n      }\n\n      // Track if any changes were made that require recalculation\n      const timeDiffs = {\n        start: Math.abs(occurrence.startDateTime.getTime() - initialValues.current.startDateTime.getTime()),\n        end: Math.abs(occurrence.endDateTime.getTime() - initialValues.current.endDateTime.getTime())\n      };\n\n      const rateChanges = {\n        baseRate: occurrence.rates.baseRate !== initialValues.current.baseRate,\n        additionalAnimalRate: occurrence.rates.additionalAnimalRate !== initialValues.current.additionalAnimalRate,\n        holidayRate: occurrence.rates.holidayRate !== initialValues.current.holidayRate,\n        unit_of_time: occurrence.rates.unit_of_time !== initialValues.current.unit_of_time,\n        additionalRatesLength: occurrence.rates.additionalRates.length !== initialValues.current.additionalRates.length\n      };\n\n      const hasChanges = \n        rateChanges.baseRate ||\n        rateChanges.additionalAnimalRate ||\n        rateChanges.holidayRate ||\n        rateChanges.unit_of_time ||\n        rateChanges.additionalRatesLength ||\n        timeDiffs.start >= 1000 ||\n        timeDiffs.end >= 1000;\n\n      if (is_DEBUG) {\n        console.log('MBA565656 Change detection details:', {\n          timeDiffs,\n          rateChanges,\n          hasChanges\n        });\n      }\n\n      if (hasChanges) {\n        if (is_DEBUG) {\n          console.log('MBA565656 Changes detected, calculating costs:', {\n            current: {\n              rates: occurrence.rates,\n              startDateTime: occurrence.startDateTime.toISOString(),\n              endDateTime: occurrence.endDateTime.toISOString()\n            },\n            initial: {\n              rates: initialValues.current,\n              startDateTime: initialValues.current.startDateTime.toISOString(),\n              endDateTime: initialValues.current.endDateTime.toISOString()\n            },\n            timeDiffs,\n            rateChanges\n          });\n        }\n\n        const occurrenceData = {\n          start_date: format(occurrence.startDateTime, 'yyyy-MM-dd'),\n          end_date: format(occurrence.endDateTime, 'yyyy-MM-dd'),\n          start_time: format(occurrence.startDateTime, 'HH:mm'),\n          end_time: format(occurrence.endDateTime, 'HH:mm'),\n          rates: {\n            base_rate: occurrence.rates.baseRate,\n            additional_animal_rate: occurrence.rates.additionalAnimalRate,\n            applies_after: occurrence.rates.appliesAfterAnimals,\n            holiday_rate: occurrence.rates.holidayRate,\n            unit_of_time: occurrence.rates.unit_of_time,\n            additional_rates: occurrence.rates.additionalRates\n          }\n        };\n\n        if (is_DEBUG) {\n          console.log('MBA565656 Calling debouncedCalculateCosts with:', occurrenceData);\n        }\n\n        debouncedCalculateCosts(occurrenceData);\n      } else {\n        if (is_DEBUG) {\n          console.log('MBA565656 No changes detected, skipping calculation');\n        }\n      }\n    } else {\n      if (is_DEBUG) {\n        console.log('MBA565656 Skipping cost calculation:', {\n          visible,\n          hasInitialValues: !!initialValues.current,\n          hasBookingId: !!booking?.booking_id\n        });\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      debouncedCalculateCosts.cancel();\n    };\n  }, [\n    visible,\n    occurrence.startDateTime,\n    occurrence.endDateTime,\n    occurrence.rates.baseRate,\n    occurrence.rates.additionalAnimalRate,\n    occurrence.rates.appliesAfterAnimals,\n    occurrence.rates.holidayRate,\n    occurrence.rates.unit_of_time,\n    occurrence.rates.additionalRates,\n    debouncedCalculateCosts,\n    booking?.booking_id\n  ]);\n\n  // Add effect to update unit_of_time when rates change\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA565656 Rates changed:', occurrence.rates);\n    }\n    setUnitOfTime(occurrence.rates.unit_of_time);\n  }, [occurrence.rates]);\n\n  // Add effect to log when modal becomes visible\n  useEffect(() => {\n    if (visible) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Modal became visible:', {\n          defaultRates,\n          initialOccurrence,\n          currentRates: occurrence.rates\n        });\n      }\n    }\n  }, [visible]);\n\n  // Add effect to update military time preference when timeSettings changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA4321 Time settings changed:', timeSettings);\n    }\n    setOccurrence(prev => ({\n      ...prev,\n      isMilitary: timeSettings.use_military_time\n    }));\n  }, [timeSettings]);\n\n  // Add effect to update dates when initialOccurrence changes\n  useEffect(() => {\n    if (initialOccurrence) {\n      if (is_DEBUG) {\n        console.log('MBA4321 Initial occurrence rates:', initialOccurrence.rates);\n        console.log('MBA4321 Initial unit_of_time:', initialOccurrence.rates?.unit_of_time);\n      }\n      const dates = parseInitialDates(initialOccurrence);\n      // Use unit_of_time directly from the rates object without any transformation\n      const unit_of_time = initialOccurrence.rates?.unit_of_time;\n      if (is_DEBUG) {\n        console.log('MBA4321 Setting unit_of_time to:', unit_of_time);\n      }\n      setOccurrence(prev => ({\n        ...prev,\n        startDateTime: dates.startDateTime,\n        endDateTime: dates.endDateTime,\n        isMilitary: dates.isMilitary,\n        rates: {\n          ...initialOccurrence.rates,\n          unit_of_time: unit_of_time\n        }\n      }));\n      setUnitOfTime(unit_of_time);\n    }\n  }, [initialOccurrence]);\n\n  const handleStartDateTimeChange = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Start datetime changed:', {\n        newDate: date?.toISOString(),\n        currentInitialValues: initialValues.current,\n        currentOccurrence: {\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        }\n      });\n    }\n    if (date && !isNaN(date.getTime())) {\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          startDateTime: date\n        };\n        if (is_DEBUG) {\n          console.log('MBA1234 Updated occurrence:', {\n            startDateTime: updated.startDateTime.toISOString(),\n            endDateTime: updated.endDateTime.toISOString()\n          });\n        }\n        return updated;\n      });\n    }\n  };\n\n  const handleEndDateTimeChange = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 End datetime changed:', {\n        newDate: date?.toISOString(),\n        currentInitialValues: initialValues.current,\n        currentOccurrence: {\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        }\n      });\n    }\n    if (date && !isNaN(date.getTime())) {\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          endDateTime: date\n        };\n        if (is_DEBUG) {\n          console.log('MBA1234 Updated occurrence:', {\n            startDateTime: updated.startDateTime.toISOString(),\n            endDateTime: updated.endDateTime.toISOString()\n          });\n        }\n        return updated;\n      });\n    }\n  };\n\n  const handleAdd = async () => {\n    try {\n      // Format dates in UTC for backend\n      const startDate = format(occurrence.startDateTime, 'yyyy-MM-dd');\n      const startTime = format(occurrence.startDateTime, 'HH:mm');\n      const endDate = format(occurrence.endDateTime, 'yyyy-MM-dd');\n      const endTime = format(occurrence.endDateTime, 'HH:mm');\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Adding occurrence:', {\n          startDate,\n          startTime,\n          endDate,\n          endTime,\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        });\n      }\n\n      const response = await onAdd({\n        startDate,\n        startTime,\n        endDate,\n        endTime,\n        rates: occurrence.rates\n      });\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Response from onAdd:', response);\n      }\n\n      if (response?.status === 'success') {\n        if (is_DEBUG) {\n          console.log('MBA1234 Successfully added/updated occurrence');\n        }\n        resetForm();\n        onClose();\n        // Show success message using Alert\n        Alert.alert('Success', response.message);\n      } else {\n        // Show error message but don't close modal\n        setValidationError(response?.message || 'Failed to add event');\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA1234 Error adding occurrence:', error);\n      }\n      setValidationError(error.message || 'An unexpected error occurred');\n    }\n  };\n\n  const [showAddRate, setShowAddRate] = useState(false);\n  const [newRate, setNewRate] = useState({ name: '', amount: '' });\n  \n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Initial occurrence:', initialOccurrence);\n      console.log('MBA1234 Unit of time set to:', unit_of_time);\n    }\n  }, [unit_of_time, initialOccurrence]);\n\n  // Update occurrence when unit_of_time changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA4321 Unit of time changed:', {\n        newUnitOfTime: unit_of_time,\n        occurrenceRatesUnitOfTime: occurrence.rates.unit_of_time\n      });\n    }\n    setOccurrence(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        unit_of_time: unit_of_time\n      }\n    }));\n  }, [unit_of_time]);\n\n  const handleDeleteRate = (index) => {\n    setOccurrence(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalRates: prev.rates.additionalRates.filter((_, i) => i !== index)\n      }\n    }));\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleSubmit = () => {\n    // Validate the date/time range\n    const validation = validateDateTimeRange(\n      format(occurrence.startDateTime, 'yyyy-MM-dd'),\n      format(occurrence.endDateTime, 'yyyy-MM-dd'),\n      format(occurrence.startDateTime, 'HH:mm'),\n      format(occurrence.endDateTime, 'HH:mm')\n    );\n\n    if (!validation.isValid) {\n      setValidationError(validation.error);\n      return;\n    }\n\n    setValidationError(null);\n    handleAdd();\n  };\n\n  const resetForm = () => {\n    setOccurrence({\n      startDateTime: new Date(),\n      endDateTime: new Date(new Date().setHours(new Date().getHours() + 1)),\n      isMilitary: timeSettings.use_military_time,\n      rates: {\n        baseRate: defaultRates?.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates?.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates?.applies_after?.toString() || '1',\n        holidayRate: defaultRates?.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates?.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates?.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      },\n      calculatedCost: '0'\n    });\n    setUnitOfTime(defaultRates?.unit_of_time || 'Per Visit');\n    setShowAddRate(false);\n    setNewRate({ name: '', amount: '' });\n  };\n\n  const renderPickerItems = (options) => {\n    return options.map((option) => (\n      <Picker.Item \n        key={option} \n        label={option} \n        value={option}\n        style={styles.pickerItem}\n      />\n    ));\n  };\n\n  const handleDeleteClick = () => {\n    setShowDeleteConfirmation(true);\n  };\n\n  const handleDeleteConfirm = () => {\n    setShowDeleteConfirmation(false);\n    handleClose();\n  };\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        onRequestClose={handleClose}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <View style={styles.modalContainer}>\n          <Animated.View style={[\n            styles.modalContent,\n            isFromRequestBooking ? {\n              maxHeight: undefined,\n              height: heightAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['325px', '650px']\n              }),\n              transform: [{\n                translateY: heightAnim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0, -40]\n                })\n              }]\n            } : {\n              maxHeight: '80%'\n            }\n          ]}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>{modalTitle}</Text>\n              <TouchableOpacity onPress={handleClose}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n\n            <ScrollView \n              style={styles.scrollView}\n              contentContainerStyle={[\n                styles.scrollViewContent,\n                isFromRequestBooking && isAnyPickerActive && { paddingBottom: 300 }\n              ]}\n            >\n              <View style={[styles.section, { zIndex: 10 }]}>\n                <Text style={styles.label}>Start Date & Time</Text>\n                <DateTimePicker\n                  value={occurrence.startDateTime}\n                  onChange={handleStartDateTimeChange}\n                  error={validationError?.startDateTime}\n                  isMilitary={occurrence.isMilitary}\n                  onPickerStateChange={handlePickerStateChange}\n                />\n              </View>\n\n              <View style={[styles.section, { zIndex: 9 }]}>\n                <Text style={styles.label}>End Date & Time</Text>\n                <DateTimePicker\n                  value={occurrence.endDateTime}\n                  onChange={handleEndDateTimeChange}\n                  error={validationError?.endDateTime}\n                  isMilitary={occurrence.isMilitary}\n                  onPickerStateChange={handlePickerStateChange}\n                />\n              </View>\n\n              {!hideRates && (\n                <>\n                  <View style={[styles.section, { zIndex: 8 }]}>\n                    <Text style={styles.label}>Base Rate</Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.baseRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              baseRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                      <View style={styles.timeUnitInput}>\n                        <Text style={styles.label}>Per</Text>\n                        <Picker\n                          selectedValue={unit_of_time}\n                          onValueChange={(itemValue) => {\n                            if (is_DEBUG) {\n                              console.log('MBA4321 Picker value changed to:', itemValue);\n                            }\n                            setUnitOfTime(itemValue);\n                            setOccurrence(prev => ({\n                              ...prev,\n                              rates: {\n                                ...prev.rates,\n                                unit_of_time: itemValue\n                              }\n                            }));\n                          }}\n                          style={styles.picker}\n                        >\n                          {renderPickerItems(TIME_OPTIONS)}\n                        </Picker>\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 7 }]}>\n                    <Text style={styles.label}>\n                      {screenWidth < 375 \n                        ? `+${occurrence.rates.appliesAfterAnimals} Pet Rate`\n                        : 'Additional Pet Rate'\n                      }\n                    </Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.additionalAnimalRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              additionalAnimalRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                      <View style={styles.timeUnitInput}>\n                        <Text style={styles.label}>Applies After</Text>\n                        <Picker\n                          selectedValue={occurrence.rates.appliesAfterAnimals}\n                          onValueChange={(itemValue) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              appliesAfterAnimals: itemValue\n                            }\n                          }))}\n                          style={styles.picker}\n                        >\n                          {ANIMAL_COUNT_OPTIONS.map((option) => (\n                            <Picker.Item key={option} label={`${option} animal${option === '1' ? '' : 's'}`} value={option} />\n                          ))}\n                        </Picker>\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 6 }]}>\n                    <Text style={styles.label}>Holiday Rate</Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.holidayRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              holidayRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 5 }]}>\n                    <Text style={styles.label}>Additional Rates</Text>\n                    {occurrence.rates.additionalRates.map((rate, index) => (\n                      <View key={index} style={[styles.rateRow, {marginBottom: 10}]}>\n                        <TextInput\n                          style={[styles.input, styles.rateInput]}\n                          value={rate.name}\n                          editable={false}\n                        />\n                        <View style={[styles.rateAmountContainer]}>\n                          <TextInput\n                            style={[styles.input, styles.rateAmountInput]}\n                            value={rate.amount.toString()}\n                            editable={false}\n                          />\n                        </View>\n                        <TouchableOpacity onPress={() => handleDeleteRate(index)}>\n                          <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.error} />\n                        </TouchableOpacity>\n                      </View>\n                    ))}\n\n                    {showAddRate ? (\n                      <>\n                        <View style={styles.rateLabelContainer}>\n                          <Text style={styles.rateTitleLabel}>Rate Title</Text>\n                          <Text style={styles.rateAmountLabel}>Rate Amount</Text>\n                        </View>\n                        <View style={styles.rateRow}>\n                          <TextInput\n                            style={[styles.input, styles.rateInput]}\n                            value={newRate.name}\n                            onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                            placeholder=\"Rate Title\"\n                          />\n                          <View style={[styles.rateAmountContainer]}>\n                            <TextInput\n                              style={[styles.input, styles.rateAmountInput]}\n                              value={newRate.amount}\n                              onChangeText={(text) => setNewRate(prev => ({ \n                                ...prev, \n                                amount: text.replace(/[^0-9.]/g, '') \n                              }))}\n                              keyboardType=\"decimal-pad\"\n                              placeholder=\"0.00\"\n                            />\n                          </View>\n                          <TouchableOpacity onPress={() => handleAddRate()}>\n                            <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    ) : (\n                      <TouchableOpacity \n                        style={styles.addRateButton}\n                        onPress={() => setShowAddRate(true)}\n                      >\n                        <Text style={styles.addRateButtonText}>Add custom rate</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                \n\n                  <View style={styles.totalSection}>\n                    <Text style={styles.totalLabel}>Total:</Text>\n                    {isCalculatingCost ? (\n                      <View style={styles.loadingContainer}>\n                        <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n                      </View>\n                    ) : (\n                      <Text style={styles.totalAmount}>${parseFloat(occurrence.calculatedCost).toFixed(2)}</Text>\n                    )}\n                  </View>\n\n                </>\n              )}\n            </ScrollView>\n\n            <View style={styles.buttonContainer}>\n              <Button \n                mode=\"outlined\" \n                onPress={handleDeleteClick}\n                style={[styles.button, { borderColor: theme.colors.error }]}\n                textColor={theme.colors.error}\n              >\n                Delete\n              </Button>\n              <Button \n                mode=\"contained\" \n                onPress={handleSubmit}\n                style={styles.button}\n              >\n                {isEditing ? 'Save Changes' : 'Add'}\n              </Button>\n            </View>\n            {validationError && (\n              <Text style={styles.errorMessage}>{validationError}</Text>\n            )}\n          </Animated.View>\n        </View>\n      </Modal>\n\n      <ConfirmationModal\n        visible={showDeleteConfirmation}\n        onClose={() => setShowDeleteConfirmation(false)}\n        onConfirm={handleDeleteConfirm}\n        actionText=\"delete this occurrence\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 20,\n    width: '95%',\n    maxWidth: 500,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  section: {\n    position: 'relative',\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 2,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  inputContainer: {\n    position: 'relative',\n    zIndex: 200, // Higher than modal content\n    marginBottom: 16,\n  },\n  dollarSign: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginRight: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 8,\n    backgroundColor: theme.colors.background,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 16,\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 6,\n  },\n  rateSection: {\n    // marginBottom: 10,\n  },\n  rateContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    gap: 12,\n  },\n  baseRateInput: {\n    flex: 1,\n  },\n  timeUnitInput: {\n    flex: 1,\n    marginTop: -32,\n  },\n  picker: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    height: 39,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  totalLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmount: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    marginBottom: 10,\n    width: '100%',\n    flexWrap: 'nowrap',\n  },\n  rateInput: {\n    flex: 2,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    height: 39,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    minWidth: 0,\n  },\n  rateAmountContainer: {\n    flex: 1,\n    minWidth: 0,\n  },\n  rateAmountInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    height: 39,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    width: '100%',\n  },\n  addRateButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  addRateButtonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateLabelContainer: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  rateTitleLabel: {\n    flex: 2,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateAmountLabel: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginLeft: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 8,\n  },\n  loadingContainer: {\n    minWidth: 80,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\nexport default AddOccurrenceModal;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, Modal, ScrollView, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { Button, Text, TextInput } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport AddOccurrenceModal from './AddOccurrenceModal';\nimport { format } from 'date-fns';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SERVICE_TYPE_SUGGESTIONS, mockPets } from '../data/mockData';\nimport ConfirmationModal from './ConfirmationModal';\nimport { validateDateTimeRange } from '../utils/dateTimeValidation';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { getStorage, AuthContext } from '../context/AuthContext';\n\nconst RequestBookingModal = ({ visible, onClose, onSubmit, conversationId }) => {\n  const [selectedService, setSelectedService] = useState('');\n  const { is_DEBUG } = useContext(AuthContext);\n  const [selectedPets, setSelectedPets] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [showPetDropdown, setShowPetDropdown] = useState(false);\n  const [showAddOccurrenceModal, setShowAddOccurrenceModal] = useState(false);\n  const [occurrences, setOccurrences] = useState([]);\n  const [selectedOccurrence, setSelectedOccurrence] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState({\n    visible: false,\n    actionText: '',\n    onConfirm: null,\n    isLoading: false\n  });\n  const [occurrenceErrors, setOccurrenceErrors] = useState({});\n  const [services, setServices] = useState([]);\n  const [pets, setPets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (visible && conversationId) {\n      fetchPreRequestData();\n    } else if (!visible) {\n      // Reset states when modal is closed\n      setIsLoading(false);\n      setError(null);\n    }\n  }, [visible, conversationId]);\n\n  const fetchPreRequestData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      if (is_DEBUG) {\n        console.log('Fetching prerequest data for conversation:', conversationId);\n      }\n      \n      const token = await getStorage('userToken');\n      const response = await axios.get(\n        `${API_BASE_URL}/api/messages/v1/prerequest_booking/${conversationId}/`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (is_DEBUG) {\n        console.log('Prerequest data response:', response.data);\n      }\n      \n      setServices(response.data.services);\n      setPets(response.data.pets);\n      if (is_DEBUG) {\n        console.log('Updated services:', response.data.services);\n        console.log('Updated pets:', response.data.pets);\n      }\n    } catch (err) {\n      if (is_DEBUG) {\n        console.error('Error fetching pre-request data:', err.response || err);\n      }\n      setError('Failed to load booking data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setSelectedService('');\n    setSelectedPets([]);\n    setOccurrences([]);\n    setSelectedOccurrence(null);\n    setIsLoading(false);\n    setError(null);\n  };\n\n  const validateOccurrences = (occs) => {\n    const errors = {};\n    let isValid = true;\n\n    occs.forEach((occ, index) => {\n      const validation = validateDateTimeRange(\n        occ.startDate,\n        occ.endDate,\n        occ.startTime,\n        occ.endTime\n      );\n\n      if (!validation.isValid) {\n        errors[index] = validation.error;\n        isValid = false;\n      }\n    });\n\n    setOccurrenceErrors(errors);\n    return isValid;\n  };\n\n  const handleSubmit = () => {\n    if (occurrences.length === 0) return;\n\n    // Validate all occurrences before submitting\n    if (!validateOccurrences(occurrences)) {\n      return;\n    }\n\n    // Get the selected service object\n    const selectedServiceObj = services.find(s => s.service_name === selectedService);\n    if (!selectedServiceObj) {\n      setError('Please select a valid service');\n      return;\n    }\n\n    const bookingData = {\n      conversation_id: conversationId,\n      service_type: selectedServiceObj.service_id,\n      pets: selectedPets,\n      occurrences: occurrences.map(occ => ({\n        start_date: occ.startDate,\n        end_date: occ.endDate || occ.startDate,\n        start_time: occ.startTime,\n        end_time: occ.endTime\n      }))\n    };\n\n    if (is_DEBUG) {\n      console.log('Sending booking data:', JSON.stringify(bookingData, null, 2));\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    onSubmit(bookingData)\n      .then(() => {\n        resetForm();\n        onClose();\n      })\n      .catch(err => {\n        const errorMessage = err.response?.data?.error || 'Failed to create booking request';\n        setError(errorMessage);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteOccurrence = async (occurrenceToDelete) => {\n    setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n    \n    try {\n      setOccurrences(prev => prev.filter(occ => \n        occ.startDate !== occurrenceToDelete.startDate || \n        occ.startTime !== occurrenceToDelete.startTime\n      ));\n    } finally {\n      setConfirmationModal({ \n        visible: false, \n        actionText: '', \n        onConfirm: null, \n        isLoading: false \n      });\n    }\n  };\n\n  const confirmDeleteOccurrence = (occurrence) => {\n    setConfirmationModal({\n      visible: true,\n      actionText: 'delete this occurrence',\n      onConfirm: () => handleDeleteOccurrence(occurrence),\n      isLoading: false\n    });\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleOpenOccurrenceModal = () => {\n    setShowServiceDropdown(false);\n    setShowPetDropdown(false);\n    setShowAddOccurrenceModal(true);\n  };\n\n  const handleOccurrenceUpdate = (newOccurrence) => {\n    const { startDate, endDate, startTime, endTime } = newOccurrence;\n    \n    // Validate the new occurrence\n    const validation = validateDateTimeRange(startDate, endDate, startTime, endTime);\n    \n    if (!validation.isValid) {\n      // Show error in the AddOccurrenceModal\n      // You'll need to add error handling in the AddOccurrenceModal component\n      return false;\n    }\n\n    if (selectedOccurrence) {\n      setOccurrences(prev => prev.map(occ => \n        occ === selectedOccurrence ? \n        { startDate, endDate, startTime, endTime } : \n        occ\n      ));\n    } else {\n      setOccurrences(prev => [...prev, { startDate, endDate, startTime, endTime }]);\n    }\n    setSelectedOccurrence(null);\n    setShowAddOccurrenceModal(false);\n    return true;\n  };\n\n  const renderServiceDropdown = () => (\n    <View style={styles.dropdownContainer}>\n      <TouchableOpacity\n        style={styles.dropdownInput}\n        onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n      >\n        <Text>{selectedService || 'Select Service Type'}</Text>\n        <MaterialCommunityIcons \n          name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={24} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n\n      {showServiceDropdown && (\n        <View style={styles.dropdownList}>\n          <ScrollView nestedScrollEnabled={true}>\n            {services.map((service) => (\n              <TouchableOpacity\n                key={service.service_id}\n                style={styles.dropdownItem}\n                onPress={() => {\n                  setSelectedService(service.service_name);\n                  setShowServiceDropdown(false);\n                }}\n              >\n                <Text style={[\n                  styles.dropdownText,\n                  selectedService === service.service_name && styles.selectedOption\n                ]}>\n                  {service.service_name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderPetSelector = () => (\n    <View style={{ zIndex: 2 }}>\n      {selectedPets.map((petId) => {\n        const pet = pets.find(p => p.pet_id === petId);\n        return (\n          <View key={petId} style={styles.petItem}>\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petDetails}>{pet.pet_type} • {pet.breed}</Text>\n            </View>\n            <TouchableOpacity\n              onPress={() => setSelectedPets(prev => prev.filter(id => id !== petId))}\n            >\n              <MaterialCommunityIcons \n                name=\"close\" \n                size={24} \n                color={theme.colors.error} \n              />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      \n      <TouchableOpacity\n        style={styles.addPetButton}\n        onPress={() => setShowPetDropdown(!showPetDropdown)}\n      >\n        <MaterialCommunityIcons \n          name={showPetDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={20} \n          color={theme.colors.primary} \n        />\n        <Text style={styles.addPetText}>\n          {selectedPets.length === 0 ? 'Select Pets' : 'Add Pet'}\n        </Text>\n      </TouchableOpacity>\n      \n      {showPetDropdown && (\n        <View style={styles.dropdownList}>\n          <ScrollView nestedScrollEnabled={true} style={styles.petDropdown}>\n            {pets\n              .filter(pet => !selectedPets.includes(pet.pet_id))\n              .map((pet) => (\n                <TouchableOpacity\n                  key={pet.pet_id}\n                  style={styles.dropdownItem}\n                  onPress={() => {\n                    setSelectedPets(prev => [...prev, pet.pet_id]);\n                    setShowPetDropdown(false);\n                  }}\n                >\n                  <View>\n                    <Text style={styles.dropdownPetName}>{pet.name}</Text>\n                    <Text style={styles.dropdownPetDetails}>\n                      {pet.pet_type} • {pet.breed}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderOccurrenceCard = (occ, index) => (\n    <View key={index}>\n      <TouchableOpacity \n        style={[\n          styles.occurrenceCard,\n          occurrenceErrors[index] && styles.occurrenceCardError\n        ]}\n      >\n        <View style={styles.occurrenceDetails}>\n          <Text style={styles.dateText}>\n            {occ.endDate && occ.startDate !== occ.endDate ? \n              `${occ.startDate} - ${occ.endDate}` :\n              occ.startDate\n            }\n          </Text>\n          <Text style={styles.timeText}>\n            {`${occ.startTime} - ${occ.endTime}`}\n          </Text>\n          {occurrenceErrors[index] && (\n            <Text style={styles.errorText}>{occurrenceErrors[index]}</Text>\n          )}\n        </View>\n        <View style={styles.occurrenceActions}>\n          <TouchableOpacity \n            style={styles.actionButton}\n            onPress={() => confirmDeleteOccurrence(occ)}\n          >\n            <MaterialCommunityIcons name=\"trash-can-outline\" size={20} color={theme.colors.error} />\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.actionButton}\n            onPress={() => {\n              setSelectedOccurrence(occ);\n              handleOpenOccurrenceModal();\n            }}\n          >\n            <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <Modal\n      visible={visible}\n      onRequestClose={handleClose}\n      animationType=\"slide\"\n      transparent={true}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Request Booking</Text>\n          \n          {isLoading ? (\n            <View style={styles.loadingContainer}>\n              <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              <Text>Loading booking data...</Text>\n            </View>\n          ) : error ? (\n            <View style={styles.errorContainer}>\n              <Text style={styles.errorText}>{error}</Text>\n              <Button mode=\"contained\" onPress={fetchPreRequestData}>\n                Retry\n              </Button>\n            </View>\n          ) : (\n            <ScrollView style={styles.scrollView}>\n              {/* Service Selection */}\n              <Text style={styles.label}>Select Service</Text>\n              {renderServiceDropdown()}\n\n              {/* Pet Selection */}\n              <Text style={styles.label}>Select Pets</Text>\n              {renderPetSelector()}\n\n              {/* Date & Time Selection */}\n              <Text style={styles.label}>Select Date & Time</Text>\n              {occurrences.map((occ, index) => renderOccurrenceCard(occ, index))}\n\n              <TouchableOpacity\n                style={styles.addOccurrenceButton}\n                onPress={() => {\n                  setSelectedOccurrence(null);\n                  handleOpenOccurrenceModal();\n                }}\n              >\n                <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />\n                <Text style={styles.addOccurrenceText}>Add Date & Time</Text>\n              </TouchableOpacity>\n            </ScrollView>\n          )}\n\n          <View style={styles.buttonContainer}>\n            <Button mode=\"outlined\" onPress={handleClose} style={styles.button}>\n              Cancel\n            </Button>\n            <Button \n              mode=\"contained\" \n              onPress={handleSubmit}\n              style={styles.button}\n              disabled={!selectedService || selectedPets.length === 0 || occurrences.length === 0 || isLoading}\n            >\n              Submit\n            </Button>\n          </View>\n        </View>\n      </View>\n\n      <AddOccurrenceModal\n        visible={showAddOccurrenceModal}\n        onClose={() => setShowAddOccurrenceModal(false)}\n        onAdd={handleOccurrenceUpdate}\n        hideRates={true}\n        initialOccurrence={selectedOccurrence}\n        modalTitle={selectedOccurrence ? 'Edit Occurrence' : 'Add New Occurrence'}\n        isFromRequestBooking={true}\n      />\n\n      <ConfirmationModal\n        visible={confirmationModal.visible}\n        actionText={confirmationModal.actionText}\n        onClose={() => {\n          if (!confirmationModal.isLoading) {\n            setConfirmationModal({ \n              visible: false, \n              actionText: '', \n              onConfirm: null, \n              isLoading: false \n            });\n          }\n        }}\n        onConfirm={confirmationModal.onConfirm}\n        isLoading={confirmationModal.isLoading}\n      />\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  scrollView: {\n    maxHeight: '70%',\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  serviceOptions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  serviceButton: {\n    marginBottom: 10,\n  },\n  petOptions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  petButton: {\n    marginBottom: 10,\n  },\n  dateContainer: {\n    gap: 10,\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    gap: 10,\n  },\n  button: {\n    flex: 1,\n  },\n  timePickerWrapper: {\n    flex: 1,\n  },\n  dropdownContainer: {\n    position: 'relative',\n    marginBottom: 20,\n    zIndex: 3,\n  },\n  dropdownInput: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  dropdownList: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    maxHeight: 200,\n    zIndex: 1000,\n    elevation: 5,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownText: {\n    color: theme.colors.text,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  petItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petName: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  petDetails: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n  },\n  addPetButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginTop: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    justifyContent: 'center',\n  },\n  addPetText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n  occurrenceCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  occurrenceDetails: {\n    flex: 1,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n  },\n  addOccurrenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    marginTop: 12,\n  },\n  addOccurrenceText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n  occurrenceActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  actionButton: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.error,\n    borderRadius: 4,\n  },\n  bookingRequestCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    margin: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  bookingRequestHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    gap: 8,\n  },\n  bookingRequestTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  bookingRequestDetails: {\n    gap: 8,\n  },\n  detailLabel: {\n    fontSize: theme.fontSizes.smallMedium,\n    fontWeight: '500',\n    color: theme.colors.placeholder,\n  },\n  detailText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  acceptButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  acceptButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  occurrenceCardError: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n});\n\nexport default RequestBookingModal; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  Image,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\nimport { getBookingAvailableServices, getBookingAvailablePets } from '../../api/API';\nimport axios from 'axios';\nimport { navigateToFrom } from '../Navigation';\n\nconst ServiceAndPetsCard = ({ \n  bookingId, \n  onServiceSelect, \n  onPetSelect, \n  selectedService, \n  selectedPets,\n  isLoading,\n  error,\n  onNext,\n  currentBookingId,\n  navigation,\n  onClose\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  const [availableServices, setAvailableServices] = useState([]);\n  const [availablePets, setAvailablePets] = useState([]);\n  const [isLoadingServices, setIsLoadingServices] = useState(false);\n  const [isLoadingPets, setIsLoadingPets] = useState(false);\n  const [serviceError, setServiceError] = useState(null);\n  const [petsError, setPetsError] = useState(null);\n\n  useEffect(() => {\n    if (bookingId) {\n      fetchAvailableServices();\n      fetchAvailablePets();\n    }\n  }, [bookingId]);\n\n  const fetchAvailableServices = async () => {\n    try {\n      setIsLoadingServices(true);\n      setServiceError(null);\n      const response = await getBookingAvailableServices(bookingId);\n      if (is_DEBUG) {\n        console.log('MBA12345 Available services response:', response);\n      }\n      setAvailableServices(response.services);\n      \n      // If there's a selected service in the response and no service is currently selected,\n      // automatically select it\n      if (response.selected_service_id && !selectedService) {\n        const serviceToSelect = response.services.find(s => s.service_id === response.selected_service_id);\n        if (serviceToSelect) {\n          onServiceSelect({\n            ...serviceToSelect,\n            isOvernightForced: serviceToSelect.is_overnight\n          });\n        }\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA12345 Error fetching services:', error);\n      }\n      setServiceError('Failed to load available services');\n    } finally {\n      setIsLoadingServices(false);\n    }\n  };\n\n  const fetchAvailablePets = async () => {\n    try {\n      setIsLoadingPets(true);\n      setPetsError(null);\n      const response = await getBookingAvailablePets(bookingId);\n      if (is_DEBUG) {\n        console.log('MBA12345 Available pets response:', response);\n      }\n      setAvailablePets(response.pets);\n      \n      // If there are selected pets in the response and no pets are currently selected,\n      // automatically select them\n      if (response.selected_pet_ids && response.selected_pet_ids.length > 0 && selectedPets.length === 0) {\n        const petsToSelect = response.pets.filter(p => response.selected_pet_ids.includes(p.pet_id));\n        petsToSelect.forEach(pet => onPetSelect(pet));\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA12345 Error fetching pets:', error);\n      }\n      setPetsError('Failed to load available pets');\n    } finally {\n      setIsLoadingPets(false);\n    }\n  };\n\n  // TODO: change to animal type based icons\n  const getServiceIcon = (serviceName) => {\n    switch (serviceName.toLowerCase()) {\n      case 'dog walking':\n        return 'paw';\n      case 'house sitting':\n        return 'home';\n      case 'drop-in visits':\n        return 'food-variant';\n      case 'boarding':\n        return 'home-city';\n      default:\n        return 'paw';\n    }\n  };\n\n  const renderServiceCard = (service) => {\n    const isSelected = selectedService?.service_id === service.service_id;\n    \n    return (\n      <TouchableOpacity\n        key={service.service_id}\n        style={[\n          styles.serviceCard,\n          isSelected && styles.selectedServiceCard\n        ]}\n        onPress={() => onServiceSelect({\n          ...service,\n          isOvernightForced: service.is_overnight\n        })}\n      >\n        {/* TODO: change to animal type based icons */}\n        <MaterialCommunityIcons \n          name={getServiceIcon(service.service_name)}\n          size={24}\n          color={isSelected ? theme.colors.mainColors.main : theme.colors.text}\n        />\n        <Text style={[\n          styles.serviceText,\n          isSelected && styles.selectedServiceText\n        ]}>\n          {service.service_name}\n        </Text>\n        {isSelected && (\n          <MaterialCommunityIcons \n            name=\"check\" \n            size={24} \n            color={theme.colors.mainColors.main}\n            style={styles.serviceCheckIcon}\n          />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  const renderPetCard = (pet) => {\n    const isSelected = selectedPets.some(selectedPet => selectedPet.pet_id === pet.pet_id);\n    \n    return (\n      <TouchableOpacity\n        key={pet.pet_id}\n        style={[\n          styles.petCard,\n          isSelected && styles.selectedPetCard\n        ]}\n        onPress={() => onPetSelect(pet)}\n      >\n        <View style={styles.petImageContainer}>\n          {pet.image_url ? (\n            <Image \n              source={{ uri: pet.image_url }} \n              style={styles.petImage}\n              defaultSource={require('../../../assets/default-pet-image.png')}\n            />\n          ) : (\n            <View style={styles.defaultPetImage}>\n              <MaterialCommunityIcons \n                name=\"paw\" \n                size={24} \n                color={theme.colors.placeHolderText}\n              />\n            </View>\n          )}\n        </View>\n        <View style={styles.petInfo}>\n          <Text style={styles.petName}>{pet.name}</Text>\n          <Text style={styles.petDetails}>\n            {pet.breed} • {pet.age} years\n          </Text>\n        </View>\n        {isSelected && (\n          <MaterialCommunityIcons \n            name=\"check\" \n            size={24} \n            color={theme.colors.mainColors.main}\n            style={styles.checkIcon}\n          />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  const renderSelectedItems = () => {\n    if (!selectedService && selectedPets.length === 0) return null;\n\n    return (\n      <View style={styles.selectedItemsContainer}>\n        <Text style={styles.selectedItemsTitle}>Selected Service & Pets:</Text>\n        <View style={styles.selectedItemsContent}>\n          {selectedService && (\n            <TouchableOpacity \n              style={styles.selectedTag}\n              onPress={() => onServiceSelect(null)}\n            >\n              <Text style={styles.selectedTagText}>{selectedService.service_name}</Text>\n              <MaterialCommunityIcons name=\"close\" size={16} color={theme.colors.mainColors.main} />\n            </TouchableOpacity>\n          )}\n          {selectedPets.map(pet => (\n            <TouchableOpacity \n              key={pet.pet_id}\n              style={styles.selectedTag}\n              onPress={() => onPetSelect(pet)}\n            >\n              <Text style={styles.selectedTagText}>{pet.name}</Text>\n              <MaterialCommunityIcons name=\"close\" size={16} color={theme.colors.mainColors.main} />\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const handleNext = async () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleNext:', {\n        selectedService,\n        selectedPets,\n        currentBookingId\n      });\n    }\n\n    if (!selectedService || selectedPets.length === 0) {\n      Alert.alert('Error', 'Please select both a service and at least one pet before proceeding.');\n      return;\n    }\n\n    try {\n      // Update the draft with selected service and pets\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/booking_drafts/v1/${currentBookingId}/update/`,\n        {\n          service_id: selectedService.service_id,\n          pet_ids: selectedPets.map(pet => pet.pet_id)\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA98765 Draft update response:', response.data);\n      }\n\n      // If successful, proceed to next step\n      onNext();\n    } catch (error) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Error updating draft:', error);\n      }\n      Alert.alert('Error', 'Failed to update booking draft. Please try again.');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.mainColors.main} />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Select Service</Text>\n        {serviceError ? (\n          <Text style={styles.errorText}>{serviceError}</Text>\n        ) : isLoadingServices ? (\n          <ActivityIndicator size=\"small\" color={theme.colors.mainColors.main} />\n        ) : availableServices.length > 0 ? (\n          <View style={styles.servicesGrid}>\n            {availableServices.map(service => renderServiceCard(service))}\n          </View>\n        ) : (\n          <View style={styles.noServicesContainer}>\n            <Text style={styles.errorText}>No services available. Please add services to create a booking.</Text>\n            <TouchableOpacity \n              style={styles.createServiceButton} \n              onPress={() => {\n                onClose();\n                navigateToFrom(navigation, 'ServiceManager', 'MessageHistory');\n              }}\n            >\n              <Text style={styles.createServiceButtonText}>Create Services</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Select Pets</Text>\n        {petsError ? (\n          <Text style={styles.errorText}>{petsError}</Text>\n        ) : isLoadingPets ? (\n          <ActivityIndicator size=\"small\" color={theme.colors.mainColors.main} />\n        ) : (\n          availablePets.length > 0 ? (\n            <View style={styles.petsContainer}>\n              {availablePets.map(pet => renderPetCard(pet))}\n            </View>\n          ) : (\n            <Text style={styles.errorText}>Please instruct client to add pets to their account so you can create a booking for their pets.</Text>\n          )\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  section: {\n    padding: 16,\n  },\n  sectionTitle: {\n    fontSize: Platform.OS === 'web' ? 18 : 14,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 16,\n    color: theme.colors.text,\n  },\n  servicesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    justifyContent: 'flex-start',\n    width: '100%',\n  },\n  serviceCard: {\n    width: '31%',\n    minWidth: 100,\n    maxWidth: 150,\n    aspectRatio: 1.2,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginBottom: 8,\n  },\n  selectedServiceCard: {\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderColor: theme.colors.mainColors.main,\n  },\n  serviceText: {\n    marginTop: 8,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    width: '100%',\n  },\n  selectedServiceText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  petsContainer: {\n    gap: 12,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n  petCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    width: Platform.OS === 'web' ? 'calc(50% - 6px)' : '100%',\n    minWidth: Platform.OS === 'web' ? 250 : 'auto',\n    maxWidth: Platform.OS === 'web' ? 400 : '100%',\n  },\n  selectedPetCard: {\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderColor: theme.colors.mainColors.main,\n  },\n  petImageContainer: {\n    marginRight: 12,\n  },\n  petImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  defaultPetImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petName: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 4,\n    color: theme.colors.text,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  checkIcon: {\n    marginLeft: 12,\n  },\n  selectedItemsContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.03)',\n    padding: 16,\n    borderRadius: 8,\n  },\n  selectedItemsTitle: {\n    fontSize: Platform.OS === 'web' ? 14 : 10,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 16,\n    color: theme.colors.text,\n  },\n  selectedItemsContent: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  selectedTag: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderRadius: 20,\n    paddingVertical: 6,\n    paddingHorizontal: 12,\n    gap: 8,\n  },\n  selectedTagText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceCheckIcon: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n  },\n  createServiceButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceAndPetsCard; ","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  Modal,\n  Platform,\n  Image,\n  Animated,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\n\nconst DateSelectionCard = ({ \n  selectedDates = [], \n  onDateSelect,\n  bookingType = 'one-time', // 'one-time' or 'recurring'\n  dateRangeType = 'date-range', // 'date-range' or 'multiple-days'\n  initialDateRange = null,\n  isOvernightForced = false,\n}) => {\n  const { is_DEBUG, screenWidth } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [selectedDatesList, setSelectedDatesList] = useState(selectedDates);\n  const [selectedBookingType, setSelectedBookingType] = useState(isOvernightForced ? 'one-time' : bookingType);\n  const [selectedDateRangeType, setSelectedDateRangeType] = useState('date-range');\n  const [rangeStartDate, setRangeStartDate] = useState(initialDateRange ? initialDateRange.startDate : null);\n  const [selectedDaysOfWeek, setSelectedDaysOfWeek] = useState([1, 3]); // Default to M,W\n  const [selectedFrequency, setSelectedFrequency] = useState('weekly'); // 'weekly', 'bi-weekly', 'monthly'\n  const [dateRangeEnd, setDateRangeEnd] = useState(initialDateRange ? initialDateRange.endDate : null);\n  const [showRecurringCalendar, setShowRecurringCalendar] = useState(false);\n  const [recurringStartDate, setRecurringStartDate] = useState(new Date());\n  const [recurringEndDate, setRecurringEndDate] = useState(() => {\n    const date = new Date();\n    date.setMonth(date.getMonth() + 1);\n    return date;\n  });\n  const [isSelectingStartDate, setIsSelectingStartDate] = useState(true);\n  const [showRecurringPreview, setShowRecurringPreview] = useState(false);\n  const [showRecurringDropdownCalendar, setShowRecurringDropdownCalendar] = useState(false);\n  const [tempRangeStart, setTempRangeStart] = useState(null);\n  const [tempRangeEnd, setTempRangeEnd] = useState(null);\n  const [datesFromRange, setDatesFromRange] = useState(false);\n  const [lastRangeSelection, setLastRangeSelection] = useState(null);\n\n  useEffect(() => {\n    debugLog('MBA54321 DateSelectionCard initialized with dates:', selectedDates);\n    debugLog('MBA54321 Current booking type:', bookingType);\n    debugLog('MBA54321 Current date range type:', dateRangeType);\n    debugLog('MBA54321 Initial date range:', initialDateRange);\n    debugLog('MBA54321 isOvernightForced:', isOvernightForced);\n    \n    // Set the booking type and date range type from props\n    setSelectedBookingType(isOvernightForced ? 'one-time' : bookingType);\n    \n    // For overnight services, ALWAYS force date-range selection type\n    // For non-overnight services, ALWAYS force multiple-days selection type\n    if (isOvernightForced) {\n      setSelectedDateRangeType('date-range');\n    } else {\n      // TODO: [NON-OVERNIGHT Date Range Feature] This is for date ranges for non-overnight services, uncomment after MVP launch\n      // // Check if the dates are non-consecutive to enforce multiple-days mode\n      // if (selectedDates && selectedDates.length > 1) {\n      //   const datesArray = selectedDates.map(dateItem => {\n      //     if (dateItem instanceof Date) {\n      //       return dateItem;\n      //     } else if (typeof dateItem === 'object' && dateItem.date) {\n      //       return new Date(dateItem.date);\n      //     } else {\n      //       return new Date(dateItem);\n      //     }\n      //   }).sort((a, b) => a - b);\n        \n      //   // Check if dates are consecutive\n      //   let areConsecutive = true;\n      //   for (let i = 1; i < datesArray.length; i++) {\n      //     const prevDate = new Date(datesArray[i-1]);\n      //     const currDate = new Date(datesArray[i]);\n      //     prevDate.setDate(prevDate.getDate() + 1);\n          \n      //     if (prevDate.getTime() !== currDate.getTime()) {\n      //       areConsecutive = false;\n      //       break;\n      //     }\n      //   }\n        \n      //   // Set appropriate date range type\n      //   if (!areConsecutive) {\n      setSelectedDateRangeType('multiple-days');\n      // TODO: [NON-OVERNIGHT Date Range Feature] This is for date ranges for non-overnight services, uncomment after MVP launch\n      //     debugLog('MBA54321 Non-consecutive dates detected, enforcing multiple-days mode');\n      //   } else {\n      //     setSelectedDateRangeType(dateRangeType);\n      //   }\n      // } else {\n      //   setSelectedDateRangeType(dateRangeType);\n      // }\n    }\n    \n    // Handle dates from draft that might be in a different format\n    if (selectedDates && selectedDates.length > 0) {\n      // Check if the dates are already Date objects or if they're objects with a date property\n      const datesArray = selectedDates.map(dateItem => {\n        if (dateItem instanceof Date) {\n          return dateItem; // Already a Date object\n        } else if (typeof dateItem === 'object' && dateItem.date) {\n          // It's a date object with a date property (from draft data)\n          // Format is typically { date: '2023-05-01', startTime: '09:00', endTime: '17:00' }\n          return new Date(dateItem.date);\n        } else {\n          // Unknown format, try to parse as date\n          return new Date(dateItem);\n        }\n      });\n      \n      setSelectedDatesList(datesArray);\n      \n      // If in date-range mode and dates are consecutive, set the range start and end dates\n      const areConsecutiveDates = checkIfConsecutiveDates(datesArray);\n      \n      if ((dateRangeType === 'date-range' || isOvernightForced) && datesArray.length > 0 && areConsecutiveDates) {\n        // Sort dates to get min and max\n        const sortedDates = [...datesArray].sort((a, b) => a - b);\n        setRangeStartDate(sortedDates[0]);\n        setDateRangeEnd(sortedDates[sortedDates.length - 1]);\n        setDatesFromRange(true);\n      } else if (datesArray.length > 0) {\n        // For non-consecutive dates, we'll stay in multiple-days mode\n        setDatesFromRange(false);\n      }\n      \n      // Notify parent component that we have valid dates\n      if (onDateSelect) {\n        // TODO: [NON-OVERNIGHT Date Range Feature] Add this back to the conditional below instead of just multiple days\n        // (!areConsecutiveDates ? 'multiple-days' : dateRangeType),\n        const dateData = {\n          type: bookingType,\n          dates: datesArray,\n          rangeType: isOvernightForced ? 'date-range' : 'multiple-days',\n          isValid: true\n        };\n        \n        // Add range data if in date-range mode and dates are consecutive\n        if ((dateRangeType === 'date-range' || isOvernightForced) && \n            datesArray.length > 0 && \n            areConsecutiveDates) {\n          const sortedDates = [...datesArray].sort((a, b) => a - b);\n          dateData.startDate = sortedDates[0];\n          dateData.endDate = sortedDates[sortedDates.length - 1];\n        }\n        \n        onDateSelect(dateData);\n      }\n    }\n  }, []);\n\n  // Helper function to check if an array of dates contains only consecutive dates\n  const checkIfConsecutiveDates = (datesArray) => {\n    if (!datesArray || datesArray.length <= 1) return true;\n    \n    // Sort the dates\n    const sortedDates = [...datesArray].sort((a, b) => a - b);\n    \n    // Check if each date is exactly one day after the previous\n    for (let i = 1; i < sortedDates.length; i++) {\n      const prevDate = new Date(sortedDates[i-1]);\n      const currDate = new Date(sortedDates[i]);\n      prevDate.setDate(prevDate.getDate() + 1);\n      \n      if (prevDate.getTime() !== currDate.getTime()) {\n        debugLog('MBA54321 Non-consecutive dates found:', {\n          prev: sortedDates[i-1].toISOString().split('T')[0],\n          current: sortedDates[i].toISOString().split('T')[0]\n        });\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Initialize date range if provided separately via initialDateRange\n  useEffect(() => {\n    if (initialDateRange && initialDateRange.startDate && initialDateRange.endDate && !datesFromRange) {\n      // Check if we already have selectedDatesList populated\n      // If so, we need to determine if these are non-consecutive dates\n      if (selectedDatesList.length > 0 && !checkIfConsecutiveDates(selectedDatesList)) {\n        debugLog('MBA54321 Non-consecutive dates already loaded, not converting to range');\n        \n        // We already have non-consecutive dates, don't override with a range\n        if (onDateSelect) {\n          onDateSelect({\n            type: bookingType,\n            dates: selectedDatesList,\n            rangeType: 'multiple-days',\n            isValid: selectedDatesList.length > 0\n          });\n        }\n        return;\n      }\n      \n      const dateRange = [];\n      const currentDate = new Date(initialDateRange.startDate);\n      const endDate = new Date(initialDateRange.endDate);\n      \n      while (currentDate <= endDate) {\n        dateRange.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      \n      setSelectedDatesList(dateRange);\n      setRangeStartDate(new Date(initialDateRange.startDate));\n      setDateRangeEnd(new Date(initialDateRange.endDate));\n      setDatesFromRange(true);\n\n      if (onDateSelect) {\n        onDateSelect({\n          type: bookingType,\n          dates: dateRange,\n          rangeType: 'date-range',\n          startDate: new Date(initialDateRange.startDate),\n          endDate: new Date(initialDateRange.endDate),\n          isValid: true\n        });\n      }\n    }\n  }, [initialDateRange, datesFromRange]);\n\n  const handleBookingTypeSelect = (type) => {\n    if (isOvernightForced) return; // Prevent booking type changes for overnight services\n    \n    if (is_DEBUG) {\n      console.log('MBA54321 Booking type selected:', type);\n    }\n    setSelectedBookingType(type);\n    // Clear selected dates when changing booking type\n    setSelectedDatesList([]);\n    setRangeStartDate(null);\n    setDateRangeEnd(null);\n    setDatesFromRange(false);\n  };\n\n  const handleDateRangeTypeSelect = (type) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Date range type selected:', type);\n      console.log('MBA54321 Current range data:', {\n        rangeStartDate,\n        dateRangeEnd,\n        selectedDatesList: selectedDatesList.length\n      });\n    }\n    \n    // Check if we're switching to date-range with non-consecutive dates\n    if (type === 'date-range' && selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      debugLog('MBA54321 Cannot switch to date-range with existing non-consecutive dates');\n      // The UI will handle this by clearing dates first, so we don't need additional handling here\n      return;\n    }\n    \n    setSelectedDateRangeType(type);\n    \n    if (type === 'date-range' && lastRangeSelection) {\n      // Only restore the last range selection when switching to date-range\n      // if those dates were actually consecutive\n      if (checkIfConsecutiveDates(lastRangeSelection.dates)) {\n        setRangeStartDate(lastRangeSelection.startDate);\n        setDateRangeEnd(lastRangeSelection.endDate);\n        setSelectedDatesList(lastRangeSelection.dates);\n        setDatesFromRange(true);\n        \n        if (onDateSelect) {\n          onDateSelect({\n            type: 'one-time',\n            dates: lastRangeSelection.dates,\n            rangeType: 'date-range',\n            startDate: lastRangeSelection.startDate,\n            endDate: lastRangeSelection.endDate,\n            isValid: true\n          });\n        }\n      } else {\n        // Current dates are not consecutive - keep in multiple-days mode and show warning\n        debugLog('MBA54321 Cannot switch to date-range with non-consecutive dates');\n        \n        // Revert the UI selection\n        setTimeout(() => {\n          setSelectedDateRangeType('multiple-days');\n        }, 100);\n        \n        // Keep the existing dates in multiple-days mode\n        if (onDateSelect) {\n          onDateSelect({\n            type: 'one-time',\n            dates: selectedDatesList,\n            rangeType: 'multiple-days',\n            isValid: selectedDatesList.length > 0\n          });\n        }\n      }\n    } else if (type === 'multiple-days') {\n      // Store the current range selection before switching to multiple-days\n      if (rangeStartDate && dateRangeEnd) {\n        setLastRangeSelection({\n          startDate: rangeStartDate,\n          endDate: dateRangeEnd,\n          dates: selectedDatesList\n        });\n      }\n      \n      // Keep the selected dates when switching to multiple-days\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: selectedDatesList,\n          rangeType: 'multiple-days',\n          isValid: selectedDatesList.length > 0\n        });\n      }\n    }\n  };\n\n  const handleDayOfWeekSelect = (dayIndex) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Day of week toggled:', dayIndex);\n    }\n    \n    setSelectedDaysOfWeek(prev => {\n      if (prev.includes(dayIndex)) {\n        return prev.filter(day => day !== dayIndex);\n      } else {\n        return [...prev, dayIndex];\n      }\n    });\n  };\n\n  const handleFrequencySelect = (frequency) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Frequency selected:', frequency);\n    }\n    setSelectedFrequency(frequency);\n  };\n\n  const goToPreviousMonth = () => {\n    const prevMonth = new Date(currentMonth);\n    prevMonth.setMonth(prevMonth.getMonth() - 1);\n    setCurrentMonth(prevMonth);\n  };\n\n  const goToNextMonth = () => {\n    const nextMonth = new Date(currentMonth);\n    nextMonth.setMonth(nextMonth.getMonth() + 1);\n    setCurrentMonth(nextMonth);\n  };\n\n  const isDateSelected = (date) => {\n    return selectedDatesList.some(selectedDate => {\n      // Ensure selectedDate is a proper Date object\n      if (!(selectedDate instanceof Date)) {\n        // Try to convert selectedDate to a Date if it's not already one\n        if (typeof selectedDate === 'string') {\n          selectedDate = new Date(selectedDate);\n        } else if (selectedDate && typeof selectedDate.date === 'string') {\n          selectedDate = new Date(selectedDate.date);\n        } else {\n          // Return false if we can't convert to a Date\n          return false;\n        }\n      }\n      \n      // Now safe to call Date methods\n      return selectedDate.getDate() === date.getDate() && \n             selectedDate.getMonth() === date.getMonth() && \n             selectedDate.getFullYear() === date.getFullYear();\n    });\n  };\n\n  const isDateInRange = (date) => {\n    if (!rangeStartDate || !dateRangeEnd) return false;\n    \n    return date >= rangeStartDate && date <= dateRangeEnd;\n  };\n\n  const handleDateSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Date selected:', date);\n    }\n\n    if (isOvernightForced || selectedDateRangeType === 'date-range') {\n      handleDateRangeSelection(date);\n    } else {\n      // Multiple days selection\n      toggleDateSelection(date);\n    }\n  };\n\n  const handleDateRangeSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b handleDateRangeSelection - date:', date);\n      console.log('MBA19ynkiy34b handleDateRangeSelection - current state:', {\n        rangeStartDate,\n        dateRangeEnd,\n        selectedDatesList: selectedDatesList.length\n      });\n    }\n\n    // If we have non-consecutive dates but we're in date-range mode,\n    // we should clear them first\n    if (selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      debugLog('MBA19ynkiy34b handleDateRangeSelection - clearing non-consecutive dates for date range');\n      setSelectedDatesList([date]);\n      setRangeStartDate(date);\n      setDateRangeEnd(null);\n      setDatesFromRange(false);\n      \n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n      return;\n    }\n\n    // First check if we already have non-consecutive dates selected\n    if (selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      // We have non-consecutive dates, so we should be in multiple-days mode\n      if (selectedDateRangeType !== 'multiple-days') {\n        debugLog('MBA19ynkiy34b Non-consecutive dates exist, forcing multiple-days mode');\n        setSelectedDateRangeType('multiple-days');\n      }\n      \n      // Handle the date click as a toggle in multiple-days mode\n      toggleDateSelection(date);\n      return;\n    }\n\n    if (!rangeStartDate) {\n      setRangeStartDate(date);\n      setSelectedDatesList([date]);\n      setDateRangeEnd(null);\n      setLastRangeSelection(null); // Clear last range when starting new selection\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - first date selected');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n    } else if (!dateRangeEnd) {\n      let startDate = new Date(rangeStartDate);\n      let endDate = new Date(date);\n      \n      if (date < rangeStartDate) {\n        startDate = new Date(date);\n        endDate = new Date(rangeStartDate);\n      }\n      \n      setDateRangeEnd(endDate);\n      \n      const dateRange = [];\n      const currentDate = new Date(startDate);\n      \n      while (currentDate <= endDate) {\n        dateRange.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      \n      setSelectedDatesList(dateRange);\n      // Store the new range selection\n      setLastRangeSelection({\n        startDate: startDate,\n        endDate: endDate,\n        dates: dateRange\n      });\n\n      if (onDateSelect) {\n        const data = {\n          type: 'one-time',\n          dates: dateRange,\n          rangeType: 'date-range',\n          startDate: startDate,\n          endDate: endDate,\n          isValid: true\n        };\n        if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - complete range selected, sending data:', data);\n        onDateSelect(data);\n      }\n    } else {\n      setRangeStartDate(date);\n      setSelectedDatesList([date]);\n      setDateRangeEnd(null);\n      setLastRangeSelection(null); // Clear last range when starting new selection\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - resetting selection');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n    }\n  };\n\n  const toggleDateSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b toggleDateSelection - date:', date);\n      console.log('MBA19ynkiy34b toggleDateSelection - current selected dates:', selectedDatesList.length);\n    }\n\n    const isAlreadySelected = isDateSelected(date);\n    let newSelectedDates;\n    \n    if (isAlreadySelected) {\n      newSelectedDates = selectedDatesList.filter(selectedDate => {\n        // Ensure selectedDate is a proper Date object\n        if (!(selectedDate instanceof Date)) {\n          // Try to convert to date if needed\n          if (typeof selectedDate === 'string') {\n            selectedDate = new Date(selectedDate);\n          } else if (selectedDate && typeof selectedDate.date === 'string') {\n            selectedDate = new Date(selectedDate.date);\n          } else {\n            // Can't compare, so keep this entry\n            return true;\n          }\n        }\n        \n        return !(selectedDate.getDate() === date.getDate() && \n                 selectedDate.getMonth() === date.getMonth() && \n                 selectedDate.getFullYear() === date.getFullYear());\n      });\n    } else {\n      newSelectedDates = [...selectedDatesList, date].sort((a, b) => a - b);\n    }\n    \n    setSelectedDatesList(newSelectedDates);\n\n    if (onDateSelect) {\n      const data = {\n        type: 'one-time',\n        dates: newSelectedDates,\n        rangeType: 'multiple-days',\n        isValid: newSelectedDates.length > 0\n      };\n      if (is_DEBUG) {\n        console.log('MBA19ynkiy34b toggleDateSelection - sending data:', data);\n        console.log('MBA19ynkiy34b toggleDateSelection - newSelectedDates length:', newSelectedDates.length);\n      }\n      onDateSelect(data);\n    }\n  };\n\n  const handleRecurringDateSelect = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b handleRecurringDateSelect - date:', date);\n      console.log('MBA19ynkiy34b handleRecurringDateSelect - current state:', {\n        tempRangeStart,\n        selectedDaysOfWeek: selectedDaysOfWeek.length,\n        frequency: selectedFrequency\n      });\n    }\n    \n    if (!tempRangeStart) {\n      setTempRangeStart(date);\n      setRecurringStartDate(date);\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleRecurringDateSelect - first date selected');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'recurring',\n          startDate: date,\n          daysOfWeek: selectedDaysOfWeek,\n          frequency: selectedFrequency,\n          isValid: false\n        });\n      }\n    } else {\n      let startDate = tempRangeStart;\n      let endDate = date;\n      \n      if (date < tempRangeStart) {\n        startDate = date;\n        endDate = tempRangeStart;\n      }\n      \n      setRecurringStartDate(startDate);\n      setRecurringEndDate(endDate);\n      setTempRangeStart(null);\n      setTempRangeEnd(null);\n      setShowRecurringDropdownCalendar(false);\n\n      if (onDateSelect) {\n        const data = {\n          type: 'recurring',\n          daysOfWeek: selectedDaysOfWeek,\n          frequency: selectedFrequency,\n          startDate: startDate,\n          endDate: endDate,\n          isValid: selectedDaysOfWeek.length > 0\n        };\n        if (is_DEBUG) {\n          console.log('MBA19ynkiy34b handleRecurringDateSelect - complete selection, sending data:', data);\n          console.log('MBA19ynkiy34b handleRecurringDateSelect - selectedDaysOfWeek:', selectedDaysOfWeek);\n        }\n        onDateSelect(data);\n      }\n    }\n  };\n\n  const isDateInTempRange = (date) => {\n    if (!tempRangeStart || !date) return false;\n    // Only highlight the tempRangeStart date if no end date is selected yet\n    if (!tempRangeEnd) {\n      return date.getTime() === tempRangeStart.getTime();\n    }\n    // Otherwise highlight the range between start and end\n    return date >= tempRangeStart && date <= tempRangeEnd;\n  };\n\n  const openRecurringCalendar = (isStart) => {\n    setIsSelectingStartDate(isStart);\n    setShowRecurringCalendar(true);\n  };\n\n  const isDateSelectable = (date) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    // Allow selection of dates from previous month that are visible\n    if (date.getMonth() < currentMonth.getMonth()) {\n      return date.getMonth() === ((currentMonth.getMonth() - 1 + 12) % 12) &&\n             date >= today;\n    }\n    \n    // Allow selection of dates from next month that are visible\n    if (date.getMonth() > currentMonth.getMonth()) {\n      return date.getMonth() === ((currentMonth.getMonth() + 1) % 12) &&\n             date >= today;\n    }\n    \n    return date >= today;\n  };\n\n  const getSelectedDaysText = () => {\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDays = selectedDaysOfWeek.map(dayIndex => dayNames[dayIndex]);\n    \n    if (selectedDays.length === 0) return 'No days selected';\n    \n    let daysText = '';\n    if (selectedDays.length === 1) {\n      daysText = selectedDays[0];\n    } else if (selectedDays.length === 2) {\n      daysText = `${selectedDays[0]} and ${selectedDays[1]}`;\n    } else {\n      const lastDay = selectedDays.pop();\n      daysText = `${selectedDays.join(', ')}, and ${lastDay}`;\n    }\n\n    switch (selectedFrequency) {\n      case 'bi-weekly':\n        return `every other ${daysText}`;\n      case 'monthly':\n        const weekNum = getWeekOfMonth(recurringStartDate);\n        return `the ${weekNum} ${daysText} of each month`;\n      default:\n        return `every ${daysText}`;\n    }\n  };\n\n  const getWeekOfMonth = (date) => {\n    const week = Math.ceil((date.getDate() + (date.getDay() === 0 ? 6 : date.getDay() - 1)) / 7);\n    const suffixes = ['first', 'second', 'third', 'fourth', 'last'];\n    return suffixes[Math.min(week - 1, 4)];\n  };\n\n  const renderCalendar = () => {\n    const monthStart = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n    const monthEnd = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\n    const startDate = new Date(monthStart);\n    const endDate = new Date(monthEnd);\n    \n    startDate.setDate(startDate.getDate() - startDate.getDay());\n    endDate.setDate(endDate.getDate() + (6 - endDate.getDay()));\n    \n    const weeks = [];\n    let days = [];\n    let day = new Date(startDate);\n    \n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        days.push(new Date(day));\n        day.setDate(day.getDate() + 1);\n      }\n      weeks.push(days);\n      days = [];\n    }\n\n    const monthName = currentMonth.toLocaleString('default', { month: 'long' });\n    const year = currentMonth.getFullYear();\n\n    return (\n      <View style={styles.calendarContainer}>\n        <View style={styles.calendarHeader}>\n          <TouchableOpacity onPress={goToPreviousMonth} style={styles.calendarNavButton}>\n            <Text style={styles.calendarNavButtonText}>{'<'}</Text>\n          </TouchableOpacity>\n          <Text style={styles.calendarTitle}>{`${monthName} ${year}`}</Text>\n          <TouchableOpacity onPress={goToNextMonth} style={styles.calendarNavButton}>\n            <Text style={styles.calendarNavButtonText}>{'>'}</Text>\n          </TouchableOpacity>\n        </View>\n        \n        <View style={styles.weekdaysContainer}>\n          {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\n            <Text key={`weekday-${index}`} style={styles.weekdayText}>{day}</Text>\n          ))}\n        </View>\n        \n        {weeks.map((week, weekIndex) => (\n          <View key={`week-${weekIndex}`} style={styles.weekRow}>\n            {week.map((date, dateIndex) => {\n              const isSelectable = isDateSelectable(date);\n              const isSelected = isDateSelected(date);\n              const isInRange = selectedDateRangeType === 'date-range' && isDateInRange(date);\n              const isInTempRange = showRecurringDropdownCalendar && isDateInTempRange(date);\n              \n              return (\n                <TouchableOpacity\n                  key={`date-${weekIndex}-${dateIndex}`}\n                  style={[\n                    styles.dateCell,\n                    !isSelectable && styles.otherMonthDate,\n                    isSelected && styles.selectedDate,\n                    isInRange && styles.dateInRange,\n                    isInTempRange && styles.dateInRange,\n                  ]}\n                  onPress={() => isSelectable && (showRecurringDropdownCalendar ? handleRecurringDateSelect(date) : handleDateSelection(date))}\n                  disabled={!isSelectable}\n                >\n                  <Text style={[\n                    styles.dateText,\n                    !isSelectable && styles.otherMonthDateText,\n                    (isSelected || isInRange || isInTempRange) && styles.selectedDateText,\n                  ]}>\n                    {date.getDate()}\n                  </Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const formatSelectedDate = (date) => {\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const month = monthNames[date.getMonth()];\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n  };\n\n  const clearDateRange = () => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Clearing date range');\n    }\n    \n    setSelectedDatesList([]);\n    setRangeStartDate(null);\n    setDateRangeEnd(null);\n    setDatesFromRange(false);\n    setLastRangeSelection(null);\n\n    if (onDateSelect) {\n      onDateSelect({\n        type: 'one-time',\n        dates: [],\n        rangeType: selectedDateRangeType,\n        startDate: null,\n        endDate: null,\n        isValid: false\n      });\n    }\n  };\n\n  const renderSelectedDates = () => {\n    if (selectedDatesList.length === 0) {\n      return null;\n    }\n\n    // If we have a date range and we're in date-range mode\n    if (selectedDateRangeType === 'date-range' && (dateRangeEnd || (datesFromRange && initialDateRange))) {\n      const startDate = rangeStartDate || initialDateRange?.startDate || selectedDatesList[0];\n      const endDate = dateRangeEnd || initialDateRange?.endDate || selectedDatesList[selectedDatesList.length - 1];\n      \n      return (\n        <View style={styles.selectedDatesContainer}>\n          <Text style={styles.selectedDatesTitle}>Selected Range:</Text>\n          <View style={styles.dateRangeChip}>\n            <Text style={styles.dateRangeText}>\n              From {formatSelectedDate(startDate)} to {formatSelectedDate(endDate)}\n            </Text>\n            <TouchableOpacity \n              onPress={clearDateRange}\n              style={styles.removeRangeButton}\n            >\n              <Text style={styles.removeButtonText}>×</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n    }\n\n    // For multiple days selection or when in multiple-days mode\n    return (\n      <View style={styles.selectedDatesContainer}>\n        <Text style={styles.selectedDatesTitle}>Selected Dates:</Text>\n        <View style={styles.selectedDatesList}>\n          {selectedDatesList.map((date, index) => (\n            <View key={`selected-date-${index}`} style={styles.selectedDateChip}>\n              <Text style={styles.selectedDateChipText}>{formatSelectedDate(date)}</Text>\n              <TouchableOpacity \n                onPress={() => toggleDateSelection(date)}\n                style={styles.removeButton}\n              >\n                <Text style={styles.removeButtonText}>×</Text>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const renderRecurringDropdownCalendar = () => {\n    if (!showRecurringDropdownCalendar) return null;\n\n    return (\n      <View style={styles.dropdownCalendar}>\n        <View style={styles.dropdownCalendarContent}>\n          {renderCalendar()}\n          <TouchableOpacity\n            style={styles.dropdownCloseButton}\n            onPress={() => {\n              setShowRecurringDropdownCalendar(false);\n              setTempRangeStart(null);\n              setTempRangeEnd(null);\n            }}\n          >\n            <Text style={styles.dropdownCloseButtonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const renderDateRangeSection = () => {\n    return (\n      <View style={styles.dateRangeSection}>\n        <View style={styles.dateRangeRow}>\n          <TouchableOpacity \n            style={styles.dateRangeColumn}\n            onPress={() => setShowRecurringDropdownCalendar(true)}\n          >\n            <Text style={styles.dateRangeLabel}>From</Text>\n            <Text style={styles.dateRangeValue}>\n              {formatSelectedDate(recurringStartDate)}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.dateRangeColumn}\n            onPress={() => setShowRecurringDropdownCalendar(true)}\n          >\n            <Text style={styles.dateRangeLabel}>To</Text>\n            <Text style={styles.dateRangeValue}>\n              {formatSelectedDate(recurringEndDate)}\n            </Text>\n          </TouchableOpacity>\n        </View>\n        {renderRecurringDropdownCalendar()}\n      </View>\n    );\n  };\n\n  const renderRecurringOptions = () => {\n    if (selectedBookingType !== 'recurring') return null;\n\n    return (\n      <View style={styles.recurringOptionsContainer}>\n        <Text style={styles.sectionTitle}>Repeat on</Text>\n        <View style={styles.daysOfWeekContainer}>\n          {['M', 'T', 'W', 'T', 'F', 'S', 'S'].map((day, index) => {\n            // Adjust index to match JavaScript day of week (0=Sun, 1=Mon, etc.)\n            const dayIndex = index === 6 ? 0 : index + 1;\n            const isSelected = selectedDaysOfWeek.includes(dayIndex);\n            \n            return (\n              <TouchableOpacity\n                key={`day-${index}`}\n                style={[\n                  styles.dayOfWeekButton,\n                  isSelected && styles.selectedDayOfWeekButton\n                ]}\n                onPress={() => handleDayOfWeekSelect(dayIndex)}\n              >\n                <Text style={[\n                  styles.dayOfWeekText,\n                  isSelected && styles.selectedDayOfWeekText\n                ]}>{day}</Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n\n        {renderDateRangeSection()}\n\n        <Text style={styles.sectionTitle}>Frequency</Text>\n        <View style={styles.frequencyContainer}>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'weekly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('weekly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'weekly' && styles.selectedFrequencyText\n            ]}>Weekly</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'bi-weekly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('bi-weekly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'bi-weekly' && styles.selectedFrequencyText\n            ]}>Bi-weekly</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'monthly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('monthly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'monthly' && styles.selectedFrequencyText\n            ]}>Monthly</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.recurrencePatternContainer}>\n          <Text style={styles.recurrencePatternTitle}>Recurrence Pattern:</Text>\n          <Text style={styles.recurrencePatternText}>\n            {getSelectedDaysText()}\n          </Text>\n          <Text style={styles.recurrencePatternText}>\n            From {formatSelectedDate(recurringStartDate)} to {formatSelectedDate(recurringEndDate)}\n          </Text>\n          <TouchableOpacity\n            style={styles.previewButton}\n            onPress={() => setShowRecurringPreview(true)}\n          >\n            <Text style={styles.previewButtonText}>View on Calendar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const RecurringCalendarPreview = () => {\n    const [previewMonth, setPreviewMonth] = useState(new Date(recurringStartDate));\n    \n    const getRecurringDates = () => {\n      if (!recurringStartDate || !recurringEndDate || selectedDaysOfWeek.length === 0) {\n        return new Set();\n      }\n\n      const dates = new Set();\n      const current = new Date(recurringStartDate);\n      const end = new Date(recurringEndDate);\n      \n      while (current <= end) {\n        if (selectedDaysOfWeek.includes(current.getDay())) {\n          if (selectedFrequency === 'weekly') {\n            dates.add(new Date(current).getTime());\n          } else if (selectedFrequency === 'bi-weekly') {\n            const weeks = Math.floor((current - recurringStartDate) / (7 * 24 * 60 * 60 * 1000));\n            if (weeks % 2 === 0) {\n              dates.add(new Date(current).getTime());\n            }\n          } else if (selectedFrequency === 'monthly') {\n            const startWeek = getWeekOfMonth(recurringStartDate);\n            const currentWeek = getWeekOfMonth(current);\n            if (startWeek === currentWeek) {\n              dates.add(new Date(current).getTime());\n            }\n          }\n        }\n        current.setDate(current.getDate() + 1);\n      }\n      return dates;\n    };\n\n    const goToPreviousMonth = () => {\n      const prevMonth = new Date(previewMonth);\n      prevMonth.setMonth(prevMonth.getMonth() - 1);\n      setPreviewMonth(prevMonth);\n    };\n\n    const goToNextMonth = () => {\n      const nextMonth = new Date(previewMonth);\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\n      setPreviewMonth(nextMonth);\n    };\n\n    const renderPreviewCalendar = () => {\n      const monthStart = new Date(previewMonth.getFullYear(), previewMonth.getMonth(), 1);\n      const monthEnd = new Date(previewMonth.getFullYear(), previewMonth.getMonth() + 1, 0);\n      const startDate = new Date(monthStart);\n      const endDate = new Date(monthEnd);\n      \n      startDate.setDate(startDate.getDate() - startDate.getDay());\n      endDate.setDate(endDate.getDate() + (6 - endDate.getDay()));\n      \n      const weeks = [];\n      let days = [];\n      let day = new Date(startDate);\n      const recurringDates = getRecurringDates();\n      \n      while (day <= endDate) {\n        for (let i = 0; i < 7; i++) {\n          days.push(new Date(day));\n          day.setDate(day.getDate() + 1);\n        }\n        weeks.push(days);\n        days = [];\n      }\n\n      const monthName = previewMonth.toLocaleString('default', { month: 'long' });\n      const year = previewMonth.getFullYear();\n\n      return (\n        <View style={styles.previewCalendarContainer}>\n          <View style={styles.calendarHeader}>\n            <TouchableOpacity onPress={goToPreviousMonth} style={styles.calendarNavButton}>\n              <Text style={styles.calendarNavButtonText}>{'<'}</Text>\n            </TouchableOpacity>\n            <Text style={styles.calendarTitle}>{`${monthName} ${year}`}</Text>\n            <TouchableOpacity onPress={goToNextMonth} style={styles.calendarNavButton}>\n              <Text style={styles.calendarNavButtonText}>{'>'}</Text>\n            </TouchableOpacity>\n          </View>\n          \n          <View style={styles.weekdaysContainer}>\n            {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\n              <Text key={`weekday-${index}`} style={styles.weekdayText}>{day}</Text>\n            ))}\n          </View>\n          \n          {weeks.map((week, weekIndex) => (\n            <View key={`week-${weekIndex}`} style={styles.weekRow}>\n              {week.map((date, dateIndex) => {\n                const isCurrentMonth = date.getMonth() === previewMonth.getMonth();\n                const isRecurring = recurringDates.has(date.getTime());\n                \n                return (\n                  <View\n                    key={`date-${weekIndex}-${dateIndex}`}\n                    style={[\n                      styles.previewDateCell,\n                      !isCurrentMonth && styles.otherMonthDate,\n                      isRecurring && styles.recurringDate,\n                    ]}\n                  >\n                    <Text style={[\n                      styles.dateText,\n                      !isCurrentMonth && styles.otherMonthDateText,\n                      isRecurring && styles.recurringDateText,\n                    ]}>\n                      {date.getDate()}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ))}\n        </View>\n      );\n    };\n\n    return (\n      <Modal\n        visible={showRecurringPreview}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowRecurringPreview(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContent, styles.previewModalContent]}>\n            <Text style={styles.modalTitle}>Recurring Dates Preview</Text>\n            {renderPreviewCalendar()}\n            <TouchableOpacity\n              style={styles.modalCloseButton}\n              onPress={() => setShowRecurringPreview(false)}\n            >\n              <Text style={styles.modalCloseButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    );\n  };\n\n  // Remove the useEffect for date validation since we're handling it directly in the handlers\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b Component mounted with:', {\n        selectedDates,\n        bookingType,\n        dateRangeType\n      });\n    }\n  }, []);\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* TODO: Add back recurring options once implemented after MVP */}\n      {isOvernightForced || selectedBookingType === 'one-time' ? (\n        <View style={styles.oneTimeOptionsContainer}>\n          <Text style={[styles.dateSelectionTitle, { fontSize: screenWidth > 768 ? 24 : 18 }]}>\n            {isOvernightForced \n              ? \"Select a date range\" \n              : \"Select one or more dates\"}\n          </Text>\n          \n          {renderCalendar()}\n          {renderSelectedDates()}\n        </View>\n      ) : renderRecurringOptions()}\n      \n      <RecurringCalendarPreview />\n    </ScrollView>\n  );\n};\n\nconst { width, height } = Dimensions.get('window');\nconst maxCalendarHeight = height * 0.4;\nconst isDesktopView = width > 480;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    padding: 12,\n    minHeight: isDesktopView ? 600 : 'auto',\n  },\n  bookingTypeContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  bookingTypeButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedBookingTypeButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  bookingTypeText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n  },\n  selectedBookingTypeText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  dateRangeTypeContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  dateRangeTypeButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedDateRangeTypeButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dateRangeTypeText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n  },\n  selectedDateRangeTypeText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  calendarContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    maxHeight: isDesktopView ? (width > 700 ? 600 : 500) : maxCalendarHeight,\n    overflow: 'visible',\n    minHeight: isDesktopView ? (width > 700 ? 500 : 400) : 350,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  calendarHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  calendarTitle: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  calendarNavButton: {\n    padding: 6,\n  },\n  calendarNavButtonText: {\n    fontSize: 18,\n    color: theme.colors.text,\n  },\n  weekdaysContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: isDesktopView ? 8 : 4,\n    paddingHorizontal: 4,\n  },\n  weekdayText: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 12,\n    color: theme.colors.text,\n    opacity: 0.7,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  weekRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: isDesktopView ? 12 : 4,\n    minHeight: isDesktopView ? (width > 700 ? 70 : 50) : 40,\n    flex: 1,\n    paddingHorizontal: 4,\n  },\n  dateCell: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    padding: isDesktopView ? 4 : 2,\n    minHeight: isDesktopView ? (width > 700 ? 60 : 40) : 'auto',\n  },\n  dateText: {\n    fontSize: isDesktopView ? (width > 700 ? 16 : 14) : 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  otherMonthDate: {\n    opacity: 0.3,\n  },\n  otherMonthDateText: {\n    color: theme.colors.placeHolderText,\n  },\n  selectedDate: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dateInRange: {\n    backgroundColor: `${theme.colors.mainColors.main}80`, // 50% opacity\n  },\n  selectedDateText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  selectedDatesContainer: {\n    marginTop: 12,\n  },\n  selectedDatesTitle: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 6,\n    color: theme.colors.text,\n  },\n  selectedDatesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  selectedDateChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 6,\n    paddingLeft: 10,\n    paddingRight: 6,\n    marginRight: 6,\n    marginBottom: 6,\n  },\n  selectedDateChipText: {\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: 12,\n    marginRight: 2,\n  },\n  removeButton: {\n    marginLeft: 4,\n    padding: 2,\n  },\n  removeButtonText: {\n    fontSize: 16,\n    color: theme.colors.mainColors.main,\n    fontWeight: 'bold',\n  },\n  dateRangeText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 8,\n  },\n  recurringOptionsContainer: {\n    marginTop: 8,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  daysOfWeekContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  dayOfWeekButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedDayOfWeekButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dayOfWeekText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedDayOfWeekText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  dateRangeSection: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n  },\n  dateRangeRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  dateRangeColumn: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    padding: 8,\n    borderRadius: 8,\n    // borderWidth: 1,\n    // borderColor: theme.colors.modernBorder,\n  },\n  dateRangeLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.7,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dateRangeValue: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  frequencyContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  frequencyButton: {\n    flex: 1,\n    paddingVertical: 10,\n    paddingHorizontal: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n    borderRadius: 8,\n    marginRight: 8,\n  },\n  selectedFrequencyButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  frequencyText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedFrequencyText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  recurrencePatternContainer: {\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  recurrencePatternTitle: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 4,\n    color: theme.colors.text,\n  },\n  recurrencePatternText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 2,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 16,\n    textAlign: 'center',\n    color: theme.colors.text,\n  },\n  modalCloseButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 8,\n  },\n  modalCloseButtonText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  previewButton: {\n    marginTop: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.mainColors.main,\n    borderRadius: 8,\n    alignSelf: 'flex-start',\n  },\n  previewButtonText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  previewModalContent: {\n    maxHeight: '80%',\n  },\n  previewCalendarContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginVertical: 16,\n  },\n  recurringDate: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  recurringDateText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  previewDateCell: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    padding: 2,\n  },\n  dateRangeChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 8,\n    paddingLeft: 12,\n    paddingRight: 8,\n  },\n  removeRangeButton: {\n    marginLeft: 8,\n    padding: 4,\n  },\n  selectedDateChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 6,\n    paddingLeft: 10,\n    paddingRight: 6,\n    marginRight: 6,\n    marginBottom: 6,\n  },\n  removeButton: {\n    marginLeft: 4,\n    padding: 2,\n  },\n  removeButtonText: {\n    fontSize: 16,\n    color: theme.colors.mainColors.main,\n    fontWeight: 'bold',\n  },\n  oneTimeOptionsContainer: {\n    marginTop: 8,\n  },\n  dateSelectionTitle: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 16,\n    paddingHorizontal: 4,\n  },\n});\n\nexport default DateSelectionCard; ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\n\nconst HOURS = Array.from({ length: 12 }, (_, i) => i === 0 ? 12 : i);\nconst MINUTES = Array.from({ length: 60 }, (_, i) => i).filter(m => m % 5 === 0);\nconst PERIODS = ['AM', 'PM'];\n\nconst TimePickerDropdown = ({\n  initialTime,\n  onTimeSelect,\n  isOpen,\n  onClose,\n  label = 'Time',\n  uniqueId = 'default',\n  showInlinePicker = false\n}) => {\n  // Create references for scrolling to right position\n  const hourScrollRef = useRef(null);\n  const minuteScrollRef = useRef(null);\n  const periodScrollRef = useRef(null);\n  \n  // Need to deep copy initialTime to prevent reference issues\n  const initTime = JSON.parse(JSON.stringify(initialTime || { hours: 9, minutes: 0 }));\n  \n  // Convert 24h to 12h format for UI\n  const init12Hour = () => {\n    const hours24 = initTime.hours;\n    \n    // Find the closest 5-minute interval\n    const minute = Math.round(initTime.minutes / 5) * 5;\n    \n    return {\n      hour: hours24 % 12 === 0 ? 12 : hours24 % 12,\n      minute: minute >= 60 ? 0 : minute, // Handle case where rounding gives 60\n      period: hours24 >= 12 ? 'PM' : 'AM'\n    };\n  };\n  \n  // State for the selected time\n  const [selectedTime, setSelectedTime] = useState(init12Hour());\n  \n  // Keep track of the last confirmed time\n  const [lastConfirmedTime, setLastConfirmedTime] = useState(init12Hour());\n  \n  // Add error state\n  const [timeError, setTimeError] = useState(null);\n  \n  // Reset the selected time when the initial time changes\n  useEffect(() => {\n    if (initialTime) {\n      const newTime = init12Hour();\n      setSelectedTime(newTime);\n      setLastConfirmedTime(newTime);\n      setTimeError(null);\n    }\n  }, [initialTime?.hours, initialTime?.minutes]);\n  \n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (timeError) {\n      const timer = setTimeout(() => {\n        setTimeError(null);\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [timeError]);\n  \n  // Scroll to the right positions when the picker is opened\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        scrollToSelections();\n      }, 50);\n    }\n  }, [isOpen, selectedTime]);\n\n  // Function to handle hour selection\n  const handleHourSelect = (hour) => {\n    setSelectedTime(prev => ({ ...prev, hour }));\n    setTimeError(null);\n  };\n\n  // Function to handle minute selection\n  const handleMinuteSelect = (minute) => {\n    setSelectedTime(prev => ({ ...prev, minute }));\n    setTimeError(null);\n  };\n\n  // Function to handle AM/PM selection\n  const handlePeriodSelect = (period) => {\n    setSelectedTime(prev => ({ ...prev, period }));\n    setTimeError(null);\n  };\n\n  // Convert 12h time to 24h and call the onTimeSelect callback\n  const triggerTimeChange = (time12h) => {\n    const { hour, minute, period } = time12h;\n    \n    // Convert to 24-hour format\n    let hours24 = hour;\n    if (period === 'PM' && hour !== 12) hours24 += 12;\n    if (period === 'AM' && hour === 12) hours24 = 0;\n    \n    const newTime = {\n      hours: hours24,\n      minutes: minute\n    };\n    \n    debugLog(`MBAoi9uv43d: TimePickerDropdown selected time (${uniqueId}):`, {\n      time12h, \n      time24h: newTime\n    });\n    \n    // Update the last confirmed time\n    setLastConfirmedTime(time12h);\n    \n    // Pass the new time up to the parent component\n    const isValid = onTimeSelect(newTime);\n    \n    // If time validation failed (parent returned false), show an error\n    if (isValid === false) {\n      // Show error alert\n      Alert.alert(\n        \"Invalid Time Selection\", \n        uniqueId.includes('start') ? \n          \"Start time cannot be later than end time.\" :\n          \"End time cannot be earlier than start time.\",\n        [{ text: \"OK\" }]\n      );\n      \n      // Set error message for visual indicator\n      setTimeError(uniqueId.includes('start') ? \n        \"Start time cannot be later than end time.\" :\n        \"End time cannot be earlier than start time.\"\n      );\n      \n      return false;\n    }\n    \n    // Only close the picker if validation passed\n    onClose();\n    return true;\n  };\n\n  // Handle confirm button press\n  const handleConfirm = () => {\n    triggerTimeChange(selectedTime);\n  };\n  \n  // Handle cancel button press\n  const handleCancel = () => {\n    // Reset the selected time to the last confirmed time\n    setSelectedTime(lastConfirmedTime);\n    setTimeError(null);\n    onClose();\n  };\n\n  // Scroll to the selected values\n  const scrollToSelections = () => {\n    if (hourScrollRef.current) {\n      const hourIndex = HOURS.indexOf(selectedTime.hour);\n      const hourOffset = hourIndex * 40;\n      hourScrollRef.current.scrollTo({ y: Math.max(0, hourOffset - 40), animated: true });\n    }\n    \n    if (minuteScrollRef.current) {\n      const minuteIndex = MINUTES.indexOf(selectedTime.minute);\n      const minuteOffset = minuteIndex * 40;\n      minuteScrollRef.current.scrollTo({ y: Math.max(0, minuteOffset - 40), animated: true });\n    }\n    \n    if (periodScrollRef.current) {\n      const periodIndex = PERIODS.indexOf(selectedTime.period);\n      const periodOffset = periodIndex * 40;\n      periodScrollRef.current.scrollTo({ y: Math.max(0, periodOffset - 20), animated: true });\n    }\n  };\n\n  // Format the time for display\n  const formatTimeDisplay = (hour, minute, period) => {\n    return `${hour}:${minute.toString().padStart(2, '0')} ${period}`;\n  };\n\n  // Render the dropdown content\n  const renderDropdownContent = () => (\n    <View>\n      <View style={styles.dropdownContent}>\n        {/* Hours */}\n        <ScrollView \n          ref={hourScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {HOURS.map((hour) => (\n            <TouchableOpacity\n              key={`hour-${hour}`}\n              style={[\n                styles.option,\n                selectedTime.hour === hour && styles.selectedOption\n              ]}\n              onPress={() => handleHourSelect(hour)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.hour === hour && styles.selectedOptionText\n              ]}>\n                {hour}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        \n        {/* Minutes */}\n        <ScrollView \n          ref={minuteScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {MINUTES.map((minute) => (\n            <TouchableOpacity\n              key={`minute-${minute}`}\n              style={[\n                styles.option,\n                selectedTime.minute === minute && styles.selectedOption\n              ]}\n              onPress={() => handleMinuteSelect(minute)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.minute === minute && styles.selectedOptionText\n              ]}>\n                {minute.toString().padStart(2, '0')}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        \n        {/* AM/PM */}\n        <ScrollView \n          ref={periodScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {PERIODS.map((period) => (\n            <TouchableOpacity\n              key={`period-${period}`}\n              style={[\n                styles.option,\n                selectedTime.period === period && styles.selectedOption\n              ]}\n              onPress={() => handlePeriodSelect(period)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.period === period && styles.selectedOptionText\n              ]}>\n                {period}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n      \n      {/* Error message */}\n      {timeError && (\n        <View style={styles.errorContainer}>\n          <MaterialIcons name=\"error\" size={16} color={theme.colors.error || '#D32F2F'} />\n          <Text style={styles.errorText}>{timeError}</Text>\n        </View>\n      )}\n      \n      {/* Buttons row */}\n      <View style={styles.buttonRow}>\n        <TouchableOpacity \n          style={[styles.button, styles.cancelButton]}\n          onPress={handleCancel}\n        >\n          <Text style={styles.cancelButtonText}>Cancel</Text>\n        </TouchableOpacity>\n        <TouchableOpacity \n          style={[styles.button, styles.confirmButton]}\n          onPress={handleConfirm}\n        >\n          <Text style={styles.confirmButtonText}>Confirm</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  // For inline mode (shown directly in the UI)\n  if (showInlinePicker) {\n    return (\n      <View style={styles.inlineContainer}>\n        {label && <Text style={styles.label}>{label}</Text>}\n        {renderDropdownContent()}\n      </View>\n    );\n  }\n\n  // For dropdown mode (shown when button is clicked)\n  return (\n    <>\n      <TouchableOpacity\n        style={styles.timeDisplay}\n        onPress={isOpen ? onClose : () => {}}\n      >\n        <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n        <Text style={styles.timeText}>\n          {formatTimeDisplay(selectedTime.hour, selectedTime.minute, selectedTime.period)}\n        </Text>\n        <MaterialIcons \n          name={isOpen ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n          size={20} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n      \n      {isOpen && (\n        <View style={styles.dropdownContainer}>\n          {renderDropdownContent()}\n        </View>\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  timeDisplay: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    marginVertical: 5,\n  },\n  timeText: {\n    flex: 1,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.medium,\n    marginLeft: 8,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    marginTop: 4,\n    zIndex: 1000,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  inlineContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 4,\n  },\n  label: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.small,\n    marginBottom: 8,\n  },\n  dropdownContent: {\n    flexDirection: 'row',\n    padding: 4,\n  },\n  column: {\n    flex: 1,\n    height: 160,\n  },\n  option: {\n    padding: 8,\n    alignItems: 'center',\n    height: 40,\n    justifyContent: 'center',\n  },\n  selectedOption: {\n    backgroundColor: `${theme.colors.mainColors.main}20`,\n    borderRadius: 4,\n  },\n  optionText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedOptionText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n    paddingHorizontal: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    flex: 1,\n    marginHorizontal: 4,\n    alignItems: 'center',\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.modernBorder,\n  },\n  confirmButtonText: {\n    color: 'white',\n    fontFamily: theme.fonts.medium.fontFamily,\n    fontSize: theme.fontSizes.small,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.small,\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FFEBEE',\n    padding: 8,\n    marginHorizontal: 4,\n    marginTop: 4,\n    borderRadius: 4,\n  },\n  errorText: {\n    color: theme.colors.error || '#D32F2F',\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 4,\n    flex: 1,\n  }\n});\n\nexport default TimePickerDropdown; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, Modal } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport TimePickerDropdown from './TimePickerDropdown';\n\nconst NewTimeRangeSelector = ({\n  title,\n  onTimeSelect,\n  initialTimes = {},\n  is_overnight = false,\n  uniqueId = 'default',\n  dateRange = null,\n  selectedDates = [],\n  isIndividualDaySelector = false,\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Create local state with deep copies to prevent reference issues\n  const [times, setTimes] = useState(() => {\n    const defaultTimes = {\n      startTime: { hours: 9, minutes: 0 },\n      endTime: { hours: 17, minutes: 0 },\n      isOvernightForced: initialTimes?.isOvernightForced || is_overnight || false\n    };\n    \n    // Deep copy initialTimes if provided\n    if (initialTimes) {\n      return {\n        startTime: initialTimes.startTime ? JSON.parse(JSON.stringify(initialTimes.startTime)) : defaultTimes.startTime,\n        endTime: initialTimes.endTime ? JSON.parse(JSON.stringify(initialTimes.endTime)) : defaultTimes.endTime,\n        isOvernightForced: initialTimes.isOvernightForced || is_overnight || false\n      };\n    }\n    \n    return defaultTimes;\n  });\n  \n  // Track which time picker is currently open\n  const [activeTimePicker, setActiveTimePicker] = useState(null);\n  \n  // Update times when initialTimes prop changes\n  useEffect(() => {\n    if (!initialTimes) return;\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) initialTimes update:`, initialTimes);\n    \n    // Create deep copies of the times\n    const updatedTimes = {\n      startTime: initialTimes.startTime ? JSON.parse(JSON.stringify(initialTimes.startTime)) : times.startTime,\n      endTime: initialTimes.endTime ? JSON.parse(JSON.stringify(initialTimes.endTime)) : times.endTime,\n      isOvernightForced: initialTimes.isOvernightForced || is_overnight || times.isOvernightForced\n    };\n    \n    setTimes(updatedTimes);\n  }, [\n    initialTimes?.startTime?.hours, \n    initialTimes?.startTime?.minutes, \n    initialTimes?.endTime?.hours, \n    initialTimes?.endTime?.minutes,\n    initialTimes?.isOvernightForced,\n    is_overnight\n  ]);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (activeTimePicker) {\n        setActiveTimePicker(null);\n      }\n    };\n\n    return () => {\n      // Clean up listeners\n    };\n  }, [activeTimePicker]);\n  \n  // Handle start time change\n  const handleStartTimeChange = (newTime) => {\n    // Validate that start time is not after end time\n    // End time could be 00:00 (midnight) which is treated as end of day\n    // So we need a special check for that case\n    const isEndTimeMidnight = times.endTime.hours === 0 && times.endTime.minutes === 0;\n    const startTotalMinutes = (newTime.hours * 60) + newTime.minutes;\n    const endTotalMinutes = (times.endTime.hours * 60) + times.endTime.minutes;\n    \n    // Check if the time combination is valid\n    // Allow if end time is midnight (special case) or if start time is before end time\n    if (!(isEndTimeMidnight || startTotalMinutes < endTotalMinutes)) {\n      debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) invalid start time - would be after end time:`, {\n        attemptedStart: newTime,\n        currentEnd: times.endTime,\n        startMinutes: startTotalMinutes,\n        endMinutes: endTotalMinutes\n      });\n      \n      // Return false to trigger error handling in TimePickerDropdown\n      return false;\n    }\n    \n    // Time is valid, proceed with the update\n    const newTimes = {\n      ...times,\n      startTime: JSON.parse(JSON.stringify(newTime))\n    };\n    \n    setTimes(newTimes);\n    onTimeSelect(newTimes);\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) startTime changed:`, {\n      newTime,\n      updatedTimes: newTimes\n    });\n    \n    return true;\n  };\n  \n  // Handle end time change\n  const handleEndTimeChange = (newTime) => {\n    // Special case: if new end time is midnight (00:00), always allow it\n    const isNewEndTimeMidnight = newTime.hours === 0 && newTime.minutes === 0;\n    \n    // For all other times, validate that end time is after start time\n    const startTotalMinutes = (times.startTime.hours * 60) + times.startTime.minutes;\n    const endTotalMinutes = (newTime.hours * 60) + newTime.minutes;\n    \n    // Check if the time combination is valid\n    // Allow if end time is midnight (special case) or if end time is after start time\n    if (!(isNewEndTimeMidnight || endTotalMinutes > startTotalMinutes)) {\n      debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) invalid end time - would be before start time:`, {\n        currentStart: times.startTime,\n        attemptedEnd: newTime,\n        startMinutes: startTotalMinutes,\n        endMinutes: endTotalMinutes\n      });\n      \n      // Return false to trigger error handling in TimePickerDropdown\n      return false;\n    }\n    \n    // Time is valid, proceed with the update\n    const newTimes = {\n      ...times,\n      endTime: JSON.parse(JSON.stringify(newTime))\n    };\n    \n    setTimes(newTimes);\n    onTimeSelect(newTimes);\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) endTime changed:`, {\n      newTime,\n      updatedTimes: newTimes\n    });\n    \n    return true;\n  };\n  \n  // Format time for display (12-hour format)\n  const formatTimeDisplay = (time) => {\n    if (!time) return '';\n    \n    const hours = time.hours;\n    const minutes = time.minutes;\n    const period = hours >= 12 ? 'PM' : 'AM';\n    const hours12 = hours % 12 === 0 ? 12 : hours % 12;\n    \n    return `${hours12}:${minutes.toString().padStart(2, '0')} ${period}`;\n  };\n  \n  // Format a date for display\n  const formatDate = (date) => {\n    if (!date) return '';\n    \n    try {\n      const dateObj = new Date(date);\n      return dateObj.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric', \n        year: 'numeric' \n      });\n    } catch (error) {\n      debugLog(`MBAoi9uv43d: Error formatting date: ${error.message}`);\n      return '';\n    }\n  };\n  \n  // Calculate duration between start and end times\n  const calculateDuration = () => {\n    const { isOvernightForced } = times;\n    \n    // If overnight service and we have date range or selected dates, calculate nights from date range\n    if ((isOvernightForced || is_overnight) && (dateRange || (selectedDates && selectedDates.length > 0))) {\n      let startDate, endDate;\n      \n      if (dateRange && dateRange.startDate && dateRange.endDate) {\n        // If we have a date range, use it\n        startDate = new Date(dateRange.startDate);\n        endDate = new Date(dateRange.endDate);\n      } else if (selectedDates && selectedDates.length >= 2) {\n        // If we have selected dates array, use first and last date\n        // Sort dates to ensure correct order\n        const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n        startDate = new Date(sortedDates[0]);\n        endDate = new Date(sortedDates[sortedDates.length - 1]);\n      } else if (selectedDates && selectedDates.length === 1) {\n        // If only one date selected, it's same day\n        return \"Same day\";\n      } else {\n        // Fallback if no date information\n        return \"1 night\";\n      }\n      \n      // Calculate nights between dates\n      const diffTime = Math.abs(endDate - startDate);\n      \n      // For date ranges, use correct date math (without time component)\n      // This ensures dates like May 14-16 (3 days) result in 2 nights, not 1 night\n      let diffDays;\n      \n      // Normalize dates to remove time component\n      const normalizedStartDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n      const normalizedEndDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n      \n      // Calculate the actual number of calendar days between the dates (inclusive)\n      diffDays = Math.round(Math.abs(normalizedEndDate - normalizedStartDate) / (1000 * 60 * 60 * 24)) + 1;\n      \n      // The number of nights is always one less than the number of days\n      const nights = diffDays > 1 ? diffDays - 1 : 0;\n      \n      if (nights === 0) {\n        return \"Same day\";\n      } else if (nights === 1) {\n        return \"1 night\";\n      } else {\n        return `${nights} nights`;\n      }\n    }\n    \n    // For regular (non-overnight) services or when no date range is available\n    const { startTime, endTime } = times;\n    \n    // Convert times to minutes\n    const startMinutes = (startTime.hours * 60) + startTime.minutes;\n    let endMinutes = (endTime.hours * 60) + endTime.minutes;\n    \n    // Special case: midnight (00:00) as end time is treated as end of day\n    if (endTime.hours === 0 && endTime.minutes === 0) {\n      endMinutes = 24 * 60; // End of day\n    }\n    \n    // Calculate duration in minutes\n    let durationMinutes = endMinutes - startMinutes;\n    \n    // If end time is earlier than start time and not midnight, add 24 hours\n    if (durationMinutes < 0 && !(endTime.hours === 0 && endTime.minutes === 0)) {\n      durationMinutes += 24 * 60;\n    }\n    \n    // Convert to hours and minutes\n    const hours = Math.floor(durationMinutes / 60);\n    const minutes = durationMinutes % 60;\n    \n    // Format the duration string\n    let durationStr = '';\n    if (hours > 0) {\n      durationStr += `${hours} hour${hours !== 1 ? 's' : ''}`;\n    }\n    if (minutes > 0) {\n      if (durationStr.length > 0) durationStr += ' ';\n      durationStr += `${minutes} minute${minutes !== 1 ? 's' : ''}`;\n    }\n    \n    return durationStr || '0 minutes';\n  };\n  \n  // Get start date for display\n  const getStartDate = () => {\n    if (dateRange && dateRange.startDate) {\n      return dateRange.startDate;\n    } else if (selectedDates && selectedDates.length > 0) {\n      const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n      return sortedDates[0];\n    }\n    return null;\n  };\n  \n  // Get end date for display\n  const getEndDate = () => {\n    if (dateRange && dateRange.endDate) {\n      return dateRange.endDate;\n    } else if (selectedDates && selectedDates.length > 0) {\n      const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n      return sortedDates[sortedDates.length - 1];\n    }\n    return null;\n  };\n  \n  const startDate = getStartDate();\n  const endDate = getEndDate();\n  \n  return (\n    <View style={styles.container}>\n      {title && <Text style={styles.title}>{title}</Text>}\n      \n      {/* Time selection UI with dates */}\n      <View style={styles.timeSelectionContainer}>\n        {/* Start time picker with date */}\n        <View style={styles.timePickerContainer}>\n          {startDate && (isIndividualDaySelector || times.isOvernightForced || is_overnight) ? (\n            <Text style={styles.dateLabel}>{formatDate(startDate)}</Text>\n          ) : (\n            <Text style={styles.dateLabel}>Applies to all individual days</Text>\n          )}\n          <Text style={styles.timeLabel}>Start Time</Text>\n          <TouchableOpacity\n            style={styles.timeButton}\n            onPress={() => setActiveTimePicker(activeTimePicker === 'start' ? null : 'start')}\n          >\n            <View style={styles.timeButtonContent}>\n              <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n              <Text style={styles.timeText}>\n                {formatTimeDisplay(times.startTime)}\n              </Text>\n              <MaterialIcons \n                name={activeTimePicker === 'start' ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n                size={20} \n                color={theme.colors.text} \n              />\n            </View>\n          </TouchableOpacity>\n        </View>\n        \n        {/* End time picker with date */}\n        <View style={styles.timePickerContainer}>\n          {endDate && (isIndividualDaySelector || times.isOvernightForced || is_overnight) ? (\n            <Text style={styles.dateLabel}>{formatDate(endDate)}</Text>\n          ) : (\n            <Text style={styles.dateLabel}>Applies to all individual days</Text>\n          )}\n          <Text style={styles.timeLabel}>End Time</Text>\n          <TouchableOpacity\n            style={styles.timeButton}\n            onPress={() => setActiveTimePicker(activeTimePicker === 'end' ? null : 'end')}\n          >\n            <View style={styles.timeButtonContent}>\n              <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n              <Text style={styles.timeText}>\n                {formatTimeDisplay(times.endTime)}\n              </Text>\n              <MaterialIcons \n                name={activeTimePicker === 'end' ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n                size={20} \n                color={theme.colors.text} \n              />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      {/* Duration display */}\n      <View style={styles.durationContainer}>\n        <MaterialIcons name=\"timelapse\" size={18} color={theme.colors.mainColors.main} />\n        <Text style={styles.durationText}>Duration: {calculateDuration()}</Text>\n      </View>\n      \n      {/* Modal for handling outside click to close the dropdowns */}\n      {activeTimePicker && (\n        <Modal\n          transparent={true}\n          animationType=\"none\"\n          visible={!!activeTimePicker}\n          onRequestClose={() => setActiveTimePicker(null)}\n        >\n          <TouchableWithoutFeedback onPress={() => setActiveTimePicker(null)}>\n            <View style={styles.modalOverlay}>\n              <TouchableWithoutFeedback>\n                <View style={[\n                  styles.modalContent,\n                  activeTimePicker === 'start' ? styles.startModalContent : styles.endModalContent\n                ]}>\n                  <TimePickerDropdown\n                    initialTime={activeTimePicker === 'start' ? times.startTime : times.endTime}\n                    onTimeSelect={activeTimePicker === 'start' ? handleStartTimeChange : handleEndTimeChange}\n                    isOpen={true}\n                    onClose={() => setActiveTimePicker(null)}\n                    uniqueId={`${uniqueId}-${activeTimePicker}`}\n                    showInlinePicker={true}\n                  />\n                </View>\n              </TouchableWithoutFeedback>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  timeSelectionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  timePickerContainer: {\n    flex: 1,\n    marginHorizontal: 4,\n    position: 'relative',\n    zIndex: 10,\n  },\n  dateLabel: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.textSecondary,\n    marginBottom: 4,\n  },\n  timeLabel: {\n    fontSize: theme.fontSizes.smallMedium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  timeButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  timeButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n  },\n  timeText: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginLeft: 8,\n  },\n  durationContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n    padding: 12,\n    backgroundColor: theme.colors.bgColorModern,\n    borderRadius: 8,\n  },\n  durationText: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginLeft: 8,\n  },\n  // Modal styling for outside click handling\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    width: '80%',\n    padding: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  startModalContent: {\n    alignSelf: 'flex-start',\n    marginLeft: '10%',\n  },\n  endModalContent: {\n    alignSelf: 'flex-end',\n    marginRight: '10%',\n  }\n});\n\nexport default NewTimeRangeSelector; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport NewTimeRangeSelector from './NewTimeRangeSelector';\n\nconst DayTimeSelector = ({\n  date,\n  initialTimes = {},\n  onTimeChange,\n  is_overnight = false\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Format the date for display\n  const formatDate = (date) => {\n    if (!date) return '';\n    \n    // Create a copy to prevent timezone issues\n    const dateObj = new Date(date);\n    const options = { weekday: 'short', month: 'short', day: 'numeric' };\n    return dateObj.toLocaleDateString('en-US', options);\n  };\n  \n  // Generate a unique ID for this date's time selector\n  const generateUniqueId = () => {\n    if (!date) return 'day-unknown';\n    \n    try {\n      // If date is a Date object, convert to ISO string and extract date part\n      if (date instanceof Date) {\n        return `day-${date.toISOString().split('T')[0]}`;\n      }\n      \n      // If date is already in YYYY-MM-DD format\n      if (typeof date === 'string' && date.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n        return `day-${date}`;\n      }\n      \n      // If date is in another format, try to convert it\n      const parsedDate = new Date(date);\n      if (!isNaN(parsedDate.getTime())) {\n        return `day-${parsedDate.toISOString().split('T')[0]}`;\n      }\n      \n      // Fallback\n      return `day-unknown-${Date.now()}`;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error generating unique ID for date:', error);\n      return `day-unknown-${Date.now()}`;\n    }\n  };\n  \n  // Generate a stable date key for API\n  const generateDateKey = () => {\n    if (!date) return null;\n    \n    try {\n      // If date is a Date object, convert to YYYY-MM-DD\n      if (date instanceof Date) {\n        return date.toISOString().split('T')[0];\n      }\n      \n      // If date is already in YYYY-MM-DD format\n      if (typeof date === 'string' && date.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n        return date;\n      }\n      \n      // If date is in another format, try to convert it\n      const parsedDate = new Date(date);\n      if (!isNaN(parsedDate.getTime())) {\n        return parsedDate.toISOString().split('T')[0];\n      }\n      \n      // Couldn't parse date\n      debugLog('MBAoi9uv43d: Could not parse date:', date);\n      return null;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error generating date key:', error);\n      return null;\n    }\n  };\n  \n  // Generate stable IDs\n  const uniqueId = generateUniqueId();\n  const dateKey = generateDateKey();\n  \n  // Handle time selection from the time range selector\n  const handleTimeSelect = (timesData) => {\n    if (!dateKey) {\n      debugLog('MBAoi9uv43d: Cannot handle time selection - invalid date key');\n      return;\n    }\n    \n    // Create a completely new times object to avoid reference issues\n    const newTimes = JSON.parse(JSON.stringify(timesData));\n    \n    debugLog(`MBAoi9uv43d: DayTimeSelector (${uniqueId}) time changed:`, {\n      dateKey,\n      timesData: newTimes\n    });\n    \n    // Pass the time data up to the parent component\n    onTimeChange(newTimes, dateKey);\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.dateLabel}>{formatDate(date)}</Text>\n      \n      <NewTimeRangeSelector\n        onTimeSelect={handleTimeSelect}\n        initialTimes={initialTimes}\n        is_overnight={is_overnight}\n        uniqueId={uniqueId}\n        selectedDates={[date]}\n        isIndividualDaySelector={true}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    overflow: 'visible',\n  },\n  dateLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.bgColorModern,\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  }\n});\n\nexport default DayTimeSelector; ","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, TouchableWithoutFeedback } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport NewTimeRangeSelector from './NewTimeRangeSelector';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport DayTimeSelector from './DayTimeSelector';\nimport { formatDateOnly, getUTCTimeString } from '../../utils/time_utils';\n\n// Helper function to parse time values from various formats\nconst parseTimeValue = (timeValue) => {\n  if (!timeValue) return null;\n  \n  // Handle string format 'HH:MM'\n  if (typeof timeValue === 'string' && timeValue.includes(':')) {\n    const [hours, minutes] = timeValue.split(':').map(part => parseInt(part, 10));\n    return { hours, minutes };\n  }\n  \n  // Handle object format directly\n  if (typeof timeValue === 'object' && timeValue !== null) {\n    // If it has hours/minutes properties directly\n    if (timeValue.hours !== undefined || timeValue.minutes !== undefined) {\n      return {\n        hours: timeValue.hours || 0,\n        minutes: timeValue.minutes || 0\n      };\n    }\n  }\n  \n  // Default fallback\n  return null;\n};\n\nconst TimeSelectionCard = ({ \n  onTimeSelect,\n  initialTimes = {},\n  dateRange = null,\n  selectedService = null,\n  isOvernightForced = false\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Initialize showIndividualDays based on initialTimes.hasIndividualTimes\n  const [showIndividualDays, setShowIndividualDays] = useState(() => {\n    // For overnight services, never show individual days\n    if (selectedService?.is_overnight || isOvernightForced) {\n      return false;\n    }\n    \n    const shouldShowIndividual = initialTimes && initialTimes.hasIndividualTimes === true;\n    debugLog('MBAoi9uv43d: Initial showIndividualDays value:', shouldShowIndividual);\n    return shouldShowIndividual;\n  });\n  \n  const [individualTimeRanges, setIndividualTimeRanges] = useState({});\n  const [times, setTimes] = useState(() => {\n    // Safely initialize with default values if initialTimes is not properly formatted\n    try {\n      if (!initialTimes || typeof initialTimes !== 'object') {\n        debugLog('MBAoi9uv43d: Invalid initialTimes, using defaults:', initialTimes);\n        return {\n          startTime: { hours: 9, minutes: 0 },\n          endTime: { hours: 17, minutes: 0 },\n          isOvernightForced: false\n        };\n      }\n      return initialTimes;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error initializing times:', error);\n      return {\n        startTime: { hours: 9, minutes: 0 },\n        endTime: { hours: 17, minutes: 0 },\n        isOvernightForced: false\n      };\n    }\n  });\n  \n  // Use a ref to track if this is the initial render\n  const isInitialRender = useRef(true);\n  \n  useEffect(() => {\n    debugLog('MBAoi9uv43d: TimeSelectionCard received initialTimes:', initialTimes);\n    \n    // Safely initialize with default values if initialTimes is not properly formatted\n    try {\n      if (!initialTimes || typeof initialTimes !== 'object') {\n        const defaultTimes = {\n          startTime: { hours: 9, minutes: 0 },\n          endTime: { hours: 17, minutes: 0 },\n          isOvernightForced: selectedService?.is_overnight || false\n        };\n        debugLog('MBAoi9uv43d: Using default times:', defaultTimes);\n        setTimes(defaultTimes);\n        setShowIndividualDays(false);\n        return;\n      }\n      \n      // Extract the hasIndividualTimes flag early\n      const hasIndividualTimesFlag = initialTimes.hasIndividualTimes === true;\n      debugLog('MBAoi9uv43d: hasIndividualTimes flag is', hasIndividualTimesFlag);\n      \n      // Only set the showIndividualDays based on initialTimes on the initial render\n      // This prevents it from overriding user's toggle action\n      if (isInitialRender.current) {\n        debugLog('MBAoi9uv43d: Initial render - setting showIndividualDays to', hasIndividualTimesFlag);\n        setShowIndividualDays(hasIndividualTimesFlag);\n        isInitialRender.current = false;\n      } else {\n        debugLog('MBAoi9uv43d: Not initial render - preserving showIndividualDays state');\n      }\n      \n      // Get formatted start time\n      const startTimeValue = parseTimeValue(initialTimes.startTime);\n      const endTimeValue = parseTimeValue(initialTimes.endTime);\n      \n      const formattedTimes = {\n        startTime: startTimeValue || { hours: 9, minutes: 0 },\n        endTime: endTimeValue || { hours: 17, minutes: 0 },\n        isOvernightForced: initialTimes.isOvernightForced || selectedService?.is_overnight || false\n      };\n      \n      debugLog('MBAoi9uv43d: Setting formatted times:', formattedTimes);\n      setTimes(formattedTimes);\n      \n      // Check if initialTimes already has individual times or if we have dates from draft\n      const hasDatesInDraft = initialTimes && Object.keys(initialTimes).some(key => key.match(/^\\d{4}-\\d{2}-\\d{2}$/));\n      \n      debugLog('MBAoi9uv43d: Time selection setup:', { \n        hasDatesInDraft,\n        hasIndividualTimesFlag,\n        hasDateRange: !!(dateRange && dateRange.startDate && dateRange.endDate),\n        hasDates: !!(initialTimes && initialTimes.dates && initialTimes.dates.length > 0)\n      });\n      \n      // Initialize individual time ranges if we have a date range or dates in draft\n      if ((dateRange && dateRange.startDate && dateRange.endDate) || hasDatesInDraft) {\n        const newTimeRanges = {};\n        \n        // If we have a dateRange, populate default times for all dates in the range\n        if (dateRange && dateRange.startDate && dateRange.endDate) {\n          const startDate = new Date(dateRange.startDate);\n          const endDate = new Date(dateRange.endDate);\n          \n          // Set default times for each date in the range\n          const current = new Date(startDate);\n          while (current <= endDate) {\n            const dateKey = current.toISOString().split('T')[0];\n            newTimeRanges[dateKey] = JSON.parse(JSON.stringify(formattedTimes));\n            current.setDate(current.getDate() + 1);\n          }\n        }\n        \n        // Also populate time ranges from multiple days selection if available\n        if (initialTimes.dates && initialTimes.dates.length > 0 && !dateRange) {\n          debugLog('MBAoi9uv43d: Creating time ranges from multiple days selection');\n          initialTimes.dates.forEach(dateObj => {\n            // Handle different date formats\n            let date;\n            if (typeof dateObj === 'string') {\n              date = new Date(dateObj);\n            } else if (dateObj && dateObj.date) {\n              date = new Date(dateObj.date);\n            } else {\n              date = new Date(dateObj);\n            }\n            \n            const dateKey = date.toISOString().split('T')[0];\n            if (!newTimeRanges[dateKey]) {\n              newTimeRanges[dateKey] = JSON.parse(JSON.stringify(formattedTimes));\n            }\n          });\n        }\n        \n        // Check if initialTimes has individual times for specific days\n        if (hasIndividualTimesFlag || hasDatesInDraft) {\n          Object.keys(initialTimes).forEach(key => {\n            // Check if the key is a date (format YYYY-MM-DD)\n            if (key.match(/^\\d{4}-\\d{2}-\\d{2}$/) && initialTimes[key]) {\n              const dayTime = initialTimes[key];\n              const parsedStartTime = parseTimeValue(dayTime.startTime);\n              const parsedEndTime = parseTimeValue(dayTime.endTime);\n              \n              if (parsedStartTime || parsedEndTime) {\n                newTimeRanges[key] = {\n                  startTime: parsedStartTime || { hours: 9, minutes: 0 },\n                  endTime: parsedEndTime || { hours: 17, minutes: 0 },\n                  isOvernightForced: dayTime.isOvernightForced || false\n                };\n              }\n            }\n          });\n        }\n        \n        // Also handle individualTimeRanges format from initialTimes\n        if (initialTimes.individualTimeRanges) {\n          Object.keys(initialTimes.individualTimeRanges).forEach(dateKey => {\n            if (dateKey.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n              const dayTime = initialTimes.individualTimeRanges[dateKey];\n              const parsedStartTime = parseTimeValue(dayTime.startTime);\n              const parsedEndTime = parseTimeValue(dayTime.endTime);\n              \n              if (parsedStartTime || parsedEndTime) {\n                newTimeRanges[dateKey] = {\n                  startTime: parsedStartTime || { hours: 9, minutes: 0 },\n                  endTime: parsedEndTime || { hours: 17, minutes: 0 },\n                  isOvernightForced: dayTime.isOvernightForced || false\n                };\n              }\n            }\n          });\n        }\n        \n        debugLog('MBAoi9uv43d: Setting individual time ranges:', newTimeRanges);\n        setIndividualTimeRanges(newTimeRanges);\n      }\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error processing initialTimes:', error);\n      // Set default times on error\n      setTimes({\n        startTime: { hours: 9, minutes: 0 },\n        endTime: { hours: 17, minutes: 0 },\n        isOvernightForced: selectedService?.is_overnight || false\n      });\n    }\n  }, [initialTimes, dateRange, selectedService]);\n  \n  const handleDefaultTimeSelect = (newTimes) => {\n    debugLog('MBAoi9uv43d: handleDefaultTimeSelect called with:', newTimes);\n    \n    // Create a new deep copy to avoid reference issues\n    const updatedTimes = JSON.parse(JSON.stringify(newTimes));\n    \n    // Update our local state\n    setTimes(updatedTimes);\n    \n    // If showing individual days, update each day's times\n    if (showIndividualDays) {\n      const updatedRanges = {};\n      \n      // Create deep copies for each date\n      Object.keys(individualTimeRanges).forEach(date => {\n        updatedRanges[date] = {\n          startTime: updatedTimes.startTime,\n          endTime: updatedTimes.endTime,\n          isOvernightForced: updatedTimes.isOvernightForced\n        };\n      });\n      \n      setIndividualTimeRanges(updatedRanges);\n      \n      // Send full object with individual day data\n      onTimeSelect({\n        ...updatedTimes,\n        ...updatedRanges,\n        hasIndividualTimes: true\n      });\n    } else {\n      // Just send the default times\n      onTimeSelect({\n        ...updatedTimes,\n        hasIndividualTimes: false\n      });\n    }\n  };\n\n  const handleIndividualDayTimeSelect = (timesData, dateKey) => {\n    debugLog('MBAoi9uv43d: Individual day time selection for card:', { dateKey, timesData });\n    \n    if (!dateKey) {\n      debugLog('MBAoi9uv43d: No dateKey provided, returning');\n      return;\n    }\n\n    // Create a completely fresh object for the updated ranges with no shared references\n    const updatedRanges = JSON.parse(JSON.stringify(individualTimeRanges));\n    \n    // Now set the new time data for this date key\n    updatedRanges[dateKey] = JSON.parse(JSON.stringify(timesData));\n    \n    debugLog('MBAoi9uv43d: TimeSelectionCard updating only date:', dateKey);\n    debugLog('MBAoi9uv43d: Current individualTimeRanges keys:', Object.keys(individualTimeRanges));\n    debugLog('MBAoi9uv43d: New updatedRanges keys:', Object.keys(updatedRanges));\n    \n    // Update local state with completely new object to break all references\n    setIndividualTimeRanges(updatedRanges);\n    \n    // Format time strings for API\n    const formattedRanges = {};\n    Object.keys(updatedRanges).forEach(date => {\n      const timeData = updatedRanges[date];\n      formattedRanges[date] = {\n        startTime: `${String(timeData.startTime.hours).padStart(2, '0')}:${String(timeData.startTime.minutes).padStart(2, '0')}`,\n        endTime: `${String(timeData.endTime.hours).padStart(2, '0')}:${String(timeData.endTime.minutes).padStart(2, '0')}`,\n        isOvernightForced: !!timeData.isOvernightForced\n      };\n    });\n    \n    // Create a completely new data object for the parent component\n    const updatedData = {\n      startTime: JSON.parse(JSON.stringify(times.startTime)),\n      endTime: JSON.parse(JSON.stringify(times.endTime)),\n      isOvernightForced: times.isOvernightForced,\n      hasIndividualTimes: true,\n      dates: initialTimes.dates ? [...initialTimes.dates] : [],\n      individualTimeRanges: formattedRanges\n    };\n    \n    // Add the specific date data\n    updatedData[dateKey] = formattedRanges[dateKey];\n    \n    debugLog('MBAoi9uv43d: TimeSelectionCard sending updated data to parent');\n    onTimeSelect(updatedData);\n  };\n\n  const handleToggleIndividualDays = () => {\n    debugLog('MBAoi9uv43d: TOGGLE button pressed');\n    debugLog('MBAoi9uv43d: Current showIndividualDays state:', showIndividualDays);\n    \n    if (showIndividualDays) {\n      // Currently showing individual days, switching to default time range\n      debugLog('MBAoi9uv43d: Switching FROM individual days TO default time range');\n      \n      // First, update the UI state\n      setShowIndividualDays(false);\n      \n      // Then send updated data to parent with hasIndividualTimes=false\n      // Include ONLY the essential time data, no date keys\n      const updatedData = {\n        startTime: times.startTime,\n        endTime: times.endTime,\n        isOvernightForced: times.isOvernightForced,\n        hasIndividualTimes: false,\n        // Keep the dates array for reference but don't include individual time ranges\n        dates: initialTimes.dates || []\n      };\n      \n      debugLog('MBAoi9uv43d: Sending default time data to parent:', updatedData);\n      onTimeSelect(updatedData);\n    } else {\n      // Currently showing default time range, switching to individual days\n      debugLog('MBAoi9uv43d: Switching FROM default time range TO individual days');\n      \n      // First update the UI state\n      setShowIndividualDays(true);\n      \n      // Create individual time ranges\n      let newTimeRanges = {};\n      \n      // Check if we have multiple individual dates from the booking data\n      const hasMultipleDays = initialTimes && initialTimes.dates && initialTimes.dates.length > 0;\n      \n      if (hasMultipleDays) {\n        // Get dates from initialTimes.dates for multiple-days selection\n        debugLog('MBAoi9uv43d: Creating time ranges for multiple individual dates');\n        \n        initialTimes.dates.forEach(dateObj => {\n          // Handle different date formats\n          let date;\n          if (typeof dateObj === 'string') {\n            date = new Date(dateObj);\n          } else if (dateObj && dateObj.date) {\n            date = new Date(dateObj.date);\n          } else {\n            date = new Date(dateObj);\n          }\n          \n          const dateKey = date.toISOString().split('T')[0];\n          \n          // Use current times values as default\n          newTimeRanges[dateKey] = {\n            startTime: JSON.parse(JSON.stringify(times.startTime)),\n            endTime: JSON.parse(JSON.stringify(times.endTime)),\n            isOvernightForced: times.isOvernightForced\n          };\n        });\n      } else if (dateRange && dateRange.startDate && dateRange.endDate) {\n        // Create ranges from dateRange\n        debugLog('MBAoi9uv43d: Creating time ranges from dateRange');\n        \n        const startDate = new Date(dateRange.startDate);\n        const endDate = new Date(dateRange.endDate);\n        const current = new Date(startDate);\n        \n        while (current <= endDate) {\n          const dateKey = current.toISOString().split('T')[0];\n          \n          // Use current times values as default, with deep copy\n          newTimeRanges[dateKey] = {\n            startTime: JSON.parse(JSON.stringify(times.startTime)),\n            endTime: JSON.parse(JSON.stringify(times.endTime)),\n            isOvernightForced: times.isOvernightForced\n          };\n          \n          // Move to next day\n          current.setDate(current.getDate() + 1);\n        }\n      } else if (Object.keys(individualTimeRanges).length > 0) {\n        // Use existing time ranges if we already have them\n        newTimeRanges = JSON.parse(JSON.stringify(individualTimeRanges));\n      }\n      \n      debugLog('MBAoi9uv43d: Setting individual time ranges:', newTimeRanges);\n      setIndividualTimeRanges(newTimeRanges);\n      \n      // Send full object with individual day data\n      onTimeSelect({\n        ...times,\n        ...newTimeRanges,\n        hasIndividualTimes: true\n      });\n    }\n  };\n\n  // Utility to get dates from dateRange or initialTimes\n  const getDates = () => {\n    let dates = [];\n    \n    // Check if we have multiple individual dates from the booking data\n    const hasMultipleDays = initialTimes && initialTimes.dates && initialTimes.dates.length > 0;\n    \n    if (hasMultipleDays) {\n      // Get dates from the initialTimes.dates for multiple-days selection\n      debugLog('MBAoi9uv43d: Using multiple individual dates from initialTimes:', initialTimes.dates);\n      dates = initialTimes.dates.map(dateObj => {\n        // Handle different date formats (string or object with date property)\n        if (typeof dateObj === 'string') {\n          return new Date(dateObj);\n        } else if (dateObj && dateObj.date) {\n          return new Date(dateObj.date);\n        } else {\n          return new Date(dateObj);\n        }\n      });\n    } else if (dateRange && dateRange.startDate && dateRange.endDate) {\n      // Generate array of dates between start and end for date range\n      debugLog('MBAoi9uv43d: Generating dates from dateRange:', dateRange);\n      const startDate = new Date(dateRange.startDate);\n      const endDate = new Date(dateRange.endDate);\n      const current = new Date(startDate);\n      \n      while (current <= endDate) {\n        dates.push(new Date(current));\n        current.setDate(current.getDate() + 1);\n      }\n    }\n    \n    return dates;\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.card}>\n        {/* Only show default time range selector when not showing individual days */}\n        {!showIndividualDays && (\n          <NewTimeRangeSelector\n            onTimeSelect={handleDefaultTimeSelect}\n            initialTimes={times}\n            is_overnight={selectedService?.is_overnight || times.isOvernightForced || isOvernightForced || false}\n            uniqueId=\"default-time-range\"\n            dateRange={dateRange}\n            selectedDates={initialTimes.dates || []}\n          />\n        )}\n\n        {/* Only show customize button if not an overnight service */}\n        {!selectedService?.is_overnight && !isOvernightForced && (\n          <View style={styles.customizeButtonContainer}>\n            <TouchableOpacity \n              style={styles.customizeButton}\n              onPress={handleToggleIndividualDays}\n              activeOpacity={0.7}\n            >\n              <MaterialIcons name=\"schedule\" size={20} color={theme.colors.mainColors.main} />\n              <Text style={styles.customizeButtonText}>\n                {showIndividualDays ? 'Set Default Time Range' : 'Customize Individual Day Schedules'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n\n        {/* Only show individual day schedules if not an overnight service and the toggle is on */}\n        {showIndividualDays && !selectedService?.is_overnight && !isOvernightForced && (\n          <View style={styles.individualDaysContainer}>\n            <Text style={styles.sectionHeader}>Individual Day Schedules</Text>\n            <ScrollView>\n              {getDates().map((date, index) => {\n                const dateKey = date.toISOString().split('T')[0];\n                \n                // Get existing time data for this date or use default with deep copying\n                let timeData;\n                \n                // Check if we have a specific time range for this date in initialTimes\n                if (initialTimes && initialTimes[dateKey]) {\n                  const parsedStartTime = parseTimeValue(initialTimes[dateKey].startTime);\n                  const parsedEndTime = parseTimeValue(initialTimes[dateKey].endTime);\n                  \n                  timeData = {\n                    startTime: parsedStartTime || JSON.parse(JSON.stringify(times.startTime)),\n                    endTime: parsedEndTime || JSON.parse(JSON.stringify(times.endTime)),\n                    isOvernightForced: !!initialTimes[dateKey].isOvernightForced\n                  };\n                  \n                  debugLog(`MBAoi9uv43d: Found specific time data for date ${dateKey} in initialTimes`);\n                } \n                // Otherwise check individualTimeRanges which is our local state\n                else if (individualTimeRanges && individualTimeRanges[dateKey]) {\n                  timeData = JSON.parse(JSON.stringify(individualTimeRanges[dateKey]));\n                  debugLog(`MBAoi9uv43d: Using time from individualTimeRanges for date ${dateKey}`);\n                } \n                // If nothing found, use default times\n                else {\n                  timeData = { \n                    startTime: JSON.parse(JSON.stringify(times.startTime)),\n                    endTime: JSON.parse(JSON.stringify(times.endTime)),\n                    isOvernightForced: times.isOvernightForced\n                  };\n                  debugLog(`MBAoi9uv43d: Using default times for date ${dateKey}`);\n                }\n                \n                return (\n                  <DayTimeSelector\n                    key={`day-${dateKey}`}\n                    date={date}\n                    initialTimes={timeData}\n                    onTimeChange={handleIndividualDayTimeSelect}\n                    is_overnight={selectedService?.is_overnight || false}\n                  />\n                );\n              })}\n            </ScrollView>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  card: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n  },\n  customizeButtonContainer: {\n    marginBottom: 24,\n    paddingHorizontal: 16,\n  },\n  customizeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 8,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n  },\n  customizeButtonText: {\n    color: theme.colors.mainColors.main,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  individualDaysContainer: {\n    gap: 12,\n    marginBottom: 16,\n  },\n  sectionHeader: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 12,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default TimeSelectionCard; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n  Platform,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport ServiceAndPetsCard from './bookingComponents/ServiceAndPetsCard';\nimport DateSelectionCard from './bookingComponents/DateSelectionCard';\nimport TimeSelectionCard from './bookingComponents/TimeSelectionCard';\nimport ReviewAndRatesCard from './bookingComponents/ReviewAndRatesCard';\nimport StepProgressIndicator from './common/StepProgressIndicator';\nimport { updateBookingDraftPetsAndServices, \n         updateBookingDraftTimeAndDate, \n         updateBookingDraftMultipleDays,\n         updateBookingDraftRecurring,\n         createBookingFromDraft,\n         getBookingDraftDatesAndTimes\n} from '../api/API';\nimport { convertToUTC, formatDateForAPI, formatTimeForAPI, parseOccurrencesForBookingSteps } from '../utils/time_utils';\n\nconst STEPS = {\n  SERVICES_AND_PETS: {\n    id: 0,\n    name: 'Services & Pets'\n  },\n  DATE_SELECTION: {\n    id: 1,\n    name: 'Date Selection'\n  },\n  TIME_SELECTION: {\n    id: 2,\n    name: 'Time Selection'\n  },\n  REVIEW_AND_RATES: {\n    id: 3,\n    name: 'Review & Rates'\n  }\n};\n\nconst BookingStepModal = ({ \n  visible, \n  onClose,\n  bookingId,\n  onComplete,\n  initialData = {},\n  navigation\n}) => {\n  const { is_DEBUG, screenWidth, timeSettings } = useContext(AuthContext);\n  const isSmallScreen = screenWidth < 600;\n  const isDesktop = screenWidth > 768;\n  const [currentStep, setCurrentStep] = useState(STEPS.SERVICES_AND_PETS.id);\n  const [bookingData, setBookingData] = useState({\n    service: initialData.service || null,\n    pets: initialData.pets || [],\n    dates: initialData.dates || [],\n    bookingType: initialData.bookingType || 'one-time',\n    dateRangeType: initialData.dateRangeType || 'date-range',\n    times: initialData.times || {\n      startTime: '09:00',  // Default start time\n      endTime: '17:00',    // Default end time\n      isOvernightForced: false,\n      hasIndividualTimes: false  // Default to false\n    },\n    rates: initialData.rates || {},\n    dateSelectionData: null,\n    dateRange: null,\n    hasFetchedDates: false, // Track whether dates have been fetched\n  });\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Add effect to log initial data\n  useEffect(() => {\n    debugLog('MBA12345 Initial data received:', initialData);\n    debugLog('MBA12345 Initial booking data state:', bookingData);\n  }, [initialData]);\n\n  // New effect to fetch draft dates and times\n  useEffect(() => {\n    const fetchDraftDatesAndTimes = async () => {\n      if (!bookingId || !visible) return;\n      \n      // Only fetch if we haven't already loaded dates, or if they're empty\n      if (bookingData.hasFetchedDates) {\n        debugLog('MBA2j3kbr9hve4: Skipping fetch as hasFetchedDates is true');\n        return;\n      }\n      \n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        debugLog('MBA2j3kbr9hve4: Fetching draft dates and times for booking ID:', bookingId);\n        const response = await getBookingDraftDatesAndTimes(bookingId);\n        debugLog('MBA2j3kbr9hve4: Received draft dates and times:', response);\n        \n        if (response) {\n          // Use our utility function to parse occurrences correctly\n          const parsedData = parseOccurrencesForBookingSteps(response.occurrences || []);\n          \n          debugLog('MBA2j3kbr9hve4: Parsed draft dates and times:', parsedData);\n          \n          // Check if this is an overnight service\n          // First check the service from the response \n          const serviceName = (response.service_details?.service_type || '').toLowerCase();\n          const knownOvernightTerms = ['overnight', 'boarding', 'house sitting', 'pet sitting'];\n          const isOvernightService = response.service_details?.is_overnight === true || \n                                   knownOvernightTerms.some(term => serviceName.includes(term));\n          \n          debugLog('MBA2j3kbr9hve4: Is overnight service from response:', isOvernightService);\n          debugLog('MBA2j3kbr9hve4: Service name:', serviceName);\n          debugLog('MBA2j3kbr9hve4: Known overnight terms match:', knownOvernightTerms.some(term => serviceName.includes(term)));\n          debugLog('MBA2j3kbr9hve4: Full service details from response:', response.service_details);\n\n          // Update bookingData with the service information to ensure we have the overnight status\n          let serviceData = null;\n          if (response.service_details) {\n            serviceData = {\n              ...response.service_details,\n              service_id: response.service_details.service_id,\n              service_name: response.service_details.service_type,\n              is_overnight: isOvernightService, // Using our improved overnight detection\n            };\n            debugLog('MBA2j3kbr9hve4: Setting service data with overnight status:', serviceData);\n          }\n          \n          // Check for occurrences to determine if this is an overnight booking\n          if (response.occurrences && response.occurrences.length > 0) {\n            // Check if we can determine if this is an overnight booking from the dates\n            const firstOcc = response.occurrences[0];\n            const lastOcc = response.occurrences[response.occurrences.length - 1];\n            \n            // If first and last occurrence have different dates, this might be an overnight range\n            if (firstOcc.start_date !== lastOcc.end_date) {\n              const startDate = new Date(firstOcc.start_date);\n              const endDate = new Date(lastOcc.end_date);\n              const daysDifference = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n              \n              // If the difference is 1+ days, it's likely an overnight booking\n              if (daysDifference >= 1) {\n                debugLog('MBA2j3kbr9hve4: DETECTED OVERNIGHT from date range:', {\n                  startDate: firstOcc.start_date,\n                  endDate: lastOcc.end_date,\n                  daysDifference\n                });\n                \n                // Force overnight mode\n                if (serviceData) {\n                  serviceData.is_overnight = true;\n                }\n              }\n            }\n          }\n            \n          // Special check to handle a possible case where we have a multi-day date range\n          // with only start and end dates in individual occurrences (instead of all dates)\n          if (response.occurrences?.length === 2) {\n            try {\n              const occ1Date = new Date(response.occurrences[0].start_date);\n              const occ2Date = new Date(response.occurrences[1].start_date);\n              \n              // Check if they are more than 1 day apart\n              const daysBetween = Math.abs(Math.round((occ2Date - occ1Date) / (1000 * 60 * 60 * 24)));\n              \n              if (daysBetween > 1) {\n                debugLog('MBA2j3kbr9hve4: DETECTED POTENTIAL OVERNIGHT from date distance:', {\n                  date1: response.occurrences[0].start_date,\n                  date2: response.occurrences[1].start_date,\n                  daysBetween\n                });\n                \n                // Force overnight mode if we have more than 1 day between occurrences\n                if (serviceData) {\n                  serviceData.is_overnight = true;\n                }\n              }\n            } catch (err) {\n              debugLog('MBA2j3kbr9hve4: Error checking occ dates:', err);\n            }\n          }\n            \n          // Ensure we set a correct dateRangeType\n          // If we have detected an overnight service, force 'date-range' mode\n          let dateRangeType = response.date_range_type || 'date-range';\n          if (isOvernightService || (serviceData && serviceData.is_overnight)) {\n            dateRangeType = 'date-range';\n            debugLog('MBA2j3kbr9hve4: Forcing date-range type for overnight service');\n          } \n          // Otherwise, if we have non-consecutive dates, force multiple-days mode\n          else if (parsedData.dates && parsedData.dates.length > 1 && !parsedData.dateRange) {\n            dateRangeType = 'multiple-days';\n            debugLog('MBA2j3kbr9hve4: Non-consecutive dates detected, forcing multiple-days mode');\n          }\n            \n          // Determine final overnight status\n          const isOvernightForced = isOvernightService || (serviceData && serviceData.is_overnight);\n          \n          debugLog('MBA2j3kbr9hve4: Final overnight determination:', {\n            initialCheck: isOvernightService,\n            afterOccurrenceChecks: serviceData?.is_overnight,\n            finalIsOvernightForced: isOvernightForced\n          });\n          \n          setBookingData(prev => ({\n            ...prev,\n            dates: parsedData.dates || [],\n            dateRange: parsedData.dateRange,\n            times: {\n              ...(parsedData.defaultTimes || {}),\n              ...parsedData.individualTimes,\n              individualTimeRanges: parsedData.individualTimes || {},\n              allTimesAreTheSame: parsedData.allTimesAreTheSame,\n              hasIndividualTimes: !parsedData.allTimesAreTheSame,\n              isOvernightForced: isOvernightForced\n            },\n            dateRangeType: dateRangeType,\n            bookingType: response.booking_type || prev.bookingType || 'one-time',\n            hasFetchedDates: true, // Flag to prevent refetching\n            // Update service information with overnight status\n            service: serviceData || prev.service\n          }));\n        }\n      } catch (error) {\n        debugLog('MBA2j3kbr9hve4: Error fetching draft dates and times:', error);\n        // Only show an error if we're not already on step 1 (service selection)\n        // This prevents showing an error when we're editing an existing booking\n        // that might not have dates/times yet\n        if (currentStep > STEPS.SERVICES_AND_PETS.id) {\n          setError('Failed to load booking details. Please try again.');\n        } else {\n          // Log the error but don't show it to the user on the first step\n          debugLog('MBA2j3kbr9hve4: Suppressing error on first step:', error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchDraftDatesAndTimes();\n  }, [bookingId, visible, currentStep, bookingData.hasFetchedDates]);\n\n  // Effect to ensure dateRangeType is always 'date-range' for overnight services\n  useEffect(() => {\n    if (bookingData.service?.is_overnight || bookingData.times?.isOvernightForced) {\n      debugLog('MBA2j3kbr9hve4: Detected overnight service, ensuring dateRangeType is date-range');\n      \n      // If we have an overnight service but dateRangeType is not date-range, update it\n      if (bookingData.dateRangeType !== 'date-range') {\n        debugLog('MBA2j3kbr9hve4: Updating dateRangeType from', bookingData.dateRangeType, 'to date-range');\n        \n        setBookingData(prev => ({\n          ...prev,\n          dateRangeType: 'date-range'\n        }));\n      }\n    }\n  }, [bookingData.service, bookingData.times?.isOvernightForced]);\n\n  const handleServiceSelect = (service) => {\n    debugLog('MBA12345 Selected service:', service);\n    \n    // Check if the service has an overnight property or name contains overnight-related terms\n    const serviceName = (service?.service_name || '').toLowerCase();\n    const knownOvernightTerms = ['overnight', 'boarding', 'house sitting', 'pet sitting'];\n    \n    // Determine if this is an overnight service from the is_overnight flag or name\n    const isOvernight = service?.is_overnight === true || \n                        knownOvernightTerms.some(term => serviceName.includes(term));\n    \n    debugLog('MBA2j3kbr9hve4: Service overnight status:', {\n      isOvernight,\n      serviceData: service,\n      serviceName,\n      matchesOvernightTerms: knownOvernightTerms.some(term => serviceName.includes(term))\n    });\n    \n    setBookingData(prev => {\n      // Update times object to include isOvernightForced based on service\n      const updatedTimes = {\n        ...(prev.times || {}),\n        // Explicitly set isOvernightForced based on service type\n        isOvernightForced: isOvernight\n      };\n      \n      debugLog('MBA2j3kbr9hve4: Updated times with overnight status:', updatedTimes);\n      \n      // Also update the service object to ensure is_overnight is set correctly\n      const updatedService = {\n        ...service,\n        is_overnight: isOvernight\n      };\n      \n      return {\n        ...prev,\n        service: updatedService,\n        // Also update the times object to ensure isOvernightForced is set correctly\n        times: updatedTimes,\n        // Force date-range selection mode for overnight services\n        dateRangeType: isOvernight ? 'date-range' : prev.dateRangeType\n      };\n    });\n  };\n\n  const handlePetSelect = (pet) => {\n    debugLog('MBA12345 Selected/deselected pet:', pet);\n    \n    const updatedPets = bookingData.pets.find(p => p.pet_id === pet.pet_id)\n      ? bookingData.pets.filter(p => p.pet_id !== pet.pet_id)\n      : [...bookingData.pets, pet];\n\n    setBookingData(prev => ({\n      ...prev,\n      pets: updatedPets\n    }));\n  };\n\n  const handleDateSelect = (dateData) => {\n    debugLog('MBA12345 Selected dates:', dateData);\n    debugLog('MBA2j3kbr9hve4: CRITICAL handleDateSelect rangeType:', {\n      rangeType: dateData.rangeType,\n      currentDateRangeType: bookingData.dateRangeType,\n      isServiceOvernight: bookingData.service?.is_overnight,\n      isTimesOvernightForced: bookingData.times?.isOvernightForced\n    });\n    \n    setBookingData(prev => {\n      // Preserve date range when switching to multiple-days\n      let newDateRange = prev.dateRange;\n      \n      // Update date range based on the selection type\n      if (dateData.rangeType === 'date-range' && dateData.startDate && dateData.endDate) {\n        newDateRange = {\n          startDate: dateData.startDate,\n          endDate: dateData.endDate\n        };\n      } else if (dateData.rangeType === 'multiple-days') {\n        // Keep the existing date range when in multiple-days mode\n        newDateRange = prev.dateRange;\n      } else if (!dateData.dates || dateData.dates.length === 0) {\n        // Clear date range if all dates are cleared\n        newDateRange = null;\n      }\n\n      return {\n        ...prev,\n        dates: dateData.dates || [],\n        dateSelectionData: dateData,\n        dateRange: newDateRange,\n        dateRangeType: dateData.rangeType || prev.dateRangeType\n      };\n    });\n  };\n\n  const handleBookingTypeChange = (bookingType) => {\n    debugLog('MBA12345 Booking type changed:', bookingType);\n    setBookingData(prev => ({\n      ...prev,\n      bookingType,\n      // Clear dates when changing booking type\n      dates: []\n    }));\n  };\n\n  const handleDateRangeTypeChange = (dateRangeType) => {\n    debugLog('MBA12345 Date range type changed:', dateRangeType);\n    setBookingData(prev => ({\n      ...prev,\n      dateRangeType\n    }));\n  };\n\n  const handleTimeSelect = (timeData) => {\n    debugLog('MBAoi1h34ghnvo: TimeSelectionCard sent time data:', timeData);\n\n    // Just for logging\n    const hasServiceOvernight = bookingData.service?.is_overnight === true;\n    \n    setBookingData(prev => {\n      // Check if we have individual day times\n      if (timeData.hasIndividualTimes) {\n        debugLog('MBAoi1h34ghnvo: Processing individual times');\n        \n        // Create a new times object that preserves all individual time changes\n        const individualTimes = {\n          ...prev.times,\n          hasIndividualTimes: true,\n          isOvernightForced: timeData.isOvernightForced,\n          dates: timeData.dates || prev.times.dates || [],\n          // Preserve the raw individualTimeRanges\n          individualTimeRanges: timeData.individualTimeRanges || {}\n        };\n\n        // Add all date-specific time changes\n        Object.keys(timeData).forEach(key => {\n          if (key.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            debugLog('MBAoi1h34ghnvo: Processing date key:', key, timeData[key]);\n            // Ensure we preserve the exact time data for each date\n            individualTimes[key] = {\n              startTime: timeData[key].startTime,\n              endTime: timeData[key].endTime,\n              isOvernightForced: timeData[key].isOvernightForced\n            };\n          }\n        });\n          \n        debugLog('MBAoi1h34ghnvo: Final individual times object:', individualTimes);\n        \n        return {\n          ...prev,\n          times: individualTimes\n        };\n      } else {\n        debugLog('MBAoi1h34ghnvo: Using default time range mode');\n        \n        // Create a new times object that preserves any existing values\n        const updatedTimes = {\n          ...prev.times,\n          startTime: timeData.startTime ? `${String(timeData.startTime.hours).padStart(2, '0')}:${String(timeData.startTime.minutes || 0).padStart(2, '0')}` : prev.times.startTime,\n          endTime: timeData.endTime ? `${String(timeData.endTime.hours).padStart(2, '0')}:${String(timeData.endTime.minutes || 0).padStart(2, '0')}` : prev.times.endTime,\n          isOvernightForced: timeData.isOvernightForced,\n          hasIndividualTimes: false,\n          dates: timeData.dates || prev.times.dates || []\n        };\n\n        debugLog('MBAoi1h34ghnvo: Updated default times:', updatedTimes);\n\n        return {\n          ...prev,\n          times: updatedTimes\n        };\n      }\n    });\n  };\n\n  const canProceedToNextStep = () => {\n    switch (currentStep) {\n      case STEPS.SERVICES_AND_PETS.id:\n        return bookingData.service && bookingData.pets.length > 0;\n      case STEPS.DATE_SELECTION.id:\n        // Check if we have valid dates, either from:\n        // 1. dateSelectionData that's been validated\n        // 2. dates array with entries\n        // 3. a valid dateRange with both startDate and endDate\n\n        // First check if dateSelectionData exists and is valid\n        if (bookingData.dateSelectionData && bookingData.dateSelectionData.isValid) {\n          return true;\n        }\n        \n        // Check if we have any dates in the array\n        if (bookingData.dates && bookingData.dates.length > 0) {\n          return true;\n        }\n        \n        // Check if we have a valid date range\n        if (bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate) {\n          return true;\n        }\n        \n        // No valid date configuration found\n        return false;\n      case STEPS.TIME_SELECTION.id:\n        // Always allow proceeding from time selection since we have default times\n        return true;\n      case STEPS.REVIEW_AND_RATES.id:\n        return true;\n      // Add validation for other steps as they are implemented\n      default:\n        return false;\n    }\n  };\n\n  const handleNext = async () => {\n    if (!canProceedToNextStep()) {\n      setError('Please complete all required fields before proceeding');\n      return;\n    }\n\n    setError(null);\n    \n    // Log what's happening when advancing to the next step\n    debugLog('MBA2j3kbr9hve4: Moving to next step:', {\n      currentStep,\n      nextStep: currentStep + 1,\n      hasValidDates: bookingData.dates && bookingData.dates.length > 0,\n      hasValidDateRange: bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate,\n      hasValidDateSelectionData: bookingData.dateSelectionData && bookingData.dateSelectionData.isValid,\n      dateRangeType: bookingData.dateRangeType,\n      bookingType: bookingData.bookingType\n    });\n    \n    if (currentStep < STEPS.REVIEW_AND_RATES.id) {\n      // If we're on the first step, update the draft with selected service and pets\n      if (currentStep === STEPS.SERVICES_AND_PETS.id) {\n        try {\n          debugLog('MBA2j3kbr9hve4: Updating booking draft with service and pets');\n          await updateBookingDraftPetsAndServices(bookingId, {\n            service_id: bookingData.service?.service_id,\n            pets: bookingData.pets\n          });\n          debugLog('MBA2j3kbr9hve4: Successfully updated booking draft with service and pets');\n          \n          // Reset hasFetchedDates to force fetching dates and times when moving to the dates step\n          setBookingData(prev => ({\n            ...prev,\n            hasFetchedDates: false\n          }));\n        } catch (error) {\n          debugLog('MBA2j3kbr9hve4: Error updating booking draft:', error);\n          setError('Failed to save service and pet selections');\n          return;\n        }\n      }\n      \n      // Handle time selection calculations before proceeding\n      if (currentStep === STEPS.TIME_SELECTION.id) {\n        try {\n          debugLog('MBA5asdt3f4321 Original booking data:', bookingData);\n\n          // Direct fix - if the service is overnight, always use the updateBookingDraftTimeAndDate endpoint\n          // regardless of the dateRangeType that might have been previously set\n          const isServiceOvernightFlag = bookingData.service?.is_overnight === true;\n          const isTimeOvernightFlag = bookingData.times?.isOvernightForced === true;\n          const isAnyOvernightFlag = isServiceOvernightFlag || isTimeOvernightFlag;\n          \n          debugLog('MBA5asdt3f4321 DIRECT OVERNIGHT CHECK AT START:', {\n            isServiceOvernightFlag,\n            isTimeOvernightFlag,\n            isAnyOvernightFlag,\n            dateRangeType: bookingData.dateRangeType\n          });\n          \n          // If any overnight flag is set, we'll bypass all the other checks and directly use the overnight endpoint\n          if (isAnyOvernightFlag && bookingData.dateRange) {\n            // Force overnight mode\n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Forcing overnight mode for any overnight service');\n            \n            const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n            const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n            const startTime = formatTimeForAPI(bookingData.times.startTime);\n            const endTime = formatTimeForAPI(bookingData.times.endTime);\n            \n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Using time-and-date endpoint with dates:', {\n              startDate,\n              endDate,\n              startTime,\n              endTime\n            });\n            \n            // Get user's timezone from context\n            const userTz = timeSettings?.timezone || 'US/Mountain';\n            debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion:', userTz);\n            \n            // Convert local times to UTC before sending to backend\n            const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n              startDate,\n              startTime,\n              userTz\n            );\n\n            const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n              endDate,\n              endTime,\n              userTz\n            );\n\n            // Call the API with UTC times and dates\n            const response = await updateBookingDraftTimeAndDate(\n              bookingId,\n              utcStartDate,\n              utcEndDate,\n              utcStartTime,\n              utcEndTime\n            );\n            \n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Response from updateBookingDraftTimeAndDate:', response);\n            \n            // Update booking data with the response's draft_data\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data,\n                // Ensure we maintain overnight settings\n                times: {\n                  ...(response.draft_data.times || prev.times),\n                  isOvernightForced: true\n                },\n                service: {\n                  ...(response.draft_data.service || prev.service),\n                  is_overnight: true\n                },\n                // Force dateRangeType to date-range for overnight services\n                dateRangeType: 'date-range'\n              }));\n            }\n            \n            // Skip the rest of the checks - we've already made the API call\n            setCurrentStep(prev => prev + 1);\n            return;\n          }\n          \n          if (bookingData.dateRangeType === 'date-range') {\n            // Check if this is a non-overnight service with date range\n            const isServiceOvernight = bookingData.service?.is_overnight === true;\n            // Check time overnight status - but don't count 00:00 end time as overnight by itself\n            const isTimeOvernight = bookingData.times?.isOvernightForced === true && \n                                   !(bookingData.times.endTime === '00:00' && !isServiceOvernight);\n            \n            // Check if the date range spans multiple days - if it does, treat it as overnight\n            let isMultiDayRange = false;\n            if (bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate) {\n              try {\n                const startDate = new Date(bookingData.dateRange.startDate);\n                const endDate = new Date(bookingData.dateRange.endDate);\n                const daysDifference = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n                \n                // If more than 1 day difference, consider it multi-day\n                if (daysDifference > 1) {\n                  isMultiDayRange = true;\n                  debugLog('MBA53212co2v3nvoub5 DETECTED multi-day date range:', {\n                    startDate: bookingData.dateRange.startDate,\n                    endDate: bookingData.dateRange.endDate,\n                    daysDifference\n                  });\n                }\n              } catch (err) {\n                debugLog('MBA53212co2v3nvoub5 Error checking date range:', err);\n              }\n            }\n            \n            debugLog('MBA53212co2v3nvoub5 CRITICAL Checking overnight status:', {\n              dateRangeType: bookingData.dateRangeType,\n              serviceIsOvernight: isServiceOvernight,\n              timesIsOvernightForced: bookingData.times?.isOvernightForced,\n              endTime: bookingData.times?.endTime,\n              endTimeIsMidnight: bookingData.times?.endTime === '00:00',\n              // Special check for midnight end time\n              isMidnightEndTimeButNotForced: bookingData.times?.endTime === '00:00' && !isServiceOvernight,\n              isTimeOvernight: isTimeOvernight,\n              isMultiDayRange: isMultiDayRange,\n              service: bookingData.service,\n              times: bookingData.times\n            });\n            \n            // DIRECT FIX: If either the service or times indicate this is an overnight service,\n            // or if we have a multi-day date range, we need to use the updateBookingDraftTimeAndDate endpoint\n            if (isServiceOvernight || isTimeOvernight || isMultiDayRange) {\n              // Force the overnight flag to ensure we get the right API call in future steps\n              const updatedBookingData = {\n                ...bookingData,\n                service: {\n                  ...bookingData.service,\n                  is_overnight: true\n                },\n                times: {\n                  ...bookingData.times,\n                  isOvernightForced: true\n                }\n              };\n              \n              // Update state with the forced overnight mode\n              setBookingData(updatedBookingData);\n              \n              // This is an overnight service with a date range, so we should call updateBookingDraftTimeAndDate\n              debugLog('MBA53212co2v3nvoub5 OVERRIDE: Forcing overnight mode for date range due to overnight service or flag');\n              \n              const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n              const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n              const startTime = formatTimeForAPI(bookingData.times.startTime);\n              const endTime = formatTimeForAPI(bookingData.times.endTime);\n              \n              // Get user's timezone from context\n              const userTz = timeSettings?.timezone || 'US/Mountain';\n              debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion:', userTz);\n              \n              // Convert local times to UTC before sending to backend\n              const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                startDate,\n                startTime,\n                userTz\n              );\n\n              const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDate,\n                endTime,\n                userTz\n              );\n\n              // Call the API with UTC times and dates\n              const response = await updateBookingDraftTimeAndDate(\n                bookingId,\n                utcStartDate,\n                utcEndDate,\n                utcStartTime,\n                utcEndTime\n              );\n              \n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftTimeAndDate (overnight override):', response);\n              \n              // Update booking data with the response's draft_data\n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data,\n                  // Ensure we maintain overnight settings\n                  times: {\n                    ...(response.draft_data.times || prev.times),\n                    isOvernightForced: true\n                  },\n                  service: {\n                    ...(response.draft_data.service || prev.service),\n                    is_overnight: true\n                  }\n                }));\n              }\n              \n              // Skip the rest of the checks since we've already made the API call\n              setCurrentStep(prev => prev + 1);\n              return;\n            }\n            \n            const isNonOvernightDateRange = \n              bookingData.dateRangeType === 'date-range' && \n              !isServiceOvernight &&\n              !isTimeOvernight &&\n              !isMultiDayRange;\n\n            debugLog('MBA53212co2v3nvoub5 Decision:', {\n              isNonOvernightDateRange: isNonOvernightDateRange,\n              willUseEndpoint: isNonOvernightDateRange ? 'updateBookingDraftMultipleDays' : 'updateBookingDraftTimeAndDate'\n            });\n\n            if (isNonOvernightDateRange) {\n              // For non-overnight date range services, we need to create individual days\n              debugLog('MBA53212co2v3nvoub5 Handling non-overnight date range as individual occurrences');\n              \n              // Create dates array from date range\n              const startDate = new Date(bookingData.dateRange.startDate);\n              const endDate = new Date(bookingData.dateRange.endDate);\n              const dates = [];\n              \n              // Generate all dates in the range\n              const currentDate = new Date(startDate);\n              while (currentDate <= endDate) {\n                dates.push(new Date(currentDate));\n                currentDate.setDate(currentDate.getDate() + 1);\n              }\n              \n              debugLog('MBA53212co2v3nvoub5 Generated dates from range:', dates.map(d => d.toISOString().split('T')[0]));\n              debugLog('MBA53212co2v3nvoub5 Time settings:', bookingData.times);\n              \n              // Format dates and determine times for each day\n              const formattedDates = dates.map(date => {\n                const dateKey = date.toISOString().split('T')[0];\n                debugLog('MBA53212co2v3nvoub5 Processing date:', dateKey);\n                \n                let dayTimes = bookingData.times;\n                \n                // If there are individual time settings for this day, use those\n                if (bookingData.times[dateKey] && bookingData.times.hasIndividualTimes) {\n                  dayTimes = bookingData.times[dateKey];\n                  debugLog('MBA53212co2v3nvoub5 Using individual times for date:', dateKey, dayTimes);\n                } else {\n                  debugLog('MBA53212co2v3nvoub5 Using default times for date:', dateKey, dayTimes);\n                }\n                \n                // Format the start time\n                let startTime;\n                if (typeof dayTimes.startTime === 'string') {\n                  startTime = dayTimes.startTime;\n                } else if (dayTimes.startTime?.hours !== undefined) {\n                  startTime = `${String(dayTimes.startTime.hours).padStart(2, '0')}:${String(dayTimes.startTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                  // Default time if missing\n                  startTime = '09:00';\n                }\n                \n                // Format the end time\n                let endTime;\n                if (typeof dayTimes.endTime === 'string') {\n                  endTime = dayTimes.endTime;\n                } else if (dayTimes.endTime?.hours !== undefined) {\n                  endTime = `${String(dayTimes.endTime.hours).padStart(2, '0')}:${String(dayTimes.endTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                  // Default time if missing\n                  endTime = '17:00';\n                }\n                \n                debugLog('MBA53212co2v3nvoub5 Formatted times for date:', dateKey, { startTime, endTime });\n                \n                // Format the date\n                const formattedDate = formatDateForAPI(date);\n                debugLog('MBA53212co2v3nvoub5 Formatted date:', formattedDate);\n                \n                // Determine if the end time might cross to the next day\n                // Check if end time is midnight or earlier than start time, indicating day boundary crossing\n                const needsNextDayDate = endTime === '00:00' || \n                                        (parseInt(endTime.split(':')[0], 10) < parseInt(startTime.split(':')[0], 10)) ||\n                                        (parseInt(endTime.split(':')[0], 10) === parseInt(startTime.split(':')[0], 10) && \n                                         parseInt(endTime.split(':')[1], 10) < parseInt(startTime.split(':')[1], 10));\n                \n                // Calculate end date - either same day or next day\n                const endDateObj = needsNextDayDate \n                  ? new Date(date.getTime() + 24*60*60*1000) // Next day if crossing midnight\n                  : new Date(date);\n                  \n                const formattedEndDate = formatDateForAPI(endDateObj);\n                \n                debugLog('MBA53212co2v3nvoub5 End date calculation:', {\n                  needsNextDayDate,\n                  startTime,\n                  endTime,\n                  originalDate: formattedDate,\n                  calculatedEndDate: formattedEndDate\n                });\n                \n                // IMPORTANT: Crossing midnight or having a different end date due to 00:00 end time\n                // should NOT force overnight mode - that should only be based on the service type\n                // We're just calculating the correct end date for API payload\n                \n                // Get user's timezone from context\n                const userTz = timeSettings?.timezone || 'US/Mountain';\n                debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion in map function:', userTz);\n                \n                // Convert local times to UTC for start time and date\n                const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                  formattedDate,\n                  startTime,\n                  userTz\n                );\n                \n                // Convert end time to UTC with potentially different end date\n                const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                  formattedEndDate,\n                  endTime,\n                  userTz\n                );\n                \n                debugLog('MBA53212co2v3nvoub5 Converted UTC times:', { \n                  utcStartDate, \n                  utcStartTime, \n                  utcEndDate, \n                  utcEndTime,\n                  isDifferentDates: utcStartDate !== utcEndDate\n                });\n                \n                // Return structured data with separate start and end dates\n                return {\n                  date: utcStartDate,\n                  startTime: utcStartTime,\n                  endDate: utcEndDate,  // Always include endDate\n                  endTime: utcEndTime\n                };\n              });\n              \n              debugLog('MBA53212co2v3nvoub5 - Converted UTC dates:', formattedDates);\n              \n              // Call the API for multiple individual days (even though they're from a date range)\n              const response = await updateBookingDraftMultipleDays(\n                bookingId,\n                {\n                  dates: formattedDates,\n                  times: {} // Empty times object since times are already included in each date\n                },\n                timeSettings\n              );\n              \n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftMultipleDays:', response);\n              \n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data\n                }));\n              }\n            } else {\n              // Handle date range selection for overnight services (existing logic)\n              const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n              const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n              const startTime = formatTimeForAPI(bookingData.times.startTime);\n              const endTime = formatTimeForAPI(bookingData.times.endTime);\n\n              debugLog('MBA53212co2v3nvoub5 Using update-time-and-date endpoint for OVERNIGHT service with dates:', {\n                startDate,\n                endDate,\n                startTime,\n                endTime,\n                service: {\n                  id: bookingData.service?.service_id,\n                  name: bookingData.service?.service_name,\n                  is_overnight: bookingData.service?.is_overnight\n                },\n                times: {\n                  isOvernightForced: bookingData.times?.isOvernightForced\n                }\n              });\n\n              // Convert local times to UTC before sending to backend\n              const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                startDate,\n                startTime,\n                userTz\n              );\n\n              const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDate,\n                endTime,\n                userTz\n              );\n\n              debugLog('MBA53212co2v3nvoub5 UTC dates and times:', {\n                utcStartDate,\n                utcStartTime,\n                utcEndDate,\n                utcEndTime\n              });\n\n              // Call the API with UTC times and dates\n              const response = await updateBookingDraftTimeAndDate(\n                bookingId,\n                utcStartDate,\n                utcEndDate,\n                utcStartTime,\n                utcEndTime\n              );\n\n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftTimeAndDate:', response);\n\n              // Update booking data with the response's draft_data\n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data\n                }));\n              } else {\n                debugLog('MBA53212co2v3nvoub5 No draft_data in response:', response);\n              }\n            }\n          } else if (bookingData.dateRangeType === 'multiple-days') {\n            // Handle multiple individual days\n            debugLog('MBA53212co2v3nvoub5 Multiple days selection:', {\n              dates: bookingData.dates,\n              times: bookingData.times\n            });\n\n            // Call the API for multiple individual days\n            const response = await updateBookingDraftMultipleDays(\n              bookingId,\n              {\n                dates: bookingData.dates,\n                times: bookingData.times\n              },\n              timeSettings\n            );\n\n            debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftMultipleDays:', response);\n\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data\n              }));\n            }\n          } else if (bookingData.bookingType === 'recurring') {\n            // Handle recurring dates\n            debugLog('MBA53212co2v3nvoub5 Recurring dates selection:', {\n              startDate: bookingData.recurringStartDate,\n              endDate: bookingData.recurringEndDate,\n              daysOfWeek: bookingData.selectedDaysOfWeek,\n              frequency: bookingData.selectedFrequency,\n              times: bookingData.times\n            });\n\n            // Call the API for recurring dates\n            const response = await updateBookingDraftRecurring(\n              bookingId,\n              {\n                startDate: bookingData.recurringStartDate,\n                endDate: bookingData.recurringEndDate,\n                daysOfWeek: bookingData.selectedDaysOfWeek,\n                frequency: bookingData.selectedFrequency,\n                startTime: bookingData.times.startTime,\n                endTime: bookingData.times.endTime\n              }\n            );\n\n            debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftRecurring:', response);\n\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data\n              }));\n            }\n          }\n        } catch (error) {\n          debugLog('MBA53212co2v3nvoub5 Error calculating booking totals:', error);\n          debugLog('MBA53212co2v3nvoub5 Error stack:', error.stack);\n          debugLog('MBA53212co2v3nvoub5 Error details:', {\n            message: error.message,\n            name: error.name,\n            response: error.response?.data\n          });\n          setError('Failed to calculate booking totals');\n          return;\n        }\n      }\n\n      setCurrentStep(prev => prev + 1);\n    } else {\n      // We're on the final step (REVIEW_AND_RATES), so create the booking\n      try {\n        setError(null);\n        \n        // Check if we have a conversation ID from the booking data\n        if (!bookingData.conversation_id) {\n          setError('Missing conversation information');\n          return;\n        }\n        \n        debugLog('MBA66777 Creating booking from draft with conversation ID:', bookingData.conversation_id);\n        \n        // Call the API to create a booking from the draft\n        const response = await createBookingFromDraft(bookingData.conversation_id);\n        \n        debugLog('MBA66777 Booking created successfully:', response);\n        \n        // Create a booking message from the response data\n        // The booking data is in the message object of the response\n        const bookingMessageData = response.message || {};\n        const bookingId = response.booking_id;\n        \n        const bookingMessage = {\n          id: Date.now().toString(), // Temporary ID for UI purposes\n          type_of_message: 'send_approved_message',\n          metadata: {\n            booking_id: bookingId,\n            service_type: bookingMessageData.service_type || bookingData.service?.service_name,\n            occurrences: bookingMessageData.occurrences || [],\n            cost_summary: bookingMessageData.cost_summary || {\n              total_client_cost: bookingMessageData.occurrences?.[0]?.cost_summary?.total_client_cost,\n              total_sitter_payout: bookingMessageData.occurrences?.[0]?.cost_summary?.total_sitter_payout\n            }\n          },\n          content: 'Approval Request',\n          sent_by_other_user: false,\n          timestamp: new Date().toISOString()\n        };\n        \n        // Close the modal and pass the new booking data to the parent component\n        onComplete({\n          ...bookingData,\n          booking_id: bookingId,\n          status: 'Pending Client Approval',\n          message: bookingMessage // Include the new message to be added to the message list\n        });\n        \n        // Reset the modal to step 1 with initial state\n        // This ensures next time it's opened, it starts fresh\n        resetModal();\n        \n      } catch (error) {\n        debugLog('MBA66777 Error creating booking:', error);\n        setError('Failed to create booking. Please try again.');\n        \n        // Still try to close the modal in case the booking was actually created\n        // The backend handles duplicate bookings, so it's safe to let the user try again if needed\n        setTimeout(() => {\n          // Short timeout to let the user see the error\n          onComplete({\n            ...bookingData,\n            error: true,\n            errorMessage: error.message\n          });\n        }, 3000);\n      }\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > STEPS.SERVICES_AND_PETS.id) {\n      setCurrentStep(prev => prev - 1);\n    } else {\n      // We're on the first step, so close the modal\n      handleClose();\n    }\n  };\n\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case STEPS.SERVICES_AND_PETS.id:\n        return (\n          <ServiceAndPetsCard\n            bookingId={bookingId}\n            onServiceSelect={handleServiceSelect}\n            onPetSelect={handlePetSelect}\n            selectedService={bookingData.service}\n            selectedPets={bookingData.pets}\n            navigation={navigation}\n            onClose={onClose}\n          />\n        );\n      case STEPS.DATE_SELECTION.id:\n        debugLog('MBA2j3kbr9hve4: Rendering date selection with:', { \n          dates: bookingData.dates, \n          dateRange: bookingData.dateRange,\n          bookingType: bookingData.bookingType,\n          dateRangeType: bookingData.dateRangeType,\n          hasFetchedDates: bookingData.hasFetchedDates\n        });\n        \n        const dateSelectionIsOvernightMode = bookingData.service?.is_overnight || bookingData.times?.isOvernightForced || false;\n        \n        debugLog('MBA2j3kbr9hve4: Date selection overnight status:', {\n          serviceIsOvernight: bookingData.service?.is_overnight,\n          timesIsOvernightForced: bookingData.times?.isOvernightForced,\n          combinedMode: dateSelectionIsOvernightMode\n        });\n        \n        return (\n          <DateSelectionCard\n            selectedDates={bookingData.dates || []}\n            onDateSelect={handleDateSelect}\n            bookingType={bookingData.bookingType || 'one-time'}\n            dateRangeType={bookingData.dateRangeType || 'date-range'}\n            initialDateRange={bookingData.dateRange || null}\n            isOvernightForced={dateSelectionIsOvernightMode}\n          />\n        );\n      case STEPS.TIME_SELECTION.id:\n        // Check if we have valid dates to display\n        if (!bookingData.dates || bookingData.dates.length === 0) {\n          return (\n            <View style={styles.errorContainer}>\n              <Text style={styles.errorText}>Please select dates first</Text>\n            </View>\n          );\n        }\n        \n        // Log current service and times state BEFORE preparing initialTimes \n        debugLog('MBA66777: CURRENT STATE Before rendering time selection:', { \n          service: {\n            id: bookingData.service?.service_id,\n            name: bookingData.service?.service_name,\n            is_overnight: bookingData.service?.is_overnight\n          },\n          times: {\n            isOvernightForced: bookingData.times?.isOvernightForced,\n            hasIndividualTimes: bookingData.times?.hasIndividualTimes\n          },\n          dateRange: bookingData.dateRange,\n          dateRangeType: bookingData.dateRangeType\n        });\n        \n        // Prepare initialTimes object with all necessary data\n        const initialTimes = {\n          ...bookingData.times,\n          // Always include dates for multiple-days selection\n          dates: bookingData.dates || [],\n          // Include occurrences if available\n          occurrences: bookingData.occurrences || [],\n          // Ensure hasIndividualTimes is preserved from bookingData.times\n          hasIndividualTimes: bookingData.times?.hasIndividualTimes || false,\n          // Make sure isOvernightForced is included in initialTimes\n          isOvernightForced: bookingData.service?.is_overnight || bookingData.times?.isOvernightForced || false\n        };\n        \n        // If it's an overnight service, make sure hasIndividualTimes is false\n        if (bookingData.service?.is_overnight || bookingData.times?.isOvernightForced) {\n          initialTimes.hasIndividualTimes = false;\n          initialTimes.isOvernightForced = true;\n        }\n        \n        const isOvernightMode = bookingData.service?.is_overnight || bookingData.times?.isOvernightForced || false;\n        \n        debugLog('MBA66777: Passing initialTimes to TimeSelectionCard:', {\n          hasIndividualTimes: initialTimes.hasIndividualTimes,\n          dateCount: initialTimes.dates?.length || 0,\n          isOvernightService: bookingData.service?.is_overnight,\n          isOvernightForced: bookingData.times?.isOvernightForced,\n          combinedOvernight: isOvernightMode\n        });\n        \n        return (\n          <TimeSelectionCard\n            onTimeSelect={handleTimeSelect}\n            initialTimes={initialTimes}\n            dateRange={bookingData.dateRange}\n            selectedService={{\n              ...bookingData.service,\n              is_overnight: isOvernightMode\n            }}\n            isOvernightForced={isOvernightMode}\n          />\n        );\n      case STEPS.REVIEW_AND_RATES.id:\n        return (\n          <ReviewAndRatesCard\n            bookingData={bookingData}\n            bookingId={bookingId}\n            onRatesUpdate={(updatedData) => {\n              debugLog('MBA2j3kbr9hve4: Rates updated:', updatedData);\n              setBookingData(prev => ({\n                ...prev,\n                occurrences: updatedData.occurrences,\n                cost_summary: updatedData.cost_summary\n              }));\n            }}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Function to reset the modal state\n  const resetModal = () => {\n    debugLog('MBA2j3kbr9hve4: Resetting booking step modal state');\n    setCurrentStep(STEPS.SERVICES_AND_PETS.id);\n    setBookingData({\n      service: initialData.service || null,\n      pets: initialData.pets || [],\n      dates: initialData.dates || [],\n      bookingType: initialData.bookingType || 'one-time',\n      dateRangeType: initialData.dateRangeType || 'date-range',\n      times: initialData.times || {\n        startTime: '09:00',\n        endTime: '17:00',\n        isOvernightForced: false,\n        hasIndividualTimes: false\n      },\n      rates: initialData.rates || {},\n      dateSelectionData: null,\n      dateRange: null,\n      hasFetchedDates: false, // Reset the fetch flag to ensure dates are refetched\n    });\n    setError(null);\n    setIsLoading(false);\n  };\n\n  // Function to handle cancellation of the modal\n  const handleClose = () => {\n    debugLog('MBA66777: Closing booking step modal and resetting state');\n    // Reset the modal state\n    resetModal();\n    // Call the onClose function passed as a prop\n    onClose();\n  };\n\n  // Add cleanup effect to ensure clean state when unmounting\n  useEffect(() => {\n    return () => {\n      debugLog('MBA2j3kbr9hve4: BookingStepModal unmounting, cleaning up state');\n      // This is a cleanup function that will run when the component unmounts\n      // We don't need to do anything here, just logging for debugging\n    };\n  }, []);\n\n  const formatDatesForAPI = (dateState) => {\n    if (!dateState || !dateState.dates || dateState.dates.length === 0) {\n      return { dates: [] };\n    }\n\n    // Format the dates for the API using the proper UTC conversion\n    const formattedDates = dateState.dates.map(date => {\n      const dateString = date.toISOString().split('T')[0];\n      \n      // Get time data for this specific date or fall back to default\n      let timeData = dateState.times;\n      \n      // Check if we have individual day schedules\n      if (dateState.times.hasIndividualTimes && dateState.times[dateString]) {\n        timeData = dateState.times[dateString];\n      }\n      \n      // Format start and end times\n      const formattedStartTime = formatTimeObj(timeData.startTime);\n      const formattedEndTime = formatTimeObj(timeData.endTime);\n      \n      // Handle midnight (00:00) as end of current day, not start of next day\n      // This ensures proper duration calculation and prevents negative durations\n      let endDate = dateString;\n      const isMidnightEnd = formattedEndTime === \"00:00\";\n      const isTimeBeforeStart = compareTimesAsMinutes(timeData.endTime, timeData.startTime) < 0;\n      \n      // If end time is midnight (00:00) or earlier than start time, use the next day as the end date\n      if (isMidnightEnd || isTimeBeforeStart) {\n        // Calculate the next day\n        const nextDay = new Date(date);\n        nextDay.setDate(nextDay.getDate() + 1);\n        endDate = nextDay.toISOString().split('T')[0];\n        \n        debugLog(\"MBA8810: Using next day for end date due to midnight/early morning end time:\", {\n          date: dateString,\n          startTime: formattedStartTime,\n          endTime: formattedEndTime,\n          endDate: endDate,\n          isMidnightEnd,\n          isTimeBeforeStart\n        });\n      }\n      \n      return {\n        date: dateString,\n        start_time: formattedStartTime,\n        end_time: formattedEndTime,\n        end_date: endDate, // Always include end_date for proper backend processing\n        is_overnight: timeData.isOvernightForced || dateState.service?.is_overnight || false\n      };\n    });\n\n    return { dates: formattedDates };\n  };\n\n  const formatTimeObj = (timeObj) => {\n    const hours = timeObj.hours.toString().padStart(2, '0');\n    const minutes = timeObj.minutes.toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n  \n  // Helper to compare two time objects by converting to minutes\n  const compareTimesAsMinutes = (time1, time2) => {\n    const time1Minutes = (time1.hours * 60) + time1.minutes;\n    const time2Minutes = (time2.hours * 60) + time2.minutes;\n    return time1Minutes - time2Minutes;\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"fade\"\n      onRequestClose={handleClose}\n      transparent={true}\n    >\n      <View style={styles.modalOverlay}>\n        <SafeAreaView style={styles.modalContent}>\n          <View style={styles.stepIndicatorContainer}>\n            <StepProgressIndicator\n              steps={Object.values(STEPS).map(step => step.name)}\n              currentStep={currentStep}\n            />\n          </View>\n          <ScrollView style={styles.scrollContent} contentContainerStyle={styles.scrollContentContainer}>\n            <View style={styles.content}>\n              {isLoading ? (\n                <View style={styles.loadingContainer}>\n                  <Text style={styles.loadingText}>Loading booking information...</Text>\n                </View>\n              ) : (\n                renderCurrentStep()\n              )}\n            </View>\n            {error && (\n              <Text style={styles.errorText}>{error}</Text>\n            )}\n          </ScrollView>\n          <View style={styles.footer}>\n            {currentStep === STEPS.SERVICES_AND_PETS.id ? (\n              // Step 1: [Cancel] [Next]\n              <>\n                <TouchableOpacity\n                  style={styles.cancelButton}\n                  onPress={handleClose}\n                >\n                  <Text style={styles.cancelButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.nextButton,\n                    (!canProceedToNextStep() || isLoading) && styles.disabledButton\n                  ]}\n                  onPress={handleNext}\n                  disabled={!canProceedToNextStep() || isLoading}\n                >\n                  <Text style={[\n                    styles.nextButtonText,\n                    (!canProceedToNextStep() || isLoading) && styles.disabledButtonText\n                  ]}>\n                    Next\n                  </Text>\n                </TouchableOpacity>\n              </>\n            ) : (\n              // Steps 2-4: [Back] [Cancel][Next/Confirm]\n              <>\n                <TouchableOpacity\n                  style={[styles.backButton, isSmallScreen && styles.smallScreenButton]}\n                  onPress={handleBack}\n                >\n                  <Text style={styles.backButtonText}>Back</Text>\n                </TouchableOpacity>\n                <View style={styles.spacer} />\n                <TouchableOpacity\n                  style={[styles.cancelButtonSmall, isSmallScreen && styles.smallScreenButton]}\n                  onPress={handleClose}\n                >\n                  <Text style={styles.cancelButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                <View style={isSmallScreen ? styles.smallMargin : null} />\n                <TouchableOpacity\n                  style={[\n                    styles.nextButtonSmall, \n                    isSmallScreen && styles.smallScreenButton,\n                    (!canProceedToNextStep() || isLoading) && styles.disabledButton\n                  ]}\n                  onPress={handleNext}\n                  disabled={!canProceedToNextStep() || isLoading}\n                >\n                  {currentStep === STEPS.REVIEW_AND_RATES.id && isSmallScreen ? (\n                    <View style={styles.confirmButtonColumn}>\n                      <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                        Request\n                      </Text>\n                      <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                        Booking\n                      </Text>\n                    </View>\n                  ) : (\n                    <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                      {currentStep === STEPS.REVIEW_AND_RATES.id ? 'Request Booking' : 'Next'}\n                    </Text>\n                  )}\n                </TouchableOpacity>\n              </>\n            )}\n          </View>\n        </SafeAreaView>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  modalContent: {\n    width: '95%',\n    maxWidth: Platform.OS === 'web' ? 600 : '100%',\n    maxHeight: '90%',\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  stepIndicatorContainer: {\n    width: '100%',\n    paddingVertical: 12,\n    backgroundColor: theme.colors.background,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  },\n  scrollContent: {\n    flex: 1,\n  },\n  scrollContentContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  footer: {\n    flexDirection: 'row',\n    padding: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.modernBorder,\n  },\n  spacer: {\n    width: 16,\n    flexGrow: 1,\n  },\n  smallMargin: {\n    width: 8,\n  },\n  backButton: {\n    minWidth: 100,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  smallScreenButton: {\n    minWidth: 80,\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n  },\n  backButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  cancelButton: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonSmall: {\n    minWidth: 100,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  nextButton: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  nextButtonSmall: {\n    minWidth: 100,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.placeHolderText,\n  },\n  nextButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  disabledButtonText: {\n    color: theme.colors.surface,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  loadingText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stepContent: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: theme.colors.modernBorder,\n    marginVertical: 16,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  confirmButtonColumn: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default BookingStepModal; ","import React, { useContext, useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { approveBooking } from '../api/API';\nimport { formatDateTimeRangeFromUTC, convertTo24Hour } from '../utils/time_utils';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport moment from 'moment-timezone';\nimport BookingApprovalModal from './BookingApprovalModal';\n\n// A simplified version of checkDSTChange that only relies on moment-timezone\nconst checkDSTChange = (startDate, startTime, endDate, endTime, timezone) => {\n  try {\n    // Create UTC moments for start and end time\n    const startMoment = moment.utc(`${startDate}T${startTime}:00Z`).tz(timezone);\n    const endMoment = moment.utc(`${endDate}T${endTime}:00Z`).tz(timezone);\n    \n    // Check if the offset from UTC (in minutes) is different\n    return startMoment.utcOffset() !== endMoment.utcOffset();\n  } catch (error) {\n    debugLog('MBA9876DST Error checking DST change:', error);\n    return false;\n  }\n};\n\nconst BookingMessageCard = ({ \n  type,  // 'request', 'approval', 'request_changes', or 'booking_confirmed'\n  displayType, // Optional override for the display title (e.g., 'booking_update')\n  data,\n  isFromMe,\n  onPress,\n  isProfessional,\n  onApproveSuccess,\n  onApproveError,\n  onEditDraft,\n  bookingStatus, // Added to know if booking is confirmed\n  hasChangeRequest, // Boolean to indicate if this approval has a pending change request\n  isNewestMessage = false, // Flag to indicate if this is the newest message for this booking\n  messageCreatedAt, // Timestamp of when the message was created\n  hasNewerApprovalRequests = false, // Flag to indicate if this booking_confirmed message has newer approval requests\n  isAfterConfirmation = false // Flag to indicate if this approval message comes after a booking confirmation\n}) => {\n  const { timeSettings } = useContext(AuthContext);\n  const userTimezone = timeSettings?.timezone || 'US/Mountain';\n  const [approvalModalVisible, setApprovalModalVisible] = useState(false);\n  const [safeInitialData, setSafeInitialData] = useState(null);\n  const [showAllDates, setShowAllDates] = useState(false); // New state for expanded/collapsed dates\n  \n  // Create safe data on component load\n  useEffect(() => {\n    // Ensure we have basic rate data for the initial load\n    const preparedData = {\n      ...data,\n      occurrences: data.occurrences?.map(occ => ({\n        ...occ,\n        rates: occ.rates || {\n          base_rate: 0,\n          additional_animal_rate: 0,\n          applies_after: 1,\n          holiday_rate: 0,\n          holiday_days: 0,\n          additional_rates: []\n        }\n      }))\n    };\n    setSafeInitialData(preparedData);\n  }, [data]);\n\n  const isConfirmed = bookingStatus === 'Confirmed';\n  const isChangeRequest = type === 'request_changes';\n  const isBookingConfirmed = type === 'booking_confirmed';\n  const shouldShowAsApproval = type === 'approval' || isChangeRequest;\n  \n  // Special flag for change requests that are for a confirmed booking\n  const isChangeRequestForConfirmedBooking = isChangeRequest && isConfirmed;\n  \n  // Determine if we should show the overlay based on message type and recency\n  // - Show \"Booking Confirmed\" on all earlier messages for confirmed bookings EXCEPT\n  //   for approval messages that come after a booking confirmation\n  // - Show \"Changes Requested\" on approval messages if there's a change request AND this isn't the newest message\n  // - Show \"Booking Updated\" on change request messages if they're not the newest message and there's a newer approval\n  // - Show \"Booking Updated\" on the booking_confirmed message if there's a newer approval request \n  //   for the same booking ID (NOT on the approval request itself)\n  // - Show \"Booking Updated\" on booking update messages if they have newer request changes\n  const shouldShowOverlay = \n    // Show \"Booking Confirmed\" on earlier messages, but NOT on approval messages that come after a confirmation\n    // AND not on request_changes messages that are the newest message\n    (isConfirmed && !isBookingConfirmed && type !== 'approval' && !isAfterConfirmation && !(isChangeRequest && isNewestMessage)) || \n    // Show \"Changes Requested\" on approval messages with pending changes that aren't newest\n    (type === 'approval' && hasChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on change request messages that aren't newest\n    (isChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on booking_confirmed messages with newer approval requests\n    (isBookingConfirmed && hasNewerApprovalRequests) ||\n    // Show \"Booking Updated\" on booking update messages (displayType === 'booking_update') with newer request changes\n    (displayType === 'booking_update' && hasChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on approval messages that come after confirmation but aren't the newest message\n    (type === 'approval' && isAfterConfirmation && !isNewestMessage);\n  \n  // What overlay text to show\n  const getOverlayText = () => {\n    // For booking_confirmed messages with newer approval requests, show \"Booking Updated\"\n    if (isBookingConfirmed && hasNewerApprovalRequests) return 'Booking Updated';\n    \n    // For booking update messages with newer request changes, show \"Booking Updated\"\n    if (displayType === 'booking_update' && hasChangeRequest && !isNewestMessage) return 'Booking Updated';\n    \n    // For approval messages that come after a confirmation but aren't newest, show \"Booking Updated\"\n    if (type === 'approval' && isAfterConfirmation && !isNewestMessage) return 'Booking Updated';\n    \n    // For approval messages that come after a confirmation and are newest, don't show an overlay\n    if (type === 'approval' && isAfterConfirmation && isNewestMessage) return '';\n    \n    // For request changes messages that are the newest, don't show an overlay\n    if (isChangeRequest && isNewestMessage) return '';\n    \n    // For other messages when booking is confirmed, show \"Booking Confirmed\"\n    if (isConfirmed && !isBookingConfirmed && !isAfterConfirmation && !(isChangeRequest && isNewestMessage)) return 'Booking Confirmed';\n    \n    // For approval messages with change requests that aren't newest\n    if (type === 'approval' && hasChangeRequest && !isNewestMessage) {\n      return 'Changes Requested';\n    }\n    \n    // For change request messages that aren't newest\n    if (isChangeRequest && !isNewestMessage) {\n      return 'Booking Updated';\n    }\n    \n    return '';\n  };\n  \n  const overlayText = getOverlayText();\n  \n  // Log message state for debugging\n  debugLog('MBA4321: Message state for booking', data.booking_id, {\n    type,\n    displayType,\n    isFromMe,\n    isProfessional,\n    bookingStatus,\n    hasChangeRequest,\n    isNewestMessage,\n    isAfterConfirmation,\n    hasNewerApprovalRequests,\n    shouldShowOverlay,\n    overlayText,\n    messageCreatedAt: messageCreatedAt || 'N/A',\n    // Add detailed logic checks to help debug overlay decisions\n    overlayLogicChecks: {\n      isConfirmedButNotConfirmationMessage: isConfirmed && !isBookingConfirmed,\n      isChangeRequestAndNewestMessage: isChangeRequest && isNewestMessage,\n      isApprovalWithChangeRequest: type === 'approval' && hasChangeRequest && !isNewestMessage,\n      isBookingConfirmedWithNewerApprovals: isBookingConfirmed && hasNewerApprovalRequests\n    }\n  });\n\n  const getIcon = () => {\n    switch (type) {\n      case 'request':\n        return 'calendar-plus';\n      case 'approval':\n        return 'calendar-check';\n      case 'request_changes':\n        return 'calendar-edit';\n      case 'booking_confirmed':\n        return 'check-circle-outline';\n      default:\n        return 'calendar';\n    }\n  };\n\n  const getTitle = () => {\n    // If a display type is provided, use it to override the title\n    if (displayType === 'booking_update') {\n      return 'Booking Update';\n    }\n    \n    // For change requests that come after a booking update, adjust the display\n    if (type === 'request_changes' && isAfterConfirmation) {\n      return 'Update Change Request';\n    }\n    \n    switch (type) {\n      case 'request':\n        return 'Booking Request';\n      case 'approval':\n        return 'Approval Request';\n      case 'request_changes':\n        return 'Request Changes';\n      case 'booking_confirmed':\n        return 'Booking Confirmed';\n      default:\n        return 'Booking';\n    }\n  };\n\n  const getCardStyle = () => {\n    const baseStyle = [\n      styles.card,\n      isFromMe ? styles.sentCard : styles.receivedCard\n    ];\n\n    if (shouldShowAsApproval) {\n      baseStyle.push(styles.approvalCard);\n    }\n    \n    if (isBookingConfirmed) {\n      baseStyle.push(styles.confirmedCard);\n    }\n\n    return baseStyle;\n  };\n\n  const getHeaderStyle = () => {\n    if (isBookingConfirmed) {\n      return [styles.header, styles.confirmedHeader];\n    }\n    \n    return [\n      styles.header,\n      shouldShowAsApproval ? styles.approvalHeader : styles.requestHeader\n    ];\n  };\n\n  const handleApprove = async () => {\n    try {\n      const response = await approveBooking(data.booking_id);\n      \n      // Call the success callback if provided\n      if (onApproveSuccess) {\n        onApproveSuccess(response);\n      }\n    } catch (error) {\n      console.error('Error approving booking from message card:', error);\n      // Call the error callback if provided\n      if (onApproveError) {\n        onApproveError(error.response?.data?.error || 'Failed to approve booking');\n      }\n    }\n  };\n\n  const handleOpenApprovalModal = () => {\n    // Process initial data for any message type\n    if (!safeInitialData) {\n      // If safeInitialData isn't ready yet, create it now\n      const tempData = {\n        ...data,\n        occurrences: data.occurrences?.map(occ => ({\n          ...occ,\n          rates: occ.rates || {\n            base_rate: 0,\n            additional_animal_rate: 0,\n            applies_after: 1,\n            holiday_rate: 0,\n            holiday_days: 0,\n            additional_rates: []\n          }\n        })) || []\n      };\n      setSafeInitialData(tempData);\n    }\n    \n    debugLog('MBA9876 Opening approval modal with booking ID:', data.booking_id);\n    setApprovalModalVisible(true);\n  };\n\n  const handleApprovalSuccess = (response) => {\n    if (onApproveSuccess) {\n      onApproveSuccess(response);\n    }\n  };\n\n  const handleApprovalError = (error) => {\n    if (onApproveError) {\n      onApproveError(error);\n    }\n  };\n\n  const handleRequestChangesSuccess = (response) => {\n    debugLog('MBA9999 Change request submitted successfully:', response);\n    // Pass along the response to the parent component\n    if (onApproveSuccess) {\n      onApproveSuccess(response);\n    }\n  };\n\n  const handleRequestChangesError = (error) => {\n    debugLog('MBA9999 Error submitting change request:', error);\n    // Pass along the error to the parent component\n    if (onApproveError) {\n      onApproveError(error);\n    }\n  };\n\n  // Format a date/time range for an occurrence using the time_utils function\n  const formatOccurrenceDateRange = (occ) => {\n    // Check if we have direct UTC dates and times\n    if (occ.start_date && occ.end_date && occ.start_time && occ.end_time) {\n      // Format the date range\n      const formattedRange = formatDateTimeRangeFromUTC({\n        startDate: occ.start_date,\n        startTime: occ.start_time,\n        endDate: occ.end_date,\n        endTime: occ.end_time,\n        userTimezone: userTimezone,\n        includeTimes: true,\n        includeTimezone: true\n      });\n      \n      // Check for DST change between start and end times\n      const hasDSTChange = checkDSTChange(\n        occ.start_date,\n        occ.start_time,\n        occ.end_date,\n        occ.end_time,\n        userTimezone\n      );\n      \n      // Add DST change message if needed\n      if (hasDSTChange && !occ.dst_message) {\n        debugLog('MBA9876DST Detected DST change for occurrence:', {\n          start: `${occ.start_date} ${occ.start_time}`,\n          end: `${occ.end_date} ${occ.end_time}`,\n          timezone: userTimezone\n        });\n        \n        // Add DST message to the occurrence\n        occ.dst_message = \"Elapsed time may be different than expected due to Daylight Savings Time.\";\n      }\n      \n      return formattedRange;\n    }\n    \n    // Fallback to pre-formatted dates if available\n    if (occ.formatted_start && occ.formatted_end) {\n      return `${occ.formatted_start} to ${occ.formatted_end}`;\n    }\n    \n    // Last resort fallback\n    return 'Date information unavailable';\n  };\n\n  // Calculate duration for the occurrence if not provided\n  const getOccurrenceDuration = (occ) => {\n    if (occ.duration) {\n      return occ.duration;\n    }\n    \n    // Try to calculate the duration if we have the necessary data\n    if (occ.start_date && occ.end_date && occ.start_time && occ.end_time) {\n      try {\n        // Create moment objects for start and end times\n        const startMoment = moment.utc(`${occ.start_date}T${occ.start_time}:00Z`);\n        const endMoment = moment.utc(`${occ.end_date}T${occ.end_time}:00Z`);\n        \n        // Calculate the difference in hours and days\n        const hoursDiff = endMoment.diff(startMoment, 'hours');\n        const daysDiff = endMoment.diff(startMoment, 'days');\n        \n        // Format the duration nicely\n        if (daysDiff > 0) {\n          return `${daysDiff} ${daysDiff === 1 ? 'day' : 'days'}, ${hoursDiff % 24} ${hoursDiff % 24 === 1 ? 'hour' : 'hours'}`;\n        } else {\n          return `${hoursDiff} ${hoursDiff === 1 ? 'hour' : 'hours'}`;\n        }\n      } catch (error) {\n        debugLog('MBA9876DST Error calculating duration:', error);\n      }\n    }\n    \n    return 'N/A';\n  };\n\n  // Get the cost value based on user type (professional vs client)\n  const getCostValue = () => {\n    // First check if the cost_summary object exists\n    if (data.cost_summary) {\n      if (isProfessional) {\n        // Display pro payout for professionals\n        const amount = data.cost_summary.total_sitter_payout || '0.00';\n        return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n      } else {\n        // Display client cost for clients\n        const amount = data.cost_summary.total_client_cost || '0.00';\n        return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n      }\n    }\n    \n    // Fallback to direct properties (for backward compatibility)\n    if (isProfessional) {\n      const amount = data.total_sitter_payout || '0.00';\n      return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n    } else {\n      const amount = data.total_owner_cost || '0.00';\n      return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n    }\n  };\n\n  // Function to toggle dates expansion\n  const toggleDatesExpansion = () => {\n    setShowAllDates(!showAllDates);\n  };\n\n  // Determine if we need to show the \"Show More\" button\n  const occurrences = data.occurrences || [];\n  const hasMoreDates = occurrences.length > 3;\n  \n  // Get visible occurrences based on expanded state\n  const visibleOccurrences = showAllDates ? occurrences : occurrences.slice(0, 3);\n  \n  // Count how many more dates are hidden\n  const hiddenDatesCount = Math.max(0, occurrences.length - 3);\n\n  return (\n    <View style={getCardStyle()}>\n      {/* Green bar on left or right side based on sender */}\n      {shouldShowAsApproval && (\n        <View style={[\n          styles.colorBar, \n          isFromMe ? styles.colorBarLeft : styles.colorBarRight\n        ]} />\n      )}\n      \n      {/* Green border for confirmation message */}\n      {isBookingConfirmed && (\n        <View style={styles.confirmationBorder} />\n      )}\n      \n      <View style={styles.cardContent}>\n        <View style={getHeaderStyle()}>\n          <MaterialCommunityIcons \n            name={getIcon()} \n            size={24} \n            color={isChangeRequest ? theme.colors.warning : \n                   isBookingConfirmed ? theme.colors.success : theme.colors.primary}\n          />\n          <Text style={[\n            styles.title,\n            isChangeRequest ? styles.changeRequestTitle : \n            isBookingConfirmed ? styles.confirmedTitle :\n            shouldShowAsApproval ? styles.approvalTitle : styles.requestTitle\n          ]}>\n            {getTitle()}\n          </Text>\n        </View>\n\n        <View style={styles.content}>\n          {/* Booking confirmation message specific content */}\n          {isBookingConfirmed ? (\n            <>\n              {/* Card content is clickable to view details */}\n              <TouchableOpacity \n                style={styles.confirmationContainerClickable}\n                onPress={handleOpenApprovalModal}\n                activeOpacity={0.7}\n              >\n                <View style={styles.confirmationContainer}>\n                  <Text style={styles.confirmationText}>\n                    This booking has been confirmed and is ready to go!\n                  </Text>\n                </View>\n                \n                <View style={styles.infoSection}>\n                  <View style={styles.row}>\n                    <Text style={styles.label}>Booking ID:</Text>\n                    <Text style={styles.value}>{data.booking_id || 'N/A'}</Text>\n                  </View>\n                  \n                  <View style={styles.row}>\n                    <Text style={styles.label}>Service:</Text>\n                    <Text style={styles.value}>{data.service_type || 'N/A'}</Text>\n                  </View>\n\n                  <View style={styles.row}>\n                    <Text style={styles.label}>{isProfessional ? 'Your Payout:' : 'Total Cost:'}</Text>\n                    <Text style={styles.value}>\n                      ${isProfessional ? \n                        (data.cost_summary?.total_sitter_payout || '0.00') : \n                        (data.cost_summary?.total_client_cost || '0.00')}\n                    </Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n              \n              {/* Buttons are separate from the clickable card content */}\n              <View style={styles.buttonContainer}>\n                {/* View Details button */}\n                <TouchableOpacity\n                  style={[styles.detailsButton, { flex: 1 }]}\n                  onPress={handleOpenApprovalModal}\n                >\n                  <Text style={styles.detailsButtonText}>View Details</Text>\n                </TouchableOpacity>\n                \n                {/* Edit Details button for professionals */}\n                {isProfessional && onEditDraft && (\n                  <TouchableOpacity \n                    style={[styles.editButton, { flex: 1 }]}\n                    onPress={onEditDraft}\n                  >\n                    <Text style={styles.editButtonText}>Edit Details</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </>\n          ) : (\n            /* Original content for other message types */\n            <>\n              <View style={styles.infoSection}>\n                <View style={styles.row}>\n                  <Text style={styles.label}>Booking ID:</Text>\n                  <Text style={styles.value}>{data.booking_id || 'N/A'}</Text>\n                </View>\n                <View style={styles.row}>\n                  <Text style={styles.label}>Service:</Text>\n                  <Text style={styles.value}>{data.service_type || 'N/A'}</Text>\n                </View>\n\n                <View style={styles.row}>\n                  <Text style={styles.label}>{isProfessional ? 'Your Payout:' : 'Total Cost:'}</Text>\n                  <Text style={styles.value}>\n                    ${getCostValue()}\n                  </Text>\n                </View>\n              </View>\n\n              <View style={styles.datesSection}>\n                {type !== 'request_changes' ? (\n                  <View style={styles.datesSectionHeader}>\n                    <Text style={styles.label}>Dates:</Text>\n                    {hasMoreDates && (\n                      <Text style={styles.datesCount}>({occurrences.length} total)</Text>\n                    )}\n                  </View>\n                ) : (\n                  null\n                )}\n                {visibleOccurrences.map((occ, index) => {\n                  const isLastVisibleItem = index === visibleOccurrences.length - 1;\n                  const showBottomBorder = !(!showAllDates && isLastVisibleItem && hasMoreDates);\n                  \n                  return (\n                    <View \n                      key={index} \n                      style={[\n                        styles.occurrenceContainer,\n                        showBottomBorder ? null : { borderBottomWidth: 0 }\n                      ]}\n                    >\n                      <View style={styles.occurrenceItem}>\n                        <Text style={styles.dateTimeText}>\n                          {formatOccurrenceDateRange(occ)}\n                        </Text>\n                        <Text style={styles.durationText}>\n                          Event Duration: {getOccurrenceDuration(occ)} ({occ.timezone || userTimezone.split('/')[1] || userTimezone})\n                        </Text>\n                        {occ.dst_message ? (\n                          <Text style={styles.dstMessage}>\n                            {occ.dst_message}\n                          </Text>\n                        ) : null}\n                      </View>\n                    </View>\n                  );\n                })}\n\n                {/* Show more/less dates button */}\n                {hasMoreDates && (\n                  <TouchableOpacity \n                    style={styles.showMoreButton} \n                    onPress={toggleDatesExpansion}\n                  >\n                    <Text style={styles.showMoreText}>\n                      {showAllDates ? \"Show Fewer Dates\" : `Show ${hiddenDatesCount} More Date${hiddenDatesCount !== 1 ? 's' : ''}`}\n                    </Text>\n                    <MaterialCommunityIcons \n                      name={showAllDates ? \"chevron-up\" : \"chevron-down\"} \n                      size={18} \n                      color={theme.colors.primary} \n                    />\n                  </TouchableOpacity>\n                )}\n              </View>\n\n              {isChangeRequest && (\n                <View style={styles.changeMessageContainer}>\n                  <Text style={styles.changeMessageLabel}>Change Request Message:</Text>\n                  <Text style={styles.changeMessageText}>{data.content || 'No details provided'}</Text>\n                </View>\n              )}\n\n              <View style={styles.buttonContainer}>\n                {/* Review Details button - visible to both users */}\n                <TouchableOpacity \n                  style={[\n                    styles.detailsButton,\n                    // Only disable the button if it's a regular message with the Booking Confirmed overlay\n                    // Don't disable for isAfterConfirmation messages (booking updates) or displayType === 'booking_update'\n                    (isConfirmed && !isBookingConfirmed && !isAfterConfirmation && displayType !== 'booking_update') && styles.disabledButton\n                  ]}\n                  onPress={handleOpenApprovalModal}\n                  disabled={isConfirmed && !isBookingConfirmed && !isAfterConfirmation && displayType !== 'booking_update'}\n                >\n                  <Text style={styles.detailsButtonText}>\n                    {isBookingConfirmed ? \"View Details\" : \"Review Details\"}\n                  </Text>\n                </TouchableOpacity>\n                \n                {/* Approve button - only visible to clients for approval requests */}\n                {type === 'approval' && !isProfessional && !isConfirmed && !hasChangeRequest && (\n                  <TouchableOpacity \n                    style={styles.approveButton}\n                    onPress={handleApprove}\n                  >\n                    <Text style={styles.approveButtonText}>Approve</Text>\n                  </TouchableOpacity>\n                )}\n                \n                {/* Edit button - visible to pros for booking requests */}\n                {type === 'request' && isProfessional && onEditDraft && !isConfirmed && (\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={onEditDraft}\n                  >\n                    <Text style={styles.editButtonText}>Edit Draft</Text>\n                  </TouchableOpacity>\n                )}\n                \n                {/* Edit Details button - visible to pros for change requests */}\n                {isChangeRequest && isProfessional && onEditDraft && (\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={onEditDraft}\n                  >\n                    <Text style={styles.editButtonText}>Edit Details</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n\n      {/* Status Overlay - shown on confirmed bookings or approval messages with changes requested */}\n      {shouldShowOverlay && (\n        <View style={styles.statusOverlay}>\n          <Text style={styles.statusText}>\n            {overlayText}\n          </Text>\n        </View>\n      )}\n\n      {/* Approval Modal */}\n      <BookingApprovalModal\n        visible={approvalModalVisible}\n        onClose={() => setApprovalModalVisible(false)}\n        bookingId={data.booking_id}\n        onApproveSuccess={handleApprovalSuccess}\n        onApproveError={handleApprovalError}\n        onRequestChangesSuccess={handleRequestChangesSuccess}\n        onRequestChangesError={handleRequestChangesError}\n        initialData={safeInitialData}\n        isProfessional={isProfessional}\n        // Only set read-only mode for confirmed messages that aren't booking updates\n        isReadOnly={(isConfirmed || isBookingConfirmed) && displayType !== 'booking_update' && !isAfterConfirmation}\n        // Only hide buttons for confirmed messages that aren't booking updates\n        hideButtons={(isConfirmed || isBookingConfirmed) && displayType !== 'booking_update' && !isAfterConfirmation}\n        modalTitle={\n          displayType === 'booking_update' ? \"Booking Update\" :\n          isAfterConfirmation ? \"Booking Update\" :\n          isBookingConfirmed || isConfirmed ? \"Booking Details\" : \n          \"Booking Approval Request\"\n        }\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 0, // Removed padding here as it's now on cardContent\n    margin: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    overflow: 'hidden', // To ensure the green bar doesn't overflow\n    position: 'relative', // To position the green bar\n  },\n  sentCard: {\n    alignSelf: 'flex-end',\n    marginLeft: '20%',\n  },\n  receivedCard: {\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n  },\n  approvalCard: {\n    borderColor: theme.colors.border, // Changed to regular border color\n    borderWidth: 1,\n  },\n  confirmedCard: {\n    borderColor: theme.colors.success,\n    borderWidth: 2,\n  },\n  colorBar: {\n    width: 4, // Width of the green vertical bar\n    backgroundColor: theme.colors.primary, // Green color\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n  colorBarLeft: {\n    left: 0,\n  },\n  colorBarRight: {\n    right: 0,\n  },\n  cardContent: {\n    padding: 12, // Moved padding here from card\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    gap: 8,\n  },\n  requestHeader: {\n    borderBottomColor: theme.colors.border + '40',\n  },\n  approvalHeader: {\n    borderBottomColor: theme.colors.border + '40',\n  },\n  confirmedHeader: {\n    borderBottomColor: theme.colors.success,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  requestTitle: {\n    color: theme.colors.primary,\n  },\n  approvalTitle: {\n    color: theme.colors.primary, // Keep the approval request text the same color\n  },\n  changeRequestTitle: {\n    color: theme.colors.warning, // Orange color for change requests\n  },\n  content: {\n    gap: 8,\n  },\n  infoSection: {\n    gap: 4,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border + '40',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n    minWidth: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  value: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  datesSection: {\n    gap: 4,\n  },\n  datesSectionHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  datesCount: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceContainer: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border + '40',\n    paddingBottom: 8,\n    marginBottom: 4,\n  },\n  occurrenceItem: {\n    gap: 2,\n    marginLeft: 4,\n  },\n  dateTimeText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontStyle: 'italic', // Italicized date text\n  },\n  durationText: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText, // Changed to placeholder text color\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dstMessage: {\n    fontSize: 12,\n    color: theme.colors.error,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n    gap: 8,\n  },\n  detailsButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary, // Changed to primary color\n  },\n  detailsButtonText: {\n    color: 'white', // Changed text color to white for better contrast\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  approveButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  approveButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  editButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  editButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.border,\n    opacity: 0.6,\n  },\n  statusOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n  statusText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    padding: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    borderRadius: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  changeMessageContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 8,\n    marginTop: 4,\n    marginBottom: 4,\n    borderLeftWidth: 3,\n    borderLeftColor: theme.colors.warning,\n  },\n  changeMessageLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  changeMessageText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    // fontStyle: 'italic',\n  },\n  showMoreButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    marginTop: 8,\n    marginBottom: 4,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary + '40',\n    paddingHorizontal: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 1,\n  },\n  showMoreText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    marginRight: 5,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  confirmationContainerClickable: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 8,\n  },\n  confirmationContainer: {\n    backgroundColor: theme.colors.success + '15', // Light green background\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  confirmationText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  confirmedTitle: {\n    color: theme.colors.success,\n  },\n  confirmationBorder: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 4,\n    backgroundColor: theme.colors.success,\n  },\n});\n\nexport default BookingMessageCard; ","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Modal, Portal, Button } from 'react-native-paper';\nimport { theme } from '../styles/theme';\n\nconst DraftConfirmationModal = ({ visible, onClose, onContinueExisting, onCreateNew }) => {\n  return (\n    <Portal>\n      <Modal\n        visible={visible}\n        onDismiss={onClose}\n        contentContainerStyle={styles.modalContainer}\n      >\n        <View style={styles.content}>\n          <Text style={styles.title}>Existing Draft Found</Text>\n          <Text style={styles.description}>\n            Would you like to continue with the existing draft or start a new one?\n          </Text>\n          <View style={styles.buttonContainer}>\n            <Button\n              mode=\"outlined\"\n              onPress={onCreateNew}\n              style={styles.button}\n              textColor={theme.colors.error}\n            >\n              Create New\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={onContinueExisting}\n              style={styles.button}\n            >\n              Continue Existing\n            </Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    maxWidth: 500,\n    alignSelf: 'center',\n  },\n  content: {\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 24,\n    textAlign: 'center',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    gap: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n\nexport default DraftConfirmationModal; ","import { useEffect, useCallback, useState, useRef } from 'react';\nimport websocketManager from '../utils/websocket';\nimport { getStorage, debugLog } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\n\n/**\n * Custom hook to use WebSocket in React components\n * @param {string} messageType - Type of messages to subscribe to\n * @param {function} callback - Callback to handle received messages\n * @param {object} options - Additional options\n * @returns {object} WebSocket state and methods\n */\nconst useWebSocket = (messageType, callback, options = {}) => {\n  const { disabled = false, handlerId = Math.random().toString(36).substr(2, 9) } = options;\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const statusUpdateTimeRef = useRef(Date.now());\n  const handlerRegisteredRef = useRef(false);\n  const failedAttemptsRef = useRef(0);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    if (disabled) return;\n\n    debugLog(`MBA3210: useWebSocket hook initializing for ${messageType}, handler ${handlerId}`);\n    let unregisterHandlers = [];\n    \n    const initialize = async () => {\n      try {\n        const token = await getStorage('userToken');\n        if (!token) {\n          debugLog('MBA3210: No token available for WebSocket connection');\n          return;\n        }\n        \n        // Initialize WebSocket connection\n        websocketManager.init(token);\n        \n        // Register handlers\n        if (messageType && !handlerRegisteredRef.current) {\n          // Register for specific message type\n          const unregister = websocketManager.registerHandler(\n            messageType, \n            callback, \n            `${handlerId}-${messageType}`\n          );\n          unregisterHandlers.push(unregister);\n          handlerRegisteredRef.current = true;\n          debugLog(`MBA3210: Registered handler for ${messageType}`);\n        }\n        \n        // Always register for connection status updates\n        const unregisterConn = websocketManager.registerHandler(\n          'connection',\n          (data) => {\n            const prevStatus = connectionStatus;\n            const prevConnected = isConnected;\n            statusUpdateTimeRef.current = Date.now();\n            \n            if (data.status === 'connected') {\n              debugLog('MBA3210: Setting connection status to connected');\n              setIsConnected(true);\n              setConnectionStatus('connected');\n              failedAttemptsRef.current = 0; // Reset failed attempts counter\n            } else {\n              debugLog('MBA3210: Setting connection status to disconnected');\n              setIsConnected(false);\n              setConnectionStatus('disconnected');\n            }\n            \n            debugLog(`MBA3210: Connection status changed in hook: ${prevStatus} -> ${data.status}`);\n            debugLog(`MBA3210: isConnected changed in hook: ${prevConnected} -> ${data.status === 'connected'}`);\n          },\n          `${handlerId}-connection`\n        );\n        unregisterHandlers.push(unregisterConn);\n        debugLog(`MBA3210: Registered connection status handler`);\n        \n        // Always register for user status updates (needed across components for online indicators)\n        const unregisterUserStatus = websocketManager.registerHandler(\n          'user_status_update',\n          (data) => {\n            // Call the callback if we're listening for user_status_update messages,\n            // or if the callback is meant to handle all message types\n            if (messageType === 'user_status_update' || messageType === '*') {\n              callback(data);\n            }\n            \n            debugLog(`MBA3210: Received user status update for user ${data.user_id}: ${data.is_online ? 'online' : 'offline'}`);\n          },\n          `${handlerId}-user_status_update`\n        );\n        unregisterHandlers.push(unregisterUserStatus);\n        debugLog(`MBA3210: Registered user status update handler`);\n        \n        // Check initial socket state\n        if (websocketManager.isConnected) {\n          debugLog('MBA3210: WebSocket manager reports connected on init, updating state');\n          setIsConnected(true);\n          setConnectionStatus('connected');\n        }\n        \n      } catch (error) {\n        debugLog(`MBA3210: Error initializing WebSocket in hook: ${error.message}`);\n      }\n    };\n    \n    initialize();\n    \n    // Check connection every second for the first 5 seconds\n    const initialConnectionCheck = setInterval(() => {\n      if (websocketManager.isConnected) {\n        debugLog('MBA3210: Initial connection check: WebSocket is connected');\n        setIsConnected(true);\n        setConnectionStatus('connected');\n        clearInterval(initialConnectionCheck);\n      } else {\n        debugLog('MBA3210: Initial connection check: WebSocket not connected yet');\n      }\n    }, 1000);\n    \n    // Clear the interval after 5 seconds if it hasn't been cleared already\n    const initialCheckTimeout = setTimeout(() => {\n      clearInterval(initialConnectionCheck);\n    }, 5000);\n    \n    // Cleanup handlers on unmount\n    return () => {\n      debugLog(`MBA3210: useWebSocket hook cleaning up for ${messageType}, handler ${handlerId}`);\n      unregisterHandlers.forEach(unregister => unregister());\n      clearInterval(initialConnectionCheck);\n      clearTimeout(initialCheckTimeout);\n      \n      handlerRegisteredRef.current = false;\n      \n      // We no longer disconnect WebSocket on unmount\n      // This allows the connection to persist when navigating between screens\n    };\n  }, [disabled, messageType, callback, handlerId]);\n  \n  // Add periodic check for connection status\n  useEffect(() => {\n    if (disabled) return;\n    \n    const checkStatus = setInterval(() => {\n      const now = Date.now();\n      const lastUpdate = statusUpdateTimeRef.current;\n      const secondsSinceUpdate = (now - lastUpdate) / 1000;\n      \n      // If it's been more than 30 seconds since we got a status update, check connection manually\n      if (secondsSinceUpdate > 30) {\n        debugLog(`MBA3210: [MY CONNECTION] No updates on MY OWN connection in ${secondsSinceUpdate.toFixed(0)} seconds, verifying status`);\n        \n        // Check actual connection state from the WebSocket manager\n        const actuallyConnected = websocketManager.isConnected;\n        \n        if (actuallyConnected !== isConnected) {\n          debugLog(`MBA3210: [MY CONNECTION] State mismatch detected - WebSocket manager: ${actuallyConnected}, hook state: ${isConnected}`);\n          \n          // Update our state to match reality\n          setIsConnected(actuallyConnected);\n          setConnectionStatus(actuallyConnected ? 'connected' : 'disconnected');\n        }\n        \n        // Try to send heartbeat if we think we're connected\n        if (isConnected) {\n          debugLog('MBA3210: [MY CONNECTION] Sending heartbeat to verify MY OWN connection');\n          websocketManager.send('heartbeat');\n        } else if (actuallyConnected) {\n          // Try to send heartbeat even if our state says we're not connected\n          // This helps ensure the backend knows we're still here\n          debugLog('MBA3210: [MY CONNECTION] Sending heartbeat despite disconnected state in hook');\n          websocketManager.send('heartbeat');\n        }\n        \n        // Reset the timer\n        statusUpdateTimeRef.current = now;\n      }\n    }, 15000); // Check every 15 seconds\n    \n    return () => clearInterval(checkStatus);\n  }, [disabled, isConnected]);\n\n  // Send a message through the WebSocket\n  const sendMessage = useCallback((type, data) => {\n    debugLog(`MBA3210: [MY CONNECTION] Attempting to send ${type} message through MY OWN WebSocket`);\n    \n    if (!isConnected) {\n      debugLog('MBA3210: [MY CONNECTION] Cannot send message, MY OWN WebSocket not connected, falling back to REST');\n      // Return a promise that resolves when the message is sent\n      return (async () => {\n        try {\n          const token = await getStorage('userToken');\n          if (!token) {\n            debugLog('MBA3210: [MY CONNECTION] No token available for REST message send');\n            return false;\n          }\n          \n          // Handle different message types\n          let endpoint = `${API_BASE_URL}/api/messages/v1/send_norm_message/`;\n          let payload = {\n            conversation_id: data.conversation_id,\n            content: data.content\n          };\n          \n          // Modify endpoint based on message type\n          if (type === 'request_booking') {\n            endpoint = `${API_BASE_URL}/api/messages/v1/send_request_booking/`;\n            // Add any additional booking request data\n            payload = {\n              ...payload,\n              ...data\n            };\n          }\n          \n          debugLog(`MBA3210: [MY CONNECTION] Sending message via REST API to ${endpoint} (fallback for failed WebSocket)`);\n          const response = await axios.post(endpoint, payload, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          // Try WebSocket reconnection after sending message\n          setTimeout(() => {\n            if (websocketManager.reconnect) {\n              debugLog('MBA3210: [MY CONNECTION] Attempting reconnection after REST fallback');\n              websocketManager.reconnect();\n            }\n          }, 1000);\n          \n          return response.data;\n        } catch (error) {\n          debugLog(`MBA3210: [MY CONNECTION] Error sending message via REST fallback: ${error.message}`);\n          return false;\n        }\n      })();\n    }\n    \n    return websocketManager.send(type, data);\n  }, [isConnected]);\n\n  // Mark messages as read\n  const markMessagesAsRead = useCallback((conversationId, messageIds) => {\n    // Skip if no conversation or message IDs\n    if (!conversationId || !messageIds || messageIds.length === 0) {\n      debugLog('MBA3210: [MY CONNECTION] Skipping markMessagesAsRead - missing data');\n      return Promise.resolve(false);\n    }\n    \n    debugLog(`MBA3210: [MY CONNECTION] Marking messages as read for conversation ${conversationId}`);\n    \n    if (!isConnected) {\n      debugLog('MBA3210: [MY CONNECTION] Cannot mark messages as read through WebSocket, using REST API instead');\n      \n      // Return a promise that resolves when the messages are marked as read\n      return (async () => {\n        try {\n          const token = await getStorage('userToken');\n          if (!token) {\n            debugLog('MBA3210: [MY CONNECTION] No token available for REST mark as read');\n            return false;\n          }\n          \n          debugLog(`MBA3210: [MY CONNECTION] Sending mark_read via REST API for ${messageIds.length} messages (fallback)`);\n          const response = await axios.post(`${API_BASE_URL}/api/messages/v1/mark_read/`, {\n            conversation_id: conversationId,\n            message_ids: messageIds\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          return response.data;\n        } catch (error) {\n          debugLog(`MBA3210: [MY CONNECTION] Error marking messages as read via REST fallback: ${error.message}`);\n          return false;\n        }\n      })();\n    }\n    \n    return websocketManager.markMessagesAsRead(conversationId, messageIds);\n  }, [isConnected]);\n\n  // Force a reconnection attempt\n  const reconnect = useCallback(() => {\n    debugLog('MBA3210: [MY CONNECTION] Hook requesting reconnection of MY OWN WebSocket');\n    \n    try {\n      // First reinitialize the connection\n      if (websocketManager.disconnect) {\n        debugLog('MBA3210: [MY CONNECTION] Disconnecting MY OWN existing WebSocket before reconnect');\n        websocketManager.disconnect();\n      }\n      \n      // Then attempt reconnection with a short delay\n      setTimeout(() => {\n        if (websocketManager.reconnect) {\n          debugLog('MBA3210: [MY CONNECTION] Calling websocketManager.reconnect() for MY OWN connection');\n          websocketManager.reconnect();\n        } else if (websocketManager.connect) {\n          debugLog('MBA3210: [MY CONNECTION] Calling websocketManager.connect() as fallback for MY OWN connection');\n          websocketManager.connect();\n        } else {\n          // If neither method exists, reinitialize the connection\n          debugLog('MBA3210: [MY CONNECTION] No reconnect method found, reinitializing MY OWN connection');\n          getStorage('userToken').then(token => {\n            if (token) {\n              websocketManager.init(token);\n            } else {\n              debugLog('MBA3210: [MY CONNECTION] No token available for WebSocket reconnection');\n            }\n          }).catch(error => {\n            debugLog(`MBA3210: [MY CONNECTION] Error getting token for reconnection: ${error.message}`);\n          });\n        }\n      }, 300);  // Short delay to ensure disconnect completes\n    } catch (error) {\n      debugLog(`MBA3210: [MY CONNECTION] Error during reconnection of MY OWN connection: ${error.message}`);\n    }\n  }, []);\n\n  // Explicitly disconnect the WebSocket\n  const disconnect = useCallback(() => {\n    if (disabled) return;\n    \n    debugLog(`MBA3210: useWebSocket hook explicitly disconnecting for ${messageType}, handler ${handlerId}`);\n    websocketManager.disconnect();\n    \n    // Update local state\n    setIsConnected(false);\n    setConnectionStatus('disconnected');\n    failedAttemptsRef.current = 0;\n  }, [disabled, messageType, handlerId]);\n\n  // Return WebSocket state and methods\n  return {\n    isConnected,\n    connectionStatus,\n    sendMessage,\n    markMessagesAsRead, \n    reconnect: websocketManager.reconnect ? websocketManager.reconnect.bind(websocketManager) : null,\n    disconnect,\n    simulateConnection: websocketManager.connect ? websocketManager.connect.bind(websocketManager) : null,\n    isUsingFallback: !isConnected\n  };\n};\n\nexport default useWebSocket; ","import React, { useState, useCallback, useRef, useEffect, useContext } from 'react';\nimport { View, StyleSheet, FlatList, KeyboardAvoidingView, Platform, SafeAreaView, StatusBar, TextInput, Text, TouchableOpacity, Dimensions, Alert, Image } from 'react-native';\nimport { Button, Card, Paragraph, useTheme, ActivityIndicator, Badge } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons'; // Import the icon library\nimport { theme } from '../styles/theme';\nimport { AuthContext, getStorage, debugLog } from '../context/AuthContext';\nimport RequestBookingModal from '../components/RequestBookingModal';\nimport BookingStepModal from '../components/BookingStepModal';\nimport { createBooking, BOOKING_STATES, mockConversations, mockMessages, CURRENT_USER_ID } from '../data/mockData';\nimport { format } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\nimport { API_BASE_URL } from '../config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { navigateToFrom } from '../components/Navigation';\nimport BookingMessageCard from '../components/BookingMessageCard';\nimport { formatOccurrenceFromUTC } from '../utils/time_utils';\nimport DraftConfirmationModal from '../components/DraftConfirmationModal';\nimport useWebSocket from '../hooks/useWebSocket';\nimport MessageNotificationContext from '../context/MessageNotificationContext';\nimport {\n  getConnectionProfile,\n  getUserConnections,\n  approveBooking,\n  requestBookingChanges,\n  createDraftFromBooking,\n  // ... other imports from API.js\n} from '../api/API';\n\n// First, create a function to generate dynamic styles\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: screenWidth > 900 ? 0 : 0,\n    paddingRight: screenWidth > 900 ? 0 : 0,\n    paddingLeft: screenWidth > 900 ? 0 : 0,\n    height: screenWidth > 900 ? '100vh' : 'calc(100vh - 64px)',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: screenWidth > 900 ? 0 : 64,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  filterButton: {\n    marginLeft: 'auto',\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    maxWidth: screenWidth > 900 ? '100%' : 900,\n    alignSelf: 'center',\n    width: '100%',\n    overflow: 'hidden',\n    height: '100%',\n  },\n  mainSection: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: Platform.OS === 'web' ? \n      (screenWidth <= 900 ? '100%' : '70%') : \n      '100%',\n    alignSelf: screenWidth <= 900 ? 'stretch' : 'flex-start',\n    width: screenWidth <= 900 ? '100%' : 'auto',\n    height: '100%',\n  },\n  conversationListContainer: {\n    width: screenWidth <= 900 ? '100%' : '30%',\n    maxWidth: screenWidth < 900 ? '' : 600,\n    backgroundColor: theme.colors.surfaceContrast,\n    overflow: 'auto',\n  },\n  conversationItem: {\n    padding: 16,\n    maxWidth: screenWidth < 900 ? '' : 600,\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  selectedConversation: {\n    backgroundColor: theme.colors.primary + '20',\n    borderLeftWidth: 3,\n    borderLeftColor: theme.colors.primary,\n  },\n  conversationName: {\n    fontSize: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n    flex: 1,\n  },\n  messageSection: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    paddingHorizontal: 5,\n    backgroundColor: theme.colors.surface, // #FDFBF5\n  },\n  messageHeader: {\n    padding: 22,\n    backgroundColor: theme.colors.surfaceContrast,\n    width: '100%',\n    // marginVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: .5 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n    zIndex: 1,\n  },\n  profilePhoto: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  messageHeaderName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  messagesContainer: {\n    flex: 1,\n    overflow: 'auto',\n    width: '100%',\n  },\n  messageList: {\n    width: '100%',\n    paddingBottom: 16,\n  },\n  inputSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    padding: screenWidth > 600 ? 16 : 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -.5 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n    zIndex: 1,\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  attachButtonContainer: {\n    marginRight: 8,\n  },\n  attachButton: {\n    padding: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputInnerContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 20,\n    marginRight: 8,\n  },\n  messageInput: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginHorizontal: 8,\n  },\n  sendButton: {\n    borderRadius: 20,\n    marginLeft: 8,\n  },\n  messageCard: {\n    marginVertical: 4,\n    maxWidth: screenWidth > 900 ? '40%' : '75%',\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  // This is for the messages that are sent and received\n  messageContent: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n  },\n  sentMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.colors.primary,\n  },\n  receivedMessage: {\n    alignSelf: 'flex-start',\n    backgroundColor: theme.colors.receivedMessage,\n  },\n  messageText: {\n    fontSize: 16,\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sentMessageContainer: {\n    alignItems: 'flex-end',\n    marginBottom: 4,\n  },\n  receivedMessageContainer: {\n    alignItems: 'flex-start',\n    marginBottom: 4,\n  },\n  senderAbove: {\n    fontWeight: 'bold',\n    marginBottom: 4,\n    fontSize: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  sentSenderName: {\n    alignSelf: 'flex-end',\n  },\n  receivedSenderName: {\n    alignSelf: 'flex-start',\n  },\n  timestampBelow: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sentTimestamp: {\n    alignSelf: 'flex-end',\n  },\n  receivedTimestamp: {\n    alignSelf: 'flex-start',\n  },\n  sentMessageText: {\n    color: theme.colors.whiteText,\n  },\n  receivedMessageText: {\n    color: theme.colors.text,\n  },\n  webInput: {\n    flex: 1,\n    backgroundColor: 'transparent',\n    paddingVertical: '8px',\n    paddingLeft: '12px',\n    height: 24,\n    maxHeight: '120px', // This will accommodate 5 lines of text\n    border: '1px solid ' + theme.colors.border,\n    borderRadius: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: screenWidth <= 600 ? '14px' : 'inherit',\n    appearance: 'none',\n    touchAction: 'manipulation',\n    WebkitTapHighlightColor: 'transparent',\n    WebkitUserSelect: 'none',\n    userSelect: 'none',\n    resize: 'none',\n    overflowY: 'auto', // Enable scrolling\n    lineHeight: '20px',\n    paddingRight: '12px', // Add right padding for scroll bar\n  },\n  conversationContent: {\n    flex: 1,\n    width: '100%',\n  },\n  conversationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 6,\n    width: '100%',\n  },\n  conversationNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  conversationTime: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n  },\n  conversationLastMessageContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 6,\n  },\n  conversationLastMessage: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  conversationUnreadBadge: {\n    position: 'relative',\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 18,\n    height: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    marginLeft: 8,\n  },\n  unreadMessage: {\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  bookingStatusContainer: {\n    backgroundColor: theme.colors.primary + '20',\n    padding: 4,\n    borderRadius: 4,\n    alignSelf: 'flex-start',\n    marginTop: 2,\n  },\n  bookingStatus: {\n    fontSize: 12,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  requestBookingButton: {\n    marginTop: 4,\n    height: 28,\n    alignSelf: 'flex-start',\n  },\n  requestBookingLabel: {\n    fontSize: 12,\n    marginVertical: 0,\n  },\n  messageListContainer: {\n    flex: 1,\n  },\n  inputWrapper: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n    zIndex: 1,\n    width: '100%',\n    padding: screenWidth > 600 ? 16 : 8,\n  },\n  dropdownMenu: {\n    position: 'absolute',\n    bottom: '100%',\n    left: 0,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginBottom: 8,\n    minWidth: 150,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownItem: {\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeConversationText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileMessageView: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    backgroundColor: theme.colors.background,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n  },\n  backButtonText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileHeader: {\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    position: 'relative',\n    zIndex: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  mobileContent: {\n    flex: 1,\n    position: 'relative',\n    height: 'calc(100% - 56px)',\n  },\n  mobileContainer: {\n    paddingTop: 0,\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  sendButtonMobile: {\n    width: 24,\n    height: 24,\n    minWidth: 0,\n    padding: 0,\n    marginLeft: 4,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  mobileHeaderContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    paddingVertical: 16,\n    paddingHorizontal: 8,\n    width: '100%',\n    minHeight: 60,\n  },\n  mobileHeaderName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n    flexWrap: 'wrap',\n    maxWidth: '70%',\n  },\n  mobileHeaderNameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  backArrow: {\n    position: 'absolute',\n    left: 16,\n    zIndex: 10,\n    padding: 8,\n  },\n  bookingRequestCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    margin: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    maxWidth: '75%',\n    position: 'relative',\n  },\n  sentBookingRequest: {\n    alignSelf: 'flex-end',\n    marginLeft: '20%',\n  },\n  receivedBookingRequest: {\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n  },\n  bookingRequestHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    gap: 8,\n  },\n  bookingRequestTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  bookingRequestDetails: {\n    gap: 8,\n  },\n  inlineDetailRow: {\n    flexDirection: 'row',\n    // alignItems: 'flex-start',\n    gap: 8,\n    marginBottom: 8,\n  },\n  dateSection: {\n    gap: 8,\n  },\n  detailLabel: {\n    fontSize: 16,\n    fontWeight: '502',\n    color: theme.colors.text,\n    // minWidth: 70,\n  },\n  detailText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  acceptButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  acceptButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  viewBookingButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  viewBookingText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  statusContainer: {\n    backgroundColor: theme.colors.primary + '15',\n    padding: 8,\n    borderRadius: 4,\n    marginBottom: 12,\n  },\n  statusText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  deletedOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 12,\n  },\n  deletedText: {\n    color: theme.colors.surface,\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  occurrenceItem: {\n    marginBottom: 12,\n    borderBottomWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  occurrenceNumber: {\n    fontWeight: 'bold',\n    marginBottom: 4,\n    color: theme.colors.primary,\n  },\n  occurrenceDetails: {\n    backgroundColor: theme.colors.background,\n    padding: 8,\n    borderRadius: 4,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 12,\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyText: {\n    padding: 16,\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  loadingMore: {\n    padding: 16,\n  },\n  searchContainer: {\n    padding: 16,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  searchInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    paddingHorizontal: 12,\n    marginVertical: 6,\n    height: 40,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  searchIcon: {\n    marginRight: 8,\n  },\n  clearButton: {\n    padding: 4,\n  },\n  searchInput: {\n    flex: 1,\n    height: '100%',\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outline: 'none',  // Remove outline for web\n    WebkitTapHighlightColor: 'transparent', // Remove tap highlight on iOS/Safari\n    WebkitAppearance: 'none', // Standardize appearance\n    outlineStyle: 'none', // Additional property for some browsers\n  },\n  messageHeaderContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  editDraftButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    marginLeft: 'auto',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  editDraftText: {\n    marginLeft: 4,\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  conversationUnreadBadge: {\n    position: 'relative',\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 18,\n    height: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n  },\n  conversationUnreadText: {\n    color: theme.colors.whiteText,\n    fontSize: 11,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timeContainer: {\n    flexDirection: 'column',\n    alignItems: 'flex-end',\n    justifyContent: 'flex-start',\n  },\n  unreadBadge: {\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 18,\n    height: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    marginLeft: 8,\n    alignSelf: 'flex-start',\n  },\n  \n  unreadBadgeText: {\n    color: 'white',\n    fontSize: 11,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  \n  conversationNameRow: {\n    flexDirection: 'row', \n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  mobileEditDraftButton: {\n    marginRight: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: theme.colors.surface,\n    minWidth: 55,\n    alignSelf: 'flex-start',\n  },\n});\n\nconst MessageHistory = ({ navigation, route }) => {\n  const { colors } = useTheme();\n  const { screenWidth } = useContext(AuthContext);\n  const styles = createStyles(screenWidth, false);\n  \n  // Add loading states\n  const [isLoadingConversations, setIsLoadingConversations] = useState(true);\n  const [isLoadingMessages, setIsLoadingMessages] = useState(false);\n  const [isLoading, setIsLoading] = useState(false); // Add isLoading state for edit draft\n  const [isSearchFocused, setIsSearchFocused] = useState(false); // Add state for search input focus\n  \n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [selectedConversationData, setSelectedConversationData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [isSending, setIsSending] = useState(false);\n  const [showRequestModal, setShowRequestModal] = useState(false);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const { is_DEBUG, is_prototype, isCollapsed, isApprovedProfessional, userRole, timeSettings } = useContext(AuthContext);\n  const [conversations, setConversations] = useState([]);\n  const [filteredConversations, setFilteredConversations] = useState([]); // Add filtered conversations state\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const prevScreenWidthRef = useRef(screenWidth);\n  const hasLoadedInitialDataRef = useRef(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const initialLoadRef = useRef(true);\n  const [showBookingStepModal, setShowBookingStepModal] = useState(false);\n  const [currentBookingId, setCurrentBookingId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [hasDraft, setHasDraft] = useState(false);\n  const [draftData, setDraftData] = useState(null);\n  const [showDraftConfirmModal, setShowDraftConfirmModal] = useState(false);\n  const [wsConnectionStatus, setWsConnectionStatus] = useState('disconnected');\n  const [forceRerender, setForceRerender] = useState(0); // Add this state to help with scroll issues\n  const { resetNotifications, updateRoute, markConversationAsRead, getConversationUnreadCount } = useContext(MessageNotificationContext);\n\n  // Add a ref to track if we're handling route params\n  const isHandlingRouteParamsRef = useRef(false);\n\n  // Add a ref to track if messages have been fetched for the current conversation\n  const hasLoadedMessagesRef = useRef(false);\n\n  // Add a ref to track if we need to open booking creation\n  const shouldOpenBookingCreationRef = useRef(false);\n  \n  // Add a ref for the markMessagesAsRead function that will come from the useWebSocket hook\n  const markMessagesAsReadRef = useRef(null);\n\n  // Add a ref to track the last viewed conversation to avoid redundant API calls\n  const lastViewedConversationRef = useRef(null);\n\n  // Add these refs at the top level of the component, near other ref declarations\n  const isLoadingMoreRef = useRef(false);\n  const processedPagesRef = useRef(new Set());\n  const messageIdsRef = useRef(new Set());\n\n  // Outside the renderMessage callback, add a function to group messages by booking ID\n  const groupMessagesByBookingId = (messages) => {\n    const bookingMessages = {};\n    \n    // First pass: collect messages by booking ID\n    messages.forEach(message => {\n      if (message.metadata && message.metadata.booking_id) {\n        const bookingId = message.metadata.booking_id;\n        if (!bookingMessages[bookingId]) {\n          bookingMessages[bookingId] = [];\n        }\n        bookingMessages[bookingId].push({\n          messageId: message.message_id,\n          type: message.type_of_message,\n          timestamp: new Date(message.created_at || message.timestamp),\n          message: message\n        });\n      }\n    });\n    \n    // Second pass: sort messages by timestamp (newest first)\n    Object.keys(bookingMessages).forEach(bookingId => {\n      bookingMessages[bookingId].sort((a, b) => b.timestamp - a.timestamp);\n    });\n    \n    return bookingMessages;\n  };\n\n  // WebSocket message handler defined as a memoized callback\n  const handleWebSocketMessage = useCallback((data) => {\n    debugLog('MBA3210: Received WebSocket message:', data);\n    \n    try {\n      // Validate message data\n      if (!data || (!data.message_id && !data.conversation_id && !data.type)) {\n        debugLog('MBA3210: Invalid message data received');\n        return;\n      }\n      \n      // Handle user status updates\n      if (data.type === 'user_status_update' && data.user_id) {\n        debugLog('MBA3210: [OTHER USER STATUS] Received online status update for user ID:', data.user_id);\n        \n        // Normalize the user_id to string for comparison\n        const statusUserId = String(data.user_id);\n        const isOnline = !!data.is_online;\n        \n        debugLog(`MBA3210: [OTHER USER STATUS] Processing status change for user ${statusUserId}, online=${isOnline}`);\n        \n        // Update the conversations list with the new online status\n        setConversations(prevConversations => {\n          // Log the current conversations for debugging\n          debugLog(`MBA3210: [OTHER USER STATUS] Checking ${prevConversations.length} conversations for user ${statusUserId}`);\n          \n          // Apply the update\n          const updatedConversations = prevConversations.map(conv => {\n            // Normalize participant IDs to strings for comparison\n            const participant1Id = conv.participant1_id ? String(conv.participant1_id) : '';\n            const participant2Id = conv.participant2_id ? String(conv.participant2_id) : '';\n            \n            // Check if this conversation involves the user whose status changed\n            const matchesUser = (statusUserId === participant1Id || statusUserId === participant2Id);\n            \n            if (matchesUser) {\n              debugLog(`MBA3210: [OTHER USER STATUS] Found match in conversation ${conv.conversation_id}, setting other_participant_online=${isOnline}`);\n              \n              // Update this conversation with the new online status\n              return {\n                ...conv,\n                other_participant_online: isOnline\n              };\n            }\n            return conv;\n          });\n          \n          // Check if any conversations were updated\n          const updatedCount = updatedConversations.filter(\n            (conv, i) => conv.other_participant_online !== prevConversations[i].other_participant_online\n          ).length;\n          \n          debugLog(`MBA3210: [OTHER USER STATUS] Updated ${updatedCount} conversations with new status for user ${statusUserId}`);\n          \n          return updatedConversations;\n        });\n        \n        // Also update the selected conversation if it's affected\n        if (selectedConversationData) {\n          // Normalize participant IDs to strings\n          const selectedParticipant1Id = selectedConversationData.participant1_id \n            ? String(selectedConversationData.participant1_id) \n            : '';\n          const selectedParticipant2Id = selectedConversationData.participant2_id \n            ? String(selectedConversationData.participant2_id) \n            : '';\n          \n          // Check if selected conversation involves this user\n          if (statusUserId === selectedParticipant1Id || statusUserId === selectedParticipant2Id) {\n            debugLog(`MBA3210: [OTHER USER STATUS] Updating selected conversation with online status: ${isOnline} for user ${statusUserId}`);\n            \n            setSelectedConversationData(prev => ({\n              ...prev,\n              other_participant_online: isOnline\n            }));\n          }\n        }\n        \n        return;\n      }\n      \n      // If this message is for our current conversation\n      if (selectedConversation && data.conversation_id && \n          String(data.conversation_id) === String(selectedConversation)) {\n        \n        debugLog('MBA3210: Message is for current conversation, adding to list');\n        \n        // Add the new message to the list (at the beginning since FlatList is inverted)\n        setMessages(prevMessages => {\n          // Check if message already exists to avoid duplicates - be more thorough\n          const messageExists = prevMessages.some(msg => {\n            // Check by ID if available (most reliable)\n            if (msg.message_id && data.message_id && \n                String(msg.message_id) === String(data.message_id)) {\n              debugLog('MBA3210: Duplicate detected by ID');\n              return true;\n            }\n            \n            // Also check for messages with the same content, timestamp and sender\n            // to catch duplicates that might have different/temporary IDs\n            if (msg.content === data.content && \n                msg.sent_by_other_user === data.sent_by_other_user) {\n              \n              // If the timestamp exists, compare with some tolerance\n              if (msg.timestamp && data.timestamp) {\n                const timeDiff = Math.abs(\n                  new Date(msg.timestamp).getTime() - \n                  new Date(data.timestamp).getTime()\n                );\n                \n                // 5 seconds tolerance (messages sent close to each other)\n                if (timeDiff < 5000) {\n                  debugLog('MBA3210: Duplicate detected by content+timestamp');\n                  return true;\n                }\n              } else {\n                // If no timestamp, just assume it's the same message\n                debugLog('MBA3210: Duplicate detected by content+sender');\n                return true;\n              }\n            }\n            \n            // Check for optimistic messages that match\n            if (msg._isOptimistic && \n                msg.content === data.content && \n                !data.sent_by_other_user) {\n              debugLog('MBA3210: Found matching optimistic message, replacing');\n              return true;\n            }\n            \n            return false;\n          });\n          \n          if (messageExists) {\n            debugLog('MBA3210: Message already exists in the list, skipping');\n            \n            // For optimistic messages that now have a real ID, update them\n            if (data.message_id) {\n              return prevMessages.map(msg => {\n                if (msg._isOptimistic && \n                    msg.content === data.content && \n                    !data.sent_by_other_user) {\n                  // Replace the optimistic message with the real one\n                  return { ...data, _wasOptimistic: true };\n                }\n                return msg;\n              });\n            }\n            \n            return prevMessages;\n          }\n          \n          debugLog('MBA3210: Adding new message to list:', data.message_id);\n          return [data, ...prevMessages];\n        });\n        \n        // Mark the message as read if we're viewing this conversation\n        if (data.message_id && markMessagesAsReadRef.current && data.sent_by_other_user) {\n          debugLog('MBA3210: Marking message as read:', data.message_id);\n          markMessagesAsReadRef.current(selectedConversation, [data.message_id]);\n        }\n      } else if (data.conversation_id) {\n        // Update the conversation list for unread messages in other conversations\n        debugLog('MBA3210: Message is for another conversation, updating conversation list');\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            String(conv.conversation_id) === String(data.conversation_id)\n              ? {\n                  ...conv,\n                  last_message: data.content,\n                  last_message_time: data.timestamp,\n                  unread: true\n                }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      debugLog('MBA3210: Error handling WebSocket message:', error);\n    }\n  }, [selectedConversation]);\n\n  // Initialize WebSocket with the message handler\n  const { isConnected, connectionStatus, markMessagesAsRead, reconnect, disconnect, simulateConnection, isUsingFallback } = useWebSocket(\n    'message', \n    handleWebSocketMessage,\n    { handlerId: 'message-history' }\n  );\n  \n  // Update our ref when markMessagesAsRead changes\n  useEffect(() => {\n    markMessagesAsReadRef.current = markMessagesAsRead;\n  }, [markMessagesAsRead]);\n  \n\n  // Add a function to manually force reconnection\n  const handleForceReconnect = useCallback(() => {\n    debugLog('MBA3210: [CONNECTION] User manually requested WebSocket reconnection');\n    if (typeof reconnect === 'function') {\n      reconnect();\n    }\n  }, [reconnect, selectedConversationData]);\n  \n  // Add a function to simulate connection for testing\n  // const handleSimulateConnection = useCallback(() => {\n  //   debugLog('MBA3210: User requested simulated connection');\n  //   if (typeof simulateConnection === 'function') {\n  //     simulateConnection();\n  //   }\n  // }, [simulateConnection]);\n  \n  // Update connection status UI and log more detailed information\n  useEffect(() => {\n    setWsConnectionStatus(connectionStatus);\n    // debugLog(`MBA3210: [MY CONNECTION] WebSocket connection status changed to ${connectionStatus}`);\n    // debugLog(`MBA3210: [MY CONNECTION] isConnected state: ${isConnected}`);\n    // debugLog(`MBA3210: [MY CONNECTION] isUsingFallback: ${isUsingFallback}`);\n    \n    // Add more debug logs to check actual WebSocket readyState\n    if (window && window.WebSocket) {\n      // debugLog(`MBA3210: [MY CONNECTION] WebSocket readyState constants: CONNECTING=${WebSocket.CONNECTING}, OPEN=${WebSocket.OPEN}, CLOSING=${WebSocket.CLOSING}, CLOSED=${WebSocket.CLOSED}`);\n    }\n    \n    // Only log status changes but don't trigger fetches here - that's handled in the mount effect\n    if ((connectionStatus === 'connected' && isConnected) || isUsingFallback) {\n      debugLog('MBA3210: [MY CONNECTION] Connection fully verified as connected or using fallback');\n    } else {\n      debugLog('MBA3210: [MY CONNECTION] Connection not fully verified, status and state mismatch');\n      // debugLog(`MBA3210: [MY CONNECTION] Details - status: ${connectionStatus}, isConnected: ${isConnected}`);\n    }\n  }, [connectionStatus, isConnected, isUsingFallback]);\n  \n  // Force reconnection on component mount to ensure connection\n  useEffect(() => {\n    // Short delay to allow other initializations to complete\n    const timer = setTimeout(() => {\n      debugLog('MBA3210: [MY CONNECTION] Forcing reconnection on component mount');\n      if (typeof reconnect === 'function') {\n        reconnect();\n      }\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, [reconnect]);\n  \n  // Remove the problematic effect and instead add a proper mount effect to load initial data\n  useEffect(() => {\n    if (!initialLoadRef.current) return; // Skip if not initial load\n\n    debugLog('MBA3210: Component mounted - initializing data');\n    \n    const initializeData = async () => {\n      try {\n        // Reset states\n        setConversations([]);\n        setMessages([]);\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n        setIsLoadingConversations(true);\n        setIsLoadingMessages(false);\n        setCurrentPage(1);\n        setHasMore(true);\n        lastViewedConversationRef.current = null;\n\n        // Handle URL parameters on web\n        if (Platform.OS === 'web') {\n          const currentUrl = new URL(window.location.href);\n          const urlConversationId = currentUrl.searchParams.get('conversationId');\n          \n          // Clear URL parameters\n          if (currentUrl.searchParams.has('conversationId')) {\n            currentUrl.searchParams.delete('conversationId');\n            window.history.replaceState({}, '', currentUrl.toString());\n            debugLog('MBA3210: Cleared URL parameters on initial load');\n          }\n\n          // If we have a conversation ID in URL, we'll use that instead of auto-selecting\n          if (urlConversationId) {\n            const conversationsData = await fetchConversations();\n            setSelectedConversation(urlConversationId);\n            return;\n          }\n        }\n\n        // If we have route params on initial load, handle them here\n        if (route.params?.conversationId) {\n          isHandlingRouteParamsRef.current = true;\n          \n          // Check if we should open booking creation (coming from Connections)\n          if (route.params.isProfessional === true) {\n            shouldOpenBookingCreationRef.current = true;\n            debugLog('MBA3210: Will open booking creation after data loads');\n          }\n          \n          const conversationsData = await fetchConversations();\n          setSelectedConversation(route.params.conversationId);\n          \n          navigation.setParams({ \n            messageId: null, \n            conversationId: null,\n            otherUserName: null,\n            isProfessional: null,\n            clientId: null\n          });\n          return;\n        }\n\n        // Normal initialization - only fetch conversations once\n        const conversationsData = await fetchConversations();\n        if (Platform.OS === 'web' && screenWidth > 900 && conversationsData?.length > 0) {\n          setSelectedConversation(conversationsData[0].conversation_id);\n        }\n      } catch (error) {\n        console.error('Error in initialization:', error);\n      } finally {\n        initialLoadRef.current = false;\n        setIsInitialLoad(false);\n        isHandlingRouteParamsRef.current = false;\n      }\n    };\n\n    initializeData();\n\n    return () => {\n      debugLog('MBA3210: Component unmounting - cleaning up');\n      \n      // No longer disconnect on component unmount\n      // This was causing message loss when switching tabs\n      \n      // Reset everything for future component mount\n      setConversations([]);\n      setMessages([]);\n      setSelectedConversation(null);\n      setSelectedConversationData(null);\n      initialLoadRef.current = true;\n      setIsInitialLoad(true);\n      isHandlingRouteParamsRef.current = false;\n      hasLoadedMessagesRef.current = false;\n      shouldOpenBookingCreationRef.current = false;\n      lastViewedConversationRef.current = null;\n      \n      // Clear the global selected conversation tracking\n      if (typeof window !== 'undefined') {\n        window.selectedConversationId = null;\n      }\n    };\n  }, []); // Empty dependency array means this runs once on mount\n  \n  // Modify route params effect to only handle non-reload cases\n  useEffect(() => {\n    // Skip if this is the initial load/reload or if we're already handling route params\n    if (initialLoadRef.current || isHandlingRouteParamsRef.current || !route.params?.conversationId) {\n      return;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA98765 Route params detected (non-reload):', {\n        messageId: route.params.messageId,\n        conversationId: route.params.conversationId,\n        otherUserName: route.params.otherUserName,\n        isProfessional: route.params.isProfessional,\n        clientId: route.params.clientId\n      });\n    }\n    \n    isHandlingRouteParamsRef.current = true;\n    \n    // Check if we should open booking creation (coming from Connections)\n    if (route.params.isProfessional === true) {\n      shouldOpenBookingCreationRef.current = true;\n      if (is_DEBUG) {\n        console.log('MBA98765 Will open booking creation after data loads');\n      }\n    }\n    \n    // Set the selected conversation and fetch data\n    setSelectedConversation(route.params.conversationId);\n    \n    // Reset pagination state\n    setCurrentPage(1);\n    setHasMore(true);\n    \n    // Fetch fresh conversations and messages\n    fetchConversations().then(() => {\n      isHandlingRouteParamsRef.current = false;\n    });\n    \n    // Clear the params to prevent re-fetching\n    navigation.setParams({ \n      messageId: null, \n      conversationId: null,\n      otherUserName: null,\n      isProfessional: null,\n      clientId: null\n    });\n  }, [route.params]);\n\n  // Effect to trigger booking creation once conversation data is loaded\n  useEffect(() => {\n    // Only run if we should open booking creation, have conversation data, and messages are loaded\n    if (shouldOpenBookingCreationRef.current && selectedConversationData && hasLoadedMessagesRef.current) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Conversation data and messages loaded, triggering booking creation', {\n          conversationId: selectedConversationData.conversation_id,\n          isProfessional: selectedConversationData.is_professional,\n          hasDraft: hasDraft,\n          draftData: draftData ? 'exists' : 'none'\n        });\n      }\n      \n      // Reset the flag to prevent re-triggering\n      shouldOpenBookingCreationRef.current = false;\n      \n      // Add a small delay to ensure everything is properly loaded\n      setTimeout(() => {\n        handleCreateBooking();\n      }, 300);\n    }\n  }, [selectedConversationData, hasLoadedMessagesRef.current, hasDraft, draftData]);\n\n  // Keep the conversation selection effect but remove message fetching\n  useEffect(() => {\n    if (!selectedConversation || isInitialLoad) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Skipping conversation data update - initial load or no conversation');\n      }\n      return;\n    }\n\n    // Skip redundant updates if we're already viewing this conversation\n    if (lastViewedConversationRef.current === selectedConversation) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Skipping redundant conversation update - already viewing this conversation');\n      }\n      return;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA98765 Selected conversation changed:', {\n        id: selectedConversation,\n        type: typeof selectedConversation,\n        isHandlingRouteParams: isHandlingRouteParamsRef.current\n      });\n    }\n\n    // Update global tracking of selected conversation\n    if (typeof window !== 'undefined') {\n      window.selectedConversationId = selectedConversation;\n      debugLog(`MBA4321: Updated global selectedConversationId to ${selectedConversation}`);\n    }\n\n    // Find the conversation in our list\n    const conversation = conversations.find(conv => String(conv.conversation_id) === String(selectedConversation));\n    \n    if (conversation) {\n      debugLog(`MBA3210: [OTHER USER STATUS] Setting selected conversation to ${conversation.conversation_id} with user \"${conversation.other_user_name}\"`);\n      debugLog(`MBA3210: [OTHER USER STATUS] Initial online status for \"${conversation.other_user_name}\": ${conversation.other_participant_online ? 'ONLINE' : 'OFFLINE'}`);\n      \n      setSelectedConversationData(conversation);\n      \n      // Mark this conversation as read in the notification context\n      if (markConversationAsRead) {\n        debugLog(`MBA4321: Marking ONLY conversation ${selectedConversation} as read when selected`);\n        markConversationAsRead(selectedConversation);\n      }\n      \n      // Update URL on web platform\n      if (Platform.OS === 'web') {\n        const newUrl = new URL(window.location.href);\n        newUrl.searchParams.set('conversationId', selectedConversation);\n        window.history.pushState({}, '', newUrl.toString());\n      }\n\n      // Reset pagination state\n      setCurrentPage(1);\n      setHasMore(true);\n      \n      // Reset message loading flag for new conversation\n      hasLoadedMessagesRef.current = false;\n      \n      // Update the last viewed conversation\n      lastViewedConversationRef.current = selectedConversation;\n    } else {\n      if (is_DEBUG) {\n        console.log('MBA98765 Could not find conversation data for ID:', selectedConversation);\n      }\n      debugLog(`MBA3210: [OTHER USER STATUS] Could not find conversation data for ID: ${selectedConversation}`);\n    }\n  }, [selectedConversation, conversations, isInitialLoad, markConversationAsRead]);\n\n  // Add cleanup when unmounting the component\n  useEffect(() => {\n    return () => {\n      // Clear the selected conversation tracking when unmounting\n      if (typeof window !== 'undefined') {\n        window.selectedConversationId = null;\n        debugLog('MBA4321: Cleared global selectedConversationId on unmount');\n      }\n    };\n  }, []);\n\n  // Add dedicated effect for message fetching with optimizations\n  useEffect(() => {\n    if (!selectedConversation || isInitialLoad) {\n      return;\n    }\n\n    // Skip if we've already loaded messages for this conversation and nothing has changed\n    const hasSelectedConversationChanged = lastViewedConversationRef.current !== selectedConversation;\n    \n    if (!hasSelectedConversationChanged && hasLoadedMessagesRef.current) {\n      debugLog('MBA4321: Skipping message fetch - conversation unchanged and messages already loaded');\n      return;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA98765 Fetching messages for conversation:', {\n        id: selectedConversation,\n        hasLoaded: hasLoadedMessagesRef.current,\n        hasChanged: hasSelectedConversationChanged,\n        shouldOpenBookingCreation: shouldOpenBookingCreationRef.current\n      });\n    }\n\n    // Create a flag to track if this effect's async operation is still relevant\n    let isCurrentOperation = true;\n    \n    // Set loading flags\n    hasLoadedMessagesRef.current = true;\n    setIsLoadingMessages(true);\n    \n    // Fetch messages\n    fetchMessages(selectedConversation, 1)\n      .then(() => {\n        // Skip updates if component unmounted or conversation changed\n        if (!isCurrentOperation) return;\n        \n        setIsLoadingMessages(false);\n        \n        // After messages are loaded, if we need to open booking creation,\n        // we now have hasDraft and draftData set properly\n        if (shouldOpenBookingCreationRef.current && selectedConversationData) {\n          if (is_DEBUG) {\n            console.log('MBA98765 Messages loaded, now draft data is available');\n          }\n        }\n        \n        // Mark this specific conversation's notifications as read \n        // We do this here after successful message fetch to ensure it actually happened\n        if (markConversationAsRead && hasSelectedConversationChanged) {\n          debugLog(`MBA4321: Marking conversation ${selectedConversation} as read after successful message fetch`);\n          markConversationAsRead(selectedConversation);\n        }\n        \n        // Force a rerender to fix scrolling issues\n        setForceRerender(prev => prev + 1);\n      })\n      .catch(error => {\n        if (!isCurrentOperation) return;\n        setIsLoadingMessages(false);\n        console.error('Error fetching messages:', error);\n      });\n    \n    // Cleanup function\n    return () => {\n      isCurrentOperation = false;\n    };\n  }, [selectedConversation, isInitialLoad, markConversationAsRead]);\n\n  // Modify existing screen width effect\n  useEffect(() => {\n    const prevWidth = prevScreenWidthRef.current;\n    const hasWidthCrossedThreshold = \n      (prevWidth <= 900 && screenWidth > 900) || \n      (prevWidth > 900 && screenWidth <= 900);\n\n    if (is_DEBUG) {\n      console.log('MBA98765 Screen width change:', {\n        prev: prevWidth,\n        current: screenWidth,\n        crossedThreshold: hasWidthCrossedThreshold\n      });\n    }\n\n    prevScreenWidthRef.current = screenWidth;\n\n    // Only handle width threshold crossing\n    if (hasWidthCrossedThreshold) {\n      if (screenWidth > 900 && conversations.length > 0 && !selectedConversation) {\n        if (is_DEBUG) {\n          console.log('MBA98765 Auto-selecting first conversation on width change');\n        }\n        setSelectedConversation(conversations[0].conversation_id);\n      }\n    }\n  }, [screenWidth]);\n\n  // Update conversations list when main conversation list or search query changes\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredConversations(conversations);\n    } else {\n      const lowercaseQuery = searchQuery.trim().toLowerCase();\n      const filtered = conversations.filter(conv => \n        conv.other_user_name && conv.other_user_name.toLowerCase().includes(lowercaseQuery)\n      );\n      setFilteredConversations(filtered);\n    }\n  }, [conversations, searchQuery]);\n\n  // Modify fetchConversations to update filtered conversations\n  const fetchConversations = async () => {\n    try {\n      // Don't reload if already loading or if conversations are already loaded and this isn't initialization\n      if (isLoadingConversations && conversations.length > 0 && !initialLoadRef.current) {\n        debugLog('MBA3210: [OTHER USERS STATUS] Skipping duplicate conversation fetch - already loading');\n        return conversations;\n      }\n      \n      setIsLoadingConversations(true);\n      debugLog('MBA3210: [OTHER USERS STATUS] Starting to fetch conversations with online status data');\n\n      const token = await getStorage('userToken');\n      const requestUrl = `${API_BASE_URL}/api/conversations/v1/`;\n      \n      debugLog('MBA3210: [OTHER USERS STATUS] Making API request to get conversations with online statuses');\n      const response = await axios.get(requestUrl, {\n        headers: { \n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (response.data && Array.isArray(response.data)) {\n        // Add default false value for other_participant_online if not present\n        const conversationsWithOnlineStatus = response.data.map(conv => ({\n          ...conv,\n          other_participant_online: conv.other_participant_online || false\n        }));\n        \n        // Log each conversation's online status for debugging\n        conversationsWithOnlineStatus.forEach(conv => {\n          const otherUserName = conv.other_user_name || 'Unknown';\n          debugLog(`MBA3210: [OTHER USERS STATUS] User \"${otherUserName}\" (conversation ${conv.conversation_id}) online status: ${conv.other_participant_online ? 'ONLINE' : 'OFFLINE'}`);\n        });\n        \n        debugLog(`MBA3210: [OTHER USERS STATUS] Fetched ${conversationsWithOnlineStatus.length} conversations with online status data`);\n        \n        setConversations(conversationsWithOnlineStatus);\n        setFilteredConversations(conversationsWithOnlineStatus); // Update filtered conversations too\n        return conversationsWithOnlineStatus;\n      }\n      return [];\n    } catch (error) {\n      console.error('Error fetching conversations:', error);\n      debugLog(`MBA3210: [OTHER USERS STATUS] Error fetching conversation status data: ${error.message}`);\n      return [];\n    } finally {\n      setIsLoadingConversations(false);\n    }\n  };\n\n  // Modify fetchMessages to handle pagination better and prevent duplicate requests\n  const fetchMessages = async (conversationId, page = 1) => {\n    try {\n      // Skip if we've already processed this page for the current conversation\n      const pageKey = `${conversationId}-${page}`;\n      if (processedPagesRef.current.has(pageKey) && page > 1) {\n        debugLog(`MBA4321: Skipping duplicate fetch for page ${page} of conversation ${conversationId}`);\n        return;\n      }\n      \n      if (page === 1) {\n        setIsLoadingMessages(true);\n        // Reset messages when fetching first page\n        setMessages([]);\n        // Clear processed pages and message IDs when starting fresh\n        processedPagesRef.current.clear();\n        messageIdsRef.current.clear();\n      } else {\n        // Set the loading ref first to block concurrent requests\n        if (isLoadingMoreRef.current) {\n          debugLog(`MBA4321: Already loading more messages, skipping request for page ${page}`);\n          return;\n        }\n        \n        // Mark that we're loading more\n        isLoadingMoreRef.current = true;\n        setIsLoadingMore(true);\n      }\n      \n      // Mark this page as being processed\n      processedPagesRef.current.add(pageKey);\n      \n      const token = await getStorage('userToken');\n      \n      const url = `${API_BASE_URL}/api/messages/v1/conversation/${conversationId}/?page=${page}`;\n      debugLog(`MBA4321: Fetching messages for conversation ${conversationId}, page ${page}`);\n\n      const response = await axios.get(url, {\n        headers: { \n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      // Process messages to remove duplicates\n      const newMessages = response.data.messages || [];\n      const uniqueMessages = newMessages.filter(msg => {\n        // Skip messages we already have\n        if (msg.message_id && messageIdsRef.current.has(msg.message_id)) {\n          debugLog(`MBA4321: Skipping duplicate message ${msg.message_id}`);\n          return false;\n        }\n        \n        // Add to our set of seen message IDs\n        if (msg.message_id) {\n          messageIdsRef.current.add(msg.message_id);\n        }\n        \n        return true;\n      });\n      \n      debugLog(`MBA4321: Received ${newMessages.length} messages, ${uniqueMessages.length} unique for page ${page}`);\n      \n      // Update the messages state based on the page\n      if (page === 1) {\n        setMessages(uniqueMessages);\n        // Set draft data only on first page load\n        setHasDraft(response.data.has_draft || false);\n        setDraftData(response.data.draft_data || null);\n        \n        // Force a rerender after setting messages to fix scroll issues\n        setTimeout(() => {\n          setForceRerender(prev => prev + 1);\n        }, 100);\n      } else {\n        setMessages(prev => {\n          // Create a set of existing message IDs for quick lookups\n          const existingIds = new Set(prev.map(m => m.message_id).filter(Boolean));\n          \n          // Only add messages we don't already have\n          const messagesToAdd = uniqueMessages.filter(msg => \n            !msg.message_id || !existingIds.has(msg.message_id)\n          );\n          \n          debugLog(`MBA4321: Adding ${messagesToAdd.length} unique messages to existing ${prev.length} messages`);\n          \n          return [...prev, ...messagesToAdd];\n        });\n      }\n      \n      // Update pagination state\n      setHasMore(response.data.has_more);\n      setCurrentPage(page);\n\n    } catch (error) {\n      debugLog('MBABOSS [ERROR] Error in fetchMessages:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status,\n        url: error.config?.url,\n        method: error.config?.method\n      });\n    } finally {\n      setIsLoadingMessages(false);\n      setIsLoadingMore(false);\n      // Reset the loading ref after a short delay to prevent rapid consecutive calls\n      setTimeout(() => {\n        isLoadingMoreRef.current = false;\n      }, 300);\n    }\n  };\n\n  // Function to send a message\n  const SendNormalMessage = async (messageContent) => {\n    try {\n      const token = await getStorage('userToken');\n      const response = await axios.post(`${API_BASE_URL}/api/messages/v1/send_norm_message/`, {\n        conversation_id: selectedConversation,\n        content: messageContent\n      }, {\n        headers: { \n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Add new message to the beginning of the list since FlatList is inverted\n      setMessages(prevMessages => [response.data, ...prevMessages]);\n\n      // Update conversation's last message\n      setConversations(prev => prev.map(conv => \n        conv.conversation_id === selectedConversation \n          ? {\n              ...conv,\n              last_message: messageContent,\n              last_message_time: response.data.timestamp\n            }\n          : conv\n      ));\n\n      return response.data;\n    } catch (error) {\n      console.error('Error sending message:', error);\n      throw error;\n    }\n  };\n\n  // Update the handleCreateBooking function\n  const handleCreateBooking = async () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleCreateBooking:', {\n        selectedConversationData,\n        selectedConversation,\n        isProfessional: selectedConversationData?.is_professional,\n        hasDraft,\n        draftData\n      });\n    }\n    \n    if (!selectedConversationData) {\n      console.log('MBA98765 No conversation data found, refreshing conversations');\n      await fetchConversations();\n      const updatedConversation = conversations.find(conv => conv.conversation_id === selectedConversation);\n      if (!updatedConversation) {\n        console.log('MBA98765 Still no conversation data after refresh');\n        return;\n      }\n      setSelectedConversationData(updatedConversation);\n      if (is_DEBUG) {\n        console.log('MBA98765 Updated conversation data:', updatedConversation);\n      }\n    }\n\n    // Check if current user is the professional by checking their role in the conversation\n    const isProfessional = selectedConversationData.is_professional === true;\n    \n    if (is_DEBUG) {\n      console.log('MBA98765 Is Professional?', isProfessional);\n    }\n\n    setShowDropdown(false); // Close dropdown first to prevent any UI issues\n\n    if (isProfessional) {\n      if (is_DEBUG) {\n        console.log('MBA98765 User is professional - checking for existing draft', { hasDraft, draftData });\n      }\n\n      if (hasDraft && draftData) {\n        // Show the draft confirmation modal\n        setShowDraftConfirmModal(true);\n      } else {\n        // No existing draft, create new one\n        await createNewDraft();\n      }\n    } else {\n      console.log('MBA98765 User is owner - showing request modal');\n      setShowRequestModal(true);\n    }\n  };\n\n  // Helper function to create a new draft\n  const createNewDraft = async () => {\n    try {\n      const token = await getStorage('userToken');\n      const response = await axios.post(\n        `${API_BASE_URL}/api/bookings/v1/create/`,\n        {\n          conversation_id: selectedConversation\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA98765 Create draft response:', response.data);\n      }\n\n      // Refresh messages to update draft status\n      await fetchMessages(selectedConversation, 1);\n\n      // Open BookingStepModal with new draft\n      if (response.data.draft_id) {\n        setCurrentBookingId(response.data.draft_id);\n        setTimeout(() => {\n          setShowBookingStepModal(true);\n        }, 100);\n      }\n    } catch (error) {\n      console.error('Error creating draft:', error);\n      Alert.alert('Error', 'Unable to create draft. Please try again.');\n    }\n  };\n\n  // Add the handleContinueExisting function\n  const handleContinueExisting = () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleContinueExisting:', {\n        draftData,\n        showDraftConfirmModal,\n        showBookingStepModal\n      });\n    }\n\n    setShowDraftConfirmModal(false);\n    \n    // Use draft_id instead of booking_id\n    if (draftData?.draft_id) {\n      setCurrentBookingId(draftData.draft_id);\n      // Add a small delay to ensure modal state is updated\n      setTimeout(() => {\n        if (is_DEBUG) {\n          console.log('MBA98765 Opening BookingStepModal with draft:', draftData.draft_id);\n        }\n        setShowBookingStepModal(true);\n      }, 100);\n    } else {\n      console.error('MBA98765 No draft_id found in draftData:', draftData);\n    }\n  };\n\n  // Add the handleCreateNew function\n  const handleCreateNew = async () => {\n    setShowDraftConfirmModal(false);\n    await createNewDraft();\n  };\n\n  // Update loadMoreMessages to check current state before loading\n  const loadMoreMessages = useCallback(() => {\n    if (is_DEBUG) {\n      console.log('MBA98765 loadMoreMessages called:', {\n        hasMore,\n        isLoadingMore,\n        isLoadingMoreRef: isLoadingMoreRef.current,\n        currentPage,\n        selectedConversation\n      });\n    }\n    \n    if (hasMore && !isLoadingMoreRef.current && selectedConversation) {\n      debugLog(`MBA4321: Loading more messages for page ${currentPage + 1}`);\n      fetchMessages(selectedConversation, currentPage + 1);\n    }\n  }, [hasMore, currentPage, selectedConversation]);\n\n  const renderMessage = useCallback(({ item }) => {\n    // Create a map to keep track of which bookings have change requests and latest message timestamps\n    const bookingMessages = groupMessagesByBookingId(messages);\n    \n    // Track bookings that have been confirmed\n    const confirmedBookingIds = messages\n      .filter(m => m.type_of_message === 'booking_confirmed')\n      .map(m => m.metadata?.booking_id)\n      .filter(Boolean);\n    \n    // Find approval requests for already confirmed bookings\n    const bookingsWithUpdates = {};\n    \n    // For each confirmed booking, check if there are newer approval requests\n    confirmedBookingIds.forEach(bookingId => {\n      const messagesForBooking = messages.filter(m => \n        m.metadata?.booking_id === bookingId\n      ).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      \n      // Find the confirmation message for this booking\n      const confirmationMessage = messagesForBooking.find(m => \n        m.type_of_message === 'booking_confirmed'\n      );\n      \n      // Find any newer approval request messages for this booking\n      if (confirmationMessage) {\n        const confirmationTime = new Date(confirmationMessage.timestamp);\n        const newerApprovalRequests = messagesForBooking.filter(m => \n          m.type_of_message === 'send_approved_message' && \n          new Date(m.timestamp) > confirmationTime\n        );\n        \n        // If we found newer approval requests, mark this booking as having updates\n        if (newerApprovalRequests.length > 0) {\n          bookingsWithUpdates[bookingId] = true;\n          debugLog('MBA6428: Detected booking update for confirmed booking:', {\n            bookingId,\n            confirmationTime,\n            newerApprovalRequests: newerApprovalRequests.map(m => m.message_id)\n          });\n        }\n      }\n    });\n    \n    const hasChangeRequest = item.metadata?.booking_id && \n      messages.some(m => \n        m.type_of_message === 'request_changes' && \n        m.metadata?.booking_id === item.metadata.booking_id\n      );\n    \n    // Determine if booking is confirmed\n    const bookingIsConfirmed = item.metadata?.booking_id && \n      confirmedBookingIds.includes(item.metadata.booking_id);\n      \n    // Check if this confirmed booking has newer approval requests\n    const hasNewerApprovalRequests = item.metadata?.booking_id && \n      bookingsWithUpdates[item.metadata.booking_id];\n    \n    // Determine if this is the newest message for this booking\n    let isNewestMessage = false;\n    let messageCreatedAt = new Date(item.created_at || item.timestamp);\n    \n    if (item.metadata?.booking_id && bookingMessages[item.metadata.booking_id]) {\n      const bookingMessagesList = bookingMessages[item.metadata.booking_id];\n      \n      // Check if this is the newest message for this booking\n      isNewestMessage = bookingMessagesList.length > 0 && \n        bookingMessagesList[0].messageId === item.message_id;\n      \n      debugLog(`MBA7321: Message ${item.message_id} for booking ${item.metadata.booking_id} isNewestMessage: ${isNewestMessage}`);\n    }\n\n    if (item.type_of_message === 'initial_booking_request' || item.type_of_message === 'send_approved_message') {\n      const isFromMe = !item.sent_by_other_user;\n\n      // Determine if this booking has an associated change request\n      const bookingId = item.metadata?.booking_id;\n      const hasAssociatedChangeRequest = bookingId && messages.some(m => \n        m.type_of_message === 'request_changes' && \n        m.metadata?.booking_id === bookingId\n      );\n\n      // Check if this is an approval request message\n      const isApprovalMessage = item.type_of_message === 'send_approved_message';\n      \n      // Get booking status from metadata\n      const bookingStatus = bookingIsConfirmed ? \"Confirmed\" : item.metadata?.booking_status;\n      \n      // For approval requests: determine if this is for an already confirmed booking\n      // by checking if there's a booking_confirmed message with an earlier timestamp\n      const isUpdateToConfirmedBooking = isApprovalMessage && bookingIsConfirmed && bookingId && \n        messages.some(m => \n          m.type_of_message === 'booking_confirmed' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        );\n      \n      // Check if there are newer request changes messages for this booking update\n      const hasNewerRequestChanges = isUpdateToConfirmedBooking && bookingId &&\n        messages.some(m =>\n          m.type_of_message === 'request_changes' &&\n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) > new Date(item.timestamp)\n        );\n      \n      // Log info if this is an update to a confirmed booking\n      if (isUpdateToConfirmedBooking) {\n        debugLog('MBA6428: Detected approval request for already confirmed booking:', {\n          messageId: item.message_id,\n          bookingId,\n          isApprovalMessage,\n          bookingIsConfirmed,\n          isUpdateToConfirmedBooking,\n          hasNewerRequestChanges\n        });\n      }\n      \n      // Check if the pro should be able to edit the draft\n      const showEditDraft = selectedConversationData?.is_professional && \n        (item.type_of_message === 'initial_booking_request' || \n         (item.type_of_message === 'send_approved_message' && hasAssociatedChangeRequest));\n\n      // This is for logging purposes\n      if (showEditDraft) {\n        debugLog('MBA6428: Showing edit draft button for message:', {\n          messageId: item.message_id,\n          bookingId: bookingId,\n          type: item.type_of_message\n        });\n      }\n\n      // Get total owner cost\n      let totalOwnerCost = '0.00';\n      try {\n        if (item.metadata.cost_summary && item.metadata.cost_summary.total_client_cost) {\n          totalOwnerCost = item.metadata.cost_summary.total_client_cost;\n        }\n      } catch (error) {\n        console.error('Error parsing total cost:', error);\n      }\n\n      return (\n        <BookingMessageCard\n          type={item.type_of_message === 'initial_booking_request' ? 'request' : 'approval'}\n          displayType={isUpdateToConfirmedBooking ? 'booking_update' : undefined}\n          data={{\n            ...item.metadata,\n            booking_id: item.metadata.booking_id,\n            service_type: item.metadata.service_type,\n            total_owner_cost: totalOwnerCost,\n            occurrences: item.metadata.occurrences || []\n          }}\n          isFromMe={isFromMe}\n          onPress={() => {\n            // Navigate to booking details if we have a booking_id\n            if (item.metadata.booking_id) {\n              navigation.navigate('BookingDetails', { \n                bookingId: item.metadata.booking_id,\n                from: 'MessageHistory'\n              });\n            }\n          }}\n          isProfessional={selectedConversationData?.is_professional}\n          onApproveSuccess={(response) => {\n            // Update the messages list to reflect the approval\n            // You would typically update the booking status here\n            if (response && response.status) {\n              Alert.alert('Success', 'Booking approved successfully');\n              // Refresh messages to update the UI\n              fetchMessages(selectedConversation, 1);\n            }\n          }}\n          onApproveError={(error) => {\n            Alert.alert('Error', error || 'Failed to approve booking');\n          }}\n          onEditDraft={showEditDraft ? () => {\n            debugLog('MBA6428: Edit Draft button clicked, calling handleEditDraft with bookingId:', bookingId);\n            handleEditDraft(bookingId);\n          } : undefined}\n          bookingStatus={bookingStatus}\n          hasChangeRequest={hasAssociatedChangeRequest || hasNewerRequestChanges}\n          isNewestMessage={isNewestMessage}\n          messageCreatedAt={messageCreatedAt}\n          isAfterConfirmation={isUpdateToConfirmedBooking}\n        />\n      );\n    }\n\n    if (item.type_of_message === 'request_changes') {\n      const isFromMe = !item.sent_by_other_user;\n      \n      // Get booking details from metadata\n      const bookingId = item.metadata?.booking_id;\n      const serviceType = item.metadata?.service_type;\n      const bookingStatus = bookingIsConfirmed ? \"Confirmed\" : item.metadata?.booking_status;\n      \n      // For a request_changes message, it should be considered the newest if:\n      // 1. It's the most recent message for this booking (already calculated)\n      // 2. OR there are no newer approval requests for this booking after this request_changes message\n      let isNewestChangeRequest = isNewestMessage;\n      \n      if (!isNewestChangeRequest && item.type_of_message === 'request_changes' && bookingId) {\n        // Check if there are any newer approval messages\n        const hasNewerApprovalMessages = messages.some(m => \n          m.type_of_message === 'send_approved_message' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) > new Date(item.timestamp)\n        );\n        \n        // If there are no newer approval messages, this can be treated as the newest message\n        isNewestChangeRequest = !hasNewerApprovalMessages;\n        \n        debugLog('MBA4321: Checking if request_changes is effectively newest:', {\n          messageId: item.message_id,\n          originalIsNewest: isNewestMessage,\n          hasNewerApprovals: hasNewerApprovalMessages,\n          effectivelyNewest: isNewestChangeRequest\n        });\n      }\n      \n      // Check if this change request is related to a booking update\n      // (i.e., an approval that came after a booking confirmation)\n      const isRelatedToUpdate = bookingIsConfirmed && bookingId &&\n        messages.some(m => \n          (m.type_of_message === 'send_approved_message' || m.type_of_message === 'booking_confirmed') &&\n          m.metadata?.booking_id === bookingId\n        );\n      \n      // Log for debugging\n      debugLog('MBA4321: Rendering change request message:', {\n        bookingId,\n        isFromMe,\n        content: item.content,\n        metadata: item.metadata,\n        isNewestMessage,\n        isNewestChangeRequest,\n        isConfirmed: bookingIsConfirmed,\n        isRelatedToUpdate,\n        hasOlderBookingConfirmedMessage: messages.some(m => \n          m.type_of_message === 'booking_confirmed' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        ),\n        hasOlderApprovalMessage: messages.some(m => \n          m.type_of_message === 'send_approved_message' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        )\n      });\n      \n      return (\n        <BookingMessageCard\n          type=\"request_changes\"\n          data={{\n            ...item.metadata,\n            booking_id: bookingId,\n            service_type: serviceType,\n            cost_summary: item.metadata?.cost_summary || {},\n            occurrences: item.metadata?.occurrences || [],\n            content: item.content // Include the message content for display\n          }}\n          isFromMe={isFromMe}\n          onPress={() => {\n            // Navigate to booking details if we have a booking_id\n            if (bookingId) {\n              navigation.navigate('BookingDetails', { \n                bookingId: bookingId,\n                from: 'MessageHistory'\n              });\n            }\n          }}\n          isProfessional={selectedConversationData?.is_professional}\n          onApproveSuccess={(response) => {\n            if (response && response.status) {\n              Alert.alert('Success', 'Changes handled successfully');\n              fetchMessages(selectedConversation, 1);\n            }\n          }}\n          onApproveError={(error) => {\n            Alert.alert('Error', error || 'Failed to process changes');\n          }}\n          onEditDraft={selectedConversationData?.is_professional ? () => {\n            handleEditDraft(bookingId);\n          } : undefined}\n          bookingStatus={bookingStatus}\n          hasChangeRequest={false} // Change requests don't have change requests themselves\n          isNewestMessage={isNewestChangeRequest} // Use enhanced newest message check\n          messageCreatedAt={messageCreatedAt}\n          isAfterConfirmation={isRelatedToUpdate} // Flag for change requests after an update\n        />\n      );\n    }\n\n    // Handle booking confirmation messages\n    if (item.type_of_message === 'booking_confirmed') {\n      const isFromMe = !item.sent_by_other_user;\n      \n      // Get booking details from metadata\n      const bookingId = item.metadata?.booking_id;\n      const serviceType = item.metadata?.service_type;\n      \n      // Get cost info from metadata\n      let totalCost = '0.00';\n      let payout = '0.00';\n      try {\n        if (item.metadata.cost_summary) {\n          totalCost = item.metadata.cost_summary.total_client_cost || '0.00';\n          payout = item.metadata.cost_summary.total_sitter_payout || '0.00';\n        }\n      } catch (error) {\n        console.error('Error parsing cost data:', error);\n      }\n      \n      debugLog('MBA6428: Rendering booking confirmation message:', {\n        bookingId,\n        isFromMe,\n        metadata: item.metadata,\n        totalCost,\n        payout,\n        hasNewerApprovalRequests\n      });\n      \n      return (\n        <BookingMessageCard\n          type=\"booking_confirmed\"\n          data={{\n            booking_id: bookingId,\n            service_type: serviceType,\n            cost_summary: {\n              total_client_cost: totalCost,\n              total_sitter_payout: payout\n            }\n          }}\n          isFromMe={isFromMe}\n          onPress={() => {\n            // Navigate to booking details if we have a booking_id\n            if (bookingId) {\n              navigation.navigate('BookingDetails', { \n                bookingId: bookingId,\n                from: 'MessageHistory'\n              });\n            }\n          }}\n          isProfessional={selectedConversationData?.is_professional}\n          bookingStatus=\"Confirmed\"\n          isNewestMessage={isNewestMessage}\n          messageCreatedAt={messageCreatedAt}\n          onEditDraft={selectedConversationData?.is_professional ? () => {\n            debugLog('MBA6428: Edit Draft button clicked for confirmed booking with bookingId:', bookingId);\n            handleEditDraft(bookingId);\n          } : undefined}\n          hasNewerApprovalRequests={hasNewerApprovalRequests}\n        />\n      );\n    }\n\n    // Handle normal messages\n    const isFromMe = !item.sent_by_other_user;\n    return (\n      <View style={isFromMe ? styles.sentMessageContainer : styles.receivedMessageContainer}>\n        <View style={[\n          styles.messageCard, \n          isFromMe ? styles.sentMessage : styles.receivedMessage\n        ]}>\n          <View style={styles.messageContent}>\n            <Text style={[\n              styles.messageText,\n              isFromMe ? styles.sentMessageText : styles.receivedMessageText\n            ]}>\n              {item.content}\n            </Text>\n          </View>\n        </View>\n      </View>\n    );\n  }, [navigation, selectedConversationData, timeSettings, hasDraft, draftData, selectedConversation, fetchMessages, messages]);\n\n  const WebInput = () => {\n    const [message, setMessage] = useState('');\n    const inputRef = useRef(null);\n    const isProcessingRef = useRef(false);\n\n    const adjustHeight = () => {\n      if (inputRef.current) {\n        // Store the current scroll position\n        const scrollTop = inputRef.current.scrollTop;\n        \n        // Reset height to recalculate\n        inputRef.current.style.height = 'inherit';\n        \n        // Set new height\n        const newHeight = Math.min(inputRef.current.scrollHeight, 120);\n        inputRef.current.style.height = `${newHeight}px`;\n        \n        // If we've hit max height, restore scroll position\n        if (inputRef.current.scrollHeight > 120) {\n          inputRef.current.scrollTop = scrollTop;\n        }\n      }\n    };\n\n    const handleChange = (e) => {\n      setMessage(e.target.value);\n      adjustHeight();\n    };\n\n    const handleSend = async () => {\n      // Prevent duplicate sends by checking if we're already sending\n      if (message.trim() && !isSending && !isProcessingRef.current) {\n        isProcessingRef.current = true;\n        setIsSending(true);\n        \n        try {\n          // Clear input right away before API call to prevent double-sending\n          const messageToSend = message.trim(); // Save message content\n          setMessage(''); // Clear input field\n          if (inputRef.current) {\n            inputRef.current.style.height = '24px';\n            inputRef.current.scrollTop = 0;\n          }\n          \n          // Generate a unique temporary ID for optimistic update\n          const tempId = `temp-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          \n          // Optimistically add message to UI immediately\n          const optimisticMessage = {\n            message_id: tempId,\n            content: messageToSend,\n            timestamp: new Date().toISOString(),\n            status: 'sent',\n            type_of_message: 'normal_message',\n            is_clickable: false,\n            sent_by_other_user: false,\n            _isOptimistic: true // Flag to identify this as an optimistic update\n          };\n          \n          // Add to messages state\n          setMessages(prevMessages => {\n            // First check if we already have this message (prevent doubles)\n            const messageExists = prevMessages.some(msg => \n              msg._isOptimistic && msg.content === messageToSend\n            );\n            \n            if (messageExists) {\n              debugLog('MBA3210: Skipping duplicate optimistic message');\n              return prevMessages;\n            }\n            \n            return [optimisticMessage, ...prevMessages];\n          });\n          \n          // Actually send the message to the server\n          const sentMessage = await SendNormalMessage(messageToSend);\n          \n          // Replace optimistic message with actual one\n          setMessages(prevMessages => {\n            // Remove optimistic message and add real one, ensuring no duplicates\n            const filteredMessages = prevMessages.filter(msg => \n              // Keep all messages that are NOT our optimistic update\n              !(msg._isOptimistic && msg.content === messageToSend)\n            );\n            \n            // Check if the real message is already in the list\n            const realMessageExists = filteredMessages.some(msg => \n              msg.message_id && sentMessage.message_id && \n              String(msg.message_id) === String(sentMessage.message_id)\n            );\n            \n            if (realMessageExists) {\n              debugLog('MBA3210: Real message already exists, skipping');\n              return filteredMessages;\n            }\n            \n            // Add the real message\n            return [sentMessage, ...filteredMessages];\n          });\n        } catch (error) {\n          console.error('Failed to send message:', error);\n          \n          // Restore the message in the input field on error\n          setMessage(message);\n          \n          // Remove optimistic message on error\n          setMessages(prevMessages => \n            prevMessages.filter(msg => !msg._isOptimistic)\n          );\n          \n          // Show error\n          Alert.alert('Error', 'Failed to send message. Please try again.');\n        } finally {\n          setIsSending(false);\n          \n          // Add delay before allowing another send\n          setTimeout(() => {\n            isProcessingRef.current = false;\n          }, 300);\n        }\n      }\n    };\n\n    return (\n      <View style={styles.inputInnerContainer}>\n        <textarea\n          ref={inputRef}\n          style={styles.webInput}\n          placeholder=\"Type a message...\"\n          value={message}\n          onChange={handleChange}\n          onKeyPress={(e) => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              handleSend();\n            }\n          }}\n          disabled={isSending}\n          rows={1}\n        />\n        <Button \n          mode=\"contained\" \n          onPress={handleSend} \n          disabled={isSending}\n          style={[styles.sendButton, screenWidth <= 600 && styles.sendButtonMobile]}\n        >\n          {isSending ? (\n            <ActivityIndicator color={theme.colors.whiteText} size=\"small\" />\n          ) : screenWidth <= 600 ? (\n            <MaterialCommunityIcons name=\"arrow-up\" size={16} color={theme.colors.whiteText} />\n          ) : (\n            'Send'\n          )}\n        </Button>\n      </View>\n    );\n  };\n\n  const MobileInput = () => {\n    const [message, setMessage] = useState('');\n    const inputRef = useRef(null);\n    const isProcessingRef = useRef(false);\n\n    const handleSend = async () => {\n      // Prevent duplicate sends by checking if we're already sending\n      if (message.trim() && !isSending && !isProcessingRef.current) {\n        isProcessingRef.current = true;\n        setIsSending(true);\n        \n        try {\n          // Clear input right away before API call to prevent double-sending\n          const messageToSend = message.trim(); // Save message content\n          setMessage(''); // Clear input field immediately\n          \n          // Generate a unique temporary ID for optimistic update\n          const tempId = `temp-${Date.now()}-${Math.random().toString(36).substring(2, 9)}`;\n          \n          // Optimistically add message to UI immediately\n          const optimisticMessage = {\n            message_id: tempId,\n            content: messageToSend,\n            timestamp: new Date().toISOString(),\n            status: 'sent',\n            type_of_message: 'normal_message',\n            is_clickable: false,\n            sent_by_other_user: false,\n            _isOptimistic: true // Flag to identify this as an optimistic update\n          };\n          \n          // Add to messages state\n          setMessages(prevMessages => {\n            // First check if we already have this message (prevent doubles)\n            const messageExists = prevMessages.some(msg => \n              msg._isOptimistic && msg.content === messageToSend\n            );\n            \n            if (messageExists) {\n              debugLog('MBA3210: Skipping duplicate optimistic message');\n              return prevMessages;\n            }\n            \n            return [optimisticMessage, ...prevMessages];\n          });\n          \n          // Actually send the message to the server\n          const sentMessage = await SendNormalMessage(messageToSend);\n          \n          // Replace optimistic message with actual one\n          setMessages(prevMessages => {\n            // Remove optimistic message and add real one, ensuring no duplicates\n            const filteredMessages = prevMessages.filter(msg => \n              // Keep all messages that are NOT our optimistic update\n              !(msg._isOptimistic && msg.content === messageToSend)\n            );\n            \n            // Check if the real message is already in the list\n            const realMessageExists = filteredMessages.some(msg => \n              msg.message_id && sentMessage.message_id && \n              String(msg.message_id) === String(sentMessage.message_id)\n            );\n            \n            if (realMessageExists) {\n              debugLog('MBA3210: Real message already exists, skipping');\n              return filteredMessages;\n            }\n            \n            // Add the real message\n            return [sentMessage, ...filteredMessages];\n          });\n        } catch (error) {\n          console.error('Failed to send message:', error);\n          \n          // Restore the message in the input field on error\n          setMessage(message);\n          \n          // Remove optimistic message on error\n          setMessages(prevMessages => \n            prevMessages.filter(msg => !msg._isOptimistic)\n          );\n          \n          // Show error\n          Alert.alert('Error', 'Failed to send message. Please try again.');\n        } finally {\n          setIsSending(false);\n          \n          // Add delay before allowing another send\n          setTimeout(() => {\n            isProcessingRef.current = false;\n          }, 300);\n        }\n      }\n    };\n\n    return (\n      <View style={styles.inputContainer}>\n        <TextInput\n          ref={inputRef}\n          style={styles.input}\n          placeholder=\"Type a message...\"\n          value={message}\n          onChangeText={setMessage}\n          multiline\n          blurOnSubmit={false}\n          editable={!isSending}\n        />\n        <Button \n          mode=\"contained\" \n          onPress={handleSend}\n          disabled={isSending}\n        >\n          {isSending ? (\n            <ActivityIndicator color={theme.colors.primary} size=\"small\" />\n          ) : (\n            'Send'\n          )}\n        </Button>\n      </View>\n    );\n  };\n\n  const MessageInput = Platform.OS === 'web' ? <WebInput /> : <MobileInput />;\n  \n  const handleBookingRequest = async (modalData) => {\n    try {\n      const token = await getStorage('userToken');\n      \n      // First, create the booking request\n      const bookingRequestResponse = await axios.post(\n        `${API_BASE_URL}/api/bookings/v1/request_booking/`,\n        modalData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('MBABOSS Created booking with ID:', bookingRequestResponse.data.booking_id);\n      }\n\n      // Then, send the booking request message with the booking ID\n      const messageResponse = await axios.post(\n        `${API_BASE_URL}/api/messages/v1/send_request_booking/`,\n        {\n          ...modalData,\n          booking_id: bookingRequestResponse.data.booking_id\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('Sent message response:', messageResponse.data);\n      }\n\n      // Add the new message to the messages list\n      setMessages(prevMessages => [messageResponse.data, ...prevMessages]);\n\n      setShowRequestModal(false);\n    } catch (error) {\n      console.error('Error creating booking:', error);\n      Alert.alert(\n        'Error',\n        'Unable to create booking. Please try again.',\n        [{ text: 'OK' }]\n      );\n    }\n  };\n\n  // Add search functionality\n  const handleSearch = (text) => {\n    setSearchQuery(text);\n    // Filtering is now handled by the useEffect defined above\n  };\n\n  // Update conversation list to include search\n  const renderConversationList = () => (\n    <View style={styles.conversationListContainer}>\n      <View style={styles.searchContainer}>\n        <View style={[\n          styles.searchInputContainer, \n          isSearchFocused && { borderColor: theme.colors.primary }\n        ]}>\n          <MaterialCommunityIcons \n            name=\"magnify\" \n            size={20} \n            color={theme.colors.placeholder}\n            style={styles.searchIcon}\n          />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search conversations\"\n            placeholderTextColor={theme.colors.placeholder}\n            value={searchQuery}\n            onChangeText={handleSearch}\n            onFocus={() => setIsSearchFocused(true)}\n            onBlur={() => setIsSearchFocused(false)}\n          />\n          {searchQuery.length > 0 && (\n            <TouchableOpacity \n              style={styles.clearButton}\n              onPress={() => setSearchQuery('')}\n            >\n              <MaterialCommunityIcons \n                name=\"close-circle\" \n                size={16} \n                color={theme.colors.placeholder}\n              />\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n      {filteredConversations.map((conv) => {\n        const otherParticipantName = conv.participant1_id === CURRENT_USER_ID ? \n          conv.participant2_name : conv.participant1_name;\n        \n        if (is_DEBUG) {\n          console.log('MBA98765 Rendering conversation item:', {\n            convId: conv.conversation_id,\n            convIdType: typeof conv.conversation_id,\n            selectedId: selectedConversation,\n            selectedIdType: typeof selectedConversation,\n            isSelected: String(conv.conversation_id) === String(selectedConversation)\n          });\n        }\n        \n        const isSelected = String(conv.conversation_id) === String(selectedConversation);\n          \n        // Get unread count for this conversation from MessageNotificationContext\n        const unreadCount = getConversationUnreadCount ? \n          getConversationUnreadCount(String(conv.conversation_id)) : 0;\n        \n        // Only log if there are unread messages to reduce noise in logs\n        if (unreadCount > 0) {\n          debugLog(`MBA4321: Conversation ${conv.conversation_id} has ${unreadCount} unread messages`);\n        }\n          \n        return (\n          <TouchableOpacity\n            key={conv.conversation_id}\n            style={[\n              styles.conversationItem,\n              isSelected && styles.selectedConversation\n            ]}\n            onPress={() => {\n              if (is_DEBUG) {\n                console.log('MBA98765 Setting selected conversation:', {\n                  id: conv.conversation_id,\n                  type: typeof conv.conversation_id\n                });\n              }\n              \n              // Set the selected conversation\n              setSelectedConversation(conv.conversation_id);\n              \n              // Mark this conversation as read when clicked\n              if (markConversationAsRead && unreadCount > 0) {\n                debugLog(`MBA4321: Explicitly marking ONLY conversation ${conv.conversation_id} as read when clicked`);\n                markConversationAsRead(conv.conversation_id);\n              }\n            }}\n          >\n            <View style={styles.conversationContent}>\n              <View style={styles.conversationHeader}>\n                <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n                  <Text style={styles.conversationName}>\n                    {otherParticipantName || conv.name || conv.other_user_name || 'Unknown'}\n                  </Text>\n                </View>\n                \n                <Text style={styles.conversationTime}>\n                  {new Date(conv.last_message_time).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                </Text>\n              </View>\n              <View style={styles.conversationLastMessageContainer}>\n                <Text \n                  style={[\n                    styles.conversationLastMessage,\n                    isSelected && styles.activeConversationText,\n                    (conv.unread || unreadCount > 0) && !isSelected && styles.unreadMessage\n                  ]} \n                  numberOfLines={1}\n                >\n                  {conv.last_message}\n                </Text>\n                \n                {/* Show unread count badge next to the last message */}\n                {unreadCount > 0 && !isSelected && (\n                  <View style={styles.unreadBadge}>\n                    <Text style={styles.unreadBadgeText}>{unreadCount}</Text>\n                  </View>\n                )}\n              </View>\n              {conv.bookingStatus && (\n                <View style={[\n                  styles.bookingStatusContainer,\n                  styles[`booking${conv.bookingStatus}Status`] || styles.bookingPendingStatus\n                ]}>\n                  <Text style={styles.bookingStatus}>\n                    {conv.bookingStatus}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n\n  // Update message header to include profile photo and edit draft button\n  const renderMessageHeader = () => (\n    <View style={styles.messageHeader}>\n      <View style={styles.messageHeaderContent}>\n        <Image\n          source={selectedConversationData?.profile_photo || require('../../assets/default-profile.png')}\n          style={styles.profilePhoto}\n        />\n        <Text style={styles.messageHeaderName}>\n          {selectedConversationData?.other_user_name}\n        </Text>\n        \n        {hasDraft && draftData?.draft_id && (\n          <TouchableOpacity \n            style={styles.editDraftButton}\n            onPress={() => {\n              if (draftData?.draft_id) {\n                handleOpenExistingDraft(draftData.draft_id);\n              }\n            }}\n          >\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={20} \n              color={theme.colors.primary} \n            />\n            <Text style={styles.editDraftText}>Edit Draft</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n\n  // Extract FlatList into a dedicated component\n  const MessageFlatList = React.memo(({ \n    messages, \n    renderMessage, \n    loadMoreMessages, \n    isLoadingMore, \n    hasMore, \n    forceRerender \n  }) => {\n    return (\n      <FlatList\n        data={messages}\n        renderItem={renderMessage}\n        keyExtractor={item => {\n          // Prioritize message_id if available\n          if (item.message_id) {\n            return `message-${item.message_id}`;\n          }\n          \n          // Create a more robust fallback key using multiple properties\n          const timestamp = item.timestamp || item.created_at || Date.now();\n          const senderHash = item.sent_by_other_user ? 'other' : 'self';\n          const contentHash = item.content ? \n            `${item.content.substring(0, 10)}-${item.content.length}` : \n            'no-content';\n          const typeHash = item.type_of_message || 'normal';\n          \n          // Combine all these factors for a more unique key\n          return `message-${timestamp}-${senderHash}-${typeHash}-${contentHash}`;\n        }}\n        style={styles.messageList}\n        onEndReached={loadMoreMessages}\n        onEndReachedThreshold={0.3} // Reduced threshold to prevent multiple triggers\n        inverted={true}\n        contentContainerStyle={{\n          flexGrow: 1,\n          justifyContent: 'flex-end',\n          paddingTop: 16,\n        }}\n        maintainVisibleContentPosition={{\n          minIndexForVisible: 0,\n          autoscrollToTopThreshold: 10\n        }}\n        ListFooterComponent={isLoadingMore && (\n          <ActivityIndicator \n            size=\"small\" \n            color={theme.colors.primary}\n            style={styles.loadingMore}\n          />\n        )}\n        initialNumToRender={20}\n        maxToRenderPerBatch={10} // Lower value to improve rendering performance\n        windowSize={15} // Optimized window size\n        removeClippedSubviews={false}\n        extraData={forceRerender}\n        getItemLayout={(data, index) => ({\n          length: 100, // Estimated item height\n          offset: 100 * index,\n          index,\n        })}\n      />\n    );\n  });\n\n  // Update renderMessageSection to use our new component\n  const renderMessageSection = () => {\n    if (!selectedConversation) {\n      return null;\n    }\n\n    return (\n      <View style={styles.mainSection}>\n        {screenWidth > 900 && renderMessageHeader()}\n        {/* Messages */}\n        <View style={styles.messageSection}>\n          <View style={styles.messagesContainer}>\n            {isLoadingMessages ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                <Text style={styles.loadingText}>Loading messages...</Text>\n              </View>\n            ) : messages.length === 0 ? (\n              <Text style={styles.emptyText}>\n                No messages yet, start the conversation!\n              </Text>\n            ) : (\n              <MessageFlatList\n                messages={messages}\n                renderMessage={renderMessage}\n                loadMoreMessages={loadMoreMessages}\n                isLoadingMore={isLoadingMore}\n                hasMore={hasMore}\n                forceRerender={forceRerender}\n              />\n            )}\n          </View>\n        </View>\n\n        {/* Input Section */}\n        <View style={styles.inputSection}>\n          <View style={styles.inputContainer}>\n            <View style={styles.attachButtonContainer}>\n              <TouchableOpacity \n                style={styles.attachButton}\n                onPress={() => setShowDropdown(!showDropdown)}\n              >\n                <MaterialCommunityIcons \n                  name={showDropdown ? \"close\" : \"plus\"} \n                  size={24} \n                  color={theme.colors.primary} \n                />\n              </TouchableOpacity>\n              {showDropdown && (\n                <View style={styles.dropdownMenu}>\n                  <TouchableOpacity \n                    style={styles.dropdownItem}\n                    onPress={() => {\n                      handleCreateBooking();\n                      setShowDropdown(false);\n                    }}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"calendar-plus\" \n                      size={20} \n                      color={theme.colors.primary} \n                    />\n                    <Text style={styles.dropdownText}>\n                      {selectedConversationData?.is_professional ? \"Create Booking\" : \"Request Booking\"}\n                    </Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n            </View>\n            {Platform.OS === 'web' ? <WebInput /> : <MobileInput />}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderMobileHeader = () => (\n    <View style={[\n      styles.mobileHeader,\n      { backgroundColor: theme.colors.surfaceContrast }  // Updated to use surfaceContrast\n    ]}>\n      <View style={styles.mobileHeaderContent}>\n        <TouchableOpacity \n          style={styles.backArrow}\n          onPress={() => setSelectedConversation(null)}\n        >\n          <MaterialCommunityIcons \n            name=\"arrow-left\" \n            size={24} \n            color={theme.colors.primary} \n          />\n        </TouchableOpacity>\n        \n        <View style={styles.mobileHeaderNameContainer}>\n          <Text style={styles.mobileHeaderName}>\n            {selectedConversationData?.name || selectedConversationData?.other_user_name}\n          </Text>\n        </View>\n        \n        {/* Add Edit Draft button positioned at the right */}\n        {hasDraft && draftData?.draft_id && (\n          <TouchableOpacity \n            style={[styles.editDraftButton, styles.mobileEditDraftButton, { \n              position: 'absolute', \n              right: 10,\n              top: '50%',\n              transform: [{ translateY: -20 }]  // Adjusted to perfectly align with text\n            }]}\n            onPress={() => {\n              if (draftData?.draft_id) {\n                handleOpenExistingDraft(draftData.draft_id);\n              }\n            }}\n          >\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={16} \n              color={theme.colors.primary} \n            />\n            <View style={{ alignItems: 'center' }}>\n              <Text style={[styles.editDraftText, { fontSize: 12, lineHeight: 14 }]}>Edit</Text>\n              <Text style={[styles.editDraftText, { fontSize: 12, lineHeight: 14 }]}>Draft</Text>\n            </View>\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n\n  // Update renderEmptyState to remove prototype references\n  const renderEmptyState = () => (\n    <View style={{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 20,\n    }}>\n      <MaterialCommunityIcons \n        name=\"message-text-outline\" \n        size={64} \n        color={theme.colors.placeholder}\n        style={{ marginBottom: 16 }}\n      />\n      <Text style={{\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: theme.colors.text,\n        marginBottom: 8,\n        textAlign: 'center'\n      }}>\n        No Messages Yet\n      </Text>\n      <Text style={{\n        fontSize: 16,\n        color: theme.colors.placeholder,\n        marginBottom: 24,\n        textAlign: 'center'\n      }}>\n        {userRole === 'professional' ? \n          'Create services to start getting bookings and messages from owners' :\n          'Search professionals to find services and start messaging'}\n      </Text>\n      <Button\n        mode=\"contained\"\n        onPress={() => navigateToFrom(navigation, userRole === 'professional' ? 'Services' : 'SearchProfessionalListing', 'MessageHistory')}\n        style={{ borderRadius: 8 }}\n      >\n        {userRole === 'professional' ? 'Create Services' : 'Find Professionals'}\n      </Button>\n    </View>\n  );\n\n  const handleEditDraft = async (bookingId) => {\n    debugLog('MBA6428: handleEditDraft called with booking ID:', bookingId);\n    \n    if (!bookingId) {\n      debugLog('MBA6428: Error - No booking ID provided');\n      Alert.alert('Error', 'Missing booking information. Please try again.');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      debugLog('MBA6428: Calling createDraftFromBooking API with booking ID:', bookingId);\n      \n      // Call our new API function to create a draft from the booking\n      const response = await createDraftFromBooking(bookingId);\n      \n      // Check for error in response\n      if (response.error) {\n        debugLog('MBA6428: Error returned from createDraftFromBooking:', response);\n        Alert.alert('Error', response.message || 'Failed to create draft from booking. Please try again.');\n        return;\n      }\n      \n      if (response && response.draft_id) {\n        debugLog('MBA6428: Draft created successfully:', response);\n        \n        // Update local state with the new draft info\n        setHasDraft(true);\n        setDraftData(response.draft_data);\n        \n        // Use the returned draft_id for opening the booking step modal\n        setCurrentBookingId(response.draft_id);\n        \n        // Close any open modal and open the booking step modal\n        setShowDraftConfirmModal(false);\n        \n        // Add a small delay to ensure modal state is updated\n        setTimeout(() => {\n          debugLog('MBA6428: Opening BookingStepModal with draft:', response.draft_id);\n          setShowBookingStepModal(true);\n        }, 100);\n      } else {\n        debugLog('MBA6428: Error - Invalid response from createDraftFromBooking:', response);\n        Alert.alert('Error', 'Failed to create draft from booking. Please try again.');\n      }\n    } catch (error) {\n      debugLog('MBA6428: Error creating draft from booking:', error);\n      Alert.alert('Error', 'Failed to create draft from booking. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // New function for opening an existing draft directly\n  const handleOpenExistingDraft = (draftId) => {\n    debugLog('MBA6428: handleOpenExistingDraft called with draft ID:', draftId);\n    \n    if (!draftId) {\n      debugLog('MBA6428: Error - No draft ID provided');\n      Alert.alert('Error', 'Missing draft information. Please try again.');\n      return;\n    }\n    \n    try {\n      // Set the current booking ID to the provided draft ID\n      setCurrentBookingId(draftId);\n      \n      // Close any open modal and open the booking step modal\n      setShowDraftConfirmModal(false);\n      \n      // Add a small delay to ensure modal state is updated\n      setTimeout(() => {\n        debugLog('MBA6428: Opening BookingStepModal with existing draft:', draftId);\n        setShowBookingStepModal(true);\n      }, 100);\n    } catch (error) {\n      debugLog('MBA6428: Error opening booking modal with draft:', error);\n      Alert.alert('Error', 'Failed to open booking draft. Please try again.');\n    }\n  };\n\n  // Add polling for online status of the other participant\n  useEffect(() => {\n    if (!selectedConversationData || !selectedConversation) {\n      return; // No conversation selected, nothing to poll\n    }\n    \n    const otherUserName = selectedConversationData.other_user_name || 'Unknown user';\n    debugLog(`MBA3210: [OTHER USER STATUS] Setting up polling for \"${otherUserName}\" online status`);\n    \n    \n    return () => {\n      debugLog(`MBA3210: [OTHER USER STATUS] Cleaning up polling interval for \"${otherUserName}\"`);\n      // clearInterval(statusPollingInterval);\n    };\n  }, [selectedConversationData, selectedConversation]);\n\n  useEffect(() => {\n    // Clean up on component unmount\n    return () => {\n      debugLog('MBA3210: MessageHistory unmounting, cleaning up websocket references');\n      // No need to explicitly disconnect here - the hook will handle it\n    };\n  }, []);\n\n  // Replace the existing beforeunload effect that disconnects the WebSocket\n  useEffect(() => {\n    // When a user signs out or navigates away, make sure to disconnect\n    const handleBeforeUnload = () => {\n      debugLog('MBA3210: Page unloading, but keeping websocket alive for session restore');\n      // Deliberately NOT disconnecting websocket on page unload\n      // This was causing message loss when refreshing or switching tabs\n    };\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n\n    return () => {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      }\n    };\n  }, []);\n\n  // Add a useEffect to reset notifications when component mounts\n  useEffect(() => {\n    // Only reset notifications once when the component mounts\n    updateRoute && updateRoute('MessageHistory');\n    \n    // No need to reset all notifications, individual conversations will be marked as read when selected\n    \n    // Return cleanup function\n    return () => {\n      // If needed, add cleanup code here\n    };\n  }, []); // Empty dependency array to run only once on mount\n\n  // Add a useEffect to handle route updates and message notification resets when component mounts\n  useEffect(() => {\n    // Tell the notification context we're on the Messages screen\n    if (updateRoute) {\n      debugLog('MBA4321: Updating route in MessageNotificationContext to MessageHistory');\n      updateRoute('MessageHistory');\n      \n      // Important: DO NOT call resetNotifications() here\n      // That was causing all notifications to be cleared when opening MessageHistory\n      // Instead, we only mark the selected conversation as read when it's selected\n    }\n    \n    // Return cleanup function\n    return () => {\n      debugLog('MBA4321: Cleaning up message notification tracking for MessageHistory');\n    };\n  }, [updateRoute]);\n  \n  // Add an effect to mark the current conversation as read when selected\n  useEffect(() => {\n    if (selectedConversation && markConversationAsRead) {\n      debugLog(`MBA4321: Marking conversation ${selectedConversation} as read`);\n      markConversationAsRead(selectedConversation);\n    }\n  }, [selectedConversation, markConversationAsRead]);\n\n  // When component initializes, ensure we properly handle any route parameters\n  // that specify a conversation to open, but don't reset all notifications\n  useEffect(() => {\n    if (!initialLoadRef.current) return; // Skip if not initial load\n    \n    const initializeData = async () => {\n      try {\n        // Reset states\n        setConversations([]);\n        setMessages([]);\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n        setIsLoadingConversations(true);\n        setIsLoadingMessages(false);\n        setCurrentPage(1);\n        setHasMore(true);\n        lastViewedConversationRef.current = null;\n        \n        // Handle parameters first\n        let initialConversationId = null;\n        \n        // First check URL parameters on web\n        if (Platform.OS === 'web') {\n          const currentUrl = new URL(window.location.href);\n          const urlConversationId = currentUrl.searchParams.get('conversationId');\n          \n          if (urlConversationId) {\n            initialConversationId = urlConversationId;\n            debugLog(`MBA4321: Using conversation ID ${urlConversationId} from URL parameters`);\n          }\n        }\n        \n        // Next check route params if no URL param was found\n        if (!initialConversationId && route.params?.conversationId) {\n          initialConversationId = route.params.conversationId;\n          debugLog(`MBA4321: Using conversation ID ${initialConversationId} from route parameters`);\n          \n          // Check if we should open booking creation (coming from Services)\n          if (route.params.isProfessional === true) {\n            shouldOpenBookingCreationRef.current = true;\n          }\n        }\n        \n        // Fetch conversations\n        const conversationsData = await fetchConversations();\n        \n        // Set initial selected conversation - either from params or first one\n        if (initialConversationId) {\n          setSelectedConversation(initialConversationId);\n          debugLog(`MBA4321: Setting initially selected conversation to ${initialConversationId}`);\n        } else if (Platform.OS === 'web' && screenWidth > 900 && conversationsData?.length > 0) {\n          setSelectedConversation(conversationsData[0].conversation_id);\n          debugLog(`MBA4321: Auto-selecting first conversation ${conversationsData[0].conversation_id} on desktop`);\n        }\n        \n        // Important: We DON'T mark all conversations as read here\n        // Only the selected conversation will be marked as read when it's selected\n      } catch (error) {\n        console.error('Error initializing MessageHistory:', error);\n      } finally {\n        initialLoadRef.current = false;\n        setIsInitialLoad(false);\n      }\n    };\n    \n    initializeData();\n    \n    return () => {\n      debugLog('MBA4321: Cleaning up MessageHistory component');\n      lastViewedConversationRef.current = null;\n      \n      // Clear the global selected conversation tracking\n      if (typeof window !== 'undefined') {\n        window.selectedConversationId = null;\n      }\n      \n      // IMPORTANT: We no longer disconnect the WebSocket here\n      // This allows the connection to persist when navigating away from this screen\n    };\n  }, []);\n  \n  // Fix the beforeunload effect\n  useEffect(() => {\n    // Only run in browser environment\n    if (typeof window !== 'undefined') {\n      const handleBeforeUnload = () => {\n        debugLog('MBA3210: Page unloading, but keeping websocket alive for session restore');\n        // No longer disconnect WebSocket on page unload\n      };\n      \n      window.addEventListener('beforeunload', handleBeforeUnload);\n      \n      return () => {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      };\n    }\n  }, []);\n\n  // Clear processed messages cache when switching conversations\n  useEffect(() => {\n    if (selectedConversation) {\n      // Reset our tracking refs when switching conversations\n      processedPagesRef.current.clear();\n      messageIdsRef.current.clear();\n      isLoadingMoreRef.current = false;\n    }\n  }, [selectedConversation]);\n\n  // Add a loading overlay component at the bottom of the return statement, before any modals\n  return (\n    <SafeAreaView style={[\n      styles.container,\n      screenWidth <= 900 && selectedConversation && styles.mobileContainer,\n      { marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0 },\n    ]}>\n      {isLoadingConversations ? (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={{ marginTop: 16, color: theme.colors.placeholder }}>Loading conversations...</Text>\n        </View>\n      ) : conversations.length > 0 ? (\n        <>\n          <View style={styles.contentContainer}>\n            {screenWidth <= 900 ? (\n              selectedConversation ? (\n                <View style={styles.mobileMessageView}>\n                  {renderMobileHeader()}\n                  {renderMessageSection()}\n                </View>\n              ) : (\n                renderConversationList()\n              )\n            ) : (\n              <>\n                {renderConversationList()}\n                {renderMessageSection()}\n              </>\n            )}\n          </View>\n        </>\n      ) : (\n        renderEmptyState()\n      )}\n      \n      {/* Loading overlay for draft creation */}\n      {isLoading && (\n        <View style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.4)',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        }}>\n          <View style={{\n            backgroundColor: theme.colors.surface,\n            borderRadius: 12,\n            padding: 24,\n            alignItems: 'center',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={{ marginTop: 16, color: theme.colors.text, fontFamily: theme.fonts.regular.fontFamily }}>\n              Creating draft from booking...\n            </Text>\n          </View>\n        </View>\n      )}\n      \n      <RequestBookingModal\n        visible={showRequestModal}\n        onClose={() => setShowRequestModal(false)}\n        onSubmit={handleBookingRequest}\n        conversationId={selectedConversation}\n      />\n\n      <BookingStepModal\n        visible={showBookingStepModal}\n        onClose={() => {\n          setShowBookingStepModal(false);\n          setCurrentBookingId(null);\n          \n          // Refresh message data when modal is closed to get latest draft status\n          if (selectedConversation) {\n            debugLog('MBA6428: Refreshing message data after closing BookingStepModal');\n            fetchMessages(selectedConversation, 1);\n          }\n        }}\n        navigation={navigation}\n        bookingId={currentBookingId}\n        onComplete={(bookingData) => {\n          debugLog('MBA6428: Booking completed:', bookingData);\n          debugLog('MBA6428: New booking message:', bookingData.message);\n          debugLog('MBA6428: Message metadata:', bookingData.message?.metadata);\n          debugLog('MBA6428: Is this an update?', bookingData.isUpdate);\n          \n          // Handle error case\n          if (bookingData.error) {\n            Alert.alert(\n              'Error',\n              bookingData.errorMessage || 'Failed to process booking. Please try again.'\n            );\n            \n            // Close the modal and clean up\n            setShowBookingStepModal(false);\n            setCurrentBookingId(null);\n            \n            // Refresh message data to get latest draft status\n            if (selectedConversation) {\n              debugLog('MBA6428: Refreshing message data after booking error');\n              fetchMessages(selectedConversation, 1);\n            }\n            \n            return;\n          }\n          \n          // Add the new booking message to the messages list\n          if (bookingData.message) {\n            setMessages(prevMessages => [bookingData.message, ...prevMessages]);\n            \n            // Update conversation's last message with appropriate text\n            const lastMessageText = bookingData.isUpdate \n              ? \"Updated Booking Request\" \n              : \"Approval Request\";\n              \n            setConversations(prev => prev.map(conv => \n              conv.conversation_id === selectedConversation \n                ? {\n                    ...conv,\n                    last_message: lastMessageText,\n                    last_message_time: bookingData.message.timestamp\n                  }\n                : conv\n            ));\n          }\n          \n          // Update draft state since the draft is deleted after booking creation\n          setHasDraft(false);\n          setDraftData(null);\n          \n          // Close the modal and clean up\n          setShowBookingStepModal(false);\n          setCurrentBookingId(null);\n          \n          // Refresh message data to get latest draft status\n          if (selectedConversation) {\n            debugLog('MBA6428: Refreshing message data after successful booking completion');\n            fetchMessages(selectedConversation, 1);\n          }\n\n          // Show success message to the user\n          const successMessage = bookingData.isUpdate\n            ? \"Booking update request sent successfully!\"\n            : \"Booking request sent successfully!\";\n          \n          Alert.alert(\"Success\", successMessage);\n        }}\n      />\n\n      <DraftConfirmationModal\n        visible={showDraftConfirmModal}\n        onClose={() => setShowDraftConfirmModal(false)}\n        onContinueExisting={handleContinueExisting}\n        onCreateNew={handleCreateNew}\n      />\n    </SafeAreaView>\n  );\n};\n\nexport default MessageHistory;\n\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Platform, View, TextInput, StyleSheet } from 'react-native';\nimport { STRIPE_PUBLISHABLE_KEY } from '@env';\nimport { AuthContext } from '../context/AuthContext';\n\n// Only import Stripe-related modules if we're not in prototype mode\nlet stripePromise = null;\nlet Elements = null;\nlet useStripe = null;\nlet useElements = null;\nlet CardElement = null;\nlet IbanElement = null;\n\n// Initialize Stripe conditionally\nconst initializeStripe = async () => {\n  if (Platform.OS === 'web') {\n    const stripe = await import('@stripe/stripe-js');\n    const stripeReact = await import('@stripe/react-stripe-js');\n    stripePromise = stripe.loadStripe(STRIPE_PUBLISHABLE_KEY);\n    Elements = stripeReact.Elements;\n    useStripe = stripeReact.useStripe;\n    useElements = stripeReact.useElements;\n    CardElement = stripeReact.CardElement;\n    IbanElement = stripeReact.IbanElement;\n  }\n};\n\n// Only import CardField for native platforms\nlet CardField = null;\nif (Platform.OS !== 'web') {\n  // Dynamic import to avoid web compilation issues\n  import('@stripe/stripe-react-native').then(module => {\n    CardField = module.CardField;\n  });\n}\n\nconst ELEMENT_OPTIONS = {\n  supportedCountries: ['US'],\n  style: {\n    base: {\n      color: '#32325d',\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: 'antialiased',\n      fontSize: '16px',\n      '::placeholder': {\n        color: '#aab7c4'\n      }\n    },\n    invalid: {\n      color: '#fa755a',\n      iconColor: '#fa755a'\n    }\n  }\n};\n\nconst WebPaymentForm = ({ onChange, paymentType }) => {\n  const stripe = useStripe && useStripe();\n  const elements = useElements && useElements();\n  const [bankFields, setBankFields] = useState({\n    accountNumber: '',\n    routingNumber: ''\n  });\n\n  useEffect(() => {\n    if (stripe && elements) {\n      onChange({\n        complete: false,\n        stripe,\n        elements,\n        paymentType\n      });\n    }\n  }, [stripe, elements, paymentType]);\n\n  const handleBankFieldChange = (field, value) => {\n    const updatedFields = {\n      ...bankFields,\n      [field]: value\n    };\n    setBankFields(updatedFields);\n\n    const isAccountNumberValid = updatedFields.accountNumber.length >= 9;\n    const isRoutingNumberValid = updatedFields.routingNumber.length === 9;\n\n    onChange({\n      complete: isAccountNumberValid && isRoutingNumberValid,\n      value: updatedFields,\n      stripe,\n      elements,\n      paymentType\n    });\n  };\n\n  return (\n    <div style={{ padding: '10px 0' }}>\n      {paymentType === 'card' ? (\n        <CardElement \n          options={ELEMENT_OPTIONS}\n          onChange={(event) => onChange({\n            ...event,\n            stripe,\n            elements,\n            paymentType\n          })}\n        />\n      ) : (\n        <div>\n          <div style={{ \n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: '10px' }}>\n            {/* <label>Account Number</label> */}\n            <input\n              className=\"stripe-input\"\n              placeholder=\"Account Number\"\n              value={bankFields.accountNumber}\n              onChange={(e) => handleBankFieldChange('accountNumber', e.target.value)}\n              style={{\n                padding: '10px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '50%',\n                marginTop: '5px'\n              }}\n            />\n          </div>\n          <div style={{ \n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: '10px' }}>\n            {/* <label>Routing Number</label> */}\n            <input\n              className=\"stripe-input\"\n              placeholder=\"Routing Number\"\n              value={bankFields.routingNumber}\n              onChange={(e) => handleBankFieldChange('routingNumber', e.target.value)}\n              style={{\n                padding: '10px',\n                border: '1px solid #ccc',\n                borderRadius: '4px',\n                width: '50%',\n                marginTop: '5px'\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst NativePaymentElement = ({ onChange, paymentType }) => {\n  if (!CardField) {\n    return null;\n  }\n\n  if (paymentType === 'bank') {\n    // For native platforms, use regular inputs for bank accounts\n    return (\n      <View style={[{ marginRight: 20 }]}>\n        <TextInput\n          placeholder=\"Account Number\"\n          onChangeText={(text) => onChange({\n            complete: text.length >= 9,\n            value: { accountNumber: text }\n          })}\n          style={styles.input}\n          keyboardType=\"numeric\"\n        />\n        <TextInput\n          placeholder=\"Routing Number\"\n          onChangeText={(text) => onChange({\n            complete: text.length === 9,\n            value: { routingNumber: text }\n          })}\n          style={styles.input}\n          keyboardType=\"numeric\"\n        />\n      </View>\n    );\n  }\n\n  return (\n    <CardField\n      postalCodeEnabled={false}\n      onCardChange={onChange}\n      style={{\n        width: '100%',\n        height: 50,\n        marginVertical: 10,\n      }}\n    />\n  );\n};\n\nexport const StripePaymentElement = ({ onChange, paymentType }) => {\n\n  useEffect(() => {\n    initializeStripe();\n  }, []);\n\n  if (Platform.OS === 'web' && Elements && stripePromise) {\n    return (\n      <Elements stripe={stripePromise}>\n        <WebPaymentForm onChange={onChange} paymentType={paymentType} />\n      </Elements>\n    );\n  }\n\n  return <NativePaymentElement onChange={onChange} paymentType={paymentType} />;\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 4,\n    marginVertical: 5,\n    paddingHorizontal: 10,\n  },\n  bankInputsContainer: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n  },\n  bankInput: {\n    marginBottom: 16,\n  },\n  container: {\n    padding: 16,\n  },\n}); ","import React, { useState, useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Platform, Dimensions } from 'react-native';\nimport { Card, Button, IconButton, TextInput, SegmentedButtons, Dialog, Portal, ActivityIndicator } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext } from '../context/AuthContext';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport { useNavigation } from '@react-navigation/native'; \nimport CrossPlatformView from '../components/CrossPlatformView';\nimport STRIPE_PUBLISHABLE_KEY from '../../.env';\nimport axios from 'axios';\nimport { createPaymentMethod } from '../utils/StripeService';\nimport { StripeCardElement } from '../components/StripeCardElement';\nimport { CardElement } from '@stripe/react-stripe-js';\nimport { StripePaymentElement } from '../components/StripeCardElement';\n\nconst { width: SCREEN_WIDTH } = Dimensions.get('window');\nconst MAX_WIDTH = 500; // Maximum width for web view\n\nconst PaymentMethods = () => {\n  const navigation = useNavigation();\n  const [paymentMethods, setPaymentMethods] = useState([]);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [confirmPrimaryDialogVisible, setConfirmPrimaryDialogVisible] = useState(false);\n  const [selectedMethod, setSelectedMethod] = useState(null);\n  const [primaryAction, setPrimaryAction] = useState(null); // 'payment' or 'receive'\n  const [newPaymentMethod, setNewPaymentMethod] = useState({\n    type: 'card',\n    cardNumber: '',\n    expiryDate: '',\n    cvc: '',\n    accountNumber: '',\n    routingNumber: '',\n  });\n  const { isApprovedProfessional, is_DEBUG } = useContext(AuthContext);\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [deleteDialogVisible, setDeleteDialogVisible] = useState(false);\n  const [methodToDelete, setMethodToDelete] = useState(null);\n  const [deleteError, setDeleteError] = useState(null);\n  const stripe = Platform.OS !== 'web' ? stripeModule()?.useStripe() : null;\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [cardComplete, setCardComplete] = useState(false);\n  const [cardElement, setCardElement] = useState(null);\n  const [stripeElement, setStripeElement] = useState(null);\n  const [bankAccountComplete, setBankAccountComplete] = useState({\n    accountNumber: false,\n    routingNumber: false\n  });\n  const [verificationModalVisible, setVerificationModalVisible] = useState(false);\n  const [verificationAmounts, setVerificationAmounts] = useState({\n    first: '',\n    second: ''\n  });\n  const [verifyingMethod, setVerifyingMethod] = useState(null);\n  const [modalLoading, setModalLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch payment methods from backend\n    // This is a placeholder. Replace with actual API calls.\n    setPaymentMethods([\n      { \n        id: '1', \n        type: 'bank', \n        accountNumber: '****1234', \n        routingNumber: '123456789', \n        isPrimaryPayment: true,\n        isPrimaryReceive: true,\n        is_verified: true \n      },\n      { \n        id: '2', \n        type: 'card', \n        last4: '4242', \n        brand: 'Visa', \n        isPrimaryPayment: false,\n        isPrimaryReceive: false,\n        is_verified: true \n      },\n      { \n        id: '3', \n        type: 'bank', \n        accountNumber: '****5678', \n        routingNumber: '987654321', \n        isPrimaryPayment: false,\n        isPrimaryReceive: false,\n        is_verified: true \n      }\n    ]);\n  }, []);\n\n  // Check if Stripe is ready\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      console.log('Stripe loading started');\n      setLoading(true);\n      const checkStripeReady = async () => {\n        try {\n          const stripe = await import('@stripe/stripe-js');\n          const stripeReact = await import('@stripe/react-stripe-js');\n          if (stripe && stripeReact) {\n            console.log('Stripe modules loaded');\n            setLoading(false);\n          }\n        } catch (error) {\n          console.error('Error loading Stripe modules:', error);\n          setLoading(false);\n        }\n      };\n      checkStripeReady();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  if (loading) {\n    if (is_DEBUG) {\n      console.log('Loading indicator should be visible');\n    }\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  const renderPaymentMethod = (method) => (\n    <Card key={method.id} style={styles.card}>\n      <Card.Content>\n        <View style={styles.cardContent}>\n          <View style={styles.methodInfo}>\n            <Text style={styles.methodType}>\n              {method.type === 'card' \n                ? `${method.brand} •••• ${method.last4}` \n                : `Bank Account ${method.accountNumber || '•••• undefined'}`}\n            </Text>\n            {method.bankName && <Text style={styles.bankName}>{method.bankName}</Text>}\n            {!method.is_verified && (\n              <Text style={styles.verificationNeeded}>\n                {method.type === 'card' \n                  ? 'Card Verification In Progress'\n                  : 'Bank Account Verification Required'}\n              </Text>\n            )}\n          </View>\n          <View style={styles.cardActions}>\n            {!method.is_verified && method.type === 'bank' && (\n              <Button\n                onPress={() => handleVerifyBankAccount(method)}\n                mode=\"contained\"\n              >\n                Verify\n              </Button>\n            )}\n            {method.is_verified && (\n              <>\n                <IconButton\n                  icon={() => <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />}\n                  onPress={() => handleEditMethod(method)}\n                />\n                <IconButton\n                  icon={() => <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />}\n                  onPress={() => handleDeleteMethod(method)}\n                />\n              </>\n            )}\n          </View>\n        </View>\n        {method.is_verified && (\n          <View style={styles.primaryOptionsContainer}>\n            <View style={styles.checkboxRow}>\n              <IconButton\n                icon={() => (\n                  <MaterialCommunityIcons \n                    name={method.isPrimaryPayment ? \"checkbox-marked\" : \"checkbox-blank-outline\"} \n                    size={24} \n                    color={theme.colors.primary}\n                  />\n                )}\n                onPress={() => handleSetPrimary(method.id, 'payment')}\n                style={styles.checkbox}\n              />\n              <Text style={styles.checkboxLabel}>\n                {method.isPrimaryPayment ? \"Primary Payment Method\" : \"Make Primary Payment Method\"}\n              </Text>\n            </View>\n            {(method.type === 'bank' && isApprovedProfessional) && (\n              <View style={styles.checkboxRow}>\n                <IconButton\n                  icon={() => (\n                    <MaterialCommunityIcons \n                      name={method.isPrimaryReceive ? \"checkbox-marked\" : \"checkbox-blank-outline\"} \n                      size={24} \n                      color={theme.colors.primary}\n                    />\n                  )}\n                  onPress={() => handleSetPrimary(method.id, 'receive')}\n                  style={styles.checkbox}\n                />\n                <Text style={styles.checkboxLabel}>\n                  {method.isPrimaryReceive ? \"Primary Receive Method\" : \"Make Primary Receive Method\"}\n                </Text>\n              </View>\n            )}\n          </View>\n        )}\n      </Card.Content>\n    </Card>\n  );\n\n  const handleAddMethod = async () => {\n    setError(null);\n    setSelectedMethod(null);\n    setNewPaymentMethod({\n      type: 'card',\n      cardNumber: '',\n      expiryDate: '',\n      cvc: '',\n      accountNumber: '',\n      routingNumber: '',\n    });\n    setModalVisible(true);\n    if (is_DEBUG) {\n      console.log('MBA: Setting modalLoading to true');\n    }\n    setModalLoading(true);\n\n    if (Platform.OS === 'web') {\n      if (is_DEBUG) {\n        console.log('MBA: Initializing Stripe elements for web');\n      }\n      if (!cardElement || !cardElement.stripe || !cardElement.elements) {\n        if (is_DEBUG) {\n          console.log('MBA: Stripe elements not initialized, setting up now');\n        }\n        try {\n          const { loadStripe } = await import('@stripe/stripe-js');\n          const stripe = await loadStripe(STRIPE_PUBLISHABLE_KEY);\n          if (stripe) {\n            if (is_DEBUG) {\n              console.log('MBA: Stripe loaded successfully');\n            }\n            const elements = stripe.elements();\n            setCardElement({\n              stripe,\n              elements,\n              complete: false,\n              paymentType: 'card',\n              value: {}\n            });\n          }\n        } catch (error) {\n          if (is_DEBUG) {\n            console.error('MBA: Error initializing Stripe elements:', error);\n          }\n        }\n      } else {\n        if (is_DEBUG) {\n          console.log('MBA: Stripe elements already initialized');\n        }\n      }\n    }\n    // Add a short delay before setting modalLoading to false\n    setTimeout(() => {\n      if (is_DEBUG) {\n        console.log('MBA: Setting modalLoading to false');\n      }\n      setModalLoading(false);\n    }, 500); // 500ms delay\n  };\n\n  const handleEditMethod = (method) => {\n    setError('');\n    setSelectedMethod({ ...method });\n    setNewPaymentMethod({\n      type: method.type,\n      cardNumber: '',\n      expiryDate: '',\n      cvc: '',\n      accountNumber: method.accountNumber || '',\n      routingNumber: method.routingNumber || '',\n    });\n    setModalVisible(true);\n  };\n\n  const handleDeleteMethod = (method) => {\n    setMethodToDelete({ ...method });\n    setDeleteError(null);\n    setDeleteDialogVisible(true);\n  };\n\n  const handleSetPrimary = (id, type) => {\n    setSelectedMethod({ id });\n    setPrimaryAction(type);\n    setConfirmPrimaryDialogVisible(true);\n  };\n\n  const confirmSetPrimary = async () => {\n    setIsConfirming(true);\n    try {\n      // Simulating API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Update the state to reflect the change\n      setPaymentMethods(prevMethods =>\n        prevMethods.map(method => ({\n          ...method,\n          ...(primaryAction === 'payment' && {\n            isPrimaryPayment: method.id === selectedMethod.id\n          }),\n          ...(primaryAction === 'receive' && {\n            isPrimaryReceive: method.id === selectedMethod.id\n          })\n        }))\n      );\n      \n      console.log('Primary method updated:', selectedMethod);\n    } catch (error) {\n      console.error('Failed to update primary method:', error);\n    } finally {\n      setIsConfirming(false);\n      setConfirmPrimaryDialogVisible(false);\n      setPrimaryAction(null);\n    }\n  };\n\n  const confirmDeleteMethod = async () => {\n    if (methodToDelete.isPrimaryPayment && methodToDelete.isPrimaryReceive) {\n      setDeleteError(\"This payment method is set as both your primary payment and receive method. Please select another payment method for both before deleting this one.\");\n      return;\n    }\n    \n    if (methodToDelete.isPrimaryPayment) {\n      setDeleteError(\"This is your primary payment method. Please select another payment method before deleting this one.\");\n      return;\n    }\n\n    if (methodToDelete.isPrimaryReceive) {\n      setDeleteError(\"This is your primary receive method. Please select another receive method before deleting this one.\");\n      return;\n    }\n\n    setIsConfirming(true);\n    try {\n      // Simulating API call\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Update the state to reflect the deletion\n      setPaymentMethods(prevMethods => prevMethods.filter(method => method.id !== methodToDelete.id));\n      \n      console.log('Payment method deleted:', methodToDelete);\n      setDeleteDialogVisible(false);\n    } catch (error) {\n      console.error('Failed to delete payment method:', error);\n      setDeleteError('An error occurred while deleting the payment method. Please try again.');\n    } finally {\n      setIsConfirming(false);\n    }\n  };\n\n  const renderAddMethodModal = () => {\n    if (is_DEBUG) {\n      console.log('MBA: Rendering Add Payment Method Modal');\n      console.log('MBA: modalLoading state:', modalLoading);\n    }\n    return (\n      <Portal>\n        <Dialog visible={modalVisible} onDismiss={() => setModalVisible(false)} style={styles.dialog}>\n          <Dialog.Title>Add Payment Method</Dialog.Title>\n          <IconButton\n            icon={() => <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />}\n            onPress={() => setModalVisible(false)}\n            style={styles.closeButton}\n          />\n          <Dialog.Content>\n            {modalLoading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                <Text style={styles.loadingText}>Loading...</Text>\n              </View>\n            ) : (\n              <>\n                <SegmentedButtons\n                  value={newPaymentMethod.type}\n                  onValueChange={(value) => setNewPaymentMethod({ ...newPaymentMethod, type: value })}\n                  buttons={[\n                    { value: 'card', label: 'Credit Card' },\n                    { value: 'bank', label: 'Bank Account' },\n                  ]}\n                  style={styles.segmentedButtons}\n                />\n                <StripePaymentElement \n                  key={newPaymentMethod.type}\n                  onChange={handlePaymentChange}\n                  paymentType={newPaymentMethod.type}\n                />\n                {error && <Text style={styles.errorText}>{error}</Text>}\n              </>\n            )}\n          </Dialog.Content>\n          <Dialog.Actions>\n            <Button onPress={() => setModalVisible(false)} disabled={loading}>Cancel</Button>\n            <Button \n              onPress={handleSavePaymentMethod} \n              disabled={loading || (\n                (newPaymentMethod.type === 'card' && !cardComplete) ||\n                (newPaymentMethod.type === 'bank' && (!bankAccountComplete.accountNumber || !bankAccountComplete.routingNumber))\n              )}\n              loading={loading}\n            >\n              Save\n            </Button>\n          </Dialog.Actions>\n        </Dialog>\n      </Portal>\n    );\n  };\n\n  const renderConfirmPrimaryDialog = () => (\n    <Portal>\n      <Dialog visible={confirmPrimaryDialogVisible} onDismiss={() => setConfirmPrimaryDialogVisible(false)} style={styles.dialog}>\n        <Dialog.Title>\n          {primaryAction === 'receive' ? 'Confirm Primary Receive Method' : 'Confirm Primary Payment Method'}\n        </Dialog.Title>\n        <IconButton\n          icon={() => <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />}\n          onPress={() => setConfirmPrimaryDialogVisible(false)}\n          style={styles.closeButton}\n        />\n        <Dialog.Content>\n          <Text>\n            {primaryAction === 'receive' \n              ? \"Are you sure you want to make this your primary receive method?\"\n              : \"Are you sure you want to make this your primary payment method?\"\n            }\n          </Text>\n          {isConfirming && (\n            <View style={styles.loadingContainer}>\n              <ActivityIndicator animating={true} color={theme.colors.primary} />\n              <Text style={styles.loadingText}>\n                {primaryAction === 'receive' \n                  ? \"Updating primary receive method...\"\n                  : \"Updating primary payment method...\"\n                }\n              </Text>\n            </View>\n          )}\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => setConfirmPrimaryDialogVisible(false)} disabled={isConfirming}>Cancel</Button>\n          <Button onPress={confirmSetPrimary} disabled={isConfirming}>Confirm</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n\n  const renderDeleteConfirmDialog = () => (\n    <Portal>\n      <Dialog visible={deleteDialogVisible} onDismiss={() => setDeleteDialogVisible(false)} style={styles.dialog}>\n        <Dialog.Title>Confirm Delete Payment Method</Dialog.Title>\n        <IconButton\n          icon={() => <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />}\n          onPress={() => setDeleteDialogVisible(false)}\n          style={styles.closeButton}\n        />\n        <Dialog.Content>\n          {deleteError ? (\n            <Text style={styles.errorText}>{deleteError}</Text>\n          ) : (\n            <Text>Are you sure you want to delete this payment method?</Text>\n          )}\n          {isConfirming && (\n            <View style={styles.loadingContainer}>\n              <ActivityIndicator animating={true} color={theme.colors.primary} />\n              <Text style={styles.loadingText}>Deleting payment method...</Text>\n            </View>\n          )}\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => setDeleteDialogVisible(false)} disabled={isConfirming}>Cancel</Button>\n          <Button onPress={confirmDeleteMethod} disabled={isConfirming || deleteError}>Confirm</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n\n  const handleVerifyBankAccount = (method) => {\n    setVerifyingMethod(method);\n    setVerificationAmounts({ first: '', second: '' });\n    setVerificationModalVisible(true);\n    setError(null);\n  };\n\n  const renderVerificationModal = () => (\n    <Portal>\n      <Dialog visible={verificationModalVisible} onDismiss={() => setVerificationModalVisible(false)} style={styles.dialog}>\n        <Dialog.Title>Verify Bank Account</Dialog.Title>\n        <IconButton\n          icon={() => <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />}\n          onPress={() => setVerificationModalVisible(false)}\n          style={styles.closeButton}\n        />\n        <Dialog.Content>\n          <Text style={styles.verificationText}>\n            A deposit will be made to your bank account in 1-2 business days of adding your bank account. Please enter the two small deposit amounts that were made to your account:\n          </Text>\n          <View style={styles.amountsContainer}>\n            <TextInput\n              label=\"First Amount (cents)\"\n              value={verificationAmounts.first}\n              onChangeText={(text) => setVerificationAmounts(prev => ({ ...prev, first: text }))}\n              keyboardType=\"numeric\"\n              style={styles.amountInput}\n              mode=\"outlined\"\n              placeholder=\"32\"\n            />\n            <TextInput\n              label=\"Second Amount (cents)\"\n              value={verificationAmounts.second}\n              onChangeText={(text) => setVerificationAmounts(prev => ({ ...prev, second: text }))}\n              keyboardType=\"numeric\"\n              style={styles.amountInput}\n              mode=\"outlined\"\n              placeholder=\"45\"\n            />\n          </View>\n          {error && <Text style={styles.errorText}>{error}</Text>}\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={() => setVerificationModalVisible(false)} disabled={loading}>\n            Cancel\n          </Button>\n          <Button\n            onPress={handleVerificationSubmit}\n            loading={loading}\n            disabled={loading || !verificationAmounts.first || !verificationAmounts.second}\n          >\n            Verify\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n\n  const handleVerificationSubmit = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (!verifyingMethod) {\n        throw new Error('Missing required verification data');\n      }\n\n      const firstAmount = parseInt(verificationAmounts.first);\n      const secondAmount = parseInt(verificationAmounts.second);\n\n      if ([firstAmount, secondAmount].some(amount => isNaN(amount) || amount < 1 || amount > 99)) {\n        throw new Error('Please enter valid amounts between 1 and 99 cents');\n      }\n\n      // Simulate backend API call\n      const simulateBackendVerification = () => new Promise((resolve, reject) => {\n        setTimeout(() => {\n          // Simulate success for amounts 32 and 45, fail for others\n          if (firstAmount === 12 && secondAmount === 12) {\n            resolve({ success: true });\n          } else {\n            reject(new Error('The amounts entered do not match our records. Please verify the amounts and try again.'));\n          }\n        }, 1000);\n      });\n\n      const result = await simulateBackendVerification();\n\n      // Update the UI if verification succeeds\n      const updateMethod = (methods) =>\n        methods.map(m =>\n          m.id === verifyingMethod.id\n            ? { ...m, is_verified: true }\n            : m\n        );\n\n      setPaymentMethods(prev => updateMethod(prev));\n\n      setVerificationModalVisible(false);\n      setVerifyingMethod(null);\n      setVerificationAmounts({ first: '', second: '' });\n      setError('Bank account successfully verified!');\n    } catch (err) {\n      console.error('Verification error:', err);\n      setError(err.message || 'Failed to verify bank account. Please check the amounts and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add card verification handler\n  const handleVerifyCard = async (method) => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      // Create a SetupIntent on your backend\n      const setupIntent = await axios.post('/api/create-setup-intent', {\n        payment_method_id: method.id\n      });\n\n      // Confirm the SetupIntent with Stripe\n      const result = await cardElement.stripe.confirmCardSetup(\n        setupIntent.owner_secret,\n        {\n          payment_method: method.id\n        }\n      );\n\n      console.log('Card verification result:', result);\n\n      if (result.error) {\n        throw new Error(result.error.message);\n      }\n\n      // Update the payment method status in your lists\n      const updateMethod = (methods) =>\n        methods.map(m =>\n          m.id === method.id\n            ? { ...m, status: 'verified', verificationNeeded: false }\n            : m\n        );\n\n      setPaymentMethods(prev => updateMethod(prev));\n\n      setError('Card successfully verified!');\n    } catch (err) {\n      console.error('Card verification error:', err);\n      setError(err.message || 'Failed to verify card');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add these functions back after handleAddMethod\n  const handlePaymentChange = (event) => {\n    console.log('Payment change event:', event);\n    if (Platform.OS === 'web') {\n      if (newPaymentMethod.type === 'card') {\n        setCardComplete(event.complete);\n      } else {\n        // For bank accounts, track both fields\n        if (event.value) {\n          setBankAccountComplete(prev => ({\n            ...prev,\n            accountNumber: event.value.accountNumber?.length >= 9 || prev.accountNumber,\n            routingNumber: event.value.routingNumber?.length === 9 || prev.routingNumber\n          }));\n        }\n        setCardComplete(bankAccountComplete.accountNumber && bankAccountComplete.routingNumber);\n      }\n\n      setCardElement({\n        stripe: event.stripe,\n        elements: event.elements,\n        complete: event.complete,\n        paymentType: newPaymentMethod.type,\n        value: event.value\n      });\n\n      // Update newPaymentMethod state if it's a bank account\n      if (newPaymentMethod.type === 'bank' && event.value) {\n        setNewPaymentMethod(prev => ({\n          ...prev,\n          accountNumber: event.value.accountNumber || prev.accountNumber,\n          routingNumber: event.value.routingNumber || prev.routingNumber,\n        }));\n      }\n    } else {\n      setCardComplete(event.complete);\n      setCardElement(event);\n    }\n  };\n\n  const handleSavePaymentMethod = async () => {\n    if (newPaymentMethod.type === 'card') {\n      if (!cardComplete) {\n        setError('Please complete card details');\n        return;\n      }\n    } else if (newPaymentMethod.type === 'bank') {\n      if (!bankAccountComplete.accountNumber || !bankAccountComplete.routingNumber) {\n        setError('Please complete both account number and routing number');\n        return;\n      }\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      if (Platform.OS === 'web') {\n        if (!cardElement.stripe || !cardElement.elements) {\n          throw new Error('Stripe not initialized');\n        }\n\n        let result;\n        if (newPaymentMethod.type === 'card') {\n          // Handle credit card\n          result = await cardElement.stripe.createPaymentMethod({\n            type: 'card',\n            card: cardElement.elements.getElement(CardElement),\n          });\n\n          console.log('Card payment method result:', result);\n\n          if (result.error) {\n            throw new Error(result.error.message);\n          }\n\n          const paymentMethodData = {\n            id: result.paymentMethod.id,\n            type: 'card',\n            last4: result.paymentMethod.card.last4,\n            brand: result.paymentMethod.card.brand,\n            is_verified: false\n          };\n\n          // Only add to payForServicesMethods since cards can't be used for receiving\n          setPaymentMethods(prev => [...prev, paymentMethodData]);\n        } else {\n          // Handle bank account\n          result = await cardElement.stripe.createToken('bank_account', {\n            country: 'US',\n            currency: 'usd',\n            routing_number: cardElement.value.routingNumber,\n            account_number: cardElement.value.accountNumber,\n            account_holder_type: 'individual',\n          });\n          \n          console.log('Bank token creation result:', result);\n\n          if (result.error || !result.token) {\n            throw new Error(result.error?.message || 'Invalid routing number. Please check and try again.');\n          }\n\n          const paymentMethodData = {\n            id: result.token.id,\n            type: 'bank',\n            accountNumber: `****${result.token.bank_account.last4}`,\n            routingNumber: cardElement.value.routingNumber,\n            bankName: result.token.bank_account.bank_name,\n            is_verified: false\n          };\n\n          // Update the appropriate list based on where it was added\n          setPaymentMethods(prev => [...prev, paymentMethodData]);\n\n          setError(\n            'Bank account added but requires verification. Two small deposits will be made to your account in 1-2 business days. ' +\n            'Please check your account and return to verify the amounts.'\n          );\n        }\n\n        setModalVisible(false);\n      } else {\n        // Native platform handling\n        const { paymentMethod, error } = await createPaymentMethod({\n          type: newPaymentMethod.type,\n          card: cardElement,\n          is_receive_payment: selectedMethod?.isPrimaryReceive || false,\n        });\n\n        if (error) {\n          throw new Error(error.message);\n        }\n\n        // Update the appropriate list\n        setPaymentMethods(prev => [...prev, paymentMethod]);\n      }\n\n      setModalVisible(false);\n    } catch (err) {\n      console.error('Payment method error:', err);\n      setError(err.message || 'Failed to save payment method');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader \n        title=\"Payment Methods\" \n        onBackPress={() => navigation.navigate('More')} \n      />\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <View style={styles.sectionContainer}>\n          <View style={styles.headerContainer}>\n            <Text style={styles.sectionTitle}>Payment Methods</Text>\n            <IconButton\n              icon={() => <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />}\n              onPress={() => handleAddMethod()}\n              style={styles.addIconButton}\n            />\n          </View>\n          {paymentMethods.map(method => renderPaymentMethod(method))}\n        </View>\n\n        {renderAddMethodModal()}\n        {renderConfirmPrimaryDialog()}\n        {renderDeleteConfirmDialog()}\n        {renderVerificationModal()}\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    overflow: 'hidden',\n  },\n  contentContainer: {\n    padding: 16,\n    alignItems: 'center',\n    width: '100%',\n  },\n  sectionContainer: {\n    width: '100%',\n    maxWidth: MAX_WIDTH,\n    alignSelf: 'center',\n  },\n  card: {\n    marginBottom: 16,\n    width: '100%',\n    alignSelf: 'center',\n  },\n  addButton: {\n    marginTop: 16,\n    width: '100%',\n  },\n  segmentedButtons: {\n    marginBottom: 16,\n    maxWidth: MAX_WIDTH,\n    alignSelf: 'center',\n    minHeight: 40,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  methodInfo: {\n    flex: 1,\n  },\n  methodType: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  primaryOptionsContainer: {\n    marginTop: 8,\n    gap: 4,\n  },\n  checkboxRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  checkbox: {\n    margin: 0,\n    padding: 0,\n  },\n  checkboxLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginLeft: -8,\n  },\n  cardActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  dialog: {\n    width: Platform.OS === 'web' ? '90%' : '100%',\n    alignSelf: 'center',\n    maxWidth: 500,\n    marginHorizontal: Platform.OS === 'web' ? 'auto' : 16,\n  },\n  input: {\n    marginBottom: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginLeft: 8,\n  },\n  errorText: {\n    color: theme.colors.error,\n    marginBottom: 10,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: 5,\n    top: 5,\n  },\n  loadingOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(255, 255, 255, 0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  bankName: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 4,\n  },\n  verificationNeeded: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 4,\n  },\n  amountsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 16,\n    marginBottom: 16,\n  },\n  amountInput: {\n    width: '48%',\n  },\n  verificationText: {\n    marginBottom: 8,\n    fontSize: 14,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    width: '100%',\n  },\n  addIconButton: {\n    margin: 0,\n  },\n  webContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '85vh',\n    width: '100%',\n    maxWidth: '100%',\n    overflowX: 'hidden',\n  },\n});\n\nexport default PaymentMethods;\n","import React, { useContext, useState, useEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, Text, TouchableOpacity, StatusBar } from 'react-native';\nimport { List, Divider } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Settings = ({ navigation }) => {\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  const settingsItems = [\n    { title: 'Change Password', icon: 'lock-reset', route: 'ChangePassword' },\n    { title: 'Notification Preferences', icon: 'bell-outline', route: 'NotificationPreferences' },\n    { title: 'Privacy Settings', icon: 'shield-account', route: 'PrivacySettings' },\n    { title: 'Language', icon: 'translate', route: 'LanguageSettings' },\n    { title: 'Display & Accessibility', icon: 'palette', route: 'DisplaySettings' },\n    { title: 'Data Usage', icon: 'chart-bar', route: 'DataUsage' },\n    { title: 'About', icon: 'information-outline', route: 'About' },\n  ];\n\n  const renderSettingsItems = () => {\n    return settingsItems.map((item, index) => (\n      <React.Fragment key={index}>\n        <List.Item\n          title={item.title}\n          titleStyle={styles.listItemTitle}\n          left={props => \n            Platform.OS === 'web' \n              ? <MaterialCommunityIcons \n                  name={item.icon} \n                  size={screenWidth <= 900 ? 20 : 24} \n                  color={theme.colors.primary} \n                />\n              : <List.Icon {...props} icon={item.icon} />\n          }\n          onPress={() => navigation.navigate(item.route)}\n          style={[\n            styles.webListItem,\n            { paddingHorizontal: screenWidth <= 900 ? 8 : 16 }\n          ]}\n        />\n        {index < settingsItems.length - 1 && <Divider />}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          {isMobile && (\n            <BackHeader \n              title=\"Settings\" \n              onBackPress={() => navigation.navigate('More')} \n            />\n          )}\n          <View style={styles.webContent}>\n            <List.Section style={styles.listSection}>\n              {renderSettingsItems()}\n            </List.Section>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  listSection: {\n    backgroundColor: theme.colors.surface,\n  },\n  webContent: {\n    width: '100%',\n    maxWidth: screenWidth > 900 ? 800 : 600,\n    alignSelf: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n  },\n  webListItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingVertical: screenWidth <= 900 ? 8 : 12,\n  },\n  listItemTitle: {\n    fontSize: screenWidth <= 900 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  warningContainer: {\n    backgroundColor: '#FFF3CD',\n    padding: theme.spacing.small,\n    marginHorizontal: theme.spacing.small,\n    marginTop: theme.spacing.small,\n    borderRadius: 4,\n  },\n  warningText: {\n    color: '#856404',\n    textAlign: 'center',\n  },\n});\n\nexport default Settings;\n","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { handleBack } from '../components/Navigation';\n\nconst appName = 'Zen Exotics';\n\nconst privacy_policy_info = [\n  {sectionTitle: \"Information We Collect\", \n    paragraph: \"When you use {appName}, we collect several types of information to ensure the best experience for both professionals and pet owners. This includes:\", \n    listItems: {listItem: \"Personal Information: Name, email, phone number, address, and service preferences.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Health Data: Medical information about your pets (e.g., medical history, medications, vaccinations, behavioral traits). By using this service, you consent to our use of this health data as we deem necessary for analytics, research, marketing, or any other purpose related to improving our services.\",\n                listItem: \"Device Data: We collect information about your device, including IP address, browser type, operating system, and other usage data.\",\n                listItem: \"Location Data: With your permission, we collect location information to match professionals and owners more effectively. Disabling location services may limit certain app features.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n    }},\n  {}\n];\n\nconst PrivacyPolicy = () => {\n  const navigation = useNavigation();\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader \n        title=\"Privacy Policy\" \n        onBackPress={() => handleBack(navigation)} \n      />\n      <ScrollView \n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <Text style={styles.title}>Privacy Policy for {appName}</Text>\n        <Text style={styles.date}>Effective Date: 10/21/2024</Text>\n        \n        <Text style={styles.paragraph}>\n          By accessing or using {appName}, you agree to the practices described in this Privacy Policy. If you do not agree with these terms, please discontinue the use of our services immediately.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Information We Collect</Text>\n        <Text style={styles.paragraph}>\n          When you use {appName}, we collect several types of information to ensure the best experience for both professionals and pet owners. This includes:\n        </Text>\n        <Text style={styles.listItem}>• Personal Information: Name, email, phone number, address, and service preferences.</Text>\n        <Text style={styles.listItem}>• Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.</Text>\n        <Text style={styles.listItem}>• Health Data: Medical information about your pets (e.g., medical history, medications, vaccinations, behavioral traits). By using this service, you consent to our use of this health data as we deem necessary for analytics, research, marketing, or any other purpose related to improving our services.</Text>\n        <Text style={styles.listItem}>• Device Data: We collect information about your device, including IP address, browser type, operating system, and other usage data.</Text>\n        <Text style={styles.listItem}>• Location Data: With your permission, we collect location information to match professionals and owners more effectively. Disabling location services may limit certain app features.</Text>\n        <Text style={styles.listItem}>• Cookies and Tracking: We use cookies and tracking technologies to improve user experience and monitor traffic patterns. You can disable cookies in your browser settings.</Text>\n\n        <Text style={styles.sectionTitle}>How We Use Your Data</Text>\n        <Text style={styles.paragraph}>We use the data we collect to:</Text>\n        <Text style={styles.listItem}>• Facilitate bookings and transactions between professionals and owners.</Text>\n        <Text style={styles.listItem}>• Verify professional eligibility through background checks.</Text>\n        <Text style={styles.listItem}>• Provide customer support and resolve disputes between users.</Text>\n        <Text style={styles.listItem}>• Improve app functionality through analytics and feedback.</Text>\n        <Text style={styles.listItem}>• Manage communications between professionals and owners.</Text>\n        <Text style={styles.listItem}>• Use health data for internal analysis and marketing purposes. We retain control over how this data is used.</Text>\n\n        <Text style={styles.sectionTitle}>Sharing of Information</Text>\n        <Text style={styles.paragraph}>We may share your data in the following ways:</Text>\n        <Text style={styles.listItem}>• With Other Users: For bookings, we share relevant information between professionals and pet owners.</Text>\n        <Text style={styles.listItem}>• With Third-Party Providers: Payment processors, analytics providers, and background check services may access limited information to perform their services.</Text>\n        <Text style={styles.listItem}>• Legal and Compliance Purposes: We may disclose information if required by law or to protect the safety and security of our users.</Text>\n        <Text style={styles.listItem}>• Business Transfers: In case of a merger, sale, or acquisition, your data may be transferred to a new owner.</Text>\n        <Text style={styles.listItem}>• Aggregated Data: We may share non-identifiable, aggregated data for research or business purposes.</Text>\n\n        <Text style={styles.sectionTitle}>Your Rights and Choices</Text>\n        <Text style={styles.listItem}>• Account Management: You can update or delete your account information through the app settings.</Text>\n        <Text style={styles.listItem}>• Health Data Access: You may review the health data associated with your pets but agree that we control its use.</Text>\n        <Text style={styles.listItem}>• Location Services: Manage your location preferences through your device settings.</Text>\n        <Text style={styles.listItem}>• Cookie Preferences: You can opt out of personalized ads and tracking through your browser settings.</Text>\n\n        <Text style={styles.sectionTitle}>Security and Data Retention</Text>\n        <Text style={styles.paragraph}>\n          We implement reasonable security measures to protect your data, though no system is entirely secure. We retain your data as long as needed for operational purposes or as required by law.\n        </Text>\n\n        <Text style={styles.sectionTitle}>International Data Transfers</Text>\n        <Text style={styles.paragraph}>\n          Your data may be processed or stored in countries outside your own. By using the app, you agree to these transfers, even if those countries have different data protection laws.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Changes to This Privacy Policy</Text>\n        <Text style={styles.paragraph}>\n          We may update this policy from time to time to reflect changes in our practices or services. We will notify you of significant changes through the app or via email. Continued use of the app constitutes acceptance of the revised policy.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Contact Us</Text>\n        <Text style={styles.paragraph}>\n          If you have questions or concerns about this policy, please contact us:\n        </Text>\n        <Text style={styles.listItem}>Email: zam.hh.llc@gmail.com</Text>\n        <Text style={styles.listItem}>Phone: 7195106341</Text>\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    width: '100%',\n    maxWidth: 800,\n    alignSelf: 'center',\n  },\n  contentContainer: {\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  date: {\n    fontSize: 16,\n    marginBottom: 20,\n    color: theme.colors.text,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  paragraph: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: theme.colors.text,\n  },\n  listItem: {\n    fontSize: 16,\n    marginBottom: 5,\n    marginLeft: 10,\n    color: theme.colors.text,\n  },\n});\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ProfessionalSettings = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Professional Settings</Text>\n      <Text>Manage your professional profile and preferences here.</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: theme.colors.primary,\n  },\n});\n\nexport default ProfessionalSettings;","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { handleBack } from '../components/Navigation';\nimport { AuthContext } from '../context/AuthContext';\n\nconst appName = 'Zen Exotics';\n\nconst TermsOfService = () => {\n  const navigation = useNavigation();\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader \n        title=\"Terms of Service\" \n        onBackPress={() => handleBack(navigation)} \n      />\n      <Text>Terms of Service coming soon. Right now we are in prototype mode, so no data is saved except for email/name if you choose to contact us through this platform, then it is saved for marketing purposes.</Text>\n      \n      <ScrollView \n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <Text style={styles.title}>Terms of Service for {appName}</Text>\n\n        <Text style={styles.date}>Effective Date: 10/21/2024</Text>\n        \n        <Text style={styles.paragraph}>\n          Welcome to {appName}! By using our platform, mobile application, or any services offered through our platform (collectively, \"the Service\"), you agree to be bound by these Terms of Service (\"Terms\"). If you do not agree to these Terms, you must discontinue use of the Service immediately.\n        </Text>\n\n        <Text style={styles.sectionTitle}>1. Description of Service</Text>\n        <Text style={styles.paragraph}>\n          {appName} provides an online platform for connecting pet owners with professionals specializing in exotic animals, as well as dogs and cats. Users can book services, communicate with professionals, and manage pet-related services, including payments and reviews.\n        </Text>\n\n        <Text style={styles.sectionTitle}>2. User Accounts</Text>\n        <Text style={styles.paragraph}>\n          To use certain features of the Service, you must create an account. You are responsible for keeping your account information accurate and secure.\n        </Text>\n        <Text style={styles.listItem}>• Eligibility: Users must be at least 18 years old to create an account.</Text>\n        <Text style={styles.listItem}>• Account Security: You are responsible for all activities under your account. Notify us immediately if you suspect unauthorized use.</Text>\n        <Text style={styles.listItem}>• Account Termination: We reserve the right to suspend or terminate accounts at our sole discretion for violations of these Terms.</Text>\n\n        <Text style={styles.sectionTitle}>3. User Conduct and Acceptable Use</Text>\n        <Text style={styles.paragraph}>By using the Service, you agree:</Text>\n        <Text style={styles.listItem}>• To provide accurate and complete information.</Text>\n        <Text style={styles.listItem}>• Not to engage in fraudulent or unlawful activities.</Text>\n        <Text style={styles.listItem}>• Not to use the Service for spam, harassment, or abusive behavior toward other users.</Text>\n        <Text style={styles.listItem}>• To comply with all local, national, and international laws applicable to your activities on the platform.</Text>\n        <Text style={styles.paragraph}>Failure to comply with these rules may result in account suspension or termination.</Text>\n\n        <Text style={styles.sectionTitle}>4. Pet and Health Information</Text>\n        <Text style={styles.paragraph}>\n          You acknowledge that the Service involves the collection and sharing of health-related data for pets. By using the Service, you agree to provide accurate medical information for your animals and grant us permission to use and share this data as outlined in our Privacy Policy.\n        </Text>\n\n        <Text style={styles.sectionTitle}>5. Payment Terms</Text>\n        <Text style={styles.paragraph}>\n          All transactions between pet owners and professionals must be processed through the platform's payment system, powered by Stripe. You agree to the following:\n        </Text>\n        <Text style={styles.listItem}>• Booking Fees: You will be charged the agreed-upon amount at the time of booking.</Text>\n        <Text style={styles.listItem}>• Cancellations and Refunds: Cancellations are subject to our cancellation policy, which may result in partial or no refunds.</Text>\n        <Text style={styles.listItem}>• Payouts to Professionals: Professionals must provide accurate payment information and comply with local tax regulations.</Text>\n\n        <Text style={styles.sectionTitle}>6. Liability and Disclaimer of Warranties</Text>\n        <Text style={styles.paragraph}>\n          You acknowledge that {appName} does not guarantee the quality or safety of services provided by professionals. Our platform only facilitates connections between users.\n        </Text>\n        <Text style={styles.listItem}>• We are not liable for any injury, damage, or loss caused during the provision of pet care services.</Text>\n        <Text style={styles.listItem}>• The Service is provided \"as is\" and \"as available\" without warranties of any kind, express or implied.</Text>\n\n        <Text style={styles.sectionTitle}>7. Dispute Resolution Between Users</Text>\n        <Text style={styles.paragraph}>\n          Disputes between users (e.g., pet owners and professionals) must first be addressed directly between the parties. If no resolution is reached, {appName} may mediate but is not responsible for the outcome.\n        </Text>\n\n        <Text style={styles.sectionTitle}>8. Limitation of Liability</Text>\n        <Text style={styles.paragraph}>In no event shall {appName}, its affiliates, officers, employees, or partners be liable for:</Text>\n        <Text style={styles.listItem}>• Indirect, incidental, or consequential damages arising from the use of the Service.</Text>\n        <Text style={styles.listItem}>• Any claims exceeding the amount you paid through the Service within the last six months.</Text>\n\n        <Text style={styles.sectionTitle}>9. Termination and Suspension</Text>\n        <Text style={styles.paragraph}>We reserve the right to suspend or terminate access to the Service at any time without notice if:</Text>\n        <Text style={styles.listItem}>• You breach these Terms.</Text>\n        <Text style={styles.listItem}>• Your actions jeopardize the safety or security of the platform or other users.</Text>\n\n        <Text style={styles.sectionTitle}>10. Modifications to the Service and Terms</Text>\n        <Text style={styles.paragraph}>\n          We may modify these Terms or the Service at any time. Significant changes will be communicated via email or in-app notifications. Continued use of the Service after changes constitutes acceptance of the revised Terms.\n        </Text>\n\n        <Text style={styles.sectionTitle}>11. Intellectual Property Rights</Text>\n        <Text style={styles.paragraph}>\n          All content, trademarks, and logos on the platform are owned by or licensed to {appName}. You may not copy, modify, or distribute content without express permission.\n        </Text>\n\n        <Text style={styles.sectionTitle}>12. Governing Law and Dispute Resolution</Text>\n        <Text style={styles.paragraph}>\n          These Terms are governed by the laws of El Paso County, Colorado, without regard to conflict of law principles.\n        </Text>\n        <Text style={styles.listItem}>• Arbitration Clause: All disputes arising under these Terms shall be resolved through binding arbitration in Colorado Springs, Colorado.</Text>\n        <Text style={styles.listItem}>• Class Action Waiver: You agree to waive your right to participate in class action lawsuits.</Text>\n\n        <Text style={styles.sectionTitle}>13. Indemnification</Text>\n        <Text style={styles.paragraph}>\n          You agree to indemnify and hold harmless {appName}, its affiliates, officers, and employees from any claims, damages, or liabilities arising from your use of the Service or breach of these Terms.\n        </Text>\n\n        <Text style={styles.sectionTitle}>14. Third-Party Links and Services</Text>\n        <Text style={styles.paragraph}>\n          The platform may contain links to third-party websites or services. {appName} is not responsible for the content or actions of those third parties.\n        </Text>\n\n        <Text style={styles.sectionTitle}>15. Contact Us</Text>\n        <Text style={styles.paragraph}>\n          If you have questions about these Terms, please contact us:\n        </Text>\n        <Text style={styles.listItem}>Email: zam.hh.llc@gmail.com</Text>\n        <Text style={styles.listItem}>Phone: 7195106341</Text>\n\n        <Text style={styles.sectionTitle}>Acknowledgment of Agreement</Text>\n        <Text style={styles.paragraph}>\n          By accessing or using {appName}, you acknowledge that you have read, understood, and agreed to these Terms of Service.\n        </Text>\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  contentContainer: {\n    paddingBottom: 80,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  date: {\n    fontSize: 16,\n    marginBottom: 20,\n    color: theme.colors.text,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  paragraph: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: theme.colors.text,\n  },\n  listItem: {\n    fontSize: 16,\n    marginBottom: 5,\n    marginLeft: 10,\n    color: theme.colors.text,\n  },\n  testSection: {\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    padding: 10,\n    borderRadius: 4,\n  },\n});\n\nexport default TermsOfService;\n","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst HelpFAQ = () => {\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.title}>Help / FAQ</Text>\n      <Text>Frequently asked questions and help topics go here...</Text>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: theme.colors.primary,\n  },\n});\n\nexport default HelpFAQ;","import React, { useState, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Platform, Dimensions } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext } from '../context/AuthContext';\nimport { useForm, ValidationError } from '@formspree/react';\n\nconst ContactUs = () => {\n  const navigation = useNavigation();\n  const { screenWidth } = useContext(AuthContext);\n  const [state, handleFormspreeSubmit] = useForm(\"mkgobpro\");\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n\n  // Calculate responsive widths\n  const isMobile = screenWidth < 768;\n  const contentWidth = isMobile ? '90%' : '600px';\n  const maxContentWidth = isMobile ? '100%' : '800px';\n\n  const handleSubmit = async () => {\n    if (!name || !email || !message) {\n      setSuccessMessage('Please fill in all fields');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSuccessMessage('');\n    \n    // Use backend API in production mode\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/contact/`, {\n        name,\n        email,\n        message\n      });\n\n      if (response.status === 200) {\n        setSuccessMessage('Your message has been sent successfully!');\n        setName('');\n        setEmail('');\n        setMessage('');\n      } else {\n        throw new Error('Failed to send message');\n      }\n    } catch (error) {\n      setSuccessMessage(error.response?.data?.error || 'Failed to send message. Please try again later.');\n      console.error(error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show success message from either Formspree or backend\n  if (state.succeeded) {\n    return (\n      <CrossPlatformView fullWidthHeader={true} contentWidth={maxContentWidth}>\n        <BackHeader title=\"Contact Us\" onBackPress={() => navigation.navigate('More')} />\n        <View style={styles.container}>\n          <View style={[styles.contentWrapper, { width: contentWidth }]}>\n            <Text style={[styles.title, { color: theme.colors.primary }]}>\n              Thanks for reaching out!\n            </Text>\n            <Text style={styles.successMessage}>\n              We'll get back to you soon.\n            </Text>\n          </View>\n        </View>\n      </CrossPlatformView>\n    );\n  }\n\n  return (\n    <CrossPlatformView \n      fullWidthHeader={true}\n      contentWidth={maxContentWidth}\n    >\n      <BackHeader \n        title=\"Contact Us\" \n        onBackPress={() => navigation.navigate('More')} \n      />\n      <View style={styles.container}>\n        <View style={[styles.contentWrapper, { width: contentWidth }]}>\n          <Text style={styles.title}>Contact Us</Text>\n          <Text style={styles.subtitle}>Get in touch with our support team</Text>\n          \n          <TextInput\n            style={styles.input}\n            placeholder=\"Your Name\"\n            value={name}\n            onChangeText={setName}\n            name=\"name\"\n          />\n          <ValidationError prefix=\"Name\" field=\"name\" errors={state.errors} />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Your Email\"\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            name=\"email\"\n            autoCapitalize=\"none\"\n          />\n          <ValidationError prefix=\"Email\" field=\"email\" errors={state.errors} />\n          \n          <TextInput\n            style={[styles.input, styles.messageInput]}\n            placeholder=\"Your Message\"\n            value={message}\n            onChangeText={setMessage}\n            multiline\n            name=\"message\"\n          />\n          <ValidationError prefix=\"Message\" field=\"message\" errors={state.errors} />\n          \n          {successMessage ? (\n            <Text style={styles.successMessage}>\n              {successMessage}\n            </Text>\n          ) : null}\n          \n          <TouchableOpacity \n            style={[styles.button, isSubmitting && styles.disabledButton]} \n            onPress={handleSubmit}\n            disabled={isSubmitting || (state.submitting)}\n          >\n            <Text style={styles.buttonText}>\n              {isSubmitting || (state.submitting) ? 'Sending...' : 'Send Message'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    paddingVertical: 20,\n  },\n  contentWrapper: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  title: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 15,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  successMessage: {\n    color: theme.colors.success,\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    width: '100%',\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n});\n\nexport default ContactUs;\n","import React, { useState, useRef, useEffect, forwardRef, memo } from 'react';\nimport { View, TextInput, StyleSheet, Platform } from 'react-native';\nimport { IconButton, useTheme } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst SearchBar = forwardRef(({ placeholder, onChangeText, initialValue = '', style }, ref) => {\n  const { colors } = useTheme();\n  const [value, setValue] = useState(initialValue);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChangeText = (text) => {\n    if (text !== value) {\n      setValue(text);\n      onChangeText(text);\n    }\n  };\n\n  return (\n    <View style={[styles.container, style, { backgroundColor: colors.surface }]}>\n      <IconButton\n        icon={() => <MaterialIcons name=\"search\" size={24} color={colors.primary} />}\n        onPress={() => inputRef.current?.focus()}\n      />\n      <TextInput\n        ref={inputRef}\n        style={[styles.input, { color: colors.text }]}\n        placeholder={placeholder}\n        placeholderTextColor={colors.placeholder}\n        value={value}\n        onChangeText={handleChangeText}\n        autoFocus={true}\n        keyboardType=\"default\"\n        returnKeyType=\"search\"\n        blurOnSubmit={false}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 25, // Make it circular\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    paddingVertical: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default memo(SearchBar);\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity, Platform, SafeAreaView, StatusBar, TouchableWithoutFeedback } from 'react-native';\nimport { Chip, Card, Title, Paragraph, Button, Portal, Modal, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport SearchBar from '../components/SearchBar';\nimport { mockOwners } from '../data/mockData';\n\nconst Owners = ({ navigation }) => {\n  const { colors } = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [tempFilters, setTempFilters] = useState([]);\n  const [isFilterModalVisible, setIsFilterModalVisible] = useState(false);\n  const [owners, setOwners] = useState([]);\n\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n\n  const fetchOwners = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setOwners(mockOwners);\n    } catch (error) {\n      console.error('Error fetching owners:', error);\n    }\n  };\n\n  const filters = [\n    { label: 'Dog Sitting', value: 'Dog' },\n    { label: 'Cat Sitting', value: 'Cat' },\n    { label: 'Exotic Sitting', value: 'Exotic' },\n    { label: 'Last Week', value: 'week' },\n    { label: 'Last Month', value: 'month' },\n    { label: 'Last Year', value: 'year' },\n  ];\n\n  const toggleFilter = useCallback((filter) => {\n    setTempFilters(prevFilters =>\n      prevFilters.includes(filter)\n        ? prevFilters.filter(f => f !== filter)\n        : [...prevFilters, filter]\n    );\n  }, []);\n\n  const applyFilters = useCallback(() => {\n    setSelectedFilters(tempFilters);\n    setIsFilterModalVisible(false);\n  }, [tempFilters]);\n\n  const filteredOwners = useMemo(() => {\n    return owners.filter(owner => {\n      const matchesSearch = owner.name.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesFilters = selectedFilters.length === 0 || selectedFilters.every(filter => {\n        if (['Dog', 'Cat', 'Exotic'].includes(filter)) {\n          return owner.pet_types.includes(filter);\n        }\n        const lastBookingDate = new Date(owner.last_booking);\n        const currentDate = new Date();\n        switch (filter) {\n          case 'week':\n            const weekAgo = new Date();\n            weekAgo.setDate(currentDate.getDate() - 7);\n            return lastBookingDate >= weekAgo;\n          case 'month':\n            const monthAgo = new Date();\n            monthAgo.setMonth(currentDate.getMonth() - 1);\n            return lastBookingDate >= monthAgo;\n          case 'year':\n            const yearAgo = new Date();\n            yearAgo.setFullYear(currentDate.getFullYear() - 1);\n            return lastBookingDate >= yearAgo;\n          default:\n            return true;\n        }\n      });\n      return matchesSearch && matchesFilters;\n    });\n  }, [owners, searchQuery, selectedFilters]);\n\n  const renderOwner = useCallback(({ item }) => (\n    <TouchableOpacity onPress={() => navigation.navigate('OwnerHistory', { ownerId: item.id })}>\n      <Card style={styles.ownerCard}>\n        <Card.Content>\n          <Title>{item.name}</Title>\n          <Paragraph>Last booking: {item.last_booking}</Paragraph>\n          <View style={styles.petTypes}>\n            {item.pet_types.map(pet => (\n              <Chip key={pet} style={styles.petChip}>{pet}</Chip>\n            ))}\n          </View>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  ), [navigation]);\n\n  const handleSearchChange = useCallback((query) => {\n    setSearchQuery(query);\n  }, []);\n\n  return Platform.OS === 'web' ? (\n    <View style={styles.container}>\n      <View style={styles.searchAndFilterContainer}>\n        <TouchableWithoutFeedback onPress={() => {}}>\n          <SearchBar\n            placeholder=\"Search owners\"\n            onChangeText={handleSearchChange}\n            initialValue={searchQuery}\n            style={styles.searchBar}\n          />\n        </TouchableWithoutFeedback>\n        <Button \n          mode=\"outlined\" \n          onPress={() => {\n            setTempFilters(selectedFilters);\n            setIsFilterModalVisible(true);\n          }}\n          style={styles.filterButton}\n        >\n          Filters\n        </Button>\n      </View>\n      {filteredOwners.length > 0 ? (\n        <FlatList\n          data={filteredOwners}\n          renderItem={renderOwner}\n          keyExtractor={item => item.id}\n          contentContainerStyle={styles.ownerList}\n          keyboardShouldPersistTaps=\"handled\"\n          removeClippedSubviews={false}\n        />\n      ) : (\n        <View style={styles.noOwnersContainer}>\n          <Paragraph>No owners match your search or filters.</Paragraph>\n        </View>\n      )}\n      <Portal>\n        <Modal visible={isFilterModalVisible} onDismiss={() => setIsFilterModalVisible(false)} contentContainerStyle={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setIsFilterModalVisible(false)} style={styles.closeIcon}>\n            <MaterialCommunityIcons name=\"close\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <Title style={styles.modalTitle}>Filters</Title>\n          <View style={styles.filtersContainer}>\n            {filters.map(filter => (\n              <Chip\n                key={filter.value}\n                style={styles.filterChip}\n                selected={tempFilters.includes(filter.value)}\n                onPress={() => toggleFilter(filter.value)}\n                icon={tempFilters.includes(filter.value) ? ({size, color}) => (\n                  <MaterialCommunityIcons name=\"check\" size={size} color={color} />\n                ) : undefined}\n              >\n                {filter.label}\n              </Chip>\n            ))}\n          </View>\n          <Button mode=\"contained\" onPress={applyFilters} style={styles.applyButton}>\n            Apply Filters\n          </Button>\n        </Modal>\n      </Portal>\n    </View>\n  ) : (\n    <SafeAreaView style={[styles.container, styles.androidSafeArea]}>\n      <View style={styles.searchAndFilterContainer}>\n        <TouchableWithoutFeedback onPress={() => {}}>\n          <SearchBar\n            placeholder=\"Search owners\"\n            onChangeText={handleSearchChange}\n            initialValue={searchQuery}\n            style={styles.searchBar}\n          />\n        </TouchableWithoutFeedback>\n        <Button \n          mode=\"outlined\" \n          onPress={() => {\n            setTempFilters(selectedFilters);\n            setIsFilterModalVisible(true);\n          }}\n          style={styles.filterButton}\n        >\n          Filters\n        </Button>\n      </View>\n      {filteredOwners.length > 0 ? (\n        <FlatList\n          data={filteredOwners}\n          renderItem={renderOwner}\n          keyExtractor={item => item.id}\n          contentContainerStyle={styles.ownerList}\n          keyboardShouldPersistTaps=\"handled\"\n          removeClippedSubviews={false}\n        />\n      ) : (\n        <View style={styles.noOwnersContainer}>\n          <Paragraph>No owners match your search or filters.</Paragraph>\n        </View>\n      )}\n      <Portal>\n        <Modal visible={isFilterModalVisible} onDismiss={() => setIsFilterModalVisible(false)} contentContainerStyle={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setIsFilterModalVisible(false)} style={styles.closeIcon}>\n            <MaterialCommunityIcons name=\"close\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <Title style={styles.modalTitle}>Filters</Title>\n          <View style={styles.filtersContainer}>\n            {filters.map(filter => (\n              <Chip\n                key={filter.value}\n                style={styles.filterChip}\n                selected={tempFilters.includes(filter.value)}\n                onPress={() => toggleFilter(filter.value)}\n                icon={tempFilters.includes(filter.value) ? ({size, color}) => (\n                  <MaterialCommunityIcons name=\"check\" size={size} color={color} />\n                ) : undefined}\n              >\n                {filter.label}\n              </Chip>\n            ))}\n          </View>\n          <Button mode=\"contained\" onPress={applyFilters} style={styles.applyButton}>\n            Apply Filters\n          </Button>\n        </Modal>\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  androidSafeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  searchAndFilterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  searchBar: {\n    flex: 1,\n    marginRight: 8,\n    marginLeft: Platform.OS === 'web' ? 0 : 8,\n  },\n  filterButton: {\n    minWidth: 80,\n    marginRight: Platform.OS === 'web' ? 0 : 8,\n  },\n  ownerList: {\n    padding: 16,\n  },\n  ownerCard: {\n    marginBottom: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  petTypes: {\n    flexDirection: 'row',\n    marginTop: 8,\n  },\n  petChip: {\n    marginRight: 8,\n  },\n  noOwnersContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 5,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '90%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n  },\n  filtersContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 20,\n  },\n  filterChip: {\n    margin: 4,\n  },\n  applyButton: {\n    marginTop: 10,\n  },\n  closeButton: {\n    marginTop: 10,\n    alignSelf: 'flex-end',\n  },\n  closeIcon: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    zIndex: 1,\n  },\n});\n\nexport default Owners;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Switch,\n} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from './DatePicker';\nimport { theme } from '../styles/theme';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nexport const CostCalculationModal = ({\n  visible,\n  onClose,\n  serviceName,\n  additionalRates = [],\n  professionalName = \"Professional\",\n  onContactPress,\n}) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [additionalAnimals, setAdditionalAnimals] = useState(0);\n  const [isHolidayRate, setIsHolidayRate] = useState(false);\n  const [selectedRates, setSelectedRates] = useState({});\n  const [totalCost, setTotalCost] = useState(0);\n  const [platformFees, setPlatformFees] = useState(0);\n\n  const BASE_RATE = 20;\n  const ADDITIONAL_ANIMAL_RATE = 10;\n  const HOLIDAY_RATE = 40;\n  const PLATFORM_FEE_PERCENTAGE = 0.10;\n\n  const calculateTotalCost = () => {\n    // Start with either holiday rate or base rate\n    let subtotal = isHolidayRate ? HOLIDAY_RATE : BASE_RATE;\n    \n    // Add additional animal costs\n    subtotal += additionalAnimals * ADDITIONAL_ANIMAL_RATE;\n    \n    // Add any selected additional rates\n    Object.entries(selectedRates).forEach(([_, rate]) => {\n      if (rate.selected) {\n        subtotal += rate.amount;\n      }\n    });\n\n    setTotalCost(subtotal);\n    setPlatformFees(subtotal * PLATFORM_FEE_PERCENTAGE);\n  };\n\n  useEffect(() => {\n    // Initialize selectedRates object\n    const ratesObj = {};\n    additionalRates.forEach(rate => {\n      ratesObj[rate.title] = { ...rate, selected: false };\n    });\n    setSelectedRates(ratesObj);\n  }, [additionalRates]);\n\n  useEffect(() => {\n    calculateTotalCost();\n  }, [additionalAnimals, isHolidayRate, selectedRates]);\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"slide\"\n      transparent={true}\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <TouchableOpacity \n            style={styles.closeIcon} \n            onPress={onClose}\n          >\n            <MaterialIcons name=\"close\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n\n          <Text style={styles.modalTitle}>{serviceName}</Text>\n          \n          <ScrollView \n            style={styles.scrollContent} \n            showsVerticalScrollIndicator={true}\n            persistentScrollbar={true}\n          >\n            {/* Date Selection\n            <View style={styles.dateSection}>\n              <View style={styles.dateColumn}>\n                <Text style={styles.dateLabel}>Start Date:</Text>\n                <DatePicker\n                  value={startDate}\n                  mode=\"date\"\n                  onChange={(event, date) => {\n                    if (date) setStartDate(date);\n                  }}\n                />\n              </View>\n              \n              <View style={styles.dateColumn}>\n                <Text style={styles.dateLabel}>End Date:</Text>\n                <DatePicker\n                  value={endDate}\n                  mode=\"date\"\n                  onChange={(event, date) => {\n                    if (date) setEndDate(date);\n                  }}\n                />\n              </View>\n            </View> */}\n\n            {/* Base Rate */}\n            <View style={styles.rateItem}>\n              <Text>Base Rate</Text>\n              <Text>${BASE_RATE}</Text>\n            </View>\n\n            {/* Additional Animals */}\n            <View style={styles.rateItem}>\n              <Text>Additional Animals (${ADDITIONAL_ANIMAL_RATE} each)</Text>\n              <View style={styles.counterContainer}>\n                <TouchableOpacity \n                  onPress={() => setAdditionalAnimals(Math.max(0, additionalAnimals - 1))}\n                  style={styles.counterButton}\n                >\n                  <MaterialIcons name=\"remove\" size={24} color={theme.colors.primary} />\n                </TouchableOpacity>\n                <Text style={styles.counterText}>{additionalAnimals}</Text>\n                <TouchableOpacity \n                  onPress={() => setAdditionalAnimals(additionalAnimals + 1)}\n                  style={styles.counterButton}\n                >\n                  <MaterialIcons name=\"add\" size={24} color={theme.colors.primary} />\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* Holiday Rate */}\n            <View style={styles.rateItem}>\n              <Text>Holiday Rate (${HOLIDAY_RATE})</Text>\n              <Switch\n                value={isHolidayRate}\n                onValueChange={setIsHolidayRate}\n                trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n              />\n            </View>\n\n            {/* Additional Rates */}\n            {Object.entries(selectedRates).map(([title, rate]) => (\n              <View key={title} style={styles.rateItem}>\n                <Text>{title} (${rate.amount})</Text>\n                <Switch\n                  value={rate.selected}\n                  onValueChange={(value) => {\n                    setSelectedRates({\n                      ...selectedRates,\n                      [title]: { ...rate, selected: value },\n                    });\n                  }}\n                  trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n                />\n              </View>\n            ))}\n\n            {/* Total and Fees */}\n            <View style={styles.totalSection}>\n              <View style={styles.totalItem}>\n                <Text style={styles.totalLabel}>Subtotal:</Text>\n                <Text style={styles.totalAmount}>${totalCost}</Text>\n              </View>\n              <View style={styles.totalItem}>\n                <Text style={styles.totalLabel}>Service Fees (10%):</Text>\n                <Text style={styles.totalAmount}>${platformFees.toFixed(2)}</Text>\n              </View>\n              <View style={[styles.totalItem, styles.finalTotal]}>\n                <Text style={[styles.totalLabel, styles.finalTotalText]}>Total Cost:</Text>\n                <Text style={[styles.totalAmount, styles.finalTotalText]}>${(totalCost + platformFees).toFixed(2)}</Text>\n              </View>\n            </View>\n          </ScrollView>\n\n          <TouchableOpacity \n            style={styles.contactButton} \n            onPress={onContactPress}\n          >\n            <Text style={styles.contactButtonText}>Contact {professionalName}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    paddingRight: 15,\n    width: '90%',\n    maxHeight: '43%',\n    maxWidth: 400,\n  },\n  scrollContent: {\n    flexGrow: 0,\n    marginBottom: 10,\n    paddingRight: 12,\n    marginRight: -7,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center',\n    marginTop: 5,\n    paddingHorizontal: 30,\n  },\n  dateSection: {\n    marginBottom: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 16,\n  },\n  dateColumn: {\n    flex: 1,\n  },\n  dateLabel: {\n    marginBottom: 8,\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.text,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  counterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  counterButton: {\n    padding: 5,\n  },\n  counterText: {\n    marginHorizontal: 10,\n    fontSize: theme.fontSizes.medium,\n  },\n  totalSection: {\n    marginTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 15,\n  },\n  totalItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  finalTotal: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 10,\n    marginTop: 5,\n  },\n  totalLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n  totalAmount: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  finalTotalText: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  closeButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  closeButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n  closeIcon: {\n    position: 'absolute',\n    right: 15,\n    top: 15,\n    zIndex: 1,\n    padding: 5,\n  },\n  contactButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  contactButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { CostCalculationModal } from './CostCalculationModal';\nimport { mockConversations, mockMessages, createNewConversation } from '../data/mockData';\n\nexport const ServiceCard = ({ \n  service, \n  onHeartPress, \n  isFavorite, \n  professionalName,\n  professionalId,\n  navigation\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleContactPress = () => {\n    // Check if conversation already exists\n    const existingConversation = mockConversations.find(\n      conv => conv.professionalId === professionalId\n    );\n\n    if (existingConversation) {\n      navigation.replace('MessageHistory', {\n        selectedConversation: existingConversation.id,\n        professionalName: professionalName,\n        professionalId: professionalId\n      });\n    } else {\n      // Create new conversation using the helper function\n      const newConversation = createNewConversation(\n        professionalId,\n        professionalName,\n        'current_user_id', // Replace with actual current user ID\n        'Me' // Current user name\n      );\n\n      // Add new conversation to mockConversations\n      mockConversations.unshift(newConversation);\n\n      // Initialize empty messages array for this conversation\n      mockMessages[newConversation.id] = [];\n\n      // Navigate directly to MessageHistory\n      navigation.replace('MessageHistory', {\n        selectedConversation: newConversation.id,\n        professionalName: professionalName,\n        professionalId: professionalId\n      });\n    }\n    setIsModalVisible(false);\n  };\n\n  return (\n    <View style={styles.serviceCard}>\n      {/* <TouchableOpacity \n        style={styles.heartButton}\n        onPress={() => onHeartPress(service.id)}\n      >\n        <MaterialIcons \n          name={isFavorite ? \"favorite\" : \"favorite-border\"} \n          size={24} \n          color={theme.colors.primary} \n        />\n      </TouchableOpacity> */}\n      \n      <View style={styles.contentContainer}>\n        <MaterialCommunityIcons name={service.icon} size={30} color={theme.colors.primary} />\n        <Text numberOfLines={2} style={styles.serviceName}>{service.name}</Text>\n        <Text style={styles.startingPrice}>Starting at ${service.startingPrice}</Text>\n        <View style={styles.animalTypeContainer}>\n          {service.animalTypes.map((type, index) => (\n            <Text key={index} style={styles.animalType}>{type}</Text>\n          ))}\n        </View>\n      </View>\n\n      <TouchableOpacity \n        style={styles.calculateButton}\n        onPress={() => setIsModalVisible(true)}\n      >\n        <Text style={styles.calculateButtonText}>Calculate Cost</Text>\n      </TouchableOpacity>\n\n      <CostCalculationModal\n        visible={isModalVisible}\n        onClose={() => setIsModalVisible(false)}\n        serviceName={service.name}\n        additionalRates={service.additionalRates || []}\n        professionalName={professionalName}\n        professionalId={professionalId}\n        onContactPress={handleContactPress}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  serviceCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    marginRight: 12,\n    width: 280,\n    height: 220,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    position: 'relative',\n    justifyContent: 'space-between',\n  },\n  heartButton: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n    zIndex: 1,\n  },\n  serviceName: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: '600',\n    marginTop: 8,\n    marginBottom: 6,\n    fontFamily: theme.fonts.header.fontFamily,\n    flexShrink: 1,\n  },\n  startingPrice: {\n    fontSize: theme.fontSizes.medium + 2,\n    color: theme.colors.secondary,\n    marginBottom: 6,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  animalTypeContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 4,\n    marginBottom: 8,\n  },\n  animalType: {\n    fontSize: theme.fontSizes.small + 2,\n    color: theme.colors.secondary,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calculateButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 'auto',\n  },\n  calculateButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n});\n\nexport default ServiceCard;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity, Platform, useWindowDimensions, Modal } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { Calendar } from 'react-native-calendars';\nimport { mockPets } from '../data/mockData';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SCREEN_WIDTH } from '../context/AuthContext';\nimport ServiceCard from '../components/ServiceCard';\nimport { mockServicesForCards } from '../data/mockData';\nimport { mockConversations, mockMessages } from '../data/mockData';\n// Conditionally import WebMap component\nconst WebMap = Platform.OS === 'web' ? require('react-leaflet').MapContainer : null;\n\n// Mock API function to fetch profile data\nconst fetchProfileData = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        // profilePhoto: 'https://example.com/profile-photo.jpg',\n        bio: \"Hi! I'm an experienced pet professional who loves all animals. I have 5 years of experience caring for dogs, cats, and exotic pets.\",\n        petPhotos: [\n          // 'https://example.com/pet-photo-1.jpg',\n          // 'https://example.com/pet-photo-2.jpg',\n        ],\n        services: ['Dog Boarding', 'Dog Walking', 'Drop-In Visits', 'House Sitting'],\n        rates: {\n          boarding: '35',\n          daycare: '25',\n          houseSitting: '40',\n          dropInVisits: '20',\n          dogWalking: '15'\n        },\n        name: 'John Doe',\n        location: 'New York, NY'\n      });\n    }, 1000);\n  });\n};\n\nconst mockReviews = [\n  {\n    id: 1,\n    name: 'Noah M.',\n    service: 'Fish Tank Cleaning',\n    date: 'Dec 02, 2024',\n    rating: 5,\n    text: 'Dina was fantastic with our dog! Sent lots of photos and clearly made sure she was comfortable. Will definitely use again!',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 2,\n    name: 'Kaily J.',\n    service: 'Ferrier',\n    date: 'Nov 26, 2024',\n    rating: 4,\n    text: 'Dina always takes such good care of Elijah. He was having tummy problems today and she kept me updated all day on how he was doing.',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 3,\n    name: 'Nadia U.',\n    service: 'Reptile Boarding & Habitat Maintenance',\n    date: 'Nov 19, 2024',\n    rating: 5,\n    text: 'She took such great care of our puppy! Sent pictures and videos the whole time, her backyard was super nice and clean ❤️ my puppy was definitely in great hands! Bonus her dogs were so sweet with our puppy.',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 4,\n    name: 'Vanessa G.',\n    service: 'Bird Feeding',\n    date: 'Nov 19, 2024',\n    rating: 5,\n    text: 'Dina was great! She communicated through the whole stay and sent plenty of videos and photos. 10/10',\n    photo: 'https://via.placeholder.com/50'\n  }\n];\n\nconst useResponsiveLayout = () => {\n  const { width } = useWindowDimensions();\n  const [isWideScreen, setIsWideScreen] = useState(true);\n\n  useEffect(() => {\n    setIsWideScreen(Platform.OS === 'web' && width >= 900);\n  }, [width]);\n\n  return isWideScreen;\n};\n\n// Move this outside the component\nif (Platform.OS === 'web') {\n  const style = document.createElement('style');\n  style.textContent = `\n    .services-scroll::-webkit-scrollbar {\n      -webkit-appearance: none;\n    }\n\n    .services-scroll::-webkit-scrollbar:vertical {\n      width: 11px;\n    }\n\n    .services-scroll::-webkit-scrollbar:horizontal {\n      height: 11px;\n    }\n\n    .services-scroll::-webkit-scrollbar-thumb {\n      border-radius: 8px;\n      border: 2px solid white;\n      background-color: rgba(0, 0, 0, .5);\n    }\n  `;\n  document.head.appendChild(style);\n}\n\nconst ProfessionalProfile = ({ route, navigation }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const [professionalData, setProfessionalData] = useState(null);\n  const [canGoBack, setCanGoBack] = useState(false);\n  const [bioModalVisible, setBioModalVisible] = useState(false);\n  const [reviewsModalVisible, setReviewsModalVisible] = useState(false);\n  const [specialistModalVisible, setSpecialistModalVisible] = useState(false);\n  const [favoriteServices, setFavoriteServices] = useState([]);\n  const [servicesModalVisible, setServicesModalVisible] = useState(false);\n  const isWideScreen = useResponsiveLayout();\n  const dynamicStyles = {\n    profileSection: {\n      backgroundColor: theme.colors.surface,\n      borderRadius: 12,\n      padding: 16,\n      marginBottom: 16,\n      alignItems: 'center',\n      width: '100%',\n      display: windowWidth >= 600 ? 'flex' : 'block',\n    },\n    profileSectionMobile: {\n      backgroundColor: theme.colors.surface,\n      borderRadius: 12,\n      padding: 16,\n      marginBottom: 16,\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: 500,\n      alignSelf: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    servicesBox: {\n      backgroundColor: theme.colors.surface,\n      padding: 24,\n      paddingTop: 0,\n      borderRadius: 12,\n      marginTop: 24,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 4,\n      elevation: 3,\n      width: '100%',\n      maxWidth: Platform.OS === 'web' ? 600 : undefined,\n      alignSelf: 'center',\n    },\n  };\n\n  useEffect(() => {\n    // Check if we can go back and if SearchProfessionalsListing exists in history\n    const state = navigation.getState();\n    const hasHistory = state.routes.some(route => route.name === 'SearchProfessionalsListing');\n    setCanGoBack(navigation.canGoBack() && hasHistory);\n  }, [navigation]);\n\n  const handleBack = () => {\n    if (Platform.OS === 'web') {\n      sessionStorage.removeItem('currentProfessional');\n      // Always use navigate to ensure consistent behavior\n      navigation.navigate('SearchProfessionalsListing');\n    } else {\n      navigation.goBack();\n    }\n  };\n\n  // Handle browser back button\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const handlePopState = () => {\n        handleBack();\n      };\n\n      window.addEventListener('popstate', handlePopState);\n      return () => window.removeEventListener('popstate', handlePopState);\n    }\n  }, []);\n\n  useEffect(() => {\n    const loadProfessionalData = async () => {\n      if (route?.params?.professional) {\n        setProfessionalData(route.params.professional);\n      } else if (Platform.OS === 'web') {\n        // Try to get professional data from sessionStorage on web reload\n        const storedProfessional = sessionStorage.getItem('currentProfessional');\n        if (storedProfessional) {\n          setProfessionalData(JSON.parse(storedProfessional));\n        } else {\n          // If no data, redirect back to search\n          navigation.replace('SearchProfessionalsListing');\n        }\n      }\n    };\n\n    loadProfessionalData();\n  }, [route?.params?.professional]);\n\n  // Store professional data in AsyncStorage for mobile\n  useEffect(() => {\n    if (Platform.OS !== 'web' && professionalData) {\n      AsyncStorage.setItem('currentProfessional', JSON.stringify(professionalData));\n    }\n  }, [professionalData]);\n\n  const getContentWidth = () => {\n    if (Platform.OS === 'web') {\n      return Math.min(1000, windowWidth - 32); // 32px for padding\n    }\n    return windowWidth - 32; // 16px padding on each side\n  };\n\n  const toggleFavorite = (serviceId) => {\n    setFavoriteServices(prev => \n      prev.includes(serviceId) \n        ? prev.filter(id => id !== serviceId)\n        : [...prev, serviceId]\n    );\n  };\n\n  const renderServices = () => (\n    <View style={styles.servicesSection}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>Services</Text>\n        <TouchableOpacity \n          style={styles.seeAllButton}\n          onPress={() => setServicesModalVisible(true)}\n        >\n          <Text style={styles.seeAllButtonText}>See All</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.servicesWrapper}>\n        <ScrollView \n          horizontal\n          showsHorizontalScrollIndicator={true}\n          style={[\n            styles.servicesScroll,\n            Platform.OS === 'web' && { \n              className: 'services-scroll',\n              overflowX: 'scroll'\n            }\n          ]}\n          contentContainerStyle={styles.servicesScrollContent}\n          persistentScrollbar={true}\n        >\n          {mockServicesForCards.slice(0, 5).map(service => (\n            <ServiceCard \n              key={service.id}\n              service={service}\n              onHeartPress={toggleFavorite}\n              isFavorite={favoriteServices.includes(service.id)}\n              professionalName={professionalData.name}\n              professionalId={professionalData.id}\n              navigation={navigation}\n            />\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n\n  if (!professionalData) {\n    return (\n      <CrossPlatformView fullWidthHeader={true}>\n        <BackHeader \n          title=\"Professional Profile\" \n          onBackPress={handleBack}\n        />\n        <View style={styles.centered}>\n          <Text>Loading...</Text>\n        </View>\n      </CrossPlatformView>\n    );\n  }\n\n  const renderProfilePhoto = () => {\n    if (professionalData.profilePicture) {\n      return <Image source={{ uri: professionalData.profilePicture }} style={styles.profilePhoto} />;\n    }\n    return (\n      <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n        <MaterialCommunityIcons name=\"account\" size={80} color={theme.colors.primary} />\n      </View>\n    );\n  };\n\n  const renderSpecialistExperience = () => (\n    <View style={styles.specialistSection}>\n      <Text style={styles.sectionTitle}>Specialist Experience</Text>\n      <TruncatedText text={professionalData?.bio || ''} />\n    </View>\n  );\n\n  const renderRatingStars = () => (\n    <View style={styles.ratingContainer}>\n      <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n      <Text style={styles.rating}>{professionalData.reviews}</Text>\n      <Text style={[styles.reviewCount, { marginLeft: 12 }]}>({professionalData.reviewCount || 50} reviews)</Text>\n    </View>\n  );\n\n  // Add new component for truncated text with Read More\n  const TruncatedText = ({ text, maxLines = 3 }) => (\n    <View>\n      <Text \n        numberOfLines={maxLines} \n        style={styles.specialistText}\n      >\n        {text}\n      </Text>\n      <TouchableOpacity \n        style={styles.readMoreButton}\n        onPress={() => setSpecialistModalVisible(true)}\n      >\n        <Text style={styles.readMoreText}>Read more</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderMap = () => {\n    if (Platform.OS === 'web' && WebMap) {\n      const { MapContainer, TileLayer, Marker } = require('react-leaflet');\n      return (\n        <View style={styles.mapContainer}>\n          <MapContainer\n            center={[38.8339, -104.8214]} // Default coordinates\n            zoom={13}\n            style={{ height: 400, width: '100%' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <Marker position={[38.8339, -104.8214]} />\n          </MapContainer>\n        </View>\n      );\n    }\n    // For mobile, return null or a placeholder\n    return null;\n  };\n\n  const renderPets = () => {\n    if (!mockPets || mockPets.length === 0) return null;\n    \n    return (\n      <View style={styles.petsSection}>\n        <Text style={styles.sectionTitle}>Pets</Text>\n        {mockPets.map((pet, index) => (\n          <View key={pet.id} style={styles.petItem}>\n            <View style={styles.petPhoto}>\n              <MaterialCommunityIcons \n                name={pet.animal_type.toLowerCase() === 'dog' ? 'dog' : \n                      pet.animal_type.toLowerCase() === 'cat' ? 'cat' : 'snake'} \n                size={30} \n                color={theme.colors.primary} \n              />\n            </View>\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petBreed}>{pet.breed}</Text>\n              <Text style={styles.petDetails}>\n                {`${pet.weight} lbs, ${pet.age.years} years${pet.age.months ? ` ${pet.age.months} months` : ''}`}\n              </Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const styles2 = StyleSheet.create({\n    modalContent: {\n      backgroundColor: theme.colors.background,\n      padding: 24,\n      borderRadius: 12,\n      width: Platform.OS === 'web' ? \n        (windowWidth <= 650 ? '90%' : '60%') : \n        '90%',\n      maxWidth: 800,\n      maxHeight: '90%',\n    },\n  });\n\n  // Create services array from professionalData\n  const services = [\n    { name: 'Boarding', price: \"25\" },\n    { name: 'Doggy Day Care', price: \"30\" },\n    { name: 'House Sitting', price: \"40\" },\n    { name: 'Drop-In Visits', price: \"35\" },\n    { name: 'Dog Walking', price: \"45\" }\n  ];\n\n  const HomeFeature = ({ text }) => (\n    <View style={styles.featureBubble}>\n      <Text style={styles.featureText}>{text}</Text>\n    </View>\n  );\n\n  const renderReviews = () => (\n    <View style={styles.reviewsSection}>\n      <Text style={styles.sectionTitle}>Reviews</Text>\n      <View style={styles.reviewsGrid}>\n        {mockReviews.slice(0, 4).map(renderReview)}\n      </View>\n      <TouchableOpacity \n        style={styles.readMoreButton}\n        onPress={() => setReviewsModalVisible(true)}\n      >\n        <Text style={styles.readMoreText}>Read more reviews</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderReview = (review) => (\n    <View key={review.id} style={styles.reviewItem}>\n      <View style={styles.reviewHeader}>\n        <Image source={{ uri: review.photo }} style={styles.reviewerPhoto} />\n        <View style={styles.reviewerInfo}>\n          <Text style={styles.reviewerName}>{review.name}</Text>\n          <View style={styles.reviewMeta}>\n            <View style={styles.starContainer}>\n              {[...Array(5)].map((_, index) => (\n                <MaterialCommunityIcons\n                  key={index}\n                  name={index < review.rating ? \"star\" : \"star-outline\"}\n                  size={16}\n                  color={theme.colors.primary}\n                />\n              ))}\n            </View>\n            <View style={styles.serviceInfo}>\n              <MaterialCommunityIcons name=\"home\" size={16} color={theme.colors.secondary} />\n              <Text style={styles.serviceText}>{review.service} • {review.date}</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n      <Text style={styles.reviewText}>{review.text}</Text>\n    </View>\n  );\n\n  const renderHomeSection = () => (\n    <View style={styles.homeSection}>\n      <Text style={styles.sectionTitle}>Home</Text>\n      <View style={styles.homeFeaturesGrid}>\n        <HomeFeature text=\"No children present\" />\n        <HomeFeature text=\"Has security system\" />\n        <HomeFeature text=\"Non-smoking household\" />\n        <HomeFeature text=\"Has 2 dogs\" />\n        <HomeFeature text=\"Dogs allowed on bed\" />\n        <HomeFeature text=\"Dogs allowed on furniture\" />\n        <HomeFeature text=\"Potty breaks every 0-2 hours\" />\n      </View>\n    </View>\n\n  );\n\n  const renderAboutSection = () => (\n    <View style={styles.aboutSection}>\n      <Text style={styles.sectionTitle}>About {professionalData.name}</Text>\n      <View style={styles.aboutSubsections}>\n        <View style={styles.communicationSection}>\n          <Text style={styles.subsectionTitle}>Communication</Text>\n          <Text>22 repeat pet parents</Text>\n          <Text>100% response rate</Text>\n          <Text>Usually responds in a few minutes</Text>\n          <Text>90% bookings with photo updates</Text>\n        </View>\n        <View style={styles.skillsSection}>\n          <Text style={styles.subsectionTitle}>Skills</Text>\n          <Text>3 years of experience</Text>\n        </View>\n      </View> \n    </View>\n  );\n\n  const renderAvailability = () => (\n    <View style={dynamicStyles.servicesBox}>\n      <View style={styles.calendarSection}>\n        <Text style={[styles.sectionTitle, { marginBottom: 0 }]}>Availability</Text>\n        <Calendar\n          style={styles.calendar}\n          theme={{\n            calendarBackground: theme.colors.surface,\n            selectedDayBackgroundColor: theme.colors.primary,\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: theme.colors.primary,\n          }}\n        />\n      </View>\n    </View>\n  );\n\n  const renderGallery = () => {\n    return (\n      <View style={styles.gallerySection}>\n        <Text style={styles.sectionTitle}>53 Photos</Text>\n        <View style={styles.photoGrid}>\n          {[1, 2, 3, 4].map((_, index) => (\n            <Image \n              key={index}\n              source={{ uri: 'https://via.placeholder.com/150' }}\n              style={styles.galleryPhoto}\n                      />\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const additionalStyles = StyleSheet.create({\n    servicesSection: {\n      marginBottom: 24,\n    },\n    sectionHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 16,\n    },\n    seeAllButton: {\n      borderWidth: 1,\n      borderColor: theme.colors.primary,\n      paddingHorizontal: 12,\n      paddingVertical: 6,\n      borderRadius: 8,\n      alignSelf: 'flex-start',\n      minWidth: 'auto',\n      width: 'auto',\n    },\n    seeAllButtonText: {\n      color: theme.colors.primary,\n      fontSize: 16,\n      fontWeight: '600',\n      textAlign: 'center',\n    },\n    servicesScroll: {\n      marginHorizontal: -24, // To counteract parent padding\n      paddingHorizontal: 24,\n    },\n    modalServicesGrid: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 16,\n      justifyContent: 'center',\n      padding: 16,\n    },\n  });\n\n  const handleContactPress = () => {\n    // Check if conversation already exists\n    const existingConversation = mockConversations.find(\n      conv => conv.professionalId === professionalData.id\n    );\n\n    if (existingConversation) {\n      // Use replace instead of navigate to avoid navigation stack issues\n      navigation.replace('MessageHistory', {\n        selectedConversation: existingConversation.id\n      });\n    } else {\n      // Create new conversation\n      const newConversation = {\n        id: `conv_${Date.now()}`,\n        name: professionalData.name,\n        professionalId: professionalData.id,\n        lastMessage: '',\n        timestamp: new Date().toISOString(),\n        unread: false,\n        bookingStatus: null\n      };\n\n      // Add new conversation to mockConversations\n      mockConversations.unshift(newConversation);\n\n      // Initialize empty messages array for this conversation\n      mockMessages[newConversation.id] = [];\n\n      // Use replace instead of navigate\n      navigation.replace('MessageHistory', {\n        selectedConversation: newConversation.id\n      });\n    }\n  };\n\n  // Add this new function to render profile section based on screen size\n  const renderProfileSection = () => {\n    if (windowWidth >= 600) {\n      // Web version - original layout\n      return (\n        <View style={[styles.leftColumn, !isWideScreen && styles.leftColumnMobile]}>\n          <View style={[styles.profileSection, !isWideScreen && styles.profileSectionMobile]}>\n            {renderProfilePhoto()}\n            <Text style={styles.name}>{professionalData.name}</Text>\n            <Text style={styles.location}>{professionalData.location}</Text>\n            {renderRatingStars()}\n            <TouchableOpacity style={styles.contactButton} onPress={handleContactPress}>\n              <Text style={styles.contactButtonText}>Contact {professionalData.name}</Text>\n            </TouchableOpacity>\n          </View>\n          {isWideScreen && renderAvailability()}\n          {isWideScreen && renderMap()}\n          {isWideScreen && mockPets && mockPets.length > 0 && renderPets()}\n        </View>\n      );\n    } else {\n      // Mobile version - fixed layout\n      return (\n        <View style={[dynamicStyles.profileSection, dynamicStyles.profileSectionMobile]}>\n          {renderProfilePhoto()}\n          <Text style={styles.name}>{professionalData.name}</Text>\n          <Text style={styles.location}>{professionalData.location}</Text>\n          {renderRatingStars()}\n          <TouchableOpacity style={styles.contactButton} onPress={handleContactPress}>\n            <Text style={styles.contactButtonText}>Contact {professionalData.name}</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  };\n\n  return (\n    <CrossPlatformView fullWidthHeader={true} contentWidth=\"1200px\">\n      <BackHeader \n        title=\"Professional Profile\" \n        onBackPress={handleBack}\n      />\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\n        <View style={[styles.content, { width: getContentWidth() }]}>\n          <View style={[styles.twoColumnLayout, !isWideScreen && styles.singleColumnLayout]}>\n            {renderProfileSection()}\n            <View style={styles.rightColumn}>\n              {renderGallery()}\n              {renderServices()}\n              {!isWideScreen && renderAvailability()}\n              {renderSpecialistExperience()}\n              {renderReviews()}\n              {renderHomeSection()}\n              {!isWideScreen && renderMap()}\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n\n      {/* Bio Modal */}\n      <Modal\n        visible={bioModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setBioModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles2.modalContent}>\n            <Text style={styles.bioText}>{professionalData.bio}</Text>\n            <TouchableOpacity \n              style={styles.closeButton}\n              onPress={() => setBioModalVisible(false)}\n            >\n              <Text style={styles.closeButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Reviews Modal */}\n      <Modal\n        visible={reviewsModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setReviewsModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles2.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>All Reviews</Text>\n              <TouchableOpacity \n                style={styles.modalCloseIcon}\n                onPress={() => setReviewsModalVisible(false)}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            <ScrollView \n              style={styles.modalScroll}\n              contentContainerStyle={styles.modalScrollContent}\n            >\n              {mockReviews.map((review) => (\n                <View key={review.id} style={styles.modalReviewItem}>\n                  {renderReview(review)}\n                </View>\n              ))}\n            </ScrollView>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Specialist Experience Modal */}\n      <Modal\n        visible={specialistModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setSpecialistModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles2.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Specialist Experience</Text>\n              <TouchableOpacity \n                style={styles.modalCloseIcon}\n                onPress={() => setSpecialistModalVisible(false)}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            <ScrollView \n              style={styles.modalScroll}\n              contentContainerStyle={styles.modalScrollContent}\n            >\n              <Text style={styles.bioText}>{professionalData?.bio}</Text>\n            </ScrollView>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Services Modal */}\n      <Modal\n        visible={servicesModalVisible}\n        animationType=\"slide\"\n        transparent={true}\n        onRequestClose={() => setServicesModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles2.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>All Services</Text>\n              <TouchableOpacity \n                style={styles.modalCloseIcon}\n                onPress={() => setServicesModalVisible(false)}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            <ScrollView \n              style={styles.modalScroll}\n              contentContainerStyle={styles.modalScrollContent}\n            >\n              <View style={styles.modalServicesGrid}>\n                {mockServicesForCards.map(service => (\n                  <ServiceCard \n                    key={service.id}\n                    service={service}\n                    onHeartPress={toggleFavorite}\n                    isFavorite={favoriteServices.includes(service.id)}\n                    professionalName={professionalData.name}\n                    professionalId={professionalData.id}\n                    navigation={navigation}\n                  />\n                ))}\n              </View>\n            </ScrollView>\n          </View>\n        </View>\n      </Modal>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flexGrow: 1,\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n    height: Platform.OS === 'web' ? 'calc(100vh - 124px)' : '100%',\n    overflow: 'auto',\n  },\n  content: {\n    alignSelf: 'center',\n    padding: 24,\n  },\n  topSection: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n    marginBottom: 24,\n  },\n  gallerySection: {\n    maxHeight: 400,\n    overflow: 'hidden',\n    marginBottom: 24,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    maxHeight: 320,\n    overflow: 'auto',\n  },\n  bottomSection: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n  },\n  servicesSection: {\n    flex: Platform.OS === 'web' ? 1 : undefined,\n    backgroundColor: theme.colors.background,\n    padding: 24,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  aboutSection: {\n    maxHeight: 300,\n    overflow: 'auto',\n    marginBottom: 24,\n    padding: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n  },\n  profileHeader: {\n    alignItems: Platform.OS === 'web' ? 'flex-start' : 'center',\n  },\n  profileInfo: {\n    alignItems: Platform.OS === 'web' ? 'flex-start' : 'center',\n  },\n  hostingSection: {\n    marginTop: 24,\n  },\n  hostTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  weightRanges: {\n    gap: 8,\n  },\n  weightRange: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  galleryPhoto: {\n    width: Platform.OS === 'web' ? 100 : 50,\n    height: Platform.OS === 'web' ? 100 : 50,\n    borderRadius: 8,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  profilePhoto: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 16,\n    alignSelf: 'center',\n  },\n  profilePhotoPlaceholder: {\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  location: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    marginBottom: 8,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  section: {\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  bioInput: {\n    backgroundColor: theme.colors.surface,\n  },\n  service: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  rateLabel: {\n    flex: 1,\n    fontSize: 16,\n  },\n  rateInput: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  petPhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  addPhotoButton: {\n    width: 100,\n    height: 100,\n    margin: 5,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  saveButton: {\n    margin: 20,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 16,\n  },\n  rating: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 5,\n  },\n  reviewCount: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginLeft: 4,\n  },\n  contactButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignSelf: 'center',\n  },\n  contactButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.surface,\n    textAlign: 'center',\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20,\n  },\n  statItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  statText: {\n    fontSize: 16,\n    marginLeft: 5,\n  },\n  bioText: {\n    fontSize: 18,\n    lineHeight: 28,\n    color: theme.colors.text,\n    overflow: 'hidden',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  serviceText: {\n    fontSize: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  servicePrice: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  skillsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  skillBadge: {\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    margin: 5,\n  },\n  skillText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  photoGallery: {\n    flexDirection: 'row',\n  },\n  calculatorText: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  additionalRatesButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.outline,\n  },\n  additionalRatesText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calendarSection: {\n    marginTop: 24,\n  },\n  readMoreButton: {\n    marginTop: 8,\n  },\n  readMoreText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewsSection: {\n    marginVertical: 32,\n    width: '100%',\n    backgroundColor: theme.colors.background,\n  },\n  reviewItem: {\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    maxWidth: Platform.OS === 'web' ? 600 : undefined,\n  },\n  servicesSection: {\n    backgroundColor: theme.colors.surface,\n    padding: 24,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    marginBottom: 24,\n  },\n  mapContainer: {\n    height: 400,\n    width: '100%',\n    marginVertical: 24,\n  },\n  map: {\n    flex: 1,\n  },\n  petsSection: {\n    marginBottom: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  petItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n  },\n  petInfo: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 2,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  petBreed: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  aboutSubsections: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n  },\n  communicationSection: {\n    flex: 1,\n  },\n  skillsSection: {\n    flex: 1,\n  },\n  homeDetails: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n  },\n  noReviews: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 16,\n  },\n  twoColumnLayout: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  singleColumnLayout: {\n    flexDirection: 'column',\n  },\n  leftColumn: {\n    flex: Platform.OS === 'web' ? 1 : undefined,\n    maxWidth: Platform.OS === 'web' ? 400 : undefined,\n  },\n  rightColumn: {\n    flex: Platform.OS === 'web' ? 2 : undefined,\n  },\n  calendar: {\n    height: 300,\n    marginTop: 16,\n  },\n  serviceText: {\n    fontSize: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '100',\n  },\n  homeFeaturesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginTop: 16,\n  },\n  featureBubble: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.outline,\n  },\n  featureText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewItem: {\n    marginBottom: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  reviewHeader: {\n    flexDirection: 'row',\n    marginBottom: 12,\n  },\n  reviewerPhoto: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  reviewerInfo: {\n    flex: 1,\n  },\n  reviewerName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  serviceInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  reviewText: {\n    fontSize: 14,\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  modalScroll: {\n    maxHeight: Platform.OS === 'web' ? '70vh' : '80%',\n  },\n  closeButton: {\n    marginTop: 16,\n    alignItems: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalCloseIcon: {\n    padding: 8,\n  },\n  modalScrollContent: {\n    paddingBottom: 24,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: Platform.OS === 'web' ? 40 : 20,\n  },\n  reviewsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    marginTop: 16,\n  },\n  reviewItem: {\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    flex: 1,\n    minWidth: Platform.OS === 'web' ? 300 : '100%',\n    // maxWidth: Platform.OS === 'web' ? 'calc(50% - 8px)' : undefined,\n    marginBottom: 0, // Remove default margin since we're using gap\n  },\n  specialistSection: {\n    marginTop: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  specialistText: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalReviewItem: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  leftColumnMobile: {\n    maxWidth: '100%',\n    alignItems: 'center',\n  },\n  seeAllButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 8,\n    alignSelf: 'flex-start',\n    minWidth: 'auto',\n    width: 'auto',\n  },\n  seeAllButtonText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalServicesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    justifyContent: 'center',\n    padding: 16,\n  },\n  reviewMeta: {\n    gap: 4,\n  },\n  starContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n});\n\nexport default ProfessionalProfile;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\n\nconst ContractList = () => {\n  const [contracts, setContracts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchContracts();\n  }, []);\n\n  const fetchContracts = async () => {\n    setLoading(true);\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/contracts/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setContracts(response.data);\n    } catch (error) {\n      console.error('Error fetching contracts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.sectionTitle}>Your Contracts</Text>\n      {contracts.length === 0 ? (\n        <Text style={styles.noContractsText}>No contracts yet</Text>\n      ) : (\n        contracts.map((contract) => (\n          <View key={contract.id} style={styles.card}>\n            <Text style={styles.contractTitle}>{contract.title}</Text>\n            <Text style={styles.ownerName}>Owner: {contract.owner_name}</Text>\n            <View style={styles.buttonContainer}>\n              <TouchableOpacity style={styles.button}>\n                <Text style={styles.buttonText}>Share</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button}>\n                <Text style={styles.buttonText}>Edit</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        ))\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  noContractsText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginTop: 20,\n  },\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  contractTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  ownerName: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginTop: 4,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ContractList;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Modal, Platform, StyleSheet } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst OwnerPicker = ({ owners, selectedOwner, onSelectOwner }) => {\n  const [showOwnerPicker, setShowOwnerPicker] = useState(false);\n\n  if (Platform.OS === 'web') {\n    return (\n      <Picker\n        selectedValue={selectedOwner}\n        onValueChange={(itemValue) => onSelectOwner(itemValue)}\n        style={styles.picker}\n      >\n        <Picker.Item label=\"Select a owner...\" value=\"\" />\n        {owners.map(owner => (\n          <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n        ))}\n      </Picker>\n    );\n  } else {\n    return (\n      <View>\n        <TouchableOpacity\n          style={styles.dropdownButton}\n          onPress={() => setShowOwnerPicker(true)}\n        >\n          <Text style={styles.dropdownButtonText}>\n            {selectedOwner || \"Select a owner...\"}\n          </Text>\n          <MaterialCommunityIcons \n            name=\"chevron-down\" \n            size={24} \n            color={theme.colors.primary} \n          />\n        </TouchableOpacity>\n        <Modal\n          visible={showOwnerPicker}\n          transparent={true}\n          animationType=\"slide\"\n          onRequestClose={() => setShowOwnerPicker(false)}\n        >\n          <View style={styles.pickerModalContainer}>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedOwner}\n                onValueChange={(itemValue) => {\n                  onSelectOwner(itemValue);\n                  setShowOwnerPicker(false);\n                }}\n                style={styles.modalPicker}\n              >\n                <Picker.Item label=\"Select a owner...\" value=\"\" />\n                {owners.map(owner => (\n                  <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n                ))}\n              </Picker>\n            </View>\n            <TouchableOpacity\n              style={styles.pickerCloseButton}\n              onPress={() => setShowOwnerPicker(false)}\n            >\n              <Text style={styles.pickerCloseButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  picker: {\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n    padding: Platform.OS === 'ios' ? 12 : 0,\n    width: '90%',\n  },\n  modalPicker: {\n    width: '90%',\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownButtonText: {\n    color: theme.colors.text,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default OwnerPicker;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, TextInput, ScrollView, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\nimport OwnerPicker from './OwnerPicker'; // Import the new component\n\nconst ContractTemplate = ({ templates }) => {\n  const [isTemplateModalVisible, setTemplateModalVisible] = useState(false);\n  const [isEditModalVisible, setEditModalVisible] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [contractContent, setContractContent] = useState('');\n  const [owners, setOwners] = useState([]);\n  const [selectedOwner, setSelectedOwner] = useState('');\n\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n\n  const fetchOwners = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/clients/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setOwners(response.data);\n    } catch (error) {\n      console.error('Error fetching owners:', error);\n    }\n  };\n\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n    setContractContent(template.description);\n    setTemplateModalVisible(false);\n    setEditModalVisible(true);\n  };\n\n  const handleAddSignableField = () => {\n    setContractContent((prevContent) => `${prevContent}\\n[signable] ___________ [end signable]`);\n  };\n\n  const handleSubmitContract = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.post(\n        `${API_BASE_URL}/api/contracts/`,\n        {\n          template: selectedTemplate.id,\n          content: contractContent,\n          owner: selectedOwner,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log('Contract submitted:', response.data);\n      setEditModalVisible(false);\n    } catch (error) {\n      console.error('Error submitting contract:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.sectionTitle}>Create New Contract</Text>\n      <TouchableOpacity style={styles.button} onPress={() => setTemplateModalVisible(true)}>\n        <Text style={styles.buttonText}>Use Template</Text>\n      </TouchableOpacity>\n\n      {/* Template Selection Modal */}\n      <Modal\n        visible={isTemplateModalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setTemplateModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Select a Template</Text>\n            <ScrollView contentContainerStyle={styles.templateGrid}>\n              {templates.length === 0 ? (\n                <Text style={styles.noTemplatesText}>No templates yet</Text>\n              ) : (\n                templates.map((template) => (\n                  <TouchableOpacity\n                    key={template.id}\n                    style={styles.templateBox}\n                    onPress={() => handleTemplateSelect(template)}\n                  >\n                    <Text style={styles.templateTitle}>{template.title}</Text>\n                  </TouchableOpacity>\n                ))\n              )}\n            </ScrollView>\n            <TouchableOpacity style={styles.closeButton} onPress={() => setTemplateModalVisible(false)}>\n              <Text style={styles.closeButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Edit Contract Modal */}\n      <Modal\n        visible={isEditModalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setEditModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Edit Contract</Text>\n            <View style={styles.ownerPickerContainer}>\n              <Text style={styles.sectionTitle}>Select a Owner</Text>\n              <OwnerPicker\n                owners={owners}\n                selectedOwner={selectedOwner}\n                onSelectOwner={setSelectedOwner}\n              />\n            </View>\n            <TextInput\n              style={styles.textArea}\n              placeholder=\"Contract Content\"\n              value={contractContent}\n              onChangeText={setContractContent}\n              multiline\n            />\n            <TouchableOpacity style={styles.button} onPress={handleAddSignableField}>\n              <Text style={styles.buttonText}>Add Signable Field</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.button} onPress={handleSubmitContract}>\n              <Text style={styles.buttonText}>Submit Contract</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.closeButton} onPress={() => setEditModalVisible(false)}>\n              <Text style={styles.closeButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  templateGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  templateBox: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  templateTitle: {\n    color: theme.colors.background,\n    textAlign: 'center',\n  },\n  noTemplatesText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginTop: 20,\n  },\n  closeButton: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  textArea: {\n    width: '100%',\n    height: 100,\n    padding: 10,\n    borderColor: theme.colors.primary,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    textAlignVertical: 'top',\n  },\n  ownerPickerContainer: {\n    width: '100%', // Ensure the owner picker container takes full width\n    marginBottom: 10,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ContractTemplate;\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ChronicleSummary = ({ chronicles }) => {\n  if (!chronicles || chronicles.length === 0) {\n    return (\n      <View style={styles.emptyContainer}>\n        <Text style={styles.emptyText}>No chronicles yet</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.sectionTitle}>Your Chronicles</Text>\n      {chronicles.map((chronicle) => (\n        <View key={chronicle.id} style={styles.card}>\n          <Text style={styles.chronicleTitle}>{chronicle.title}</Text>\n          <Text style={styles.ownerName}>Owner: {chronicle.owner}</Text>\n          <Text style={styles.petName}>Pet: {chronicle.pets.join(', ')}</Text>\n          <Text style={styles.summary}>{chronicle.summary}</Text>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.button}>\n              <Text style={styles.buttonText}>Edit</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.button}>\n              <Text style={styles.buttonText}>Send to Owner</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    marginTop: 16,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center',\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  chronicleTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  ownerName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 4,\n  },\n  petName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 2,\n  },\n  summary: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ChronicleSummary;\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, Platform, Modal, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst { width: SCREEN_WIDTH } = Dimensions.get('window');\n\nconst QuestionInput = ({ value, onChange }) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\n  const inputRef = useRef(null);\n\n  const [layout, setLayout] = useState(null);\n\nconst handleLayout = (event) => {\n  const { x, y, width, height } = event.nativeEvent.layout;\n    setLayout({ x, y, width, height });\n  };\n\n  const presetQuestions = [\n    \"What is your favorite animal?\",\n    \"How many pets do you have?\",\n    \"What's your experience with exotic pets?\",\n    \"Do you have any allergies to animals?\",\n    \"What type of exotic pet are you interested in?\",\n    \"Have you owned an exotic pet before?\",\n    \"Are you familiar with the care requirements for exotic pets?\",\n    \"Do you have a veterinarian experienced with exotic animals?\",\n    \"What's your living situation? (House, apartment, etc.)\",\n    \"Are there any local regulations about exotic pet ownership in your area?\",\n  ];\n\n  const handleChange = (text) => {\n    onChange(text);\n  };\n\n  useLayoutEffect(() => {\n    if (showDropdown && inputRef.current) {\n      inputRef.current.measure((fx, fy, width, height, px, py) => {\n        if (!isNaN(py) && !isNaN(height)) {\n          const newTop = py + height;\n          const newLeft = px;\n          const newWidth = width;\n            \n          setDropdownPosition({ top: newTop, left: newLeft, width: newWidth });\n        }\n      });\n    }\n\n    // Lock/unlock scrolling\n    if (Platform.OS === 'web') {\n      document.body.style.overflow = showDropdown ? 'hidden' : 'auto';\n    }\n\n    return () => {\n      if (Platform.OS === 'web') {\n        document.body.style.overflow = 'auto';\n      }\n    };\n  }, [showDropdown, layout]);\n\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  return (\n    <View style={styles.outerContainer}>\n      <View style={styles.container}>\n        <View style={styles.inputContainer} ref={inputRef} onLayout={handleLayout}>\n          <TextInput\n            style={styles.input}\n            value={value}\n            onChangeText={handleChange}\n            placeholder=\"Enter or select a question\"\n            multiline\n          />\n          <TouchableOpacity \n            style={styles.dropdownButton}\n            onPress={toggleDropdown}\n          >\n            <MaterialCommunityIcons \n              name={showDropdown ? \"chevron-up\" : \"chevron-down\"} \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <Modal\n          visible={showDropdown}\n          transparent={true}\n          animationType=\"none\"\n          onRequestClose={toggleDropdown}\n        >\n          <TouchableOpacity\n            style={styles.modalOverlay}\n            activeOpacity={1}\n            onPress={toggleDropdown}\n          >\n            <View style={[styles.dropdownContainer, { top: dropdownPosition.top, left: dropdownPosition.left, width: dropdownPosition.width }]}>\n              <ScrollView style={styles.dropdownList}>\n                {presetQuestions.map((q, i) => (\n                  <TouchableOpacity\n                    key={i}\n                    style={styles.dropdownItem}\n                    onPress={() => {\n                      handleChange(q);\n                      toggleDropdown();\n                    }}\n                  >\n                    <Text style={styles.dropdownItemText}>{q}</Text>\n                  </TouchableOpacity>\n                ))}\n              </ScrollView>\n            </View>\n          </TouchableOpacity>\n        </Modal>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  container: {\n    width: SCREEN_WIDTH - 80, // Match the answer input width\n    maxWidth: 600,\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '100%',\n    position: 'relative',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 8,\n    minHeight: 60,\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  dropdownButton: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n    padding: 4,\n  },\n  modalOverlay: {\n    flex: 1,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    backgroundColor: theme.colors.background,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    maxHeight: 200,\n    zIndex: 1000, // Ensure it appears on top\n    ...Platform.select({\n      web: {\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      },\n      default: {\n        elevation: 4,\n      },\n    }),\n  },\n  dropdownList: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemText: {\n    color: theme.colors.text,\n  },\n});\n\nexport default QuestionInput;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, ScrollView, Modal, Platform, Dimensions, Image, ActivityIndicator, Pressable } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport QuestionInput from './QuestionInput';\nimport OwnerPicker from './OwnerPicker';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst ChronicleForm = ({ onCreateChronicle }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedOwner, setSelectedOwner] = useState('');\n  const [selectedPets, setSelectedPets] = useState([]);\n  const [questions, setQuestions] = useState([{ question: '', answer: '', isPreset: true }]);\n  const [summary, setSummary] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showOwnerPicker, setShowOwnerPicker] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n\n  const mockOwners = [\n    { id: '1', name: 'John Doe', pets: [{ id: '1', name: 'Max' }, { id: '2', name: 'Bella' }] },\n    { id: '2', name: 'Jane Smith', pets: [{ id: '3', name: 'Luna' }, { id: '4', name: 'Charlie' }] }\n  ];\n\n  const pickImages = async () => {\n    try {\n      setIsUploading(true);\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        quality: 1,\n      });\n\n      if (!result.canceled) {\n        setPhotos([...photos, ...result.assets]);\n      }\n    } catch (error) {\n      console.error('Error uploading images:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const updateQuestion = (index, field, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = { ...newQuestions[index], [field]: value };\n    setQuestions(newQuestions);\n  };\n\n  const handleCreateChronicle = () => {\n    setIsCreating(true);\n    const newChronicle = {\n      id: Date.now(),\n      owner: selectedOwner,\n      pets: selectedPets,\n      summary,\n      questions,\n      photos,\n      title: `Chronicle for ${selectedOwner}`,\n    };\n\n    setTimeout(() => {\n      console.log('Sending data to backend:', newChronicle);\n      onCreateChronicle(newChronicle);\n      setIsCreating(false);\n      setModalVisible(false);\n      resetForm();\n    }, 2000);\n  };\n\n  const resetForm = () => {\n    setSelectedOwner('');\n    setSelectedPets([]);\n    setSummary('');\n    setQuestions([{ question: '', answer: '' }]);\n    setPhotos([]);\n  };\n\n  const addNewQuestion = () => {\n    setQuestions([...questions, { question: '', answer: '', isPreset: false }]);\n  };\n\n  const renderOwnerSelection = () => {\n    if (Platform.OS === 'web') {\n      return (\n        <Picker\n          selectedValue={selectedOwner}\n          onValueChange={(itemValue) => setSelectedOwner(itemValue)}\n          style={styles.picker}\n        >\n          <Picker.Item label=\"Select a owner...\" value=\"\" />\n          {mockOwners.map(owner => (\n            <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n          ))}\n        </Picker>\n      );\n    } else {\n      return (\n        <View>\n          <TouchableOpacity\n            style={styles.dropdownButton}\n            onPress={() => setShowOwnerPicker(true)}\n          >\n            <Text style={styles.dropdownButtonText}>\n              {selectedOwner || \"Select a owner...\"}\n            </Text>\n            <MaterialCommunityIcons \n              name=\"chevron-down\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n          <Modal\n            visible={showOwnerPicker}\n            transparent={true}\n            animationType=\"slide\"\n          >\n            <View style={styles.pickerModalContainer}>\n              <View style={styles.pickerContainer}>\n                <Picker\n                  selectedValue={selectedOwner}\n                  onValueChange={(itemValue) => {\n                    setSelectedOwner(itemValue);\n                    setShowOwnerPicker(false);\n                  }}\n                >\n                  <Picker.Item label=\"Select a owner...\" value=\"\" />\n                  {mockOwners.map(owner => (\n                    <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n                  ))}\n                </Picker>\n              </View>\n              <TouchableOpacity\n                style={styles.pickerCloseButton}\n                onPress={() => setShowOwnerPicker(false)}\n              >\n                <Text style={styles.pickerCloseButtonText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n          </Modal>\n        </View>\n      );\n    }\n  };\n\n  const PhotoPreview = ({ photo }) => (\n    <View style={styles.photoContainer}>\n      <Image source={{ uri: photo.uri }} style={styles.photo} />\n    </View>\n  );\n\n  return (\n    <View>\n      <TouchableOpacity style={styles.createButton} onPress={() => setModalVisible(true)}>\n        <Text style={styles.createButtonText}>Create New Chronicle</Text>\n      </TouchableOpacity>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={[styles.modalContent, Platform.OS === 'web' && styles.webModalContent]}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Create New Chronicle</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Text style={styles.closeButtonText}>✕</Text>\n              </TouchableOpacity>\n            </View>\n\n            <ScrollView>\n              <Text style={styles.label}>Select Owner</Text>\n              <OwnerPicker\n                owners={mockOwners}\n                selectedOwner={selectedOwner}\n                onSelectOwner={setSelectedOwner}\n              />\n\n              <Text style={styles.label}>Select Pets</Text>\n              {selectedOwner && mockOwners.find(c => c.name === selectedOwner)?.pets.map(pet => (\n                <TouchableOpacity\n                  key={pet.id}\n                  style={[\n                    styles.petOption,\n                    selectedPets.includes(pet.name) && styles.selectedPet\n                  ]}\n                  onPress={() => {\n                    if (selectedPets.includes(pet.name)) {\n                      setSelectedPets(selectedPets.filter(p => p !== pet.name));\n                    } else {\n                      setSelectedPets([...selectedPets, pet.name]);\n                    }\n                  }}\n                >\n                  <Text style={styles.petOptionText}>{pet.name}</Text>\n                </TouchableOpacity>\n              ))}\n\n              <Text style={styles.label}>Summary</Text>\n              <TextInput\n                style={styles.summaryInput}\n                multiline\n                value={summary}\n                onChangeText={setSummary}\n                placeholder=\"Write a summary of the chronicle\"\n                textAlignVertical=\"top\"\n              />\n\n              {questions.map((item, index) => (\n                <View key={index} style={styles.questionContainer}>\n                  <Text style={styles.label}>Question {index + 1}</Text>\n                  <QuestionInput\n                    value={item.question}\n                    onChange={(text) => updateQuestion(index, 'question', text)}\n                  />\n                  <View style={styles.answerInputContainer}>\n                    <TextInput\n                      style={[styles.input, styles.answerInput]}\n                      value={item.answer}\n                      onChangeText={(text) => updateQuestion(index, 'answer', text)}\n                      placeholder=\"Enter answer\"\n                      multiline\n                    />\n                  </View>\n                </View>\n              ))}\n\n              <TouchableOpacity style={styles.addQuestionButton} onPress={addNewQuestion}>\n                <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.primary} />\n                <Text style={styles.addQuestionButtonText}>Add Another Question</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity \n                style={styles.uploadButton} \n                onPress={pickImages}\n                disabled={isUploading}\n              >\n                <MaterialCommunityIcons \n                  name=\"camera\" \n                  size={24} \n                  color={isUploading ? theme.colors.disabled : theme.colors.primary} \n                />\n                <Text style={[\n                  styles.uploadButtonText,\n                  isUploading && styles.uploadingText\n                ]}>\n                  {isUploading ? 'Uploading...' : 'Upload Photos'}\n                </Text>\n                {isUploading && (\n                  <ActivityIndicator \n                    size=\"small\" \n                    color={theme.colors.primary} \n                    style={styles.uploadingSpinner} \n                  />\n                )}\n              </TouchableOpacity>\n\n              <ScrollView horizontal style={styles.photoPreview}>\n                {photos.map((photo, index) => (\n                  <PhotoPreview key={index} photo={photo} />\n                ))}\n              </ScrollView>\n            </ScrollView>\n\n            <View style={styles.modalButtonContainer}>\n              <TouchableOpacity \n                style={styles.cancelButton} \n                onPress={() => {\n                  setModalVisible(false);\n                  resetForm();\n                }}\n              >\n                <Text style={styles.cancelButtonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={styles.submitButton} \n                onPress={handleCreateChronicle}\n                disabled={isCreating}\n              >\n                <Text style={styles.submitButtonText}>\n                  {isCreating ? 'Creating Chronicle...' : 'Create Chronicle'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  createButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  createButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    width: '90%',\n    maxHeight: '80%',\n  },\n  webModalContent: {\n    width: screenWidth > 600 ? '40%' : '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  closeButtonText: {\n    fontSize: 20,\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginBottom: 8,\n    minHeight: 20,\n  },\n  picker: {\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n    padding: Platform.OS === 'ios' ? 12 : 0,\n  },\n  petOption: {\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n  },\n  selectedPet: {\n    backgroundColor: theme.colors.primary,\n  },\n  petOptionText: {\n    color: theme.colors.text,\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginTop: 16,\n  },\n  uploadButtonText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  photoPreview: {\n    flexDirection: 'row',\n    marginTop: 16,\n  },\n  photoThumbnail: {\n    width: 80,\n    height: 80,\n    marginRight: 8,\n    borderRadius: 4,\n  },\n  questionContainer: {\n    marginBottom: 16,\n    width: '100%',\n    alignItems: 'center',\n  },\n  modalButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 16,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.error,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 4,\n    alignItems: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  cancelButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 4,\n    alignItems: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  submitButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  addQuestionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginTop: 8,\n    marginBottom: 16,\n    zIndex: 1, // Lower than dropdown\n  },\n  addQuestionButtonText: {\n    marginLeft: 8,\n    zIndex: 1, // Lower than dropdown\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  answerInputContainer: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  answerInput: {\n    width: screenWidth - 80,\n    maxWidth: 600,\n    minHeight: 60,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 8,\n    marginTop: 8,\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  summaryInput: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginBottom: 8,\n    padding: 8,\n    height: 100, // Set a fixed height\n    textAlignVertical: 'top',\n    ...Platform.select({\n      web: {\n        minHeight: 100,\n      },\n      ios: {\n        paddingTop: 8, // Add some padding to the top for iOS\n      },\n      android: {\n        paddingTop: 8, // Add some padding to the top for Android\n      },\n    }),\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownButtonText: {\n    color: theme.colors.text,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  photoContainer: {\n    marginRight: 8,\n  },\n  photo: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n  },\n});\n\nexport default ChronicleForm;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, SafeAreaView, StatusBar, Platform, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\nimport ContractList from '../components/ContractList';\nimport ContractTemplate from '../components/ContractTemplate'; // Import ContractTemplate\nimport ChronicleSummary from '../components/ChronicleSummary';\nimport ChronicleForm from '../components/ChronicleForm';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\n\nconst MyContracts = () => {\n  const [activeTab, setActiveTab] = useState('contracts');\n  const [chronicles, setChronicles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [templates, setTemplates] = useState([]);\n\n  useEffect(() => {\n    if (activeTab === 'chronicles') {\n      fetchChronicles();\n    }\n  }, [activeTab]);\n\n  const fetchChronicles = async () => {\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const mockChronicles = [\n      {\n        id: 1,\n        title: 'Fluffy\\'s Adventure',\n        owner: 'John Doe',\n        pets: ['Fluffy'],\n        summary: 'Fluffy had a great time at the park today!',\n      },\n      {\n        id: 2,\n        title: 'Max\\'s Playdate',\n        owner: 'Jane Smith',\n        pets: ['Max'],\n        summary: 'Max enjoyed playing with other dogs at the beach.',\n      },\n    ];\n\n    setChronicles(mockChronicles);\n    setLoading(false);\n  };\n\n  const fetchTemplates = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/contracts/templates/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTemplates(); // Fetch templates when component mounts\n  }, []);\n\n  const handleCreateChronicle = (newChronicle) => {\n    setChronicles((prevChronicles) => [...prevChronicles, newChronicle]);\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\n        <View style={styles.container}>\n          <Text style={styles.title}>My Contracts & Chronicles</Text>\n          \n          <View style={styles.tabContainer}>\n            <TouchableOpacity\n              style={[styles.tab, activeTab === 'contracts' && styles.activeTab]}\n              onPress={() => setActiveTab('contracts')}\n            >\n              <Text style={[styles.tabText, activeTab === 'contracts' && styles.activeTabText]}>Contracts</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.tab, activeTab === 'chronicles' && styles.activeTab]}\n              onPress={() => setActiveTab('chronicles')}\n            >\n              <Text style={[styles.tabText, activeTab === 'chronicles' && styles.activeTabText]}>Critter Chronicles</Text>\n            </TouchableOpacity>\n          </View>\n\n          {activeTab === 'contracts' && (\n            <View style={styles.contentContainer}>\n              <ContractTemplate templates={templates} />\n              <ContractList />\n            </View>\n          )}\n\n          {activeTab === 'chronicles' && (\n            <View style={styles.contentContainer}>\n              {loading ? (\n                <View style={styles.loadingContainer}>\n                  <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                </View>\n              ) : (\n                <>\n                  <ChronicleForm onCreateChronicle={handleCreateChronicle} />\n                  <ChronicleSummary chronicles={chronicles} />\n                </>\n              )}\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: theme.colors.primary,\n    textAlign: 'center',\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    width: '100%',\n    maxWidth: 500,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginHorizontal: 4,\n  },\n  activeTab: {\n    backgroundColor: theme.colors.primary,\n  },\n  tabText: {\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  activeTabText: {\n    color: theme.colors.background,\n  },\n  contentContainer: {\n    width: '100%',\n    maxWidth: 500,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n  },\n  useTemplateButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  useTemplateButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  templateGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  templateBox: {\n    width: 100,\n    height: 100,\n    backgroundColor: theme.colors.primary,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n  },\n  templateTitle: {\n    color: theme.colors.background,\n    textAlign: 'center',\n  },\n  closeButton: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default MyContracts;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, TouchableOpacity, StatusBar } from 'react-native';\nimport { TextInput, Button, Text } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst ChangePassword = ({ navigation }) => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const { isSignedIn } = useContext(AuthContext);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const getToken = async () => {\n      const storedToken = await AsyncStorage.getItem('userToken');\n      setToken(storedToken);\n    };\n    getToken();\n  }, []);\n\n  const handleChangePassword = async () => {\n    setError('');\n    setSuccess('');\n\n    if (newPassword !== confirmPassword) {\n      setError('New passwords do not match');\n      return;\n    }\n\n    if (!isSignedIn || !token) {\n      setError('You are not authenticated. Please log in again.');\n      return;\n    }\n\n    try {\n      console.log('Sending request to:', `${API_BASE_URL}/api/users/change-password/`);\n      console.log('Request payload:', {\n        current_password: currentPassword,\n        new_password: newPassword,\n      });\n      console.log('Auth token:', token);\n\n      const response = await axios.post(\n        `${API_BASE_URL}/api/users/change-password/`,\n        {\n          current_password: currentPassword,\n          new_password: newPassword,\n        },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n\n      console.log('Response:', response);\n\n      if (response.status === 200) {\n        setSuccess('Password changed successfully');\n        setCurrentPassword('');\n        setNewPassword('');\n        setConfirmPassword('');\n      }\n    } catch (error) {\n      console.error('Error details:', error);\n      setError(error.response?.data?.error || 'Failed to change password');\n    }\n  };\n\n  const renderHeader = () => (\n    <View style={styles.header}>\n      <TouchableOpacity onPress={() => navigation.navigate('Settings')} style={styles.backButton}>\n        <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n      </TouchableOpacity>\n      <Text style={styles.headerText}>Change Password</Text>\n    </View>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {renderHeader()}\n      <View style={Platform.OS === 'web' ? styles.webContent : styles.content}>\n        <TextInput\n          label=\"Current Password\"\n          value={currentPassword}\n          onChangeText={setCurrentPassword}\n          secureTextEntry\n          style={styles.input}\n        />\n        <TextInput\n          label=\"New Password\"\n          value={newPassword}\n          onChangeText={setNewPassword}\n          secureTextEntry\n          style={styles.input}\n        />\n        <TextInput\n          label=\"Confirm New Password\"\n          value={confirmPassword}\n          onChangeText={setConfirmPassword}\n          secureTextEntry\n          style={styles.input}\n        />\n        {error ? <Text style={styles.errorText}>{error}</Text> : null}\n        {success ? <Text style={styles.successText}>{success}</Text> : null}\n        <Button mode=\"contained\" onPress={handleChangePassword} style={styles.button}>\n          Change Password\n        </Button>\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  webContent: {\n    width: '100%',\n    maxWidth: 600,\n    alignSelf: 'center',\n    padding: 20,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  input: {\n    marginBottom: 10,\n  },\n  button: {\n    marginTop: 20,\n  },\n  errorText: {\n    color: theme.colors.error,\n    marginBottom: 10,\n  },\n  successText: {\n    color: theme.colors.success,\n    marginBottom: 10,\n  },\n});\n\nexport default ChangePassword;\n","import React, { useState, useEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, TextInput as RNTextInput, TouchableOpacity, ScrollView, Image, Dimensions } from 'react-native';\nimport { Text, Appbar, Button } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { format } from 'date-fns';\nimport { theme } from '../styles/theme';\nimport FloatingSaveButton from '../components/FloatingSaveButton';\nimport DatePicker from '../components/DatePicker';\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst WebInput = ({ label, value, onChangeText, type = 'text', style }) => {\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <textarea\n        value={value}\n        onChange={(e) => {\n          if (type === 'number' && isNaN(e.target.value)) return;\n          onChangeText(e.target.value);\n        }}\n        style={{ ...styles.webInput, ...style }} // Merge default and custom styles\n        rows={1}\n        maxLength={type === 'text' ? 1000 : undefined}\n      />\n    </View>\n  );\n};\n\nconst MobileInput = ({ label, value, onChangeText, keyboardType = 'default', maxLength, style }) => {\n  return (\n    <View style={styles.inputContainer}>\n      <Text style={styles.label}>{label}</Text>\n      <RNTextInput\n        value={value}\n        onChangeText={onChangeText}\n        style={[style, styles.input]} // Ensure custom style is applied first\n        keyboardType={keyboardType}\n        maxLength={maxLength}\n        multiline={true}\n      />\n    </View>\n  );\n};\n\nconst TextInput = Platform.OS === 'web' ? WebInput : MobileInput;\n\nconst AddPet = ({ route }) => {\n  const navigation = useNavigation();\n  \n  // Get initial pet data\n  const [petData] = useState(() => {\n    if (Platform.OS === 'web') {\n      const stored = sessionStorage.getItem('editPetData');\n      if (stored) {\n        return JSON.parse(stored);\n      }\n    }\n    return route.params?.pet || {};\n  });\n\n  // Clean URL on mount\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      if (window.location.search) {\n        window.history.replaceState({}, '', '/AddPet');\n      }\n      // Store pet data if it exists in route params\n      if (route.params?.pet) {\n        sessionStorage.setItem('editPetData', JSON.stringify(route.params.pet));\n      }\n    }\n    // Cleanup on unmount\n    return () => {\n      if (Platform.OS === 'web' && !window.location.pathname.includes('AddPet')) {\n        sessionStorage.removeItem('editPetData');\n      }\n    };\n  }, []);\n\n  // Use petData instead of route.params.pet throughout the component\n  const pet = petData;\n\n  const [petName, setPetName] = useState('');\n  const [petType, setPetType] = useState(pet && pet.animal_type ? pet.animal_type : ''); // For actual pet type\n  const [animalType, setAnimalType] = useState(pet && pet.animal_type ? pet.animal_type : ''); // For toggle buttons\n  const [weight, setWeight] = useState('');\n  const [breed, setBreed] = useState('');\n  const [ageYears, setAgeYears] = useState('');\n  const [ageMonths, setAgeMonths] = useState('');\n  const [sex, setSex] = useState(null);\n  const [friendlyWithChildren, setFriendlyWithChildren] = useState(null);\n  const [friendlyWithCats, setFriendlyWithCats] = useState(null);\n  const [friendlyWithDogs, setFriendlyWithDogs] = useState(null);\n  const [spayedNeutered, setSpayedNeutered] = useState(null);\n  const [houseTrained, setHouseTrained] = useState(null);\n  const [microchipped, setMicrochipped] = useState(null);\n  const [adoptionDate, setAdoptionDate] = useState(new Date());\n  const [description, setDescription] = useState('');\n  const [profileImage, setProfileImage] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // New state variables for Care Information\n  const [pottyBreakSchedule, setPottyBreakSchedule] = useState(null);\n  const [customPottyBreak, setCustomPottyBreak] = useState('');\n  const [energyLevel, setEnergyLevel] = useState(null);\n  const [feedingSchedule, setFeedingSchedule] = useState(null);\n  const [customFeedingSchedule, setCustomFeedingSchedule] = useState('');\n  const [leftAlone, setLeftAlone] = useState(null);\n  const [customLeftAlone, setCustomLeftAlone] = useState('');\n  const [medication, setMedication] = useState(null);\n  const [medicationDetails, setMedicationDetails] = useState('');\n  const [additionalInstructions, setAdditionalInstructions] = useState('');\n\n  // Add these new state variables at the top of the AddPet component\n  const [vetName, setVetName] = useState('');\n  const [vetAddress, setVetAddress] = useState('');\n  const [vetPhone, setVetPhone] = useState('');\n  const [vetDocuments, setVetDocuments] = useState([]);\n  const [insuranceProvider, setInsuranceProvider] = useState('');\n  const [galleryImages, setGalleryImages] = useState([]);\n  const [estimatedBirthday, setEstimatedBirthday] = useState(new Date());\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  useEffect(() => {\n    setHasUnsavedChanges(false);\n\n    if (pet) {\n      // Populate fields with existing pet data or set to empty string if not available\n      setPetName(pet.name ? pet.name : '');\n      setPetType(pet.animal_type ? pet.animal_type : '');\n      setAnimalType(pet.animal_type === 'Cat' || pet.animal_type === 'Dog' ? pet.animal_type : 'Exotic');\n      setBreed(pet.breed ? pet.breed : '');\n      setWeight(pet.weight ? pet.weight : '');\n      setAgeYears(pet.age && pet.age.years ? pet.age.years : '');\n      setAgeMonths(pet.age && pet.age.months ? pet.age.months : '');\n      setSex(pet.sex ? pet.sex : '');\n      setFriendlyWithChildren(pet.friendlyWithChildren !== undefined ? pet.friendlyWithChildren : null);\n      setFriendlyWithCats(pet.friendlyWithCats !== undefined ? pet.friendlyWithCats : null);\n      setFriendlyWithDogs(pet.friendlyWithDogs !== undefined ? pet.friendlyWithDogs : null);\n      setSpayedNeutered(pet.spayedNeutered !== undefined ? pet.spayedNeutered : null);\n      setHouseTrained(pet.houseTrained !== undefined ? pet.houseTrained : null);\n      setMicrochipped(pet.microchipped !== undefined ? pet.microchipped : null);\n      setAdoptionDate(pet.adoptionDate ? new Date(pet.adoptionDate) : new Date()); // Default to current date if not available\n      setDescription(pet.description ? pet.description : '');\n      setEnergyLevel(pet.energyLevel ? pet.energyLevel : '');\n\n      // Check if feedingSchedule is an array\n      if (Array.isArray(pet.feedingSchedule)) {\n        setFeedingSchedule(pet.feedingSchedule[0]); // Set to 'Custom'\n        setCustomFeedingSchedule(pet.feedingSchedule[1]); // Set custom instructions\n      } else {\n        setFeedingSchedule(pet.feedingSchedule ? pet.feedingSchedule : ''); // Populate feeding schedule\n        setCustomFeedingSchedule(''); // Reset custom feeding schedule\n      }\n\n      setLeftAlone(pet.leftAlone ? pet.leftAlone : '');\n      setMedication(pet.medication ? pet.medication : '');\n      setAdditionalInstructions(pet.additionalInstructions ? pet.additionalInstructions : '');\n      setVetName(pet.vetName ? pet.vetName : '');\n      setVetAddress(pet.vetAddress ? pet.vetAddress : '');\n      setVetPhone(pet.vetPhone ? pet.vetPhone : '');\n      setInsuranceProvider(pet.insuranceProvider ? pet.insuranceProvider : '');\n      setVetDocuments(pet.veterinarian && pet.veterinarian.documents ? pet.veterinarian.documents : []);\n      setGalleryImages(pet.galleryImages ? pet.galleryImages : []);\n      \n      // Set estimated birthday if available\n      if (pet.age) {\n        const today = new Date();\n        const estimatedDate = new Date(today.getFullYear() - pet.age.years, today.getMonth() - pet.age.months);\n        setEstimatedBirthday(estimatedDate);\n      }\n    } else {\n      // If pet is not defined, initialize fields to empty strings\n      setPetName('');\n      setPetType('');\n      setAnimalType('');\n      setWeight('');\n      setAgeYears('');\n      setAgeMonths('');\n      setSex('');\n      setFriendlyWithChildren(null);\n      setFriendlyWithCats(null);\n      setFriendlyWithDogs(null);\n      setSpayedNeutered(null);\n      setHouseTrained(null);\n      setMicrochipped(null);\n      setAdoptionDate(new Date());\n      setDescription('');\n      setEnergyLevel('');\n      setFeedingSchedule(''); // Initialize feeding schedule\n      setCustomFeedingSchedule(''); // Initialize custom feeding schedule\n      setLeftAlone('');\n      setMedication('');\n      setAdditionalInstructions('');\n      setVetName('');\n      setVetAddress('');\n      setVetPhone('');\n      setInsuranceProvider('');\n      setVetDocuments([]);\n      setGalleryImages([]);\n    }\n  }, [pet]);\n\n  useEffect(() => {\n    if (ageYears && ageMonths) {\n      const today = new Date();\n      const estimatedDate = new Date(today.getFullYear() - parseInt(ageYears), today.getMonth() - parseInt(ageMonths));\n      setEstimatedBirthday(estimatedDate);\n    }\n  }, [ageYears, ageMonths]);\n\n  const calculateAge = (birthday) => {\n    const today = new Date();\n    const birthDate = new Date(birthday);\n    let ageYears = today.getFullYear() - birthDate.getFullYear();\n    let ageMonths = today.getMonth() - birthDate.getMonth();\n\n    if (ageMonths < 0) {\n      ageYears--;\n      ageMonths += 12;\n    }\n\n    setAgeYears(ageYears.toString());\n    setAgeMonths(ageMonths.toString());\n  };\n\n  const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfileImage(result.assets[0].uri);\n    }\n  };\n\n  const renderEstimatedBirthday = () => (\n    <View style={styles.inputContainer}>\n      <Text style={styles.label}>Estimated Birthday:</Text>\n      <TouchableOpacity onPress={() => setShowDatePicker(true)}>\n        <Text style={styles.dateText}>\n          {format(estimatedBirthday, 'yyyy-MM-dd')}\n        </Text>\n      </TouchableOpacity>\n      {showDatePicker && (\n        <DatePicker\n          value={estimatedBirthday}\n          onChange={(date) => {\n            if (date) {\n              setEstimatedBirthday(date);\n              calculateAge(date); // Calculate age when date is selected\n              setHasUnsavedChanges(true); // Set hasUnsavedChanges to true when date is selected\n            }\n            setShowDatePicker(false);\n          }}\n        />\n      )}\n    </View>\n  );\n\n  const renderTab = (type) => (\n    <TouchableOpacity\n      style={[\n        styles.tab,\n        animalType === type && styles.activeTab,\n        type === 'Dog' && styles.leftTab,\n        type === 'Exotic' && styles.rightTab,\n      ]}\n      onPress={() => {\n        setAnimalType(type); // Set the pet type\n        setHasUnsavedChanges(true); // Set hasUnsavedChanges to true\n      }}\n    >\n      <Text style={styles.tabText}>{type}</Text>\n    </TouchableOpacity>\n  );\n\n  const renderToggleButtons = (options, value, setValue, customInput = false, customValue = '', setCustomValue = () => {}) => (\n    <View style={styles.toggleContainer}>\n      <View style={styles.buttonRow}>\n        {options.map((option) => (\n          <TouchableOpacity\n            key={option}\n            style={[styles.yesNoButton, value === option && styles.activeYesNoButton]}\n            onPress={() => setValue(option)}\n          >\n            <Text style={styles.yesNoText}>{option}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      {((customInput && value === 'Custom') || (options.includes('Pill') && value)) && (\n        Platform.OS === 'web' ? (\n          <View style={styles.inputContainer}>\n            <textarea\n              value={customValue}\n              onChange={(e) => setCustomValue(e.target.value)}\n              style={styles.webInput}\n              placeholder={options.includes('Pill') ? \"Enter medication details\" : \"Enter custom time\"}\n            />\n          </View>\n        ) : (\n          <TextInput\n            value={customValue}\n            onChangeText={setCustomValue}\n            style={[styles.customInput, { width: '100%' }]}\n            placeholder={options.includes('Pill') ? \"Enter medication details\" : \"Enter custom time\"}\n          />\n        )\n      )}\n    </View>\n  );\n\n  const renderYesNoButtons = (value, setValue) => (\n    <View style={styles.yesNoContainer}>\n      <TouchableOpacity\n        style={[styles.yesNoButton, value === true && styles.activeYesNoButton]}\n        onPress={() => setValue(true)}\n      >\n        <Text style={styles.yesNoText}>Yes</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[styles.yesNoButton, value === false && styles.activeYesNoButton]}\n        onPress={() => setValue(false)}\n      >\n        <Text style={styles.yesNoText}>No</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderSexButtons = (value, setValue) => (\n    <View style={styles.yesNoContainer}>\n      <TouchableOpacity\n        style={[styles.yesNoButton, value === 'Male' && styles.activeYesNoButton]}\n        onPress={() => {\n          setSex('Male'); // Update the sex state\n          setHasUnsavedChanges(true); // Set unsaved changes to true\n        }}\n      >\n        <Text style={styles.yesNoText}>Male</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={[styles.yesNoButton, value === 'Female' && styles.activeYesNoButton]}\n        onPress={() => {\n          setSex('Female'); // Update the sex state\n          setHasUnsavedChanges(true); // Set unsaved changes to true\n        }}\n      >\n        <Text style={styles.yesNoText}>Female</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const handleSaveProfile = () => {\n    setIsSubmitting(true);\n    setHasUnsavedChanges(false);\n\n    const petData = {\n      // Basic Info\n      petName,\n      petType: (animalType !== 'Exotic') ? animalType : petType,\n      weight,\n      breed,\n      estimatedBirthday,\n      age: {\n        years: ageYears,\n        months: ageMonths\n      },\n      sex,\n      profileImage,\n      description,\n      adoptionDate: format(adoptionDate, 'yyyy-MM-dd'),\n\n      // Temperament & Training\n      friendlyWithChildren,\n      friendlyWithCats,\n      friendlyWithDogs,\n      spayedNeutered,\n      houseTrained,\n      microchipped,\n\n      // Care Information\n      pottyBreakSchedule: pottyBreakSchedule === 'Custom' ? customPottyBreak : pottyBreakSchedule,\n      energyLevel,\n      feedingSchedule: feedingSchedule === 'Custom' ? customFeedingSchedule : feedingSchedule,\n      leftAlone: leftAlone === 'Custom' ? customLeftAlone : leftAlone,\n      medication: medication ? {\n        type: medication,\n        details: medicationDetails\n      } : null,\n      additionalInstructions,\n\n      // Health Information\n      veterinarian: {\n        name: vetName,\n        address: vetAddress,\n        phone: vetPhone,\n        documents: vetDocuments.map(doc => ({\n          uri: doc.uri,\n          type: doc.type,\n          name: doc.fileName || 'document'\n        }))\n      },\n      insuranceProvider,\n\n      // Photo Gallery\n      galleryImages: galleryImages.map(img => ({\n        uri: img.uri,\n        type: img.type,\n        name: img.fileName || 'image'\n      }))\n    };\n\n    console.log('Pet Profile Data:', JSON.stringify(petData, null, 2));\n\n    // Simulate API call\n    setTimeout(() => {\n      setIsSubmitting(false);\n      // alert('Pet profile saved successfully!');\n      // Navigate back or clear form\n      // setHasUnsavedChanges(false);\n    }, 1000);\n  };\n\n  const pickVetDocuments = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsMultipleSelection: true,\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setVetDocuments([...vetDocuments, ...result.assets]);\n    }\n  };\n\n  const pickGalleryImages = async () => {\n    try {\n      // Request permissions first (for iOS)\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n          return;\n        }\n      }\n\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        quality: 1,\n        aspect: [1, 1],\n      });\n\n      if (!result.canceled) {\n        setGalleryImages(prevImages => [...prevImages, ...result.assets]);\n      }\n    } catch (error) {\n      console.error('Error picking images:', error);\n      alert('Error selecting images. Please try again.');\n    }\n  };\n\n  // Function to handle input changes and set unsaved changes\n  const handleInputChange = (setter) => (value) => {\n    setter(value);\n    setHasUnsavedChanges(true);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.navigate('MyPets')} style={styles.backButton}>\n          <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n        </TouchableOpacity>\n        <Text style={styles.headerText}>\n          {pet && Object.keys(pet).length > 0 ? 'Edit Pet' : 'Add a New Pet'}\n        </Text>\n      </View>\n      <ScrollView contentContainerStyle={styles.scrollContent}>\n        <View style={styles.formContainer}>\n          {/* Pet Details Section */}\n          <Text style={styles.sectionHeader}>\n            <MaterialCommunityIcons name=\"paw\" size={20} /> Pet Details\n          </Text>\n          {/* Profile Photo */}\n          <Text style={styles.label}>Profile Photo</Text>\n          <TouchableOpacity onPress={pickImage} style={styles.profileImageContainer}>\n            {profileImage ? (\n              <Image source={{ uri: profileImage }} style={styles.profileImage} />\n            ) : (\n              <View style={styles.profileImagePlaceholder}>\n                <MaterialCommunityIcons name=\"camera\" size={40} color=\"#ccc\" />\n              </View>\n            )}\n          </TouchableOpacity>\n          {/* Pet Type Selection */}\n          <View style={styles.tabContainer}>\n            {renderTab('Dog')}\n            {renderTab('Cat')}\n            {renderTab('Exotic')}\n          </View>\n          <TextInput \n            label=\"Pet Name\" \n            value={petName} \n            onChangeText={handleInputChange(setPetName)} \n            placeholder={pet ? pet.name : \"Enter pet name\"} \n          />\n          {animalType === 'Exotic' && (\n            <TextInput \n              label=\"Pet Type\" \n              value={pet.animal_type ? pet.animal_type : ''} \n              onChangeText={handleInputChange(setPetType)} \n              placeholder={pet ? pet.animal_type : \"Enter pet type\"} \n            />\n          )}\n          <TextInput \n            label=\"Weight (lbs)\" \n            value={weight.toString()} \n            onChangeText={handleInputChange(setWeight)} \n            keyboardType=\"numeric\" \n          />\n          {renderEstimatedBirthday()}\n          <TextInput\n            label=\"Age in Years\"\n            value={ageYears.toString() ? ageYears.toString() : ''}\n            onChangeText={handleInputChange(setAgeYears)}\n            keyboardType=\"numeric\"\n            maxLength={2}\n          />\n          <TextInput\n            label=\"Age in Months\"\n            value={ageMonths === '' ? '' : ageMonths === '0' ? '0' : ageMonths.toString()}\n            onChangeText={handleInputChange(setAgeMonths)}\n            keyboardType=\"numeric\"\n            maxLength={2}\n          />\n          <TextInput \n            label=\"Breed\" \n            value={breed} \n            onChangeText={handleInputChange(setBreed)} \n          />\n          <Text style={styles.boldLabel}>Sex:</Text>\n          {renderSexButtons(sex, setSex)}\n          {(animalType === 'Dog' || animalType === 'Cat') && (\n            <>\n                <Text style={styles.boldLabel}>Friendly with Children:</Text>\n                {renderYesNoButtons(friendlyWithChildren, setFriendlyWithChildren)}\n                <Text style={styles.boldLabel}>Friendly with Cats:</Text>\n                {renderYesNoButtons(friendlyWithCats, setFriendlyWithCats)}\n                <Text style={styles.boldLabel}>Friendly with Dogs:</Text>\n                {renderYesNoButtons(friendlyWithDogs, setFriendlyWithDogs)}\n                <Text style={styles.boldLabel}>Spayed/Neutered:</Text>\n                {renderYesNoButtons(spayedNeutered, setSpayedNeutered)}\n                <Text style={styles.boldLabel}>House Trained:</Text>\n                {renderYesNoButtons(houseTrained, setHouseTrained)}\n                <Text style={styles.boldLabel}>Microchipped:</Text>\n                {renderYesNoButtons(microchipped, setMicrochipped)}\n            </>\n            )}\n          <Text style={styles.boldLabel}>Adoption Date:</Text>\n          {/* TODO: change this to the DatePicker.js file i have */}\n          {Platform.OS === 'web' ? (\n            <View style={styles.timePickerContainer}>\n              <input\n                type=\"date\"\n                value={format(adoptionDate, 'yyyy-MM-dd')}\n                onChange={(e) => {\n                  const date = new Date(e.target.value);\n                  setAdoptionDate(date);\n                }}\n                style={styles.webTimePicker}\n              />\n            </View>\n          ) : (\n            <DateTimePicker\n              value={adoptionDate}\n              mode=\"date\"\n              display=\"default\"\n              onChange={(event, selectedDate) => {\n                if (selectedDate) {\n                  setAdoptionDate(selectedDate);\n                }\n              }}\n            />\n          )}\n          <View style={{ height: 16 }} />\n          <View style={styles.inputContainer}>\n            <TextInput\n              label=\"Pet Description\"\n              value={description}\n              onChangeText={handleInputChange(setDescription)}\n              maxLength={1000}\n              multiline\n              style={styles.descriptionInput}\n            />\n          </View>\n\n          {/* Care Information Section */}\n          <Text style={styles.sectionHeader}>\n            <MaterialCommunityIcons name=\"heart\" size={20} /> Care Information\n          </Text>\n          {(petType === 'Dog') && (\n            <>\n              <Text style={styles.boldLabel}>Potty Break Schedule:</Text>\n              {renderToggleButtons(['2 hours', '4 hours', '8 hours', 'Custom'], pottyBreakSchedule, setPottyBreakSchedule, true, customPottyBreak, setCustomPottyBreak)}\n            </>\n          )}\n          <Text style={styles.boldLabel}>Energy Level:</Text>\n          {renderToggleButtons(['High', 'Moderate', 'Low'], energyLevel, setEnergyLevel)}\n          <Text style={styles.boldLabel}>Feeding Schedule:</Text>\n          {renderToggleButtons(['Morning', 'Twice a day', 'Custom'], feedingSchedule, setFeedingSchedule, true, customFeedingSchedule, setCustomFeedingSchedule)}\n          <Text style={styles.boldLabel}>Can Be Left Alone:</Text>\n          {renderToggleButtons(['<1 hour', '1-4 hours', '4-8 hours', 'Custom'], leftAlone, setLeftAlone, true, customLeftAlone, setCustomLeftAlone)}\n          <Text style={styles.boldLabel}>Medication:</Text>\n          {renderToggleButtons(['Pill', 'Topical', 'Injection'], medication, setMedication, true, medicationDetails, setMedicationDetails)}\n          {/* <View style={{ height: 16 }} /> */}\n          <View style={styles.inputContainer}>\n            <TextInput\n              label=\"Anything Else The Professional Should Know\"\n              value={additionalInstructions}\n              onChangeText={handleInputChange(setAdditionalInstructions)}\n              maxLength={1000}\n              multiline\n              style={styles.descriptionInput}\n              placeholder=\"Add custom instructions\"\n            />\n          </View>\n\n          {/* Health Information Section */}\n          <Text style={styles.sectionHeader}>\n            <MaterialCommunityIcons name=\"medical-bag\" size={20} /> Health Information\n          </Text>\n\n          <TextInput \n            label=\"Veterinarian Name\"\n            value={vetName}\n            onChangeText={handleInputChange(setVetName)}\n          />\n\n          <TextInput \n            label=\"Veterinarian Address\"\n            value={vetAddress}\n            onChangeText={handleInputChange(setVetAddress)}\n            multiline\n          />\n\n          <TextInput \n            label=\"Veterinarian Phone\"\n            value={vetPhone}\n            onChangeText={handleInputChange(setVetPhone)}\n            keyboardType=\"phone-pad\"\n          />\n\n          <TextInput \n            label=\"Pet Insurance Provider\"\n            value={insuranceProvider}\n            onChangeText={handleInputChange(setInsuranceProvider)}\n            style={styles.input}\n          />\n\n          <Text style={styles.boldLabel}>Veterinary Documents:</Text>\n          <View style={styles.documentsContainer}>\n            <TouchableOpacity style={styles.uploadButton} onPress={pickVetDocuments}>\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color=\"#666\" />\n              <Text style={styles.uploadText}>Upload Documents</Text>\n            </TouchableOpacity>\n            {vetDocuments.length > 0 && (\n              <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.documentsList}>\n                {vetDocuments.map((doc, index) => (\n                  <Image \n                    key={index}\n                    source={{ uri: doc.uri }}\n                    style={styles.documentThumbnail}\n                  />\n                ))}\n              </ScrollView>\n            )}\n          </View>\n\n          {/* Photo Gallery Section */}\n          <View style={styles.gallerySection && styles.scrollViewContent}>\n            <Text style={styles.sectionHeader}>\n              <MaterialCommunityIcons name=\"image-multiple\" size={20} /> Photo Gallery\n            </Text>\n\n            <TouchableOpacity style={styles.uploadButton} onPress={pickGalleryImages}>\n              <MaterialCommunityIcons name=\"image-plus\" size={24} color=\"#666\" />\n              <Text style={styles.uploadText}>Add Photos</Text>\n            </TouchableOpacity>\n\n            {galleryImages.length > 0 && (\n              <View style={styles.galleryContainer}>\n                {galleryImages.map((image, index) => (\n                  <Image \n                    key={index}\n                    source={{ uri: image.uri }}\n                    style={styles.galleryThumbnail}\n                    resizeMode=\"cover\"\n                  />\n                ))}\n              </View>\n            )}\n          </View>\n        </View>\n      </ScrollView>\n      <FloatingSaveButton \n        visible={hasUnsavedChanges}\n        onSave={handleSaveProfile}\n        btnText={'Save Profile'}\n      />\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  scrollContent: {\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingVertical: 16,\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n  },\n  formContainer: {\n    width: Platform.OS === 'web' && screenWidth > 600 ? '40%' : '90%',\n    alignItems: 'center', // Center horizontally\n    paddingBottom: 16,\n  },\n  profileImageContainer: {\n    marginBottom: 16,\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n  },\n  profileImagePlaceholder: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputContainer: {\n    // marginBottom: 8,\n    width: '100%', // Ensure the container takes full width\n    alignItems: 'center', // Center the input within the container\n    paddingBottom: Platform.OS === 'web' ? 0 : 40,\n    flex: 1,\n  },\n  label: {\n    fontSize: 16,\n    marginBottom: 8,\n    marginTop: 16,\n    textAlign: 'center', // Center the label text\n  },\n  boldLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  sectionHeader: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    marginVertical: 16,\n    alignSelf: 'flex-start',\n    textAlign: 'left',\n  },\n  webInput: {\n    width: '100%', // Full width for web input\n    minHeight: 24, // Set a minimum height\n    padding: 8,\n    fontSize: 16,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    resize: 'none', // Prevent textarea from being resizable\n  },\n  input: {\n    width: '100%', // Full width for mobile input\n    height: 40, // Set a consistent height for mobile inputs\n    padding: 8,\n    fontSize: 16,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n  },\n  descriptionInput: {\n    width: '100%',\n    minHeight: 90, // Increased height for better visibility\n    padding: 8,\n    fontSize: 16,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    textAlignVertical: 'center',\n    // marginTop: 32, // Added margin to separate from the adoption date\n  },\n  customInput: {\n    width: '100%',\n    padding: 8,\n    fontSize: 16,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 4,\n    marginBottom: 8, // Add a smaller margin bottom\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  tab: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: '#ccc',\n  },\n  activeTab: {\n    backgroundColor: '#ddd',\n  },\n  leftTab: {\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n  },\n  rightTab: {\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n  },\n  tabText: {\n    fontSize: 16,\n  },\n  toggleContainer: {\n    width: '100%',\n    marginBottom: 8, // Reduce this from 16 to 8\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 8,\n  },\n  yesNoContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 16,\n  },\n  yesNoButton: {\n    marginHorizontal: 10,\n    padding: 10,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 80, // Ensure the button is wide enough to prevent text wrapping\n  },\n  activeYesNoButton: {\n    backgroundColor: '#ddd',\n  },\n  yesNoText: {\n    fontSize: 16,\n  },\n  datePicker: {\n    marginBottom: 16,\n    padding: 10,\n    // borderWidth: 1,\n    // borderColor: '#ccc',\n    borderRadius: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  dateText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    textAlign: 'center',\n  },\n  saveButton: {\n    marginTop: 16,\n    width: '100%',\n  },\n  timePickerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 16,\n  },\n  webTimePicker: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    fontSize: 16,\n  },\n  documentsContainer: {\n    marginVertical: 10,\n    width: '100%',\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    borderStyle: 'dashed',\n    marginBottom: 10,\n  },\n  uploadText: {\n    marginLeft: 8,\n    color: '#666',\n  },\n  documentsList: {\n    minHeight: 100 + 20, // Add fixed height to prevent collapse\n  },\n  documentThumbnail: {\n    width: 100,\n    height: 100,\n    marginRight: 10,\n    borderRadius: 4,\n  },\n  gallerySection: {\n    width: '100%',\n    marginTop: 16,\n  },\n  galleryContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    width: '100%',\n  },\n  galleryThumbnail: {\n    width: 100,\n    height: 100,\n    borderRadius: 4,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  scrollViewContent: {\n    paddingBottom: 100, // Add padding to prevent content from being hidden behind the button\n  },\n});\n\nexport default AddPet;\n","import React, { useEffect, useRef } from 'react';\nimport { View, Text, TouchableOpacity, ScrollView, StyleSheet, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst CustomMultiSelect = ({\n  label,\n  data,\n  value,\n  onChange,\n  placeholder,\n  isOpen,\n  setIsOpen,\n  containerStyle,\n  zIndex = 1,\n}) => {\n  const dropdownRef = useRef(null);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const handleClickOutside = (event) => {\n        if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n          setIsOpen(false);\n        }\n      };\n\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [setIsOpen]);\n\n  const getDisplayText = () => {\n    if (value.length === 0) return placeholder;\n    \n    const selectedItems = value.map(v => data.find(item => item.value === v)?.label || '');\n    const displayText = selectedItems[0];\n    \n    if (selectedItems.length > 1) {\n      return displayText.length > 30 \n        ? displayText.substring(0, 30) + '...'\n        : displayText + ', ...';\n    } else {\n      return displayText.length > 30 \n        ? displayText.substring(0, 30) + '...'\n        : displayText;\n    }\n  };\n\n  const handleRemoveItem = (itemValue, event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newValue = value.filter(v => v !== itemValue);\n    onChange(newValue);\n  };\n\n  const handleItemSelect = (itemValue, event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const newValue = value.includes(itemValue)\n      ? value.filter(v => v !== itemValue)\n      : [...value, itemValue];\n    onChange(newValue);\n  };\n\n  return (\n    <View style={[styles.container, { zIndex }, containerStyle]}>\n      {label && <Text style={styles.label}>{label}</Text>}\n      <View ref={dropdownRef} style={styles.dropdownContainer}>\n        <TouchableOpacity\n          style={styles.header}\n          onPress={() => setIsOpen(!isOpen)}\n        >\n          <Text style={value.length ? styles.selectedText : styles.placeholderText}>\n            {getDisplayText()}\n          </Text>\n          <MaterialCommunityIcons \n            name={isOpen ? \"chevron-up\" : \"chevron-down\"} \n            size={24} \n            color={theme.colors.primary} \n          />\n        </TouchableOpacity>\n\n        {isOpen && (\n          <View style={[styles.dropdown, { zIndex: zIndex + 1 }]}>\n            <ScrollView \n              nestedScrollEnabled={true}\n              style={styles.scrollView}\n              contentContainerStyle={styles.scrollViewContent}\n            >\n              {data.map((item) => (\n                <TouchableOpacity\n                  key={item.value}\n                  style={styles.item}\n                  onPress={(e) => handleItemSelect(item.value, e)}\n                  activeOpacity={0.7}\n                >\n                  <Text style={styles.itemText}>{item.label}</Text>\n                  {value.includes(item.value) && (\n                    <MaterialCommunityIcons \n                      name=\"check\" \n                      size={24} \n                      color={theme.colors.primary}\n                    />\n                  )}\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n          </View>\n        )}\n\n        {!isOpen && value.length > 0 && (\n          <View style={styles.chipsContainer}>\n            {value.map((v) => {\n              const item = data.find(item => item.value === v);\n              if (!item) return null;\n              return (\n                <View key={v} style={styles.chip}>\n                  <Text style={styles.chipText}>{item.label}</Text>\n                  <TouchableOpacity \n                    onPress={(e) => handleRemoveItem(v, e)}\n                    style={styles.chipRemove}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"close\" \n                      size={18} \n                      color={theme.colors.text} \n                    />\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  dropdownContainer: {\n    position: 'relative',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    // height: 50,\n    padding: 6,\n    // paddingHorizontal: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    backgroundColor: theme.colors.background,\n  },\n  dropdown: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    maxHeight: 200,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginTop: 4,\n    elevation: 1000,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    zIndex: 9999,\n  },\n  scrollView: {\n    maxHeight: 200,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n  item: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  itemText: {\n    fontSize: theme.fontSizes.medium + 2,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  placeholderText: {\n    color: theme.colors.placeholderText,\n    fontSize: theme.fontSizes.medium + 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.medium + 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  chipsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    // padding: 8,\n    gap: 8,\n    marginTop: 8,\n  },\n  chip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 16,\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  chipText: {\n    fontSize: theme.fontSizes.small + 2,\n    color: theme.colors.text,\n    marginRight: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  chipRemove: {\n    padding: 2,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n});\n\nexport default CustomMultiSelect;","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, TouchableWithoutFeedback } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst Tooltip = ({ children, content, position = 'right' }) => {\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <View>\n      <TouchableOpacity onPress={() => setVisible(true)}>\n        {children}\n      </TouchableOpacity>\n      <Modal\n        transparent\n        visible={visible}\n        onRequestClose={() => setVisible(false)}\n      >\n        <TouchableWithoutFeedback onPress={() => setVisible(false)}>\n          <View style={styles.modalOverlay}>\n            <View style={[styles.tooltipContainer, styles[position]]}>\n              <View style={styles.tooltipHeader}>\n                <TouchableOpacity onPress={() => setVisible(false)} style={styles.closeButton}>\n                  <Text style={styles.closeButtonText}>×</Text>\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.tooltipText}>{content}</Text>\n            </View>\n          </View>\n        </TouchableWithoutFeedback>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  tooltipContainer: {\n    backgroundColor: theme.colors.surface,\n    padding: theme.spacing.medium,\n    borderRadius: 8,\n    maxWidth: 300,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  tooltipText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    textAlign: 'center',\n  },\n  right: {\n    marginLeft: theme.spacing.medium,\n  },\n  left: {\n    marginRight: theme.spacing.medium,\n  },\n  top: {\n    marginBottom: theme.spacing.medium,\n  },\n  bottom: {\n    marginTop: theme.spacing.medium,\n  },\n  tooltipHeader: {\n    alignItems: 'flex-end',\n    marginBottom: theme.spacing.small,\n  },\n  closeButton: {\n    width: 24,\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 12,\n  },\n  closeButtonText: {\n    fontSize: 20,\n    color: theme.colors.text,\n    lineHeight: 20,\n  },\n});\n\nexport default Tooltip; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, TextInput } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { SERVICE_TYPES } from '../data/mockData';\n\nconst ServiceTypeSelect = ({ value, onChange }) => {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [filteredServices, setFilteredServices] = useState([]);\n\n  const handleTextChange = (text) => {\n    onChange(text);\n    if (text.length > 0) {\n      const filtered = SERVICE_TYPES.filter(service => \n        service.toLowerCase().includes(text.toLowerCase())\n      );\n      setFilteredServices(filtered);\n      setShowSuggestions(true);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSelectService = (service) => {\n    onChange(service);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Search services...\"\n        value={value}\n        onChangeText={handleTextChange}\n        onFocus={() => value.length > 0 && setShowSuggestions(true)}\n      />\n      {showSuggestions && (\n        <View style={styles.suggestionsWrapper}>\n          <ScrollView \n            style={styles.suggestionsContainer}\n            keyboardShouldPersistTaps=\"always\"\n            nestedScrollEnabled={true}\n          >\n            {filteredServices.map((service, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.suggestionItem}\n                onPress={() => handleSelectService(service)}\n              >\n                <Text>{service}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    position: 'relative',\n    marginRight: theme.spacing.medium,\n    marginBottom: theme.spacing.medium,\n    zIndex: 1000,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: theme.spacing.medium,\n    backgroundColor: theme.colors.surface,\n    width: '100%',\n  },\n  suggestionsWrapper: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    maxHeight: 200,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    zIndex: 1000,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  suggestionsContainer: {\n    flex: 1,\n  },\n  suggestionItem: {\n    padding: theme.spacing.medium,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n});\n\nexport default ServiceTypeSelect; ","import React, { useState, useRef, useCallback, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform, TextInput, ScrollView, Switch } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport Dropdown from 'react-native-element-dropdown/src/components/Dropdown';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\nimport Slider from '@react-native-community/slider';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport DatePicker from '../components/DatePicker';\nimport { debounce } from 'lodash';\nimport MultiSelect from 'react-native-element-dropdown/src/components/MultiSelect';\nimport CustomMultiSelect from '../components/CustomMultiSelect';\nimport { SERVICE_TYPES, GENERAL_CATEGORIES } from '../data/mockData';\nimport { AuthContext } from '../context/AuthContext';\nimport Tooltip from './Tooltip';\nimport ServiceTypeSelect from './ServiceTypeSelect';\n\nconst generalCategoriesData = GENERAL_CATEGORIES.map(category => ({\n  label: category,\n  value: category.toLowerCase().replace(/\\s+/g, '-')\n}));\n\nconst LocationInput = ({ value, onChange, suggestions, onSuggestionSelect }) => {\n  const locationInputRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const debouncedFetch = useCallback(\n    debounce(async (text) => {\n      if (text.length < 1) return;\n      \n      try {\n        const response = await fetch(\n          `https://nominatim.openstreetmap.org/search?format=json&q=${text}&countrycodes=us&limit=5`,\n          {\n            headers: {\n              'Accept': 'application/json',\n              'User-Agent': 'ZenExotics Mobile App'\n            }\n          }\n        );\n        const data = await response.json();\n        const suggestions = data.map(item => ({\n          display_name: item.display_name,\n          lat: item.lat,\n          lon: item.lon\n        }));\n        onSuggestionSelect(suggestions);\n      } catch (error) {\n        console.error('Error fetching locations:', error);\n        onSuggestionSelect([]);\n      }\n    }, 300),\n    [onSuggestionSelect]\n  );\n\n  return (\n    <View style={[styles.locationInputWrapper, { zIndex: 2 }]}>\n      <TextInput\n        ref={locationInputRef}\n        style={styles.locationInput}\n        placeholder=\"Enter city, state, or zip\"\n        value={value}\n        onChangeText={(text) => {\n          onChange(text);\n          if (text.length < 1) {\n            onSuggestionSelect([]);\n          } else {\n            debouncedFetch(text);\n          }\n        }}\n      />\n      {suggestions.length > 0 && (\n        <View style={styles.suggestionsWrapper}>\n          <ScrollView \n            style={styles.suggestionsContainer}\n            keyboardShouldPersistTaps=\"always\"\n            nestedScrollEnabled={true}\n          >\n            {suggestions.map((suggestion, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.suggestionItem}\n                onPress={() => {\n                  onChange(suggestion.display_name);\n                  onSuggestionSelect([]);\n                }}\n              >\n                <Text>{suggestion.display_name}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst AnimalTypeButton = ({ icon, label, selected, onPress }) => (\n  <TouchableOpacity \n    style={[styles.animalTypeButton, selected && styles.animalTypeButtonSelected]} \n    onPress={onPress}\n  >\n    <MaterialCommunityIcons \n      name={icon} \n      size={24} \n      color={selected ? theme.colors.whiteText : theme.colors.text} \n    />\n    <Text style={[styles.animalTypeLabel, selected && styles.animalTypeLabelSelected]}>\n      {label}\n    </Text>\n  </TouchableOpacity>\n);\n\nconst SearchRefiner = ({ onFiltersChange, onShowProfessionals, isMobile }) => {\n  const [location, setLocation] = useState('');\n  const [locationSuggestions, setLocationSuggestions] = useState([]);\n  const [service, setService] = useState('');\n  const [selectedAnimals, setSelectedAnimals] = useState([]);\n  const [overnightService, setOvernightService] = useState(false);\n  const [priceRange, setPriceRange] = useState(200);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [verifiedOnly, setVerifiedOnly] = useState(false);\n  const [insuredOnly, setInsuredOnly] = useState(false);\n  const { screenWidth } = useContext(AuthContext);\n\n  const handleAnimalSelect = (animal) => {\n    if (selectedAnimals.includes(animal)) {\n      setSelectedAnimals(selectedAnimals.filter(a => a !== animal));\n    } else {\n      setSelectedAnimals([...selectedAnimals, animal]);\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Refine Search</Text>\n        <TouchableOpacity style={styles.personButton} onPress={onShowProfessionals}>\n          <MaterialCommunityIcons name=\"account-group\" size={24} color={theme.colors.text} />\n        </TouchableOpacity>\n        {isMobile && (\n          <View style={styles.headerButtons}>\n            <TouchableOpacity \n              style={styles.iconButton}\n              onPress={() => {\n                if (onShowProfessionals) {\n                  // Pass a special parameter to indicate we want to switch to map view\n                  onShowProfessionals('map');\n                }\n              }}\n            >\n              <MaterialCommunityIcons name=\"map\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n\n      <Text style={styles.label}>I'm looking for services for my:</Text>\n      <View style={styles.animalTypesContainer}>\n        <AnimalTypeButton\n          icon=\"dog\"\n          label=\"Dogs\"\n          selected={selectedAnimals.includes('dogs')}\n          onPress={() => handleAnimalSelect('dogs')}\n        />\n        <AnimalTypeButton\n          icon=\"cat\"\n          label=\"Cats\"\n          selected={selectedAnimals.includes('cats')}\n          onPress={() => handleAnimalSelect('cats')}\n        />\n        <AnimalTypeButton\n          icon=\"fish\"\n          label=\"Fish\"\n          selected={selectedAnimals.includes('fish')}\n          onPress={() => handleAnimalSelect('fish')}\n        />\n        <AnimalTypeButton\n          icon=\"bird\"\n          label=\"Birds\"\n          selected={selectedAnimals.includes('birds')}\n          onPress={() => handleAnimalSelect('birds')}\n        />\n      </View>\n\n      {/* Service Input */}\n      <Text style={styles.label}>What service do you need? (e.g., Dog Walking, Pet Sitting)</Text>\n      <ServiceTypeSelect\n        value={service}\n        onChange={setService}\n      />\n      \n      {/* Location Input */}\n      <Text style={styles.label}>Location</Text>\n      <View style={styles.locationContainer}>\n      <LocationInput\n        value={location}\n        onChange={setLocation}\n        suggestions={locationSuggestions}\n        onSuggestionSelect={setLocationSuggestions}\n      />\n        <TouchableOpacity style={[styles.useLocationButton, { marginBottom: 16 }]}>\n          <MaterialCommunityIcons name=\"crosshairs-gps\" size={20} color={theme.colors.text} />\n          <Text style={styles.useLocationText}>Use My Location</Text>\n        </TouchableOpacity>\n      </View>\n\n      {/* Overnight Service */}\n      <View style={styles.switchContainer}>\n        <Text style={styles.label}>Overnight Service</Text>\n        <Switch\n          value={overnightService}\n          onValueChange={setOvernightService}\n          trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\n        />\n      </View>\n\n      {/* Price Range */}\n      <Text style={styles.label}>Price Range</Text>\n      <View style={styles.priceContainer}>\n        <Text style={styles.priceLabel}>$0</Text>\n        <Slider\n          style={styles.slider}\n          minimumValue={0}\n          maximumValue={250}\n          value={priceRange}\n          onValueChange={setPriceRange}\n          minimumTrackTintColor={theme.colors.primary}\n          maximumTrackTintColor={theme.colors.border}\n          thumbTintColor={theme.colors.primary}\n          step={1}\n        />\n        <Text style={styles.priceLabel}>${Math.round(priceRange)}</Text>\n      </View>\n\n      {/* Date Selection */}\n      <Text style={styles.label}>Date Range</Text>\n      <View style={styles.datePickersContainer}>\n        <DatePicker\n          label=\"Start Date\"\n          value={startDate}\n          onChange={setStartDate}\n        />\n        <DatePicker\n          label=\"End Date\"\n          value={endDate}\n          onChange={setEndDate}\n        />\n      </View>\n\n      {/* Verification Options */}\n      <View style={styles.checkboxContainer}>\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setVerifiedOnly(!verifiedOnly)}\n          >\n            {verifiedOnly && <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <Text style={styles.checkboxLabel}>Verified Professionals Only</Text>\n            <Tooltip \n              content=\"Verified professionals have completed our background check and identity verification process.\"\n              position=\"right\"\n            >\n              <MaterialCommunityIcons name=\"help-circle-outline\" size={20} color={theme.colors.text} />\n            </Tooltip>\n          </View>\n      </View>\n\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setInsuredOnly(!insuredOnly)}\n          >\n            {insuredOnly && <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <Text style={styles.checkboxLabel}>Insured Service Providers</Text>\n            <Tooltip \n              content=\"Insured providers maintain current liability insurance coverage for their services.\"\n              position=\"right\"\n            >\n              <MaterialCommunityIcons name=\"help-circle-outline\" size={20} color={theme.colors.text} />\n            </Tooltip>\n          </View>\n        </View>\n      </View>\n\n      {/* Search Button - Always show */}\n      <TouchableOpacity \n        style={styles.searchButton}\n        onPress={() => {\n          if (isMobile) {\n            // For mobile, we need to switch to the list view\n            onShowProfessionals();\n          } else {\n            // For desktop, just show professionals\n            onShowProfessionals();\n          }\n        }}\n      >\n        <Text style={styles.searchButtonText}>Search</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.medium,\n    backgroundColor: theme.colors.surface,\n    height: '100%',\n    width: '100%',\n    overflow: 'visible',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.xlarge,\n    gap: theme.spacing.small,\n  },\n  title: {\n    fontSize: theme.fontSizes.xlarge,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  section: {\n    marginBottom: theme.spacing.xlarge,\n    position: 'relative',\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginVertical: theme.spacing.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdown: {\n    height: 48,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: theme.spacing.medium,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  locationInputWrapper: {\n    position: 'relative',\n    marginBottom: theme.spacing.small,\n    zIndex: 900,\n  },\n  locationInput: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: theme.spacing.medium,\n    backgroundColor: theme.colors.background,\n    fontSize: theme.fontSizes.medium,\n  },\n  suggestionsWrapper: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    maxHeight: 200,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    zIndex: 900,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  suggestionsContainer: {\n    flex: 1,\n  },\n  suggestionItem: {\n    padding: theme.spacing.medium,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  datePickersContainer: {\n    flexDirection: 'column',\n    gap: theme.spacing.medium,\n    marginRight: 16,\n    zIndex: 500,\n  },\n  datePickerWrapper: {\n    width: '100%',\n  },\n  dateLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  dateInput: {\n    height: 48,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: theme.spacing.medium,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    fontSize: theme.fontSizes.medium,\n  },\n  priceRangeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: theme.spacing.medium,\n    marginTop: theme.spacing.small,\n  },\n  slider: {\n    flex: 1,\n    height: 48,\n    marginHorizontal: theme.spacing.medium,\n  },\n  priceText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    minWidth: 50,\n  },\n  selectedText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  placeholderText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.placeholderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    overflow: 'hidden',\n  },\n  dropdownItem: {\n    padding: theme.spacing.medium,\n  },\n  dropdownItemSelected: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    margin: 4,\n  },\n  dropdownItemText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownItemTextSelected: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  personButton: {\n    padding: theme.spacing.small,\n    borderRadius: 8,\n    marginLeft: 'auto',\n  },\n  showProfessionalsButton: {\n    backgroundColor: theme.colors.primary,\n    padding: theme.spacing.medium,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: theme.spacing.large,\n  },\n  showProfessionalsText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  locationContainer: {\n    flexDirection: 'column',\n    width: '100%',\n    gap: theme.spacing.small,\n    zIndex: 900,\n    position: 'relative',\n  },\n  useLocationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: theme.spacing.small,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    gap: 4,\n    alignSelf: 'flex-start',\n  },\n  useLocationText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: theme.spacing.medium,\n    backgroundColor: theme.colors.surface,\n  },\n  animalTypesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing.small,\n    marginTop: theme.spacing.small,\n    marginBottom: theme.spacing.medium,\n    zIndex: 800,\n  },\n  animalTypeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: theme.spacing.small,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    gap: 4,\n  },\n  animalTypeButtonSelected: {\n    backgroundColor: theme.colors.primary,\n    borderColor: theme.colors.primary,\n  },\n  animalTypeLabel: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  animalTypeLabelSelected: {\n    color: theme.colors.whiteText,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: Platform.OS === 'web' ? 'space-between' : 'flex-start',\n    marginVertical: theme.spacing.small,\n    gap: theme.spacing.medium,\n    zIndex: 700,\n  },\n  priceContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: theme.spacing.small,\n    zIndex: 600,\n  },\n  priceLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    minWidth: 50,\n  },\n  checkboxContainer: {\n    marginTop: theme.spacing.medium,\n    gap: theme.spacing.small,\n    zIndex: 400,\n  },\n  checkboxRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: theme.spacing.small,\n  },\n  checkbox: {\n    width: 24,\n    height: 24,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.surface,\n  },\n  checkboxLabel: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  headerButtons: {\n    flexDirection: 'row',\n    gap: theme.spacing.small,\n  },\n  iconButton: {\n    padding: theme.spacing.small,\n    borderRadius: 8,\n  },\n  checkboxLabelContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingRight: theme.spacing.small,\n  },\n  searchButton: {\n    backgroundColor: theme.colors.primary,\n    padding: theme.spacing.medium,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: theme.spacing.large,\n    marginBottom: theme.spacing.large,\n  },\n  searchButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n});\n\nexport default SearchRefiner;","import React from 'react';\nimport { View, Text, FlatList, StyleSheet, Image, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\n\nconst ProfessionalCard = ({ professional, index }) => {\n  const navigation = useNavigation();\n  \n  const handlePress = () => {\n    navigation.navigate('ProfessionalProfile', { \n      professional: professional \n    });\n  };\n\n  return (\n    <TouchableOpacity style={styles.listItem} onPress={handlePress}>\n      <View style={styles.cardContent}>\n        <View style={styles.leftSection}>\n      <Image \n            source={professional.profilePicture} \n        style={styles.profileImage}\n      />\n        </View>\n        \n        <View style={styles.mainContent}>\n        <View style={styles.header}>\n            <View style={styles.nameSection}>\n              <Text style={styles.name}>{index + 1}. {professional.name}</Text>\n              <Text style={styles.location}>{professional.location}</Text>\n              {professional.distance && (\n                <Text style={styles.distance}>{professional.distance}</Text>\n              )}\n            </View>\n            \n            <View style={styles.priceSection}>\n              <Text style={styles.fromText}>from</Text>\n              <Text style={styles.amount}>\n                <Text style={styles.dollarSign}>$</Text>\n                {professional.price}\n              </Text>\n              <Text style={styles.perNight}>per night</Text>\n            </View>\n          </View>\n        </View>\n          </View>\n\n      <View style={styles.reviewSection}>\n        <View style={styles.ratingContainer}>\n          <MaterialCommunityIcons name=\"star\" size={16} color=\"#FFD700\" />\n          <Text style={styles.ratingText}>{professional.rating}</Text>\n          <Text style={styles.dot}> • </Text>\n          <Text style={styles.reviews}>{professional.reviewCount} reviews</Text>\n          {professional.repeat_owners && (\n            <>\n              <Text style={styles.dot}> • </Text>\n              <MaterialCommunityIcons name=\"sync\" size={16} color={theme.colors.text} />\n              <Text style={styles.repeatOwners}> {professional.repeat_owners} repeat owners</Text>\n            </>\n          )}\n        </View>\n        \n        {professional.bestReview && (\n          <View style={styles.bestReviewContainer}>\n            <Image \n              source={require('../../assets/default-profile.png')}\n              style={styles.reviewerImage}\n            />\n            <View style={styles.bestReviewTextContainer}>\n              <Text style={styles.bestReview} numberOfLines={2}>\n                \"{professional.bestReview}\"\n                <Text style={styles.readMore}> Read more</Text>\n              </Text>\n            </View>\n          </View>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst ProfessionalList = ({ professionals, onLoadMore, onProfessionalSelect, isMobile, filters, onFilterPress }) => {\n  const renderHeader = () => (\n    <View style={[styles.header, {borderBottomWidth: 1, borderBottomColor: theme.colors.border, paddingBottom: theme.spacing.medium}]}>\n      <View style={styles.headerContent}>\n        <Text style={styles.headerTitle}>Pet Care Professionals</Text>\n        <View style={styles.filterChips}>\n          {filters?.categories?.map((filter, index) => (\n            <View key={index} style={styles.filterChip}>\n              <Text style={styles.filterChipText}>{filter}</Text>\n            </View>\n          ))}\n        </View>\n      </View>\n      <View style={styles.headerButtons}>\n        <TouchableOpacity style={styles.filterButton} onPress={onFilterPress}>\n          <MaterialCommunityIcons name=\"filter\" size={24} color={theme.colors.text} />\n        </TouchableOpacity>\n        {isMobile && (\n          <TouchableOpacity \n            style={styles.filterButton} \n            onPress={() => {\n              // Navigate to the map view\n              if (onFilterPress) {\n                // Pass a special parameter to indicate we want to switch to map view\n                onFilterPress('map');\n              }\n            }}\n          >\n            <MaterialCommunityIcons name=\"map\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      {renderHeader()}\n      <FlatList\n        data={professionals}\n        renderItem={({ item, index }) => (\n          <ProfessionalCard \n            professional={item}\n            index={index}\n            onPress={() => onProfessionalSelect(item)}\n          />\n        )}\n        keyExtractor={(item) => item.id.toString()}\n        onEndReached={onLoadMore}\n        onEndReachedThreshold={0.5}\n        contentContainerStyle={styles.listContent}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  listContent: {\n    flexGrow: 1,\n    // padding: theme.spacing.medium,\n  },\n  listItem: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    // marginBottom: theme.spacing.medium,\n    // borderRadius: 12,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    paddingHorizontal: theme.spacing.medium,\n    paddingTop: theme.spacing.medium,\n  },\n  leftSection: {\n    marginRight: theme.spacing.medium,\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n  },\n  mainContent: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n  },\n  nameSection: {\n    flex: 1,\n    marginRight: theme.spacing.medium,\n  },\n  name: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  location: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    marginBottom: 2,\n  },\n  distance: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  priceSection: {\n    alignItems: 'flex-end',\n  },\n  fromText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  amount: {\n    fontSize: theme.fontSizes.large + 4,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginVertical: 2,\n  },\n  dollarSign: {\n    color: theme.colors.primary,\n  },\n  perNight: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  reviewSection: {\n    paddingHorizontal: theme.spacing.medium,\n    paddingVertical: theme.spacing.small,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small,\n  },\n  ratingText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n    marginLeft: 4,\n  },\n  dot: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  reviews: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  repeatOwners: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  bestReviewContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  reviewerImage: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    marginRight: theme.spacing.small,\n  },\n  bestReviewTextContainer: {\n    flex: 1,\n  },\n  bestReview: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontStyle: 'italic',\n  },\n  readMore: {\n    color: theme.colors.primary,\n    fontStyle: 'normal',\n    fontWeight: '500',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    paddingHorizontal: theme.spacing.medium,\n    paddingTop: theme.spacing.medium,\n    backgroundColor: theme.colors.surfaceContrast,\n    \n  },\n  mobileHeaderRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerContent: {\n    flex: 1,\n    marginRight: theme.spacing.medium,\n  },\n  headerTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n  },\n  filterChips: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing.small,\n  },\n  filterChip: {\n    backgroundColor: theme.colors.background,\n    paddingHorizontal: theme.spacing.medium,\n    paddingVertical: theme.spacing.small,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  filterChipText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n  },\n  filterButton: {\n    padding: theme.spacing.small,\n    borderRadius: 8,\n  },\n  headerButtons: {\n    flexDirection: 'row',\n    gap: theme.spacing.small,\n  },\n});\n\nexport default ProfessionalList;","import React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { theme } from '../styles/theme';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst MapView = ({ professionals, onMarkerPress, region, isMobile }) => {\n  if (Platform.OS === 'web') {\n    return (\n      <WebMapComponent\n        professionals={professionals}\n        onMarkerPress={onMarkerPress}\n        region={region}\n        isMobile={isMobile}\n      />\n    );\n  }\n\n  return (\n    <NativeMapComponent\n      professionals={professionals}\n      onMarkerPress={onMarkerPress}\n      region={region}\n      isMobile={isMobile}\n    />\n  );\n};\n\nconst WebMapComponent = ({ professionals, onMarkerPress, region, isMobile }) => {\n  const MarkerIcon = L.divIcon({\n      className: 'custom-marker',\n      html: `<div style=\"\n      width: 32px;\n      height: 32px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    \">\n      <svg viewBox=\"0 0 24 24\" width=\"32\" height=\"32\">\n        <path fill=\"${theme.colors.primary}\" d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/>\n      </svg>\n    </div>`,\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32],\n  });\n\n  return (\n    <div style={styles.mapContainer}>\n      <MapContainer\n        center={[region.latitude, region.longitude]}\n        zoom={13}\n        style={{ height: '100%', width: '100%' }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {professionals.map((professional, index) => (\n          <Marker\n            key={professional.id}\n            position={[professional.coordinates.latitude, professional.coordinates.longitude]}\n            icon={MarkerIcon}\n            eventHandlers={{\n              click: () => onMarkerPress(professional),\n            }}\n          >\n            <Popup>\n              <div style={styles.popupContent}>\n                <h3 style={{\n                  margin: '0 0 8px 0',\n                  fontSize: '16px',\n                  fontWeight: '600',\n                  fontFamily: theme.fonts.header.fontFamily,\n                }}>{professional.name}</h3>\n                <p style={{\n                  margin: '0 0 4px 0',\n                  fontSize: '14px',\n                  color: theme.colors.textSecondary,\n                }}>{professional.location}</p>\n                <p style={{\n                  margin: '0',\n                  fontSize: '14px',\n                  fontWeight: '500',\n                  color: theme.colors.primary,\n                }}>from ${professional.startingRate}/night</p>\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nconst NativeMapComponent = ({ professionals, onMarkerPress, region, isMobile }) => {\n  return (\n    <View style={styles.mapContainer}>\n      {/* Implement native map component here if needed */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mapContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n  },\n  map: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n  },\n  markerContainer: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 20,\n    padding: theme.spacing.small,\n    borderWidth: 2,\n    borderColor: 'white',\n  },\n  markerText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n  },\n  calloutContainer: {\n    backgroundColor: theme.colors.surface,\n    padding: theme.spacing.small,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  calloutText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  popupContent: {\n    padding: 12,\n    minWidth: 200,\n  },\n});\n\nexport default MapView;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, Platform, Dimensions, TouchableOpacity, Text, useWindowDimensions, SafeAreaView } from 'react-native';\nimport SearchRefiner from '../components/SearchRefiner';\nimport ProfessionalList from '../components/ProfessionalList';\nimport MapView from '../components/MapView';\nimport { theme } from '../styles/theme';\nimport { mockProfessionals } from '../data/mockData'; // Import mock data\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { AuthContext } from '../context/AuthContext';\nimport BackHeader from '../components/BackHeader';\n\nconst SearchProfessionalsListing = ({ navigation, route }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isSingleView, setIsSingleView] = useState(screenWidth <= 1050);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [activeView, setActiveView] = useState(isSingleView ? 'filters' : 'all');\n  const [professionals, setProfessionals] = useState(mockProfessionals); // Use mock data\n  const [filters, setFilters] = useState({});\n  const [isMapMinimized, setIsMapMinimized] = useState(false);\n  const [isLeftColumnExpanded, setIsLeftColumnExpanded] = useState(false);\n  const [showingSearch, setShowingSearch] = useState(true);\n  const [region, setRegion] = useState({\n    latitude: 38.8339,\n    longitude: -104.8214,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421,\n  });\n  const [activeFilters, setActiveFilters] = useState({\n    categories: ['Dogs', 'Within 5 miles'],\n    // Add other filter categories as needed\n  });\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsSingleView(screenWidth <= 1050);\n      setIsMobile(screenWidth <= 900);\n      setActiveView(screenWidth <= 1050 ? 'filters' : 'all');\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      if (isSingleView) {\n        setActiveView('filters');\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, isSingleView]);\n\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    // Implement filtering logic here\n  };\n\n  const handleLoadMore = () => {\n    // Implement pagination logic\n  };\n\n  const handleProfessionalSelect = (professional) => {\n    navigation.navigate('ProfessionalProfile', { professional });\n  };\n\n  const toggleMapSize = () => {\n    setIsMapMinimized(!isMapMinimized);\n  };\n\n  const handleShowProfessionals = (view) => {\n    setShowingSearch(false);\n    if (isSingleView) {\n      if (view === 'map') {\n        setActiveView('map');\n      } else {\n        setActiveView('list');\n      }\n    }\n  };\n\n  const toggleLeftColumn = () => {\n    setIsLeftColumnExpanded(!isLeftColumnExpanded);\n    // If we're expanding the left column, make sure the map is minimized\n    if (!isLeftColumnExpanded) {\n      setIsMapMinimized(true);\n    }\n  };\n\n  const createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n      transition: 'margin-left 0.3s ease',\n    },\n    container: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh',\n      overflow: 'hidden',\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n      height: isMobile ? '100%' : 'calc(100vh - 64px)',\n      overflow: 'hidden',\n    },\n    leftColumn: {\n      height: '100%',\n      borderRightWidth: 1,\n      borderRightColor: theme.colors.border,\n      backgroundColor: theme.colors.background,\n      transition: 'width 0.3s ease',\n      position: 'relative',\n      zIndex: 1,\n    },\n    leftColumnToggle: {\n      position: 'absolute',\n      top: '50%',\n      right: -16,\n      transform: [{ translateY: -20 }],\n      zIndex: 2000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 20,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n      width: 32,\n      height: 32,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n    },\n    mapColumn: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100%',\n      transition: 'width 0.3s ease',\n      position: 'relative',\n      zIndex: 0,\n    },\n    toggleButton: {\n      position: 'absolute',\n      top: theme.spacing.medium,\n      right: theme.spacing.medium,\n      zIndex: 1000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 8,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n    toggleButtonText: {\n      color: theme.colors.primary,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n      fontWeight: '500',\n    },\n    containerMobile: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100%',\n      overflow: 'hidden',\n    },\n    mobileHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      borderBottomWidth: 2,\n      padding: 10,\n      marginHorizontal: 10,\n      backgroundColor: theme.colors.background,\n    },\n    mobileHeaderText: {\n      fontSize: theme.fontSizes.large,\n      fontWeight: '500',\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    \n    headerIcon: {\n      padding: 8,\n      marginLeft: 16,\n    },\n    searchButton: {\n      backgroundColor: theme.colors.primary,\n      padding: 10,\n      alignItems: 'center',\n      borderRadius: 5,\n      margin: 10,\n    },\n    searchButtonText: {\n      color: theme.colors.whiteText,\n      fontSize: theme.fontSizes.medium + 2,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    mapToggleButton: {\n      position: 'absolute',\n      top: theme.spacing.medium,\n      right: theme.spacing.medium,\n      zIndex: 1000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 8,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n  });\n\n  const styles = createStyles(screenWidth, isCollapsed);\n\n  const renderContent = () => {\n    if (!isSingleView) {\n      const leftColumnWidth = isLeftColumnExpanded ? '50%' : '33.333%';\n      const mapColumnWidth = isMapMinimized ? '50%' : '66.666%';\n\n      return (\n        <>\n          <View style={[styles.leftColumn, { width: leftColumnWidth }]}>\n            <TouchableOpacity \n              style={[styles.toggleButton, styles.leftColumnToggle]} \n              onPress={toggleLeftColumn}\n            >\n              <MaterialCommunityIcons \n                name={isLeftColumnExpanded ? \"chevron-left\" : \"chevron-right\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            {showingSearch ? (\n              <SearchRefiner \n                onFiltersChange={handleFiltersChange}\n                onShowProfessionals={handleShowProfessionals}\n              />\n            ) : (\n            <ProfessionalList\n              professionals={professionals}\n              onLoadMore={handleLoadMore}\n              onProfessionalSelect={handleProfessionalSelect}\n                isMobile={isMobile}\n                filters={activeFilters}\n                onFilterPress={(view) => {\n                  if (view === 'map') {\n                    setActiveView('map');\n                  } else {\n                    setActiveView('filters');\n                  }\n                }}\n            />\n            )}\n          </View>\n          <View style={[styles.mapColumn, { width: mapColumnWidth }]}>\n            <TouchableOpacity \n              style={[styles.toggleButton, styles.mapToggleButton]} \n              onPress={toggleMapSize}\n            >\n              <MaterialCommunityIcons \n                name={isMapMinimized ? \"arrow-expand\" : \"arrow-collapse\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            <MapView\n              professionals={professionals}\n              onMarkerPress={handleProfessionalSelect}\n              region={region}\n              isMobile={isMobile}\n            />\n          </View>\n        </>\n      );\n    }\n\n    // Single view (below 1050px)\n    return (\n      <View style={styles.containerMobile}>\n        {activeView === 'filters' && (\n          <>\n            <SearchRefiner \n              onFiltersChange={handleFiltersChange} \n              onShowProfessionals={handleShowProfessionals}\n              isMobile={isSingleView}\n            />\n          </>\n        )}\n        \n        {activeView === 'list' && (\n          <>\n            <ProfessionalList\n              professionals={professionals}\n              onLoadMore={handleLoadMore}\n              onProfessionalSelect={handleProfessionalSelect}\n              isMobile={isSingleView}\n              filters={activeFilters}\n              onFilterPress={(view) => {\n                if (view === 'map') {\n                  setActiveView('map');\n                } else {\n                  setActiveView('filters');\n                }\n              }}\n            />\n          </>\n        )}\n        \n        {activeView === 'map' && (\n          <>\n            <View style={styles.mobileHeader}>\n              <TouchableOpacity onPress={() => setActiveView('list')}>\n                <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n            </View>\n            <MapView\n              professionals={professionals}\n              onMarkerPress={handleProfessionalSelect}\n              region={region}\n              isMobile={isSingleView}\n            />\n          </>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        {isSingleView && (\n          <BackHeader \n            title=\"Search Results\" \n            onBackPress={() => navigation.goBack()}\n          />\n        )}\n        <View style={styles.content}>\n          {renderContent()}\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default SearchProfessionalsListing;\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, FlatList, TouchableOpacity, ActivityIndicator, Platform, Dimensions, ScrollView } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport BookingCard from '../components/BookingCard';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { handleBack, navigateToFrom } from '../components/Navigation';\nimport { API_BASE_URL } from '../config/config';\n\nconst MyBookings = () => {\n  const navigation = useNavigation();\n  const { isApprovedProfessional, userRole, is_DEBUG, isCollapsed, screenWidth } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth < 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1200);\n  const [activeTab, setActiveTab] = useState(userRole === 'professional' ? 'professional' : 'owner');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [hoveredFilter, setHoveredFilter] = useState(null);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n      setIsWideScreen(Dimensions.get('window').width >= 1200);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  // Handle role changes\n  useEffect(() => {\n    if (userRole === 'professional' && isApprovedProfessional) {\n      setActiveTab('professional');\n    }\n  }, [userRole, isApprovedProfessional]);\n\n  const fetchBookings = async (pageNum = 1, isLoadMore = false) => {\n    if (isLoadMore) {\n      setIsLoadingMore(true);\n    } else {\n      setLoading(true);\n      setError(null);\n    }\n\n    try {\n      let token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Fetching bookings:', {\n          isApprovedProfessional,\n          userRole,\n          activeTab,\n          page: pageNum,\n          status: activeFilter\n        });\n      }\n\n      const response = await axios.get(\n        `${API_BASE_URL}/api/bookings/v1/`,\n        { \n          headers: { Authorization: `Bearer ${token}` },\n          params: {\n            page: pageNum,\n            page_size: 20,\n            status: activeFilter\n          }\n        }\n      );\n\n      const newBookings = activeTab === 'professional' \n        ? response.data.bookings.professional_bookings || []\n        : response.data.bookings.owner_bookings || [];\n\n      if (isLoadMore) {\n        setBookings(prev => [...prev, ...newBookings]);\n      } else {\n        setBookings(newBookings);\n      }\n\n      setHasMore(newBookings.length === 20);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n      setError('Failed to fetch bookings');\n    } finally {\n      setLoading(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  // Fetch bookings when component mounts or when dependencies change\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Fetching bookings due to dependency change:', {\n        activeTab,\n        userRole,\n        isApprovedProfessional,\n        activeFilter\n      });\n    }\n    setPage(1);\n    setBookings([]);\n    fetchBookings(1);\n  }, [activeTab, userRole, isApprovedProfessional, activeFilter]);\n\n  // Handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    \n    if (!query.trim()) {\n      setPage(1);\n      setBookings([]);\n      fetchBookings(1);\n      return;\n    }\n\n    const searchLower = query.toLowerCase();\n    const filtered = bookings.filter(booking => {\n      if (activeTab === 'professional') {\n        return (\n          booking.id.toLowerCase().includes(searchLower) ||\n          booking.ownerName.toLowerCase().includes(searchLower)\n        );\n      } else {\n        return (\n          booking.id.toLowerCase().includes(searchLower) ||\n          booking.professionalName.toLowerCase().includes(searchLower)\n        );\n      }\n    });\n\n    setBookings(filtered);\n  };\n\n  const handleLoadMore = () => {\n    if (!isLoadingMore && hasMore) {\n      fetchBookings(page + 1, true);\n    }\n  };\n\n  const handleViewDetails = async (booking) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Navigating to booking details:', {\n        bookingId: booking.booking_id || booking.id,\n        isProfessional: activeTab === 'professional'\n      });\n    }\n    \n    await navigateToFrom(navigation, 'BookingDetails', 'MyBookings', {\n      bookingId: booking.booking_id || booking.id,\n      isProfessional: activeTab === 'professional'\n    });\n  };\n\n  const handleCancelBooking = async (bookingId) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Cancel booking:', bookingId);\n    }\n  };\n\n  const renderBookingCard = ({ item }) => (\n    <BookingCard\n      booking={{\n        id: item.booking_id || item.id,\n        ownerName: item.owner_name || item.ownerName,\n        professionalName: item.professional_name || item.professionalName,\n        serviceName: item.service_type || item.serviceName,\n        date: item.start_date || item.date,\n        time: item.start_time || item.time,\n        status: item.status\n      }}\n      type={activeTab}\n      onViewDetails={() => handleViewDetails(item)}\n      onCancel={() => handleCancelBooking(item.booking_id || item.id)}\n    />\n  );\n\n  const EmptyStateMessage = () => (\n    <View style={styles.emptyStateContainer}>\n      <MaterialCommunityIcons \n        name={error ? \"alert-circle-outline\" : \"calendar-blank-outline\"} \n        size={64} \n        color={error ? theme.colors.error : theme.colors.primary} \n      />\n      <Text style={styles.emptyStateTitle}>\n        {error ? 'Error Getting Bookings' : 'No Bookings Found'}\n      </Text>\n      <Text style={styles.emptyStateSubtitle}>\n        {error \n          ? 'There was an error fetching your bookings. Please try again later.' \n          : activeTab === 'professional' \n            ? isApprovedProfessional \n              ? 'Create a service to start receiving bookings'\n              : 'Apply to become a professional to start receiving bookings'\n            : 'Browse available services to make your first booking'\n        }\n      </Text>\n      {!error && (\n        <TouchableOpacity\n          style={styles.createServiceButton}\n          onPress={() => navigation.navigate(\n            activeTab === 'professional'\n              ? isApprovedProfessional\n                ? 'ServiceManager'\n                : 'BecomeProfessional'\n              : 'SearchProfessionalsListing'\n          )}\n        >\n          <Text style={styles.createServiceButtonText}>\n            {activeTab === 'professional'\n              ? isApprovedProfessional\n                ? 'Create Service'\n                : 'Become Professional'\n              : 'Browse Services'\n            }\n          </Text>\n        </TouchableOpacity>\n      )}\n      {error && (\n        <TouchableOpacity\n          style={styles.retryButton}\n          onPress={() => fetchBookings(1)}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n\n  const renderFooter = () => {\n    if (!isLoadingMore) return null;\n    return (\n      <View style={styles.loadingMoreContainer}>\n        <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n      </View>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: isMobile ? 0 : (isCollapsed ? 70 : 250) }\n    ]}>\n      <View style={[styles.content, { marginTop: isMobile ? 60 : 0 }]}>\n        <View style={styles.mainContent}>\n          <View style={styles.headerSection}>\n            <Text style={styles.title}>My Bookings</Text>\n            {isApprovedProfessional && (\n              <View style={styles.tabContainer}>\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'professional' && styles.activeTab]}\n                  onPress={() => setActiveTab('professional')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'professional' && styles.activeTabText]}>\n                    Your Bookings\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'owner' && styles.activeTab]}\n                  onPress={() => setActiveTab('owner')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'owner' && styles.activeTabText]}>\n                    Owner Bookings\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n          <View style={styles.bookingsContent}>\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              </View>\n            ) : bookings.length > 0 ? (\n              <View style={styles.bookingsContent}>\n                <View style={styles.stickyHeader}>\n                  <View style={[styles.stickyHeaderContent, { \n                    flexDirection: isWideScreen ? 'row' : 'column'\n                  }]}>\n                    <View style={[\n                      styles.searchContainer, \n                      isWideScreen ? { flex: 0.4, marginRight: 'auto' } : null\n                    ]}>\n                      <MaterialCommunityIcons name=\"magnify\" size={24} color={theme.colors.mybookings.searchBar} />\n                      <TextInput\n                        style={[styles.searchInput, { color: theme.colors.mybookings.searchBar, width: '100%', height: '100%' }]}\n                        placeholder=\"Search by pet name, owner, or date\"\n                        value={searchQuery}\n                        onChangeText={handleSearch}\n                        outlineStyle=\"none\"\n                      />\n                    </View>\n\n                    <View style={[\n                      styles.filtersWrapper,\n                      isWideScreen ? { flex: 0.6, alignItems: 'flex-end' } : null\n                    ]}>\n                      <ScrollView \n                        horizontal \n                        showsHorizontalScrollIndicator={false}\n                        contentContainerStyle={styles.filterScrollContent}\n                      >\n                        <View style={styles.filterContainer}>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.allButton,\n                              Platform.OS === 'web' && hoveredFilter === 'all' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('all')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('all')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"filter-variant\" \n                                size={16} \n                                color=\"#0784C6\" \n                              />\n                              <Text style={[styles.filterText, styles.allButtonText]}>\n                                All\n                              </Text>\n                              {activeFilter === 'all' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#0784C6\" \n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.pendingButton,\n                              Platform.OS === 'web' && hoveredFilter === 'pending' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('pending')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('pending')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"clock-outline\" \n                                size={16} \n                                color={theme.colors.mybookings.secondary}\n                              />\n                              <Text style={[styles.filterText, styles.pendingButtonText]}>\n                                Pending\n                              </Text>\n                              {activeFilter === 'pending' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color={theme.colors.mybookings.secondary}\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.confirmedButton,\n                              Platform.OS === 'web' && hoveredFilter === 'confirmed' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('confirmed')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('confirmed')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"check-circle-outline\" \n                                size={16} \n                                color=\"#898974\"\n                              />\n                              <Text style={[styles.filterText, styles.confirmedButtonText]}>\n                                Confirmed\n                              </Text>\n                              {activeFilter === 'confirmed' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#898974\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.completedButton,\n                              Platform.OS === 'web' && hoveredFilter === 'completed' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('completed')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('completed')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"flag-checkered\" \n                                size={16} \n                                color={theme.colors.mybookings.completedText}\n                              />\n                              <Text style={[styles.filterText, styles.completedButtonText]}>\n                                Completed\n                              </Text>\n                              {activeFilter === 'completed' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color={theme.colors.mybookings.completedText}\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </ScrollView>\n                    </View>\n                  </View>\n                </View>\n\n                <FlatList\n                  data={bookings}\n                  renderItem={renderBookingCard}\n                  keyExtractor={item => (item.booking_id || item.id || Math.random().toString()).toString()}\n                  contentContainerStyle={styles.listContainer}\n                  onEndReached={handleLoadMore}\n                  onEndReachedThreshold={0.5}\n                  ListFooterComponent={renderFooter}\n                  ListHeaderComponent={<View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />}\n                />\n              </View>\n            ) : (\n              <EmptyStateMessage />\n            )}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  bookingsContent: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: 32,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  stickyHeader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    zIndex: 2,\n    marginHorizontal: 24,\n    marginTop: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    borderRadius: 8,\n    padding: 16,\n  },\n  stickyHeaderContent: {\n    width: '100%',\n    gap: 16,\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9', // #CCCBC9\n  },\n  filterScrollContent: {\n    flexGrow: 0,\n  },\n  filtersWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginRight: -16,\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    gap: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingVertical: 8,\n    paddingLeft: 4,\n    paddingRight: 16,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  filterButtonHovered: {\n    transform: [{ scale: 1.05 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  filterContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n  },\n  checkmark: {\n    marginLeft: 4,\n  },\n  allButton: {\n    backgroundColor: '#EFF9FF', // #EFF9FF\n  },\n  allButtonText: {\n    color: '#0784C6', // #0784C6\n  },\n  pendingButton: {\n    backgroundColor: theme.colors.mybookings.main,\n  },\n  pendingButtonText: {\n    color: theme.colors.mybookings.secondary,\n  },\n  confirmedButton: {\n    backgroundColor: '#E8E9E2', // #E8E9E2\n  },\n  confirmedButtonText: {\n    color: '#898974', // #898974\n  },\n  completedButton: {\n    backgroundColor: '#F5F5F4', // #F5F5F4\n  },\n  completedButtonText: {\n    color: theme.colors.mybookings.completedText,\n  },\n  filterText: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  listHeaderSpacing: {\n    paddingTop: 16,\n  },\n  listContainer: {\n    paddingHorizontal: 24,\n    paddingBottom: 34,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingMoreContainer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n  },\n  emptyStateContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  emptyStateTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginTop: 16,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  emptyStateSubtitle: {\n    fontSize: 16,\n    color: theme.colors.placeholder,\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  createServiceButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.error,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  retryButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  searchInput: {\n    outlineStyle: 'none',\n    outlineWidth: 0,\n    outline: 'none',\n    marginLeft: 8,\n  },\n});\n\nexport default MyBookings;","import React, { useState } from 'react';\nimport { View, Text, Modal, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst AddRateModal = ({ visible, onClose, onAdd }) => {\n  const [name, setName] = useState('');\n  const [amount, setAmount] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleAdd = () => {\n    if (!name || !amount) return;\n    onAdd({\n      name,\n      amount: parseFloat(amount),\n      description\n    });\n    setName('');\n    setAmount('');\n    setDescription('');\n    onClose();\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Add New Rate</Text>\n            <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Rate Name *</Text>\n            <TextInput\n              style={styles.input}\n              value={name}\n              onChangeText={setName}\n              placeholder=\"Enter rate name\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Amount *</Text>\n            <TextInput\n              style={styles.input}\n              value={amount}\n              onChangeText={setAmount}\n              keyboardType=\"numeric\"\n              placeholder=\"Enter amount\"\n            />\n          </View>\n\n          <View style={styles.inputContainer}>\n            <Text style={styles.label}>Description (optional)</Text>\n            <TextInput\n              style={[styles.input, styles.descriptionInput]}\n              value={description}\n              onChangeText={setDescription}\n              placeholder=\"Enter description\"\n              multiline\n            />\n          </View>\n\n          <TouchableOpacity\n            style={[styles.addButton, (!name || !amount) && styles.disabledButton]}\n            onPress={handleAdd}\n            disabled={!name || !amount}\n          >\n            <Text style={styles.addButtonText}>Add Rate</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 5,\n  },\n  inputContainer: {\n    marginBottom: 15,\n  },\n  label: {\n    marginBottom: 5,\n    color: theme.colors.text,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  descriptionInput: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  addButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 4,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  addButtonText: {\n    color: theme.colors.surface,\n    fontWeight: 'bold',\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n});\n\nexport default AddRateModal;","import React from 'react';\nimport { View, Text, StyleSheet, Animated, Platform, Dimensions } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst SnackBar = ({ visible, message, type = 'success' }) => {\n  const [animation] = React.useState(new Animated.Value(0));\n  const windowHeight = Dimensions.get('window').height;\n\n  React.useEffect(() => {\n    let showAnimation;\n    let hideAnimation;\n    let hideTimer;\n\n    if (visible) {\n      // Show snackbar\n      showAnimation = Animated.timing(animation, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      });\n      showAnimation.start();\n\n      // Hide after 3 seconds\n      hideTimer = setTimeout(() => {\n        hideAnimation = Animated.timing(animation, {\n          toValue: 0,\n          duration: 300,\n          useNativeDriver: true,\n        });\n        hideAnimation.start();\n      }, 3000);\n    }\n\n    return () => {\n      if (showAnimation) showAnimation.stop();\n      if (hideAnimation) hideAnimation.stop();\n      if (hideTimer) clearTimeout(hideTimer);\n    };\n  }, [visible]);\n\n  if (!visible) return null;\n\n  return (\n    <View style={[styles.overlay, { height: windowHeight }]}>\n      <Animated.View\n        style={[\n          styles.container,\n          { \n            backgroundColor: type === 'error' ? theme.colors.error : theme.colors.primary,\n            opacity: animation,\n            transform: [{\n              translateY: animation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [50, 0]\n              })\n            }]\n          }\n        ]}\n      >\n        <Text style={styles.message}>{message}</Text>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    paddingBottom: 40,\n    zIndex: 9999,\n    pointerEvents: 'none'\n  },\n  container: {\n    width: '90%',\n    maxWidth: 300,\n    padding: 16,\n    borderRadius: 8,\n    elevation: 6,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  message: {\n    color: theme.colors.whiteText,\n    fontSize: 16,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default SnackBar; ","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, ActivityIndicator, TextInput, Alert, Platform, Modal } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { theme } from '../styles/theme';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport BackHeader from '../components/BackHeader';\nimport { fetchBookingDetails, createBooking, updateBookingStatus, mockMessages, mockConversations, CURRENT_USER_ID, BOOKING_STATES } from '../data/mockData';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AddRateModal from '../components/AddRateModal';\nimport { format } from 'date-fns';\nimport AddOccurrenceModal from '../components/AddOccurrenceModal';\nimport ConfirmationModal from '../components/ConfirmationModal';\nimport { AuthContext, getStorage } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { handleBack, navigateToFrom } from '../components/Navigation';\nimport SnackBar from '../components/SnackBar';\nimport { convertToUTC, formatOccurrenceFromUTC } from '../utils/time_utils';\nimport { approveBooking } from '../api/API';\n\nconst LAST_VIEWED_BOOKING_ID = 'last_viewed_booking_id';\n\n// Replace with Services that professional offers\nconst SERVICE_OPTIONS = ['Dog Walking', 'Pet Sitting', 'House Sitting', 'Drop-In Visits'];\n// Replace with Animal types that the owner owns\nconst ANIMAL_OPTIONS = ['Dog', 'Cat', 'Bird', 'Small Animal'];\n\nconst calculateTimeUnits = (startDate, endDate, startTime, endTime, timeUnit) => {\n  const start = new Date(`${startDate}T${startTime}`);\n  const end = new Date(`${endDate}T${endTime}`);\n  const diffMs = end - start;\n  \n  switch(timeUnit) {\n    case '15 Min':\n      return Math.ceil(diffMs / (15 * 60 * 1000));\n    case '30 Min':\n      return Math.ceil(diffMs / (30 * 60 * 1000));\n    case '45 Min':\n      return Math.ceil(diffMs / (45 * 60 * 1000));\n    case '1 Hour':\n      return Math.ceil(diffMs / (60 * 60 * 1000));\n    case '2 Hour':\n      return Math.ceil(diffMs / (2 * 60 * 60 * 1000));\n    case '3 Hour':\n      return Math.ceil(diffMs / (3 * 60 * 60 * 1000));\n    case '4 Hour':\n      return Math.ceil(diffMs / (4 * 60 * 60 * 1000));\n    case '5 Hour':\n      return Math.ceil(diffMs / (5 * 60 * 60 * 1000));\n    case '6 Hour':\n      return Math.ceil(diffMs / (6 * 60 * 60 * 1000));\n    case '7 Hour':\n      return Math.ceil(diffMs / (7 * 60 * 60 * 1000));\n    case '8 Hour':\n      return Math.ceil(diffMs / (8 * 60 * 60 * 1000));\n    case '24 Hour':\n    case 'Per Day':\n      return Math.ceil(diffMs / (24 * 60 * 60 * 1000));\n    case 'Per Visit':\n      return 1; // Per visit is counted as one unit\n    default:\n      return 1;\n  }\n};\n\nconst RequestChangesModal = ({ visible, onClose, onSubmit, loading }) => {\n  const [reason, setReason] = useState('');\n\n  return (\n    <Modal visible={visible} transparent animationType=\"fade\">\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Request Changes</Text>\n          <TextInput\n            style={styles.reasonInput}\n            placeholder=\"Enter reason for changes...\"\n            value={reason}\n            onChangeText={setReason}\n            multiline\n            numberOfLines={4}\n          />\n          <View style={styles.modalButtons}>\n            <TouchableOpacity \n              style={[styles.modalButton, styles.cancelButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.cancelButtonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={[styles.modalButton, styles.submitButton]}\n              onPress={() => onSubmit(reason)}\n              disabled={loading}\n            >\n              {loading ? (\n                <ActivityIndicator size=\"small\" color=\"#fff\" />\n              ) : (\n                <Text style={styles.submitButtonText}>Submit</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst BookingDetails = () => {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const { is_DEBUG, timeSettings } = useContext(AuthContext);\n  const [booking, setBooking] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isProfessionalView, setIsProfessionalView] = useState(false);\n  const [isPetsEditMode, setIsPetsEditMode] = useState(false);\n  const [isServiceEditMode, setIsServiceEditMode] = useState(false);\n  const [expandedOccurrenceIds, setExpandedOccurrenceIds] = useState([]);\n  const [selectedOccurrence, setSelectedOccurrence] = useState(null);\n  const [defaultOccurrenceRates, setDefaultOccurrenceRates] = useState(null);\n  const [showAddOccurrenceModal, setShowAddOccurrenceModal] = useState(false);\n  const [occurrenceError, setOccurrenceError] = useState(null);\n  const [editedBooking, setEditedBooking] = useState({\n    serviceDetails: {\n      type: '',\n      animalType: '',\n      numberOfPets: 0\n    },\n    rates: {\n      additionalPetRate: 0,\n      holidayFee: 0,\n      weekendFee: 0,\n      extraServices: []\n    }\n  });\n  const [timeDropdownPosition, setTimeDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\n  const timeInputRef = useRef(null);\n  const [showAddRateModal, setShowAddRateModal] = useState(false);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [showAnimalDropdown, setShowAnimalDropdown] = useState(false);\n  const [selectedPets, setSelectedPets] = useState([]);\n  const [showPetDropdown, setShowPetDropdown] = useState(false);\n  const [isPetsSaving, setIsPetsSaving] = useState(false);\n  const [isServiceSaving, setIsServiceSaving] = useState(false);\n  const [showRequestChangesModal, setShowRequestChangesModal] = useState(false);\n  const [actionLoading, setActionLoading] = useState(false);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [confirmationModal, setConfirmationModal] = useState({\n    visible: false,\n    actionText: '',\n    onConfirm: null,\n    isLoading: false\n  });\n  const [availablePets, setAvailablePets] = useState([]);\n  const [isLoadingPets, setIsLoadingPets] = useState(false);\n  const [availableServices, setAvailableServices] = useState([]);\n  const [isLoadingServices, setIsLoadingServices] = useState(false);\n  const [snackBar, setSnackBar] = useState({ visible: false, message: '', type: 'success' });\n\n  // Add useEffect to set isProfessionalView from route params\n  useEffect(() => {\n    if (route.params?.isProfessional !== undefined) {\n      if (is_DEBUG) {\n        console.log('MBA44321 Setting isProfessionalView from route params:', route.params.isProfessional);\n      }\n      setIsProfessionalView(route.params.isProfessional);\n    }\n  }, [route.params?.isProfessional]);\n\n  useEffect(() => {\n    const fetchBooking = async () => {\n      setLoading(true);\n      \n      try {\n        let bookingId = route.params?.bookingId;\n        let initialData = route.params?.initialData;\n\n        if (is_DEBUG) {\n          console.log('MBA77123 BookingDetails: Fetching booking with params:', {\n            bookingId,\n            initialData\n          });\n        }\n\n        // Real API call\n        if (!bookingId) {\n          navigation.replace('MyBookings');\n          return;\n        }\n\n        let token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        const response = await axios.get(\n          `${API_BASE_URL}/api/bookings/v1/${bookingId}/?is_prorated=true`,\n          { headers: { Authorization: `Bearer ${token}` }}\n        );\n\n        // Format the occurrences with proper timezone handling\n        const formattedOccurrences = response.data.occurrences.map(occ => {\n          try {\n            if (is_DEBUG) {\n              console.log('MBA134njo0vh03 Processing occurrence from backend:', {\n                occurrence: occ,\n                timezone: timeSettings.timezone,\n                utcTimes: {\n                  start: `${occ.start_date} ${occ.start_time}`,\n                  end: `${occ.end_date} ${occ.end_time}`\n                }\n              });\n            }\n\n            const formattedOccurrence = formatOccurrenceFromUTC(occ, timeSettings.timezone);\n\n            if (is_DEBUG) {\n              console.log('MBA134njo0vh03 Final formatted occurrence:', formattedOccurrence);\n            }\n\n            return formattedOccurrence;\n\n          } catch (error) {\n            console.error('MBA134njo0vh03 Error formatting occurrence:', error, {\n              occurrence: occ,\n              timezone: timeSettings.timezone\n            });\n            return {\n              ...occ,\n              formatted_start: 'Error formatting date',\n              formatted_end: 'Error formatting date',\n              duration: 'Unknown',\n              timezone: timeSettings.timezone_abbrev,\n              dst_message: ''\n            };\n          }\n        });\n\n        if (is_DEBUG) {\n          console.log('MBA134njo0vh03 All formatted occurrences:', formattedOccurrences);\n        }\n\n        // Transform API response to match the expected format\n        const transformedBooking = {\n          ...response.data,\n          id: response.data.booking_id,\n          ownerName: response.data.owner_name,\n          professionalName: response.data.professional_name,\n          serviceType: response.data.service_details.service_type,\n          animalType: response.data.service_details.animal_type,\n          numberOfPets: response.data.service_details.num_pets,\n          costs: response.data.cost_summary,\n          status: response.data.status,\n          occurrences: formattedOccurrences\n        };\n\n        if (is_DEBUG) {\n          console.log('MBA77123 BookingDetails: Fetched and transformed booking data:', {\n            original: response.data,\n            transformed: transformedBooking\n          });\n        }\n\n        setBooking(transformedBooking);\n      } catch (error) {\n        console.error('Error fetching booking details:', error);\n        Alert.alert(\n          'Error',\n          'Unable to load booking details. Please try again.',\n          [{ text: 'OK', onPress: () => navigation.replace('MyBookings') }]\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchBooking();\n  }, [route.params?.bookingId, navigation, timeSettings]);\n\n  // Add helper function to safely display data\n  const getDisplayValue = (value, placeholder = 'TBD') => {\n    if (value === null || value === undefined || value === '') {\n      return placeholder;\n    }\n    return value;\n  };\n\n  // Reset edit mode when component mounts or reloads\n  useEffect(() => {\n    setIsPetsEditMode(false);\n    setIsServiceEditMode(false);\n  }, []);\n\n  // Add this useEffect to properly initialize editedBooking\n  useEffect(() => {\n    if (booking) {\n      if (is_DEBUG) {\n        console.log('BookingDetails: Booking updated, current value:', booking);\n      }\n      setEditedBooking({\n        ...booking,\n        serviceDetails: {\n          type: booking.serviceType || '',\n          animalType: booking.animalType || '',\n          numberOfPets: (booking.pets || []).length  // Initialize based on pets array length\n        },\n        rates: {\n          additionalPetRate: booking.rates?.additionalPetRate ?? 0,\n          holidayFee: booking.rates?.holidayFee ?? 0,\n          weekendFee: booking.rates?.weekendFee ?? 0,\n          extraServices: booking.rates?.extraServices || []\n        }\n      });\n    }\n  }, [booking]);\n\n  const canEdit = () => {\n\n    if (!booking) {\n      console.log('BookingDetails: Booking is undefined');\n      return false;\n    }\n\n    if (is_DEBUG) {\n      console.log('Booking edit ability:', booking.can_edit);\n    }\n\n    // For real API mode, use the backend's can_edit field\n    return booking.can_edit;\n  };\n\n  // Add function to fetch available pets\n  const fetchAvailablePets = async () => {\n    if (is_DEBUG) {\n      console.log('fetching available pets with booking id:', booking.booking_id);\n    }\n    try {\n      const token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      setIsLoadingPets(true);\n      const response = await axios.get(\n        `${API_BASE_URL}/api/booking_drafts/v1/${booking.booking_id}/available_pets/`,\n        { headers: { Authorization: `Bearer ${token}` }}\n      );\n      setAvailablePets(response.data);\n      if (is_DEBUG) {\n        console.log('available pets:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching available pets:', error);\n      Alert.alert('Error', 'Failed to fetch available pets');\n    } finally {\n      setIsLoadingPets(false);\n    }\n  };\n\n  // This function also saves the pets to the booking draft\n  const togglePetsEditMode = async () => {\n    if (isPetsEditMode) {\n      // Check if pets have changed before saving\n      const currentPets = new Set(booking.pets.map(pet => pet.pet_id));\n      const selectedPetsSet = new Set(selectedPets.map(pet => pet.pet_id));\n  \n      if (![...currentPets].every(id => selectedPetsSet.has(id)) || \n      ![...selectedPetsSet].every(id => currentPets.has(id))) {\n        // Pets have changed, show confirmation modal\n        if (is_DEBUG) {\n          console.log('MBA2573 Pets have changed, saving...');\n        }\n        // Save changes\n        try {\n          setIsPetsSaving(true);\n          \n          if (is_DEBUG) {\n            console.log('MBA2573 Saving pets:', selectedPets);\n          }\n\n          const token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n          if (!token) {\n            throw new Error('No authentication token found');\n          }\n\n          // Call the new booking drafts endpoint with correct URL format\n          const response = await fetch(`${API_BASE_URL}/api/booking_drafts/v1/${booking.booking_id}/update_pets/`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({\n              pets: selectedPets.map(pet => pet.pet_id)\n            })\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n\n          const data = await response.json();\n          if (is_DEBUG) {\n            console.log('MBA2573 Backend response:', data);\n          }\n\n          // Update local state with all the new data\n          if (data.draft_data) {\n            if (is_DEBUG) {\n              console.log('MBA2573 Backend response:', data);\n            }\n\n            // Format occurrences with proper timezone handling\n            const formattedOccurrences = data.draft_data.occurrences.map(occ => {\n              try {\n                if (is_DEBUG) {\n                  console.log('MBA134njo0vh03 Processing occurrence from pets update:', {\n                    occurrence: occ,\n                    timezone: timeSettings.timezone\n                  });\n                }\n\n                return formatOccurrenceFromUTC(occ, timeSettings.timezone);\n              } catch (error) {\n                console.error('MBA134njo0vh03 Error formatting occurrence:', error);\n                return {\n                  ...occ,\n                  formatted_start: 'Error formatting date',\n                  formatted_end: 'Error formatting date',\n                  duration: 'Unknown',\n                  timezone: timeSettings.timezone_abbrev,\n                  dst_message: ''\n                };\n              }\n            });\n\n            setBooking(prev => ({\n              ...prev,\n              status: data.draft_data.status,\n              pets: data.draft_data.pets,\n              occurrences: formattedOccurrences,\n              cost_summary: data.draft_data.cost_summary,\n              can_edit: data.draft_data.can_edit\n            }));\n\n            // Keep the expanded state as is\n            setExpandedOccurrenceIds(prev => [...prev]);\n          }\n\n          setIsPetsEditMode(false);\n\n        } catch (error) {\n          if (is_DEBUG) {\n            console.error('MBA2573 Error updating pets:', error);\n          }\n          Alert.alert('Error', 'Failed to update pets');\n        } finally {\n          setIsPetsSaving(false);\n        }\n     } else {\n      setIsPetsEditMode(false);\n      if (is_DEBUG) {\n        console.log('MBA2573 NO PET CHANGES');\n      }\n     }\n    } else {\n      setSelectedPets(booking.pets || []);\n      setIsPetsEditMode(true);\n    }\n  };\n\n  const renderPetSelector = () => {\n    if (!isPetsEditMode) {\n      return (\n        <View>\n          {booking?.pets?.length > 0 ? (\n            booking.pets.map((pet, index) => (\n              <View key={index} style={styles.petRow}>\n                <Text style={styles.petName}>\n                  {pet.name} • {pet.species} {pet.breed && `• ${pet.breed}`}\n                </Text>\n              </View>\n            ))\n          ) : (\n            <Text style={styles.noContentText}>No pets added to this booking</Text>\n          )}\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        {selectedPets.map((pet, index) => (\n          <View key={index} style={styles.petRow}>\n            <Text style={styles.petName}>\n              {pet.name} • {pet.species} {pet.breed && `• ${pet.breed}`}\n            </Text>\n            <TouchableOpacity\n              onPress={() => setSelectedPets(prev => prev.filter((_, i) => i !== index))}\n            >\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.error} />\n            </TouchableOpacity>\n          </View>\n        ))}\n\n        <TouchableOpacity\n          style={styles.addPetButton}\n          onPress={async () => {\n            if (!showPetDropdown) {\n              await fetchAvailablePets();\n            }\n            setShowPetDropdown(!showPetDropdown);\n          }}\n        >\n          <Text style={styles.addPetText}>Add Pet</Text>\n          <MaterialCommunityIcons \n            name={showPetDropdown ? \"chevron-up\" : \"chevron-down\"} \n            size={24} \n            color={theme.colors.text} \n          />\n        </TouchableOpacity>\n\n        {showPetDropdown && (\n          <View style={styles.dropdownList}>\n            <ScrollView nestedScrollEnabled={true} style={{ maxHeight: 200 }}>\n              {isLoadingPets ? (\n                <ActivityIndicator style={{ padding: 10 }} />\n              ) : (\n                availablePets.filter(pet => !selectedPets.some(selected => selected.pet_id === pet.pet_id))\n                  .map((pet) => (\n                    <TouchableOpacity\n                      key={pet.pet_id || pet.id}\n                      style={styles.dropdownItem}\n                      onPress={() => {\n                        setSelectedPets(prev => [...prev, pet]);\n                        setShowPetDropdown(false);\n                      }}\n                    >\n                      <Text style={styles.dropdownText}>\n                        {pet.name} • {pet.species} {pet.breed && `• ${pet.breed}`}\n                      </Text>\n                    </TouchableOpacity>\n                  ))\n              )}\n              {!isLoadingPets && availablePets.length === 0 && (\n                <Text style={styles.noContentText}>No pets available</Text>\n              )}\n            </ScrollView>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  // Add function to fetch available services\n  const fetchAvailableServices = async () => {\n    if (is_DEBUG) {\n      console.log('fetching available services with booking id:', booking.booking_id);\n    }\n    try {\n      const token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n      setIsLoadingServices(true);\n      const response = await axios.get(\n        `${API_BASE_URL}/api/bookings/v1/${booking.booking_id}/available_services/`,\n        { headers: { Authorization: `Bearer ${token}` }}\n      );\n      setAvailableServices(response.data);\n      if (is_DEBUG) {\n        console.log('available services:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching available services:', error);\n      Alert.alert('Error', 'Failed to fetch available services');\n    } finally {\n      setIsLoadingServices(false);\n    }\n  };\n\n  const toggleServiceEditMode = async () => {\n    try {\n      if (isServiceEditMode) {\n        if (is_DEBUG) console.log('MBA123a73hv - Service type change initiated:', editedBooking?.service_details?.service_id);\n        setIsServiceSaving(true);\n\n        // Call the API to update the service type\n        const result = await updateServiceType(booking.booking_id, editedBooking?.service_details?.service_id);\n\n        // Update the local state with the new draft data\n        if (result.draft_data) {\n          if (is_DEBUG) console.log('MBA123a73hv - Received draft data:', result.draft_data);\n          \n          // Format occurrences with proper timezone handling\n          const formattedOccurrences = result.draft_data.occurrences.map(occ => {\n            try {\n              if (is_DEBUG) {\n                console.log('MBA134njo0vh03 Processing occurrence from service update:', {\n                  occurrence: occ,\n                  timezone: timeSettings.timezone\n                });\n              }\n\n              return formatOccurrenceFromUTC(occ, timeSettings.timezone);\n            } catch (error) {\n              console.error('MBA134njo0vh03 Error formatting occurrence:', error);\n              return {\n                ...occ,\n                formatted_start: 'Error formatting date',\n                formatted_end: 'Error formatting date',\n                duration: 'Unknown',\n                timezone: timeSettings.timezone_abbrev,\n                dst_message: ''\n              };\n            }\n          });\n\n          setBooking(prevBooking => ({\n            ...prevBooking,\n            ...result.draft_data,\n            occurrences: formattedOccurrences,\n            service_details: {\n              ...prevBooking.service_details,\n              ...result.draft_data.service_details\n            },\n            serviceType: result.draft_data.service_details.service_type,\n            status: result.booking_status\n          }));\n\n          // Also update editedBooking to match\n          setEditedBooking(prev => ({\n            ...prev,\n            service_details: result.draft_data.service_details\n          }));\n        }\n\n        // Show success message\n        setSnackBar({\n          visible: true,\n          message: 'Service updated successfully',\n          type: 'success'\n        });\n      } else {\n        setEditedBooking(prev => ({\n          ...prev,\n          service_details: {\n            ...booking.service_details\n          }\n        }));\n        await fetchAvailableServices();\n      }\n      setIsServiceEditMode(!isServiceEditMode);\n    } catch (error) {\n      setSnackBar({\n        visible: true,\n        message: error.message || 'Failed to update service',\n        type: 'error'\n      });\n    } finally {\n      setIsServiceSaving(false);\n    }\n  };\n\n  const StatusBadge = ({ status }) => (\n    <View style={styles.statusContainer}>\n      <Text style={styles.statusLabel}>Booking Status:</Text>\n      <View style={[\n        styles.statusBadge,\n        { backgroundColor: getStatusColor(status).backgroundColor }\n      ]}>\n        <Text style={[\n          styles.statusText,\n          { color: getStatusColor(status).textColor }\n        ]}>\n          {status}\n        </Text>\n      </View>\n    </View>\n  );\n\n  const getStatusColor = (status) => {\n    const colors = {\n      Pending: { backgroundColor: theme.colors.warning + '20', textColor: theme.colors.warning },\n      Confirmed: { backgroundColor: theme.colors.success + '20', textColor: theme.colors.success },\n      Canceled: { backgroundColor: theme.colors.error + '20', textColor: theme.colors.error },\n      Completed: { backgroundColor: theme.colors.primary + '20', textColor: theme.colors.primary },\n    };\n    return colors[status] || colors.Pending;\n  };\n\n  const renderEditButton = () => (\n    canEdit() && (\n      <TouchableOpacity \n        onPress={togglePetsEditMode}\n        style={[styles.editButton, isPetsEditMode && styles.saveButton]}\n        testID=\"edit-button\"\n        disabled={isPetsSaving}\n      >\n        {isPetsSaving ? (\n          <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n        ) : (\n          isPetsEditMode ? (\n            <Text style={styles.saveButtonText}>Save Pets</Text>\n          ) : (\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          )\n        )}\n      </TouchableOpacity>\n    )\n  );\n\n  const handleUpdateDuration = (newDuration) => {\n    setEditedBooking(prev => ({\n      ...prev,\n      duration: parseInt(newDuration),\n    }));\n    setHasUnsavedChanges(true);\n    recalculateTotals();\n  };\n\n  const handleRemoveRate = (index) => {\n    const updatedRates = [...editedBooking.rates.extraServices];\n    updatedRates.splice(index, 1);\n    \n    setEditedBooking(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        extraServices: updatedRates\n      }\n    }));\n    setHasUnsavedChanges(true);\n    recalculateTotals();\n  };\n\n  const recalculateTotals = async () => {\n    try {\n      const baseTotal = editedBooking.rates.baseRate * editedBooking.quantity;\n      const extraServicesTotal = editedBooking.rates.extraServices.reduce((sum, service) => sum + service.amount, 0);\n      const holidayFee = editedBooking.rates.holidayFee || 0;\n      const weekendFee = editedBooking.rates.weekendFee || 0;\n      \n      // Calculate additional pet fees (assuming 1 pet included in base rate)\n      const additionalPets = Math.max(0, editedBooking.numberOfPets - 1);\n      const additionalPetTotal = additionalPets * (editedBooking.rates.additionalPetRate || 0);\n      \n      const subtotal = baseTotal + extraServicesTotal + holidayFee + weekendFee + additionalPetTotal;\n      const ownerFee = subtotal * 0.10;\n      const taxes = subtotal * 0.09;\n      const totalOwnerCost = subtotal + ownerFee + taxes;\n      const professionalPayout = subtotal * 0.90;\n\n      setEditedBooking(prev => ({\n        ...prev,\n        costs: {\n          baseTotal,\n          extraServicesTotal,\n          additionalPetTotal,\n          subtotal,\n          ownerFee,\n          taxes,\n          totalOwnerCost,\n          professionalPayout\n        }\n      }));\n    } catch (error) {\n      console.error('Error recalculating totals:', error);\n    }\n  };\n\n  const calculateTotalCosts = (occurrences) => {\n    const subtotal = occurrences.reduce((sum, occ) => \n      sum + parseFloat(occ.calculated_cost || 0), 0);\n    const platformFee = subtotal * 0.10; // 10% platform fee\n    const taxes = (subtotal + platformFee) * 0.09; // 9% tax\n    const totalOwnerCost = subtotal + platformFee + taxes;\n    const totalSitterPayout = subtotal * 0.90; // 90% of subtotal goes to sitter\n    \n    return {\n      subtotal,\n      platform_fee: platformFee,\n      taxes,\n      total_owner_cost: totalOwnerCost,\n      total_sitter_payout: totalSitterPayout\n    };\n  };\n\n  const handleSaveOccurrence = async (updatedOccurrence) => {\n    try {\n      if (is_DEBUG) {\n        console.log('MBA9740174 handleSaveOccurrence - Start:', {\n          updatedOccurrence,\n          currentBookingOccurrences: booking.occurrences\n        });\n      }\n\n      const token = await getStorage('userToken');\n      const userTimezone = timeSettings.timezone;\n      \n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      // Find the occurrence index by matching dates and times\n      const occurrenceIndex = booking.occurrences.findIndex((occ) => {\n        // First try to match by occurrence_id\n        if (updatedOccurrence.occurrence_id && occ.occurrence_id === updatedOccurrence.occurrence_id) {\n          if (is_DEBUG) {\n            console.log('MBA9740174 Found match by occurrence_id:', occ.occurrence_id);\n          }\n          return true;\n        }\n\n        // Convert the updated times to UTC for comparison\n        const updatedStartTimeUTC = convertToUTC(\n          updatedOccurrence.startDate,\n          updatedOccurrence.startTime,\n          userTimezone\n        );\n\n        const updatedEndTimeUTC = convertToUTC(\n          updatedOccurrence.endDate,\n          updatedOccurrence.endTime,\n          userTimezone\n        );\n\n        if (is_DEBUG) {\n          console.log('MBA9740174 Comparing occurrence:', {\n            original: {\n              start_date: occ.start_date,\n              start_time: occ.start_time,\n              end_date: occ.end_date,\n              end_time: occ.end_time\n            },\n            updated: {\n              start_date: updatedOccurrence.startDate,\n              start_time: updatedStartTimeUTC.time,\n              end_date: updatedOccurrence.endDate,\n              end_time: updatedEndTimeUTC.time\n            }\n          });\n        }\n\n        return occ.start_date === updatedOccurrence.startDate &&\n               occ.start_time === updatedStartTimeUTC.time &&\n               occ.end_date === updatedOccurrence.endDate &&\n               occ.end_time === updatedEndTimeUTC.time;\n      });\n\n      if (is_DEBUG) {\n        console.log('MBA9740174 Found occurrence at index:', occurrenceIndex);\n      }\n\n      // If no match found by exact comparison, try to find by start date/time only\n      let finalIndex = occurrenceIndex;\n      if (finalIndex === -1) {\n        const updatedStartTimeUTC = convertToUTC(\n          updatedOccurrence.startDate,\n          updatedOccurrence.startTime,\n          userTimezone\n        );\n        \n        finalIndex = booking.occurrences.findIndex((occ) => {\n          return occ.start_date === updatedOccurrence.startDate && \n                 occ.start_time === updatedStartTimeUTC.time;\n        });\n\n        if (is_DEBUG) {\n          console.log('MBA9740174 Fallback search by start time only. Found at index:', finalIndex);\n        }\n      }\n\n      if (finalIndex === -1) {\n        throw new Error('Could not find matching occurrence to update');\n      }\n\n      // Convert times to UTC\n      const startUTC = convertToUTC(\n        updatedOccurrence.startDate,\n        updatedOccurrence.startTime,\n        userTimezone\n      );\n\n      const endUTC = convertToUTC(\n        updatedOccurrence.endDate,\n        updatedOccurrence.endTime,\n        userTimezone\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA9740174 Converted times to UTC:', {\n          start: startUTC,\n          end: endUTC\n        });\n      }\n\n      // Format the updated occurrence data\n      const updatedOccurrenceData = {\n        occurrence_id: booking.occurrences[finalIndex]?.occurrence_id,\n        start_date: startUTC.date,\n        end_date: endUTC.date,\n        start_time: startUTC.time,\n        end_time: endUTC.time,\n        rates: {\n          base_rate: updatedOccurrence.rates.baseRate,\n          additional_animal_rate: updatedOccurrence.rates.additionalAnimalRate,\n          applies_after: updatedOccurrence.rates.appliesAfterAnimals,\n          holiday_rate: updatedOccurrence.rates.holidayRate,\n          unit_of_time: updatedOccurrence.rates.unit_of_time,\n          additional_rates: updatedOccurrence.rates.additionalRates.map(rate => ({\n            title: rate.name,\n            description: rate.description || '',\n            amount: rate.amount\n          }))\n        },\n        is_updated: true\n      };\n\n      if (is_DEBUG) {\n        console.log('MBA9740174 Formatted updatedOccurrenceData:', updatedOccurrenceData);\n      }\n\n      // Get all existing occurrences and format them\n      const existingOccurrences = booking.occurrences.map((occ, index) => {\n        if (index === finalIndex) {\n          if (is_DEBUG) {\n            console.log('MBA9740174 Updating occurrence at index:', index);\n          }\n          return {\n            ...updatedOccurrenceData,\n            occurrence_id: occ.occurrence_id  // Preserve the original occurrence_id\n          };\n        }\n        return {\n          occurrence_id: occ.occurrence_id,\n          start_date: occ.start_date,\n          end_date: occ.end_date,\n          start_time: occ.start_time,\n          end_time: occ.end_time,\n          rates: occ.rates\n        };\n      });\n\n      if (is_DEBUG) {\n        console.log('MBA9740174 Final request data:', {\n          booking_id: booking.booking_id,\n          occurrences: existingOccurrences\n        });\n      }\n\n      const response = await fetch(`${API_BASE_URL}/api/booking_drafts/v1/${booking.booking_id}/update_occurrences/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          booking_id: booking.booking_id,\n          occurrences: existingOccurrences\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (is_DEBUG) {\n        console.log('MBA9740174 Backend response:', data);\n      }\n\n      // Update the local state with the response data\n      if (data.draft_data) {\n        if (is_DEBUG) {\n          console.log('MBA9740174 Updating local state with draft data:', {\n            oldOccurrences: booking.occurrences,\n            newOccurrences: data.draft_data.occurrences\n          });\n        }\n\n        // Format the occurrences with proper timezone handling\n        const formattedOccurrences = data.draft_data.occurrences.map(occ => \n          formatOccurrenceFromUTC(occ, timeSettings.timezone)\n        );\n\n        setBooking(prev => ({\n          ...prev,\n          ...data.draft_data,\n          occurrences: formattedOccurrences,\n          status: data.draft_data.status\n        }));\n\n        setSnackBar({\n          visible: true,\n          message: 'Occurrence updated successfully',\n          type: 'success'\n        });\n\n        setShowAddOccurrenceModal(false);\n        return true;\n      }\n\n      throw new Error('Invalid response from server');\n\n    } catch (error) {\n      if (is_DEBUG) {\n        console.log('MBA9740174 Error saving occurrence:', error);\n      }\n      setSnackBar({\n        visible: true,\n        message: error.message || 'Failed to update occurrence',\n        type: 'error'\n      });\n      return false;\n    }\n  };\n\n  // This is the callback function for the AddOccurrenceModal when the submit button is pressed\n  // It calls the update_occurrences endpoint to add the new occurrence to the booking\n  const handleAddOccurrence = async (newOccurrence) => {\n    if (is_DEBUG) {\n      console.log('MBA134njo0vh03 Adding new occurrence:', newOccurrence);\n    }\n\n    try {\n      let token = await getStorage('userToken');\n      const userTimezone = timeSettings.timezone;\n\n      // Format the new occurrence data\n      let newOccurrenceData;\n      \n      if (newOccurrence.startDateTime && newOccurrence.endDateTime) {\n        // Owner-initiated format with DateTime objects\n        const startDate = format(newOccurrence.startDateTime, 'yyyy-MM-dd');\n        const startTime = format(newOccurrence.startDateTime, 'HH:mm');\n        const endDate = format(newOccurrence.endDateTime, 'yyyy-MM-dd');\n        const endTime = format(newOccurrence.endDateTime, 'HH:mm');\n\n        // Convert to UTC using existing function\n        const startUTC = convertToUTC(startDate, startTime, userTimezone);\n        const endUTC = convertToUTC(endDate, endTime, userTimezone);\n\n        if (is_DEBUG) {\n          console.log('MBA134njo0vh03 Converted owner times to UTC:', {\n            local: {\n              start: `${startDate} ${startTime}`,\n              end: `${endDate} ${endTime}`\n            },\n            utc: {\n              start: startUTC,\n              end: endUTC\n            }\n          });\n        }\n\n        newOccurrenceData = {\n          start_date: startUTC.date,\n          end_date: endUTC.date,\n          start_time: startUTC.time,\n          end_time: endUTC.time\n        };\n      } else {\n        // Professional-initiated format with separate date and time\n        const startUTC = convertToUTC(\n          newOccurrence.startDate,\n          newOccurrence.startTime,\n          userTimezone\n        );\n        const endUTC = convertToUTC(\n          newOccurrence.endDate,\n          newOccurrence.endTime,\n          userTimezone\n        );\n\n        if (is_DEBUG) {\n          console.log('MBA134njo0vh03 Converted professional times to UTC:', {\n            local: {\n              start: `${newOccurrence.startDate} ${newOccurrence.startTime}`,\n              end: `${newOccurrence.endDate} ${newOccurrence.endTime}`\n            },\n            utc: {\n              start: startUTC,\n              end: endUTC\n            }\n          });\n        }\n\n        newOccurrenceData = {\n          start_date: startUTC.date,\n          end_date: endUTC.date,\n          start_time: startUTC.time,\n          end_time: endUTC.time\n        };\n      }\n\n      // Add rates if they exist\n      if (newOccurrence.rates) {\n        newOccurrenceData.rates = {\n          base_rate: newOccurrence.rates.baseRate,\n          additional_animal_rate: newOccurrence.rates.additionalAnimalRate,\n          applies_after: newOccurrence.rates.appliesAfterAnimals,\n          holiday_rate: newOccurrence.rates.holidayRate,\n          unit_of_time: newOccurrence.rates.unit_of_time,\n          additional_rates: newOccurrence.rates.additionalRates.map(rate => ({\n            title: rate.name,\n            description: rate.description || '',\n            amount: rate.amount\n          }))\n        };\n      }\n\n      // Get all existing occurrences and format them\n      const existingOccurrences = (booking?.occurrences || []).map(occ => ({\n        occurrence_id: occ.occurrence_id,\n        start_date: occ.start_date,\n        end_date: occ.end_date,\n        start_time: occ.start_time,\n        end_time: occ.end_time,\n        rates: occ.rates\n      }));\n\n      // Combine existing occurrences with new occurrence\n      const allOccurrences = [...existingOccurrences, newOccurrenceData];\n\n      if (is_DEBUG) {\n        console.log('MBA134njo0vh03 Sending all occurrences:', allOccurrences);\n      }\n\n      // Make the API call\n      const response = await fetch(`${API_BASE_URL}/api/booking_drafts/v1/${booking.booking_id}/update_occurrences/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          booking_id: booking.booking_id,\n          occurrences: allOccurrences\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (is_DEBUG) {\n        console.log('MBA134njo0vh03 Add event response:', data);\n      }\n\n      // Update the local state with the response data\n      if (data.draft_data.occurrences && data.draft_data.occurrences.length > 0) {\n        // Format the occurrences using our new helper function\n        const formattedOccurrences = data.draft_data.occurrences.map(occ => \n          formatOccurrenceFromUTC(occ, timeSettings.timezone)\n        );\n\n        setBooking(prev => ({\n          ...prev,\n          occurrences: formattedOccurrences,\n          cost_summary: data.draft_data.cost_summary\n        }));\n\n        if (is_DEBUG) {\n          console.log('MBA134njo0vh03 Adding Occurrence was Successful', {\n            original: data.draft_data.occurrences,\n            formatted: formattedOccurrences\n          });\n        }\n        \n        return {\n          status: 'success',\n          data: formattedOccurrences,\n          message: 'New occurrence added successfully'\n        };\n      }\n\n      return {\n        status: 'error',\n        message: 'Failed to add event - no data returned'\n      };\n\n    } catch (error) {\n      console.error('MBA134njo0vh03 Error adding occurrence:', error);\n      return {\n        status: 'error',\n        message: error.message || 'Failed to add event. Please try again.'\n      };\n    }\n  };\n\n  const handleStatusUpdateAfterEdit = async () => {\n    if (!booking) return;\n\n    // If booking is already in a pending changes state, no need to update\n    if ([\n      BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES,\n      BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n      BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES\n    ].includes(booking.status)) {\n      return;\n    }\n\n    // Update status based on current status\n    let newStatus;\n    if (booking.status === BOOKING_STATES.CONFIRMED) {\n      newStatus = BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES;\n    } else {\n      newStatus = BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES;\n    }\n\n    await handleStatusUpdate(newStatus);\n  };\n\n  const handleDateTimeCardPress = (occurrence) => {\n    // Clear default rates when editing an existing occurrence\n    setDefaultOccurrenceRates(null);\n    \n    if (is_DEBUG) {\n        console.log('MBA9740174 handleDateTimeCardPress - Original occurrence:', occurrence);\n    }\n\n    // Calculate base total from the rates and time unit\n    const calculateBaseTotal = (occurrence) => {\n        const baseRate = parseFloat(occurrence.rates?.base_rate || 0);\n        const timeUnit = occurrence.rates?.unit_of_time;\n        const timeUnits = calculateTimeUnits(\n            occurrence.start_date,\n            occurrence.end_date,\n            occurrence.start_time,\n            occurrence.end_time,\n            timeUnit\n        );\n        if (is_DEBUG) {\n            console.log('MBA9740174 calculateBaseTotal:', {\n                baseRate,\n                timeUnit,\n                timeUnits,\n                total: baseRate * timeUnits\n            });\n        }\n        return baseRate * timeUnits;\n    };\n\n    const baseTotal = calculateBaseTotal(occurrence);\n\n    // Parse dates and times correctly\n    const parseDateTime = (dateStr, timeStr) => {\n        if (is_DEBUG) {\n            console.log('MBA9740174 parseDateTime input:', { dateStr, timeStr });\n        }\n\n        try {\n            // Create a UTC date from the date and time strings\n            const [year, month, day] = dateStr.split('-').map(Number);\n            const [hours, minutes] = timeStr.split(':').map(Number);\n            const utcDate = new Date(Date.UTC(year, month - 1, day, hours, minutes));\n\n            if (is_DEBUG) {\n                console.log('MBA9740174 UTC date created:', utcDate.toISOString());\n            }\n\n            // Convert to local date\n            const localDate = new Date(utcDate);\n\n            // Format the time in 12-hour format\n            let localHours = localDate.getHours();\n            const period = localHours >= 12 ? 'PM' : 'AM';\n            localHours = localHours % 12 || 12;\n            const formattedTime = `${localHours.toString().padStart(2, '0')}:${localDate.getMinutes().toString().padStart(2, '0')} ${period}`;\n\n            if (is_DEBUG) {\n                console.log('MBA9740174 Converted to local:', {\n                    date: dateStr,\n                    time: formattedTime,\n                    originalTime: timeStr\n                });\n            }\n\n            return {\n                date: dateStr,\n                time: formattedTime\n            };\n        } catch (error) {\n            console.error('MBA9740174 Error in parseDateTime:', error);\n            return {\n                date: dateStr,\n                time: timeStr\n            };\n        }\n    };\n\n    const startDateTime = parseDateTime(occurrence.start_date, occurrence.start_time);\n    const endDateTime = parseDateTime(occurrence.end_date, occurrence.end_time);\n\n    // Extract the occurrence ID, ensuring we get the correct one\n    const occurrenceId = occurrence.occurrence_id;\n    \n    if (is_DEBUG) {\n        console.log('MBA9740174 Using occurrence ID:', occurrenceId);\n    }\n\n    const transformedOccurrence = {\n        occurrence_id: occurrenceId,  // Use the actual occurrence_id from the database\n        startDate: startDateTime.date,\n        endDate: endDateTime.date,\n        startTime: startDateTime.time,\n        endTime: endDateTime.time,\n        rates: {\n            baseRate: occurrence.rates?.base_rate?.toString() || '0',\n            additionalAnimalRate: occurrence.rates?.additional_animal_rate?.toString() || '0',\n            appliesAfterAnimals: occurrence.rates?.applies_after?.toString() || '1',\n            holidayRate: occurrence.rates?.holiday_rate?.toString() || '0',\n            unit_of_time: occurrence.rates?.unit_of_time,\n            additionalRates: (occurrence.rates?.additional_rates || [])\n                .filter(rate => rate.title !== 'Booking Details Cost')\n                .map(rate => ({\n                    name: rate.title,\n                    description: rate.description || '',\n                    amount: (rate.amount?.replace(/[^0-9.]/g, '') || '0').toString()\n                }))\n        },\n        totalCost: occurrence.calculated_cost?.toString() || '0',\n        baseTotal: baseTotal.toString(),\n        multiple: calculateMultiple(baseTotal.toString(), occurrence.rates?.base_rate)\n    };\n\n    if (is_DEBUG) {\n        console.log('MBA9740174 transformedOccurrence:', transformedOccurrence);\n        console.log('MBA9740174 Original occurrence:', occurrence);\n    }\n    setSelectedOccurrence(transformedOccurrence);\n    setShowAddOccurrenceModal(true);\n};\n\n  const calculateMultiple = (baseTotal, baseRate) => {\n    if (!baseRate || baseRate === 0) return 0;\n    const total = parseFloat(baseTotal.replace('$', ''));\n    const rate = parseFloat(baseRate);\n    return (total / rate).toFixed(2);\n  };\n\n  const toggleOccurrenceExpansion = (occurrenceId) => {\n    if (is_DEBUG) {\n      console.log('MBA912341 ---- Toggle Start ----');\n      console.log('MBA912341 Clicked occurrence ID:', occurrenceId);\n      console.log('MBA912341 Current state type:', typeof expandedOccurrenceIds);\n      console.log('MBA912341 Current state value:', expandedOccurrenceIds);\n    }\n\n    setExpandedOccurrenceIds(prevIds => {\n      if (is_DEBUG) {\n        console.log('MBA912341 Previous state in setter:', prevIds);\n      }\n\n      // Ensure we're working with an array\n      const currentIds = Array.isArray(prevIds) ? prevIds : [];\n      \n      if (is_DEBUG) {\n        console.log('MBA912341 Normalized current IDs:', currentIds);\n        console.log('MBA912341 Does array include ID?', currentIds.includes(occurrenceId));\n      }\n\n      let newIds;\n      if (currentIds.includes(occurrenceId)) {\n        newIds = currentIds.filter(id => id !== occurrenceId);\n        if (is_DEBUG) {\n          console.log('MBA912341 Removing ID - New state:', newIds);\n        }\n      } else {\n        newIds = [...currentIds, occurrenceId];\n        if (is_DEBUG) {\n          console.log('MBA912341 Adding ID - New state:', newIds);\n        }\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA912341 Final new state:', newIds);\n        console.log('MBA912341 ---- Toggle End ----');\n      }\n      return newIds;\n    });\n  };\n\n  const formatOccurrenceDate = (dateStr) => {\n    if (!dateStr) return '';\n    try {\n      // First try to parse as formatted date (MMM dd, yyyy)\n      const formattedMatch = dateStr.match(/([A-Za-z]{3})\\s+(\\d{2}),\\s+(\\d{4})/);\n      if (formattedMatch) {\n        const date = new Date(dateStr.split('(')[0].trim());\n        return format(date, 'MMM dd');\n      }\n      \n      // If that fails, try to parse as raw date (YYYY-MM-DD)\n      const rawDate = new Date(dateStr);\n      if (!isNaN(rawDate.getTime())) {\n        return format(rawDate, 'MMM dd');\n      }\n      \n      return dateStr; // Return original string if parsing fails\n    } catch (error) {\n      console.error('Error formatting occurrence date:', error);\n      return dateStr;\n    }\n  };\n\n  const renderCostBreakdown = () => (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>Cost Breakdown</Text>\n      \n      {(booking?.occurrences || []).map((occurrence, index) => {\n        if (is_DEBUG) {\n          console.log('MBA912341 Full occurrence object:', occurrence);\n          console.log('MBA912341 Rendering occurrence:', {\n            index,\n            occurrence_id: occurrence.occurrence_id,\n            expanded: expandedOccurrenceIds.includes(occurrence.occurrence_id)\n          });\n        }\n        \n        return (\n          <TouchableOpacity \n            key={index}\n            style={styles.occurrenceCostRow}\n            onPress={() => {\n              if (is_DEBUG) {\n                console.log('MBA912341 Occurrence being toggled:', occurrence);\n              }\n              toggleOccurrenceExpansion(occurrence.id || occurrence.occurrence_id || index);\n            }}\n          >\n            <View style={styles.occurrenceCostHeader}>\n              <Text style={styles.occurrenceCostHeaderText}>\n                {formatOccurrenceDate(occurrence.formatted_start)} - {formatOccurrenceDate(occurrence.formatted_end)}\n              </Text>\n              <View style={styles.costAndIcon}>\n                <Text style={styles.occurrenceCost}>\n                  ${parseFloat(occurrence.calculated_cost || 0).toFixed(2)}\n                </Text>\n                <MaterialCommunityIcons \n                  name={expandedOccurrenceIds.includes(occurrence.id || occurrence.occurrence_id || index) ? \"chevron-up\" : \"chevron-down\"}\n                  size={20} \n                  color={theme.colors.text} \n                />\n              </View>\n            </View>\n            \n            {expandedOccurrenceIds.includes(occurrence.id || occurrence.occurrence_id || index) && (\n              <View style={styles.expandedCostDetails}>\n                <View style={styles.costDetailRow}>\n                  <Text style={styles.costDetailText}>Base Rate ({occurrence.rates?.unit_of_time}):</Text>\n                  <Text style={styles.costDetailText}>\n                    ${parseFloat(occurrence.rates?.base_rate || 0).toFixed(2)} × {\n                      parseFloat(occurrence?.multiple || 0).toFixed(2)\n                    } = ${parseFloat(occurrence.base_total?.replace(/[^0-9.-]/g, '') || 0).toFixed(2)}\n                  </Text>\n                </View>\n                {console.log('MBA12341234 additional_animal_rate_applies:', occurrence.rates?.additional_animal_rate_applies)}\n                {occurrence.rates?.additional_animal_rate_applies !== 0 && parseFloat(occurrence.rates?.additional_animal_rate || 0) > 0 && (\n                  <View style={styles.costDetailRow}>\n                    <Text style={styles.costDetailText}>Additional Pet Rate (after {occurrence.rates.applies_after} {occurrence.rates.applies_after > 1 ? 'pets' : 'pet'}):</Text>\n                    <Text style={styles.costDetailText}>\n                      ${parseFloat(occurrence.rates.additional_animal_rate || 0).toFixed(2)} × {\n                        booking.pets.length - occurrence.rates.applies_after\n                      } = ${(parseFloat(occurrence.rates.additional_animal_rate || 0) * (booking.pets.length - occurrence.rates.applies_after)).toFixed(2)}\n                    </Text>\n                  </View>\n                )}\n                {occurrence.rates?.holiday_days > 0 && parseFloat(occurrence.rates?.holiday_rate || 0) > 0 && (\n                  <View style={styles.costDetailRow}>\n                    <Text style={styles.costDetailText}>Holiday Rate ({occurrence.rates.holiday_days} day{occurrence.rates.holiday_days > 1 ? 's' : ''}):</Text>\n                    <Text style={styles.costDetailText}>${(parseFloat(occurrence.rates.holiday_rate || 0) * occurrence.rates.holiday_days).toFixed(2)}</Text>\n                  </View>\n                )}\n                {(occurrence.rates?.additional_rates || [])\n                  .filter(rate => rate.title !== 'Booking Details Cost')\n                  .map((rate, idx) => (\n                    <View key={idx} style={styles.costDetailRow}>\n                      <Text style={styles.costDetailText}>{rate.title}:</Text>\n                      <Text style={styles.costDetailText}>${parseFloat(rate.amount?.replace(/[^0-9.-]/g, '') || 0).toFixed(2)}</Text>\n                    </View>\n                ))}\n              </View>\n            )}\n          </TouchableOpacity>\n        );\n      })}\n\n      <View style={styles.costSummary}>\n        <View style={styles.summaryRow}>\n          <Text style={styles.summaryText}>Subtotal:</Text>\n          <Text style={styles.summaryText}>${parseFloat(booking?.cost_summary?.subtotal || 0).toFixed(2)}</Text>\n        </View>\n        <View style={styles.summaryRow}>\n          <Text style={styles.summaryText}>Platform Fee (10%):</Text>\n          <Text style={styles.summaryText}>${parseFloat(booking?.cost_summary?.platform_fee || 0).toFixed(2)}</Text>\n        </View>\n        <View style={styles.summaryRow}>\n          <Text style={styles.summaryText}>Taxes (8%):</Text>\n          <Text style={styles.summaryText}>${parseFloat(booking?.cost_summary?.taxes || 0).toFixed(2)}</Text>\n        </View>\n        <View style={[styles.summaryRow, styles.totalRow]}>\n          <Text style={styles.totalLabel}>Total Cost to Owner:</Text>\n          <Text style={styles.totalAmount}>\n            ${parseFloat(booking?.cost_summary?.total_owner_cost || 0).toFixed(2)}\n          </Text>\n        </View>\n        <View style={[styles.summaryRow, styles.payoutRow]}>\n          <Text style={styles.payoutLabel}>Sitter Payout:</Text>\n          <Text style={styles.payoutAmount}>\n            ${parseFloat(booking?.cost_summary?.total_sitter_payout || 0).toFixed(2)}\n          </Text>\n        </View>\n      </View>\n    </View>\n  );\n\n  const formatTimeString = (dateStr, timeStr) => {\n    if (!dateStr || !timeStr) return '';\n    const [hours, minutes] = timeStr.split(':');\n    const date = new Date(dateStr);\n    date.setHours(parseInt(hours, 10), parseInt(minutes, 10));\n    return format(date, 'h:mm a');\n  };\n\n  const sendBookingMessage = async (bookingId, recipientId, messageType) => {\n    try {\n      if (!booking) {\n        throw new Error('No booking data available');\n      }\n\n      if (is_DEBUG) {\n        console.log('Sending booking message:', {\n          bookingId,\n          recipientId,\n          messageType,\n          booking\n        });\n      }\n\n      // Find the existing conversation with Dr. Mike Johnson\n      const conversationId = 'conv_2'; // This is the existing conversation ID from mockData\n      if (is_DEBUG) {\n        console.log('Using existing conversation:', conversationId);\n      }\n\n      const bookingMessage = {\n        message_id: Date.now().toString(),\n        participant1_id: CURRENT_USER_ID,\n        participant2_id: recipientId,\n        sender: CURRENT_USER_ID,\n        type: 'booking_request',\n        data: {\n          bookingId: bookingId,\n          messageType: messageType,\n          serviceType: booking.serviceType,\n          dates: booking.occurrences.map(occ => ({\n            startDate: occ.start_date,\n            endDate: occ.end_date,\n            startTime: occ.start_time,\n            endTime: occ.end_time\n          })),\n          totalCost: booking.costs.totalOwnerCost,\n          status: booking.status\n        },\n        timestamp: new Date().toISOString(),\n        status: \"sent\",\n        is_booking_request: true,\n        metadata: {}\n      };\n\n      // Add message to existing conversation\n      if (!mockMessages[conversationId]) {\n        mockMessages[conversationId] = [];\n      }\n      mockMessages[conversationId].push(bookingMessage);\n\n      // Update the conversation's last message\n      const conversation = mockConversations.find(conv => conv.id === conversationId);\n      if (conversation) {\n        conversation.lastMessage = \"Approval Request sent\";\n        conversation.timestamp = new Date().toISOString();\n        conversation.unread = true;\n      }\n\n      if (is_DEBUG) {\n        console.log('Message sent successfully to conversation:', conversationId);\n        console.log('Updated conversation messages:', mockMessages[conversationId]);\n      }\n      return true;\n    } catch (error) {\n      console.error('Error sending booking message:', error);\n      return false;\n    }\n  };\n\n  const handleStatusUpdate = async (newStatus, reason = '', metadata = {}) => {\n    setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n    \n    try {\n      // First send the message\n      if (newStatus === BOOKING_STATES.PENDING_CLIENT_APPROVAL) {\n        const messageSent = await sendBookingMessage(\n          booking.id,\n          booking.ownerId || 'owner123',\n          'professional_changes'\n        );\n        if (!messageSent) {\n          throw new Error('Failed to send booking message');\n        }\n      }\n\n      // Then update the booking status\n      if (is_DEBUG) {\n        console.log('Updating booking status:', {\n          bookingId: booking.id,\n          currentStatus: booking.status,\n          newStatus,\n          reason,\n          metadata\n        });\n      }\n\n      const updatedBooking = await updateBookingStatus(\n        booking.id, \n        newStatus, \n        reason, \n        {\n          ...metadata,\n          occurrences: booking.occurrences,\n          costs: booking.costs\n        }\n      );\n\n      setBooking(updatedBooking);\n      setHasUnsavedChanges(false);\n      Alert.alert('Success', `Booking ${newStatus.toLowerCase()} successfully`);\n    } catch (error) {\n      console.error('Error updating booking status:', error);\n      Alert.alert('Error', 'Failed to update booking status');\n    } finally {\n      setConfirmationModal(prev => ({ \n        ...prev, \n        isLoading: false,\n        visible: false\n      }));\n    }\n  };\n\n  const handleRequestChanges = async (reason) => {\n    await handleStatusUpdate(BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES, reason);\n    setShowRequestChangesModal(false);\n  };\n\n  const showConfirmation = (actionText, onConfirm) => {\n    setConfirmationModal({\n      visible: true,\n      actionText,\n      onConfirm,\n      isLoading: false\n    });\n  };\n\n  const hideConfirmation = () => {\n    setConfirmationModal({\n      visible: false,\n      actionText: '',\n      onConfirm: null,\n      isLoading: false\n    });\n  };\n\n  const handleActionButtonClick = async (action, additionalData = null) => {\n    if (is_DEBUG) {\n      console.log('MBA12345 Action button clicked:', action, additionalData);\n    }\n    if (action === 'Send to Owner') {\n      try {\n        setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n        \n        const token = await getStorage('userToken');\n        if (!token) {\n          throw new Error('No authentication token found');\n        }\n\n        if (is_DEBUG) {\n          console.log('MBA12345 Sending booking update to owner for booking:', booking.booking_id);\n        }\n\n        // Call the update endpoint\n        const response = await axios.post(\n          `${API_BASE_URL}/api/bookings/v1/${booking.booking_id}/update/`,\n          {},  // Empty body since all data is in the draft\n          {\n            headers: { \n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          }\n        );\n\n        if (is_DEBUG) {\n          console.log('MBA12345 Update response:', response.data);\n        }\n\n        // Show success message\n        setSnackBar({\n          visible: true,\n          message: response.data.message || 'Booking sent to owner successfully',\n          type: 'success'\n        });\n\n        navigateToFrom(navigation, 'MessageHistory', 'BookingDetails', {\n          messageId: response.data.message_id,\n          conversationId: response.data.conversation_id,\n        });\n\n      } catch (error) {\n        console.error('Error in handleActionButtonClick:', error);\n        \n        if (error.response?.status === 400) {\n          // Show error for no draft data\n          setSnackBar({\n            visible: true,\n            message: error.response.data.error || 'No draft data found',\n            type: 'error'\n          });\n        } else {\n          setSnackBar({\n            visible: true,\n            message: 'Failed to process action. Please try again.',\n            type: 'error'\n          });\n        }\n      } finally {\n        setConfirmationModal(prev => ({ \n          ...prev, \n          isLoading: false,\n          visible: false\n        }));\n      }\n    } else if (action === 'Deny') {\n      // Handle deny action\n      try {\n        setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n        await handleStatusUpdate(BOOKING_STATES.DENIED);\n        setSnackBar({\n          visible: true,\n          message: 'Booking denied successfully',\n          type: 'success'\n        });\n      } catch (error) {\n        console.error('Error denying booking:', error);\n        setSnackBar({\n          visible: true,\n          message: 'Failed to deny booking. Please try again.',\n          type: 'error'\n        });\n      } finally {\n        setConfirmationModal(prev => ({ \n          ...prev, \n          isLoading: false,\n          visible: false\n        }));\n      }\n    } else if (action === 'Approve') {\n      try {\n        setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n        \n        if (is_DEBUG) {\n          console.log('MBA12345 Approving booking:', booking.booking_id);\n        }\n\n        const response = await approveBooking(booking.booking_id);\n\n        if (is_DEBUG) {\n          console.log('MBA12345 Approve response:', response);\n        }\n\n        // Update the local booking status\n        setBooking(prev => ({\n          ...prev,\n          status: response.status\n        }));\n\n        // Show success message\n        setSnackBar({\n          visible: true,\n          message: response.message || 'Booking approved successfully',\n          type: 'success'\n        });\n\n      } catch (error) {\n        console.error('Error approving booking:', error);\n        setSnackBar({\n          visible: true,\n          message: error.response?.data?.error || 'Failed to approve booking. Please try again.',\n          type: 'error'\n        });\n      } finally {\n        setConfirmationModal(prev => ({ \n          ...prev, \n          isLoading: false,\n          visible: false\n        }));\n      }\n    }\n  };\n\n  const renderActionButtons = () => {\n    if (!booking) return null;\n\n    const buttons = [];\n\n    if (isProfessionalView) {\n      // Deny button - Professional Only\n      if (booking.status === BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES) {\n        buttons.push(\n          <TouchableOpacity\n            key=\"deny\"\n            style={[styles.button, styles.denyButton]}\n            onPress={() => showConfirmation(\n              'deny this booking',\n              () => handleActionButtonClick('Deny')\n            )}\n          >\n            <Text style={styles.denybuttonText}>Deny</Text>\n          </TouchableOpacity>\n        );\n      }\n\n      // Send to Owner button - Professional Only\n      if ([\n        BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n        BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES,\n        BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES\n      ].includes(booking.status)) {\n        buttons.push(\n          <TouchableOpacity\n            key=\"send\"\n            style={[styles.button, styles.primaryButton]}\n            onPress={() => showConfirmation(\n              'send these changes to the owner',\n              () => handleActionButtonClick('Send to Owner')\n            )}\n          >\n            <Text style={styles.buttonText}>Send to Owner</Text>\n          </TouchableOpacity>\n        );\n      }\n    }\n\n    // Cancel button - Both Professional and Owner\n    if ([\n      BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES,\n      BOOKING_STATES.CONFIRMED,\n      BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES,\n      BOOKING_STATES.CONFIRMED_PENDING_CLIENT_APPROVAL\n    ].includes(booking.status)) {\n      buttons.push(\n        <TouchableOpacity\n          key=\"cancel\"\n          style={[styles.button, styles.cancelButton]}\n          onPress={() => showConfirmation(\n            'cancel this booking',\n            () => handleActionButtonClick('Cancel')\n          )}\n        >\n          <Text style={styles.cancelButtonText}>Cancel Booking</Text>\n        </TouchableOpacity>\n      );\n    }\n\n    // Owner-specific buttons\n    if (!isProfessionalView) {\n      // Approve button - Owner Only\n      if ([\n        BOOKING_STATES.PENDING_CLIENT_APPROVAL,\n        BOOKING_STATES.CONFIRMED_PENDING_CLIENT_APPROVAL\n      ].includes(booking.status)) {\n        buttons.push(\n          <TouchableOpacity\n            key=\"approve\"\n            style={[styles.button, styles.approveButton]}\n            onPress={() => showConfirmation(\n              'approve this booking',\n              () => handleActionButtonClick('Approve')\n            )}\n          >\n            <Text style={styles.buttonText}>Approve</Text>\n          </TouchableOpacity>\n        );\n      }\n    }\n\n    return (\n      <View style={styles.actionButtonsContainer}>\n        {buttons}\n      </View>\n    );\n  };\n\n  // Add this effect to update editedBooking when booking changes\n  useEffect(() => {\n    if (booking) {\n      setEditedBooking(booking);\n    }\n  }, [booking]);\n\n  const renderServiceTypeDropdown = () => (\n    <View style={styles.dropdownContainer}>\n      <TouchableOpacity\n        style={styles.dropdownInput}\n        onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n      >\n        <Text>{editedBooking?.service_details?.service_type || 'Select Service Type'}</Text>\n        <MaterialCommunityIcons \n          name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={24} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n\n      {showServiceDropdown && (\n        <View style={styles.dropdownList}>\n          <ScrollView nestedScrollEnabled={true}>\n            {isLoadingServices ? (\n              <ActivityIndicator style={{ padding: 10 }} />\n            ) : (\n              availableServices.map((service) => (\n                <TouchableOpacity\n                  key={service.service_id}\n                  style={styles.dropdownItem}\n                  onPress={() => {\n                    setEditedBooking(prev => ({\n                      ...prev,\n                      service_details: {\n                        ...prev.service_details,\n                        service_type: service.service_name,\n                        service_id: service.service_id\n                      }\n                    }));\n                    setShowServiceDropdown(false);\n                  }}\n                >\n                  <Text style={[\n                    styles.dropdownText,\n                    editedBooking?.service_details?.service_type === (service.service_name) && styles.selectedOption\n                  ]}>\n                    {service.service_name}\n                  </Text>\n                </TouchableOpacity>\n              ))\n            )}\n            {!isLoadingServices && availableServices.length === 0 && (\n              <Text style={styles.noContentText}>No services available</Text>\n            )}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  // When the user clicks the \"Add Event\" button\n  const handleAddOccurrenceClick = async () => {\n    // Clear any previous errors\n    setOccurrenceError(null);\n\n    // Validate pets\n    if (!booking?.pets?.length) {\n      setOccurrenceError('Please add and save pets before adding an event');\n      return;\n    }\n\n    // Validate service type\n    if (!booking?.service_details?.service_type) {\n      setOccurrenceError('Please select and save a service before adding an event');\n      return;\n    }\n\n    try {\n      // Fetch service rates before opening modal\n      const token = await getStorage('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA565656 Fetching service rates for booking:', booking.booking_id);\n      }\n\n      const response = await fetch(\n        `${API_BASE_URL}/api/bookings/v1/${booking.booking_id}/service_rates/`,\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      if (is_DEBUG) {\n        console.log('MBA565656 Service rates response:', data);\n      }\n\n      if (data.status === 'success' && data.rates) {\n        // Create default rates object\n        const defaultRates = {\n          base_rate: data.rates.base_rate,\n          additional_animal_rate: data.rates.additional_animal_rate,\n          applies_after: data.rates.applies_after,\n          holiday_rate: data.rates.holiday_rate,\n          unit_of_time: data.rates.unit_of_time,\n          additional_rates: data.rates.additional_rates.map(rate => ({\n            title: rate.title,\n            description: rate.description,\n            amount: rate.amount\n          })),\n          calculated_cost: Math.round(data.rates.calculated_cost * 100) / 100\n        };\n\n        if (is_DEBUG) {\n          console.log('MBA565656 Setting defaultOccurrenceRates:', defaultRates);\n        }\n\n        // Set the default rates\n        setDefaultOccurrenceRates(defaultRates);\n        \n        // Clear selected occurrence\n        setSelectedOccurrence(null);\n\n        // Open the modal\n        setShowAddOccurrenceModal(true);\n      } else {\n        throw new Error('Invalid response format from service rates endpoint');\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA565656 Error fetching service rates:', error);\n      }\n      setOccurrenceError('Failed to load service rates. Please try again.');\n    }\n  };\n\n  const renderDateTimeSection = () => (\n    <View>\n      <Text style={styles.sectionTitle}>\n        {canEdit() ? \"Dates & Times (Set Rates For Dates)\" : \"Dates & Times\"}\n      </Text>\n      {occurrenceError && (\n        <Text style={styles.errorMessage}>{occurrenceError}</Text>\n      )}\n      {(booking?.occurrences || []).map((occ, index) => (\n        <TouchableOpacity\n          key={index}\n          style={styles.occurrenceCard}\n          onPress={() => canEdit() ? handleDateTimeCardPress(occ) : null}\n          disabled={!canEdit()}\n        >\n          <Text style={styles.dateTimeText}>\n            {occ.formatted_start} - {occ.formatted_end}\n            {'\\n'}<Text style={[{ fontWeight: '525' }]}>Total: {occ.duration} ({occ.timezone})</Text>\n            {occ.dst_message && (\n              <Text style={[{ color: theme.colors.danger, fontSize: 12 }]}>\n                {'\\n'}{occ.dst_message}\n              </Text>\n            )}\n          </Text>\n          {canEdit() && (\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          )}\n        </TouchableOpacity>\n      ))}\n      \n      {canEdit() && (\n        <TouchableOpacity\n          style={styles.addOccurrenceButton}\n          onPress={handleAddOccurrenceClick}\n        >\n          <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />\n          <Text style={styles.addOccurrenceText}>Add Event</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n\n  const handleDeleteOccurrence = async (occurrenceId) => {\n    setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n    \n    try {\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      const updatedOccurrences = booking.occurrences.filter(occ => occ.occurrence_id !== occurrenceId);\n      \n      setBooking(prev => ({\n        ...prev,\n        occurrences: updatedOccurrences,\n        costs: calculateTotalCosts(updatedOccurrences)\n      }));\n      \n      handleStatusUpdateAfterEdit();\n    } catch (error) {\n      console.error('Error deleting occurrence:', error);\n      Alert.alert('Error', 'Failed to delete occurrence');\n    } finally {\n      setConfirmationModal(prev => ({ \n        ...prev, \n        isLoading: false,\n        visible: false\n      }));\n      \n      setTimeout(() => {\n        setConfirmationModal({ \n          visible: false, \n          actionText: '', \n          onConfirm: null, \n          isLoading: false \n        });\n      }, 300);\n    }\n  };\n\n  const confirmDeleteOccurrence = (occurrenceId) => {\n    setConfirmationModal({\n      visible: true,\n      actionText: 'delete this occurrence',\n      onConfirm: () => handleDeleteOccurrence(occurrenceId),\n      isLoading: false\n    });\n  };\n\n  const updateServiceType = async (bookingId, serviceId) => {\n    try {\n      if (is_DEBUG) console.log('MBA123a73hv - Updating service type:', { bookingId, serviceId });\n      const token = await getStorage('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      const response = await fetch(`${API_BASE_URL}/api/booking_drafts/v1/${bookingId}/update_service_type/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify({ service_id: serviceId })\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        if (is_DEBUG) console.error('MBA123a73hv - Error updating service type:', errorData);\n        throw new Error(errorData.error || 'Failed to update service type');\n      }\n\n      const data = await response.json();\n      if (is_DEBUG) console.log('MBA123a73hv - Service type update response:', data);\n      return data;\n    } catch (error) {\n      if (is_DEBUG) console.error('MBA123a73hv - Error updating service type:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader\n        title=\"Booking Details\"\n        onBackPress={() => handleBack(navigation)}\n      />\n      {loading ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        </View>\n      ) : !booking ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>Unable to load booking details</Text>\n        </View>\n      ) : (\n        <ScrollView style={styles.container}>\n          <StatusBadge status={getDisplayValue(booking?.status, 'Pending Professional Changes')} />\n          \n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Booking Parties</Text>\n            <View style={styles.serviceDetailRow}>\n              <Text style={styles.label}>Owner: </Text>\n              <Text style={styles.value}>{getDisplayValue(booking?.ownerName)}</Text>\n            </View>\n            <View style={styles.serviceDetailRow}>\n              <Text style={styles.label}>Professional:  </Text>\n              <Text style={styles.value}>{getDisplayValue(booking?.professionalName)}</Text>\n            </View>\n          </View>\n\n          <View style={[styles.section, styles.petsSection]}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Booking Pets</Text>\n              {renderEditButton()}\n            </View>\n            \n            {renderPetSelector()}\n          </View>\n\n          <View style={[styles.section, { zIndex: 2 }]}>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Service Details</Text>\n              {canEdit() && (\n                <TouchableOpacity \n                  onPress={toggleServiceEditMode}\n                  style={[styles.sectionEditButton, isServiceEditMode && styles.saveButton]}\n                  disabled={isServiceSaving}\n                  testID=\"edit-button\"\n                >\n                  {isServiceEditMode ? (\n                    isServiceSaving ? (\n                      <ActivityIndicator size=\"small\" color={theme.colors.surface} />\n                    ) : (\n                      <Text style={styles.saveButtonText}>Save Service Details</Text>\n                    )\n                  ) : (\n                    <MaterialCommunityIcons \n                      name=\"pencil\"\n                      size={24} \n                      color={theme.colors.primary} \n                    />\n                  )}\n                </TouchableOpacity>\n              )}\n            </View>\n            {isServiceEditMode ? (\n              <View style={styles.serviceEditContainer}>\n                <View style={[styles.serviceInputRow, { zIndex: 3 }]}>\n                  <Text style={styles.inputLabel}>Service Type:</Text>\n                  <View style={styles.inputContainer}>\n                    {renderServiceTypeDropdown()}\n                  </View>\n                </View>\n              </View>\n            ) : (\n              <View style={styles.serviceDetailsContainer}>\n                <View style={styles.serviceDetailRow}>\n                  <Text style={styles.label}>Service Type: </Text>\n                  <Text style={styles.value}>{booking.service_details.service_type}</Text>\n                </View>\n              </View>\n            )}\n          </View>\n\n          <View style={[styles.section, styles.dateTimeSection]}>\n            {renderDateTimeSection()}\n          </View>\n\n          {renderCostBreakdown()}\n\n          <View style={styles.section}>\n            <Text style={styles.sectionTitle}>Cancellation Policy</Text>\n            <Text style={styles.policyText}>\n              • No refund if canceled within 1 hour of booking start time{'\\n'}\n              • 50% refund if canceled between 1-24 hours before start time{'\\n'}\n              • Full refund if canceled more than 24 hours before the booking\n            </Text>\n          </View>\n\n          {renderActionButtons()}\n\n          <RequestChangesModal\n            visible={showRequestChangesModal}\n            onClose={() => setShowRequestChangesModal(false)}\n            onSubmit={handleRequestChanges}\n            loading={actionLoading}\n          />\n        </ScrollView>\n      )}\n      <AddRateModal\n        visible={showAddRateModal}\n        onClose={() => setShowAddRateModal(false)}\n        onAdd={(newRate) => {\n          setEditedBooking(prev => ({\n            ...prev,\n            rates: {\n              ...prev.rates,\n              extraServices: [...(prev.rates.extraServices || []), newRate]\n            }\n          }));\n          recalculateTotals();\n          setShowAddRateModal(false);\n        }}\n      />\n      <AddOccurrenceModal\n        visible={showAddOccurrenceModal}\n        onClose={() => {\n          setShowAddOccurrenceModal(false);\n          setDefaultOccurrenceRates(null);\n          setTimeout(() => {\n            setSelectedOccurrence(null);\n          }, 300);\n        }}\n        onAdd={selectedOccurrence ? \n          (updatedData) => handleSaveOccurrence({...updatedData, occurrence_id: selectedOccurrence.occurrence_id}) : \n          handleAddOccurrence}\n        defaultRates={defaultOccurrenceRates}\n        initialOccurrence={selectedOccurrence}\n        isEditing={!!selectedOccurrence}\n        booking={booking}\n      />\n      <ConfirmationModal\n        visible={confirmationModal.visible}\n        actionText={confirmationModal.actionText}\n        onClose={() => {\n          if (!confirmationModal.isLoading) {\n            setConfirmationModal({ \n              visible: false, \n              actionText: confirmationModal.actionText, \n              onConfirm: null, \n              isLoading: false \n            });\n          }\n        }}\n        onConfirm={confirmationModal.onConfirm}\n        isLoading={confirmationModal.isLoading}\n      />\n      <SnackBar \n        visible={snackBar.visible} \n        message={snackBar.message} \n        type={snackBar.type}\n      />\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n  },\n  statusText: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  section: {\n    marginBottom: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    position: 'relative',\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  label: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    alignSelf: 'center',\n    fontWeight: '500',\n  },\n  value: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n    alignSelf: 'center',\n  },\n  text: {\n    fontSize: 16,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  costRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  totalRow: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 8,\n    marginTop: 8,\n  },\n  totalLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmount: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  payoutRow: {\n    marginTop: 12,\n    paddingTop: 12,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  payoutLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.success,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  payoutAmount: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.success,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  policyText: {\n    fontSize: 14,\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  button: {\n    flex: 1,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  denybuttonText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  primaryButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  denyButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.error,\n    textColor: theme.colors.error,\n  },\n  approveButton: {\n    backgroundColor: theme.colors.mainColors.tertiary,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.error,\n    padding: 8,\n    borderRadius: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  cancelButtonText: {\n    color: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.error,\n    padding: 8,\n    borderRadius: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  errorText: {  \n    fontSize: theme.fontSizes.largeLarge,\n    color: theme.colors.error,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  statusLabel: {\n    fontSize: 16,\n    marginRight: 8,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timeText: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  addOccurrenceText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceCost: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noContentText: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  saveButtonText: {\n    color: 'white',\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  editButton: {\n  },\n  editField: {\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  editableServiceRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  removeServiceButton: {\n    marginLeft: 8,\n  },\n  editRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n    position: 'relative',\n  },\n  editInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    padding: 8,\n    width: 80,\n    textAlign: 'right',\n  },\n  addRateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginTop: 8,\n  },\n  addRateText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: 16,\n  },\n  dropdownContainer: {\n    position: 'relative',\n    width: 150,\n  },\n  dropdownInput: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    padding: 4,\n    backgroundColor: theme.colors.surface,\n  },\n  timeDropdownList: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: '#FFFFFF',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    maxHeight: 200,\n    zIndex: 1001,\n    elevation: 5,\n    marginTop: 4,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: '#FFFFFF',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  bookingDatesSection: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  sectionSubtitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dateTimeRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 15,\n  },\n  datePickerContainer: {\n    flex: 1,\n    marginRight: 10,\n  },\n  timePickerContainer: {\n    width: 120,\n  },\n  timePickerButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n  },\n  dropdownList: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: '100%',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  rateSection: {\n    marginBottom: 20,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n  },\n  rateSectionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 12,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  rateInputRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 8,\n  },\n  rateInputGroup: {\n    flex: 1,\n  },\n  inputLabel: {\n    fontSize: theme.fontSizes.largeLarge,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    padding: 8,\n    fontSize: 14,\n  },\n  additionalRateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    marginBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingBottom: 8,\n  },\n  removeButton: {\n    padding: 4,\n  },\n  summarySection: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  rateHeaderRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n    paddingHorizontal: 4,\n  },\n  columnHeader: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateAmountColumn: {\n    alignItems: 'flex-start',\n  },\n  rateActionButtons: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: 72,\n    gap: 8,\n  },\n  infoButton: {\n    padding: 4,\n  },\n  actionButtonsContainer: {\n    padding: 16,\n    backgroundColor: theme.colors.surface,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 12,\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    padding: 16,\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n  },\n  reasonInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    minHeight: 100,\n    textAlignVertical: 'top',\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n  },\n  modalButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  submitButtonText: {\n    color: theme.colors.surface,\n    fontWeight: '500',\n  },\n  serviceEditContainer: {\n    gap: 16,\n  },\n  serviceInputRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  inputLabel: {\n    fontSize: theme.fontSizes.largeLarge,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  inputContainer: {\n    width: 150, // Fixed width for dropdowns and number input\n  },\n  numberInput: {\n    height: 40,\n    width: 150, // Match the width of dropdowns\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    fontSize: 16,\n  },\n  serviceDetailsContainer: {\n    gap: 12,\n  },\n  serviceDetailRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  value: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n    alignSelf: 'center',\n  },\n  occurrenceActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  actionButton: {\n    padding: 8,\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n    minWidth: 140,  // Ensure enough width for the text\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  saveButtonText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButtons: {\n    width: 72, // Approximate width of both buttons + gap\n  },\n  additionalRateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    marginBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingBottom: 8,\n  },\n  occurrenceCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  occurrenceDetails: {\n    flex: 1,\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timeText: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  editOccurrenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginLeft: 20,\n  },\n  editOccurrenceText: {\n    color: theme.colors.primary,\n    marginLeft: 5,\n  },\n  addOccurrenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    marginTop: 12,\n  },\n  addOccurrenceText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: 16,\n  },\n  occurrenceCostRow: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingVertical: 12,\n  },\n  occurrenceCostHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  occurrenceCostHeaderText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  costAndIcon: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  occurrenceCost: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  costSummary: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  expandedCostDetails: {\n    marginTop: 10,\n    paddingTop: 10,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  costDetailRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 4,\n  },\n  costDetailText: {\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  sectionEditButton: {\n    padding: 8,\n  },\n  petItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n  },\n  addPetButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginTop: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    justifyContent: 'center',\n  },\n  addPetText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: 16,\n  },\n  petDropdown: {\n    maxHeight: 200,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginTop: 8,\n    backgroundColor: theme.colors.surface,\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownPetName: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  dropdownPetDetails: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    marginTop: 2,\n  },\n  noPetsText: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontStyle: 'italic',\n  },\n  petsSection: {\n    zIndex: 3,\n    elevation: 3,\n  },\n  dateTimeSection: {\n    zIndex: 1,\n    elevation: 1,\n  },\n  payoutRow: {\n    marginTop: 12,\n    paddingTop: 12,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  payoutLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.success,\n  },\n  payoutAmount: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.success,\n  },\n  ownerName: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  proName: {\n    fontSize: 18,\n    fontWeight: 'normal',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  serviceTypeLabel: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    fontWeight: 'normal',\n  },\n  petListTitle: {\n    fontSize: 16,\n    fontWeight: '900',\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  petInfo: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  occurrenceDate: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceTime: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  costBreakdownTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  costLabel: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  costAmount: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  additionalRateLabel: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  additionalRateAmount: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceDetailLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceDetailValue: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceCardTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  occurrenceCardDate: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceCardTime: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  editOccurrenceText: {\n    color: theme.colors.primary,\n    marginLeft: 5,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  summaryRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  summaryText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceCardText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dateTimeText: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 8,\n    marginBottom: 8,\n  },\n});\n\nexport default BookingDetails;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, ActivityIndicator, Platform, Dimensions } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport ServiceManager from '../components/ServiceManager';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport { handleBack } from '../components/Navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getProfessionalServices } from '../api/API';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { useToast } from '../components/ToastProvider';\n\nconst ServiceManagerScreen = () => {\n  const navigation = useNavigation();\n  const [services, setServices] = useState([]);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMobile, setIsMobile] = useState(Dimensions.get('window').width < 900);\n  const { isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const showToast = useToast();\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  const fetchServices = async () => {\n    try {\n      setIsLoading(true);\n      const data = await getProfessionalServices();\n      if (is_DEBUG) console.log('MBA7890: Fetched services:', data);\n      setServices(data);\n    } catch (error) {\n      console.error('MBA7890: Error fetching services:', error);\n      showToast({\n        message: 'Failed to load services',\n        type: 'error',\n        duration: 3000\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchServices();\n  }, [is_DEBUG]);\n\n  // Effect to handle unsaved changes\n  useEffect(() => {\n    if (hasUnsavedChanges) {\n      fetchServices();\n      setHasUnsavedChanges(false);\n    }\n  }, [hasUnsavedChanges]);\n\n  useEffect(() => {\n    const setRouteHistory = async () => {\n      const currentRoute = 'ServiceManager';\n      let previousRoute;\n\n      if (Platform.OS === 'web') {\n        previousRoute = sessionStorage.getItem('previousRoute');\n        sessionStorage.setItem('previousRoute', previousRoute || '');\n        sessionStorage.setItem('currentRoute', currentRoute);\n      } else {\n        previousRoute = await AsyncStorage.getItem('previousRoute');\n        await AsyncStorage.setItem('previousRoute', previousRoute || '');\n        await AsyncStorage.setItem('currentRoute', currentRoute);\n      }\n\n      if (!previousRoute) {\n        previousRoute = 'Dashboard';\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('previousRoute', previousRoute || '');\n          sessionStorage.setItem('currentRoute', currentRoute);\n        } else {\n          await AsyncStorage.setItem('previousRoute', previousRoute || '');\n          await AsyncStorage.setItem('currentRoute', currentRoute);\n        }\n      }\n    };\n    setRouteHistory();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <View style={[styles.container, styles.loadingContainer]}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: !isMobile ? (isCollapsed ? 70 : 250) : 0 }\n    ]}>\n      {isMobile && (\n        <BackHeader \n          title=\"Service Manager\" \n          onBackPress={() => handleBack(navigation)} \n        />\n      )}\n      <View style={[styles.content, { marginTop: isMobile ? 20 : 0 }]}>\n        <ServiceManager\n          services={services || []}\n          setServices={setServices}\n          setHasUnsavedChanges={setHasUnsavedChanges}\n          isProfessionalTab={false}\n          isMobile={isMobile}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default ServiceManagerScreen; ","import React, { useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Platform,\n  TextInput\n} from 'react-native';\nimport { useTheme, Searchbar } from 'react-native-paper';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackHeader from '../components/BackHeader';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst BlogScreen = ({ navigation }) => {\n  const theme = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState(BLOG_POSTS);\n\n  const handleBack = () => {\n    navigation.navigate('More');\n  };\n\n  const handleSearch = useCallback((query) => {\n    setSearchQuery(query);\n    const lowercaseQuery = query.toLowerCase();\n    const filtered = BLOG_POSTS.filter(post => \n      post.title.toLowerCase().includes(lowercaseQuery) ||\n      post.author.name.toLowerCase().includes(lowercaseQuery) ||\n      post.content.toLowerCase().includes(lowercaseQuery)\n    );\n    setFilteredPosts(filtered);\n  }, []);\n\n  const renderBlogPost = (post) => {\n    const truncatedContent = post.content.slice(0, 200) + '...';\n\n    return (\n      <TouchableOpacity\n        key={post.id}\n        style={[styles.blogCard, { backgroundColor: theme.colors.surface }]}\n        onPress={() => navigateToFrom(navigation, 'Blog', 'BlogPost', { post })}\n      >\n        <View style={styles.authorContainer}>\n          <Image\n            source={{ uri: post.author.profilePicture }}\n            style={styles.authorImage}\n          />\n          <View style={styles.blogContent}>\n            <Text style={[styles.title, { color: theme.colors.primary }]}>{post.title}</Text>\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.dot}> • </Text>\n              <Text style={styles.readTime}>{post.readTime}</Text>\n            </View>\n            <Text style={styles.preview} numberOfLines={3}>\n              {truncatedContent}\n            </Text>\n            <View style={styles.tags}>\n              {post.tags.map((tag, index) => (\n                <View \n                  key={index} \n                  style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n                >\n                  <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.stats}>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"heart-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.likes}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"comment-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.comments}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"share-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.shares}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <BackHeader \n        title=\"Blog\" \n        onBackPress={handleBack}\n      />\n      <View style={styles.searchBarContainer}>\n        {Platform.OS === 'web' ? (\n          <View style={[styles.searchBar, { backgroundColor: theme.colors.surface }]}>\n            <MaterialCommunityIcons name=\"magnify\" size={24} color={theme.colors.primary} />\n            <TextInput\n              placeholder=\"Search by title, author, or content\"\n              onChangeText={handleSearch}\n              value={searchQuery}\n              style={styles.webSearchInput}\n            />\n            {searchQuery ? (\n              <TouchableOpacity onPress={() => handleSearch('')}>\n                <MaterialCommunityIcons name=\"close-circle\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n            ) : null}\n          </View>\n        ) : (\n          <Searchbar\n            placeholder=\"Search by title, author, or content\"\n            onChangeText={handleSearch}\n            value={searchQuery}\n            style={styles.searchBar}\n            icon=\"magnify\"\n            clearIcon=\"close-circle\"\n          />\n        )}\n      </View>\n      <ScrollView style={styles.scrollView}>\n        {filteredPosts.length > 0 ? (\n          filteredPosts.map(renderBlogPost)\n        ) : (\n          <View style={styles.noResultsContainer}>\n            <MaterialCommunityIcons \n              name=\"magnify-close\" \n              size={48} \n              color={theme.colors.secondary} \n            />\n            <Text style={[styles.noResultsText, { color: theme.colors.secondary }]}>\n              No blog posts found\n            </Text>\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  searchBarContainer: {\n    margin: 16,\n  },\n  searchBar: {\n    elevation: 4,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  searchInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  blogCard: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  authorContainer: {\n    flexDirection: 'row',\n  },\n  authorImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  blogContent: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  authorName: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  readTime: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  preview: {\n    fontSize: 14,\n    lineHeight: 20,\n    marginBottom: 12,\n    color: '#444',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 12,\n  },\n  tag: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 12,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 8,\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  statText: {\n    marginLeft: 4,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noResultsContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    marginTop: 40,\n  },\n  noResultsText: {\n    fontSize: 18,\n    fontWeight: '500',\n    marginTop: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  webSearchInput: {\n    flex: 1,\n    padding: 8,\n    fontSize: 16,\n    color: theme.colors.text,\n    border: 'none',\n    backgroundColor: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n    outlineWidth: 0,\n    outlineStyle: 'none',\n    boxShadow: 'none',\n    borderColor: 'transparent',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default BlogScreen;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Linking,\n  Platform\n} from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackHeader from '../components/BackHeader';\nimport { theme } from '../styles/theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { handleBack, navigateToFrom } from '../components/Navigation';\n\nconst BlogPost = ({ route, navigation }) => {\n  const [post, setPost] = useState(null);\n  const theme = useTheme();\n\n  // Validate post data structure\n  const isValidPost = (postData) => {\n    return postData && \n           typeof postData === 'object' && \n           postData.author && \n           typeof postData.author === 'object' &&\n           postData.author.name &&\n           postData.author.profilePicture &&\n           postData.author.bio &&\n           postData.title &&\n           postData.content &&\n           Array.isArray(postData.tags);\n  };\n\n  useEffect(() => {\n    const loadPost = async () => {\n      try {\n        // Try to get post from route params first\n        if (route?.params?.post && isValidPost(route.params.post)) {\n          setPost(route.params.post);\n          // Store the post data\n          if (Platform.OS === 'web') {\n            sessionStorage.setItem('currentBlogPost', JSON.stringify(route.params.post));\n          } else {\n            await AsyncStorage.setItem('currentBlogPost', JSON.stringify(route.params.post));\n          }\n          return;\n        }\n\n        // If no route params or invalid post, try to load from storage\n        let storedPost;\n        if (Platform.OS === 'web') {\n          storedPost = sessionStorage.getItem('currentBlogPost');\n        } else {\n          storedPost = await AsyncStorage.getItem('currentBlogPost');\n        }\n\n        if (storedPost) {\n          const parsedPost = JSON.parse(storedPost);\n          if (isValidPost(parsedPost)) {\n            setPost(parsedPost);\n            return;\n          }\n        }\n\n        // If no valid post found in storage, try to find it in BLOG_POSTS\n        if (route?.params?.postId) {\n          const foundPost = BLOG_POSTS.find(p => p.id === route.params.postId);\n          if (foundPost && isValidPost(foundPost)) {\n            setPost(foundPost);\n            return;\n          }\n        }\n\n        // If still no valid post, redirect to blog list\n        navigateToFrom(navigation, 'Blog', 'BlogPost');\n      } catch (error) {\n        console.error('Error loading blog post:', error);\n        navigateToFrom(navigation, 'Blog', 'BlogPost');\n      }\n    };\n\n    loadPost();\n  }, [route?.params]);\n\n  // If no post data is available, show an error state\n  if (!post || !isValidPost(post)) {\n    return (\n      <View style={[styles.mainContainer, { backgroundColor: theme.colors.background }]}>\n        <BackHeader \n          title=\"Blog Post\"\n          onBackPress={() => handleBack(navigation)}\n        />\n        <View style={styles.errorContainer}>\n          <MaterialCommunityIcons \n            name=\"alert-circle-outline\" \n            size={48} \n            color={theme.colors.error} \n          />\n          <Text style={[styles.errorText, { color: theme.colors.error }]}>\n            Blog post not found or invalid\n          </Text>\n          <TouchableOpacity\n            style={[styles.errorButton, { backgroundColor: theme.colors.primary }]}\n            onPress={() => navigateToFrom(navigation, 'Blog', 'BlogPost')}\n          >\n            <Text style={[styles.errorButtonText, { color: theme.colors.surface }]}>\n              Go to Blog List\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  const handleReferencePress = (reference) => {\n    if (reference.url) {\n      Linking.openURL(reference.url);\n    } else if (reference.doi) {\n      Linking.openURL(`https://doi.org/${reference.doi}`);\n    }\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: theme.colors.background }]}>\n      <BackHeader \n        title={post.title}\n        onBackPress={() => handleBack(navigation)}\n      />\n      <ScrollView style={styles.container}>\n        <View style={styles.header}>\n          <View style={styles.authorContainer}>\n            <Image\n              source={{ uri: post.author.profilePicture }}\n              style={styles.authorImage}\n            />\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.authorBio}>{post.author.bio}</Text>\n              <View style={styles.postInfo}>\n                <Text style={styles.date}>{post.publishDate}</Text>\n                <Text style={styles.dot}> • </Text>\n                <Text style={styles.readTime}>{post.readTime}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.tags}>\n          {post.tags.map((tag, index) => (\n            <View \n              key={index} \n              style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n            >\n              <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n            </View>\n          ))}\n        </View>\n\n        <Text style={[styles.content, { color: theme.colors.text }]}>{post.content}</Text>\n\n        <View style={styles.stats}>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"heart-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.likes}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"comment-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.comments}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"share-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.shares}</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.references}>\n          <Text style={[styles.referencesTitle, { color: theme.colors.primary }]}>References</Text>\n          {post.references.map((reference, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.reference}\n              onPress={() => handleReferencePress(reference)}\n            >\n              <Text style={styles.referenceText}>\n                {reference.authors} ({reference.year || 'n.d.'}). {reference.title}. {reference.publication}.\n                {reference.doi && ` DOI: ${reference.doi}`}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n  },\n  authorContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  authorImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 12,\n  },\n  authorInfo: {\n    flex: 1,\n  },\n  authorName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorBio: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  postInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  readTime: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 16,\n    paddingTop: 0,\n  },\n  tag: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  content: {\n    fontSize: 16,\n    lineHeight: 24,\n    padding: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 16,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  statText: {\n    marginLeft: 8,\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  references: {\n    padding: 16,\n  },\n  referencesTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  reference: {\n    marginBottom: 12,\n  },\n  referenceText: {\n    fontSize: 14,\n    color: '#444',\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: '500',\n    marginTop: 16,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n  },\n  errorButtonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default BlogPost;","import React, { useState, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Platform, ScrollView, Clipboard } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst CrossPlatformContent = ({ children }) => {\n  // For web, we need to add a div with margin auto to center content\n  if (Platform.OS === 'web') {\n    return (\n      <View style={{ \n        width: '100%', \n        maxWidth: 550, \n        marginLeft: 'auto', \n        marginRight: 'auto',\n        paddingHorizontal: 15\n      }}>\n        {children}\n      </View>\n    );\n  }\n  // For native, just return children\n  return <>{children}</>;\n};\n\nconst Waitlist = () => {\n  const navigation = useNavigation();\n  const { is_prototype, screenWidth } = useContext(AuthContext);\n  const [state, handleFormspreeSubmit] = useForm(\"mkgobpro\");\n  \n  // Form state\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [petInfo, setPetInfo] = useState('');\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [userType, setUserType] = useState('');\n  const [hesitations, setHesitations] = useState('');\n  const [desiredFeatures, setDesiredFeatures] = useState('');\n  const [newsletter, setNewsletter] = useState(false);\n  const [agreeToTerms, setAgreeToTerms] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [otherService, setOtherService] = useState('');\n  const [showOtherInput, setShowOtherInput] = useState(false);\n  const [streetAddress, setStreetAddress] = useState('');\n  const [aptUnit, setAptUnit] = useState('');\n  const [city, setCity] = useState('');\n  const [stateRegion, setStateRegion] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [referralSource, setReferralSource] = useState('');\n  const [otherReferralSource, setOtherReferralSource] = useState('');\n\n  // Calculate responsive widths\n  const isMobile = screenWidth < 768;\n  const maxContentWidth = '100%';\n\n  // Navigation handler for back button\n  const handleBackToSignup = () => {\n    navigation.navigate('SignUp');\n  };\n\n  const services = [\n    'Pet Sitting',\n    'Grooming',\n    'Training',\n    'Veterinary Services',\n    'Farm/Homestead Care',\n    'Care Consulting',\n    'Other'\n  ];\n\n  const userTypes = [\n    'Pet owner in need of services',\n    'Care specialist (sitter, groomer, ferrier, fish tank cleaner, etc)',\n    'Both'\n  ];\n\n  const referralSources = [\n    'Nextdoor',\n    'Reddit',\n    'Google',\n    'Other - Enter name of Person who referred you or other referral source for a free sticker'\n  ];\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!email || !firstName || !lastName || !phone || !petInfo || selectedServices.length === 0 || !userType || !agreeToTerms || !referralSource) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const formData = {\n        firstName,\n        lastName,\n        email,\n        phone,\n        petInfo,\n        services: selectedServices.includes('Other') \n          ? [...selectedServices.filter(s => s !== 'Other'), `Other: ${otherService}`]\n          : selectedServices,\n        userType,\n        hesitations,\n        desiredFeatures,\n        newsletter,\n        agreeToTerms,\n        referralSource: referralSource === 'Other' ? `Other: ${otherReferralSource}` : referralSource,\n        address: streetAddress ? {\n          street: streetAddress,\n          apt_unit: aptUnit,\n          city: city,\n          state: stateRegion,\n          zip_code: zipCode\n        } : null\n      };\n\n      await handleFormspreeSubmit(formData);\n\n      if (state.succeeded) {\n        // Reset form\n        setFirstName('');\n        setLastName('');\n        setEmail('');\n        setPhone('');\n        setPetInfo('');\n        setSelectedServices([]);\n        setOtherService('');\n        setShowOtherInput(false);\n        setUserType('');\n        setHesitations('');\n        setDesiredFeatures('');\n        setNewsletter(false);\n        setAgreeToTerms(false);\n        setStreetAddress('');\n        setAptUnit('');\n        setCity('');\n        setStateRegion('');\n        setZipCode('');\n        setReferralSource('');\n        setOtherReferralSource('');\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const toggleService = (service) => {\n    setSelectedServices(prev => {\n      if (service === 'Other') {\n        setShowOtherInput(!prev.includes('Other'));\n      }\n      return prev.includes(service)\n        ? prev.filter(s => s !== service)\n        : [...prev, service];\n    });\n  };\n\n  const handleCopyLink = async () => {\n    try {\n      await Clipboard.setString('https://crittrcove.com/waitlist');\n      alert('Link copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy link:', error);\n    }\n  };\n\n  if (state.succeeded) {\n    return (\n      <CrossPlatformView fullWidthHeader={true} contentWidth={maxContentWidth}>\n        <BackHeader \n          title=\"Join Waitlist\" \n          onBackPress={handleBackToSignup} \n        />\n        <ScrollView \n          style={styles.scrollView} \n          contentContainerStyle={styles.scrollViewContent}\n        >\n          <CrossPlatformContent>\n            <View style={styles.container}>\n              <View style={styles.contentWrapper}>\n                <Text style={[styles.title, { color: theme.colors.primary }]}>\n                  Thank you for joining the CrittrCove waitlist!\n                </Text>\n                <Text style={styles.successMessage}>\n                  As a waitlist member, you'll enjoy exclusive early access to the app, priority placement, \n                  special gifts, and a unique profile badge to highlight your role as a founding member of CrittrCove.\n                </Text>\n                <View style={styles.referralSection}>\n                  <Text style={[styles.title, { fontSize: theme.fontSizes.large, marginTop: 20 }]}>\n                    Want Another Custom Pet Sticker? 🎁\n                  </Text>\n                  <Text style={styles.successMessage}>\n                    Share CrittrCove with your pet-loving friends! When they join the waitlist using this link:\n                  </Text>\n                  <View style={styles.linkContainer}>\n                    <Text style={styles.link}>https://crittrcove.com/waitlist</Text>\n                    <TouchableOpacity onPress={handleCopyLink} style={styles.copyButton}>\n                      <MaterialCommunityIcons name=\"content-copy\" size={20} color={theme.colors.primary} />\n                    </TouchableOpacity>\n                  </View>\n                  <Text style={styles.successMessage}>\n                    and mention your name, we'll send you another custom sticker featuring your pet. It's our way of saying thank you for helping\n                    grow our community!\n                  </Text>\n                  <Text style={[styles.successMessage, { fontStyle: 'italic' }]}>\n                    Simply tell your friends to mention your name when they sign up, and we'll take care of the rest.\n                  </Text>\n                </View>\n                <Text style={styles.successMessage}>\n                  Stay tuned for exciting updates!\n                </Text>\n              </View>\n            </View>\n          </CrossPlatformContent>\n        </ScrollView>\n      </CrossPlatformView>\n    );\n  }\n\n  return (\n    <CrossPlatformView fullWidthHeader={true} contentWidth={maxContentWidth}>\n      <BackHeader \n        title=\"Join Waitlist\" \n        onBackPress={handleBackToSignup} \n      />\n      <ScrollView \n        style={styles.scrollView} \n        contentContainerStyle={styles.scrollViewContent}\n      >\n        <CrossPlatformContent>\n          <View style={styles.container}>\n            <View style={styles.contentWrapper}>\n              <Text style={styles.title}>Join the CrittrCove Waitlist!</Text>\n              <Text style={styles.description}>\n                Welcome to Critter Cove's early sign-up, the ultimate pet care marketplace for all pets—whether furry, feathery, or scaly! \n                Our app connects local pet care specialists with pet owners, offering reliable and loving care for your beloved companions.\n              </Text>\n              <Text style={styles.description}>\n                By joining our waitlist, you'll gain early access to exclusive features, special gifts, education, discounts, a custom sticker featuring your pet (if you so wish), and a profile badge as a founding member of the Critter Cove community.\n              </Text>\n\n              <Text style={styles.requiredFieldNote}>\n                <Text style={styles.requiredAsterisk}>*</Text> indicates required field\n              </Text>\n\n              <View style={styles.formSection}>\n                <View style={styles.nameContainer}>\n                  <View style={styles.nameField}>\n                    <Text style={styles.label}>First Name <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={styles.input}\n                      value={firstName}\n                      onChangeText={setFirstName}\n                      placeholder=\"First Name\"\n                    />\n                  </View>\n                  <View style={styles.nameField}>\n                    <Text style={styles.label}>Last Name <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={styles.input}\n                      value={lastName}\n                      onChangeText={setLastName}\n                      placeholder=\"Last Name\"\n                    />\n                  </View>\n                </View>\n\n                <Text style={styles.label}>Email <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={styles.input}\n                  value={email}\n                  onChangeText={setEmail}\n                  placeholder=\"Email\"\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                />\n\n                <Text style={styles.label}>Phone Number <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={styles.input}\n                  value={phone}\n                  onChangeText={setPhone}\n                  placeholder=\"Phone Number\"\n                  keyboardType=\"phone-pad\"\n                />\n\n                <Text style={styles.label}>Do you currently own pets? If yes, tell us all about them! <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={petInfo}\n                  onChangeText={setPetInfo}\n                  placeholder=\"Tell us about your pets\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <Text style={styles.label}>What kind of pet care services are you most interested in? <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.checkboxGroup}>\n                  {services.map((service) => (\n                    <View key={service}>\n                      <TouchableOpacity \n                        style={styles.checkboxContainer}\n                        onPress={() => toggleService(service)}\n                      >\n                        <MaterialCommunityIcons\n                          name={selectedServices.includes(service) ? \"checkbox-marked\" : \"checkbox-blank-outline\"}\n                          size={24}\n                          color={theme.colors.primary}\n                          style={styles.checkboxIcon}\n                        />\n                        <Text style={styles.checkboxLabel}>{service}</Text>\n                      </TouchableOpacity>\n                      {service === 'Other' && selectedServices.includes('Other') && (\n                        <View style={styles.otherInputContainer}>\n                          <TextInput\n                            style={[styles.input, styles.otherInput]}\n                            value={otherService}\n                            onChangeText={setOtherService}\n                            placeholder=\"Please specify other service\"\n                          />\n                        </View>\n                      )}\n                    </View>\n                  ))}\n                </View>\n\n                <Text style={styles.label}>Are you signing up as a: <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.radioGroup}>\n                  {userTypes.map((type) => (\n                    <TouchableOpacity \n                      key={type}\n                      style={styles.radioContainer}\n                      onPress={() => setUserType(type)}\n                    >\n                      <View style={[styles.radio, userType === type && styles.radioSelected]} />\n                      <Text style={styles.radioLabel}>{type}</Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n\n                <Text style={styles.label}>Where did you hear about us? <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.radioGroup}>\n                  {referralSources.map((source) => (\n                    <TouchableOpacity \n                      key={source}\n                      style={styles.radioContainer}\n                      onPress={() => setReferralSource(source)}\n                    >\n                      <View style={[styles.radio, referralSource === source && styles.radioSelected]} />\n                      <Text style={styles.radioLabel}>{source}</Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n                {referralSource === 'Other - Enter name of Person who referred you or other referral source for a free sticker' && (\n                  <TextInput\n                    style={styles.input}\n                    value={otherReferralSource}\n                    onChangeText={setOtherReferralSource}\n                    placeholder=\"Please specify where you heard about us\"\n                  />\n                )}\n\n                <Text style={styles.label}>What hesitations do you have about using an app to connect you to local pet care? <Text style={styles.optional}>(Optional)</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={hesitations}\n                  onChangeText={setHesitations}\n                  placeholder=\"Share your concerns\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <Text style={styles.label}>What features or tools would make Critter Cove perfect for you? <Text style={styles.optional}>(Optional)</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={desiredFeatures}\n                  onChangeText={setDesiredFeatures}\n                  placeholder=\"Share your ideas\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <View style={styles.addressSection}>\n                  <Text style={styles.label}>Mailing Address <Text style={styles.optional}>(Optional)</Text></Text>\n                  <Text style={styles.addressNote}>\n                    🎁 <Text style={{ fontStyle: 'italic' }}> Want a custom sticker featuring your pet? Add your mailing address and we'll send you one for joining the waitlist!</Text>\n                  </Text>\n                  <TextInput\n                    style={styles.input}\n                    value={streetAddress}\n                    onChangeText={setStreetAddress}\n                    placeholder=\"Street Address\"\n                  />\n                  <TextInput\n                    style={styles.input}\n                    value={aptUnit}\n                    onChangeText={setAptUnit}\n                    placeholder=\"Apartment/Unit # (if applicable)\"\n                  />\n                  <View style={styles.cityStateContainer}>\n                    <TextInput\n                      style={[styles.input, styles.cityInput]}\n                      value={city}\n                      onChangeText={setCity}\n                      placeholder=\"City\"\n                    />\n                    <TextInput\n                      style={[styles.input, styles.stateInput]}\n                      value={stateRegion}\n                      onChangeText={setStateRegion}\n                      placeholder=\"State\"\n                      maxLength={2}\n                      autoCapitalize=\"characters\"\n                    />\n                    <TextInput\n                      style={[styles.input, styles.zipInput]}\n                      value={zipCode}\n                      onChangeText={setZipCode}\n                      placeholder=\"ZIP\"\n                      keyboardType=\"numeric\"\n                      maxLength={5}\n                    />\n                  </View>\n                </View>\n\n                <Text style={styles.label}>Would you like to be added to the email newsletter for updates on the app, pet care tips, discounts and more? <Text style={styles.optional}>(Optional)</Text></Text>\n                <View style={styles.buttonContainer}>\n                  <TouchableOpacity \n                    style={[styles.button, newsletter && styles.buttonSelected]}\n                    onPress={() => setNewsletter(true)}\n                  >\n                    <Text style={[styles.buttonText, newsletter && styles.buttonTextSelected]}>Yes</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={[styles.button, !newsletter && styles.buttonSelected]}\n                    onPress={() => setNewsletter(false)}\n                  >\n                    <Text style={[styles.buttonText, !newsletter && styles.buttonTextSelected]}>No</Text>\n                  </TouchableOpacity>\n                </View>\n\n                <Text style={styles.label}>I agree to the terms and conditions and understand my data will be used to improve the app experience. <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.buttonContainer}>\n                  <TouchableOpacity \n                    style={[styles.button, agreeToTerms && styles.buttonSelected]}\n                    onPress={() => setAgreeToTerms(true)}\n                  >\n                    <Text style={[styles.buttonText, agreeToTerms && styles.buttonTextSelected]}>Yes</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={[styles.button, !agreeToTerms && styles.buttonSelected]}\n                    onPress={() => setAgreeToTerms(false)}\n                  >\n                    <Text style={[styles.buttonText, !agreeToTerms && styles.buttonTextSelected]}>No</Text>\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity \n                  style={[styles.submitButton, (isSubmitting || !agreeToTerms) && styles.disabledButton]}\n                  onPress={handleSubmit}\n                  disabled={isSubmitting || !agreeToTerms}\n                >\n                  <Text style={styles.submitButtonText}>\n                    {isSubmitting ? 'Submitting...' : 'Join Waitlist'}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </CrossPlatformContent>\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  contentWrapper: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    width: '100%',\n  },\n  title: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n  },\n  description: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    lineHeight: 24,\n  },\n  formSection: {\n    width: '100%',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    gap: 10,\n    marginBottom: 15,\n  },\n  nameField: {\n    flex: 1,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 5,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 15,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  checkboxGroup: {\n    marginBottom: 15,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 10,\n    paddingRight: 10,\n  },\n  checkboxIcon: {\n    marginRight: 10,\n  },\n  checkboxLabel: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  radioGroup: {\n    marginBottom: 15,\n  },\n  radioContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  radio: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n    marginRight: 10,\n  },\n  radioSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  radioLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  successMessage: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    marginBottom: 15,\n    lineHeight: 24,\n  },\n  otherInputContainer: {\n    paddingLeft: 34,\n    width: '100%',\n  },\n  otherInput: {\n    marginTop: 5,\n    marginBottom: 10,\n    width: '90%',\n  },\n  addressSection: {\n    marginBottom: 20,\n  },\n  cityStateContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  cityInput: {\n    flex: 2,\n    marginBottom: 0,\n  },\n  stateInput: {\n    flex: 1,\n    marginBottom: 0,\n  },\n  zipInput: {\n    flex: 1,\n    marginBottom: 0,\n  },\n  addressNote: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 10,\n    // fontStyle: 'italic',\n    paddingHorizontal: 5,\n  },\n  optional: {\n    color: theme.colors.secondary,\n    fontSize: theme.fontSizes.small,\n    fontStyle: 'italic',\n  },\n  referralSection: {\n    backgroundColor: theme.colors.surface,\n    padding: 20,\n    borderRadius: 10,\n    marginVertical: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    gap: 10,\n    marginBottom: 20,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 24,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: 'white',\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  buttonSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  buttonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  buttonTextSelected: {\n    color: 'white',\n  },\n  requiredFieldNote: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontStyle: 'italic',\n  },\n  requiredAsterisk: {\n    color: '#FF0000',\n    fontSize: theme.fontSizes.medium,\n  },\n  linkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 10,\n  },\n  link: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginRight: 10,\n  },\n  copyButton: {\n    padding: 5,\n  },\n});\n\nexport default Waitlist; ","import React from 'react';\nimport { View, Text, StyleSheet, Button } from 'react-native';\nimport { useToast } from '../components/ToastProvider';\nimport { theme } from '../styles/theme';\n\nconst TestToast = () => {\n  const showToast = useToast();\n\n  const showSuccessToast = () => {\n    showToast({\n      message: 'Success! Operation completed successfully.',\n      type: 'success',\n      duration: 3000\n    });\n  };\n\n  const showErrorToast = () => {\n    showToast({\n      message: 'Error! Something went wrong.',\n      type: 'error',\n      duration: 3000\n    });\n  };\n\n  const showInfoToast = () => {\n    showToast({\n      message: 'Info: This is an informational message.',\n      type: 'info',\n      duration: 3000\n    });\n  };\n\n  const showWarningToast = () => {\n    showToast({\n      message: 'Warning: This action may have consequences.',\n      type: 'warning',\n      duration: 3000\n    });\n  };\n\n  const showLongToast = () => {\n    showToast({\n      message: 'This is a longer toast message that will stay visible for 5 seconds to demonstrate how longer messages look.',\n      type: 'info',\n      duration: 5000\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Toast Notification Test</Text>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Success Toast\" \n          onPress={showSuccessToast}\n          color={theme.colors.primary}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Error Toast\" \n          onPress={showErrorToast}\n          color={theme.colors.error}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Info Toast\" \n          onPress={showInfoToast}\n          color={theme.colors.info || '#29B6F6'}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Warning Toast\" \n          onPress={showWarningToast}\n          color={theme.colors.warning || '#FFA726'}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Long Toast\" \n          onPress={showLongToast}\n          color=\"#9C27B0\"\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.medium?.fontFamily || undefined,\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10,\n    maxWidth: 300,\n  }\n});\n\nexport default TestToast; ","import React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, Animated } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\n\nconst ConnectionCard = ({ connection, type, onViewProfile, onCreateBooking }) => {\n  // Determine if this is a client or professional connection\n  const isClient = type === 'clients';\n  const { screenWidth } = useContext(AuthContext);\n  const isMobile = screenWidth < 900;\n  const isWideScreen = screenWidth >= 1200;\n  const isExtraWideScreen = screenWidth >= 2500;\n  \n  // State for button hover effects\n  const [isViewMessagesHovered, setIsViewMessagesHovered] = useState(false);\n  const [isCreateBookingHovered, setIsCreateBookingHovered] = useState(false);\n  \n  // Determine booking status tag\n  const getBookingStatusTag = () => {\n    if (connection.active_bookings_count > 0) {\n      return {\n        icon: \"calendar-check\",\n        iconColor: \"#4CAF50\",\n        text: \"Active Bookings\",\n        containerStyle: styles.activeBookingsContainer,\n        textStyle: styles.activeBookingsText\n      };\n    } else if (connection.has_past_booking === 1) {\n      return {\n        icon: \"history\",\n        iconColor: \"#9C27B0\",\n        text: \"Past Bookings\",\n        containerStyle: styles.pastBookingsContainer,\n        textStyle: styles.pastBookingsText\n      };\n    } else {\n      return {\n        icon: \"calendar-remove\",\n        iconColor: \"#898974\",\n        text: \"No Bookings Yet\",\n        containerStyle: styles.noBookingsContainer,\n        textStyle: styles.noBookingsText\n      };\n    }\n  };\n  \n  const bookingStatus = getBookingStatusTag();\n  \n  debugLog('MBA9452: Rendering ConnectionCard:', {\n    connectionId: connection.id,\n    connectionName: connection.name,\n    connectionType: type,\n    conversationId: connection.conversation_id,\n    hasActivePastBooking: connection.has_past_booking,\n    activeBookingsCount: connection.active_bookings_count,\n    isMobile,\n    isWideScreen,\n    isExtraWideScreen,\n    screenWidth\n  });\n  \n  return (\n    <View style={styles.card}>\n      <View style={styles.contentContainer}>\n        <View style={styles.topRow}>\n          <View style={[\n            styles.profileInfo,\n            !isExtraWideScreen && styles.profileInfoWrap\n          ]}>\n            <Image \n              source={connection.avatar ? { uri: connection.avatar } : require('../../assets/default-profile.png')} \n              style={styles.avatar} \n            />\n            \n            <View style={[\n              styles.nameContainer,\n              isWideScreen && styles.nameContainerWide\n            ]}>\n              <Text style={styles.name}>{connection.name}</Text>\n              \n              {isClient ? (\n                <View style={styles.petsContainer}>\n                  <Text style={styles.petsLabel}>Pets: </Text>\n                  <Text style={[\n                    styles.petsText,\n                    isWideScreen && styles.petsTextWide\n                  ]}>\n                    {connection.pets?.length > 0 \n                      ? connection.pets.map(pet => `${pet.name} (${pet.species})`).join(', ') \n                      : 'No pets added yet'}\n                  </Text>\n                </View>\n              ) : (\n                <View style={styles.servicesContainer}>\n                  <Text style={styles.servicesLabel}>Services: </Text>\n                  <Text style={[\n                    styles.servicesText,\n                    isWideScreen && styles.servicesTextWide\n                  ]}>\n                    {connection.services?.join(', ') || 'No services'}\n                  </Text>\n                </View>\n              )}\n              \n              <View style={bookingStatus.containerStyle}>\n                <MaterialCommunityIcons name={bookingStatus.icon} size={14} color={bookingStatus.iconColor} />\n                <Text style={bookingStatus.textStyle}>\n                  {bookingStatus.text}\n                </Text>\n              </View>\n            </View>\n          </View>\n          \n          {!isMobile && (\n            <View style={[\n              styles.buttonSection,\n              !isExtraWideScreen && styles.buttonSectionWrap\n            ]}>\n              <TouchableOpacity \n                style={[\n                  styles.viewProfileButton,\n                  isViewMessagesHovered && styles.buttonHovered\n                ]}\n                onPress={() => {\n                  debugLog('MBA4321 View Messages button clicked', {\n                    connectionName: connection.name,\n                    conversationId: connection.conversation_id\n                  });\n                  onViewProfile(connection);\n                }}\n                onMouseEnter={() => setIsViewMessagesHovered(true)}\n                onMouseLeave={() => setIsViewMessagesHovered(false)}\n              >\n                <Text style={styles.viewProfileText}>View Messages</Text>\n              </TouchableOpacity>\n              \n              {isClient && (\n                <TouchableOpacity \n                  style={[\n                    styles.createBookingButton,\n                    isCreateBookingHovered && styles.buttonHovered\n                  ]}\n                  onPress={() => {\n                    debugLog('MBA4321 Create Booking button clicked', {\n                      connectionName: connection.name,\n                      conversationId: connection.conversation_id\n                    });\n                    onCreateBooking(connection);\n                  }}\n                  onMouseEnter={() => setIsCreateBookingHovered(true)}\n                  onMouseLeave={() => setIsCreateBookingHovered(false)}\n                >\n                  <Text style={styles.createBookingText}>Create Booking</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          )}\n        </View>\n\n        {connection.last_booking && (\n          <View style={styles.statusSection}>\n            <View style={styles.lastBookingContainer}>\n              <MaterialCommunityIcons name=\"calendar-clock\" size={16} color={theme.colors.text} />\n              <Text style={styles.lastBookingText}>\n                Last booking: {connection.last_booking}\n              </Text>\n            </View>\n      \n            {connection.upcoming_booking && (\n              <View style={styles.upcomingContainer}>\n                <MaterialCommunityIcons name=\"calendar-check\" size={16} color={theme.colors.primary} />\n                <Text style={styles.upcomingText}>\n                  Upcoming Booking\n                </Text>\n              </View>\n            )}\n          </View>\n        )}\n\n        {isMobile && (\n          <View style={styles.mobileBtnSection}>\n            <TouchableOpacity \n              style={[\n                styles.viewProfileButton,\n                isViewMessagesHovered && styles.buttonHovered\n              ]}\n              onPress={() => {\n                debugLog('MBA4321 View Messages button clicked (mobile)', {\n                  connectionName: connection.name,\n                  conversationId: connection.conversation_id\n                });\n                onViewProfile(connection);\n              }}\n              onMouseEnter={() => setIsViewMessagesHovered(true)}\n              onMouseLeave={() => setIsViewMessagesHovered(false)}\n            >\n              <Text style={styles.viewProfileText}>View Messages</Text>\n            </TouchableOpacity>\n            \n            {isClient && (\n              <TouchableOpacity \n                style={[\n                  styles.createBookingButton,\n                  isCreateBookingHovered && styles.buttonHovered\n                ]}\n                onPress={() => {\n                  debugLog('MBA4321 Create Booking button clicked (mobile)', {\n                    connectionName: connection.name,\n                    conversationId: connection.conversation_id\n                  });\n                  onCreateBooking(connection);\n                }}\n                onMouseEnter={() => setIsCreateBookingHovered(true)}\n                onMouseLeave={() => setIsCreateBookingHovered(false)}\n              >\n                <Text style={styles.createBookingText}>Create Booking</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    // marginBottom: 16,\n    padding: 16,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    width: '100%',\n  },\n  contentContainer: {\n    width: '100%',\n  },\n  topRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    width: '100%',\n    flexWrap: 'wrap',\n  },\n  profileInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 0,\n  },\n  profileInfoWrap: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: '70%',\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginRight: 16,\n    flexShrink: 0,\n  },\n  nameContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    minWidth: 0,\n    marginRight: 16,\n  },\n  nameContainerWide: {\n    maxWidth: '60%',\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 8,\n  },\n  petsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  petsLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flexShrink: 0,\n  },\n  petsText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flex: 1,\n    minWidth: 0,\n  },\n  petsTextWide: {\n    maxWidth: '80%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  servicesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  servicesLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flexShrink: 0,\n  },\n  servicesText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flex: 1,\n    minWidth: 0,\n  },\n  servicesTextWide: {\n    maxWidth: '80%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  statusSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    marginTop: 8,\n  },\n  lastBookingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  lastBookingText: {\n    marginLeft: 6,\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F2F2F0',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  noBookingsText: {\n    fontSize: 12,\n    color: '#898974',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 6,\n  },\n  pastBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F9F2FC',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  pastBookingsText: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: '#9C27B0',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  upcomingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F0F9E5',\n    padding: 6,\n    borderRadius: 16,\n  },\n  upcomingText: {\n    marginLeft: 6,\n    fontSize: 14,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  buttonSection: {\n    flexDirection: 'row',\n    gap: 12,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    flexShrink: 0,\n  },\n  buttonSectionWrap: {\n    marginTop: 12,\n    marginLeft: 'auto',\n  },\n  mobileBtnSection: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n    marginTop: 12,\n  },\n  viewProfileButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: '#F0F9E5',\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n  },\n  viewProfileText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  createBookingButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n  },\n  createBookingText: {\n    color: theme.colors.surfaceContrast,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonHovered: {\n    transform: [{translateY: -3}],\n    boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.15)',\n  },\n  activeBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F0F9E5',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  activeBookingsText: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: '#4CAF50',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ConnectionCard; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, TextInput, FlatList, TouchableOpacity, ActivityIndicator, Platform, Dimensions, ScrollView, Modal } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport ConnectionCard from '../components/ConnectionCard';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigateToFrom } from '../components/Navigation';\nimport { getUserConnections, inviteClient } from '../api/API';\n\nconst Connections = () => {\n  const navigation = useNavigation();\n  const { isApprovedProfessional, userRole, isCollapsed, screenWidth } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth < 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1500);\n  const [activeTab, setActiveTab] = useState('clients');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [connections, setConnections] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [hoveredFilter, setHoveredFilter] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [isInviting, setIsInviting] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const searchInputRef = useRef(null);\n  const [allConnections, setAllConnections] = useState([]);\n  const [invitationType, setInvitationType] = useState('email');\n  const [generatedLink, setGeneratedLink] = useState('');\n  const [inviteError, setInviteError] = useState('');\n  const [inviteSuccess, setInviteSuccess] = useState('');\n  const [isInviteButtonHovered, setIsInviteButtonHovered] = useState(false);\n  const [isCreateServiceButtonHovered, setIsCreateServiceButtonHovered] = useState(false);\n\n  // Update layout based on screen size\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n      setIsWideScreen(Dimensions.get('window').width >= 1200);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  // Set the initial tab based on role\n  useEffect(() => {\n    if (userRole === 'professional') {\n      setActiveTab('clients');\n    } else {\n      setActiveTab('professionals');\n    }\n  }, [userRole]);\n\n  // Handle navigation based on the user role\n  useEffect(() => {\n    const handleRoleNavigation = async () => {\n      debugLog('MBA4321 Checking user role for navigation', { userRole });\n      if (userRole === 'petOwner') {\n        // Store Dashboard as the current route before navigating\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('previousRoute', '');\n          sessionStorage.setItem('currentRoute', 'Dashboard');\n        } else {\n          await AsyncStorage.setItem('previousRoute', '');\n          await AsyncStorage.setItem('currentRoute', 'Dashboard');\n        }\n        debugLog('MBA4321 User is pet owner, navigating to Dashboard');\n        navigation.navigate('Dashboard');\n      }\n    };\n\n    handleRoleNavigation();\n  }, [userRole, navigation]);\n\n  const fetchConnections = async (pageNum = 1, isLoadMore = false) => {\n    setLoading(!isLoadMore);\n    isLoadMore && setIsLoadingMore(true);\n    \n    debugLog('MBA4321 Fetching connections:', {\n      page: pageNum,\n      isLoadMore\n    });\n\n    try {\n      const response = await getUserConnections(pageNum);\n      \n      debugLog('MBA4321 Response from API:', response);\n\n      const connectionsList = response.connections || [];\n      \n      if (isLoadMore) {\n        const newConnections = [...connections, ...connectionsList];\n        setConnections(newConnections);\n        setAllConnections(newConnections);\n      } else {\n        setConnections(connectionsList);\n        setAllConnections(connectionsList);\n      }\n\n      setHasMore(connectionsList.length === 20);\n      setPage(pageNum);\n    } catch (error) {\n      debugLog('MBA4321 Error fetching connections:', error);\n      setError('Failed to fetch connections');\n    } finally {\n      setLoading(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  // Update useEffect to only fetch once and not refetch when filter changes\n  useEffect(() => {\n    debugLog('MBA4321 Fetching connections due to dependency change:', {\n      activeTab,\n      userRole\n    });\n    setPage(1);\n    setConnections([]);\n    fetchConnections(1);\n  }, [activeTab, userRole]);\n\n  // Add new useEffect to filter connections locally when filter changes\n  useEffect(() => {\n    debugLog('MBA4321 Filtering connections locally based on:', {\n      activeFilter\n    });\n    if (allConnections.length > 0) {\n      filterConnectionsLocally();\n    }\n  }, [activeFilter, allConnections]);\n\n  // Add function to filter connections locally\n  const filterConnectionsLocally = () => {\n    if (!allConnections.length) return;\n    \n    debugLog('MBA9452: Filtering connections locally with filter:', activeFilter);\n    \n    if (activeFilter === 'all') {\n      setConnections(allConnections);\n      return;\n    }\n    \n    // Filter based on activeFilter\n    let filtered = [];\n    \n    switch (activeFilter) {\n      case 'active_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count > 0\n        );\n        break;\n      case 'no_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count === 0 && connection.has_past_booking === 0\n        );\n        break;\n      case 'past_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count === 0 && connection.has_past_booking === 1\n        );\n        break;\n      default:\n        filtered = allConnections;\n    }\n    \n    setConnections(filtered);\n  };\n\n  // Handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    \n    // If query is empty, reapply the current filter\n    if (!query.trim()) {\n      debugLog('MBA9452: Empty search query, reapplying current filter');\n      filterConnectionsLocally();\n      return;\n    }\n\n    debugLog('MBA9452: Searching connections with query:', query);\n    \n    // Get the base set of connections to search from (already filtered by activeFilter)\n    let baseConnections = [];\n    if (activeFilter === 'all') {\n      baseConnections = allConnections;\n    } else {\n      // Re-apply the active filter to get the current filtered set\n      switch (activeFilter) {\n        case 'active_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count > 0\n          );\n          break;\n        case 'no_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count === 0 && connection.has_past_booking === 0\n          );\n          break;\n        case 'past_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count === 0 && connection.has_past_booking === 1\n          );\n          break;\n        default:\n          baseConnections = allConnections;\n      }\n    }\n    \n    // Filter the already filtered list based on search query\n    const searchLower = query.toLowerCase();\n    const filtered = baseConnections.filter(connection => \n      connection.name.toLowerCase().includes(searchLower) || \n      (activeTab === 'clients' && connection.pets?.some(pet => \n        pet.name?.toLowerCase().includes(searchLower) || \n        pet.species?.toLowerCase().includes(searchLower)\n      ))\n    );\n\n    setConnections(filtered);\n  };\n\n  const handleLoadMore = () => {\n    if (!isLoadingMore && hasMore) {\n      fetchConnections(page + 1, true);\n    }\n  };\n\n  const handleViewMessages = async (connection) => {\n    debugLog('MBA4321 Navigating to messages with connection:', {\n      connectionId: connection.id,\n      connectionName: connection.name,\n      conversationId: connection.conversation_id\n    });\n    \n    // Navigate to MessageHistory screen with conversation ID\n    await navigateToFrom(navigation, 'MessageHistory', 'Connections', {\n      conversationId: connection.conversation_id,\n      otherUserName: connection.name\n      // No isProfessional flag here as we don't want to trigger booking creation\n    });\n  };\n\n  const handleCreateBooking = async (connection) => {\n    debugLog('MBA4321 Creating booking with client:', {\n      clientId: connection.id,\n      clientName: connection.name,\n      conversationId: connection.conversation_id\n    });\n    \n    // Navigate directly to the MessageHistory screen with the conversation ID\n    await navigateToFrom(navigation, 'MessageHistory', 'Connections', {\n      conversationId: connection.conversation_id,\n      otherUserName: connection.name,\n      clientId: connection.client_id, // Include client_id for potential future use\n      isProfessional: true // Since this is called from the professional's perspective\n    });\n  };\n\n  const handleInviteClient = () => {\n    debugLog('MBA4321 Opening invite client modal');\n    setInviteEmail('');\n    setGeneratedLink('');\n    setInviteError('');\n    setInviteSuccess('');\n    setInvitationType('email');\n    setShowInviteModal(true);\n  };\n  \n  const handleSendInvite = async () => {\n    setInviteError('');\n    setInviteSuccess('');\n    \n    if (invitationType === 'email') {\n      if (!inviteEmail || !inviteEmail.includes('@')) {\n        setInviteError('Please enter a valid email address');\n        debugLog('MBA4321 Invalid email format:', inviteEmail);\n        return;\n      }\n    }\n    \n    setIsInviting(true);\n    debugLog('MBA4321 Creating invitation:', { \n      type: invitationType, \n      email: invitationType === 'email' ? inviteEmail : null \n    });\n    \n    try {\n      const response = await inviteClient(invitationType, invitationType === 'email' ? inviteEmail : null);\n      debugLog('MBA4321 Invitation created successfully:', response);\n      \n      if (invitationType === 'email') {\n        setInviteSuccess(`Invitation sent to ${inviteEmail}`);\n        setInviteEmail('');\n      } else {\n        setGeneratedLink(response.invitation_link);\n        setInviteSuccess('Invitation link created successfully!');\n      }\n      \n      // Refresh the connections list only if needed\n      if (activeFilter === 'pending' || activeFilter === 'all') {\n        fetchConnections(1);\n      }\n    } catch (error) {\n      debugLog('MBA4321 Error creating invitation:', error);\n      setInviteError(error.response?.data?.error || 'Failed to send invitation. Please try again.');\n    } finally {\n      setIsInviting(false);\n    }\n  };\n\n  const handleCopyLink = () => {\n    if (generatedLink) {\n      navigator.clipboard.writeText(generatedLink);\n      setInviteSuccess('Link copied to clipboard!');\n    }\n  };\n\n  const EmptyStateMessage = ({ type }) => {\n    const messages = {\n      clients: {\n        all: \"You don't have any clients yet. Invite a client to get started!\",\n        active: \"You don't have any active clients.\",\n        pending: \"You don't have any pending client requests.\",\n        past: \"You don't have any past clients.\"\n      },\n      professionals: {\n        all: \"You're not connected with any professionals yet.\",\n        active: \"You don't have any active professionals.\",\n        pending: \"You don't have any pending professional connections.\",\n        past: \"You don't have any past professional connections.\"\n      }\n    };\n\n    return (\n      <View style={styles.emptyContainer}>\n        <MaterialCommunityIcons \n          name={type === 'clients' ? 'account-group-outline' : 'account-tie-outline'} \n          size={80} \n          color={theme.colors.primary} \n        />\n        <Text style={styles.emptyText}>{messages[type][activeFilter]}</Text>\n        {type === 'clients' && userRole === 'professional' && (\n          <TouchableOpacity \n            style={styles.inviteButton}\n            onPress={handleInviteClient}\n          >\n            <Text style={styles.inviteButtonText}>Invite Client</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    );\n  };\n\n  const renderFooter = () => {\n    if (isLoadingMore) {\n      debugLog('MBA4321 Loading more connections');\n      return (\n        <View style={styles.footer}>\n          <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n        </View>\n      );\n    }\n    \n    if (!hasMore && connections.length > 0) {\n      debugLog('MBA4321 No more connections to load');\n      return (\n        <View style={styles.footer}>\n          <Text style={styles.footerText}>No more {activeTab} to load</Text>\n          {userRole === 'professional' && activeTab === 'clients' && (\n            <TouchableOpacity \n              style={[\n                styles.createServiceButton,\n                isCreateServiceButtonHovered && styles.buttonHovered\n              ]}\n              onPress={() => {\n                debugLog('MBA4321 Create Service button clicked in footer');\n                navigateToFrom(navigation, 'ServiceManager', 'Connections');\n              }}\n              onMouseEnter={() => setIsCreateServiceButtonHovered(true)}\n              onMouseLeave={() => setIsCreateServiceButtonHovered(false)}\n            >\n              <Text style={styles.createServiceButtonText}>Create a Service to Get More Clients</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderItem = ({ item }) => {\n    debugLog('MBA4321 Rendering connection item:', item);\n    return (\n      <View style={[\n        styles.cardWrapper,\n        isMobile && styles.mobileCardWrapper,\n        isWideScreen && styles.wideScreenCardWrapper\n      ]}>\n        <ConnectionCard\n          connection={item}\n          type={activeTab}\n          onViewProfile={() => handleViewMessages(item)}\n          onCreateBooking={activeTab === 'clients' ? () => handleCreateBooking(item) : null}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: isMobile ? 0 : (isCollapsed ? 70 : 250) }\n    ]}>\n      <View style={[styles.content, { marginTop: isMobile ? 60 : 0 }]}>\n        <View style={styles.mainContent}>\n          <View style={styles.headerSection}>\n            <Text style={styles.title}>Connections</Text>\n            <View style={styles.tabContainer}>\n              {userRole === 'professional' && (\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'clients' && styles.activeTab]}\n                  onPress={() => setActiveTab('clients')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'clients' && styles.activeTabText]}>\n                    My Clients\n                  </Text>\n                </TouchableOpacity>\n              )}\n              {/* My Professionals tab commented out until implementation\n              <TouchableOpacity\n                style={[styles.tab, activeTab === 'professionals' && styles.activeTab]}\n                onPress={() => setActiveTab('professionals')}\n              >\n                <Text style={[styles.tabText, activeTab === 'professionals' && styles.activeTabText]}>\n                  My Professionals\n                </Text>\n              </TouchableOpacity>\n              */}\n            </View>\n          </View>\n          <View style={styles.connectionsContent}>\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              </View>\n            ) : (\n              <View style={styles.connectionsContent}>\n                <View style={styles.stickyHeader}>\n                  <View style={[styles.stickyHeaderContent, { \n                    flexDirection: isWideScreen ? 'row' : 'column'\n                  }]}>\n                    <View style={[\n                      styles.searchAndInviteContainer,\n                      isWideScreen ? { flex: 0.4, marginRight: 'auto', flexDirection: 'row', alignItems: 'center' } : { flexDirection: 'row', alignItems: 'center' }\n                    ]}>\n                      <View style={[\n                        styles.searchContainer,\n                        searchFocused && styles.searchContainerFocused\n                      ]}>\n                        <MaterialCommunityIcons \n                          name=\"magnify\" \n                          size={24} \n                          color={searchFocused ? theme.colors.primary : \"#666\"} \n                        />\n                        <TextInput\n                          ref={searchInputRef}\n                          style={styles.searchInput}\n                          placeholder={activeTab === 'clients' \n                            ? \"Search by client name or pet\" \n                            : \"Search by professional name or service\"\n                          }\n                          value={searchQuery}\n                          onChangeText={handleSearch}\n                          onFocus={() => setSearchFocused(true)}\n                          onBlur={() => setSearchFocused(false)}\n                        />\n                        {searchQuery ? (\n                          <TouchableOpacity \n                            onPress={() => {\n                              setSearchQuery('');\n                              filterConnectionsLocally();\n                            }}\n                          >\n                            <MaterialCommunityIcons name=\"close-circle\" size={20} color=\"#777\" />\n                          </TouchableOpacity>\n                        ) : null}\n                      </View>\n                      \n                      {activeTab === 'clients' && userRole === 'professional' && (\n                        <TouchableOpacity \n                          style={[\n                            styles.inviteButtonSmall,\n                            isInviteButtonHovered && styles.buttonHovered\n                          ]}\n                          onPress={handleInviteClient}\n                          onMouseEnter={() => setIsInviteButtonHovered(true)}\n                          onMouseLeave={() => setIsInviteButtonHovered(false)}\n                        >\n                          <MaterialCommunityIcons name=\"account-plus\" size={16} color={theme.colors.surface} />\n                          <Text style={styles.inviteButtonSmallText}>Invite</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n\n                    <View style={[\n                      styles.filtersWrapper,\n                      isWideScreen ? { flex: 0.6, alignItems: 'flex-end' } : null\n                    ]}>\n                      <ScrollView \n                        horizontal \n                        showsHorizontalScrollIndicator={false}\n                        contentContainerStyle={styles.filterScrollContent}\n                      >\n                        <View style={styles.filterContainer}>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.allButton,\n                              Platform.OS === 'web' && hoveredFilter === 'all' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('all')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('all')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"filter-variant\" \n                                size={16} \n                                color=\"#0784C6\" \n                              />\n                              <Text style={[styles.filterText, styles.allButtonText]}>\n                                All\n                              </Text>\n                              {activeFilter === 'all' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#0784C6\" \n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.activeBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'active_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('active_bookings')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('active_bookings')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"calendar-check\" \n                                size={16} \n                                color=\"#4CAF50\"\n                              />\n                              <Text style={[styles.filterText, styles.activeBookingsButtonText]}>\n                                Active Bookings\n                              </Text>\n                              {activeFilter === 'active_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#4CAF50\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.noBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'no_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('no_bookings')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('no_bookings')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"calendar-remove\" \n                                size={16} \n                                color=\"#898974\"\n                              />\n                              <Text style={[styles.filterText, styles.noBookingsButtonText]}>\n                                No Bookings\n                              </Text>\n                              {activeFilter === 'no_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#898974\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.pastBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'past_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('past_bookings')}\n                            onMouseEnter={() => Platform.OS === 'web' && setHoveredFilter('past_bookings')}\n                            onMouseLeave={() => Platform.OS === 'web' && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"history\" \n                                size={16} \n                                color=\"#9C27B0\"\n                              />\n                              <Text style={[styles.filterText, styles.pastBookingsButtonText]}>\n                                Past Bookings\n                              </Text>\n                              {activeFilter === 'past_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#9C27B0\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </ScrollView>\n                    </View>\n                  </View>\n                </View>\n\n                {connections.length > 0 ? (\n                  <FlatList\n                    data={connections}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.client_id.toString()}\n                    contentContainerStyle={styles.listContainer}\n                    onEndReached={handleLoadMore}\n                    onEndReachedThreshold={0.5}\n                    ListFooterComponent={renderFooter}\n                    ListHeaderComponent={<View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />}\n                    numColumns={isWideScreen ? 3 : (isMobile ? 1 : 2)}\n                    key={isWideScreen ? 'three-columns' : (isMobile ? 'one-column' : 'two-columns')}\n                    columnWrapperStyle={!isMobile && styles.columnWrapper}\n                  />\n                ) : searchQuery ? (\n                  <View style={styles.emptyContainer}>\n                    <View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />\n                    <MaterialCommunityIcons \n                      name=\"magnify-close\" \n                      size={80} \n                      color={theme.colors.placeholder} \n                    />\n                    <Text style={styles.emptyText}>\n                      No {activeTab} found matching \"{searchQuery}\"\n                    </Text>\n                    <TouchableOpacity \n                      style={styles.inviteButton}\n                      onPress={() => {\n                        setSearchQuery('');\n                        filterConnectionsLocally();\n                      }}\n                    >\n                      <Text style={styles.inviteButtonText}>Clear Search</Text>\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <EmptyStateMessage type={activeTab} />\n                )}\n              </View>\n            )}\n          </View>\n        </View>\n        \n        {/* Invite Client Modal */}\n        <Modal\n          visible={showInviteModal}\n          transparent={true}\n          animationType=\"fade\"\n          onRequestClose={() => setShowInviteModal(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Invite Client</Text>\n                <TouchableOpacity \n                  style={styles.closeButton}\n                  onPress={() => setShowInviteModal(false)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={24} color=\"#666\" />\n                </TouchableOpacity>\n              </View>\n              \n              <Text style={styles.modalText}>\n                Invite a client to connect with you on CrittrCove. \n                You can either send them an email invitation or generate a link to share.\n              </Text>\n              \n              <View style={styles.inviteTypeToggle}>\n                <TouchableOpacity\n                  style={[\n                    styles.inviteTypeButton,\n                    invitationType === 'email' && styles.inviteTypeButtonActive\n                  ]}\n                  onPress={() => {\n                    setInvitationType('email');\n                    setInviteError('');\n                    setInviteSuccess('');\n                  }}\n                >\n                  <MaterialCommunityIcons \n                    name=\"email-outline\" \n                    size={20} \n                    color={invitationType === 'email' ? theme.colors.primary : \"#666\"} \n                  />\n                  <Text \n                    style={[\n                      styles.inviteTypeText,\n                      invitationType === 'email' && styles.inviteTypeTextActive\n                    ]}\n                  >\n                    Email Invitation\n                  </Text>\n                </TouchableOpacity>\n                \n                <TouchableOpacity\n                  style={[\n                    styles.inviteTypeButton,\n                    invitationType === 'link' && styles.inviteTypeButtonActive\n                  ]}\n                  onPress={() => {\n                    setInvitationType('link');\n                    setInviteError('');\n                    setInviteSuccess('');\n                  }}\n                >\n                  <MaterialCommunityIcons \n                    name=\"link-variant\" \n                    size={20} \n                    color={invitationType === 'link' ? theme.colors.primary : \"#666\"} \n                  />\n                  <Text \n                    style={[\n                      styles.inviteTypeText,\n                      invitationType === 'link' && styles.inviteTypeTextActive\n                    ]}\n                  >\n                    Generate Link\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              \n              {invitationType === 'email' ? (\n                <View style={styles.inputContainer}>\n                  <Text style={styles.inputLabel}>Client's Email Address</Text>\n                  <TextInput\n                    style={styles.emailInput}\n                    placeholder=\"client@example.com\"\n                    value={inviteEmail}\n                    onChangeText={setInviteEmail}\n                    keyboardType=\"email-address\"\n                    autoCapitalize=\"none\"\n                  />\n                </View>\n              ) : generatedLink ? (\n                <View style={styles.linkContainer}>\n                  <Text style={styles.inputLabel}>Shareable Invitation Link</Text>\n                  <View style={styles.generatedLinkContainer}>\n                    <Text \n                      style={styles.generatedLink}\n                      numberOfLines={1}\n                      ellipsizeMode=\"middle\"\n                    >\n                      {generatedLink}\n                    </Text>\n                    {Platform.OS === 'web' && (\n                      <TouchableOpacity \n                        style={styles.copyButton}\n                        onPress={handleCopyLink}\n                      >\n                        <MaterialCommunityIcons name=\"content-copy\" size={20} color={theme.colors.primary} />\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                </View>\n              ) : null}\n              \n              {inviteError ? (\n                <Text style={styles.errorText}>{inviteError}</Text>\n              ) : null}\n              \n              {inviteSuccess ? (\n                <Text style={styles.successText}>{inviteSuccess}</Text>\n              ) : null}\n              \n              <View style={styles.modalButtons}>\n                <TouchableOpacity\n                  style={styles.cancelButton}\n                  onPress={() => setShowInviteModal(false)}\n                >\n                  <Text style={styles.cancelButtonText}>Close</Text>\n                </TouchableOpacity>\n                \n                {!generatedLink || invitationType === 'email' ? (\n                  <TouchableOpacity\n                    style={[\n                      styles.sendInviteButton,\n                      (invitationType === 'email' && (!inviteEmail || !inviteEmail.includes('@'))) && styles.disabledButton,\n                      isInviting && styles.disabledButton\n                    ]}\n                    onPress={handleSendInvite}\n                    disabled={isInviting || (invitationType === 'email' && (!inviteEmail || !inviteEmail.includes('@')))}\n                  >\n                    {isInviting ? (\n                      <ActivityIndicator size=\"small\" color={theme.colors.surface} />\n                    ) : (\n                      <Text style={styles.sendInviteButtonText}>\n                        {invitationType === 'email' ? 'Send Invitation' : 'Generate Link'}\n                      </Text>\n                    )}\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.background,\n    position: 'relative',\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  connectionsContent: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: 32,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  stickyHeader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    zIndex: 2,\n    marginHorizontal: 24,\n    marginTop: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    borderRadius: 8,\n    padding: 16,\n  },\n  stickyHeaderContent: {\n    width: '100%',\n    gap: 16,\n  },\n  searchAndInviteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  searchContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    minHeight: 48,\n  },\n  searchContainerFocused: {\n    borderColor: theme.colors.primary,\n    borderWidth: 2,\n    shadowColor: theme.colors.primary,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#666',\n    fontSize: 16,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n    outlineWidth: 0,\n    WebkitAppearance: 'none',\n    padding: 0,\n    minHeight: 24,\n    ...(Platform.OS === 'web' && {\n      caretColor: theme.colors.primary,\n    }),\n  },\n  inviteButtonSmall: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    gap: 6,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease',\n      cursor: 'pointer',\n    })\n  },\n  inviteButtonSmallText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  filtersWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginRight: -16,\n  },\n  filterScrollContent: {\n    flexGrow: 0,\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    gap: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingVertical: 8,\n    paddingLeft: 4,\n    paddingRight: 16,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  filterButtonHovered: {\n    transform: [{ scale: 1.05 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  filterContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n  },\n  checkmark: {\n    marginLeft: 4,\n  },\n  allButton: {\n    backgroundColor: '#EFF9FF',\n  },\n  allButtonText: {\n    color: '#0784C6',\n  },\n  activeBookingsButton: {\n    backgroundColor: '#E8F5E9',\n  },\n  activeBookingsButtonText: {\n    color: '#4CAF50',\n  },\n  noBookingsButton: {\n    backgroundColor: '#E8E9E2',\n  },\n  noBookingsButtonText: {\n    color: '#898974',\n  },\n  pastBookingsButton: {\n    backgroundColor: '#F3E5F5',\n  },\n  pastBookingsButtonText: {\n    color: '#9C27B0',\n  },\n  filterText: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  listHeaderSpacing: {\n    paddingTop: 16,\n  },\n  listContainer: {\n    paddingHorizontal: 24,\n    paddingBottom: 34,\n    alignItems: 'stretch',\n    width: '100%',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingMoreContainer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.placeholder,\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inviteButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  inviteButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  footer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  footerText: {\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  createServiceButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n    marginTop: 8,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease',\n      cursor: 'pointer',\n    })\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 24,\n    width: '90%',\n    maxWidth: 500,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  modalText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n    lineHeight: 24,\n  },\n  inviteTypeToggle: {\n    flexDirection: 'row',\n    gap: 12,\n    marginBottom: 24,\n  },\n  inviteTypeButton: {\n    flex: 1,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  inviteTypeButtonActive: {\n    borderColor: theme.colors.primary,\n    backgroundColor: 'rgba(7, 132, 198, 0.05)',\n  },\n  inviteTypeText: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inviteTypeTextActive: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  inputContainer: {\n    marginBottom: 24,\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emailInput: {\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  linkContainer: {\n    marginBottom: 24,\n  },\n  generatedLinkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.02)',\n  },\n  generatedLink: {\n    flex: 1,\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  copyButton: {\n    padding: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  errorText: {\n    color: theme.colors.error || '#D32F2F',\n    fontSize: 16,\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  successText: {\n    color: theme.colors.success || '#4CAF50',\n    fontSize: 16,\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n    marginTop: 8,\n  },\n  cancelButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    backgroundColor: theme.colors.surface,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sendInviteButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    minWidth: 140,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  sendInviteButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    backgroundColor: '#CCCCCC',\n    opacity: 0.7,\n    ...(Platform.OS === 'web' && {\n      cursor: 'not-allowed',\n    }),\n  },\n  columnWrapper: {\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    gap: 16,\n    width: '100%',\n  },\n  cardWrapper: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 16,\n  },\n  mobileCardWrapper: {\n    maxWidth: '100%',\n  },\n  wideScreenCardWrapper: {\n    maxWidth: 'calc(50% - 11px)',\n    // width: 'calc(33.33% - 11px)',\n  },\n  buttonHovered: {\n    transform: [{translateY: -3}],\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 6 },\n    shadowOpacity: 0.15,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n});\n\nexport default Connections; ","import React, { useEffect, useState, useContext } from 'react';\nimport { Platform, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Navigation from './src/components/Navigation';\nimport { theme } from './src/styles/theme';\nimport { AuthProvider, AuthContext, debugLog } from './src/context/AuthContext';\nimport { MessageNotificationProvider } from './src/context/MessageNotificationContext';\nimport { API_BASE_URL } from './src/config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createNavigationContainerRef } from '@react-navigation/native';\nimport { Linking } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from './src/components/Navigation';\nimport { TutorialProvider } from './src/context/TutorialContext';\nimport { ToastProvider } from './src/components/ToastProvider';\n\n// Import all your screen components\nimport HomeScreen from './src/screens/HomeScreen';\nimport AboutScreen from './src/screens/AboutScreen';\nimport OwnerProfile from './src/screens/OwnerProfile';\nimport MyProfile from './src/screens/MyProfile';\nimport SignIn from './src/screens/SignIn';\nimport SignUp from './src/screens/SignUp';\nimport ResetPassword from './src/screens/ResetPassword';\nimport ResetPasswordConfirm from './src/screens/ResetPasswordConfirm';\n// import Dashboard from './src/screens/Dashboard';\nimport Dashboard from './src/screens/Dashboard';\nimport BecomeProfessional from './src/screens/BecomeProfessional';\nimport MoreScreen from './src/screens/MoreScreen';\nimport AvailabilitySettings from './src/screens/AvailabilitySettings';\n// import Messages from './src/screens/Messages';\nimport MyPets from './src/screens/MyPets';\nimport OwnerHistory from './src/screens/OwnerHistory';\nimport MessageHistory from './src/screens/MessageHistory';\nimport PaymentMethods from './src/screens/PaymentMethods';\nimport Settings from './src/screens/Settings';\nimport PrivacyPolicy from './src/screens/PrivacyPolicy';\nimport ProfessionalSettings from './src/screens/ProfessionalSettings';\nimport TermsOfService from './src/screens/TermsOfService';\nimport HelpFAQ from './src/screens/HelpFAQ';\nimport ContactUs from './src/screens/ContactUs';\nimport Owners from './src/screens/Owners';\nimport ProfessionalProfile from './src/screens/ProfessionalProfile';\nimport MyContracts from './src/screens/MyContracts';\nimport ChangePassword from './src/screens/ChangePassword';\nimport AddPet from './src/screens/AddPet';\nimport SearchProfessionalsListing from './src/screens/SearchProfessionalsListing';\nimport MyBookings from './src/screens/MyBookings';\nimport BookingDetails from './src/screens/BookingDetails';\nimport ServiceManagerScreen from './src/screens/ServiceManagerScreen';\nimport BlogScreen from './src/screens/BlogScreen';\nimport BlogPost from './src/screens/BlogPost';\nimport Waitlist from './src/screens/Waitlist';\nimport TestToast from './src/screens/TestToast';\nimport Connections from './src/screens/Connections';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst screens = [\n  { name: 'Home', component: HomeScreen },\n  { name: 'About', component: AboutScreen },\n  { name: 'OwnerProfile', component: OwnerProfile },\n  { name: 'MyProfile', component: MyProfile },  \n  { name: 'SignIn', component: SignIn },\n  { name: 'SignUp', component: SignUp },\n  { name: 'Invite', component: SignUp },\n  { name: 'ResetPassword', component: ResetPassword },\n  { name: 'ResetPasswordConfirm', component: ResetPasswordConfirm },\n  { name: 'SearchProfessionalsListing', component: SearchProfessionalsListing },\n  { name: 'OwnerHistory', component: OwnerHistory },\n  { name: 'MessageHistory', component: MessageHistory },\n  { name: 'Dashboard', component: Dashboard },\n  { name: 'BecomeProfessional', component: BecomeProfessional },\n  { name: 'More', component: MoreScreen },\n  { name: 'Owners', component: Owners },\n  { name: 'AvailabilitySettings', component: AvailabilitySettings },\n  { name: 'MyPets', component: MyPets },\n  { name: 'PaymentMethods', component: PaymentMethods },\n  { name: 'Settings', component: Settings },\n  { name: 'PrivacyPolicy', component: PrivacyPolicy },\n  { name: 'ProfessionalSettings', component: ProfessionalSettings },\n  { name: 'TermsOfService', component: TermsOfService },\n  { name: 'HelpFAQ', component: HelpFAQ },\n  { name: 'ContactUs', component: ContactUs },\n  { name: 'ProfessionalProfile', component: ProfessionalProfile },\n  { name: 'MyContracts', component: MyContracts },\n  { name: 'ChangePassword', component: ChangePassword },\n  { name: 'AddPet', component: AddPet },\n  { name: 'MyBookings', component: MyBookings },\n  { name: 'BookingDetails', component: BookingDetails },\n  { name: 'ServiceManager', component: ServiceManagerScreen },\n  { name: 'Blog', component: BlogScreen },\n  { name: 'BlogPost', component: BlogPost },\n  { name: 'Waitlist', component: Waitlist },\n  { name: 'TestToast', component: TestToast },\n  { name: 'Connections', component: Connections },\n];\n\nconst linking = {\n  enabled: true,\n  prefixes: [\n    'https://staging.crittrcove.com',\n    'http://staging.crittrcove.com',\n    `${API_BASE_URL}`\n  ],\n  config: {\n    screens: {\n      Home: '*',  // This will catch all unmatched routes\n      About: 'about',\n      OwnerProfile: 'owner-profile',\n      MyProfile: 'my-profile',\n      SignIn: 'signin',\n      SignUp: {\n        path: 'signup/:token?',\n        parse: {\n          token: (token) => token || null\n        }\n      },\n      Invite: {\n        path: 'invite/:token',\n        exact: true,\n        parse: {\n          token: (token) => token\n        },\n        stringify: {\n          token: (token) => token\n        }\n      },\n      ResetPassword: 'reset-password',\n      ResetPasswordConfirm: 'reset-password/:uid/:token',\n      SearchProfessionalsListing: 'search-professionals-listing',\n      OwnerHistory: 'owner-history',\n      MessageHistory: {\n        path: 'message-history',\n        parse: {\n          messageId: (messageId) => messageId || null,\n          senderName: (senderName) => senderName || 'Unknown User'\n        }\n      },\n      Dashboard: 'Dashboard',\n      BecomeProfessional: 'become-professional',\n      More: 'more',\n      Owners: 'owners',\n      AvailabilitySettings: 'availability-settings',\n      MyPets: 'my-pets',\n      PaymentMethods: 'payment-methods',\n      Settings: 'settings',\n      PrivacyPolicy: 'privacy-policy',\n      ProfessionalSettings: 'professional-settings',\n      TermsOfService: 'terms-of-service',\n      HelpFAQ: 'help-faq',\n      ContactUs: 'contact-us',\n      ProfessionalProfile: {\n        path: 'professional-profile',\n        parse: {\n          professional: (professional) => undefined\n        }\n      },\n      MyContracts: 'my-contracts',\n      ChangePassword: 'change-password',\n      AddPet: {\n        path: 'add-pet',\n        parse: {\n          pet: () => undefined\n        }\n      },\n      MyBookings: 'my-bookings',\n      BookingDetails: 'booking-details',\n      ServiceManager: 'service-manager',\n      Blog: 'blog',\n      BlogPost: 'blog-post',\n      Waitlist: 'waitlist',\n      TestToast: 'test-toast',\n      Connections: 'connections',\n    }\n  }\n};\n\n\nexport const navigationRef = createNavigationContainerRef();\n\nexport function navigate(name, params) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(name, params);\n  }\n}\n\nfunction TabNavigator() {\n  return (\n    <Tab.Navigator tabBar={props => <Navigation {...props} />}>\n      {screens.map(screen => (\n        <Tab.Screen \n          key={screen.name}\n          name={screen.name} \n          component={screen.component} \n          options={{ headerShown: false }} \n        />\n      ))}\n    </Tab.Navigator>\n  );\n}\n\nconst MVPWarning = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const checkBannerStatus = async () => {\n      if (Platform.OS === 'web') {\n        const hidden = sessionStorage.getItem('mvp_banner_hidden');\n        if (hidden === 'true') {\n          setIsVisible(false);\n        }\n      } else {\n        const hidden = await AsyncStorage.getItem('mvp_banner_hidden');\n        if (hidden === 'true') {\n          setIsVisible(false);\n        }\n      }\n    };\n    checkBannerStatus();\n  }, []);\n\n  const hideBanner = async () => {\n    if (Platform.OS === 'web') {\n      sessionStorage.setItem('mvp_banner_hidden', 'true');\n    } else {\n      await AsyncStorage.setItem('mvp_banner_hidden', 'true');\n    }\n    setIsVisible(false);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <View style={styles.warningBanner}>\n      <View style={styles.warningContent}>\n        <TouchableOpacity \n          style={styles.closeButton}\n          onPress={hideBanner}\n        >\n          <Text style={styles.closeButtonText}>✕</Text>\n        </TouchableOpacity>\n        <Text style={styles.warningText}>\n          🚧 MVP MODE: Features are still under development.\n        </Text>\n        <TouchableOpacity \n          style={styles.waitlistButton}\n          onPress={() => navigateToFrom(navigation, 'Waitlist', 'Home')}\n        >\n          <Text style={styles.waitlistButtonText}>Join Waitlist</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nfunction AppContent() {\n  const authContext = useContext(AuthContext);\n  const { checkAuthStatus, is_DEBUG } = authContext;\n  const [initialRoute, setInitialRoute] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const [inviteToken, setInviteToken] = useState(null);\n\n  // Check for invitation in the URL\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const url = window.location.pathname;\n      if (authContext.debugLog) {\n        authContext.debugLog('MBA6666 App - Current URL path:', url);\n      }\n      \n      if (url.includes('/invite/')) {\n        const pathParts = url.split('/');\n        const inviteIndex = pathParts.findIndex(part => part === 'invite');\n        if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n          const token = pathParts[inviteIndex + 1];\n          if (authContext.debugLog) {\n            authContext.debugLog('MBA6666 Found invitation token in URL:', token);\n          }\n          setInviteToken(token);\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      try {\n        const authStatus = await checkAuthStatus();\n        let route = 'Home';\n\n        // If we have an invite token, go to SignUp\n        if (inviteToken) {\n          if (authContext.debugLog) {\n            authContext.debugLog('MBA6666 Setting initial route to SignUp with token:', inviteToken);\n          }\n          route = 'SignUp';\n        }\n        // Only change route if user is authenticated and no invite token\n        else if (authStatus.isAuthenticated) {\n          route = authStatus.userRole === 'professional' ? 'Dashboard' : 'Home';\n        }\n\n        setInitialRoute(route);\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        setInitialRoute(inviteToken ? 'SignUp' : 'Home');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeApp();\n  }, [inviteToken]);\n\n  // Handle route changes without triggering auth checks\n  useEffect(() => {\n    if (!isLoading && initialRoute && Platform.OS !== 'web') {\n      AsyncStorage.setItem('lastRoute', initialRoute)\n        .catch(error => console.error('Error storing route:', error));\n    }\n  }, [initialRoute, isLoading]);\n\n  if (isLoading || !initialRoute) {\n    return null; // Or a loading spinner component\n  }\n\n  const hideBanner = async () => {\n    if (Platform.OS === 'web') {\n      sessionStorage.setItem('mvp_banner_hidden', 'true');\n    } else {\n      await AsyncStorage.setItem('mvp_banner_hidden', 'true');\n    }\n    setIsVisible(false);\n  };\n\n  return (\n    <>\n      {isVisible && <MVPWarning />}\n      {Platform.OS === 'web' ? (\n        <Stack.Navigator\n          initialRouteName={initialRoute}\n          screenOptions={{\n            headerShown: true,\n            header: ({ navigation }) => <Navigation navigation={navigation} />,\n            ...TransitionPresets.SlideFromRightIOS,\n            presentation: 'card',\n            animation: 'slide_from_right'\n          }}\n        >\n          {screens.map(screen => (\n            <Stack.Screen \n              key={screen.name}\n              name={screen.name} \n              component={screen.component}\n              options={{\n                headerShown: true,\n                animation: 'slide_from_right'\n              }}\n            />\n          ))}\n        </Stack.Navigator>\n      ) : (\n        <TabNavigator />\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  warningBanner: {\n    backgroundColor: '#ffebee',\n    padding: Platform.OS === 'web' ? 12 : 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ef5350',\n    width: '100%',\n    flexShrink: 0, // Prevent banner from shrinking\n  },\n  warningContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    gap: 10,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  warningText: {\n    color: '#c62828',\n    textAlign: 'center',\n    fontSize: Platform.OS === 'web' ? 15 : 14,\n    flexShrink: 1,\n    flex: 1,\n    marginHorizontal: 15,\n  },\n  waitlistButton: {\n    backgroundColor: '#ef5350',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n    marginLeft: 'auto',\n  },\n  waitlistButtonText: {\n    color: 'white',\n    fontSize: Platform.OS === 'web' ? 14 : 13,\n    fontWeight: '600',\n  },\n  closeButton: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n  closeButtonText: {\n    color: '#c62828',\n    fontSize: 18,\n    fontWeight: '600',\n  },\n});\n\nexport default function App() {\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      linking={linking}\n      onStateChange={async (state) => {\n        if (Platform.OS !== 'web' && state?.routes?.length > 0) {\n          const currentRoute = state.routes[state.routes.length - 1].name;\n          await AsyncStorage.setItem('lastRoute', currentRoute)\n            .catch(error => console.error('Error storing route:', error));\n        }\n      }}\n    >\n      <AuthProvider>\n        <MessageNotificationProvider>\n          <TutorialProvider>\n            <PaperProvider theme={theme}>\n              <ToastProvider>\n                <AppContent />\n              </ToastProvider>\n            </PaperProvider>\n          </TutorialProvider>\n        </MessageNotificationProvider>\n      </AuthProvider>\n    </NavigationContainer>\n  );\n}\n\n","import React from 'react';\nimport { View } from 'react-native';\nimport { Text } from 'react-native-paper';\n\nexport default function AboutScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>About Screen</Text>\n    </View>\n  );\n}","import axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { getStorage, debugLog } from '../context/AuthContext';\nimport { Platform } from 'react-native';\nimport { convertToUTC, formatDateForAPI, formatTimeForAPI } from '../utils/time_utils';\n\n/**\n * Handles authentication errors (401) gracefully\n * This should be called by API functions when they receive a 401 response\n * @param {Object} error - The error object from catch block\n * @returns {Error} A standardized error that can be displayed to the user\n */\nconst handleAuthError = (error) => {\n  // Only process if it's a 401 error with token_not_valid code\n  if (error.response?.status === 401 && error.response?.data?.code === 'token_not_valid') {\n    debugLog('MBA54321', 'Auth error handler: Token invalid detected');\n    \n    // Clear tokens from storage\n    if (Platform.OS === 'web') {\n      sessionStorage.removeItem('userToken');\n      sessionStorage.removeItem('refreshToken');\n      sessionStorage.setItem('explicitSignOut', 'true');\n    } else {\n      const AsyncStorage = require('@react-native-async-storage/async-storage').default;\n      AsyncStorage.multiRemove(['userToken', 'refreshToken']);\n    }\n    \n    // Navigate to sign-in page after a brief delay\n    setTimeout(() => {\n      const { navigate } = require('../../App');\n      navigate('SignIn');\n    }, 0);\n    \n    // Return standardized error message\n    return new Error('Your session has expired. Please sign in again to continue.');\n  }\n  \n  // If not a token error, return the original error\n  return error;\n};\n\n// Create API client for standardized requests\nconst createApiClient = async () => {\n  const token = await getStorage('userToken');\n  return axios.create({\n    baseURL: API_BASE_URL,\n    headers: {\n      Authorization: token ? `Bearer ${token}` : '',\n      'Content-Type': 'application/json'\n    }\n  });\n};\n\n// Helper function to get API client instance\nconst getApiClient = async () => {\n  return await createApiClient();\n};\n\n// Get all professional services for service manager screen\nexport const getProfessionalServices = async () => {\n  try {\n    debugLog('MBA7890: Fetching professional services');\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.get('/api/services/v1/professional/services/');\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA7890: Error fetching professional services:', error);\n    debugLog('MBA7890: Error details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Get all available services for a pro and\n// return the selected ones in the draft\nexport const getBookingAvailableServices = async (bookingId) => {\n  try {\n    const token = await getStorage('userToken');\n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${bookingId}/available_services/`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching available services:', error);\n    throw error;\n  }\n};\n\nexport const getBookingAvailablePets = async (bookingId) => {\n  try {\n    const token = await getStorage('userToken');\n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${bookingId}/available_pets/`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching available pets:', error);\n    throw error;\n  }\n};\n\nexport const approveBooking = async (bookingId) => {\n  try {\n    const token = await getStorage('userToken');\n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/approve/`,\n      {},  // Empty body since we don't need to send any data\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('Error approving booking:', error);\n    throw error;\n  }\n};\n\n/**\n * Get detailed booking information by ID\n * @param {string|number} bookingId - ID of the booking to retrieve\n * @returns {Promise<Object>} - Detailed booking information\n */\nexport const getBookingDetails = async (bookingId) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    debugLog('MBA88899', 'Fetching booking details for ID:', bookingId);\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/details/`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA88899', 'Booking details fetched successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA88899', 'Error fetching booking details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Request changes to a booking\n * @param {string|number} bookingId - ID of the booking to request changes for\n * @param {string} message - Message explaining the requested changes\n * @returns {Promise<Object>} - Response from the API\n */\nexport const requestBookingChanges = async (bookingId, message) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    \n    debugLog('MBA88899 Requesting changes for booking ID:', bookingId);\n    debugLog('MBA88899 Change request message:', message);\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/request-changes/`,\n      { message },\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA88899 Change request submitted successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA88899 Error requesting booking changes:', error);\n    throw error;\n  }\n};\n\nexport const updateBookingDraftPetsAndServices = async (draftId, data) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    const response = await axios.patch(\n      `${API_BASE_URL}/api/booking_drafts/v1/${draftId}/update_pets_and_services/`,\n      data,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    debugLog('MBA12345 Draft update response:', response.data);\n\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error updating booking draft:', error);\n    throw error;\n  }\n};\n\nexport const updateBookingDraftTimeAndDate = async (draftId, startDate, endDate, startTime, endTime) => {\n    try {\n        debugLog('MBA5asdt3f4321 - Updating booking draft time and date:', {\n            draftId,\n            startDate,\n            endDate,\n            startTime,\n            endTime\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-time-and-date/${draftId}/`,\n            {\n                start_date: startDate,\n                end_date: endDate,\n                start_time: startTime,\n                end_time: endTime\n            },\n            {\n                headers: {\n                    Authorization: `Bearer ${await getStorage('userToken')}`,\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        debugLog('MBA5asdt3f4321 - Booking draft time and date update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA5asdt3f4321 Error updating booking draft time and date:', error);\n        throw error;\n    }\n};\n\nexport const updateBookingDraftMultipleDays = async (draftId, data, timeSettings) => {\n    try {\n        // Get the user's timezone from timeSettings, with fallback to US/Mountain\n        const userTimezone = timeSettings?.timezone || 'US/Mountain';\n        \n        debugLog('MBA8800: Updating booking draft multiple days:', {\n            draftId,\n            data,\n            userTimezone\n        });\n\n        // Handle different formats of dates array\n        const utcDates = data.dates.map(dateItem => {\n            // Check what format the date is in\n            let dateStr, startTimeStr, endTimeStr, endDateStr;\n            let isServiceOvernight = false;\n            \n            // If the dateItem already has date and times (from non-overnight date range)\n            if (dateItem.date && dateItem.start_time && dateItem.end_time) {\n                debugLog('MBA8800: Using provided occurrence data format', dateItem);\n                return {\n                    date: dateItem.date,\n                    startTime: dateItem.start_time,\n                    endDate: dateItem.end_date || dateItem.date, // Always include endDate\n                    endTime: dateItem.end_time,\n                    is_overnight: dateItem.is_overnight || false\n                };\n            }\n            \n            // If the dateItem already has date and times (formatted in BookingStepModal)\n            if (dateItem.date && dateItem.startTime && dateItem.endTime) {\n                debugLog('MBA8800: Using provided date and times', dateItem);\n                return {\n                    date: dateItem.date,\n                    startTime: dateItem.startTime,\n                    endDate: dateItem.endDate || dateItem.date, // Always include endDate\n                    endTime: dateItem.endTime,\n                    is_overnight: dateItem.is_overnight || false\n                };\n            }\n            \n            // For multiple days format from DateSelectionCard\n            if (dateItem instanceof Date) {\n                // Format the date for API\n                dateStr = formatDateForAPI(dateItem);\n                \n                // Determine which time to use - if individual times exist, use those\n                let dayTimes = data.times;\n                const dateKey = dateItem.toISOString().split('T')[0];\n                \n                if (data.times[dateKey] && data.times.hasIndividualTimes) {\n                    dayTimes = data.times[dateKey];\n                }\n                \n                // Get the time strings\n                if (typeof dayTimes.startTime === 'string') {\n                    startTimeStr = dayTimes.startTime;\n                } else if (dayTimes.startTime?.hours !== undefined) {\n                    startTimeStr = `${String(dayTimes.startTime.hours).padStart(2, '0')}:${String(dayTimes.startTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                    // Default time if missing\n                    startTimeStr = '09:00';\n                }\n                \n                if (typeof dayTimes.endTime === 'string') {\n                    endTimeStr = dayTimes.endTime;\n                } else if (dayTimes.endTime?.hours !== undefined) {\n                    endTimeStr = `${String(dayTimes.endTime.hours).padStart(2, '0')}:${String(dayTimes.endTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                    // Default time if missing\n                    endTimeStr = '17:00';\n                }\n                \n                debugLog('MBA8800: Formatted times for date:', dateKey, { startTimeStr, endTimeStr });\n                \n                // Determine if the end time might cross to the next day\n                // Check if end time is midnight or earlier than start time, indicating day boundary crossing\n                const isMidnightEnd = endTimeStr === '00:00';\n                const isTimeBeforeStart = \n                    (parseInt(endTimeStr.split(':')[0], 10) < parseInt(startTimeStr.split(':')[0], 10)) ||\n                    (parseInt(endTimeStr.split(':')[0], 10) === parseInt(startTimeStr.split(':')[0], 10) && \n                     parseInt(endTimeStr.split(':')[1], 10) < parseInt(startTimeStr.split(':')[1], 10));\n                \n                const needsNextDayDate = isMidnightEnd || isTimeBeforeStart;\n                \n                // Calculate end date - either same day or next day\n                const endDateObj = needsNextDayDate \n                  ? new Date(dateItem.getTime() + 24*60*60*1000) // Next day if crossing midnight\n                  : new Date(dateItem);\n                \n                endDateStr = formatDateForAPI(endDateObj);\n                \n                debugLog('MBA8800: End date calculation in API.js:', {\n                  needsNextDayDate,\n                  isMidnightEnd,\n                  isTimeBeforeStart,\n                  startTimeStr,\n                  endTimeStr,\n                  originalDate: dateStr,\n                  calculatedEndDate: endDateStr\n                });\n                \n                // Set overnight based on service, not just time\n                isServiceOvernight = dayTimes.isOvernightForced || false;\n            } else {\n                // If the data is in some other format, we need to extract the date and times\n                debugLog('MBA8800: Unexpected date format', dateItem);\n                throw new Error('Unexpected date format');\n            }\n            \n            // Convert to UTC using user's timezone\n            const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                dateStr,\n                startTimeStr,\n                userTimezone\n            );\n\n            const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDateStr || dateStr, // Use endDateStr if available, otherwise use dateStr\n                endTimeStr,\n                userTimezone\n            );\n\n            return {\n                date: utcStartDate,\n                startTime: utcStartTime,\n                endDate: utcEndDate, // Always include endDate\n                endTime: utcEndTime,\n                is_overnight: isServiceOvernight\n            };\n        });\n\n        debugLog('MBA8800: Converted UTC dates:', utcDates);\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-multiple-days/${draftId}/`,\n            { dates: utcDates },\n            {\n                headers: {\n                    Authorization: `Bearer ${await getStorage('userToken')}`,\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        debugLog('MBA8800: Booking draft multiple days update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA8800: Error updating booking draft multiple days:', error);\n        throw error;\n    }\n};\n\nexport const updateBookingDraftRecurring = async (draftId, recurringData) => {\n    try {\n        debugLog('MBA5asdt3f4321 - Updating booking draft recurring dates:', {\n            draftId,\n            recurringData\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-recurring/${draftId}/`,\n            recurringData,\n            {\n                headers: {\n                    Authorization: `Bearer ${await getStorage('userToken')}`,\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        debugLog('MBA5asdt3f4321 - Booking draft recurring update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA5asdt3f4321 Error updating booking draft recurring dates:', error);\n        throw error;\n    }\n};\n\n/**\n * Get user's time settings (timezone and military time preference)\n * @returns {Promise<Object>} Object containing timezone and use_military_time\n */\nexport const getTimeSettings = async () => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/users/v1/time-settings/`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching time settings', error);\n    throw error;\n  }\n};\n\n/**\n * Update user's time settings\n * @param {Object} settings - Object containing timezone and/or use_military_time\n * @returns {Promise<Object>} Updated time settings\n */\nexport const updateTimeSettings = async (settings) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    // Ensure settings is an object\n    const data = typeof settings === 'object' ? settings : { timezone: settings };\n    \n    debugLog('MBA12345 Sending time settings update', data);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/users/v1/update-time-settings/`,\n      data,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error updating time settings', error);\n    throw error;\n  }\n};\n\n/**\n * Get user's name from the backend\n * @returns {Promise<Object>} Object containing name and first_name\n */\nexport const getUserName = async () => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/users/v1/get-name/`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching user name', error);\n    throw error;\n  }\n};\n\n/**\n * Get user profile data\n * @returns {Promise<Object>} - User profile data\n */\nexport const userProfile = async () => {\n  const url = `${API_BASE_URL}/api/users/v1/profile/`;\n  \n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    debugLog('MBA12345', 'Fetching user profile data');\n    \n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`,\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    debugLog('MBA12345', 'User profile data fetched successfully:', {\n      name: data.name,\n      email: data.email,\n      address: data.address\n    });\n    \n    return data;\n  } catch (error) {\n    debugLog('MBA12345', 'Error in userProfile:', error);\n    throw error;\n  }\n};\n\n/**\n * Update user profile information\n * @param {Object} profileData - Data to update in the user profile\n * @returns {Promise<Object>} - Only the updated fields\n */\nexport const updateProfileInfo = async (profileData) => {\n  try {\n    debugLog('MBA76543', 'Updating profile info with data:', profileData);\n    \n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    \n    // Handle FormData differently than JSON\n    const isFormData = profileData instanceof FormData;\n    \n    debugLog('MBA76543', `Making ${isFormData ? 'FormData' : 'JSON'} request to update profile`);\n    \n    const response = await fetch(`${API_BASE_URL}/api/users/v1/update-profile/`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `Bearer ${token}`,\n        ...(isFormData ? {} : { 'Content-Type': 'application/json' }),\n      },\n      body: isFormData ? profileData : JSON.stringify(profileData),\n    });\n    \n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`HTTP error! status: ${response.status}, message: ${errorText}`);\n    }\n    \n    const updatedProfile = await response.json();\n    \n    debugLog('MBA76543', 'Profile updated successfully with response:', updatedProfile);\n    return updatedProfile;\n  } catch (error) {\n    debugLog('MBA76543', 'Error updating profile info:', error);\n    throw error;\n  }\n};\n\n/**\n * Add a new pet to the user's account\n * This function sends pet data to the backend to create a new pet record\n * @param {Object} petData - Object containing the pet details\n * @returns {Promise<Object>} - Created pet data from the backend\n */\nexport const addPet = async (petData) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    debugLog('MBA789', 'Adding new pet with data:', petData);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/pets/v1/add-pet/`,\n      petData,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA789', 'Pet added successfully:', response.data);\n    \n    // Return the data in a standardized format\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error adding pet:', error);\n    throw error;\n  }\n};\n\n/**\n * Update an existing pet\n * This function sends updated pet data to the backend to update an existing pet record\n * @param {string|number} petId - The ID of the pet to update\n * @param {Object} petData - Object containing the updated pet details\n * @returns {Promise<Object>} - Updated pet data from the backend\n */\nexport const updatePet = async (petId, petData) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    debugLog('MBA789', 'Updating pet with ID:', petId, 'and data:', petData);\n\n    const response = await axios.patch(\n      `${API_BASE_URL}/api/pets/v1/${petId}/`,\n      petData,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA789', 'Pet updated successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error updating pet:', error);\n    throw error;\n  }\n};\n\n/**\n * Fix the owner of a pet by assigning the current user\n * This is used to repair pets that have a null owner field\n * @param {string|number} petId - The ID of the pet to fix\n * @returns {Promise<Object>} - Updated pet data from the backend\n */\nexport const fixPetOwner = async (petId) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n\n    debugLog('MBA789', 'Fixing owner for pet with ID:', petId);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/pets/v1/${petId}/fix-owner/`,\n      {},\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA789', 'Pet owner fixed successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error fixing pet owner:', error);\n    throw error;\n  }\n};\n\n/**\n * Creates a new professional service\n * @param {Object} serviceData - Data for the new service\n * @returns {Promise<Object>} - The created service data\n */\nexport const createService = async (serviceData) => {\n  try {\n    // Log the data we're sending to the server\n    debugLog('MBA54321', 'Creating new service - sending data to backend:', serviceData);\n\n    // Format animal_types as a dictionary mapping animal types to their categories\n    let formattedAnimalTypes = {};\n    \n    if (serviceData.animal_types && Array.isArray(serviceData.animal_types)) {\n      // Convert array format to dictionary\n      serviceData.animal_types.forEach(animal => {\n        if (typeof animal === 'object' && animal.name && animal.category) {\n          formattedAnimalTypes[animal.name] = animal.category;\n        } else if (typeof animal === 'string') {\n          formattedAnimalTypes[animal] = 'Other';\n        }\n      });\n    } else if (serviceData.animal_types && typeof serviceData.animal_types === 'object') {\n      // If it's already a dictionary, use it directly\n      formattedAnimalTypes = serviceData.animal_types;\n    } else if (serviceData.animal_type) {\n      // Fallback to legacy single animal_type\n      formattedAnimalTypes[serviceData.animal_type] = 'Other';\n    } else {\n      // Default\n      formattedAnimalTypes['Other'] = 'Other';\n    }\n    \n    // Format additional rates to ensure rate values are strings\n    const formattedAdditionalRates = (serviceData.additional_rates || []).map(rate => ({\n      ...rate,\n      rate: String(rate.rate)\n    }));\n    \n    // Make sure all numeric values are properly formatted as strings to avoid type issues\n    const formattedData = {\n      ...serviceData,\n      base_rate: String(serviceData.base_rate),\n      additional_animal_rate: String(serviceData.additional_animal_rate || 0),\n      holiday_rate: String(serviceData.holiday_rate || 0),\n      animal_types: formattedAnimalTypes,\n      additional_rates: formattedAdditionalRates\n    };\n    \n    // Log we're sending the additional rates too\n    debugLog('MBA54321', 'Sending additional rates to backend:', formattedData.additional_rates);\n\n    const apiClient = await getApiClient();\n    const response = await apiClient.post('/api/services/v1/create/', formattedData);\n\n    debugLog('MBA54321', 'Service created successfully - backend response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA54321', 'Error creating service:', error);\n    debugLog('MBA54321', 'Error response data:', error.response?.data);\n    \n    // Check for authentication errors using the centralized handler\n    const authError = handleAuthError(error);\n    if (authError !== error) {\n      // If handleAuthError processed this as an auth error, throw the new error\n      throw authError;\n    }\n    \n    // Otherwise rethrow the original error\n    throw error;\n  }\n};\n\n/**\n * Delete a service by ID\n * @param {number} serviceId - ID of the service to delete\n * @returns {Promise<Object>} Response data with success message or error details\n */\nexport const deleteService = async (serviceId) => {\n  try {\n    debugLog('MBA7890: Deleting service with ID:', serviceId);\n\n    const apiClient = await getApiClient();\n    const response = await apiClient.delete(`/api/services/v1/delete/${serviceId}/`);\n\n    debugLog('MBA7890: Service deleted successfully - backend response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA7890: Error deleting service:', error);\n    debugLog('MBA7890: Error response data:', error.response?.data);\n    throw error;\n  }\n};\n\n// Function to update an existing service\nexport const updateService = async (serviceData) => {\n  try {\n    const apiClient = await getApiClient();\n    debugLog('API updateService', 'Updating service with data:', serviceData);\n    \n    const response = await apiClient.patch(`/api/services/v1/update/${serviceData.service_id}/`, serviceData);\n    \n    debugLog('API updateService Response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('API updateService Error:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Get professional's client connections, returning necessary client data\n * @param {number} page - Page number for pagination\n * @returns {Promise<Object>} Object containing connections and pagination info\n */\nexport const getUserConnections = async (page = 1) => {\n  try {\n    debugLog('MBA4321 Fetching client connections, page:', page);\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.get('/api/bookings/v1/connections/', {\n      params: {\n        page\n      }\n    });\n    \n    debugLog('MBA4321 Connections response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error fetching connections:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Get profile details for a specific connection\n * @param {string} userId - The ID of the user to get profile details for\n * @param {string} type - The type of connection ('client' or 'professional')\n * @returns {Promise<Object>} Object containing detailed profile info\n */\nexport const getConnectionProfile = async (userId, type = 'client') => {\n  try {\n    debugLog('MBA4321 Fetching connection profile:', { userId, type });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.get(`/api/connections/v1/profile/${userId}/`, {\n      params: { type }\n    });\n    \n    debugLog('MBA4321 Connection profile response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error fetching connection profile:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Invite a client to connect with a professional via email or link\n * \n * @param {string} type - Type of invitation: 'email' or 'link'\n * @param {string} email - The email address of the client to invite (required if type is 'email')\n * @returns {Promise<Object>} Object containing result of invitation, including invitation_link for link invitations\n */\nexport const inviteClient = async (type = 'email', email = null) => {\n  try {\n    debugLog('MBA4321 Inviting client:', { type, email });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.post('/api/users/v1/invitations/', {\n      type,\n      email,\n      is_professional_invite: true\n    });\n    \n    debugLog('MBA4321 Invite client response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error inviting client:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Send a referral to invite someone to join CrittrCove\n * \n * @param {string} type - Type of invitation: 'email' or 'link'\n * @param {string} email - The email address to refer (required if type is 'email')\n * @param {string} referralType - The type of referral: 'client_to_client', 'client_to_professional', or 'professional_to_professional'\n * @returns {Promise<Object>} Object containing result of referral, including invitation_link for link referrals\n */\nexport const sendReferral = async (type = 'email', email = null, referralType) => {\n  try {\n    debugLog('MBA4321 Sending referral:', { type, email, referralType });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.post('/api/users/v1/invitations/', {\n      type,\n      email,\n      is_professional_invite: false,\n      referral_type: referralType\n    });\n    \n    debugLog('MBA4321 Send referral response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error sending referral:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Get a list of all invitations created by the current user\n * \n * @param {string} type - Type of invitations to fetch: 'all', 'professional', or 'referral'\n * @returns {Promise<Array>} Array of invitation objects\n */\nexport const getInvitations = async (type = 'all') => {\n  try {\n    debugLog('MBA4321 Getting invitations:', { type });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.get(`/api/users/v1/invitations/?type=${type}`);\n    \n    debugLog('MBA4321 Get invitations response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error getting invitations:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Get details of a specific invitation\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Invitation details\n */\nexport const getInvitationDetails = async (token) => {\n  try {\n    debugLog('MBA4321 Getting invitation details:', { token });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.get(`/api/users/v1/invitations/${token}/`);\n    \n    debugLog('MBA4321 Get invitation details response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error getting invitation details:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Verify if an invitation is valid\n * This endpoint doesn't require authentication\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Object with valid flag and invitation details\n */\nexport const verifyInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Verifying invitation:', { token });\n    debugLog('MBA4321 Verification endpoint:', `${API_BASE_URL}/api/users/v1/invitations/${token}/verify/`);\n    \n    // Don't use the authenticated API client since this doesn't require auth\n    const response = await axios.get(`${API_BASE_URL}/api/users/v1/invitations/${token}/verify/`);\n    \n    debugLog('MBA4321 Verify invitation response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error verifying invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Accept an invitation and create a connection between client and professional\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Result of accepting the invitation\n */\nexport const acceptInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Accepting invitation:', { token });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.post(`/api/users/v1/invitations/${token}/accept/`);\n    \n    debugLog('MBA4321 Accept invitation response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error accepting invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Delete/cancel an invitation\n * \n * @param {string} token - The invitation token\n * @returns {Promise<void>}\n */\nexport const deleteInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Deleting invitation:', { token });\n    \n    const apiClient = await getApiClient();\n    await apiClient.delete(`/api/users/v1/invitations/${token}/`);\n    \n    debugLog('MBA4321 Delete invitation success');\n    \n    return true;\n  } catch (error) {\n    debugLog('MBA4321 Error deleting invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Resend an invitation email\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Result of resending the invitation\n */\nexport const resendInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Resending invitation:', { token });\n    \n    const apiClient = await getApiClient();\n    const response = await apiClient.post(`/api/users/v1/invitations/${token}/resend/`);\n    \n    debugLog('MBA4321 Resend invitation response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error resending invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Update booking draft rates and recalculate cost summary\n * @param {string} draftId - The ID of the booking draft to update\n * @param {Array} occurrences - Array of occurrence objects with updated rates\n * @returns {Promise<Object>} Updated draft data\n */\nexport const updateBookingDraftRates = async (draftId, occurrences) => {\n    try {\n        debugLog('MBA98765 - Updating booking draft rates:', {\n            draftId,\n            occurrences\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-rates/${draftId}/`,\n            {\n                occurrences\n            },\n            {\n                headers: {\n                    Authorization: `Bearer ${await getStorage('userToken')}`,\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        debugLog('MBA98765 - Booking draft rates update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA98765 Error updating booking draft rates:', error);\n        throw error;\n    }\n};\n\n/**\n * Create a booking from a draft\n * Called when the professional confirms a booking from the booking step modal\n * @param {string} conversationId - The ID of the conversation containing the draft\n * @returns {Promise<Object>} Response containing the new booking information and message\n */\nexport const createBookingFromDraft = async (conversationId) => {\n    try {\n        debugLog('MBA66777 - Creating booking from draft:', {\n            conversationId\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/bookings/v1/create-from-draft/`,\n            {\n                conversation_id: conversationId\n            },\n            {\n                headers: {\n                    Authorization: `Bearer ${await getStorage('userToken')}`,\n                    'Content-Type': 'application/json'\n                }\n            }\n        );\n\n        debugLog('MBA66777 - Booking created from draft:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA66777 Error creating booking from draft:', error);\n        throw error;\n    }\n};\n\n/**\n * Get count of unread messages for the current user\n * @returns {Promise<Object>} - Object containing unread message count\n */\nexport const getUnreadMessageCount = async () => {\n  try {\n    const apiClient = await getApiClient();\n    debugLog(\"MBA4321: Fetching unread message count\");\n    \n    const response = await apiClient.get('/api/messages/v1/unread-count/');\n    \n    debugLog(\"MBA4321: Unread count fetched:\", response.data);\n    return response.data;\n  } catch (error) {\n    debugLog(\"MBA4321: Error with unread message count:\", error.message);\n    \n    // Handle auth error gracefully\n    if (error.response?.status === 401) {\n      throw handleAuthError(error);\n    }\n    \n    // Return 0 as default in case of error\n    return { unread_count: 0, unread_conversations: 0 };\n  }\n};\n\n/**\n * Gets the dates and times for a booking draft\n * @param {string} draftId - The ID of the draft\n * @returns {Promise<Object>} - Draft dates and times data\n */\nexport const getBookingDraftDatesAndTimes = async (draftId) => {\n  try {\n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    \n    debugLog('MBA9876: Fetching booking draft dates and times:', draftId);\n    \n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${draftId}/dates_and_times/`,\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA9876: Draft dates and times fetched successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA9876: Error fetching booking draft dates and times:', error);\n    throw error;\n  }\n};\n\n/**\n * Creates a draft from an existing booking for editing purposes\n * @param {number} bookingId - The ID of the booking to create a draft from\n * @returns {Promise<Object>} Response containing the draft ID and draft data\n */\nexport const createDraftFromBooking = async (bookingId) => {\n  try {\n    debugLog('MBA6428: Creating draft from booking:', { bookingId });\n    \n    const token = await getStorage('userToken');\n    if (!token) {\n      throw new Error('No authentication token found');\n    }\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/booking_drafts/v1/create-from-booking/${bookingId}/`,\n      {},  // No body needed for this request\n      {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    \n    debugLog('MBA6428: Draft created successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA6428: Error creating draft from booking:', error);\n    // Return a structured error object instead of throwing\n    if (error.response?.data) {\n      return {\n        error: true,\n        status: error.response.status,\n        message: error.response.data.error || 'Failed to create draft from booking',\n        data: error.response.data\n      };\n    }\n    // Still throw for network errors or other unexpected issues\n    throw error;\n  }\n};\n\n// implement new api call herre\n\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Dimensions, Platform, SafeAreaView, Image } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport MessageNotificationContext from '../context/MessageNotificationContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Appbar, Menu, useTheme, Avatar } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\n\nlet previousRoute, currentRoute;\n\nexport const handleBack = async (navigation) => {\n  try {\n    if (Platform.OS === 'web') {\n      previousRoute = sessionStorage.getItem('previousRoute');\n      currentRoute = sessionStorage.getItem('currentRoute');\n      \n      if (previousRoute) {\n        console.log('MBA98386196v Previous Route Before:', previousRoute);\n        console.log('MBA98386196v Current Route Before:', currentRoute);\n        \n        // Get the previous-previous route\n        const prevPrevRoute = sessionStorage.getItem('prevPrevRoute');\n        \n        // Navigate to previous route\n        navigation.navigate(previousRoute);\n        \n        // Update the chain\n        sessionStorage.setItem('currentRoute', previousRoute);\n        sessionStorage.setItem('previousRoute', prevPrevRoute || '');\n        \n        console.log('MBA98386196v Previous Route After:', sessionStorage.getItem('previousRoute'));\n        console.log('MBA98386196v Current Route After:', sessionStorage.getItem('currentRoute'));\n      } else {\n        console.log('MBA98386196v No Previous Route');\n        // Default to More screen if no previous route\n        navigation.navigate('More');\n      }\n    } else {\n      previousRoute = await AsyncStorage.getItem('previousRoute');\n      currentRoute = await AsyncStorage.getItem('currentRoute');\n      \n      if (previousRoute) {\n        // Get the previous-previous route\n        const prevPrevRoute = await AsyncStorage.getItem('prevPrevRoute');\n        \n        // Navigate to previous route\n        navigation.navigate(previousRoute);\n        \n        // Update the chain\n        await AsyncStorage.setItem('currentRoute', previousRoute);\n        await AsyncStorage.setItem('previousRoute', prevPrevRoute || '');\n        \n        console.log('MBA98386196v Previous Route:', previousRoute);\n        console.log('MBA98386196v Current Route:', currentRoute);\n      } else {\n        // Default to More screen if no previous route\n        navigation.navigate('More');\n      }\n    }\n\n    if (previousRoute === currentRoute) {\n      // console.log('Two routes are the same');\n      navigation.navigate('More');\n      return;\n    }\n  } catch (error) {\n    console.error('Error handling back navigation:', error);\n    navigation.navigate('More');\n  }\n};\n\nexport const navigateToFrom = async (navigation, toLocation, fromLocation, params = {}) => {\n  try {\n    if (Platform.OS === 'web') {\n      // Store the current previousRoute as prevPrevRoute before updating\n      const currentPreviousRoute = sessionStorage.getItem('previousRoute');\n      if (currentPreviousRoute) {\n        sessionStorage.setItem('prevPrevRoute', currentPreviousRoute);\n      }\n      \n      sessionStorage.setItem('previousRoute', fromLocation);\n      sessionStorage.setItem('currentRoute', toLocation);\n      console.log('MBA98386196v Web - Set previousRoute:', fromLocation);\n      console.log('MBA98386196v Web - Set currentRoute:', toLocation);\n    } else {\n      // Store the current previousRoute as prevPrevRoute before updating\n      const currentPreviousRoute = await AsyncStorage.getItem('previousRoute');\n      if (currentPreviousRoute) {\n        await AsyncStorage.setItem('prevPrevRoute', currentPreviousRoute);\n      }\n      \n      await AsyncStorage.setItem('previousRoute', fromLocation);\n      await AsyncStorage.setItem('currentRoute', toLocation);\n      console.log('MBA98386196v Mobile - Set previousRoute:', fromLocation);\n      console.log('MBA98386196v Mobile - Set currentRoute:', toLocation);\n    }\n    \n    // Check if we're navigating to a tab within a screen\n    if (params.screen) {\n      console.log('MBA98386196v Navigating to tab:', params.screen, 'within screen:', toLocation);\n      \n      // Special handling for MyProfile screen to ensure tab is highlighted\n      if (toLocation === 'MyProfile') {\n        console.log('MBA98386196v Special handling for MyProfile screen');\n        // Store in appropriate storage for reload persistence\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('myProfileActiveTab', params.screen);\n        } else {\n          await AsyncStorage.setItem('myProfileActiveTab', params.screen);\n        }\n        \n        // Use reset to ensure the navigation state is clean and the tab is highlighted\n        navigation.reset({\n          index: 0,\n          routes: [\n            { \n              name: toLocation, \n              params: {\n                ...params,\n                initialTab: params.screen // Add initialTab parameter for MyProfile\n              } \n            }\n          ],\n        });\n      } else {\n        // For other screens with tabs\n        navigation.reset({\n          index: 0,\n          routes: [\n            { \n              name: toLocation, \n              params: params \n            }\n          ],\n        });\n      }\n    } else {\n      // Regular navigation\n      navigation.navigate(toLocation, params);\n    }\n  } catch (error) {\n    console.error('Error navigating:', error);\n    navigation.navigate(toLocation, params);\n  }\n};\n\nexport default function Navigation({ state, descriptors, navigation }) {\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(Dimensions.get('window').width < 900);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const { colors } = useTheme();\n  const { \n    isSignedIn, \n    is_DEBUG, \n    userRole, \n    isCollapsed, \n    setIsCollapsed, \n    switchRole, \n    screenWidth, \n    signOut,\n    isApprovedProfessional \n  } = useContext(AuthContext);\n  \n  // Get message notification state\n  const {\n    hasUnreadMessages,\n    unreadCount,\n    resetNotifications,\n    updateRoute\n  } = useContext(MessageNotificationContext);\n  \n  const [currentRoute, setCurrentRoute] = useState('');\n  const [notificationCount, setNotificationCount] = useState(3); // We can make this dynamic later\n\n  // Add effect to log state changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA98386196v Navigation State Update:', {\n        isSignedIn,\n        userRole,\n        isApprovedProfessional,\n        currentRoute\n      });\n    }\n  }, [isSignedIn, userRole, isApprovedProfessional, currentRoute]);\n\n  const openMenu = () => setVisible(true);\n  const closeMenu = () => setVisible(false);\n  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  useEffect(() => {\n    const updateCurrentRoute = async () => {\n      try {\n        let route;\n        \n        if (Platform.OS === 'web') {\n          route = sessionStorage.getItem('currentRoute');\n        } else {\n          route = await AsyncStorage.getItem('currentRoute');\n        }\n        \n        // Only log in debug mode, not every time\n        if (is_DEBUG && route !== currentRoute) {\n          console.log('MBA98386196v Current Route Updated:', route);\n        }\n        \n        // Only update if the route has actually changed\n        if (route && route !== currentRoute) {\n          setCurrentRoute(route);\n          \n          // Update message notification context with new route\n          // Avoiding infinite loops by checking if the route changed\n          updateRoute && updateRoute(route);\n          \n          // Only reset notifications when navigating to MessageHistory\n          if (route === 'MessageHistory' && hasUnreadMessages) {\n            resetNotifications && resetNotifications(route);\n          }\n        }\n      } catch (error) {\n        console.error('Error updating current route:', error);\n      }\n    };\n\n    updateCurrentRoute();\n    // Add navigation state listener\n    const unsubscribe = navigation.addListener('state', updateCurrentRoute);\n    return unsubscribe;\n  }, [navigation, resetNotifications, updateRoute, hasUnreadMessages, is_DEBUG]);\n\n  const professionalsTitle = Platform.OS === 'web' ? 'Search Pros' : 'Professionals';\n\n  const handleNavigation = async (screenName, tabName = null) => {\n    closeMenu();\n    \n    // Only log in debug mode to reduce console spam\n    if (is_DEBUG) {\n      console.log('MBA98386196v Navigating to:', screenName, tabName ? `with tab: ${tabName}` : '');\n      console.log('MBA98386196v Current route before:', currentRoute);\n    }\n    \n    try {\n      // Don't do anything if we're already on this screen\n      if (screenName === currentRoute) {\n        // Special case: if we're on MessageHistory and have unread messages, reset notifications\n        if (screenName === 'MessageHistory' && hasUnreadMessages) {\n          resetNotifications && resetNotifications();\n        }\n        \n        return;\n      }\n      \n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('previousRoute', currentRoute);\n        sessionStorage.setItem('currentRoute', screenName);\n      } else {\n        await AsyncStorage.setItem('previousRoute', currentRoute);\n        await AsyncStorage.setItem('currentRoute', screenName);\n      }\n      \n      // Update local state\n      setCurrentRoute(screenName);\n      \n      // Update the MessageNotificationContext with the new route\n      updateRoute && updateRoute(screenName);\n      \n      // Reset message notifications when navigating to MessageHistory\n      if (screenName === 'MessageHistory' && hasUnreadMessages) {\n        resetNotifications && resetNotifications();\n      }\n      \n      // If we have a tab parameter, pass it in the params\n      if (tabName) {\n        navigateToFrom(navigation, screenName, currentRoute, { screen: tabName });\n      } else {\n        navigateToFrom(navigation, screenName, currentRoute);\n      }\n      \n      if (is_DEBUG) {\n        console.log('MBA98386196v Current route after:', screenName);\n      }\n    } catch (error) {\n      console.error('Error handling navigation:', error);\n      navigateToFrom(navigation, screenName, currentRoute);\n    }\n  };\n\n  // Initialize route tracking on component mount\n  useEffect(() => {\n    const initializeRouteTracking = async () => {\n      try {\n        if (Platform.OS === 'web') {\n          // Web: Use sessionStorage\n          const currentRoute = sessionStorage.getItem('currentRoute');\n          if (!currentRoute) {\n            const initialRoute = isSignedIn \n              ? 'Dashboard'\n              : 'Home';\n            sessionStorage.setItem('currentRoute', initialRoute);\n          }\n        } else {\n          // Mobile: Use AsyncStorage\n          const currentRoute = await AsyncStorage.getItem('currentRoute');\n          if (!currentRoute) {\n            const initialRoute = isSignedIn \n              ? 'Dashboard'\n              : 'Home';\n            await AsyncStorage.setItem('currentRoute', initialRoute);\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing route tracking:', error);\n      }\n    };\n\n    initializeRouteTracking();\n  }, [isSignedIn, userRole]);\n\n  const handleRoleSwitch = async (newRole) => {\n    try {\n      // Get current screen before switching\n      const currentScreen = currentRoute;\n      \n      if (is_DEBUG) {\n        console.log('MBA98386196v Role switch initiated:', {\n          from: userRole,\n          to: newRole,\n          currentScreen\n        });\n      }\n      \n      await switchRole(newRole);\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('userRole', newRole);\n      } else {\n        await AsyncStorage.setItem('userRole', newRole);\n      }\n      \n      // Handle different screens according to requirements\n      switch (currentScreen) {\n        case 'MyProfile':\n          // For MyProfile, preserve the tab if it's common between roles\n          const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n          const currentTab = params?.screen || params?.initialTab || 'profile_info';\n          \n          if (is_DEBUG) {\n            console.log('MBA98386196v MyProfile tab preservation:', {\n              currentTab,\n              newRole\n            });\n          }\n          \n          // Check if we need to change the tab\n          let newTab = currentTab;\n          \n          // If switching to owner and current tab is professional-only, switch to profile_info\n          if (newRole === 'owner' && currentTab === 'services_availability') {\n            newTab = 'profile_info';\n          }\n          \n          // Navigate back to MyProfile with the appropriate tab\n          navigateToFrom(navigation, 'MyProfile', currentScreen, { screen: newTab });\n          break;\n          \n        case 'MessageHistory':\n          // For MessageHistory, just stay on the same screen without reload\n          navigateToFrom(navigation, 'MessageHistory', currentScreen);\n          break;\n          \n        case 'MyBookings':\n          // For MyBookings, stay on the same screen but switch tabs based on the new role\n          const activeTab = newRole === 'professional' ? 'professional' : 'owner';\n          if (is_DEBUG) {\n            console.log('MBA98386196v MyBookings tab switch:', {\n              newRole,\n              activeTab\n            });\n          }\n          // Pass the appropriate tab parameter\n          navigateToFrom(navigation, 'MyBookings', currentScreen, { screen: activeTab });\n          break;\n          \n        case 'Connections':\n          // For Connections, stay on the same screen but switch tabs based on the new role\n          const connectionsTab = newRole === 'professional' ? 'clients' : 'professionals';\n          if (is_DEBUG) {\n            console.log('MBA98386196v Connections tab switch:', {\n              newRole,\n              connectionsTab\n            });\n          }\n          // Pass the appropriate tab parameter\n          navigateToFrom(navigation, 'Connections', currentScreen, { screen: connectionsTab });\n          break;\n          \n        case 'Dashboard':\n          // For Dashboard, stay on the same screen\n          navigateToFrom(navigation, 'Dashboard', currentScreen);\n          break;\n          \n        case 'SearchProfessionalsListing':\n          // When client is on search pros and switches to pro, go to pro dashboard\n          if (newRole === 'professional') {\n            navigateToFrom(navigation, 'Dashboard', currentScreen);\n          } else {\n            // If somehow a pro is on this screen and switches to client, stay here\n            navigateToFrom(navigation, currentScreen, currentScreen);\n          }\n          break;\n          \n        case 'ServiceManager':\n          // When professional is on services and switches to client, go to client dashboard\n          if (newRole === 'owner') {\n            navigateToFrom(navigation, 'Dashboard', currentScreen);\n          } else {\n            // Should never happen, but if somehow client is on this screen and switches to pro, stay here\n            navigateToFrom(navigation, currentScreen, currentScreen);\n          }\n          break;\n          \n        default:\n          // For any other screen, navigate to the same screen\n          // This maintains the current behavior for unspecified screens\n          navigateToFrom(navigation, currentScreen, currentScreen);\n      }\n    } catch (error) {\n      console.error('Error switching role:', error);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      if (is_DEBUG) {\n        console.log('MBA98386196v Logging out user');\n      }\n      await signOut();\n      if (Platform.OS === 'web') {\n        sessionStorage.removeItem('currentRoute');\n        sessionStorage.removeItem('previousRoute');\n        sessionStorage.removeItem('userRole');\n      } else {\n        await AsyncStorage.removeItem('currentRoute');\n        await AsyncStorage.removeItem('previousRoute');\n        await AsyncStorage.removeItem('userRole');\n      }\n      setCurrentRoute('');\n      navigation.navigate('SignIn');\n    } catch (error) {\n      console.error('Error during logout:', error);\n    }\n  };\n\n  const renderMenuItems = () => {\n    if (!isSignedIn) {\n      if (isMobile) {\n        return [\n          { title: 'Sign In', icon: 'login', route: 'SignIn' },\n          { title: 'Sign Up', icon: 'account-plus', route: 'SignUp' },\n          { title: 'Become a Pro', icon: 'account-heart', route: 'BecomeProfessional' },\n          { title: 'Search Pros', icon: 'magnify', route: 'SearchProfessionalsListing' },\n          { title: 'More', icon: 'dots-horizontal', route: 'More' },\n        ];\n      }\n      return [\n        { title: 'Sign In', icon: 'login', route: 'SignIn' },\n        { title: 'Sign Up', icon: 'account-plus', route: 'SignUp' },\n        { title: 'More', icon: 'dots-horizontal', route: 'More' },\n      ];\n    } else if (userRole === 'professional') {\n      return [\n        { title: 'Dashboard', icon: 'view-dashboard', route: 'Dashboard' },\n        { title: 'Messages', icon: 'message-text', route: 'MessageHistory' },\n        { title: 'Services', icon: 'briefcase', route: 'ServiceManager' },\n        { title: 'Connections', icon: 'account-group', route: 'Connections' },\n        // { title: 'Bookings', icon: 'calendar', route: 'MyBookings' },\n        { title: 'Profile', icon: 'account', route: 'MyProfile', tab: 'profile_info' },\n      ];\n    } else {\n      return [\n        { title: 'Dashboard', icon: 'view-dashboard', route: 'Dashboard' },\n        { title: 'Messages', icon: 'message-text', route: 'MessageHistory' },\n        // { title: 'Search Pros', icon: 'magnify', route: 'SearchProfessionalsListing' },\n        // { title: 'Bookings', icon: 'calendar', route: 'MyBookings' },\n        { title: 'Profile', icon: 'account', route: 'MyProfile', tab: 'profile_info' },\n        // ...(!isApprovedProfessional ? [{ title: 'Become a Pro', icon: 'account-heart', route: 'BecomeProfessional' }] : []),\n      ];\n    }\n  };\n\n  const renderMobileNavBar = () => {\n    const menuItems = renderMenuItems();\n    const itemWidth = Dimensions.get('window').width / menuItems.length;\n    return (\n      <View style={[styles.customNavBar, { backgroundColor: theme.colors.surfaceContrast }]}>\n        {menuItems.map((item, index) => (\n          <TouchableOpacity\n            key={index}\n            style={[styles.navButton, { width: itemWidth }]}\n            onPress={() => handleNavigation(item.route, item.tab)}\n          >\n            <MaterialCommunityIcons \n              name={item.icon} \n              size={24} \n              color={theme.colors.text} \n            />\n            <Text style={[styles.navText, { color: theme.colors.text }]} numberOfLines={2} ellipsizeMode=\"tail\">\n              {item.title}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n  };\n\n  const renderDesktopSidebar = () => {\n    const menuItems = renderMenuItems();\n    const sidebarWidth = isCollapsed ? 70 : 250;\n    const isProfessionalRole = userRole === 'professional';\n    const isOwnerRole = userRole === 'petOwner';\n\n    if (is_DEBUG) {\n      console.log('MBA98386196v Rendering Sidebar:', {\n        userRole,\n        isApprovedProfessional,\n        currentRoute,\n        isProfessionalRole,\n        isOwnerRole\n      });\n    }\n\n    return (\n      <View style={[styles.sidebarContainer, { width: sidebarWidth }]}>\n        <View style={styles.sidebarLogoContainer}>\n          <TouchableOpacity onPress={() => handleNavigation('Home', 'Overview')} style={styles.logoButton}>\n            <Image \n              source={require('../../assets/crittrcove-high-resolution-logo-transparent.png')}\n              style={[styles.sidebarLogo, { width: isCollapsed ? 40 : 150, tintColor: theme.colors.primary }]}\n              resizeMode=\"contain\"\n            />\n          </TouchableOpacity>\n        </View>\n        <TouchableOpacity \n          style={styles.collapseButton}\n          onPress={() => setIsCollapsed(!isCollapsed)}\n        >\n          <MaterialCommunityIcons \n            name={isCollapsed ? 'chevron-right' : 'chevron-left'} \n            size={24} \n            color={theme.colors.primary}\n          />\n        </TouchableOpacity>\n        <View style={styles.menuItems}>\n          {!isCollapsed && (\n            <View style={styles.roleToggleContainer}>\n              <Text style={styles.roleToggleTitle}>Switch Role:</Text>\n              <View style={styles.roleButtonsContainer}>\n                <TouchableOpacity\n                  style={[\n                    styles.roleButton,\n                    isOwnerRole && styles.roleButtonActive\n                  ]}\n                  onPress={() => {\n                    if (is_DEBUG) {\n                      console.log('MBA98386196v Owner Role Button Press:', {\n                        currentRole: userRole,\n                        isApprovedProfessional\n                      });\n                    }\n                    if (isProfessionalRole) {\n                      handleRoleSwitch('owner');\n                    }\n                  }}\n                  activeOpacity={0.7}\n                >\n                  <Text style={[\n                    styles.roleButtonText,\n                    isOwnerRole && styles.roleButtonTextActive\n                  ]}>Owner</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.roleButton,\n                    isProfessionalRole && styles.roleButtonActive,\n                    !isApprovedProfessional && styles.roleButtonDisabled\n                  ]}\n                  onPress={() => {\n                    if (is_DEBUG) {\n                      console.log('MBA98386196v Professional Role Button Press:', {\n                        currentRole: userRole,\n                        isApprovedProfessional\n                      });\n                    }\n                    if (isOwnerRole && isApprovedProfessional) {\n                      handleRoleSwitch('professional');\n                    }\n                  }}\n                  disabled={!isApprovedProfessional}\n                  activeOpacity={isApprovedProfessional ? 0.7 : 1}\n                >\n                  <Text style={[\n                    styles.roleButtonText,\n                    isProfessionalRole && styles.roleButtonTextActive,\n                    !isApprovedProfessional && styles.roleButtonTextDisabled\n                  ]}>Professional</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n          {menuItems.map((item, index) => {\n            const isActive = currentRoute === item.route || \n                           (item.route === 'More' && item.title === 'Settings' && currentRoute === 'More');\n            \n            // Check if this is the Messages tab and we have unread messages\n            const showNotification = item.title === 'Messages' && hasUnreadMessages;\n\n            return (\n              <TouchableOpacity\n                key={index}\n                style={[\n                  styles.sidebarItem,\n                  isActive && styles.activeItem\n                ]}\n                onPress={() => handleNavigation(item.route, item.tab || 'Overview')}\n              >\n                <View style={{ position: 'relative' }}>\n                  <MaterialCommunityIcons \n                    name={item.icon} \n                    size={24} \n                    color={isActive ? theme.colors.primary : \"#4B5563\"}\n                  />\n                  {showNotification && (\n                    <View style={styles.messageNotificationBadge}>\n                      {unreadCount > 0 && (\n                        <Text style={styles.messageNotificationText}>{unreadCount}</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                {!isCollapsed && (\n                  <Text style={[\n                    styles.sidebarItemText, \n                    { color: isActive ? theme.colors.primary : \"#4B5563\" }\n                  ]}>\n                    {item.title}\n                    {item.title === 'Messages' && hasUnreadMessages && unreadCount > 0 && (\n                      <Text style={{ color: theme.colors.error }}>{` (${unreadCount})`}</Text>\n                    )}\n                  </Text>\n                )}\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n        <TouchableOpacity\n          style={[styles.logoutButton, { width: sidebarWidth }]}\n          onPress={handleLogout}\n        >\n          <MaterialCommunityIcons \n            name=\"logout\" \n            size={24} \n            color=\"#F26969\"\n          />\n          {!isCollapsed && (\n            <Text style={styles.logoutText}>Logout</Text>\n          )}\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const renderWebNavItems = () => {\n    const menuItems = renderMenuItems();\n    return menuItems.map((item, index) => (\n      <TouchableOpacity\n        key={index}\n        style={styles.webNavItem}\n        onPress={() => handleNavigation(item.route)}\n      >\n        <Text style={styles.webNavText}>{item.title}</Text>\n      </TouchableOpacity>\n    ));\n  };\n\n  const renderMobileHeader = () => {\n    const logoSize = screenWidth <= 470 ? { width: 100, height: 30 } : { width: 150, height: 40 };\n    const isProfessionalRole = userRole === 'professional';\n    const isOwnerRole = userRole === 'petOwner';\n    \n    // Update notification count to include message notifications\n    const totalNotifications = hasUnreadMessages ? (notificationCount + unreadCount) : notificationCount;\n    \n    return (\n      <View style={[styles.mobileHeader, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.mobileHeaderContent}>\n          <TouchableOpacity onPress={() => handleNavigation('Home', 'Overview')} style={styles.logoButton}>\n            <Image \n              source={require('../../assets/crittrcove-high-resolution-logo-transparent.png')} \n              style={[\n                styles.mobileLogo,\n                { tintColor: theme.colors.primary },\n                logoSize\n              ]} \n            />\n          </TouchableOpacity>\n          <View style={styles.mobileRightContent}>\n            {/* <TouchableOpacity onPress={() => handleNavigation('Notifications', 'Overview')} style={styles.iconButton}>\n              <MaterialCommunityIcons name=\"bell-outline\" size={24} color={theme.colors.text} />\n              {totalNotifications > 0 && (\n                <View style={styles.notificationBadge}>\n                  <Text style={styles.notificationText}>{totalNotifications}</Text>\n                </View>\n              )}\n            </TouchableOpacity> */}\n            <TouchableOpacity onPress={toggleMenu} style={styles.profileContainer}>\n              {isSignedIn ? (\n                <Avatar.Image \n                  size={40} \n                  source={require('../../assets/default-profile.png')} \n                />\n              ) : (\n                <MaterialCommunityIcons name=\"menu\" size={28} color={theme.colors.text} />\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n        {isMenuOpen && (\n          <View style={[styles.mobileMenu, { backgroundColor: theme.colors.surfaceContrast }]}>\n            {isSignedIn && (\n              <View style={styles.mobileRoleToggleContainer}>\n                <Text style={styles.mobileRoleToggleTitle}>Switch Role:</Text>\n                <View style={styles.mobileRoleButtonsContainer}>\n                  <TouchableOpacity\n                    style={[\n                      styles.mobileRoleButton,\n                      isOwnerRole && styles.mobileRoleButtonActive\n                    ]}\n                    onPress={() => {\n                      if (is_DEBUG) {\n                        console.log('MBA98386196v Mobile Owner Role Button Press:', {\n                          currentRole: userRole,\n                          isApprovedProfessional\n                        });\n                      }\n                      if (isProfessionalRole) {\n                        handleRoleSwitch('owner');\n                        setIsMenuOpen(false);\n                      }\n                    }}\n                    activeOpacity={0.7}\n                  >\n                    <Text style={[\n                      styles.mobileRoleButtonText,\n                      isOwnerRole && styles.mobileRoleButtonTextActive\n                    ]}>Owner</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={[\n                      styles.mobileRoleButton,\n                      isProfessionalRole && styles.mobileRoleButtonActive,\n                      !isApprovedProfessional && styles.mobileRoleButtonDisabled\n                    ]}\n                    onPress={() => {\n                      if (is_DEBUG) {\n                        console.log('MBA98386196v Mobile Professional Role Button Press:', {\n                          currentRole: userRole,\n                          isApprovedProfessional\n                        });\n                      }\n                      if (isOwnerRole && isApprovedProfessional) {\n                        handleRoleSwitch('professional');\n                        setIsMenuOpen(false);\n                      }\n                    }}\n                    disabled={!isApprovedProfessional}\n                    activeOpacity={isApprovedProfessional ? 0.7 : 1}\n                  >\n                    <Text style={[\n                      styles.mobileRoleButtonText,\n                      isProfessionalRole && styles.mobileRoleButtonTextActive,\n                      !isApprovedProfessional && styles.mobileRoleButtonTextDisabled\n                    ]}>Professional</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            )}\n            {renderMenuItems().map((item, index) => {\n              const showNotification = item.title === 'Messages' && hasUnreadMessages;\n              \n              return (\n                <TouchableOpacity\n                  key={index}\n                  style={styles.mobileMenuItem}\n                  onPress={() => {\n                    handleNavigation(item.route, item.tab || 'Overview');\n                    setIsMenuOpen(false);\n                  }}\n                >\n                  <View style={{ flexDirection: 'row', alignItems: 'center', position: 'relative' }}>\n                    <MaterialCommunityIcons name={item.icon} size={24} color={theme.colors.text} />\n                    {showNotification && (\n                      <View style={styles.mobileMessageNotificationBadge}>\n                        {unreadCount > 0 && (\n                          <Text style={styles.mobileMessageNotificationText}>{unreadCount}</Text>\n                        )}\n                      </View>\n                    )}\n                  </View>\n                  <Text style={styles.mobileMenuItemText}>\n                    {item.title}\n                    {item.title === 'Messages' && hasUnreadMessages && unreadCount > 0 && (\n                      <Text style={{ color: theme.colors.error }}>{` (${unreadCount})`}</Text>\n                    )}\n                  </Text>\n                </TouchableOpacity>\n              );\n            })}\n            {isSignedIn && (\n              <TouchableOpacity\n                style={[styles.mobileMenuItem, styles.mobileLogoutItem]}\n                onPress={() => {\n                  handleLogout();\n                  setIsMenuOpen(false);\n                }}\n              >\n                <MaterialCommunityIcons name=\"logout\" size={24} color=\"#F26969\" />\n                <Text style={[styles.mobileMenuItemText, styles.mobileLogoutText]}>Logout</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <>\n      {Platform.OS === 'web' ? (\n        <>\n          {!isMobile && isSignedIn && (\n            <View style={styles.navContainer}>\n              {renderDesktopSidebar()}\n            </View>\n          )}\n          {(isMobile || !isSignedIn) && renderMobileHeader()}\n        </>\n      ) : (\n        <View style={styles.container}>\n          {renderMobileNavBar()}\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    backgroundColor: theme.colors.primary,\n  },\n  content: {\n    flex: 1,\n  },\n  header: {\n    backgroundColor: theme.colors.primary,\n  },\n  titleContainer: {\n    justifyContent: 'center',\n  },\n  titleContainer2: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    textAlign: 'left',\n    marginLeft: theme.spacing.medium,\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.text,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  desktopNav: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  navItem: {\n    marginHorizontal: theme.spacing.medium,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    cursor: 'pointer',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  customNavBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  navButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 60,\n    paddingHorizontal: 5,\n  },\n  navText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.small,\n    marginTop: 5,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  webNavItem: {\n    marginHorizontal: theme.spacing.medium,\n  },\n  webNavText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  navLinkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 6,\n  },\n  sidebarContainer: {\n    height: '100%',\n    minHeight: '100vh',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRightWidth: 0,\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    zIndex: 1000,\n    display: 'flex',\n    flexDirection: 'column',\n    transition: 'width 0.3s ease',\n    borderTopRightRadius: 24,\n    borderBottomRightRadius: 24,\n  },\n  sidebarLogoContainer: {\n    padding: 16,\n    borderBottomWidth: 3,\n    borderBottomColor: theme.colors.surface,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  logoButton: {\n    alignItems: 'center',\n  },\n  sidebarLogo: {\n    height: 50,\n    resizeMode: 'contain',\n  },\n  collapseButton: {\n    position: 'absolute',\n    right: -16,\n    top: '50%',\n    transform: [{ translateY: -20 }],\n    width: 32,\n    height: 40,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderWidth: 0,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1001,\n  },\n  menuItems: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  sidebarItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginBottom: 8,\n    borderRadius: 8,\n    backgroundColor: 'transparent',\n    cursor: 'pointer',\n  },\n  sidebarItemText: {\n    marginLeft: 12,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  logoutButton: {\n    width: '100%',\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderBottomRightRadius: 24,\n  },\n  logoutText: {\n    marginLeft: 12,\n    fontSize: theme.fontSizes.medium,\n    color: '#F26969',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    marginRight: 16,\n  },\n  notificationButton: {\n    position: 'relative',\n    padding: 8,\n  },\n  notificationBadge: {\n    position: 'absolute',\n    top: 4,\n    right: 4,\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  notificationCount: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  profileButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  menuContent: {\n    marginTop: 45,\n  },\n  mobileHeader: {\n    width: '100%',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(255,255,255,0.1)',\n    position: 'relative',\n  },\n  mobileHeaderContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n  },\n  mobileLogo: {\n    resizeMode: 'contain',\n  },\n  mobileRightContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 15,\n  },\n  mobileMenu: {\n    position: 'absolute',\n    top: '100%',\n    right: 20,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    zIndex: 1000,\n    minWidth: 200,\n  },\n  mobileMenuItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n  },\n  mobileMenuItemText: {\n    marginLeft: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  profileContainer: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  iconButton: {\n    padding: 8,\n    position: 'relative',\n  },\n  notificationText: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  navContainer: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 1000,\n    backgroundColor: theme.colors.surface,\n    borderRightWidth: 1,\n    borderRightColor: theme.colors.border,\n  },\n  activeItem: {\n    backgroundColor: '#F0F9E5',\n  },\n  roleToggleContainer: {\n    padding: 12,\n    marginBottom: 16,\n    borderRadius: 8,\n    backgroundColor: '#F0F9E5',\n  },\n  roleToggleTitle: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n  },\n  roleButtonsContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  roleButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    cursor: 'pointer',\n  },\n  roleButtonDisabled: {\n    opacity: 0.5,\n    borderColor: theme.colors.border,\n    cursor: 'not-allowed',\n  },\n  roleButtonText: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.primary,\n  },\n  roleButtonTextDisabled: {\n    color: theme.colors.border,\n  },\n  roleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  roleButtonTextActive: {\n    color: theme.colors.surface,\n  },\n  mobileRoleToggleContainer: {\n    padding: 16,\n    marginBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  mobileRoleToggleTitle: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n  },\n  mobileRoleButtonsContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  mobileRoleButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  mobileRoleButtonDisabled: {\n    opacity: 0.5,\n    borderColor: theme.colors.border,\n  },\n  mobileRoleButtonText: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.primary,\n  },\n  mobileRoleButtonTextDisabled: {\n    color: theme.colors.border,\n  },\n  mobileRoleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  mobileRoleButtonTextActive: {\n    color: theme.colors.surface,\n  },\n  mobileLogoutItem: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    marginTop: 8,\n  },\n  mobileLogoutText: {\n    color: '#F26969',\n  },\n  messageNotificationDot: {\n    position: 'absolute',\n    top: -2,\n    right: -2,\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n  },\n  \n  mobileMessageNotificationDot: {\n    position: 'absolute',\n    top: -2,\n    right: -2,\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surfaceContrast,\n  },\n  messageNotificationBadge: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n    minWidth: 18,\n    height: 18,\n    borderRadius: 9,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 2,\n  },\n  messageNotificationText: {\n    color: 'white',\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  mobileMessageNotificationBadge: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n    minWidth: 16,\n    height: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surfaceContrast,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 2,\n  },\n  mobileMessageNotificationText: {\n    color: 'white',\n    fontSize: 9,\n    fontWeight: 'bold',\n  },\n});\n","/**\n * Debug logging utility function\n * @param {string} message - The message to log\n * @param {any} data - Optional data to log\n */\nexport const debugLog = (message, data) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // Log the actual process.env.NODE_ENV value\n    console.log('MBA1234: Current process.env.NODE_ENV:', process.env.NODE_ENV);\n    \n    if (data) {\n      console.log(message, data);\n    } else {\n      console.log(message);\n    }\n  }\n}; ","// src/config/config.js\nimport { Platform } from 'react-native';\nimport { debugLog } from '../utils/logging';\nimport { \n  STAGING_API_BASE_URL_ANDROID, \n  STAGING_API_BASE_URL_IOS, \n  STAGING_API_BASE_URL_WEB,\n  PRODUCTION_API_BASE_URL_ANDROID,\n  PRODUCTION_API_BASE_URL_IOS,\n  PRODUCTION_API_BASE_URL_WEB,\n  DEV_API_BASE_URL_ANDROID,\n  DEV_API_BASE_URL_IOS,\n  DEV_API_BASE_URL_WEB,\n  NODE_ENV \n} from '@env';\n\n// Log all environment variables to help debug\nconsole.log('MBA1234: All environment variables:', {\n  NODE_ENV,\n  process_env_NODE_ENV: process.env.NODE_ENV,\n  STAGING_API_BASE_URL_ANDROID,\n  STAGING_API_BASE_URL_IOS,\n  STAGING_API_BASE_URL_WEB,\n  PRODUCTION_API_BASE_URL_ANDROID,\n  PRODUCTION_API_BASE_URL_IOS,\n  PRODUCTION_API_BASE_URL_WEB,\n  DEV_API_BASE_URL_ANDROID,\n  DEV_API_BASE_URL_IOS,\n  DEV_API_BASE_URL_WEB,\n  platform: Platform.OS\n});\n\ndebugLog(\"MBA1234: Environment Variables Loaded\", {\n  NODE_ENV,\n  STAGING_API_BASE_URL_ANDROID,\n  STAGING_API_BASE_URL_IOS,\n  STAGING_API_BASE_URL_WEB,\n  PRODUCTION_API_BASE_URL_ANDROID,\n  PRODUCTION_API_BASE_URL_IOS,\n  PRODUCTION_API_BASE_URL_WEB,\n  DEV_API_BASE_URL_ANDROID,\n  DEV_API_BASE_URL_IOS,\n  DEV_API_BASE_URL_WEB,\n  platform: Platform.OS\n});\n\nconst isDevelopment = NODE_ENV === 'development';\nconst isStaging = NODE_ENV === 'staging';\nconst isProduction = NODE_ENV === 'production';\n\ndebugLog(\"MBA1234: Environment Configuration\", {\n  NODE_ENV,\n  isDevelopment,\n  isStaging,\n  isProduction,\n  platform: Platform.OS\n});\n\nlet API_BASE_URL;\n\nif (Platform.OS === 'android') {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_ANDROID : isStaging ? STAGING_API_BASE_URL_ANDROID : PRODUCTION_API_BASE_URL_ANDROID;\n} else if (Platform.OS === 'ios') {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_IOS : isStaging ? STAGING_API_BASE_URL_IOS : PRODUCTION_API_BASE_URL_IOS;\n} else {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_WEB : isStaging ? STAGING_API_BASE_URL_WEB : PRODUCTION_API_BASE_URL_WEB;\n}\n\ndebugLog(\"MBA1234: Selected API Base URL\", { API_BASE_URL });\n\nexport { API_BASE_URL };\n","import { Platform } from 'react-native';\nimport { getStripeModule } from './StripePlatform';\nimport { API_BASE_URL_ANDROID, API_BASE_URL_IOS, API_BASE_URL_WEB } from '@env';\nimport axios from 'axios';\n\nlet stripeInstance = null;\n\n// Get the appropriate base URL based on platform\nconst getBaseUrl = () => {\n  if (Platform.OS === 'android') {\n    return API_BASE_URL_ANDROID;\n  } else if (Platform.OS === 'ios') {\n    return API_BASE_URL_IOS;\n  }\n  return API_BASE_URL_WEB;\n};\n\nexport const initStripe = async () => {\n  if (!stripeInstance) {\n    stripeInstance = await getStripeModule();\n  }\n  return stripeInstance;\n};\n\nexport const createPaymentMethod = async (paymentDetails) => {\n  try {\n    // This function now only handles native platform\n    if (Platform.OS === 'web') {\n      throw new Error('Web platform should use stripe.createPaymentMethod directly');\n    }\n\n    const stripe = await initStripe();\n    const result = await stripe.createPaymentMethod({\n      type: 'card',\n      card: paymentDetails.card,\n    });\n    \n    if (result.error) {\n      console.error('Stripe error:', result.error);\n      throw new Error(result.error.message);\n    }\n\n    return {\n      paymentMethod: {\n        id: result.paymentMethod.id,\n        last4: result.paymentMethod.card.last4,\n        brand: result.paymentMethod.card.brand,\n        type: 'card'\n      },\n      error: null,\n    };\n  } catch (error) {\n    console.error('Payment method creation error:', error);\n    return {\n      paymentMethod: null,\n      error: {\n        message: error.message || 'Failed to create payment method',\n      },\n    };\n  }\n};\n\nexport const useStripe = () => {\n  if (Platform.OS === 'web') {\n    return {\n      createPaymentMethod: async (options) => {\n        const stripe = await initStripe();\n        return stripe.createPaymentMethod(options);\n      },\n    };\n  }\n  return stripeInstance;\n}; ","import { Platform } from 'react-native';\nimport { STRIPE_PUBLISHABLE_KEY } from '@env';\n\nexport const getStripeModule = async () => {\n  if (Platform.OS === 'web') {\n    const { loadStripe } = await import('@stripe/stripe-js');\n    const stripe = await loadStripe(STRIPE_PUBLISHABLE_KEY);\n    if (!stripe) {\n      throw new Error('Failed to initialize Stripe');\n    }\n    return stripe;\n  } else {\n    const { useStripe } = await import('@stripe/stripe-react-native');\n    return useStripe();\n  }\n}; ","import React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { Dimensions, Platform } from 'react-native';\nimport { navigate } from '../../App';\nimport { navigateToFrom } from '../components/Navigation';\nimport { initStripe } from '../utils/StripeService';\nimport { getUserName, getTimeSettings } from '../api/API';\n\nexport const SCREEN_WIDTH = Dimensions.get('window').width;\nexport const SCREEN_HEIGHT = Dimensions.get('window').height;\n\n// Create a debug logging utility\nlet debugEnabled = true;\n\nexport const setDebugEnabled = (enabled) => {\n  debugEnabled = enabled;\n};\n\nexport const debugLog = (message, ...data) => {\n  if (debugEnabled && !message.includes('MBA3210')) {\n    if (data.length > 0) {\n      console.log(`${message}:`, ...data);\n    } else {\n      console.log(`${message}`);\n    }\n  }\n};\n\nclass AuthService {\n  constructor() {\n    this.accessToken = null;\n    this.refreshToken = null;\n    this.isRefreshing = false;\n    this.refreshSubscribers = [];\n    this.is_DEBUG = false;\n    this.tokenExpiryTime = null;\n    this.lastValidation = null;\n  }\n\n  setDebug(enabled) {\n    this.is_DEBUG = enabled;\n    console.log('MBA98765 AuthService debug mode:', enabled);\n  }\n\n  // Parse JWT token to get expiry time\n  parseJwt(token) {\n    try {\n      if (!token) return null;\n      \n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      let jsonPayload;\n      \n      if (typeof atob === 'function') {\n        // Browser environment\n        jsonPayload = decodeURIComponent(\n          atob(base64)\n            .split('')\n            .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n            .join('')\n        );\n      } else {\n        // React Native environment\n        jsonPayload = decodeURIComponent(\n          Buffer.from(base64, 'base64')\n            .toString('binary')\n            .split('')\n            .map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2))\n            .join('')\n        );\n      }\n      \n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('MBA54321 Error parsing JWT:', error);\n      return null;\n    }\n  }\n\n  // Calculate time until token expires in milliseconds\n  getTimeUntilExpiry(token) {\n    const parsedToken = this.parseJwt(token);\n    if (!parsedToken || !parsedToken.exp) return 0;\n    \n    const expiryTime = parsedToken.exp * 1000; // Convert to milliseconds\n    this.tokenExpiryTime = expiryTime;\n    \n    return expiryTime - Date.now();\n  }\n  \n  // Check token freshness after returning to the app\n  // Minimizes API calls by only refreshing if token is about to expire\n  async checkTokenFreshnessOnReturn() {\n    // Skip if we checked within the last minute to avoid excessive checks\n    const now = Date.now();\n    if (this.lastValidation && now - this.lastValidation < 60 * 1000) {\n      console.log('MBA54321 Skipping token check - checked recently');\n      return;\n    }\n    \n    this.lastValidation = now;\n    \n    if (!this.accessToken) {\n      console.log('MBA54321 No access token, skipping check');\n      return;\n    }\n    \n    const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n    \n    // If token expires in less than 5 minutes or is expired, refresh it\n    if (timeUntilExpiry < 5 * 60 * 1000) {\n      console.log(`MBA54321 Token expires in ${Math.round(timeUntilExpiry/1000)} seconds, refreshing`);\n      try {\n        await this.refreshTokens();\n      } catch (error) {\n        console.error('MBA54321 Error refreshing token on return:', error);\n      }\n    } else {\n      console.log(`MBA54321 Token still valid for ${Math.round(timeUntilExpiry/60000)} minutes, no refresh needed`);\n    }\n  }\n\n  async initialize() {\n    console.log('MBA98765 Starting AuthService.initialize()');\n    try {\n      let accessToken, refreshToken;\n      \n      if (Platform.OS === 'web') {\n        console.log('MBA98765 Web platform detected, using sessionStorage');\n        accessToken = sessionStorage.getItem('userToken');\n        refreshToken = sessionStorage.getItem('refreshToken');\n      } else {\n        console.log('MBA98765 Mobile platform detected, using AsyncStorage');\n        [accessToken, refreshToken] = await AsyncStorage.multiGet([\n          'userToken',\n          'refreshToken'\n        ]);\n      }\n      \n      this.accessToken = accessToken;\n      this.refreshToken = refreshToken;\n\n      console.log('MBA98765 Tokens retrieved:', {\n        hasAccessToken: !!this.accessToken,\n        hasRefreshToken: !!this.refreshToken\n      });\n      \n      // Check if token is close to expiry and refresh if needed\n      if (this.accessToken) {\n        const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n        if (timeUntilExpiry < 5 * 60 * 1000) {\n          console.log('MBA54321 Token close to expiry during init, refreshing');\n          await this.refreshTokens().catch(err => {\n            console.log('MBA54321 Failed to refresh token during init:', err);\n          });\n        }\n      }\n\n      return {\n        hasAccessToken: !!this.accessToken,\n        hasRefreshToken: !!this.refreshToken\n      };\n    } catch (error) {\n      console.error('MBA98765 Error in AuthService.initialize():', error);\n      return { hasAccessToken: false, hasRefreshToken: false };\n    }\n  }\n\n  async getAccessToken() {\n    // Only refresh token if it's about to expire (less than 2 minutes left)\n    if (this.accessToken) {\n      const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n      if (timeUntilExpiry < 2 * 60 * 1000 && timeUntilExpiry > 0) {\n        console.log('MBA54321 Token about to expire, refreshing');\n        await this.refreshTokens().catch(err => {\n          console.log('MBA54321 Failed to refresh token in getAccessToken:', err);\n        });\n      }\n    } else if (this.refreshToken) {\n      console.log('MBA98765 No access token but has refresh token, attempting refresh');\n      await this.refreshTokens().catch(err => {\n        console.log('MBA54321 Failed to refresh token in getAccessToken:', err);\n      });\n    }\n    \n    return this.accessToken;\n  }\n\n  async refreshTokens() {\n    console.log('MBA98765 refreshTokens called');\n    if (this.isRefreshing) {\n      console.log('MBA98765 Token refresh already in progress, subscribing');\n      return new Promise((resolve) => {\n        this.refreshSubscribers.push((token) => resolve(token));\n      });\n    }\n\n    if (!this.refreshToken) {\n      console.log('MBA98765 No refresh token available');\n      return null;\n    }\n\n    try {\n      this.isRefreshing = true;\n      console.log('MBA98765 Starting token refresh');\n\n      // Update the last validation time first so we don't trigger multiple refreshes\n      this.lastValidation = Date.now();\n\n      const response = await axios.post(`${API_BASE_URL}/api/token/refresh/`, {\n        refresh: this.refreshToken\n      });\n\n      this.accessToken = response.data.access;\n      \n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('userToken', this.accessToken);\n      } else {\n        await AsyncStorage.setItem('userToken', this.accessToken);\n      }\n\n      // Parse and store the expiry time from the new token\n      const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n      console.log(`MBA98765 Token refresh successful, new token valid for ${Math.round(timeUntilExpiry/60000)} minutes`);\n\n      this.refreshSubscribers.forEach(callback => callback(this.accessToken));\n      this.refreshSubscribers = [];\n      \n      return this.accessToken;\n    } catch (error) {\n      console.error('MBA98765 Token refresh failed:', error.response?.status, error.response?.data);\n      \n      // Check if refresh token is expired\n      const isRefreshTokenExpired = error.response?.data?.code === 'token_not_valid' && \n                                    error.response?.data?.messages?.[0]?.token_type === 'refresh';\n      \n      if (isRefreshTokenExpired) {\n        console.log('MBA98765 Refresh token expired, clearing tokens');\n      }\n      \n      this.clearTokens();\n      throw error;\n    } finally {\n      this.isRefreshing = false;\n    }\n  }\n\n  async validateToken(token) {\n    // Skip actual validation API call if we checked within the last 5 minutes\n    const now = Date.now();\n    if (this.lastValidation && now - this.lastValidation < 5 * 60 * 1000) {\n      console.log('MBA54321 Using cached token validation');\n      \n      // Use expiry time from the token itself instead of making API call\n      const timeUntilExpiry = this.getTimeUntilExpiry(token);\n      return timeUntilExpiry > 0;\n    }\n    \n    console.log('MBA98765 validateToken called');\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/token/verify/`, {\n        token: token\n      });\n\n      this.lastValidation = now;\n      console.log('MBA98765 Token validation successful');\n      return response.status === 200;\n    } catch (error) {\n      console.error('MBA98765 Token validation failed:', error.response?.status);\n      return false;\n    }\n  }\n\n  async clearTokens() {\n    console.log('MBA98765 clearTokens called');\n    try {\n      if (Platform.OS === 'web') {\n        sessionStorage.removeItem('userToken');\n        sessionStorage.removeItem('refreshToken');\n      } else {\n        await AsyncStorage.multiRemove(['userToken', 'refreshToken']);\n      }\n      this.accessToken = null;\n      this.refreshToken = null;\n      \n      console.log('MBA98765 Tokens cleared');\n    } catch (error) {\n      console.error('MBA98765 Error clearing tokens:', error);\n    }\n  }\n\n  async setTokens(accessToken, refreshToken) {\n    console.log('MBA98765 setTokens called');\n    try {\n      this.accessToken = accessToken;\n      this.refreshToken = refreshToken;\n\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('userToken', accessToken);\n        sessionStorage.setItem('refreshToken', refreshToken);\n      } else {\n        await AsyncStorage.multiSet([\n          ['userToken', accessToken],\n          ['refreshToken', refreshToken]\n        ]);\n      }\n      \n      console.log('MBA98765 Tokens set successfully');\n    } catch (error) {\n      console.error('MBA98765 Error setting tokens:', error);\n      throw error;\n    }\n  }\n}\n\nexport const AuthContext = createContext();\n\n// Add getStorage function\nexport const getStorage = async (key) => {\n  try {\n    if (Platform.OS === 'web') {\n      return sessionStorage.getItem(key);\n    } else {\n      return await AsyncStorage.getItem(key);\n    }\n  } catch (error) {\n    console.error('Error getting from storage:', error);\n    return null;\n  }\n};\n\n// Add is_PRODUCTION variable for use outside of context\n// Set this to true for production, false for development\nconst is_PRODUCTION = false;\n\nexport const IsProduction = () => {\n  return is_PRODUCTION;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const authService = useRef(new AuthService());\n  const isInitializedRef = useRef(false);\n  \n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [isApprovedProfessional, setIsApprovedProfessional] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n  const [firstName, setFirstName] = useState('');\n  const [name, setName] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [timeSettings, setTimeSettings] = useState({\n    timezone: 'UTC',\n    timezone_abbrev: 'UTC',\n    use_military_time: false\n  });\n  const [is_prototype, setIsPrototype] = useState(false);\n  const [is_DEBUG, setIsDebug] = useState(true);\n\n  // Set debug mode\n  useEffect(() => {\n    console.log('MBA98765 Setting up debug mode');\n    authService.current.setDebug(is_DEBUG);\n  }, [is_DEBUG]);\n\n  // Set up axios interceptors\n  useEffect(() => {\n    console.log('MBA98765 Setting up axios interceptors');\n    const requestInterceptor = axios.interceptors.request.use(\n      async (config) => {\n        if (!is_prototype) {\n          try {\n            const token = await authService.current.getAccessToken();\n            if (token) {\n              config.headers.Authorization = `Bearer ${token}`;\n            }\n          } catch (error) {\n            console.error('MBA98765 Error getting access token for request:', error);\n          }\n        }\n        return config;\n      },\n      (error) => Promise.reject(error)\n    );\n\n    const responseInterceptor = axios.interceptors.response.use(\n      (response) => response,\n      async (error) => {\n        const originalRequest = error.config;\n        \n        if (error.response?.status === 401 && !originalRequest._retry) {\n          originalRequest._retry = true;\n          \n          try {\n            // Check if the error is specifically about an invalid token\n            const isTokenError = error.response?.data?.code === 'token_not_valid';\n            \n            if (isTokenError) {\n              debugLog('MBA54321 Token invalid error detected', error.response?.data);\n              \n              const refreshSuccessful = await authService.current.refreshTokens().then(() => true).catch(() => false);\n              \n              if (refreshSuccessful) {\n                const newToken = authService.current.accessToken;\n                originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                return axios(originalRequest);\n              } else {\n                debugLog('MBA54321 Could not refresh token, forcing sign out');\n                await signOut();\n                return Promise.reject(new Error('Session expired. Please sign in again.'));\n              }\n            } else {\n              // For other 401 errors, still try to refresh the token\n              const newToken = await authService.current.refreshTokens();\n              if (newToken) {\n                originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                return axios(originalRequest);\n              }\n            }\n          } catch (refreshError) {\n            console.error('MBA98765 Token refresh failed:', refreshError);\n            await signOut();\n            return Promise.reject(refreshError);\n          }\n        }\n        \n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [is_prototype]);\n\n  // Minimalist approach to token refresh on window focus\n  useEffect(() => {\n    if (!isSignedIn || is_prototype) return;\n    \n    // Handler to check token when window regains focus\n    const handleWindowFocus = () => {\n      debugLog('MBA54321 Window regained focus, scheduling token refresh check');\n      \n      // This will only refresh if token is within 5 minutes of expiry or expired\n      // Won't make network call if token is still valid for more than 5 minutes\n      if (authService.current) {\n        authService.current.checkTokenFreshnessOnReturn();\n      }\n    };\n    \n    // Set up event listeners for window focus and visibility changes\n    if (typeof window !== 'undefined') {\n      window.addEventListener('focus', handleWindowFocus);\n      \n      document.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n          handleWindowFocus();\n        }\n      });\n    }\n    \n    return () => {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('focus', handleWindowFocus);\n        document.removeEventListener('visibilitychange', handleWindowFocus);\n      }\n    };\n  }, [isSignedIn, is_prototype]);\n\n  // Initialize auth state\n  useEffect(() => {\n    const init = async () => {\n      if (isInitializedRef.current) return;\n      \n      try {\n        console.log('MBA98765 Initializing auth state');\n        const { hasAccessToken, hasRefreshToken } = await authService.current.initialize();\n        \n        if (hasAccessToken || hasRefreshToken) {\n          const token = await authService.current.getAccessToken();\n          if (token) {\n            const isValid = await authService.current.validateToken(token);\n            if (isValid) {\n              setIsSignedIn(true);\n              await fetchUserName();\n              const status = await getProfessionalStatus(token);\n              setUserRole(status.suggestedRole);\n              setIsApprovedProfessional(status.isApprovedProfessional);\n              await fetchTimeSettings();\n            } else {\n              await signOut();\n            }\n          }\n        } else {\n          await signOut();\n        }\n      } catch (error) {\n        console.error('MBA98765 Error initializing auth state:', error);\n        await signOut();\n      } finally {\n        setLoading(false);\n        isInitializedRef.current = true;\n      }\n    };\n\n    init();\n  }, []);\n\n  // Preload Stripe modules when user signs in\n  useEffect(() => {\n    if (isSignedIn && !is_prototype) {\n      initStripe();\n    }\n  }, [isSignedIn, is_prototype]);\n  \n\n  // Separate screen width handling from auth\n  useEffect(() => {\n    const handleDimensionsChange = ({ window }) => {\n      setScreenWidth(window.width);\n    };\n\n    const subscription = Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () => {\n      if (subscription?.remove) {\n        subscription.remove();\n      }\n    };\n  }, []);\n\n  const fetchUserName = async () => {\n    try {\n      debugLog('MBA98765 Fetching user name');\n      const userData = await getUserName();\n      debugLog('MBA98765 User name response:', userData);\n      setFirstName(userData.first_name);\n      setName(userData.name);\n    } catch (error) {\n      console.error('MBA98765 Error fetching user name:', error.response ? error.response.data : error.message);\n      setFirstName(''); // Reset firstName on error\n      setName(''); // Reset name on error\n    }\n  };\n\n  const getProfessionalStatus = async (token) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/professional-status/v1/`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      if (is_DEBUG) {\n        debugLog('MBA98765 Professional status response:', response.data);\n      }\n\n      const { is_approved } = response.data;\n      \n      setIsApprovedProfessional(is_approved);\n      await AsyncStorage.setItem('isApprovedProfessional', String(is_approved));\n\n      return {\n        isApprovedProfessional: is_approved,\n        suggestedRole: is_approved ? 'professional' : 'petOwner'\n      };\n    } catch (error) {\n      console.error('Error getting professional status:', error.response?.data || error);\n      return {\n        isApprovedProfessional: false,\n        suggestedRole: 'petOwner'\n      };\n    }\n  };\n\n  const signIn = async (token, refreshTokenValue, navigation) => {\n    try {\n      debugLog('MBA98765 Starting sign in process');\n\n      await authService.current.setTokens(token, refreshTokenValue);\n      setIsSignedIn(true);\n      \n      // Fetch time settings immediately to ensure they're available\n      try {\n        const timeSettingsData = await getTimeSettings();\n        setTimeSettings(timeSettingsData);\n        debugLog('MBA98765 Time settings fetched during sign in:', timeSettingsData);\n      } catch (timeError) {\n        console.error('MBA98765 Error fetching time settings during sign in:', timeError);\n        // Continue sign in process even if time settings fetch fails\n      }\n      \n      const status = await getProfessionalStatus(token);\n      const initialRole = status.suggestedRole;\n      \n      setUserRole(initialRole);\n      setIsApprovedProfessional(status.isApprovedProfessional);\n      \n      // Store the role\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('userRole', initialRole);\n      } else {\n        await AsyncStorage.setItem('userRole', initialRole);\n      }\n\n      debugLog('MBA98765 Sign in successful:', { initialRole, isApprovedProfessional: status.isApprovedProfessional });\n\n      // Navigate to dashboard after successful sign in\n      if (navigation) {\n        setTimeout(() => {\n          navigateToFrom(navigation, 'Dashboard', 'SignIn');\n        }, 0);\n      }\n\n      return {\n        userRole: initialRole,\n        isApprovedProfessional: status.isApprovedProfessional\n      };\n    } catch (error) {\n      if (is_DEBUG) {\n        debugLog('MBA98765 Sign in error:', error);\n      }\n      console.error('Error during sign in:', error);\n      throw error;\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      // Close websocket connection first\n      const websocketManager = (await import('../utils/websocket')).default;\n      websocketManager.disconnect();\n      debugLog('MBA3210: WebSocket disconnected during signOut');\n      \n      // Then clear tokens and storage\n      await authService.current.clearTokens();\n      await AsyncStorage.multiRemove(['userRole', 'isApprovedProfessional']);\n      await sessionStorage.removeItem('userRole');\n      await sessionStorage.removeItem('isApprovedProfessional');\n    } catch (error) {\n      // TODO: implement an error handler for this instead of debugLog\n      debugLog('Error during sign out:', error);\n    }\n\n    setIsSignedIn(false);\n    setIsApprovedProfessional(false);\n    setUserRole(null);\n    setFirstName('');\n    setName('');\n\n    setTimeout(() => {\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('explicitSignOut', 'true');\n      }\n      navigate('SignIn');\n    }, 0);\n  };\n\n  const switchRole = async (navigation) => {\n    if (isApprovedProfessional) {\n      debugLog('MBA98765 Switching role, current role:', userRole);\n      \n      const newRole = userRole === 'professional' ? 'petOwner' : 'professional';\n      setUserRole(newRole);\n      try {\n        if (Platform.OS === \"web\") {\n          sessionStorage.setItem('userRole', newRole);\n        } else {\n          await AsyncStorage.setItem('userRole', newRole);\n        }\n        \n        // Navigate to Dashboard if switching to pet owner from Connections screen\n        const currentRoute = navigation?.getCurrentRoute?.()?.name;\n        if (newRole === 'petOwner' && currentRoute === 'Connections') {\n          debugLog('MBA98765 Navigating to Dashboard from Connections when switching to pet owner');\n          navigate('Dashboard');\n        }\n        \n        debugLog('MBA98765 Role switched to:', newRole);\n      } catch (error) {\n        console.error('Error updating role in storage:', error);\n      }\n    } else {\n      console.log('User is not an approved professional, cannot switch roles');\n    }\n  };\n\n  const fetchTimeSettings = async () => {\n    if (is_prototype) return;\n    \n    try {\n      const settings = await getTimeSettings();\n      setTimeSettings(settings);\n      \n      debugLog('MBA98765 Time settings response:', settings);\n      \n    } catch (error) {\n      console.error('MBA98765 Error fetching time settings:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  const checkAuthStatus = async () => {\n    try {\n      const token = await authService.current.getAccessToken();\n      if (!token) {\n        return { isAuthenticated: false };\n      }\n\n      const isValid = await authService.current.validateToken(token);\n      if (!isValid) {\n        await signOut();\n        return { isAuthenticated: false };\n      }\n\n      debugLog('MBA54321 checkAuthStatus', { isAuthenticated: true, userRole, isApprovedProfessional });\n\n      return {\n        isAuthenticated: true,\n        userRole: userRole,\n        isApprovedProfessional: isApprovedProfessional\n      };\n    } catch (error) {\n      console.error('MBA98765 Error checking auth status:', error);\n      return { isAuthenticated: false };\n    }\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isSignedIn,\n        userRole,\n        isApprovedProfessional,\n        loading,\n        screenWidth,\n        firstName,\n        name,\n        is_prototype,\n        is_DEBUG,\n        is_PRODUCTION,\n        timeSettings,\n        isCollapsed,\n        setIsCollapsed,\n        signIn,\n        signOut,\n        switchRole,\n        setIsDebug,\n        setIsPrototype,\n        checkAuthStatus,\n        fetchTimeSettings,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport { AuthContext, debugLog } from './AuthContext';\nimport { getUnreadMessageCount } from '../api/API';\nimport websocketManager from '../utils/websocket';\nimport { getStorage } from './AuthContext';\n\n// Create the context\nexport const MessageNotificationContext = createContext();\n\nexport const MessageNotificationProvider = ({ children }) => {\n  const [hasUnreadMessages, setHasUnreadMessages] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [conversationCounts, setConversationCounts] = useState({});\n  const [currentRoute, setCurrentRoute] = useState('');\n  const [websocketInitialized, setWebsocketInitialized] = useState(false);\n  const [lastApiCheck, setLastApiCheck] = useState(0);\n  const { isSignedIn } = useContext(AuthContext);\n  \n  // Use refs to track initialization state and prevent duplicate calls\n  const initialCheckDoneRef = useRef(false);\n  const pendingCheckRef = useRef(false);\n  const reconnectIntervalRef = useRef(null);\n  const debounceTimerRef = useRef(null);\n  const websocketDataReceivedRef = useRef(false);\n  const lastCheckTimeRef = useRef(0);  // Track last time we checked\n  const MIN_CHECK_INTERVAL = 5000; // Minimum 5 seconds between API checks\n  \n  // Add ref for tracking fallback strategy\n  const websocketTimeoutRef = useRef(null);\n  const websocketRetryAttemptsRef = useRef(0);\n  const MAX_WEBSOCKET_RETRIES = 12; // After 12 retries (60 seconds), fall back to API\n  const WEBSOCKET_RETRY_INTERVAL = 5000; // 5 second wait between retries\n  \n  // Add connection status tracking\n  const lastHeartbeatReceivedRef = useRef(0);\n  const lastHeartbeatSentRef = useRef(0);\n  const heartbeatTimeoutRef = useRef(null);\n  const connectionHealthyRef = useRef(true); // Track if connection is healthy\n  const HEARTBEAT_TIMEOUT = 40000; // 40 seconds timeout for heartbeat responses\n  \n  // Add session-based flag to track if we already made an API call in this session\n  const initialApiCallMadeRef = useRef(false);\n\n  // Add cache for the API response\n  const [lastApiResponse, setLastApiResponse] = useState(null);\n  const WEBSOCKET_DATA_LIFETIME = 30000; // Consider WebSocket data valid for 30 seconds\n  const CACHE_LIFETIME = 300000; // Consider API cache valid for 5 minutes (increased from 2)\n\n  // Add a lastApiCheckRef at the top of the component with other refs\n  const lastApiCheckRef = useRef(0);\n\n  // Function to check if we have unread messages based on conversations\n  const checkUnreadMessages = async (force = false) => {\n    try {\n      // If there's already a check in progress, don't start another one\n      if (pendingCheckRef.current) {\n        debugLog('MBA4321: Skipping unread check - another check is already in progress');\n        return hasUnreadMessages;\n      }\n      \n      // Stack trace logging to help identify what's triggering API calls\n      const stackTrace = new Error().stack;\n      debugLog(`MBA4321: checkUnreadMessages called from:\\n${stackTrace}`);\n      \n      // Set pending flag before proceeding\n      pendingCheckRef.current = true;\n      \n      // For forced refreshes, we should just make the API call immediately\n      if (force) {\n        debugLog('MBA432wihe21: Forced API call for unread messages');\n        return await makeApiCall();\n      }\n\n      // NEW LOGIC: Check if websocket is connected first\n      const websocketConnected = websocketManager && websocketManager.isWebSocketConnected();\n      debugLog(`MBA4321: WebSocket connected: ${websocketConnected}`);\n      \n      // If WebSocket is connected and we've received data, return current state - no API call needed\n      if (websocketConnected && websocketDataReceivedRef.current) {\n        debugLog('MBA4321: WebSocket is connected and data received, using current state');\n        pendingCheckRef.current = false;\n        return hasUnreadMessages;\n      }\n      \n      // Check if this is a page load (first time check)\n      if (!initialApiCallMadeRef.current) {\n        debugLog('MBA4321: First check on page load, implementing progressive WebSocket wait');\n        \n        // Clear any existing timeout\n        if (websocketTimeoutRef.current) {\n          clearTimeout(websocketTimeoutRef.current);\n        }\n        \n        // Wait for WebSocket using progressive checks, with final API fallback\n        return await waitForWebSocketWithFallback();\n      }\n      \n      // We already made an initial call for this session and WebSocket isn't connected\n      // However, we're not forcing a refresh, so just use current state\n      debugLog('MBA4321: Using existing state, we already made an initial API call');\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    } catch (error) {\n      debugLog('MBA4321: Error in checkUnreadMessages:', error);\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    }\n  };\n\n  // Function to wait for WebSocket with progressive checks and final API fallback\n  const waitForWebSocketWithFallback = async () => {\n    // Reset attempt counter\n    websocketRetryAttemptsRef.current = 0;\n    \n    // IMPORTANT: If this is a fresh page load, ALWAYS make an API call first to get accurate state\n    // The problem was that we would rely only on WebSocket which might miss messages that arrived\n    // while the user was offline\n    if (!initialApiCallMadeRef.current) {\n      debugLog('MBA432wihe21: Fresh page load - making initial API call to get accurate unread count');\n      return await makeApiCall();\n    }\n    \n    return new Promise((resolve) => {\n      // Define the progressive check function\n      const checkWebSocketAndWait = () => {\n        // First check if WebSocket is connected\n        const connected = websocketManager && websocketManager.isWebSocketConnected();\n        \n        // Check if we've received any data (either from WebSocket or separate handlers)\n        if (websocketDataReceivedRef.current) {\n          debugLog('MBA4321: WebSocket data received during wait, using current state');\n          pendingCheckRef.current = false;\n          resolve(hasUnreadMessages);\n          return;\n        }\n        \n        // Increment attempt counter\n        websocketRetryAttemptsRef.current++;\n        debugLog(`MBA4321: WebSocket wait attempt ${websocketRetryAttemptsRef.current}/${MAX_WEBSOCKET_RETRIES}, connected: ${connected}`);\n        \n        // If connected, send a heartbeat to check if we get a response\n        if (connected) {\n          debugLog('MBA4321: WebSocket is connected, sending heartbeat request');\n          websocketManager.send('heartbeat', { timestamp: Date.now() });\n          lastHeartbeatSentRef.current = Date.now();\n        }\n        \n        // If reached max attempts, fall back to API\n        if (websocketRetryAttemptsRef.current >= MAX_WEBSOCKET_RETRIES) {\n          debugLog('MBA432wihe21: Max WebSocket wait attempts reached, falling back to API');\n          // Make the API call and resolve with its result\n          makeApiCall().then(result => resolve(result));\n          return;\n        }\n        \n        // Schedule next check (after 5-second wait)\n        websocketTimeoutRef.current = setTimeout(checkWebSocketAndWait, WEBSOCKET_RETRY_INTERVAL);\n      };\n      \n      // Start the first check\n      checkWebSocketAndWait();\n    });\n  };\n  \n  // Extract API call logic to separate function\n  const makeApiCall = async () => {\n    // Add new logging with the special prefix\n    debugLog('MBA432wihe21: makeApiCall called, checking if necessary');\n    \n    // Check if we've made an API call in the last minute (60000ms)\n    // This prevents frequent API calls which can disrupt components like BookingApprovalModal\n    const now = Date.now();\n    const timeSinceLastCheck = now - lastApiCheckRef.current;\n    \n    // Skip API calls if we've checked in the last minute, unless the connection is unhealthy\n    if (timeSinceLastCheck < 60000 && websocketDataReceivedRef.current && connectionHealthyRef.current) {\n      debugLog('MBA432wihe21: Skipping API call - checked recently and connection is healthy');\n      return hasUnreadMessages;\n    }\n    \n    debugLog('MBA432wihe21: Making API call for unread messages');\n    \n    try {\n      // Call the API to get unread message count\n      const result = await getUnreadMessageCount();\n      const count = result.unread_count || 0;\n      const conversationUnreadCounts = result.conversation_counts || {};\n      \n      debugLog('MBA432wihe21: Unread message count from API:', count);\n      \n      // Update the API response cache\n      setLastApiResponse({\n        unread_count: count,\n        conversation_counts: conversationUnreadCounts,\n        timestamp: now\n      });\n      \n      // Update state based on API response\n      setUnreadCount(count);\n      setHasUnreadMessages(count > 0);\n      setConversationCounts(conversationUnreadCounts);\n      setLastApiCheck(now);\n      lastCheckTimeRef.current = now;\n      lastApiCheckRef.current = now;\n      \n      // Mark initialization as complete\n      initialCheckDoneRef.current = true;\n      \n      // Mark that we've made an API call in this session\n      initialApiCallMadeRef.current = true;\n      \n      // Mark that we've received data\n      websocketDataReceivedRef.current = true;\n      \n      // Clear pending flag\n      pendingCheckRef.current = false;\n      \n      return count > 0;\n    } catch (error) {\n      debugLog('MBA432wihe21: Error in API call:', error);\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    }\n  };\n\n  // Debounced version of checkUnreadMessages to prevent excessive API calls\n  const debouncedCheckUnreadMessages = (force = false) => {\n    // Clear any existing timer\n    if (debounceTimerRef.current) {\n      clearTimeout(debounceTimerRef.current);\n    }\n    \n    // Set a new timer to delay the API call\n    debounceTimerRef.current = setTimeout(() => {\n      checkUnreadMessages(force);\n      debounceTimerRef.current = null;\n    }, 300); // 300ms debounce time\n  };\n\n  // Check how many unread messages a specific conversation has\n  const getConversationUnreadCount = (conversationId) => {\n    if (!conversationId) return 0;\n    return conversationCounts[conversationId] || 0;\n  };\n\n  // Check if user is currently on the Messages screen\n  const isOnMessagesScreen = () => {\n    return currentRoute === 'MessageHistory';\n  };\n\n  // Helper to handle new message notifications\n  const handleNewMessageNotification = (conversationId = null) => {\n    // Only update unread count if user is not on messages screen\n    // or if they're on messages screen but not viewing this conversation\n    debugLog(`MBA4321: Adding unread message notification for conversation ${conversationId}`);\n    setHasUnreadMessages(true);\n    setUnreadCount(prevCount => {\n      const newCount = prevCount + 1;\n      debugLog(`MBA4321: Increasing total unread count from ${prevCount} to ${newCount}`);\n      return newCount;\n    });\n    \n    // If we have a conversation ID, update that count too\n    if (conversationId) {\n      setConversationCounts(prevCounts => {\n        const prevConvCount = prevCounts[conversationId] || 0;\n        const newConvCount = prevConvCount + 1;\n        \n        debugLog(`MBA4321: Conversation ${conversationId} unread count: ${prevConvCount} → ${newConvCount}`);\n        \n        return {\n          ...prevCounts,\n          [conversationId]: newConvCount\n        };\n      });\n    }\n  };\n\n  // Function to handle incoming new messages\n  const onNewMessage = (messageData) => {\n    debugLog('MBA4321: onNewMessage called with data:', messageData);\n    \n    // Only create notification if the message is from another user\n    if (messageData && messageData.sent_by_other_user) {\n      const conversationId = messageData.conversation_id;\n      \n      // Check if user is viewing this specific conversation\n      if (isOnMessagesScreen() && conversationId && \n          String(conversationId) === String(window.selectedConversationId)) {\n        debugLog('MBA4321: User is viewing this specific conversation, not creating notification');\n        return;\n      }\n      \n      // Log which conversation is getting a new message notification\n      debugLog(`MBA4321: New message from ${messageData.sender_name || 'unknown'} in conversation ${conversationId}`);\n      \n      // Handle notification with conversation ID\n      handleNewMessageNotification(conversationId);\n      \n      // Mark that we've received data from WebSocket\n      websocketDataReceivedRef.current = true;\n      \n      // Also update the API response cache with this new count\n      // Update the cached counts if we have them\n      if (lastApiResponse) {\n        const updatedCounts = { ...lastApiResponse.conversation_counts };\n        updatedCounts[conversationId] = (updatedCounts[conversationId] || 0) + 1;\n        \n        setLastApiResponse({\n          unread_count: lastApiResponse.unread_count + 1,\n          conversation_counts: updatedCounts,\n          timestamp: Date.now()\n        });\n      }\n    }\n  };\n\n  // Initialize global variable to track selected conversation across components\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.selectedConversationId = null;\n    }\n  }, []);\n\n  // Mark a specific conversation as read\n  const markConversationAsRead = async (conversationId) => {\n    debugLog('MBA4321: Marking conversation as read:', conversationId);\n    \n    // Update the global variable to track which conversation is currently selected\n    if (typeof window !== 'undefined') {\n      window.selectedConversationId = conversationId;\n    }\n    \n    // Clear this conversation's unread count from local state\n    if (conversationId && conversationCounts[conversationId]) {\n      const previousCount = conversationCounts[conversationId] || 0;\n      \n      // Update the unread count and conversation counts\n      setUnreadCount(prevCount => {\n        const newCount = Math.max(0, prevCount - previousCount);\n        debugLog(`MBA4321: Reducing total unread count from ${prevCount} to ${newCount} after reading conversation ${conversationId}`);\n        return newCount;\n      });\n      \n      // Create new conversation counts object without this conversation\n      const newCounts = { ...conversationCounts };\n      delete newCounts[conversationId];\n      setConversationCounts(newCounts);\n      \n      // Update API response cache if we have it\n      if (lastApiResponse) {\n        const updatedCounts = { ...lastApiResponse.conversation_counts };\n        delete updatedCounts[conversationId];\n        \n        setLastApiResponse({\n          unread_count: Math.max(0, lastApiResponse.unread_count - previousCount),\n          conversation_counts: updatedCounts,\n          timestamp: Date.now()\n        });\n      }\n      \n      // Update hasUnreadMessages based on whether any conversations still have unread messages\n      const stillHasUnread = Object.keys(newCounts).length > 0;\n      setHasUnreadMessages(stillHasUnread);\n      debugLog(`MBA4321: After marking conversation ${conversationId} as read, still have unread messages: ${stillHasUnread}`);\n      \n      // List remaining unread conversations\n      if (stillHasUnread) {\n        const remainingConvs = Object.keys(newCounts).map(id => `${id}:${newCounts[id]}`).join(', ');\n        debugLog(`MBA4321: Remaining unread conversations: ${remainingConvs}`);\n      }\n    }\n    \n    // The backend automatically marks messages as read when \n    // get_conversation_messages is called, so we don't need to make another API call here\n    \n    debugLog('MBA4321: Updated unread state after marking conversation as read');\n  };\n\n  // Update route information\n  const updateRoute = (routeName) => {\n    if (!routeName || routeName === currentRoute) return;\n    \n    debugLog('MBA4321: Updating route to:', routeName);\n    setCurrentRoute(routeName);\n  };\n\n  // Initialize WebSocket connection when signed in - do this once globally\n  useEffect(() => {\n    const initializeWebSocket = async () => {\n      if (!isSignedIn) {\n        if (websocketInitialized) {\n          debugLog('MBA4321: User signed out, force disconnecting WebSocket');\n          websocketManager.disconnect(true); // Force disconnect on sign-out\n          setWebsocketInitialized(false);\n          \n          // Clear any reconnect interval\n          if (reconnectIntervalRef.current) {\n            clearInterval(reconnectIntervalRef.current);\n            reconnectIntervalRef.current = null;\n          }\n          \n          // Clear any WebSocket timeout\n          if (websocketTimeoutRef.current) {\n            clearTimeout(websocketTimeoutRef.current);\n            websocketTimeoutRef.current = null;\n          }\n          \n          // Clear heartbeat timeout\n          if (heartbeatTimeoutRef.current) {\n            clearTimeout(heartbeatTimeoutRef.current);\n            heartbeatTimeoutRef.current = null;\n          }\n          \n          // Reset retry attempts and connection state\n          websocketRetryAttemptsRef.current = 0;\n          websocketDataReceivedRef.current = false;\n          connectionHealthyRef.current = false;\n          initialApiCallMadeRef.current = false;\n        }\n        return;\n      }\n    \n      try {\n        const token = await getStorage('userToken');\n        if (!token) {\n          debugLog('MBA4321: No token available for WebSocket connection');\n          return;\n        }\n        \n        debugLog('MBA4321: Initializing WebSocket connection');\n        websocketManager.init(token);\n        setWebsocketInitialized(true);\n        \n        // Reset WebSocket retry attempts when initialization starts\n        websocketRetryAttemptsRef.current = 0;\n        \n        // IMPORTANT: Always make an initial API call on page load/refresh to get accurate count\n        // This ensures we start with the correct server state\n        setTimeout(() => {\n          debugLog('MBA432wihe21: Forcing initial API check on page load to get accurate count');\n          makeApiCall();\n        }, 500);\n      } catch (error) {\n        debugLog('MBA4321: Error initializing WebSocket:', error);\n      }\n    };\n    \n    // Function to check WebSocket connection health\n    const checkConnectionHealth = () => {\n      // Only proceed if signed in and initialized\n      if (!isSignedIn || !websocketInitialized) return;\n      \n      const now = Date.now();\n      const timeSinceLastHeartbeat = now - lastHeartbeatReceivedRef.current;\n      \n      // Log the current connection state\n      debugLog(`MBA4321: Connection health check - Last heartbeat: ${timeSinceLastHeartbeat}ms ago`);\n      \n      // If we haven't received a heartbeat in a while, connection might be dead\n      if (timeSinceLastHeartbeat > HEARTBEAT_TIMEOUT) {\n        debugLog('MBA4321: Connection seems unhealthy, attempting reconnection');\n        connectionHealthyRef.current = false;\n        \n        // Reset the WebSocket data received flag if connection is unhealthy\n        websocketDataReceivedRef.current = false;\n        \n        // Attempt to reconnect\n        websocketManager.reconnectIfNeeded();\n        \n        // Start progressive retry only if we haven't received data in a while\n        if (timeSinceLastHeartbeat > 120000) { // 2 minutes\n          startProgressiveWebSocketRetry();\n        }\n      } else {\n        // Connection seems healthy, just send a heartbeat to keep it alive\n        debugLog('MBA4321: Connection seems healthy, sending heartbeat');\n        connectionHealthyRef.current = true;\n        \n        // Send heartbeat to keep connection alive\n        if (websocketManager && websocketManager.isWebSocketConnected()) {\n          websocketManager.send('heartbeat', { timestamp: now });\n          lastHeartbeatSentRef.current = now;\n        }\n      }\n    };\n    \n    // Function to start progressive WebSocket retry with fallback to API\n    const startProgressiveWebSocketRetry = () => {\n      // Clear any existing timeout\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n      }\n      \n      // Reset retry counter if we're starting fresh\n      if (initialCheckDoneRef.current) {\n        websocketRetryAttemptsRef.current = 0;\n      }\n      \n      // If we've already received WebSocket data, no need to retry\n      if (websocketDataReceivedRef.current) {\n        debugLog('MBA4321: WebSocket data already received, skipping retry process');\n        return;\n      }\n      \n      // Check if the WebSocket is already connected\n      const isConnected = websocketManager && websocketManager.isWebSocketConnected();\n      if (isConnected) {\n        debugLog('MBA4321: WebSocket is already connected, sending heartbeat to verify');\n        websocketManager.send('heartbeat', { timestamp: Date.now() });\n        lastHeartbeatSentRef.current = Date.now();\n        \n        // Set a single timeout to check if we got heartbeat response\n        websocketTimeoutRef.current = setTimeout(() => {\n          if (!websocketDataReceivedRef.current) {\n            debugLog('MBA432wihe21: No heartbeat response received, falling back to API');\n            checkUnreadMessages(true);\n          }\n        }, 5000); // Wait 5 seconds for heartbeat response\n        \n        return;\n      }\n      \n      // WebSocket isn't connected, let's use our waitForWebSocketWithFallback\n      // which is already implemented in checkUnreadMessages\n      checkUnreadMessages(false);\n    };\n    \n    initializeWebSocket();\n    \n    // Clean up on unmount\n    return () => {\n      if (reconnectIntervalRef.current) {\n        debugLog('MBA4321: Cleaning up WebSocket reconnect interval');\n        clearInterval(reconnectIntervalRef.current);\n        reconnectIntervalRef.current = null;\n      }\n      \n      // Clear debounce timer if it exists\n      if (debounceTimerRef.current) {\n        clearTimeout(debounceTimerRef.current);\n        debounceTimerRef.current = null;\n      }\n      \n      // Clear WebSocket timeout if it exists\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      // Clear heartbeat timeout\n      if (heartbeatTimeoutRef.current) {\n        clearTimeout(heartbeatTimeoutRef.current);\n        heartbeatTimeoutRef.current = null;\n      }\n      \n      // Note: We don't disconnect the WebSocket on unmount \n      // This allows the connection to persist when navigating between tabs\n    };\n  }, [isSignedIn]);\n\n  // Register a websocket handler for new message notifications\n  useEffect(() => {\n    if (!isSignedIn || !websocketInitialized) return;\n\n    debugLog('MBA4321: Setting up WebSocket message handler');\n    \n    // Register handlers for relevant event types\n    const messageHandler = websocketManager.registerHandler('message', (data) => {\n      debugLog('MBA4321: Message notification received via WebSocket:', data);\n      \n      // Update heartbeat timestamp since we're receiving messages\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      \n      // First check if we need to make an initial API call to ensure correct state\n      if (!initialApiCallMadeRef.current) {\n        debugLog('MBA432wihe21: No initial API call made yet, making one now to ensure correct state');\n        makeApiCall();\n        return;\n      }\n      \n      onNewMessage(data);\n    }, 'notification-context');\n    \n    const unreadUpdateHandler = websocketManager.registerHandler('unread_update', (data) => {\n      debugLog('MBA4321: Unread update received via WebSocket:', data);\n      \n      // Update heartbeat timestamp\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      \n      // Update the state directly from the WebSocket data\n      if (data && typeof data.unread_count !== 'undefined') {\n        setUnreadCount(data.unread_count);\n        setHasUnreadMessages(data.unread_count > 0);\n        setConversationCounts(data.conversation_counts || {});\n        \n        // Also update the API response cache with this new data\n        setLastApiResponse({\n          unread_count: data.unread_count,\n          conversation_counts: data.conversation_counts || {},\n          timestamp: Date.now()\n        });\n        \n        setLastApiCheck(Date.now()); // Consider websocket updates as api checks\n        \n        // Mark that we've received data from WebSocket\n        websocketDataReceivedRef.current = true;\n        \n        // Mark initialization as complete since we got data from WebSocket\n        initialCheckDoneRef.current = true;\n      }\n    }, 'unread-update-context');\n    \n    // Add a heartbeat acknowledgment handler\n    const heartbeatHandler = websocketManager.registerHandler('heartbeat_ack', (data) => {\n      debugLog('MBA4321: Heartbeat acknowledgment received');\n      \n      // Update heartbeat timestamp\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      \n      // Mark that we've received data from WebSocket\n      websocketDataReceivedRef.current = true;\n    }, 'heartbeat-context');\n    \n    // Handle WebSocket connection/disconnection\n    const connectionHandler = websocketManager.registerHandler('connection', (data) => {\n      debugLog('MBA4321: WebSocket connection event:', data);\n      \n      // Record heartbeat if we've established connection\n      if (data.status === 'connected') {\n        lastHeartbeatReceivedRef.current = Date.now();\n        connectionHealthyRef.current = true;\n      } else {\n        // Only reset the WebSocket data flag if connection was explicitly closed\n        // This prevents unnecessary API calls when the connection is temporarily unstable\n        if (data.forced) {\n          websocketDataReceivedRef.current = false;\n          connectionHealthyRef.current = false;\n          debugLog('MBA4321: Connection forcibly closed, resetting WebSocket data flag');\n        }\n      }\n      \n      // If we're (re)connecting and haven't done an initial check yet, do it now\n      if (data.status === 'connected' && !initialCheckDoneRef.current) {\n        // Use a small delay to avoid race conditions with other initialization\n        setTimeout(() => {\n          // Only call API if we haven't received WebSocket data yet\n          if (!websocketDataReceivedRef.current) {\n            debugLog('MBA432wihe21: in connection handler');\n            checkUnreadMessages(true);\n          }\n        }, 1000);\n      }\n    }, 'connection-context');\n    \n    // Cleanup function to unregister handlers\n    return () => {\n      debugLog('MBA4321: Cleaning up WebSocket handlers');\n      messageHandler();\n      unreadUpdateHandler();\n      connectionHandler();\n      heartbeatHandler();\n    };\n  }, [isSignedIn, websocketInitialized]);\n\n  // Setup visibility change listener to reconnect when tab becomes visible\n  useEffect(() => {\n    if (!isSignedIn) return;\n    \n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        debugLog('MBA4321: Tab became visible, ensuring WebSocket connection');\n        \n        // First check if the WebSocket is already connected\n        const isWSConnected = websocketManager && websocketManager.isWebSocketConnected();\n        debugLog(`MBA4321: WebSocket connection status on visibility change: ${isWSConnected ? 'Connected' : 'Disconnected'}`);\n        \n        // If WebSocket is already connected, we don't need to do anything\n        if (isWSConnected) {\n          debugLog('MBA4321: WebSocket is already connected, no reconnection needed');\n          \n          // Optionally send a heartbeat to verify connection is still good\n          websocketManager.send('heartbeat', { timestamp: Date.now() });\n          lastHeartbeatSentRef.current = Date.now();\n          \n          // Reset the WebSocket data received flag since we have a good connection\n          websocketDataReceivedRef.current = true;\n          connectionHealthyRef.current = true;\n          \n          return;\n        }\n        \n        // WebSocket isn't connected, try to reconnect\n        if (websocketManager && typeof websocketManager.reconnectIfNeeded === 'function') {\n          debugLog('MBA4321: WebSocket not connected, attempting reconnection');\n          websocketManager.reconnectIfNeeded();\n          \n          // Start progressive retry instead of immediate API call\n          // Reset retry attempts counter first\n          websocketRetryAttemptsRef.current = 0;\n          \n          const startProgressiveRetry = () => {\n            // Check if WebSocket connected during the retry process\n            const nowConnected = websocketManager && websocketManager.isWebSocketConnected();\n            \n            // If WebSocket is now connected or data is received, we're done\n            if (nowConnected || websocketDataReceivedRef.current) {\n              debugLog('MBA4321: WebSocket reconnected successfully, stopping retry process');\n              // Clear any scheduled retry\n              if (websocketTimeoutRef.current) {\n                clearTimeout(websocketTimeoutRef.current);\n                websocketTimeoutRef.current = null;\n              }\n              return;\n            }\n            \n            // Increment retry counter\n            websocketRetryAttemptsRef.current++;\n            debugLog(`MBA4321: WebSocket reconnection attempt ${websocketRetryAttemptsRef.current}/${MAX_WEBSOCKET_RETRIES}`);\n            \n            if (websocketRetryAttemptsRef.current >= MAX_WEBSOCKET_RETRIES) {\n              // Max retries reached, fall back to API\n              debugLog('MBA432wihe21: Max retries reached, fall back to API');\n              debouncedCheckUnreadMessages(true);\n              return;\n            }\n            \n            // Try to reconnect again after interval\n            websocketTimeoutRef.current = setTimeout(startProgressiveRetry, WEBSOCKET_RETRY_INTERVAL);\n          };\n          \n          // Start the retry process after a short delay to allow immediate reconnection to complete\n          setTimeout(startProgressiveRetry, 1000);\n        }\n      }\n    };\n    \n    if (typeof document !== 'undefined') {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n    }\n    \n    return () => {\n      if (typeof document !== 'undefined') {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n      }\n      \n      // Clear WebSocket timeout if it exists\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      // Clear heartbeat timeout\n      if (heartbeatTimeoutRef.current) {\n        clearTimeout(heartbeatTimeoutRef.current);\n        heartbeatTimeoutRef.current = null;\n      }\n    };\n  }, [isSignedIn]); // Remove lastApiCheck from dependencies\n\n  // Modified fallback strategy with much less frequent API calls\n  useEffect(() => {\n    if (!isSignedIn) {\n      setHasUnreadMessages(false);\n      setUnreadCount(0);\n      setConversationCounts({});\n      websocketDataReceivedRef.current = false;\n      initialApiCallMadeRef.current = false;\n      \n      // Clear any WebSocket timeout\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      return;\n    }\n    \n    // Always get fresh unread count on page load or sign-in\n    // This ensures we start with correct state\n    if (!initialApiCallMadeRef.current) {\n      debugLog('MBA4321: Ensuring we get fresh unread count on page load/sign-in');\n      \n      const initialCheckTimeout = setTimeout(() => {\n        if (!initialApiCallMadeRef.current) {\n          debugLog('MBA432wihe21: Making initial API call to get fresh unread count');\n          makeApiCall();\n        }\n      }, 1000); // Short delay to allow WebSocket initialization\n      \n      // Clear timeout on cleanup\n      return () => clearTimeout(initialCheckTimeout);\n    }\n    \n    // No polling needed - WebSocket is the primary data source\n    \n    return () => {};\n  }, [isSignedIn]);\n\n  // Create a memoized value for the context to reduce rerenders\n  const contextValue = {\n    hasUnreadMessages,\n    unreadCount,\n    conversationCounts,\n    getConversationUnreadCount,\n    updateRoute,\n    checkUnreadMessages: debouncedCheckUnreadMessages, // Use debounced version\n    onNewMessage,\n    markConversationAsRead,\n    resetNotifications: (routeName, conversationId) => {\n      // If a route is provided, set it as the current route\n      if (routeName && routeName !== currentRoute) {\n        setCurrentRoute(routeName);\n      }\n      \n      // If a specific conversation ID is provided, only clear that conversation's notifications\n      if (conversationId) {\n        debugLog(`MBA4321: Resetting notifications for specific conversation: ${conversationId}`);\n        markConversationAsRead(conversationId);\n        return;\n      }\n      \n      // IMPORTANT: Do NOT reset all notifications just because we're on the MessageHistory screen\n      // This was the bug - we were clearing all notifications even when only one conversation was viewed\n      \n      // Only reset all notifications if explicitly requested with a special flag\n      if (routeName === 'RESET_ALL') {\n        debugLog('MBA4321: Explicitly resetting ALL message notifications');\n        setHasUnreadMessages(false);\n        setUnreadCount(0);\n        setConversationCounts({});\n      }\n    }\n  };\n\n  return (\n    <MessageNotificationContext.Provider value={contextValue}>\n      {children}\n    </MessageNotificationContext.Provider>\n  );\n};\n\nexport default MessageNotificationContext; ","// theme.js\nimport { DefaultTheme } from 'react-native-paper';\n\nexport const theme = {\n  ...DefaultTheme,\n  // the regular and header fonts are the fonts used in the app\n  fonts: {\n    ...DefaultTheme.fonts,\n    regular: {\n      fontFamily: 'PlayfairDisplay',\n    },\n    medium: {\n      fontFamily: 'PlayfairDisplay-Medium',\n    },\n    header: {\n      fontFamily: 'Futura',\n    }\n  },\n  typography: {\n    header: {\n      fontFamily: 'Futura',\n    },\n    body: {\n      fontFamily: 'PlayfairDisplay',\n    }\n  },\n  colors: {\n    ...DefaultTheme.colors,\n    mainColors: {\n      main: '#6A6C51', // #6A6C51\n      secondary: '#5D6C51', // #5D6C51\n      tertiary: '#516C53', // #516C53\n      quaternary: '#516C61', // #516C61\n      quinary: '#516A6C', // #516A6C\n      senary: '#515D6C', // #515D6C\n    },\n    proDashboard: {\n      main: '#F0F9E5', // #F0F9E5\n      secondary: '#E7F3F8', // #E7F3F8\n      tertiary: '#FEF0DA', // #FEF0DA\n      quaternary: '#E1E2DB', // #E1E2DB\n    },\n    mybookings: {\n      main: '#FFF7ED', // #FFF7ED Pending indicator background\n      secondary: '#EA580E', // #EA580E Pending indicator text\n      tertiary: '#6A6C51', // #6A6C51\n      ownerName: '#4B4C3B', // #4B4C3B Owner name text color\n      metaText: '#959885', // #959885 Date/time/service text color\n      confirmedBg: '#E8E9E2', // #E8E9E2 Confirmed button background\n      confirmedText: '#898974', // #898974 Confirmed button text\n      completedBg: '#F5F5F4', // #F5F5F4 Completed button background\n      completedText: '#898983', // #898983 Completed button text\n      searchBar: 'rgb(183, 183, 183)', // Search bar text color\n    },\n    primary: '#6A6C51', // #6A6C51\n    secondary: '#516C61', // #516C61\n    background: '#f6f6f6', // #f6f6f6\n    backgroundContrast: '#F6F3FC', // #F6F3FC\n    calendarColor: '#A99E6B', // #A99E6B\n    calendarColorYellowBrown: '#8A8C6D', // #8A8C6D\n    text: 'black', // #000000\n    whiteText: 'white', // #FFFFFF\n    placeHolderText: '#A9A9A9', // #A9A9A9\n    accent: '#03dac4', // #03dac4\n    error: '#B00020', // #B00020\n    warning: '#FFA726', // Orange warning color\n    info: '#29B6F6', // Light blue info color\n    surface: '#F9FAFB', // #F9FAFB\n    surfaceContrast: '#FFFFFF', // #FFFFFF\n    border: 'rgb(183, 183, 183)', // 'rgb(183, 183, 183)'\n    bgColorModern: 'rgb(239, 239, 239)',\n    modernBorder: '#E0E0E0', // #E0E0E0\n    inputBackground: '#f6f6f6', // #f6f6f6\n    receivedMessage: '#e7eae6', // #e7eae6\n    danger: '#A52A2A', // #A52A2A\n  },\n  fontSizes: {\n    small: 12,\n    smallMedium: 14,\n    medium: 16,\n    mediumLarge: 18,\n    large: 20,\n    largeLarge: 24,\n    extraLarge: 26,\n  },\n  spacing: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n};","import { format, parse } from 'date-fns';\nimport { formatInTimeZone, toZonedTime, fromZonedTime, utcToZonedTime, getTimezoneOffset } from 'date-fns-tz';\nimport moment from 'moment-timezone';\nimport { debugLog } from '../context/AuthContext';\n// import { format as formatDate } from 'date-fns';\nimport { parseISO } from 'date-fns';\n\n/**\n * Formats a date string into \"MMM d\" format (e.g., \"Mar 5\")\n */\nexport const formatDate = (dateString) => {\n    if (!dateString) return '';\n    \n    debugLog('MBA5677: Formatting date input', dateString);\n    \n    try {\n        // First try to parse as ISO date\n        const parsedDate = parseISO(dateString);\n        \n        // Check if the parsed date is valid\n        if (!isNaN(parsedDate.getTime())) {\n            const month = parsedDate.toLocaleString('default', { month: 'short' });\n            const day = parsedDate.getDate();\n            debugLog('MBA5677: Parsed as ISO date', { parsedDate, month, day });\n            return `${month} ${day}`;\n        }\n        \n        // Fallback to parse as YYYY-MM-DD format\n        const date = parse(dateString, 'yyyy-MM-dd', new Date());\n        \n        // Check if the parsed date is valid\n        if (!isNaN(date.getTime())) {\n            const month = date.toLocaleString('default', { month: 'short' });\n            const day = date.getDate();\n            debugLog('MBA5677: Parsed with date-fns', { date, month, day });\n            return `${month} ${day}`;\n        }\n        \n        // If both parsing methods failed, try moment\n        const momentDate = moment(dateString);\n        if (momentDate.isValid()) {\n            const formatted = momentDate.format('MMM D');\n            debugLog('MBA5677: Parsed with moment', { momentDate, formatted });\n            return formatted;\n        }\n        \n        debugLog('MBA5677: Failed to parse date', dateString);\n        return dateString; // Return original if all parsing fails\n    } catch (error) {\n        debugLog('MBA5677: Error formatting date', { dateString, error });\n        return dateString; // Return original on error\n    }\n};\n\n/**\n * Converts 12-hour time format to 24-hour format\n */\nexport const convertTo24Hour = (time12h) => {\n    if (!time12h.includes(' ')) {\n        return time12h;\n    }\n\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours, 10);\n    \n    if (modifier === 'PM' && hours < 12) {\n        hours += 12;\n    } else if (modifier === 'AM' && hours === 12) {\n        hours = 0;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n};\n\n/**\n * Converts 24-hour time format to 12-hour format\n */\nexport const convertTo12Hour = (time24h) => {\n    if (time24h.includes(' ')) {\n        return time24h;\n    }\n\n    const [hours24, minutes] = time24h.split(':');\n    const hours = parseInt(hours24, 10);\n    \n    let period = hours >= 12 ? 'PM' : 'AM';\n    let hours12 = hours % 12;\n    hours12 = hours12 === 0 ? 12 : hours12;\n    \n    return `${hours12}:${minutes} ${period}`;\n};\n\n/**\n * Converts a time from a specific timezone to UTC\n * @param {string} date - The date in YYYY-MM-DD format\n * @param {string} time - The time in HH:mm format (24-hour)\n * @param {string} fromTimezone - The source timezone (e.g., 'US/Mountain')\n * @returns {Object} Object containing the UTC date and time\n */\nexport const convertToUTC = (date, time, fromTimezone) => {\n  try {\n    debugLog('MBA12345: Converting to UTC - Input:', { date, time, fromTimezone });\n\n    // Create a moment object in the source timezone\n    const localMoment = moment.tz(`${date} ${time}`, fromTimezone);\n    \n    // Convert to UTC\n    const utcMoment = localMoment.utc();\n    \n    // Format the date and time\n    const utcDate = utcMoment.format('YYYY-MM-DD');\n    const utcTime = utcMoment.format('HH:mm');\n\n    debugLog('MBA12345: UTC conversion result:', {\n      input: {\n        date,\n        time,\n        fromTimezone\n      },\n      output: {\n        utcDate,\n        utcTime,\n        originalMoment: localMoment.format(),\n        utcMoment: utcMoment.format()\n      }\n    });\n    \n    return {\n      date: utcDate,\n      time: utcTime\n    };\n  } catch (error) {\n    debugLog('MBA12345: Error converting to UTC:', error);\n    return { date, time }; // Return original values as fallback\n  }\n};\n\n/**\n * Converts UTC date and time to local date and time\n */\nexport const convertDateTimeFromUTC = (date, time, timezone, useMilitaryTime = false) => {\n    try {\n        debugLog('MBA5677: Converting UTC to local:', { date, time, timezone, useMilitaryTime });\n        \n        // Ensure we have valid inputs\n        if (!date || !time) {\n            debugLog('MBA5677: Invalid input for conversion', { date, time });\n            return { date, time };\n        }\n        \n        // Multiple parsing strategies for more robust date handling\n        let utcDate = null;\n        \n        // Strategy 1: Try standard ISO format parsing\n        try {\n            // Handle different time formats\n            let formattedTime = time;\n            if (time.includes('.')) {\n                formattedTime = time.split('.')[0]; // Remove milliseconds if present\n            }\n            \n            // Create a proper ISO string\n            const isoString = `${date}T${formattedTime}${formattedTime.includes('Z') ? '' : 'Z'}`;\n            debugLog('MBA5677: Trying ISO string format', isoString);\n            \n            // Create Date object\n            utcDate = new Date(isoString);\n            \n            // Check if valid\n            if (isNaN(utcDate.getTime())) {\n                debugLog('MBA5677: ISO format parsing failed');\n                utcDate = null;\n            } else {\n                debugLog('MBA5677: ISO format parsing succeeded');\n            }\n        } catch (parseError) {\n            debugLog('MBA5677: Error in ISO format parsing', parseError);\n        }\n        \n        // Strategy 2: Try direct date-fns parsing\n        if (!utcDate) {\n            try {\n                debugLog('MBA5677: Trying date-fns parsing');\n                const dateStr = `${date} ${time}`;\n                utcDate = moment.utc(dateStr).toDate();\n                \n                // Check if valid\n                if (isNaN(utcDate.getTime())) {\n                    debugLog('MBA5677: date-fns parsing failed');\n                    utcDate = null;\n                } else {\n                    debugLog('MBA5677: date-fns parsing succeeded');\n                }\n            } catch (parseError) {\n                debugLog('MBA5677: Error in date-fns parsing', parseError);\n            }\n        }\n        \n        // Strategy 3: Try manual parsing\n        if (!utcDate) {\n            try {\n                debugLog('MBA5677: Trying manual parsing');\n                // Split the date and time parts\n                const [year, month, day] = date.split('-').map(Number);\n                let hours = 0, minutes = 0;\n                \n                // Parse time\n                if (time.includes(':')) {\n                    const timeParts = time.split(':');\n                    hours = parseInt(timeParts[0], 10);\n                    minutes = parseInt(timeParts[1], 10);\n                }\n                \n                // Create UTC date\n                utcDate = new Date(Date.UTC(year, month - 1, day, hours, minutes));\n                \n                // Check if valid\n                if (isNaN(utcDate.getTime())) {\n                    debugLog('MBA5677: Manual parsing failed');\n                    utcDate = null;\n                } else {\n                    debugLog('MBA5677: Manual parsing succeeded');\n                }\n            } catch (parseError) {\n                debugLog('MBA5677: Error in manual parsing', parseError);\n            }\n        }\n        \n        // If all parsing strategies failed, return original values\n        if (!utcDate) {\n            debugLog('MBA5677: All parsing strategies failed, returning original');\n            return { date, time };\n        }\n        \n        debugLog('MBA5677: Valid UTC Date created:', utcDate.toISOString());\n        \n        // Convert to user's timezone using moment for reliability\n        const utcMoment = moment.utc(utcDate);\n        const localMoment = utcMoment.tz(timezone || 'UTC');\n        \n        // Format the local date and time\n        const localDateStr = localMoment.format('YYYY-MM-DD');\n        const localTimeStr = localMoment.format(useMilitaryTime ? 'HH:mm' : 'h:mm A');\n        \n        debugLog('MBA5677: Date conversion result:', {\n            input: { date, time, timezone },\n            utc: utcDate.toISOString(),\n            utcMoment: utcMoment.format(),\n            localMoment: localMoment.format(),\n            output: { date: localDateStr, time: localTimeStr }\n        });\n        \n        return {\n            date: localDateStr,\n            time: localTimeStr\n        };\n    } catch (error) {\n        debugLog('MBA5677: Error in convertDateTimeFromUTC:', error, { date, time, timezone });\n        return { date, time }; // Return original on error\n    }\n};\n\n/**\n * Gets formatted times matching backend format\n */\nexport const getFormattedTimes = (startDate, startTime, endDate, endTime, timezone) => {\n    try {\n        console.log('MBA134njo0vh032 getFormattedTimes input:', {\n            startDate,\n            startTime,\n            endDate,\n            endTime,\n            timezone\n        });\n\n        // Parse the date and time strings\n        const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n        const [startHours, startMinutes] = startTime.split(':').map(Number);\n        const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n        const [endHours, endMinutes] = endTime.split(':').map(Number);\n\n        console.log('MBA134njo0vh032 Parsed components:', {\n            start: {\n                year: startYear,\n                month: startMonth,\n                day: startDay,\n                hours: startHours,\n                minutes: startMinutes\n            },\n            end: {\n                year: endYear,\n                month: endMonth,\n                day: endDay,\n                hours: endHours,\n                minutes: endMinutes\n            }\n        });\n\n        // Create ISO date strings for the local times in the specified timezone\n        const startDateStr = `${startYear}-${String(startMonth).padStart(2, '0')}-${String(startDay).padStart(2, '0')}T${String(startHours).padStart(2, '0')}:${String(startMinutes).padStart(2, '0')}:00`;\n        const endDateStr = `${endYear}-${String(endMonth).padStart(2, '0')}-${String(endDay).padStart(2, '0')}T${String(endHours).padStart(2, '0')}:${String(endMinutes).padStart(2, '0')}:00`;\n\n        console.log('MBA134njo0vh032 Created date strings:', {\n            startDateStr,\n            endDateStr,\n            timezone\n        });\n\n        // Format the dates directly using formatInTimeZone with the input timezone\n        const formatted_start = formatInTimeZone(startDateStr, timezone, \"MMM dd, yyyy (h:mm a)\");\n        const formatted_end = formatInTimeZone(endDateStr, timezone, \"MMM dd, yyyy (h:mm a)\");\n\n        console.log('MBA134njo0vh032 Formatted dates:', {\n            formatted_start,\n            formatted_end\n        });\n\n        // Create Date objects for duration calculation\n        const startDateTime = new Date(startDateStr);\n        const endDateTime = new Date(endDateStr);\n\n        // Calculate duration in milliseconds\n        const durationMs = endDateTime - startDateTime;\n        \n        // Calculate days and remaining hours\n        const days = Math.floor(durationMs / (24 * 60 * 60 * 1000));\n        const remainingMs = durationMs % (24 * 60 * 60 * 1000);\n        const hours = Math.floor(remainingMs / (60 * 60 * 1000));\n\n        // Format duration string\n        let durationStr = '';\n        if (days > 0) {\n            durationStr += `${days} day${days > 1 ? 's' : ''}`;\n            if (hours > 0) {\n                durationStr += `, ${hours} hour${hours > 1 ? 's' : ''}`;\n            }\n        } else if (hours > 0) {\n            durationStr += `${hours} hour${hours > 1 ? 's' : ''}`;\n        }\n\n        console.log('MBA134njo0vh032 Final formatted output:', {\n            formatted_start,\n            formatted_end,\n            duration: durationStr,\n            timezone: timezone.split('/')[1] || timezone\n        });\n\n        return {\n            formatted_start,\n            formatted_end,\n            duration: durationStr || '0 hours',\n            timezone: timezone.split('/')[1] || timezone\n        };\n    } catch (error) {\n        console.error('Error in getFormattedTimes:', error);\n        throw error;\n    }\n};\n\n/**\n * Check if times cross DST boundary\n */\nexport const checkDSTChange = (startDate, startTime, endDate, endTime, timezone) => {\n    try {\n        // Parse dates and times\n        const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n        const [startHours, startMinutes] = convertTo24Hour(startTime).split(':').map(Number);\n        const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n        const [endHours, endMinutes] = convertTo24Hour(endTime).split(':').map(Number);\n\n        // Create local dates and convert to zoned time\n        const startLocalDate = new Date(startYear, startMonth - 1, startDay, startHours, startMinutes);\n        const endLocalDate = new Date(endYear, endMonth - 1, endDay, endHours, endMinutes);\n        \n        const startZonedDate = fromZonedTime(toZonedTime(startLocalDate, timezone));\n        const endZonedDate = fromZonedTime(toZonedTime(endLocalDate, timezone));\n\n        // Convert back to local and check if offsets are different\n        const startLocal = toZonedTime(startZonedDate, timezone);\n        const endLocal = toZonedTime(endZonedDate, timezone);\n        \n        return startLocal.getTimezoneOffset() !== endLocal.getTimezoneOffset();\n    } catch (error) {\n        console.error('Error in checkDSTChange:', error);\n        throw error;\n    }\n};\n\n/**\n * Formats an occurrence from UTC times to local times with proper formatting\n */\nexport const formatOccurrenceFromUTC = (occurrence, userTimezone) => {\n  try {\n    // Always use full timezone name for conversions\n    const fullTimezone = userTimezone.includes('/') ? userTimezone : 'US/Mountain';\n    \n    console.log('MBA134njo0vh03 Formatting occurrence from UTC:', {\n      occurrence,\n      userTimezone,\n      fullTimezone\n    });\n\n    // Convert UTC times to local\n    const localStart = convertDateTimeFromUTC(\n      occurrence.start_date,\n      occurrence.start_time,\n      fullTimezone\n    );\n\n    const localEnd = convertDateTimeFromUTC(\n      occurrence.end_date,\n      occurrence.end_time,\n      fullTimezone\n    );\n\n    console.log('MBA134njo0vh03 Local start:', localStart);\n    console.log('MBA134njo0vh03 Local end:', localEnd);\n    console.log('MBA134njo0vh03 Full timezone:', fullTimezone);\n\n    // Get formatted times\n    const formattedTimes = getFormattedTimes(\n      localStart.date,\n      localStart.time,\n      localEnd.date,\n      localEnd.time,\n      fullTimezone\n    );\n\n    console.log('MBA134njo0vh03 Formatted times from getFormattedTimes:', formattedTimes);\n\n    // Check for DST change\n    const hasDSTChange = checkDSTChange(\n      localStart.date,\n      localStart.time,\n      localEnd.date,\n      localEnd.time,\n      fullTimezone\n    );\n\n    // Use the provided timezone abbreviation directly\n    const tzAbbrev = userTimezone.includes('/') ? userTimezone.split('/')[1] : userTimezone;\n\n    return {\n      ...occurrence,\n      formatted_start: formattedTimes.formatted_start,\n      formatted_end: formattedTimes.formatted_end,\n      duration: formattedTimes.duration,\n      timezone: tzAbbrev,\n      dst_message: hasDSTChange ? \n        \"Elapsed time may be different than expected due to Daylight Savings Time.\" : \n        \"\"\n    };\n  } catch (error) {\n    console.error('Error in formatOccurrenceFromUTC:', error);\n    return {\n      ...occurrence,\n      formatted_start: occurrence.start_date,\n      formatted_end: occurrence.end_date,\n      duration: 'Unknown',\n      timezone: userTimezone.includes('/') ? userTimezone.split('/')[1] : userTimezone,\n      dst_message: ''\n    };\n  }\n};\n\n/**\n * Formats a date for API calls (YYYY-MM-DD)\n * @param {Date|string} date - The date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForAPI = (date) => {\n  if (!date) return null;\n  \n  debugLog('MBA12345 formatDateForAPI input:', date, typeof date);\n  \n  let dateObj;\n  \n  try {\n    // If date is already a string in YYYY-MM-DD format, return as is\n    if (typeof date === 'string' && /^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\n      debugLog('MBA12345 formatDateForAPI: already in YYYY-MM-DD format:', date);\n      return date;\n    }\n    \n    // If date is an object with date, startTime, and endTime properties, it's a date item\n    if (typeof date === 'object' && date.date && date.startTime && date.endTime) {\n      debugLog('MBA12345 formatDateForAPI: extracting date from date item:', date.date);\n      return date.date;\n    }\n    \n    // If date is a Date object\n    if (date instanceof Date) {\n      dateObj = date;\n      debugLog('MBA12345 formatDateForAPI: using Date object');\n    } else {\n      // Otherwise, try to create a Date from whatever was passed in\n      dateObj = new Date(date);\n      debugLog('MBA12345 formatDateForAPI: created Date from input:', dateObj);\n    }\n    \n    // Check if the date is valid\n    if (isNaN(dateObj.getTime())) {\n      debugLog('MBA12345 formatDateForAPI: invalid date:', date);\n      throw new Error('Invalid date format');\n    }\n    \n    // Format as YYYY-MM-DD\n    const year = dateObj.getFullYear();\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    \n    const formattedDate = `${year}-${month}-${day}`;\n    debugLog('MBA12345 formatDateForAPI result:', formattedDate);\n    return formattedDate;\n  } catch (error) {\n    debugLog('MBA12345 formatDateForAPI error:', error, 'for input:', date);\n    throw error;\n  }\n};\n\n/**\n * Formats a time for API calls (HH:mm)\n * @param {Object|string} time - The time to format (object with hours/minutes or string)\n * @returns {string} Formatted time string in 24-hour format\n */\nexport const formatTimeForAPI = (time) => {\n  if (!time) {\n    debugLog('MBA12345 formatTimeForAPI received null/undefined time:', time);\n    return null;\n  }\n  \n  debugLog('MBA12345 formatTimeForAPI input:', time);\n  \n  let hours, minutes;\n  \n  if (typeof time === 'object' && time.hours !== undefined) {\n    // Handle time object format\n    hours = time.hours;\n    minutes = time.minutes;\n    debugLog('MBA12345 formatTimeForAPI processing time object:', { hours, minutes });\n  } else if (typeof time === 'string') {\n    // Handle string format (assuming HH:mm format)\n    [hours, minutes] = time.split(':').map(Number);\n    debugLog('MBA12345 formatTimeForAPI processing time string:', { hours, minutes });\n  } else {\n    debugLog('MBA12345 formatTimeForAPI invalid time format:', typeof time);\n    throw new Error('Invalid time format');\n  }\n  \n  // Ensure hours and minutes are valid\n  hours = parseInt(hours);\n  minutes = parseInt(minutes);\n  \n  if (isNaN(hours) || isNaN(minutes)) {\n    debugLog('MBA12345 formatTimeForAPI invalid time values:', { hours, minutes });\n    throw new Error('Invalid time values');\n  }\n  \n  // Format as HH:mm\n  const result = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n  debugLog('MBA12345 formatTimeForAPI result:', result);\n  return result;\n};\n\n// Format types for consistent date/time formatting across the app\nexport const FORMAT_TYPES = {\n  SHORT_DATE: 'SHORT_DATE',           // Mar 4\n  MEDIUM_DATE: 'MEDIUM_DATE',         // Mar 4, 2025\n  LONG_DATE: 'LONG_DATE',            // March 4, 2025\n  TIME_ONLY: 'TIME_ONLY',            // 4:42 PM\n  TIME_ONLY_24H: 'TIME_ONLY_24H',    // 16:42\n  DATE_TIME: 'DATE_TIME',            // Mar 4, 2025 at 4:42 PM\n  DATE_TIME_WITH_TZ: 'DATE_TIME_WITH_TZ', // Mar 4, 2025 at 4:42 PM MDT\n  DATE_RANGE: 'DATE_RANGE',          // Mar 4 - Mar 5\n  DATE_TIME_RANGE: 'DATE_TIME_RANGE' // Mar 4, 2025 at 4:42 PM - Mar 5, 2025 at 5:00 PM MDT\n};\n\n/**\n * Converts UTC date and time strings to user's timezone and formats according to specified type\n * @param {string} dateStr - Date in YYYY-MM-DD format\n * @param {string} timeStr - Time in HH:mm format (24-hour)\n * @param {string} userTimezone - User's timezone (e.g., 'America/Denver')\n * @param {string} formatType - One of FORMAT_TYPES\n * @returns {string} Formatted date/time string\n */\nexport const formatFromUTC = (dateStr, timeStr = null, userTimezone, formatType = FORMAT_TYPES.MEDIUM_DATE) => {\n  try {\n    console.log('MBA134njo0vh02c23 formatFromUTC input:', { dateStr, timeStr, userTimezone, formatType });\n    \n    // Create a moment object in UTC with proper format\n    const utcMoment = moment.utc(`${dateStr}T${timeStr || '00:00'}:00Z`);\n    console.log('MBA134njo0vh02c23 UTC moment:', utcMoment.format());\n\n    // Convert to user's timezone\n    const localMoment = utcMoment.tz(userTimezone);\n    console.log('MBA134njo0vh02c23 Local moment:', localMoment.format());\n\n    // Get timezone abbreviation\n    const tzAbbrev = localMoment.zoneAbbr();\n    console.log('MBA134njo0vh02c23 Timezone abbreviation:', tzAbbrev);\n\n    // Format based on type\n    switch (formatType) {\n      case FORMAT_TYPES.SHORT_DATE:\n        return localMoment.format('MMM D');\n      case FORMAT_TYPES.MEDIUM_DATE:\n        return localMoment.format('MMM D, YYYY');\n      case FORMAT_TYPES.LONG_DATE:\n        return localMoment.format('MMMM D, YYYY');\n      case FORMAT_TYPES.TIME_ONLY:\n        return localMoment.format('h:mm A');\n      case FORMAT_TYPES.TIME_ONLY_24H:\n        return localMoment.format('HH:mm');\n      case FORMAT_TYPES.DATE_TIME:\n        return localMoment.format(\"MMM D, YYYY 'at' h:mm A\");\n      case FORMAT_TYPES.DATE_TIME_WITH_TZ:\n        return `${localMoment.format(\"MMM D, YYYY 'at' h:mm A\")} ${tzAbbrev}`;\n      default:\n        return localMoment.format('MMM D, YYYY');\n    }\n  } catch (error) {\n    console.error('MBA134njo0vh02c23 Error in formatFromUTC:', error);\n    return '';\n  }\n};\n\n/**\n * Formats a date/time range from UTC to user's timezone\n * @param {Object} params - Range parameters\n * @param {string} params.startDate - Start date in YYYY-MM-DD format\n * @param {string} params.startTime - Start time in HH:mm format\n * @param {string} params.endDate - End date in YYYY-MM-DD format\n * @param {string} params.endTime - End time in HH:mm format\n * @param {string} params.userTimezone - User's timezone\n * @param {boolean} params.includeTimes - Whether to include times in the output\n * @param {boolean} params.includeTimezone - Whether to include timezone in the output\n * @returns {string} Formatted date/time range\n */\nexport const formatDateTimeRangeFromUTC = ({\n  startDate,\n  startTime,\n  endDate,\n  endTime,\n  userTimezone,\n  includeTimes = true,\n  includeTimezone = true\n}) => {\n  try {\n    debugLog('MBA134njo: formatDateTimeRangeFromUTC input:', {\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n      userTimezone,\n      includeTimes,\n      includeTimezone\n    });\n\n    if (includeTimes) {\n      // Create UTC moments with proper format\n      const startUtcMoment = moment.utc(`${startDate}T${startTime}:00Z`);\n      const endUtcMoment = moment.utc(`${endDate}T${endTime}:00Z`);\n\n      debugLog('MBA134njo: UTC moments:', {\n        start: startUtcMoment.format(),\n        end: endUtcMoment.format()\n      });\n\n      // Convert to local timezone\n      const startLocalMoment = startUtcMoment.tz(userTimezone);\n      const endLocalMoment = endUtcMoment.tz(userTimezone);\n\n      debugLog('MBA134njo: Local moments:', {\n        start: startLocalMoment.format(),\n        end: endLocalMoment.format()\n      });\n\n      // Get timezone abbreviation\n      const tzAbbrev = startLocalMoment.zoneAbbr();\n      debugLog('MBA134njo: Timezone abbreviation:', tzAbbrev);\n\n      // Format the dates without timezone in the format string\n      const startFormatted = startLocalMoment.format(\"MMM D, YYYY h:mm A\");\n      const endFormatted = endLocalMoment.format(\"MMM D, YYYY h:mm A\");\n\n      // Add timezone abbreviation if needed\n      const finalStart = includeTimezone ? `${startFormatted} ${tzAbbrev}` : startFormatted;\n      const finalEnd = includeTimezone ? `${endFormatted} ${tzAbbrev}` : endFormatted;\n\n      debugLog('MBA134njo: Formatted dates:', {\n        startFormatted: finalStart,\n        endFormatted: finalEnd,\n        tzAbbrev\n      });\n      \n      return `${finalStart} - ${finalEnd}`;\n    } else {\n      const startLocalMoment = moment.utc(`${startDate}T00:00:00Z`).tz(userTimezone);\n      const endLocalMoment = moment.utc(`${endDate}T00:00:00Z`).tz(userTimezone);\n      \n      return `${startLocalMoment.format('MMM D, YYYY')} - ${endLocalMoment.format('MMM D, YYYY')}`;\n    }\n  } catch (error) {\n    debugLog('MBA134njo: Error in formatDateTimeRangeFromUTC:', error);\n    return '';\n  }\n};\n\n/**\n * Converts a time string from UTC to local timezone, handling date boundary changes\n * @param {string} dateStr - Date in \"YYYY-MM-DD\" format \n * @param {string} timeStr - Time in \"HH:MM\" format (24-hour)\n * @param {string} timezone - User's timezone\n * @returns {Object} Object with time (hours/minutes) and adjusted date if it changed\n */\nfunction convertTimeFromUTC(dateStr, timeStr, timezone = 'US/Mountain') {\n  try {\n    // Create a full UTC datetime string\n    const utcDate = `${dateStr}T${timeStr}:00Z`;\n    \n    // Convert to local timezone using moment-timezone\n    const utcMoment = moment.utc(utcDate);\n    const localMoment = utcMoment.tz(timezone);\n    \n    // Extract hours and minutes\n    const hours = localMoment.hours();\n    const minutes = localMoment.minutes();\n    \n    // Check if the date changed during conversion\n    const localDateStr = localMoment.format('YYYY-MM-DD');\n    const dateChanged = localDateStr !== dateStr;\n    \n    debugLog('MBA2j3kbr9hve4: Time conversion details:', {\n      utc: {\n        date: dateStr,\n        time: timeStr,\n        fullDateTime: utcDate\n      },\n      local: {\n        date: localDateStr,\n        time: `${hours}:${minutes}`,\n        fullDateTime: localMoment.format(),\n        dateChanged\n      }\n    });\n    \n    return {\n      hours,\n      minutes,\n      adjustedDate: dateChanged ? localDateStr : null\n    };\n  } catch (error) {\n    debugLog('MBA2j3kbr9hve4: Error converting time from UTC:', error);\n    \n    // Return the UTC time parsed directly as fallback\n    const [hours, minutes] = timeStr.split(':').map(Number);\n    return {\n      hours: hours || 0,\n      minutes: minutes || 0,\n      adjustedDate: null\n    };\n  }\n}\n\n/**\n * Parses occurrences from the backend API into the format expected by DateSelectionCard and TimeSelectionCard\n * @param {Array} occurrences - Array of occurrence objects from the API\n * @returns {Object} Object containing formatted dates and times\n */\nexport const parseOccurrencesForBookingSteps = (occurrences) => {\n  debugLog('MBA2j3kbr9hve4: Parsing occurrences for booking steps:', occurrences);\n  \n  if (!occurrences || !Array.isArray(occurrences) || occurrences.length === 0) {\n    debugLog('MBA2j3kbr9hve4: No occurrences to parse');\n    return {\n      dates: [],\n      dateRange: null,\n      individualTimes: {},\n      defaultTimes: { startTime: { hours: 9, minutes: 0 }, endTime: { hours: 17, minutes: 0 } }\n    };\n  }\n  \n  // 1. Extract all unique dates and create Date objects\n  const uniqueDates = new Set();\n  const individualTimes = {};\n  \n  // Sort occurrences by date to ensure we get the correct start/end for date range\n  const sortedOccurrences = [...occurrences].sort((a, b) => {\n    return new Date(a.start_date) - new Date(b.start_date);\n  });\n  \n  debugLog('MBA2j3kbr9hve4: Sorted occurrences:', sortedOccurrences);\n  \n  // User's timezone - use Mountain Time as default\n  const userTimezone = 'US/Mountain';\n  \n  // Process each occurrence\n  sortedOccurrences.forEach(occurrence => {\n    const { start_date, end_date, start_time, end_time } = occurrence;\n    \n    if (!start_date || !start_time || !end_time) {\n      debugLog('MBA2j3kbr9hve4: Invalid occurrence data, missing required fields:', occurrence);\n      return;\n    }\n    \n    // Convert UTC times to local timezone, accounting for date boundary changes\n    const localStartTime = convertTimeFromUTC(start_date, start_time, userTimezone);\n    const localEndTime = convertTimeFromUTC(end_date || start_date, end_time, userTimezone);\n    \n    // Determine the actual local date to use, accounting for timezone adjustments\n    const actualStartDate = localStartTime.adjustedDate || start_date;\n    const actualEndDate = localEndTime.adjustedDate || (end_date || start_date);\n    \n    debugLog('MBA2j3kbr9hve4: Converted times with date adjustments:', {\n      utc: { \n        startDate: start_date, \n        startTime: start_time,\n        endDate: end_date || start_date,\n        endTime: end_time\n      },\n      local: { \n        startDate: actualStartDate,\n        startTime: localStartTime,\n        endDate: actualEndDate,\n        endTime: localEndTime\n      }\n    });\n    \n    // Add the adjusted dates to uniqueDates set\n    uniqueDates.add(actualStartDate);\n    \n    // If end date is different and not the same as start date, add it too\n    if (actualEndDate !== actualStartDate) {\n      uniqueDates.add(actualEndDate);\n    }\n    \n    // Create time objects for the TimeSelectionCard using the actual local date as key\n    individualTimes[actualStartDate] = {\n      startTime: {\n        hours: localStartTime.hours,\n        minutes: localStartTime.minutes\n      },\n      endTime: {\n        hours: localEndTime.hours,\n        minutes: localEndTime.minutes\n      },\n      isOvernightForced: actualStartDate !== actualEndDate\n    };\n  });\n  \n  // 2. Create the dates array from the set of unique dates\n  const dates = Array.from(uniqueDates).map(dateStr => {\n    const [year, month, day] = dateStr.split('-').map(Number);\n    return new Date(year, month - 1, day);\n  });\n  \n  // Log the parsed dates to ensure they're correct\n  debugLog('MBA2j3kbr9hve4: Parsed dates after timezone adjustment:', dates.map(d => d.toISOString().split('T')[0]));\n  \n  // 3. Create the date range\n  let dateRange = null;\n  if (dates.length > 0) {\n    // Sort dates to ensure correct order\n    const sortedDates = [...dates].sort((a, b) => a - b);\n    \n    // Create a proper date range with JavaScript Date objects\n    dateRange = {\n      startDate: sortedDates[0],\n      endDate: sortedDates[sortedDates.length - 1]\n    };\n    \n    debugLog('MBA2j3kbr9hve4: Created date range after timezone adjustment:', {\n      startDate: dateRange.startDate.toISOString().split('T')[0],\n      endDate: dateRange.endDate.toISOString().split('T')[0]\n    });\n  }\n  \n  // 4. Get default times from the first occurrence if available\n  let defaultTimes = {\n    startTime: { hours: 9, minutes: 0 }, // Default fallback\n    endTime: { hours: 17, minutes: 0 }    // Default fallback\n  };\n  \n  if (Object.keys(individualTimes).length > 0) {\n    // Use the first converted time as the default\n    const firstDateKey = Object.keys(individualTimes)[0];\n    defaultTimes = {\n      startTime: individualTimes[firstDateKey].startTime,\n      endTime: individualTimes[firstDateKey].endTime\n    };\n  }\n  \n  const result = {\n    dates,\n    dateRange,\n    individualTimes,\n    defaultTimes,\n    allTimesAreTheSame: Object.keys(individualTimes).length <= 1 || \n      Object.values(individualTimes).every(timeObj => \n        timeObj.startTime.hours === defaultTimes.startTime.hours &&\n        timeObj.startTime.minutes === defaultTimes.startTime.minutes &&\n        timeObj.endTime.hours === defaultTimes.endTime.hours &&\n        timeObj.endTime.minutes === defaultTimes.endTime.minutes\n      )\n  };\n  \n  debugLog('MBA2j3kbr9hve4: Parsed result with timezone adjustments:', result);\n  return result;\n}; ","import { API_BASE_URL } from '../config/config';\nimport { debugLog } from '../context/AuthContext';\n\n/**\n * WebSocket manager for real-time messaging\n */\nclass WebSocketManager {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.token = null;\n    this.connectionAttempts = 0;\n    this.maxConnectionAttempts = 5;\n    this.heartbeatInterval = null;\n    this.disconnectTimeout = null;\n    this.messageHandlers = new Map();\n    this.connectionId = null;\n    this.wsUrl = API_BASE_URL.replace('http://', 'ws://').replace('https://', 'wss://');\n    this._reconnectTimeout = null;\n    this.forceDisconnect = false;\n    this._hasVisibilityListener = false;\n    debugLog('MBA4321: WebSocketManager initialized, wsUrl is ' + this.wsUrl);\n  }\n\n  /**\n   * Initialize the WebSocket connection with authentication token\n   * @param {string} token - JWT token for authentication\n   */\n  init(token) {\n    if (!token) {\n      debugLog('MBA4321: Cannot initialize WebSocket without a valid token');\n      return;\n    }\n    \n    // If we already have this token and connection, no need to reconnect\n    if (this.token === token && this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: WebSocket already connected with this token');\n      return;\n    }\n    \n    // If we already had a token and it's different, this is a re-login, so force disconnect\n    if (this.token && this.token !== token) {\n      debugLog('MBA4321: Token changed, force disconnecting before reconnecting');\n      this.disconnect(true); // Force disconnect on token change\n    }\n    \n    this.token = token;\n    this.forceDisconnect = false; // Reset force disconnect flag\n    \n    // If we already have a socket but it's not working, close it first\n    if (this.socket && (this.socket.readyState === WebSocket.CLOSING || this.socket.readyState === WebSocket.CLOSED)) {\n      debugLog('MBA4321: Closing existing non-functional socket');\n      this.disconnect(false); // Non-forced disconnect\n    }\n    \n    // Connect with the token\n    this.connect();\n    \n    // Set up disconnect timeout (10 minutes of inactivity)\n    this.resetDisconnectTimeout();\n    \n    // Set up visibility change listener if in browser environment\n    this.setupVisibilityListener();\n  }\n\n  /**\n   * Set up visibility change listener to reconnect when tab becomes visible again\n   */\n  setupVisibilityListener() {\n    // Only run in browser environment\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n      return;\n    }\n    \n    // Skip if we've already set up the listener\n    if (this._hasVisibilityListener) {\n      return;\n    }\n    \n    debugLog('MBA4321: Setting up visibility change listener');\n    \n    // Create the handler function\n    const handleVisibilityChange = () => {\n      if (document.visibilityState === 'visible') {\n        debugLog('MBA4321: Document became visible, checking WebSocket connection');\n        \n        // Only reconnect if we have a token and weren't explicitly disconnected\n        if (this.token && !this.forceDisconnect) {\n          this.reconnectIfNeeded();\n        }\n      }\n    };\n    \n    // Add the listener\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    this._hasVisibilityListener = true;\n    \n    // Set up cleanup on page unload if needed\n    window.addEventListener('beforeunload', () => {\n      // Note: we deliberately don't disconnect here, as this would prevent\n      // browser session restoration from working properly\n      debugLog('MBA4321: Page unloading, connection may persist for session restore');\n    });\n  }\n\n  /**\n   * Connect to the WebSocket server\n   */\n  connect() {\n    // Skip connection if token is null or empty\n    if (!this.token) {\n      debugLog('MBA4321: Cannot connect WebSocket without a valid token');\n      return false;\n    }\n    \n    // If already connected, no need to reconnect\n    if (this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: WebSocket already connected and open');\n      return true;\n    }\n    \n    // If socket exists but is in CONNECTING state, don't start another connection\n    if (this.socket && this.socket.readyState === WebSocket.CONNECTING) {\n      debugLog('MBA4321: WebSocket already connecting, skipping duplicate connect');\n      return true;\n    }\n    \n    // Clear any existing heartbeat\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // If too many connection attempts, back off\n    if (this.connectionAttempts >= this.maxConnectionAttempts) {\n      debugLog(`MBA4321: Too many connection attempts (${this.connectionAttempts}), backing off`);\n      setTimeout(() => {\n        this.connectionAttempts = 0;\n        this.connect();\n      }, 60000);\n      return false;\n    }\n    \n    try {\n      this.connectionAttempts++;\n      \n      const wsEndpoint = `${this.wsUrl}/ws/messages/?token=${this.token}`;\n      debugLog(`MBA4321: [MY CONNECTION] Connecting WebSocket at ${wsEndpoint} (attempt ${this.connectionAttempts})`);\n      \n      this.socket = new WebSocket(wsEndpoint);\n      debugLog('MBA4321: [MY CONNECTION] WebSocket instance created');\n      \n      // Setup event handlers\n      this.socket.onopen = this.handleOpen.bind(this);\n      this.socket.onclose = this.handleClose.bind(this);\n      this.socket.onmessage = this.handleMessage.bind(this);\n      this.socket.onerror = this.handleError.bind(this);\n      \n      return true;\n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket connection error: ${error.message}`);\n      this.scheduleReconnect();\n      return false;\n    }\n  }\n\n  /**\n   * Handle WebSocket connection open\n   */\n  handleOpen(event) {\n    debugLog('MBA4321: [MY CONNECTION] WebSocket connection established');\n    this.isConnected = true;\n    this.connectionAttempts = 0; // Reset connection attempts on successful connection\n    \n    // Start sending heartbeats\n    this.startHeartbeat();\n    \n    // Log connection status for debugging\n    debugLog(`MBA4321: [MY CONNECTION] isConnected set to ${this.isConnected}, socket state: ${this.socket?.readyState}`);\n    \n    // Notify all handlers of connection\n    this.notifyHandlers('connection', { \n      status: 'connected',\n      timestamp: new Date().toISOString()\n    });\n    \n    // Send immediate heartbeat to verify connection on both sides\n    setTimeout(() => {\n      if (this.isConnected) {\n        debugLog('MBA4321: [MY CONNECTION] Sending initial heartbeat after connection');\n        this.send('heartbeat');\n      }\n    }, 500);\n  }\n\n  /**\n   * Handle WebSocket connection close\n   */\n  handleClose(event) {\n    // Skip redundant close events\n    if (!this.isConnected && !this.socket) {\n      return;\n    }\n\n    const wasConnected = this.isConnected;\n    this.isConnected = false;\n    this.socket = null;\n    \n    debugLog(`MBA4321: [MY CONNECTION] WebSocket connection closed: code=${event.code}, reason=${event.reason}`);\n    \n    // Clear heartbeat\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // Notify handlers of the disconnection, but only if we were previously connected\n    if (wasConnected) {\n      this.notifyHandlers('disconnection', {\n        code: event.code,\n        reason: event.reason,\n        timestamp: new Date().toISOString()\n      });\n    }\n    \n    // Attempt to reconnect\n    this.scheduleReconnect();\n  }\n\n  /**\n   * Handle WebSocket messages\n   */\n  handleMessage(event) {\n    try {\n      const message = JSON.parse(event.data);\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket message received: ${message.type}`);\n      \n      // For detailed message logging, use debugLog instead of is_DEBUG check\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket message content: ${event.data}`);\n      \n      // For heartbeat responses, just log and return\n      if (message.type === 'heartbeat_ack') {\n        return;\n      }\n      \n      // Notify handlers based on message type\n      this.notifyHandlers(message.type, message.data || {});\n      \n      // Also notify global handlers\n      this.notifyHandlers('all', { type: message.type, data: message.data || {} });\n      \n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] Error handling WebSocket message: ${error.message}`);\n    }\n  }\n\n  /**\n   * Handle WebSocket errors\n   */\n  handleError(error) {\n    debugLog(`MBA4321: [MY CONNECTION] WebSocket error: ${error.message || 'Unknown error'}`);\n    \n    // Notify handlers of the error\n    this.notifyHandlers('error', { \n      error: error.message || 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n    \n    // Try to reconnect on error\n    this.scheduleReconnect();\n  }\n\n  /**\n   * Send a message through the WebSocket\n   */\n  send(type, data = {}) {\n    if (!this.isConnected || !this.socket) {\n      debugLog('MBA4321: [MY CONNECTION] Cannot send message, WebSocket not connected');\n      return false;\n    }\n\n    try {\n      const message = JSON.stringify({\n        type,\n        data,\n        timestamp: Date.now()\n      });\n      \n      this.socket.send(message);\n      debugLog(`MBA4321: [MY CONNECTION] Sent ${type} message through connection`);\n      return true;\n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] Error sending message through connection: ${error.message}`);\n      return false;\n    }\n  }\n\n  /**\n   * Schedule a reconnection attempt\n   */\n  scheduleReconnect() {\n    // Skip if a reconnection is already scheduled\n    if (this._reconnectTimeout) {\n      debugLog('MBA4321: Reconnect already scheduled, skipping duplicate');\n      return;\n    }\n    \n    const delay = Math.min(1000 * Math.pow(2, this.connectionAttempts - 1), 30000);\n    debugLog(`MBA4321: Scheduling reconnect in ${delay}ms (attempt ${this.connectionAttempts})`);\n    \n    this._reconnectTimeout = setTimeout(() => {\n      this._reconnectTimeout = null;\n      if (!this.isConnected) {\n        this.connect();\n      }\n    }, delay);\n  }\n\n  /**\n   * Start sending heartbeat messages\n   */\n  startHeartbeat() {\n    // Clear any existing interval\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n    }\n\n    // Start a new interval\n    this.heartbeatInterval = setInterval(() => {\n      if (this.isConnected) {\n        this.send('heartbeat', { timestamp: Date.now() });\n        debugLog('MBA4321: Heartbeat sent');\n      } else {\n        debugLog('MBA4321: Skipping heartbeat, not connected');\n        clearInterval(this.heartbeatInterval);\n        this.heartbeatInterval = null;\n      }\n    }, 30000); // 30 seconds\n\n    debugLog('MBA4321: Heartbeat mechanism started');\n  }\n\n  /**\n   * Disconnect the WebSocket\n   * @param {boolean} force - Whether to force disconnect (true) or allow reconnect on visibility change (false)\n   */\n  disconnect(force = false) {\n    debugLog(`MBA4321: [MY CONNECTION] Disconnecting WebSocket connection (force=${force})`);\n    \n    // Set the force disconnect flag if requested\n    this.forceDisconnect = force;\n    \n    // If this is just a tab change and not a forced disconnect,\n    // we'll preserve the token to allow reconnection\n    const preserveToken = !force;\n    const savedToken = preserveToken ? this.token : null;\n    \n    // Clear heartbeat interval\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // Clear disconnect timeout\n    if (this.disconnectTimeout) {\n      clearTimeout(this.disconnectTimeout);\n      this.disconnectTimeout = null;\n    }\n    \n    // Close the socket if it exists\n    if (this.socket) {\n      try {\n        // Remove all event handlers to prevent reconnection attempts from them\n        this.socket.onopen = null;\n        this.socket.onclose = null;\n        this.socket.onmessage = null;\n        this.socket.onerror = null;\n        \n        // Close the connection\n        this.socket.close();\n        this.socket = null;\n        \n        debugLog('MBA4321: [MY CONNECTION] WebSocket connection closed successfully');\n      } catch (error) {\n        debugLog(`MBA4321: [MY CONNECTION] Error closing WebSocket: ${error.message}`);\n      }\n    }\n    \n    // Reset connection state\n    this.isConnected = false;\n    \n    // Restore token if this wasn't a forced disconnect (just a tab change)\n    if (preserveToken && savedToken) {\n      this.token = savedToken;\n      debugLog('MBA4321: [MY CONNECTION] Preserved token for reconnection on tab visibility change');\n    }\n    \n    // Notify handlers of the disconnection\n    this.notifyHandlers('connection', { \n      status: 'disconnected',\n      forced: force,\n      timestamp: new Date().toISOString()\n    });\n    \n    return true;\n  }\n\n  /**\n   * Reset the disconnect timeout\n   * This timeout will disconnect the WebSocket after 10 minutes of inactivity\n   */\n  resetDisconnectTimeout() {\n    // Clear any existing timeout\n    if (this.disconnectTimeout) {\n      clearTimeout(this.disconnectTimeout);\n    }\n    \n    // Set a new timeout\n    this.disconnectTimeout = setTimeout(() => {\n      debugLog('MBA4321: Disconnecting due to inactivity');\n      this.disconnect();\n    }, 600000); // 10 minutes\n  }\n\n  /**\n   * Check if WebSocket is connected\n   * @returns {boolean} Connection status\n   */\n  isWebSocketConnected() {\n    return this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN;\n  }\n\n  /**\n   * Register a handler for specific message types\n   * @param {string} messageType - Type of message to handle\n   * @param {function} handler - Handler function\n   * @param {string} handlerId - Unique identifier for this handler\n   */\n  registerHandler(messageType, handler, handlerId) {\n    if (!this.messageHandlers.has(messageType)) {\n      this.messageHandlers.set(messageType, new Map());\n    }\n    \n    this.messageHandlers.get(messageType).set(handlerId, handler);\n    debugLog(`MBA4321: Registered handler ${handlerId} for ${messageType} messages`);\n    \n    return () => this.unregisterHandler(messageType, handlerId);\n  }\n\n  /**\n   * Unregister a handler\n   * @param {string} messageType - Type of message\n   * @param {string} handlerId - Handler ID to remove\n   */\n  unregisterHandler(messageType, handlerId) {\n    if (this.messageHandlers.has(messageType)) {\n      this.messageHandlers.get(messageType).delete(handlerId);\n      debugLog(`MBA4321: Unregistered handler ${handlerId} for ${messageType} messages`);\n    }\n  }\n\n  /**\n   * Notify all registered handlers for a specific message type\n   * @param {string} messageType - Type of message\n   * @param {object} data - Message data\n   */\n  notifyHandlers(messageType, data) {\n    if (this.messageHandlers.has(messageType)) {\n      const handlers = this.messageHandlers.get(messageType);\n      \n      handlers.forEach((handler, id) => {\n        try {\n          handler(data);\n        } catch (error) {\n          debugLog(`MBA4321: Error in ${messageType} handler ${id}: ${error.message}`);\n        }\n      });\n    }\n    \n    // Also notify global handlers (if any)\n    if (messageType !== 'all' && this.messageHandlers.has('all')) {\n      const globalHandlers = this.messageHandlers.get('all');\n      \n      globalHandlers.forEach((handler, id) => {\n        try {\n          handler({ type: messageType, data });\n        } catch (error) {\n          debugLog(`MBA4321: Error in global handler ${id}: ${error.message}`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Mark messages as read\n   * @param {number} conversationId - Conversation ID\n   * @param {Array} messageIds - Array of message IDs to mark as read\n   */\n  markMessagesAsRead(conversationId, messageIds) {\n    if (!Array.isArray(messageIds) || messageIds.length === 0) {\n      return false;\n    }\n    \n    return this.send('mark_read', {\n      conversation_id: conversationId,\n      message_ids: messageIds\n    });\n  }\n\n  /**\n   * Check if WebSocket is connected and reconnect if needed\n   * @returns {boolean} Whether a reconnection was attempted\n   */\n  reconnectIfNeeded() {\n    debugLog('MBA4321: [MY CONNECTION] Checking if WebSocket reconnection needed');\n    \n    // If we don't have a token or were force disconnected, don't try to reconnect\n    if (!this.token || this.forceDisconnect) {\n      debugLog(`MBA4321: [MY CONNECTION] Cannot reconnect - ${!this.token ? 'no token' : 'force disconnected'}`);\n      return false;\n    }\n    \n    // Check if we need to reconnect\n    const needsReconnect = (\n      !this.isConnected || \n      !this.socket || \n      (this.socket && (\n        this.socket.readyState === WebSocket.CLOSED || \n        this.socket.readyState === WebSocket.CLOSING\n      ))\n    );\n    \n    if (needsReconnect) {\n      debugLog('MBA4321: [MY CONNECTION] WebSocket needs reconnection, attempting now');\n      \n      // Reset the force disconnect flag\n      this.forceDisconnect = false;\n      \n      // Ensure old connection is properly closed\n      if (this.socket) {\n        try {\n          this.socket.onclose = null; // Prevent recursive reconnection\n          this.socket.close();\n          this.socket = null;\n        } catch (e) {\n          debugLog(`MBA4321: [MY CONNECTION] Error closing existing socket: ${e.message}`);\n        }\n      }\n      \n      this.isConnected = false;\n      \n      // Reconnect\n      setTimeout(() => {\n        this.connect();\n      }, 100);\n      \n      return true;\n    }\n    \n    // If we're connected, send a heartbeat to verify connection\n    if (this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: [MY CONNECTION] WebSocket appears connected, sending heartbeat to verify');\n      this.send('heartbeat');\n      \n      // Reset the disconnect timeout to prevent inactivity disconnection\n      this.resetDisconnectTimeout();\n    }\n    \n    return false;\n  }\n}\n\n// Create a singleton instance\nconst websocketManager = new WebSocketManager();\n\n// Export the singleton\nexport default websocketManager; ","var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"aaed7a5a\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [640], () => (__webpack_require__(55819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","overlay","position","top","left","right","bottom","backgroundColor","zIndex","container","theme","colors","surface","borderRadius","padding","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","primary","pulseBorder","opacity","closeButton","content","marginTop","title","fontSize","fontWeight","color","marginBottom","fontFamily","fonts","header","description","text","lineHeight","regular","footer","flexDirection","justifyContent","alignItems","leftButtons","flex","skipButton","paddingVertical","paddingHorizontal","skipText","secondary","navigationButton","navigationText","finishButton","finishText","stepIndicator","stepText","TutorialModal","step","totalSteps","onNext","onPrevious","onSkip","onClose","onFinish","userRole","is_DEBUG","isFirstStep","isLastStep","isVisible","setIsVisible","useState","currentScreen","setCurrentScreen","navigation","useNavigation","fadeAnim","useRef","Animated","Value","current","slideAnim","overlayAnim","Dimensions","get","useEffect","debugLog","currentStep","screen","timer","setTimeout","clearTimeout","addListener","timing","toValue","duration","useNativeDriver","start","initialPosition","finalPosition","getPositionStyles","slideStyle","transform","translateX","interpolate","inputRange","outputRange","translateY","_jsxs","_Fragment","children","_jsx","View","style","pointerEvents","TouchableOpacity","onPress","handleClose","MaterialCommunityIcons","name","size","Text","handleSkip","handlePrevious","handleFinish","handleNext","modalOverlay","modalContent","maxWidth","modalText","fontSizes","medium","textAlign","buttonContainer","gap","button","cancelButton","border","confirmButton","cancelButtonText","confirmButtonText","disabledButton","disabledText","ConfirmationModal","visible","onConfirm","actionText","isLoading","Modal","transparent","animationType","onRequestClose","disabled","ActivityIndicator","TutorialContext","createContext","defaultTutorialStatus","done_client_tutorial","done_pro_tutorial","tutorialSteps","client","tab","onStepEnter","navigate","professional","default","TutorialProvider","isSignedIn","useContext","AuthContext","tutorialStatus","setTutorialStatus","setCurrentStep","hasError","setHasError","errorMessage","setErrorMessage","setIsLoading","skipConfirmationVisible","setSkipConfirmationVisible","closeConfirmationVisible","setCloseConfirmationVisible","fetchTutorialStatus","async","response","axios","concat","API_BASE_URL","data","navigateToFrom","error","console","getCurrentStepData","roleKey","steps","safeCurrentStep","Math","min","max","length","stepData","Object","assign","nextStep","currentStepData","prevStep","from","to","fromTab","toTab","previousStep","completeTutorial","updates","patch","message","Provider","value","handleSkipCancel","handleSkipConfirm","handleCloseCancel","handleCloseConfirm","toast","minWidth","icon","marginRight","undefined","Toast","type","onDismiss","animation","timeoutRef","parallel","handleDismiss","callback","getBackgroundColor","warning","info","getIcon","numberOfLines","ellipsizeMode","hitSlop","ToastContext","useToast","context","Error","ToastProvider","setToast","showToast","useCallback","hideToast","prev","marginLeft","mobileContainer","mobileItemContainer","mobileMarker","mobileMilestoneTitle","mobileDashedLine","borderStyle","webContainer","dashedLine","webMarker","webMilestoneTitle","markerContainer","modalIconContainer","modalNumber","modalTitle","modalDescription","closeButtonText","RoadmapSection","selectedMilestone","setSelectedMilestone","modalVisible","setModalVisible","screenWidth","isMobile","roadmapData","id","mainColors","senary","quinary","quaternary","main","handleMilestonePress","milestone","map","index","FontAwesome5","number","BOOKING_STATES","DRAFT","PENDING_INITIAL_PROFESSIONAL_CHANGES","PENDING_PROFESSIONAL_CHANGES","PENDING_CLIENT_APPROVAL","CONFIRMED","CONFIRMED_PENDING_PROFESSIONAL_CHANGES","CONFIRMED_PENDING_CLIENT_APPROVAL","COMPLETED","DENIED","CANCELLED","PROFESSIONAL_EDITABLE_STATES","ALL_SERVICES","SERVICE_TYPES","TIME_OPTIONS","TIME_UNIT_MAPPING","BACKEND_TO_FRONTEND_TIME_UNIT","entries","reduce","acc","key","mockAdditionalRates","amount","mockServicesForCards","startingPrice","animalTypes","additionalRates","mockPets","animal_type","breed","age","months","years","weight","sex","friendlyWithChildren","friendlyWithCats","friendlyWithDogs","spayedNeutered","houseTrained","microchipped","adoptionDate","energyLevel","feedingSchedule","leftAlone","medication","additionalInstructions","vetName","vetAddress","vetPhone","insuranceProvider","vetDocuments","galleryImages","mockProfessionals","profilePicture","require","location","rating","reviewCount","price","distance","coordinates","latitude","longitude","services","experience","repeat_owners","verified","bestReview","mockOwners","pet_types","last_booking","pets","email","phone","address","sharedBookingDetails","booking_id","status","owner_name","professional_name","service_details","service_type","pet_id","species","occurrences","occurrence_id","start_date","end_date","start_time","end_time","calculated_cost","base_total","rates","base_rate","additional_animal_rate","additional_animal_rate_applies","applies_after","unit_of_time","holiday_rate","holiday_days","additional_rates","cost_summary","subtotal","platform_fee","taxes","total_owner_cost","total_sitter_payout","is_prorated","mockBookingDetails","ownerName","startDate","startTime","CURRENT_USER_ID","values","booking","date","time","serviceType","numberOfPets","totalCost","costs","totalOwnerCost","professionalPayout","mockConversations","participant1_id","participant2_id","role_map","participant1_role","participant2_role","lastMessage","timestamp","unread","mockMessages","message_id","sender","is_booking_request","metadata","endDate","endTime","BLOG_POSTS","author","bio","publishDate","readTime","tags","references","authors","publication","url","year","doi","likes","comments","shares","windowWidth","windowHeight","reviews","image","ReviewImage","source","src","alt","scrollView","contentContainer","paddingBottom","heroSection","overflow","heroImage","heroText","textShadowColor","textShadowOffset","textShadowRadius","section","sectionTitle","largeLarge","card","appButtons","appButton","reviewsSection","reviewsBackground","reviewsOverlay","reviewsSubtitle","mediumLarge","reviewsTitle","reviewsContainer","overflowX","WebkitOverflowScrolling","msOverflowStyle","scrollbarWidth","scrollbarColor","reviewsContent","reviewCard","reviewCardMobile","reviewQuote","reviewText","reviewAuthorContainer","reviewerImage","objectFit","reviewAuthorName","reviewAuthorTitle","paginationDots","paginationDot","margin","paginationDotActive","featuresSection","toggleContainer","toggleButton","toggleButtonActive","toggleButtonText","toggleButtonTextActive","whiteText","featuresContainer","featureColumn","SCREEN_WIDTH","columnTitle","featuresList","featureItem","featureIconCircle","featureIcon","featureTitle","featureText","actionButton","display","buttonText","blogSection","blogCard","authorContainer","authorImage","blogContent","authorInfo","authorName","dot","marginHorizontal","preview","flexWrap","tag","tagText","stats","stat","statText","roadmapSection","roadmapImage","roadmapOverlayText","faqSection","faqItem","faqButton","faqQuestion","faqToggle","faqAnswer","contactSection","contactContainer","input","socialIconsRow","socialIcon","footerLinksRow","footerLink","textDecorationLine","successMessage","messageInput","textAlignVertical","paddingTop","validationError","starsContainer","starIcon","waitlistSection","marginVertical","waitlistDescription","waitlistButton","scrollIndicators","scrollIndicatorButton","scrollIndicator","scrollIndicatorActive","scrollHint","scrollHintText","scrollContainer","scrollContent","serviceHighlightsSection","mainServiceTitle","servicesGrid","background","scrollViewContent","flexGrow","alignSelf","switchProfileButton","profileHeader","sectionSaveButton","borderBottomWidth","borderBottomColor","bioInput","petItem","petName","petInfo","petDetails","placeholder","saveButton","addButton","profilePhoto","profilePhotoPlaceholder","centered","sectionHeader","fieldText","iconContainer","petItemContent","petPhoto","modalContainer","webPopup","webPopupTitle","webPopupText","profileInfo","headerLeft","backButton","headerText","OwnerProfile","useWindowDimensions","setProfilePhoto","setName","setEmail","setPhone","setAge","setAddress","city","setCity","state","setState","zip","setZip","country","setCountry","setBio","setPets","emergencyContact","setEmergencyContact","authorizedHouseholdMembers","setAuthorizedHouseholdMembers","editMode","setEditMode","showAuthorizedMembersInfo","setShowAuthorizedMembersInfo","popupPosition","setPopupPosition","questionMarkRef","scrollViewRef","isApprovedProfessional","switchRole","localIsApprovedProfessional","setLocalIsApprovedProfessional","Promise","resolve","photo","then","storedIsApprovedProfessional","AsyncStorage","getItem","JSON","parse","fetchProfessionalStatus","toggleEditMode","prevState","renderEditableField","label","onChangeText","TextInput","renderIcon","Ionicons","renderSaveButton","Button","mode","log","Alert","alert","saveSection","showSwitchToProfessionalButton","SafeAreaView","handleSwitchToProfessional","ScrollView","ref","contentContainerStyle","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","canceled","assets","uri","Image","multiline","pet","petId","showAuthorizedMembersPopup","measure","fx","fy","px","py","_","__","___","____","scrollViewX","scrollViewY","member","household","updateHouseholdMember","updatedMembers","addHouseholdMember","Portal","floatingButtonContainer","webButton","mobileButton","floatingButton","buttonLabel","FloatingSaveButton","onSave","btnText","isCollapsed","React","labelStyle","wrapper","stepCircle","modernBorder","activeStepCircle","completedStepCircle","stepNumber","activeStepNumber","completedStepNumber","stepName","whiteSpace","activeStepName","line","completedLine","progressLine","progressFilled","progressEmpty","props","onStepPress","isDesktop","renderStep","isActive","isCompleted","stepIndex","GENERAL_CATEGORIES","ANIMAL_ICONS","ANIMAL_CATEGORIES","getAllAnimalTypes","allTypes","forEach","category","includes","push","COMMON_PETS","getAnimalIcon","animalName","categoryId","find","cat","CategorySelectionStep","serviceData","setServiceData","customAnimalInput","setCustomAnimalInput","customAnimalCategory","setCustomAnimalCategory","showCustomAnimalInput","setShowCustomAnimalInput","selectedCategoryFilter","setSelectedCategoryFilter","setScreenWidth","updateLayout","addEventListener","removeEventListener","isAnimalTypeSelected","some","animal","handleAnimalTypeSelect","prevAnimalTypes","existingAnimalIndex","findIndex","updatedTypes","splice","hardcodedCategory","categoryToUse","foundCategory","newAnimal","categoryName","isCustom","filteredAnimalTypes","getFilteredAnimalTypes","animalTypesToShow","categoriesUsed","Set","categoryData","filter","add","a","sort","b","aCommonIndex","indexOf","bCommonIndex","localeCompare","categories","Array","subtitle","instructions","textSecondary","categoryFiltersContainer","paddingLeft","paddingRight","categoryFiltersScrollView","maxHeight","categoryFilterButton","minHeight","mainLight","categoryFilterText","selectedCategoryFilterText","actionsContainer","actionButtonText","animalTypesGrid","animalTypeItem","animalTypeCard","selectedAnimalCard","animalTypeRow","animalIconAndName","animalTypeName","customInputContainer","backgroundContrast","customInputTitle","inputRow","textInput","pickerContainer","picker","addButtonText","selectedAnimalsSection","selectedAnimalsTitle","selectedAnimalsList","animalBubble","animalBubbleText","removeAnimalButton","horizontal","showsHorizontalScrollIndicator","handleCategoryFilterSelect","handleSelectAll","allAnimalTypes","handleClearAll","placeholderTextColor","placeHolderText","onChange","e","target","handleAddCustomAnimal","trim","categoryInfo","generalCategories","categoryToAdd","animalType","inputGroup","textArea","switchContainer","switchGroup","switchLabel","switchSubLabel","errorText","characterCount","ServiceDetailsStep","nameError","setNameError","descriptionError","setDescriptionError","validateInput","isName","test","serviceName","truncatedText","slice","maxLength","serviceDescription","Switch","isOvernight","onValueChange","trackColor","false","true","thumbColor","ios_backgroundColor","TIME_UNITS","keys","ANIMAL_THRESHOLDS","rateContainer","rateInputGroup","currencyInputContainer","currencySymbol","currencyInput","outlineStyle","unitSelector","unitText","dropdownContainer","dropdownScroll","dropdownScrollContent","dropdownItem","selectedDropdownItem","dropdownText","selectedDropdownText","holidayRateContainer","holidayRateHeader","rateTypeToggleContainer","activeToggleButton","inactiveToggleButton","activeToggleText","inactiveToggleText","holidayRateInputWrapper","percentageInputContainer","percentageInput","percentageSymbol","calculatedHolidayRate","customRatesContainer","customRateItem","customRateContent","customRateActions","customRateTitleContainer","customRateTitle","customRateDescription","customRateAmount","newCustomRateContainer","customRateInput","addRateButton","addRateText","customRateButtonContainer","cancelRateButton","cancelRateText","saveRateButton","disabledSaveButton","saveRateText","customRateFormHeading","noCustomRatesText","fontStyle","customRateAction","modalIcon","modalButton","modalButtonText","disabledUnitSelector","RatesAndReviewStep","isUpdatingService","setIsUpdatingService","onProceedWithUpdate","showTimeUnitDropdown","setShowTimeUnitDropdown","showThresholdDropdown","setShowThresholdDropdown","customChargeVisible","setCustomChargeVisible","isHolidayRatePercent","setIsHolidayRatePercent","isEditingExistingRate","setIsEditingExistingRate","showUnsavedRateWarning","setShowUnsavedRateWarning","newCustomRate","setNewCustomRate","rate","availableTimeUnits","isPercent","base_rate_unit","holidayRate","holidayRateString","toString","replace","hasUnsavedCustomRate","hasUnsaved","formatNumericInput","numericValue","parts","split","join","toggleHolidayRateType","prevData","handleCustomRateChange","field","handleAddCustomRate","rateValue","parseFloat","isNaN","renderDropdown","options","selectedValue","onSelect","containerStyle","option","TouchableWithoutFeedback","handlePressOutside","keyboardType","unit","selectedUnit","additionalAnimalRate","additionalAnimalThreshold","threshold","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","calculateHolidayRateDollarValue","baseRate","holidayRatePercent","dollarValue","toFixed","rateToEdit","i","handleEditCustomRate","activeOpacity","handleDeleteCustomRate","STEPS","CATEGORY_SELECTION","SERVICE_DETAILS","RATES_AND_REVIEW","stepIndicatorContainer","scrollContentContainer","borderTopWidth","borderTopColor","nextButton","nextButtonText","disabledButtonText","ServiceCreationModal","initialService","setHasUnsavedChanges","hasHolidayRate","setError","isSubmitting","setIsSubmitting","isEditMode","setIsEditMode","isAddingCustomRate","setIsAddingCustomRate","animalTypesArray","animal_types","isArray","holiday_rate_is_percent","service_id","service_name","is_overnight","canProceedToNextStep","hasValidBaseRate","hasValidAdditionalRate","hasValidHolidayRate","callServiceApi","animalTypesDict","holidayRateValue","formattedData","parseInt","updateService","createService","serviceManagerData","lengthOfService","is_active","toLowerCase","handleBack","StepProgressIndicator","renderCurrentStep","serviceCard","surfaceContrast","cardHeader","large","activeToggleContainer","activeText","smallMedium","inactiveText","switch","scaleX","scaleY","ratesContainer","rateRow","rateLabel","editButton","deleteButton","deleteButtonText","ProfessionalServiceCard","item","onEdit","onDelete","setIsActive","handleToggleActive","getPricingBackgroundColor","unitOfTime","idx","serviceListContainer","serviceCardWrapper","headerContainer","headerActions","collapseButton","addServiceButton","addServiceText","emptyContainer","emptyText","portalTooltip","tooltipText","small","ServiceManager","setServices","isProfessionalTab","showModal","setShowModal","editingService","setEditingService","collapsedServices","setCollapsedServices","allCollapsed","setAllCollapsed","showDeleteModal","setShowDeleteModal","serviceToDelete","setServiceToDelete","hoveredButton","setHoveredButton","tooltipPosition","setTooltipPosition","collapseTooltipPosition","setCollapseTooltipPosition","buttonRef","handleEditService","serviceToEdit","formattedAnimalTypes","formattedService","handleDeleteService","toggleCollapse","renderService","warn","onToggleCollapse","is_custom","onMouseEnter","showTooltip","setPosition","element","getBoundingOwnerRect","rect","x","y","onMouseLeave","updatedService","serviceIndex","s","newServices","transformedService","existingIndex","serviceToRemove","deleteService","prevServices","centeredContent","portfolioGrid","portfolioCard","portfolioImageContainer","aspectRatio","portfolioPhoto","portfolioCaption","facilitiesContainer","facilityTag","facilityTagSelected","facilityTagText","facilityTagTextSelected","modalHeader","modalScroll","modalFacilityTag","modalFacilityText","modalFooter","modalButtonText2","webDatePicker","androidButton","dateText","disabledInput","DatePicker","displayFormat","isInModal","showDatePicker","setShowDatePicker","Date","handleWrapperEvents","stopPropagation","preventDefault","handleInputChange","onClick","onMouseDown","cursor","rightButton","BackHeader","onBackPress","rightIcon","onRightPress","rightComponent","customStyles","CrossPlatformView","useSafeArea","fullWidthHeader","contentWidth","setWindowWidth","updateDimensions","window","headerContent","mainContent","INSURANCE_OPTIONS","AddressForm","addressForm","addressInput","street","apartment","addressRow","EditOverlay","isLocation","isMultiline","isProfessional","isInsurance","selectedInsurance","onInsuranceChange","localValue","setLocalValue","localInsurance","setLocalInsurance","isLoadingLocation","setIsLoadingLocation","setAddressForm","insuranceStep","setInsuranceStep","insuranceType","setInsuranceType","newAddressForm","insuranceModalContent","backButtonText","modalTitleCentered","insuranceStepContent","insuranceStepTitle","insuranceTypeButton","insuranceTypeContent","insuranceTypeTitle","insuranceTypeDescription","uploadButton","newInsurance","handleInsuranceChange","uploadText","customInsuranceCard","insuranceCardImage","insuranceCardText","opt","insuranceOption","selectedInsuranceOption","insuranceOptionContent","insuranceOptionTitle","insuranceOptionDescription","locationContent","locationButton","Location","requestForegroundPermissionsAsync","getCurrentPositionAsync","coords","reverseGeocodeAsync","region","postalCode","locationButtonText","modalInput","multilineInput","autoFocus","modalButtons","modalCancelButton","modalCancelText","modalSaveButton","modalSaveButtonDisabled","handleSave","modalSaveText","contentWrapper","desktopLayout","profileSection","profileSectionDesktop","profileCard","profilePhotoContainer","cameraButton","nameContainer","emailContainer","locationContainer","locationIconWrapper","locationEditIcon","roleContainer","role","editIcon","ratingContainer","sectionsContainer","sectionsContainerDesktop","editButtonText","facilitiesGrid","facilityItem","facilityContent","facilityTitle","facilityValue","addPhotoButton","addPhotoText","photoGrid","noReviews","bioText","locationButtons","orText","noPhotosText","facilitiesModalContent","facilitiesScrollView","facilityPresetItem","selectedFacilityPreset","facilityPresetContent","facilityPresetTitle","facilityPresetDescription","selectedFacilityText","checkIcon","locationModalContent","maxFacilitiesText","insuranceContent","editButtonContent","modalCloseButton","modalCloseText","ProfileInfoTab","about_me","pickImage","onSaveComplete","insurance","onNavigateToTab","authName","hasEdits","setHasEdits","editingField","setEditingField","editValue","setEditValue","portfolioPhotos","setPortfolioPhotos","setSelectedInsurance","isSaving","setIsSaving","displayValues","setDisplayValues","originalValues","setOriginalValues","propName","handleEdit","currentValue","addressObject","locationDisplay","handleSaveField","hasFieldChanged","stringify","originalAddress","newAddress","originalApartment","newApartment","originalCity","newCity","originalState","newState","originalZip","newZip","originalCountry","newCountry","profileData","locationComponents","locationData","components","part","extractAddressComponents","updatedProfile","updateProfileInfo","prevValues","newLocation","charAt","toUpperCase","newPhotoUri","formData","FormData","photoFile","append","newDisplayValues","DAYS_OF_WEEK","ServiceIcon","service","sectionBox","servicesSection","servicesList","serviceWrapper","serviceItem","selectedServiceItem","serviceItemContent","serviceInfo","servicePrice","availabilityContainer","controlsScrollContainer","availabilityControls","controlsDivider","daysScrollContainer","daysContainer","availabilityDivider","availabilitySection","availabilityHeader","availabilityTitle","editHoursButton","editHoursText","dayItem","petsittingDayItem","warningLight","dayText","availabilityTime","serviceDivider","availabilityList","controlButton","blockButtonContent","blockButtonText","partialBlockButtonContent","partialBlockText","dateRangeButtonContent","dateRangeText","unavailableDayItem","unavailableSlash","rotate","unavailableDayText","nextUnavailableContainer","nextUnavailableText","ServicesAvailabilityTab","unavailableDays","onToggleService","onEditHours","onBlockService","onPartialDayBlock","selectedService","setSelectedService","isStacked","renderServiceItem","proDashboard","tertiary","renderDayAvailability","day","isUnavailable","renderAvailabilitySection","sectionDescription","petsList","petCard","petHeader","petBasicInfo","petDetailsContainer","expandedDetails","detailRow","detailColumn","detailTitle","detailText","preferencesGrid","preferenceButton","selectedPreference","preferenceText","selectedPreferenceText","checkmark","petActions","fixButton","addContactForm","submitButton","submitButtonText","contactsList","contactCard","contactInfo","contactName","contactPhone","contactActions","emptyListText","compatibilityContainer","compatibilityItem","compatibilityLabel","careInfoContainer","medicationsContainer","medicationsText","vetInfoContainer","vetInfoItem","vetInfoLabel","vetInfoText","documentButton","documentButtonText","dropdownContainerEdit","optionButton","selectedOption","optionText","selectedOptionText","editInput","editInputMedications","editInputShort","editInputWeight","uploadButtonText","documentActionContainer","documentsList","documentItem","documentName","viewDocButton","viewDocText","noDocumentsText","detailSection","editContainer","inputsWrapper","inputWrapper","flexBasis","inputLabel","profilePhotoButton","plusIconContainer","sectionRow","editMainContainer","editHeaderRow","editProfileContainer","editDetailsContainer","editActions","dateInfoContainer","dateInfoItem","dateInfoLabel","dateInfoText","customDatePickerContainer","dateInputBox","dateInputText","placeholderText","calendarButton","borderLeftWidth","borderLeftColor","datePickerContainer","calendarModalContent","calendarModalHeader","calendarModalTitle","calendarHeader","calendarNavButton","calendarMonthYear","weekdayLabels","weekdayLabel","calendarGrid","calendarRow","calendarDay","calendarDayText","calendarDayOtherMonth","calendarDayTextOtherMonth","calendarDaySelected","calendarDayTextSelected","white","stackedFields","fullWidth","saveButtonText","errorModalContent","successModalContent","success","errorModalHeader","successModalHeader","errorModalTitle","successModalTitle","errorModalMessage","successModalMessage","errorModalButton","successModalButton","errorModalButtonText","successModalButtonText","PetsPreferencesTab","preferences","homeEnvironment","emergencyContacts","onAddPet","onEditPet","onDeletePet","onReplacePet","onUpdatePreferences","expandedPetIds","setExpandedPetIds","newEmergencyContact","setNewEmergencyContact","newHouseholdMember","setNewHouseholdMember","isAddingEmergencyContact","setIsAddingEmergencyContact","isAddingHouseholdMember","setIsAddingHouseholdMember","editingPetIds","setEditingPetIds","editedPetsData","setEditedPetsData","expandedSections","setExpandedSections","datePickerConfig","setDatePickerConfig","currentField","currentPetId","selectedDate","displayMonth","setDisplayMonth","getMonth","displayYear","setDisplayYear","getFullYear","savingPet","setSavingPet","showSuccessModals","setShowSuccessModals","updateWidth","yesNoOptions","energyLevelOptions","sexOptions","returnYesNoContainer","attributeName","displayValue","returnEnergyLevelContainer","togglePetDetails","newSet","has","delete","formatDateForBackend","dateString","month","formatDateFromBackend","handleEditChange","handleUploadDocument","mockDocument","getTime","renderVetDocuments","documents","doc","isSectionExpanded","sectionName","petIdStr","String","err","renderSectionHeader","safeTitle","isExpanded","event","toggleSection","sectionNameStr","currentDate","parseDate","handleDatePickerSelect","formattedDate","padStart","getDate","formatDateString","calendarData","useMemo","firstDayOfMonth","daysInMonth","startingDayOfWeek","getDay","totalDays","ceil","calendarDays","dayCounter","dayDate","isCurrentMonth","isSelectedDate","weeks","goToPreviousMonth","prevYear","prevMonth","goToNextMonth","showErrorMessage","details","replaceTempPetWithReal","tempPetId","realPetData","currentPetsArray","tempPetIndex","p","updatedPets","callbackError","fallbackError","addError","renderDatePickerModal","week","weekIndex","dayObj","dayIndex","handleAddNewPet","existingTempPets","startsWith","tempPet","tempId","now","newPet","birthday","feedingInstructions","medicalNotes","pottyBreakSchedule","specialCareInstructions","childrenFriendly","dogFriendly","catFriendly","canBeLeftAlone","medications","_addToTop","isEditing","editedPetData","isSmallScreen","isNewPet","petBreed","petType","petBirthday","editedData","petData","age_years","ageYears","age_months","ageMonths","adoption_date","pet_description","friendly_with_children","friendly_with_cats","friendly_with_dogs","spayed_neutered","house_trained","feeding_schedule","potty_break_schedule","energy_level","can_be_left_alone","medication_notes","special_care_instructions","vet_name","vet_address","vet_phone","insurance_provider","vet_documents","addPet","newPetId","updatedPetData","newData","apiError","updatePet","handleSavePetEdit","petToEdit","handleEditPet","SubscriptionPlan","plan","isPopular","isCurrent","onSwitch","planCard","currentPlanBorder","popularTag","popularTagText","planTitle","planPrice","planDescription","features","feature","planButton","currentPlanButton","planButtonText","currentPlanButtonText","desktopContainer","leftColumn","rightColumn","plansScroll","plansScrollContent","planCardContainer","popularPlan","settingItem","settingContent","settingTextContainer","settingTitle","settingDescription","currentPlanInfo","currentPlanTitle","currentPlanBilling","usageStats","usageText","usageBar","usageProgress","paymentItem","paymentContent","paymentTextContainer","paymentTitleRow","paymentTitle","paymentDescription","setDefaultButton","setDefaultText","viewAllButton","viewAllText","timezoneItem","selectedTimezoneItem","primaryLight","timezoneText","selectedTimezoneText","timezoneButton","timezoneButtonText","noPaymentMethodsContainer","noPaymentMethodsText","SettingsPaymentsTab","push_notifications","email_updates","marketing_communications","profile_visibility","timezone","propTimezone","use_military_time","onUpdateSetting","paymentMethods","onAddPaymentMethod","onRemovePaymentMethod","onSetDefaultPayment","currentPlan","nextBilling","connections","used","total","onSwitchPlan","setTimezone","timezoneModalVisible","setTimezoneModalVisible","timezones","setTimezones","loading","setLoading","timeSettings","getTimeSettings","fetchTimeSettings","openTimezoneModal","getSubscriptionPlans","commonPlans","renderPlansSection","renderPaymentMethodsSection","renderPaymentMethod","renderNotificationSettings","handleUpdateSetting","renderPrivacySettings","method","last4","bankName","isDefault","expiry","settingName","catch","FlatList","keyExtractor","renderItem","updateTimeSettings","newTimezone","handleTimezoneChange","initialNumToRender","maxToRenderPerBatch","windowSize","mobileTab","activeTab","tabText","mobileTabText","activeTabText","createStyles","mainContainer","transition","headerSection","tabScrollContainer","tabContainer","tabContent","MyProfile","user","logout","setIsMobile","isWideScreen","setIsWideScreen","setActiveTab","hasUnsavedChanges","setProfileData","setCurrentPlan","isTutorialVisible","loadActiveTab","urlParams","URLSearchParams","search","tabFromUrl","sessionStorage","setItem","params","getState","routes","route","initialTab","storedTab","URL","href","searchParams","set","history","replaceState","storeActiveTab","loadProfileData","userProfile","checkAndFixPetOwners","petsWithMissingOwners","lastUpdateFailed","ownerMissing","fixPetOwner","tabs","handlePickImage","handleSaveComplete","newProfileData","handleUpdateField","handleSwitchPlan","planId","goBack","tabId","renderActiveTab","profileName","payment_methods","emergency_contact","authorized_household_members","hasChanges","updatedServices","shouldAddToTop","petToAdd","_objectWithoutPropertiesLoose","_excluded","newPetsArray","updatedPreferences","selected","updateData","CustomButton","spacing","validateEmail","isValid","validateName","validatePassword","password","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","IsProduction","extraLarge","createAccountContainer","createAccountText","createAccountLink","inputLabelContainer","passwordLabelContainer","showHideText","errorInput","rememberMeContainer","checkbox","checkboxInner","rememberMeText","loginButton","loginButtonText","forgotPasswordContainer","link","prototypeWarning","SignUp","useRoute","signIn","firstName","setFirstName","lastName","setLastName","setPassword","confirmPassword","setConfirmPassword","setSuccessMessage","inviterName","setInviterName","inviteToken","setInviteToken","inviteVerified","setInviteVerified","verifyingInvite","setVerifyingInvite","setLocation","showLocationDropdown","setShowLocationDropdown","locationError","setLocationError","locations","setLocations","loadingLocations","setLoadingLocations","fallbackLocations","supported","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","token","pathname","hash","pathParts","inviteIndex","signupIndex","searchToken","inviteInfo","verifyInvitation","valid","inviter_name","checkInvitation","fetchLocations","userData","password2","phone_number","KeyboardAvoidingView","behavior","keyboardVerticalOffset","formContainer","inviteContainer","inviteText","dropdown","loadingContainer","dropdownWrapper","inputText","dropdownMenu","loc","selectLocation","selectedLocation","dropdownItemText","inputContainer","autoCapitalize","editable","secureTextEntry","validateForm","firstNameValidation","lastNameValidation","emailValidation","passwordValidation","passwordMatchValidation","validatePasswordMatch","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","useMilitaryTime","registrationData","invitation_token","registerResponse","post","loginResponse","access","refresh","headers","Authorization","errorData","firstError","messages","signupButton","waitlistContainer","waitlistMessage","waitlistSubMessage","navigateToWaitlist","loader","signInContainer","signInText","navigateToSignIn","signInLink","inputError","cardHovered","scale","cardContent","mobileCardContent","topContent","mobileTopContent","profileImage","mobileProfileImage","mobileContentContainer","mobileHeaderContainer","nameAndPets","statusBadge","statusContent","statusText","clientContainer","mybookings","petContainer","mobileDivider","metaInfo","mobileMetaInfo","mobileMetaRow","metaItemContainer","metaText","viewDetailsButton","viewDetailsText","mobileClientContainer","mobileName","mobilePetContainer","mobilePetInfo","mobileStatusBadge","mobileStatusText","BookingCard","onViewDetails","client_name","professionalName","statusInfo","bgColor","textColor","confirmedBg","confirmedText","completedBg","completedText","getStatusInfo","isHovered","setIsHovered","convertedDateTime","convertDateTimeFromUTC","dateObj","monthName","toLocaleString","convertedTime","originalDate","originalTime","getMetaText","timeText","serviceText","ownername","badge","sectionHeaderContainer","breakdownSection","dateHeader","dateTextContainer","breakdownItem","breakdownLabelContainer","breakdownLabel","breakdownCalculation","breakdownAmount","totalItem","subtotalRow","subtotalLabel","subtotalAmount","feeRow","feeLabel","feeAmount","totalAmountContainer","totalLabel","totalAmount","divider","payoutContainer","payoutLabel","payoutAmount","payoutBreakdown","addRateContainer","rateNameAmountRow","rateEditContainer","amountInputContainer","rateInput","nameInput","descriptionInput","formDivider","editableAdditionalRateRow","rateNameAmountRowWithDelete","buttonsContainer","multipleDatesContainer","occurrenceCost","ratesToggleButton","ratesToggleText","ratesBreakdown","rateItem","rateAmount","rateDescription","occurrenceDivider","ReviewAndRatesCard","bookingData","onRatesUpdate","bookingId","showEditControls","isAddingRate","setIsAddingRate","editedRates","setEditedRates","newRate","setNewRate","expandedRates","setExpandedRates","editingOccurrenceId","setEditingOccurrenceId","occurrenceEdits","setOccurrenceEdits","isAddingRateForOccurrence","setIsAddingRateForOccurrence","newOccurrenceRate","setNewOccurrenceRate","defaultRates","safeRates","occurrencesCount","formatCurrency","toggleAddRate","sanitizeAmountInput","sanitized","substring","handleNewRateAmountChange","handleNewOccurrenceRateAmountChange","saveRateChanges","cleanEditedRates","occurrencesForApi","occ","updateBookingDraftRates","draft_data","saveNewRate","updatedRates","updateBaseRate","sanitizedValue","updateAdditionalAnimalRate","updateHolidayRate","updateAdditionalRate","updatedAdditionalRates","deleteAdditionalRate","occIndex","handleEditOccurrence","occurrence","r","handleCancelEdit","handleOccurrenceInputChange","handleAdditionalRateChange","currentOccurrenceEdits","currentAdditionalRates","updated","updatedRate","allRates","deleteRateForOccurrence","rateIndex","updatedOccurrenceEdits","getAdditionalRateValue","renderBookingBreakdown","isMultipleDates","count","firstOccurrence","multiple","formatDateTimeRangeFromUTC","includeTimes","includeTimezone","newExpandedRates","v","occurrenceId","rateName","occurrenceEditsRate","valueToShow","saveNewRateForOccurrence","toggleAddRateForOccurrence","cleanOccurrenceEdits","handleSaveOccurrenceRates","formattedDateRange","additional_animal_rate_total","holiday_rate_total","renderTotalAmount","costSummary","client_platform_fee","pro_platform_fee","tax_state","total_client_cost","pro_subscription_plan","safeArea","footerContainer","approveButton","approveText","loadingText","errorContainer","retryButton","retryButtonText","serviceContainer","serviceLabel","serviceValue","petsContainer","petsLabel","noPets","changeRequestContainer","changeRequestInput","buttonWrapper","changeRequestButtons","cancelRequestButton","cancelRequestButtonText","submitRequestButton","olive","submitRequestButtonText","changeButton","shortenedContainer","BookingApprovalModal","onApproveSuccess","onApproveError","onRequestChangesSuccess","onRequestChangesError","initialData","hideButtons","isReadOnly","defaultInitialData","setBookingData","setLoadingText","changeRequestMessage","setChangeRequestMessage","showChangeRequestInput","setShowChangeRequestInput","bookingDataRef","dataLoadedRef","fetchBookingDetails","dataProtectionInterval","setInterval","hasNoData","hasRefData","clearInterval","getBookingDetails","safeResponse","toISOString","handleApprove","approveBooking","handleShowChangeRequest","handleCancelChangeRequest","handleSubmitChangeRequest","requestBookingChanges","str","word","updatedData","renderFooter","isBookingUpdate","screenHeight","headerRight","notificationButton","notificationBadge","notificationCount","profileButton","welcomeSection","welcomeContent","welcomeCard","backgroundImage","welcomeHeader","welcomeTextContainer","statsContainer","statsGrid","gridTemplateColumns","statCard","statHeader","statIconContainer","bookingsContainer","bookingItem","bookingContent","bookingInfo","bookingDetails","bookingTitle","bookingTime","bookingStatus","progressBar","progress","timeLeft","emptyStateContainer","emptyStateTitle","emptyStateText","createServiceButton","createServiceButtonText","filterContainer","filterButtons","filterButton","activeFilterButton","filterText","activeFilterText","servicesContainer","serviceContent","serviceHeader","serviceTitle","serviceCategory","serviceFooter","bookingsCount","bookingsText","serviceRate","viewButton","viewButtonText","Dashboard","useTheme","signOut","is_prototype","bookings","setBookings","activeFilter","setActiveFilter","onboardingProgress","setOnboardingProgress","profile_complete","has_bank_account","has_services","subscription_plan","bookingModalVisible","setBookingModalVisible","selectedBookingId","setSelectedBookingId","isLargeScreen","filteredBookings","bookingDate","parsedDate","completed","dynamicStyles","welcomeTitle","bookingCount","statValue","statLabel","statChange","prototypeBookings","owner","prototypeServices","fetchDashboardData","endpoint","upcoming_bookings","firstBooking","client_name_exists","processedBookings","normalizedDate","onboarding_progress","servicesData","getProfessionalServices","newToken","refreshToken","retryError","hasActiveBookings","currentActiveFilter","Avatar","round","has_payment_method","has_pets","handleViewBookingDetails","serviceId","renderServiceCard","handleCloseBookingModal","BecomeProfessional","selectedPets","setSelectedPets","dog","exotics","about","setAbout","certifications","setCertifications","insuranceProof","setInsuranceProof","currentRoute","initializeNavigation","checkboxContainer","petButton","selectedPetButton","petButtonText","selectedPetButtonText","inputBackground","uploadedFileContainer","surfaceVariant","uploadedFilePreview","certificationText","removeFileButton","submitButtonDisabled","loadingIndicator","handleBackPress","togglePetSelection","base64","newCertification","pop","cert","removeCertification","newProof","proof","removeInsuranceProof","confirm","webContent","listSection","webListItem","listItemTitle","switchRoleButton","logoutButton","MoreScreen","initialRoute","initializeRoutes","handleNavigation","menuItems","List","renderMenuItems","items","titleStyle","Divider","removeItem","lightGrey","removeButton","reason","seeMoreButton","seeMoreText","modalTime","UnavailableTimeSlot","onRemove","showAllServices","setShowAllServices","isAllDay","formatTime","format","formatServicesDisplay","timeContainer","AvailabilityBookingCard","handlePress","timeButton","compactTimeButton","webInputContainer","webInput","outline","webIcon","errorBorder","TimePicker","showPicker","setShowPicker","showClockIcon","isChrome","navigator","userAgent","vendor","toTimeString","document","querySelector","SCREEN_HEIGHT","availabilityButton","availableButton","unavailableButton","danger","availabilityButtonText","timePickerContainer","webTimePicker","unavailableTimesContainer","customDropdown","dropdownItemContent","activeToggle","toggleText","bookingsList","emptyState","contentScrollView","unavailableTimesWrapper","bookingsWrapper","selectedDatesText","AddAvailabilityModal","propIsVisible","selectedDates","currentAvailability","onRemoveTimeSlot","setIsAllDay","setStartTime","setEndTime","showStartTimePicker","setShowStartTimePicker","showEndTimePicker","setShowEndTimePicker","selectedServices","setSelectedServices","showServiceDropdown","setShowServiceDropdown","modalWidth","setModalWidth","getModalWidth","activeView","setActiveView","editingBooking","setEditingBooking","dimensionsHandler","remove","isTimeSlotUnavailable","unavailableTimes","existingStartHour","existingStartMin","Number","existingEndHour","existingEndMin","newStartStr","newEndStr","newStartHour","newStartMin","newEndHour","newEndMin","formatSelectedDates","nestedScrollEnabled","renderUnavailableTimes","handleRemoveTimeSlot","timeSlot","updatedAvailability","filteredTimes","renderBookings","dateBookings","handleBookingPress","withoutAll","handleMarkAvailable","handleMarkUnavailable","dates","serviceTypes","DatetimePicker","selectedValues","setSelectedValues","days","hours","minutes","ampm","convertToDate","hour","renderSelect","currentYear","selectStyle","select","errorSelect","monthSelect","yearSelect","daySelect","handleSelectChange","newValues","row","rowIndex","selectContainer","appearance","WebkitAppearance","MozAppearance","ALL_DAYS","settingContainer","dayContainer","selectedTab","selectedTabText","daySettingsContainer","settingRow","enabledText","datePickerWrapper","validationErrorText","DefaultSettingsModal","defaultSettings","selectedDays","setSelectedDays","settings","setSettings","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","showTimePicker","setShowTimePicker","isCurrentlyUnavailable","setIsCurrentlyUnavailable","showDayDropdown","setShowDayDropdown","setValidationError","spring","tension","friction","handleClickOutside","dropdownButton","getElementById","contains","handleAvailabilityChange","makeAvailable","daysToUpdate","newSettings","renderTimePicker","selectedTime","timeString","renderEndDatePicker","daySettings","updateDaySettings","prevSettings","checkCurrentAvailability","d","handleDaySelection","renderDaySettings","newTime","handleContainer","handle","headerMinimized","headerCenter","timeToggleContainer","customToggle","toggleButtonInactive","timeSection","serviceSection","serviceSelector","serviceSelectorText","serviceSelectorError","AvailabilityBottomSheet","onViewUnavailableTimes","onMinimize","isMinimized","setIsMinimized","animatedHeight","animatedOpacity","slideAnimation","getAvailabilityStatus","dateAvailability","isAvailable","validateAndSave","toggleMinimized","newMinimizedState","containerHeight","getStatusColor","timesList","timeSlotContainer","timeSlotContent","timeAndReason","reasonText","bookingButton","UnavailableTimesModal","setHours","getUnavailableTimes","allTimes","processedTimes","timeKey","isBooking","ownerId","renderActionButton","renderTimeSlot","formattedStartTime","formattedEndTime","bottomSheetOverlay","centeredContainer","defaultSettingsButton","defaultSettingsText","colorKeyContainer","colorKeyTitle","colorKeyItem","colorBox","colorKeyText","bottomSheetContainer","calendar","AvailabilitySettings","markedDates","setMarkedDates","setSelectedDates","isAddModalVisible","setIsAddModalVisible","isSettingsModalVisible","setIsSettingsModalVisible","defaultAvailability","setDefaultAvailability","setCurrentAvailability","setDefaultSettings","showBottomSheet","setShowBottomSheet","showUnavailableTimesModal","setShowUnavailableTimesModal","isClosing","setIsClosing","isBottomSheetMinimized","setIsBottomSheetMinimized","availableDates","unavailableDates","updateMarkedDates","combinedAvailability","loadAvailabilityData","newMarkedDates","isFullDay","allServicesSelected","calendarColor","bookingList","marked","dotColor","calendarColorYellowBrown","toggleBottomSheet","show","handleAddAvailability","availabilityData","newCurrentAvailability","IconComponent","showsVerticalScrollIndicator","Calendar","onDayPress","setDate","firstDate","range","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","monthTextColor","arrowColor","indicatorColor","Icon","today","oneYearFromNow","daysMapping","UTC","targetDayNumber","currentDayNumber","getUTCDay","setUTCDate","getUTCDate","applyDefaultSettingsToCalendar","onViewBookings","handleViewBookings","minimized","currentDateAvailability","petCardContent","petImage","petImagePlaceholder","MyPets","fetchPets","PetCard","Card","Content","Title","Paragraph","androidContainer","StatusBar","currentHeight","messageButtonContainer","messageButton","OwnerHistory","ownerData","contracts","invoices","upcomingBookings","contract","Actions","invoice","dateTimeContainer","dateInputGroup","timeInputGroup","numberInput","yearInput","separator","periodButton","periodText","calendarHeaderText","calendarWeekDays","calendarWeekDay","calendarWeek","selectedDay","selectedDayText","timeSelector","timeSelectorColumn","timeSelectorLabel","timeSelectorScroll","timeSelectorItem","timeSelectorText","selectedTimeText","periodContainer","disabledDay","DateTimePicker","isMilitary","onPickerStateChange","inputs","setInputs","period","showCalendar","setShowCalendar","showTimeSelector","setShowTimeSelector","containerRef","hours24","getHours","hours12","getMinutes","isPickerActive","formatTwoDigitInput","numbers","firstDigit","secondDigit","formattedValue","currentInputs","formatYearInput","newInputs","createNewDate","newDate","Pressable","dayNumber","isSelected","validateDateTimeRange","startHour","startMinute","endHour","endMinute","startDateTime","endDateTime","calculateOccurrenceCost","occurrenceData","numPets","numberOfUnits","calculateProratedMultiplier","timeUnit","startYear","startMonth","startDay","endYear","endMonth","endDay","minute","end","startDateOnly","endDateOnly","daysDiff","floor","daysDiffHours","startTimeMinutes","endTimeMinutes","timeDiffHours","totalHours","divisor","baseTotal","additionalAnimalRateTotal","additionalPets","additionalRatesTotal","sum","holidayRateTotal","multiplier","additional_rates_total","total_cost","ANIMAL_COUNT_OPTIONS","dollarSign","rateSection","baseRateInput","timeUnitInput","totalSection","rateAmountContainer","rateAmountInput","addRateButtonText","rateLabelContainer","rateTitleLabel","rateAmountLabel","AddOccurrenceModal","onAdd","hideRates","initialOccurrence","isFromRequestBooking","showDeleteConfirmation","setShowDeleteConfirmation","isAnyPickerActive","setIsAnyPickerActive","heightAnim","initialValues","isCalculatingCost","setIsCalculatingCost","parseInitialDates","oneHourLater","initialDates","setOccurrence","initialState","appliesAfterAnimals","calculatedCost","setUnitOfTime","handlePickerStateChange","currentModalHeight","currentRates","newRates","debouncedCalculateCosts","debounce","initial","timeDiffs","abs","rateChanges","additionalRatesLength","hasInitialValues","hasBookingId","cancel","showAddRate","setShowAddRate","newUnitOfTime","occurrenceRatesUnitOfTime","resetForm","currentInitialValues","currentOccurrence","Picker","itemValue","Item","pickerItem","handleDeleteRate","handleAddRate","handleDeleteClick","handleSubmit","validation","handleAdd","handleDeleteConfirm","serviceOptions","serviceButton","petOptions","dateContainer","timePickerWrapper","dropdownInput","dropdownList","addPetButton","addPetText","occurrenceCard","occurrenceDetails","addOccurrenceButton","addOccurrenceText","occurrenceActions","bookingRequestCard","bookingRequestHeader","bookingRequestTitle","bookingRequestDetails","detailLabel","acceptButton","acceptButtonText","occurrenceCardError","RequestBookingModal","onSubmit","conversationId","showPetDropdown","setShowPetDropdown","showAddOccurrenceModal","setShowAddOccurrenceModal","setOccurrences","selectedOccurrence","setSelectedOccurrence","confirmationModal","setConfirmationModal","occurrenceErrors","setOccurrenceErrors","fetchPreRequestData","getStorage","confirmDeleteOccurrence","occurrenceToDelete","handleDeleteOccurrence","handleOpenOccurrenceModal","pet_type","petDropdown","dropdownPetName","dropdownPetDetails","renderOccurrenceCard","occs","errors","validateOccurrences","selectedServiceObj","conversation_id","finally","newOccurrence","selectedServiceCard","selectedServiceText","selectedPetCard","petImageContainer","defaultPetImage","selectedItemsContainer","selectedItemsTitle","selectedItemsContent","selectedTag","selectedTagText","serviceCheckIcon","ServiceAndPetsCard","onServiceSelect","onPetSelect","currentBookingId","availableServices","setAvailableServices","availablePets","setAvailablePets","isLoadingServices","setIsLoadingServices","isLoadingPets","setIsLoadingPets","serviceError","setServiceError","petsError","setPetsError","fetchAvailableServices","fetchAvailablePets","getBookingAvailableServices","selected_service_id","serviceToSelect","isOvernightForced","getBookingAvailablePets","selected_pet_ids","getServiceIcon","noServicesContainer","selectedPet","image_url","defaultSource","renderPetCard","maxCalendarHeight","isDesktopView","bookingTypeContainer","bookingTypeButton","selectedBookingTypeButton","bookingTypeText","selectedBookingTypeText","dateRangeTypeContainer","dateRangeTypeButton","selectedDateRangeTypeButton","dateRangeTypeText","selectedDateRangeTypeText","calendarContainer","calendarTitle","calendarNavButtonText","weekdaysContainer","weekdayText","weekRow","dateCell","otherMonthDate","otherMonthDateText","dateInRange","selectedDateText","selectedDatesContainer","selectedDatesTitle","selectedDatesList","selectedDateChip","selectedDateChipText","removeButtonText","recurringOptionsContainer","daysOfWeekContainer","dayOfWeekButton","selectedDayOfWeekButton","dayOfWeekText","selectedDayOfWeekText","dateRangeSection","dateRangeRow","dateRangeColumn","dateRangeLabel","dateRangeValue","frequencyContainer","frequencyButton","selectedFrequencyButton","frequencyText","selectedFrequencyText","recurrencePatternContainer","recurrencePatternTitle","recurrencePatternText","modalCloseButtonText","previewButton","previewButtonText","previewModalContent","previewCalendarContainer","recurringDate","recurringDateText","previewDateCell","dateRangeChip","removeRangeButton","oneTimeOptionsContainer","dateSelectionTitle","DateSelectionCard","onDateSelect","bookingType","dateRangeType","initialDateRange","currentMonth","setCurrentMonth","setSelectedDatesList","selectedBookingType","setSelectedBookingType","selectedDateRangeType","setSelectedDateRangeType","rangeStartDate","setRangeStartDate","selectedDaysOfWeek","setSelectedDaysOfWeek","selectedFrequency","setSelectedFrequency","dateRangeEnd","setDateRangeEnd","showRecurringCalendar","setShowRecurringCalendar","recurringStartDate","setRecurringStartDate","recurringEndDate","setRecurringEndDate","setMonth","isSelectingStartDate","setIsSelectingStartDate","showRecurringPreview","setShowRecurringPreview","showRecurringDropdownCalendar","setShowRecurringDropdownCalendar","tempRangeStart","setTempRangeStart","tempRangeEnd","setTempRangeEnd","datesFromRange","setDatesFromRange","lastRangeSelection","setLastRangeSelection","datesArray","dateItem","areConsecutiveDates","checkIfConsecutiveDates","sortedDates","dateData","rangeType","prevDate","currDate","dateRange","handleFrequencySelect","frequency","nextMonth","isDateSelected","handleDateRangeSelection","toggleDateSelection","newSelectedDates","getSelectedDaysText","dayNames","daysText","lastDay","weekNum","getWeekOfMonth","renderCalendar","monthStart","monthEnd","dateIndex","isSelectable","isDateSelectable","isInRange","isDateInRange","isInTempRange","isDateInTempRange","daysOfWeek","handleRecurringDateSelect","handleDateSelection","formatSelectedDate","clearDateRange","renderSelectedDates","handleDayOfWeekSelect","dropdownCalendar","dropdownCalendarContent","dropdownCloseButton","dropdownCloseButtonText","RecurringCalendarPreview","previewMonth","setPreviewMonth","renderPreviewCalendar","recurringDates","getRecurringDates","isRecurring","HOURS","MINUTES","m","PERIODS","timeDisplay","inlineContainer","dropdownContent","column","buttonRow","TimePickerDropdown","initialTime","onTimeSelect","isOpen","uniqueId","showInlinePicker","hourScrollRef","minuteScrollRef","periodScrollRef","initTime","init12Hour","setSelectedTime","lastConfirmedTime","setLastConfirmedTime","timeError","setTimeError","scrollToSelections","handleConfirm","time12h","time24h","triggerTimeChange","handleCancel","hourOffset","scrollTo","animated","minuteOffset","periodOffset","renderDropdownContent","handleHourSelect","handleMinuteSelect","handlePeriodSelect","MaterialIcons","formatTimeDisplay","timeSelectionContainer","dateLabel","timeLabel","timeButtonContent","durationContainer","bgColorModern","durationText","startModalContent","endModalContent","NewTimeRangeSelector","initialTimes","isIndividualDaySelector","times","setTimes","defaultTimes","activeTimePicker","setActiveTimePicker","updatedTimes","formatDate","toLocaleDateString","getStartDate","getEndDate","calculateDuration","diffDays","normalizedStartDate","normalizedEndDate","nights","startMinutes","endMinutes","durationMinutes","durationStr","isEndTimeMidnight","startTotalMinutes","endTotalMinutes","attemptedStart","currentEnd","newTimes","isNewEndTimeMidnight","currentStart","attemptedEnd","DayTimeSelector","onTimeChange","generateUniqueId","match","dateKey","generateDateKey","weekday","timesData","parseTimeValue","timeValue","customizeButtonContainer","customizeButton","customizeButtonText","individualDaysContainer","TimeSelectionCard","showIndividualDays","setShowIndividualDays","shouldShowIndividual","hasIndividualTimes","individualTimeRanges","setIndividualTimeRanges","isInitialRender","hasIndividualTimesFlag","startTimeValue","formattedTimes","hasDatesInDraft","hasDateRange","hasDates","newTimeRanges","dayTime","parsedStartTime","parsedEndTime","handleIndividualDayTimeSelect","updatedRanges","formattedRanges","timeData","handleToggleIndividualDays","getDates","SERVICES_AND_PETS","DATE_SELECTION","TIME_SELECTION","REVIEW_AND_RATES","spacer","smallMargin","smallScreenButton","cancelButtonSmall","nextButtonSmall","stepContent","confirmButtonColumn","BookingStepModal","onComplete","dateSelectionData","hasFetchedDates","getBookingDraftDatesAndTimes","parsedData","parseOccurrencesForBookingSteps","knownOvernightTerms","isOvernightService","term","firstOcc","lastOcc","daysDifference","occ1Date","occ2Date","daysBetween","date1","date2","date_range_type","initialCheck","afterOccurrenceChecks","finalIsOvernightForced","individualTimes","allTimesAreTheSame","booking_type","fetchDraftDatesAndTimes","handleServiceSelect","matchesOvernightTerms","handlePetSelect","handleDateSelect","currentDateRangeType","isServiceOvernight","isTimesOvernightForced","newDateRange","handleTimeSelect","hasValidDates","hasValidDateRange","hasValidDateSelectionData","updateBookingDraftPetsAndServices","isServiceOvernightFlag","isTimeOvernightFlag","isAnyOvernightFlag","formatDateForAPI","formatTimeForAPI","userTz","utcStartDate","utcStartTime","convertToUTC","utcEndDate","utcEndTime","updateBookingDraftTimeAndDate","isTimeOvernight","isMultiDayRange","serviceIsOvernight","timesIsOvernightForced","endTimeIsMidnight","isMidnightEndTimeButNotForced","updatedBookingData","isNonOvernightDateRange","willUseEndpoint","formattedDates","dayTimes","needsNextDayDate","endDateObj","formattedEndDate","calculatedEndDate","isDifferentDates","updateBookingDraftMultipleDays","updateBookingDraftRecurring","stack","createBookingFromDraft","bookingMessageData","bookingMessage","type_of_message","sent_by_other_user","resetModal","dateSelectionIsOvernightMode","combinedMode","isOvernightMode","dateCount","combinedOvernight","sentCard","receivedCard","approvalCard","confirmedCard","colorBar","colorBarLeft","colorBarRight","requestHeader","approvalHeader","confirmedHeader","requestTitle","approvalTitle","changeRequestTitle","infoSection","datesSection","datesSectionHeader","datesCount","occurrenceContainer","occurrenceItem","dateTimeText","dstMessage","detailsButton","detailsButtonText","approveButtonText","statusOverlay","changeMessageContainer","changeMessageLabel","changeMessageText","showMoreButton","showMoreText","confirmationContainerClickable","confirmationContainer","confirmationText","confirmedTitle","confirmationBorder","BookingMessageCard","displayType","isFromMe","onEditDraft","hasChangeRequest","isNewestMessage","messageCreatedAt","hasNewerApprovalRequests","isAfterConfirmation","approvalModalVisible","setApprovalModalVisible","safeInitialData","setSafeInitialData","showAllDates","setShowAllDates","preparedData","isConfirmed","isChangeRequest","isBookingConfirmed","shouldShowAsApproval","shouldShowOverlay","overlayText","overlayLogicChecks","isConfirmedButNotConfirmationMessage","isChangeRequestAndNewestMessage","isApprovalWithChangeRequest","isBookingConfirmedWithNewerApprovals","handleOpenApprovalModal","tempData","formatOccurrenceDateRange","formattedRange","checkDSTChange","startMoment","moment","tz","endMoment","utcOffset","dst_message","formatted_start","formatted_end","getOccurrenceDuration","hoursDiff","diff","hasMoreDates","visibleOccurrences","hiddenDatesCount","getCardStyle","baseStyle","getTitle","getCostValue","isLastVisibleItem","showBottomBorder","toggleDatesExpansion","DraftConfirmationModal","onContinueExisting","onCreateNew","useWebSocket","messageType","handlerId","random","substr","isConnected","setIsConnected","connectionStatus","setConnectionStatus","statusUpdateTimeRef","handlerRegisteredRef","failedAttemptsRef","unregisterHandlers","websocketManager","init","unregister","registerHandler","unregisterConn","prevStatus","prevConnected","unregisterUserStatus","user_id","is_online","initialize","initialConnectionCheck","initialCheckTimeout","checkStatus","secondsSinceUpdate","actuallyConnected","send","sendMessage","payload","reconnect","markMessagesAsRead","messageIds","message_ids","disconnect","connect","bind","simulateConnection","isUsingFallback","MessageHistory","headerTitle","mainSection","conversationListContainer","conversationItem","selectedConversation","conversationName","messageSection","messageHeader","messageHeaderName","messagesContainer","messageList","inputSection","attachButtonContainer","attachButton","inputInnerContainer","sendButton","messageCard","messageContent","sentMessage","receivedMessage","messageText","sentMessageContainer","receivedMessageContainer","senderAbove","sentSenderName","receivedSenderName","timestampBelow","sentTimestamp","receivedTimestamp","sentMessageText","receivedMessageText","touchAction","WebkitTapHighlightColor","WebkitUserSelect","userSelect","resize","overflowY","conversationContent","conversationHeader","conversationNameContainer","conversationTime","conversationLastMessageContainer","conversationLastMessage","conversationUnreadBadge","unreadMessage","bookingStatusContainer","requestBookingButton","requestBookingLabel","messageListContainer","activeConversationText","mobileMessageView","mobileHeader","mobileContent","sendButtonMobile","mobileHeaderContent","mobileHeaderName","mobileHeaderNameContainer","backArrow","sentBookingRequest","receivedBookingRequest","inlineDetailRow","dateSection","viewBookingButton","viewBookingText","statusContainer","deletedOverlay","deletedText","occurrenceNumber","loadingMore","searchContainer","searchInputContainer","searchIcon","clearButton","searchInput","messageHeaderContent","editDraftButton","editDraftText","conversationUnreadText","unreadBadge","unreadBadgeText","conversationNameRow","mobileEditDraftButton","isLoadingConversations","setIsLoadingConversations","isLoadingMessages","setIsLoadingMessages","isSearchFocused","setIsSearchFocused","setSelectedConversation","selectedConversationData","setSelectedConversationData","setMessages","isSending","setIsSending","showRequestModal","setShowRequestModal","showDropdown","setShowDropdown","conversations","setConversations","filteredConversations","setFilteredConversations","hasMore","setHasMore","currentPage","setCurrentPage","isLoadingMore","setIsLoadingMore","prevScreenWidthRef","isInitialLoad","setIsInitialLoad","initialLoadRef","showBookingStepModal","setShowBookingStepModal","setCurrentBookingId","searchQuery","setSearchQuery","hasDraft","setHasDraft","draftData","setDraftData","showDraftConfirmModal","setShowDraftConfirmModal","wsConnectionStatus","setWsConnectionStatus","forceRerender","setForceRerender","resetNotifications","updateRoute","markConversationAsRead","getConversationUnreadCount","MessageNotificationContext","isHandlingRouteParamsRef","hasLoadedMessagesRef","shouldOpenBookingCreationRef","markMessagesAsReadRef","lastViewedConversationRef","isLoadingMoreRef","processedPagesRef","messageIdsRef","handleWebSocketMessage","statusUserId","isOnline","prevConversations","updatedConversations","conv","participant1Id","participant2Id","other_participant_online","updatedCount","selectedParticipant1Id","selectedParticipant2Id","prevMessages","msg","_isOptimistic","_wasOptimistic","last_message","last_message_time","WebSocket","currentUrl","urlConversationId","fetchConversations","setParams","messageId","otherUserName","clientId","conversationsData","initializeData","selectedConversationId","is_professional","handleCreateBooking","isHandlingRouteParams","conversation","other_user_name","newUrl","pushState","hasSelectedConversationChanged","hasLoaded","hasChanged","shouldOpenBookingCreation","isCurrentOperation","fetchMessages","prevWidth","hasWidthCrossedThreshold","crossedThreshold","lowercaseQuery","filtered","requestUrl","conversationsWithOnlineStatus","page","pageKey","clear","newMessages","uniqueMessages","has_draft","existingIds","Boolean","messagesToAdd","has_more","config","SendNormalMessage","updatedConversation","createNewDraft","draft_id","loadMoreMessages","renderMessage","bookingMessages","created_at","groupMessagesByBookingId","confirmedBookingIds","bookingsWithUpdates","messagesForBooking","confirmationMessage","confirmationTime","newerApprovalRequests","bookingIsConfirmed","bookingMessagesList","hasAssociatedChangeRequest","isApprovalMessage","booking_status","isUpdateToConfirmedBooking","hasNewerRequestChanges","showEditDraft","handleEditDraft","isNewestChangeRequest","hasNewerApprovalMessages","originalIsNewest","hasNewerApprovals","effectivelyNewest","isRelatedToUpdate","hasOlderBookingConfirmedMessage","hasOlderApprovalMessage","payout","WebInput","setMessage","inputRef","isProcessingRef","handleSend","messageToSend","scrollTop","optimisticMessage","is_clickable","filteredMessages","adjustHeight","newHeight","scrollHeight","onKeyPress","shiftKey","rows","handleSearch","renderConversationList","onFocus","onBlur","otherParticipantName","participant2_name","participant1_name","convId","convIdType","selectedId","selectedIdType","unreadCount","toLocaleTimeString","bookingPendingStatus","MessageFlatList","senderHash","contentHash","typeHash","onEndReached","onEndReachedThreshold","inverted","maintainVisibleContentPosition","minIndexForVisible","autoscrollToTopThreshold","ListFooterComponent","removeClippedSubviews","extraData","getItemLayout","offset","renderMessageSection","profile_photo","handleOpenExistingDraft","createDraftFromBooking","draftId","handleBeforeUnload","initialConversationId","bookingRequestResponse","modalData","messageResponse","isUpdate","lastMessageText","handleContinueExisting","stripePromise","Elements","useStripe","useElements","CardElement","IbanElement","ELEMENT_OPTIONS","supportedCountries","base","fontSmoothing","invalid","iconColor","WebPaymentForm","paymentType","stripe","elements","bankFields","setBankFields","accountNumber","routingNumber","complete","handleBankFieldChange","updatedFields","isAccountNumberValid","isRoutingNumberValid","className","NativePaymentElement","StripePaymentElement","stripeReact","loadStripe","initializeStripe","bankInputsContainer","bankInput","sectionContainer","segmentedButtons","methodInfo","methodType","primaryOptionsContainer","checkboxRow","checkboxLabel","cardActions","dialog","loadingOverlay","verificationNeeded","amountsContainer","amountInput","verificationText","addIconButton","PaymentMethods","setPaymentMethods","confirmPrimaryDialogVisible","setConfirmPrimaryDialogVisible","selectedMethod","setSelectedMethod","primaryAction","setPrimaryAction","newPaymentMethod","setNewPaymentMethod","cardNumber","expiryDate","cvc","isConfirming","setIsConfirming","deleteDialogVisible","setDeleteDialogVisible","methodToDelete","setMethodToDelete","deleteError","setDeleteError","cardComplete","setCardComplete","cardElement","setCardElement","stripeElement","setStripeElement","bankAccountComplete","setBankAccountComplete","verificationModalVisible","setVerificationModalVisible","verificationAmounts","setVerificationAmounts","first","second","verifyingMethod","setVerifyingMethod","modalLoading","setModalLoading","isPrimaryPayment","isPrimaryReceive","is_verified","brand","checkStripeReady","handleEditMethod","handleDeleteMethod","handleSetPrimary","confirmSetPrimary","prevMethods","confirmDeleteMethod","handleVerifyBankAccount","handleVerificationSubmit","firstAmount","secondAmount","simulateBackendVerification","reject","updateMethod","methods","handlePaymentChange","handleSavePaymentMethod","createPaymentMethod","getElement","paymentMethodData","paymentMethod","createToken","currency","routing_number","account_number","account_holder_type","bank_account","bank_name","IconButton","STRIPE_PUBLISHABLE_KEY","handleAddMethod","Dialog","SegmentedButtons","buttons","animating","warningContainer","warningText","Settings","settingsItems","appName","paragraph","listItem","PrivacyPolicy","ProfessionalSettings","testSection","TermsOfService","HelpFAQ","ContactUs","handleFormspreeSubmit","useForm","maxContentWidth","succeeded","ValidationError","prefix","submitting","SearchBar","forwardRef","initialValue","setValue","focus","returnKeyType","blurOnSubmit","memo","androidSafeArea","searchAndFilterContainer","searchBar","ownerList","ownerCard","petTypes","petChip","noOwnersContainer","filtersContainer","filterChip","applyButton","closeIcon","Owners","selectedFilters","setSelectedFilters","tempFilters","setTempFilters","isFilterModalVisible","setIsFilterModalVisible","owners","setOwners","fetchOwners","toggleFilter","prevFilters","f","applyFilters","filteredOwners","matchesSearch","matchesFilters","every","lastBookingDate","weekAgo","monthAgo","yearAgo","setFullYear","renderOwner","Chip","handleSearchChange","query","keyboardShouldPersistTaps","CostCalculationModal","onContactPress","setStartDate","setEndDate","additionalAnimals","setAdditionalAnimals","isHolidayRate","setIsHolidayRate","selectedRates","setSelectedRates","setTotalCost","platformFees","setPlatformFees","ratesObj","calculateTotalCost","persistentScrollbar","counterContainer","counterButton","counterText","finalTotal","finalTotalText","contactButton","contactButtonText","dateColumn","heartButton","flexShrink","animalTypeContainer","calculateButton","calculateButtonText","ServiceCard","onHeartPress","isFavorite","professionalId","isModalVisible","setIsModalVisible","handleContactPress","existingConversation","newConversation","createNewConversation","isCurrentUserOwner","unshift","WebMap","mockReviews","createElement","textContent","head","appendChild","topSection","gallerySection","bottomSection","aboutSection","hostingSection","hostTitle","weightRanges","weightRange","galleryPhoto","statItem","skillsGrid","skillBadge","skillText","photoGallery","calculatorText","additionalRatesButton","additionalRatesText","calendarSection","readMoreButton","readMoreText","reviewItem","mapContainer","petsSection","aboutSubsections","communicationSection","skillsSection","homeDetails","twoColumnLayout","singleColumnLayout","homeFeaturesGrid","featureBubble","reviewHeader","reviewerPhoto","reviewerInfo","reviewerName","modalCloseIcon","modalScrollContent","reviewsGrid","specialistSection","specialistText","modalReviewItem","leftColumnMobile","seeAllButton","seeAllButtonText","modalServicesGrid","reviewMeta","starContainer","ProfessionalProfile","professionalData","setProfessionalData","canGoBack","setCanGoBack","bioModalVisible","setBioModalVisible","reviewsModalVisible","setReviewsModalVisible","specialistModalVisible","setSpecialistModalVisible","favoriteServices","setFavoriteServices","servicesModalVisible","setServicesModalVisible","useResponsiveLayout","profileSectionMobile","servicesBox","hasHistory","handlePopState","storedProfessional","loadProfessionalData","toggleFavorite","renderProfilePhoto","renderRatingStars","TruncatedText","maxLines","renderMap","MapContainer","TileLayer","Marker","center","zoom","attribution","styles2","HomeFeature","renderReview","review","renderAvailability","servicesScroll","servicesWrapper","servicesScrollContent","homeSection","noContractsText","contractTitle","ContractList","setContracts","fetchContracts","modalPicker","dropdownButtonText","pickerModalContainer","pickerCloseButton","pickerCloseButtonText","OwnerPicker","selectedOwner","onSelectOwner","showOwnerPicker","setShowOwnerPicker","templateGrid","templateBox","templateTitle","noTemplatesText","ownerPickerContainer","ContractTemplate","templates","isTemplateModalVisible","setTemplateModalVisible","isEditModalVisible","setEditModalVisible","selectedTemplate","setSelectedTemplate","contractContent","setContractContent","setSelectedOwner","template","handleTemplateSelect","handleAddSignableField","prevContent","chronicleTitle","summary","ChronicleSummary","chronicles","chronicle","outerContainer","boxShadow","QuestionInput","dropdownPosition","setDropdownPosition","layout","setLayout","handleChange","useLayoutEffect","body","toggleDropdown","onLayout","nativeEvent","q","createButton","createButtonText","webModalContent","petOption","petOptionText","photoPreview","photoThumbnail","questionContainer","modalButtonContainer","addQuestionButton","addQuestionButtonText","answerInputContainer","answerInput","summaryInput","photoContainer","ChronicleForm","onCreateChronicle","questions","setQuestions","question","answer","isPreset","setSummary","photos","setPhotos","isUploading","setIsUploading","isCreating","setIsCreating","updateQuestion","newQuestions","PhotoPreview","c","addNewQuestion","allowsMultipleSelection","uploadingText","uploadingSpinner","handleCreateChronicle","newChronicle","useTemplateButton","useTemplateButtonText","MyContracts","setChronicles","setTemplates","fetchChronicles","fetchTemplates","prevChronicles","successText","ChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","setSuccess","setToken","storedToken","getToken","current_password","new_password","profileImageContainer","profileImagePlaceholder","boldLabel","customInput","leftTab","rightTab","yesNoContainer","yesNoButton","activeYesNoButton","yesNoText","datePicker","documentsContainer","documentThumbnail","galleryContainer","galleryThumbnail","AddPet","stored","setPetName","setPetType","setAnimalType","setWeight","setBreed","setAgeYears","setAgeMonths","setSex","setFriendlyWithChildren","setFriendlyWithCats","setFriendlyWithDogs","setSpayedNeutered","setHouseTrained","setMicrochipped","setAdoptionDate","setDescription","setProfileImage","setPottyBreakSchedule","customPottyBreak","setCustomPottyBreak","setEnergyLevel","setFeedingSchedule","customFeedingSchedule","setCustomFeedingSchedule","setLeftAlone","customLeftAlone","setCustomLeftAlone","setMedication","medicationDetails","setMedicationDetails","setAdditionalInstructions","setVetName","setVetAddress","setVetPhone","setVetDocuments","setInsuranceProvider","setGalleryImages","estimatedBirthday","setEstimatedBirthday","veterinarian","estimatedDate","renderTab","renderToggleButtons","customValue","setCustomValue","renderYesNoButtons","setter","birthDate","calculateAge","All","prevImages","resizeMode","handleSaveProfile","fileName","img","renderSexButtons","itemText","selectedText","chipsContainer","chip","chipText","chipRemove","tooltipContainer","tooltipHeader","Tooltip","setVisible","suggestionsWrapper","suggestionsContainer","suggestionItem","ServiceTypeSelect","showSuggestions","setShowSuggestions","filteredServices","setFilteredServices","handleSelectService","LocationInput","suggestions","onSuggestionSelect","locationInputRef","debouncedFetch","fetch","json","display_name","lat","lon","locationInputWrapper","locationInput","suggestion","AnimalTypeButton","animalTypeButton","animalTypeButtonSelected","animalTypeLabel","animalTypeLabelSelected","xlarge","datePickersContainer","dateInput","priceRangeContainer","slider","priceText","dropdownItemSelected","dropdownItemTextSelected","personButton","showProfessionalsButton","showProfessionalsText","useLocationButton","useLocationText","animalTypesContainer","priceContainer","priceLabel","headerButtons","iconButton","checkboxLabelContainer","searchButton","searchButtonText","SearchRefiner","onFiltersChange","onShowProfessionals","locationSuggestions","setLocationSuggestions","setService","selectedAnimals","setSelectedAnimals","overnightService","setOvernightService","priceRange","setPriceRange","verifiedOnly","setVerifiedOnly","insuredOnly","setInsuredOnly","handleAnimalSelect","Slider","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","ProfessionalCard","leftSection","nameSection","priceSection","fromText","perNight","reviewSection","ratingText","repeatOwners","bestReviewContainer","bestReviewTextContainer","readMore","listContent","mobileHeaderRight","filterChips","filterChipText","ProfessionalList","professionals","onLoadMore","onProfessionalSelect","filters","onFilterPress","L","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","WebMapComponent","onMarkerPress","MarkerIcon","html","iconSize","iconAnchor","popupAnchor","eventHandlers","click","Popup","popupContent","startingRate","markerText","calloutContainer","calloutText","MapView","SearchProfessionalsListing","isSingleView","setIsSingleView","setProfessionals","setFilters","isMapMinimized","setIsMapMinimized","isLeftColumnExpanded","setIsLeftColumnExpanded","showingSearch","setShowingSearch","setRegion","latitudeDelta","longitudeDelta","activeFilters","setActiveFilters","handleFiltersChange","newFilters","handleLoadMore","handleProfessionalSelect","toggleMapSize","handleShowProfessionals","view","toggleLeftColumn","borderRightWidth","borderRightColor","leftColumnToggle","mapColumn","containerMobile","mobileHeaderText","headerIcon","mapToggleButton","renderContent","leftColumnWidth","mapColumnWidth","bookingsContent","stickyHeader","stickyHeaderContent","filterScrollContent","filtersWrapper","filterButtonHovered","filterContent","allButton","allButtonText","pendingButton","pendingButtonText","confirmedButton","confirmedButtonText","completedButton","completedButtonText","listHeaderSpacing","listContainer","loadingMoreContainer","emptyStateSubtitle","outlineWidth","MyBookings","setPage","hoveredFilter","setHoveredFilter","subscription","fetchBookings","pageNum","isLoadMore","page_size","newBookings","professional_bookings","owner_bookings","searchLower","renderBookingCard","handleViewDetails","onCancel","handleCancelBooking","ListHeaderComponent","EmptyStateMessage","AddRateModal","setAmount","SnackBar","showAnimation","hideAnimation","hideTimer","stop","RequestChangesModal","setReason","reasonInput","costRow","totalRow","payoutRow","policyText","denybuttonText","primaryButton","denyButton","statusLabel","noContentText","editField","editableServiceRow","removeServiceButton","editRow","timeDropdownList","bookingDatesSection","sectionSubtitle","dateTimeRow","timePickerButton","rateSectionTitle","rateInputRow","additionalRateRow","summarySection","summaryRow","rateHeaderRow","columnHeader","rateAmountColumn","rateActionButtons","infoButton","actionButtonsContainer","serviceEditContainer","serviceInputRow","serviceDetailsContainer","serviceDetailRow","actionButtons","editOccurrenceButton","editOccurrenceText","occurrenceCostRow","occurrenceCostHeader","occurrenceCostHeaderText","costAndIcon","expandedCostDetails","costDetailRow","costDetailText","sectionEditButton","noPetsText","dateTimeSection","proName","serviceTypeLabel","petListTitle","occurrenceTitle","occurrenceDate","occurrenceTime","costBreakdownTitle","costLabel","costAmount","additionalRateLabel","additionalRateAmount","serviceDetailLabel","serviceDetailValue","occurrenceCardTitle","occurrenceCardDate","occurrenceCardTime","summaryText","occurrenceCardText","BookingDetails","setBooking","isProfessionalView","setIsProfessionalView","isPetsEditMode","setIsPetsEditMode","isServiceEditMode","setIsServiceEditMode","expandedOccurrenceIds","setExpandedOccurrenceIds","defaultOccurrenceRates","setDefaultOccurrenceRates","occurrenceError","setOccurrenceError","editedBooking","setEditedBooking","serviceDetails","additionalPetRate","holidayFee","weekendFee","extraServices","timeDropdownPosition","setTimeDropdownPosition","showAddRateModal","setShowAddRateModal","showAnimalDropdown","setShowAnimalDropdown","isPetsSaving","setIsPetsSaving","isServiceSaving","setIsServiceSaving","showRequestChangesModal","setShowRequestChangesModal","actionLoading","setActionLoading","snackBar","setSnackBar","formattedOccurrences","utcTimes","formattedOccurrence","formatOccurrenceFromUTC","timezone_abbrev","transformedBooking","num_pets","original","transformed","fetchBooking","getDisplayValue","canEdit","can_edit","togglePetsEditMode","currentPets","selectedPetsSet","ok","Pending","Confirmed","Canceled","Completed","recalculateTotals","quantity","extraServicesTotal","additionalPetTotal","ownerFee","handleDateTimeCardPress","timeUnits","calculateTimeUnits","diffMs","calculateBaseTotal","parseDateTime","dateStr","timeStr","utcDate","localDate","localHours","formattedTime","transformedOccurrence","calculateMultiple","formatOccurrenceDate","rawDate","handleStatusUpdate","newStatus","messageSent","recipientId","sendBookingMessage","currentStatus","updatedBooking","availableBookings","bookingKey","statusReason","updated_at","updateBookingStatus","showConfirmation","handleActionButtonClick","action","additionalData","handleAddOccurrenceClick","updateServiceType","StatusBadge","testID","petRow","prevBooking","expanded","prevIds","currentIds","newIds","renderActionButtons","updatedOccurrence","currentBookingOccurrences","occurrenceIndex","updatedStartTimeUTC","updatedEndTimeUTC","finalIndex","startUTC","endUTC","updatedOccurrenceData","is_updated","existingOccurrences","oldOccurrences","newOccurrences","handleSaveOccurrence","newOccurrenceData","local","utc","allOccurrences","formatted","ServiceManagerScreen","fetchServices","previousRoute","setRouteHistory","searchBarContainer","noResultsContainer","noResultsText","webSearchInput","BlogScreen","filteredPosts","setFilteredPosts","truncatedContent","authorBio","postInfo","referencesTitle","reference","referenceText","errorButton","errorButtonText","BlogPost","setPost","isValidPost","postData","storedPost","parsedPost","postId","foundPost","loadPost","Linking","openURL","handleReferencePress","CrossPlatformContent","formSection","nameField","checkboxGroup","checkboxIcon","radioGroup","radioContainer","radio","radioSelected","radioLabel","otherInputContainer","otherInput","addressSection","cityStateContainer","cityInput","stateInput","zipInput","addressNote","optional","referralSection","buttonSelected","buttonTextSelected","requiredFieldNote","requiredAsterisk","linkContainer","copyButton","Waitlist","setPetInfo","userType","setUserType","hesitations","setHesitations","desiredFeatures","setDesiredFeatures","newsletter","setNewsletter","agreeToTerms","setAgreeToTerms","otherService","setOtherService","showOtherInput","setShowOtherInput","streetAddress","setStreetAddress","aptUnit","setAptUnit","stateRegion","setStateRegion","zipCode","setZipCode","referralSource","setReferralSource","otherReferralSource","setOtherReferralSource","handleBackToSignup","handleCopyLink","Clipboard","setString","toggleService","apt_unit","zip_code","TestToast","showSuccessToast","showErrorToast","showInfoToast","showWarningToast","showLongToast","topRow","profileInfoWrap","avatar","nameContainerWide","petsText","petsTextWide","textOverflow","servicesLabel","servicesText","servicesTextWide","statusSection","lastBookingContainer","lastBookingText","noBookingsContainer","noBookingsText","pastBookingsContainer","pastBookingsText","upcomingContainer","upcomingText","buttonSection","buttonSectionWrap","mobileBtnSection","viewProfileButton","viewProfileText","createBookingButton","createBookingText","buttonHovered","activeBookingsContainer","activeBookingsText","ConnectionCard","connection","onViewProfile","onCreateBooking","isClient","isExtraWideScreen","isViewMessagesHovered","setIsViewMessagesHovered","isCreateBookingHovered","setIsCreateBookingHovered","active_bookings_count","textStyle","has_past_booking","connectionId","connectionName","connectionType","hasActivePastBooking","activeBookingsCount","upcoming_booking","connectionsContent","searchAndInviteContainer","searchContainerFocused","caretColor","inviteButtonSmall","inviteButtonSmallText","activeBookingsButton","activeBookingsButtonText","noBookingsButton","noBookingsButtonText","pastBookingsButton","pastBookingsButtonText","inviteButton","inviteButtonText","footerText","inviteTypeToggle","inviteTypeButton","inviteTypeButtonActive","inviteTypeText","inviteTypeTextActive","emailInput","generatedLinkContainer","generatedLink","sendInviteButton","sendInviteButtonText","columnWrapper","cardWrapper","mobileCardWrapper","wideScreenCardWrapper","Connections","setConnections","showInviteModal","setShowInviteModal","inviteEmail","setInviteEmail","isInviting","setIsInviting","searchFocused","setSearchFocused","searchInputRef","allConnections","setAllConnections","invitationType","setInvitationType","setGeneratedLink","inviteError","setInviteError","inviteSuccess","setInviteSuccess","isInviteButtonHovered","setIsInviteButtonHovered","isCreateServiceButtonHovered","setIsCreateServiceButtonHovered","handleRoleNavigation","fetchConnections","getUserConnections","connectionsList","newConnections","filterConnectionsLocally","handleInviteClient","baseConnections","handleViewMessages","clientName","client_id","numColumns","columnWrapperStyle","clients","all","active","pending","past","clipboard","writeText","inviteClient","invitation_link","Stack","createStackNavigator","screens","createBottomTabNavigator","component","isMobileView","isUserScrolling","setIsUserScrolling","AutoScrollSection","cardWidth","currentIndex","setCurrentIndex","userScrolling","setUserScrolling","autoScrollTimerRef","nextIndex","scrollToIndex","handleScrollEnd","onScroll","contentOffset","scrollEventThrottle","pagingEnabled","onScrollBeginDrag","handleScrollBegin","onScrollEndDrag","onMomentumScrollEnd","handleDotPress","cardStyles","Features","roadmapColors","featureItemStyle","featureContentStyle","FontAwesome6","FontAwesome","ReviewsSection","BlogSection","renderBlogPost","tagIndex","ContactSection","showPassword","setShowPassword","rememberMe","setRememberMe","handleLogin","timezoneError","tutorialResponse","needsTutorial","first_time_logging_in","first_time_logging_in_after_signup","tutorialError","handleDocumentKeyPress","handleKeyPress","togglePasswordVisibility","uid","linking","enabled","prefixes","Home","About","SignIn","path","Invite","exact","ResetPassword","ResetPasswordConfirm","senderName","More","Blog","navigationRef","createNavigationContainerRef","isReady","MVPWarning","checkBannerStatus","warningBanner","warningContent","waitlistButtonText","AppContent","authContext","checkAuthStatus","setInitialRoute","authStatus","isAuthenticated","initializeApp","Navigator","initialRouteName","screenOptions","headerShown","Navigation","TransitionPresets","SlideFromRightIOS","presentation","Screen","App","NavigationContainer","onStateChange","AuthProvider","MessageNotificationProvider","PaperProvider","handleAuthError","code","getApiClient","baseURL","createApiClient","apiClient","utcDates","startTimeStr","endTimeStr","endDateStr","isMidnightEnd","isTimeBeforeStart","recurringData","getUserName","isFormData","formattedAdditionalRates","authError","getConnectionProfile","userId","is_professional_invite","sendReferral","referralType","referral_type","getInvitations","getInvitationDetails","acceptInvitation","deleteInvitation","resendInvitation","getUnreadMessageCount","unread_count","unread_conversations","prevPrevRoute","toLocation","fromLocation","currentPreviousRoute","reset","descriptors","isMenuOpen","setIsMenuOpen","setIsCollapsed","hasUnreadMessages","setCurrentRoute","setNotificationCount","toggleMenu","updateCurrentRoute","screenName","tabName","initializeRouteTracking","handleRoleSwitch","newRole","currentTab","newTab","connectionsTab","handleLogout","navContainer","renderDesktopSidebar","sidebarWidth","isProfessionalRole","isOwnerRole","sidebarContainer","sidebarLogoContainer","logoButton","sidebarLogo","tintColor","roleToggleContainer","roleToggleTitle","roleButtonsContainer","roleButton","roleButtonActive","currentRole","roleButtonText","roleButtonTextActive","roleButtonDisabled","roleButtonTextDisabled","showNotification","sidebarItem","activeItem","messageNotificationBadge","messageNotificationText","sidebarItemText","logoutText","renderMobileHeader","logoSize","mobileLogo","mobileRightContent","profileContainer","mobileMenu","mobileRoleToggleContainer","mobileRoleToggleTitle","mobileRoleButtonsContainer","mobileRoleButton","mobileRoleButtonActive","mobileRoleButtonText","mobileRoleButtonTextActive","mobileRoleButtonDisabled","mobileRoleButtonTextDisabled","mobileMenuItem","mobileMessageNotificationBadge","mobileMessageNotificationText","mobileMenuItemText","mobileLogoutItem","mobileLogoutText","titleContainer","titleContainer2","desktopNav","navItem","customNavBar","navButton","navText","webNavItem","webNavText","navLinkContainer","menuContent","notificationText","messageNotificationDot","mobileMessageNotificationDot","NODE_ENV","process_env_NODE_ENV","STAGING_API_BASE_URL_ANDROID","STAGING_API_BASE_URL_IOS","STAGING_API_BASE_URL_WEB","PRODUCTION_API_BASE_URL_ANDROID","PRODUCTION_API_BASE_URL_IOS","PRODUCTION_API_BASE_URL_WEB","DEV_API_BASE_URL_ANDROID","DEV_API_BASE_URL_IOS","DEV_API_BASE_URL_WEB","platform","stripeInstance","initStripe","getStripeModule","debugEnabled","setDebugEnabled","AuthService","constructor","this","accessToken","isRefreshing","refreshSubscribers","tokenExpiryTime","lastValidation","setDebug","parseJwt","jsonPayload","atob","decodeURIComponent","charCodeAt","Buffer","getTimeUntilExpiry","parsedToken","exp","expiryTime","checkTokenFreshnessOnReturn","timeUntilExpiry","refreshTokens","hasAccessToken","hasRefreshToken","getAccessToken","token_type","clearTokens","validateToken","setTokens","is_PRODUCTION","authService","isInitializedRef","setIsSignedIn","setUserRole","setIsApprovedProfessional","setTimeSettings","setIsPrototype","setIsDebug","requestInterceptor","interceptors","request","use","responseInterceptor","originalRequest","_retry","refreshError","eject","handleWindowFocus","visibilityState","fetchUserName","getProfessionalStatus","suggestedRole","handleDimensionsChange","first_name","is_approved","multiRemove","refreshTokenValue","timeSettingsData","initialRole","getCurrentRoute","setHasUnreadMessages","setUnreadCount","conversationCounts","setConversationCounts","websocketInitialized","setWebsocketInitialized","lastApiCheck","setLastApiCheck","initialCheckDoneRef","pendingCheckRef","reconnectIntervalRef","debounceTimerRef","websocketDataReceivedRef","lastCheckTimeRef","websocketTimeoutRef","websocketRetryAttemptsRef","lastHeartbeatReceivedRef","lastHeartbeatSentRef","heartbeatTimeoutRef","connectionHealthyRef","initialApiCallMadeRef","lastApiResponse","setLastApiResponse","lastApiCheckRef","checkUnreadMessages","force","stackTrace","makeApiCall","websocketConnected","isWebSocketConnected","waitForWebSocketWithFallback","checkWebSocketAndWait","connected","conversationUnreadCounts","conversation_counts","debouncedCheckUnreadMessages","onNewMessage","messageData","sender_name","handleNewMessageNotification","prevCount","newCount","prevCounts","prevConvCount","newConvCount","updatedCounts","previousCount","newCounts","stillHasUnread","remainingConvs","initializeWebSocket","messageHandler","unreadUpdateHandler","heartbeatHandler","connectionHandler","forced","handleVisibilityChange","isWSConnected","reconnectIfNeeded","startProgressiveRetry","contextValue","routeName","DefaultTheme","typography","accent","parseISO","momentDate","convertTo24Hour","modifier","convertTo12Hour","fromTimezone","localMoment","utcMoment","utcTime","output","originalMoment","isoString","parseError","toDate","timeParts","localDateStr","localTimeStr","getFormattedTimes","startHours","endHours","startDateStr","formatInTimeZone","durationMs","remainingMs","startLocalDate","endLocalDate","startZonedDate","fromZonedTime","toZonedTime","endZonedDate","startLocal","endLocal","getTimezoneOffset","fullTimezone","localStart","localEnd","hasDSTChange","tzAbbrev","FORMAT_TYPES","SHORT_DATE","MEDIUM_DATE","LONG_DATE","TIME_ONLY","TIME_ONLY_24H","DATE_TIME","DATE_TIME_WITH_TZ","DATE_RANGE","DATE_TIME_RANGE","formatFromUTC","formatType","zoneAbbr","startUtcMoment","endUtcMoment","startLocalMoment","endLocalMoment","startFormatted","endFormatted","finalStart","finalEnd","convertTimeFromUTC","dateChanged","fullDateTime","adjustedDate","uniqueDates","sortedOccurrences","localStartTime","localEndTime","actualStartDate","actualEndDate","firstDateKey","timeObj","socket","connectionAttempts","maxConnectionAttempts","heartbeatInterval","disconnectTimeout","messageHandlers","Map","wsUrl","_reconnectTimeout","forceDisconnect","_hasVisibilityListener","readyState","OPEN","CLOSING","CLOSED","resetDisconnectTimeout","setupVisibilityListener","CONNECTING","wsEndpoint","onopen","handleOpen","onclose","onmessage","handleMessage","onerror","handleError","scheduleReconnect","startHeartbeat","notifyHandlers","wasConnected","delay","pow","preserveToken","savedToken","close","handler","unregisterHandler","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","ns","def","getOwnPropertyNames","definition","defineProperty","enumerable","chunkId","promises","u","miniCssF","g","globalThis","Function","prop","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","onload","doneFns","parentNode","removeChild","Symbol","toStringTag","nmd","paths","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}