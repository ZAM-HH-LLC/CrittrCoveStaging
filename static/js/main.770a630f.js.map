{"version":3,"file":"static/js/main.770a630f.js","mappings":"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","sources":["src/components/TutorialModal.js","src/components/ConfirmationModal.js","src/context/TutorialContext.js","src/components/Toast.js","src/components/ToastProvider.js","src/components/RoadmapSection.js","src/data/mockData.js","src/screens/HomeScreen.js","src/components/FloatingSaveButton.js","src/components/common/StepProgressIndicator.js","src/validation/validation.js","src/components/serviceCreation/CategorySelectionStep.js","src/components/serviceCreation/ServiceDetailsStep.js","src/components/serviceCreation/RatesAndReviewStep.js","src/components/ServiceCreationModal.js","src/components/ProfessionalServiceCard.js","src/utils/deviceUtils.js","src/components/ServiceManager.js","src/components/RecordedPets.js","src/components/EditableSection.js","src/components/ProfessionalTab.js","src/components/DatePicker.js","src/components/BackHeader.js","src/components/CrossPlatformView.js","src/utils/geocoding.js","src/components/AddressAutocomplete.js","src/components/profile/ProfilePhotoCropper.js","src/utils/imageCropUtils.js","src/components/SupportButton.js","src/components/profile/ProfileInfoTab.js","src/components/profile/ServicesAvailabilityTab.js","src/data/calculations.js","src/components/profile/PetsPreferencesTab.js","src/data/Timezones.js","src/components/profile/SettingsPaymentsTab.js","src/components/TabBar.js","src/screens/MyProfile.js","src/components/CustomButton.js","src/screens/SignIn.js","src/screens/SignUp.js","src/screens/ResetPassword.js","src/screens/ResetPasswordConfirm.js","src/components/BookingCard.js","src/components/common/ProfessionalAlert.js","src/components/modals/TermsOfServiceModal.js","src/components/bookingComponents/ReviewAndRatesCard.js","src/components/modals/TosRequiredModal.js","src/components/BookingApprovalModal.js","src/utils/formatStrings.js","src/screens/Dashboard.js","src/screens/BecomeProfessional.js","src/screens/MoreScreen.js","src/components/UnavailableTimeSlot.js","src/components/AvailabilityBookingCard.js","src/components/TimePicker.js","src/components/AddAvailabilityModal.js","src/components/ui/datetime-picker.js","src/components/DefaultSettingsModal.js","src/components/AvailabilityBottomSheet.js","src/components/UnavailableTimesModal.js","src/screens/AvailabilitySettings.js","src/screens/OwnerHistory.js","src/components/DateTimePicker.js","src/components/AddOccurrenceModal.js","src/components/RequestBookingModal.js","src/components/bookingComponents/ServiceAndPetsCard.js","src/components/bookingComponents/DateSelectionCard.js","src/components/bookingComponents/TimePickerDropdown.js","src/components/bookingComponents/NewTimeRangeSelector.js","src/components/bookingComponents/DayTimeSelector.js","src/components/bookingComponents/TimeSelectionCard.js","src/components/BookingStepModal.js","src/components/BookingMessageCard.js","src/components/DraftConfirmationModal.js","src/hooks/useWebSocket.js","src/components/Messages/ImageViewer.js","src/components/Messages/ClickableImage.js","src/components/Messages/MessageDateSeparator.js","src/components/Messages/messageTimeUtils.js","src/components/Messages/MessageList.js","src/components/Messages/ProfilePhoto.js","src/components/Messages/ConversationList.js","src/components/Messages/MessageInput.js","src/components/Messages/MessageHeader.js","src/components/ReviewsModal.js","src/components/ClientPetsModal.js","src/components/Messages/MessageTimestamp.js","src/components/ReviewModal.js","src/components/ReviewRequestCard.js","src/screens/MessageHistory.js","src/components/Messages/styles.js","src/components/Messages/useImageViewer.js","src/screens/Settings.js","src/screens/PrivacyPolicy.js","src/screens/ProfessionalSettings.js","src/screens/TermsOfService.js","src/screens/HelpFAQ.js","src/screens/ContactUs.js","src/components/SearchBar.js","src/screens/Owners.js","src/components/CostCalculationModal.js","src/components/ServiceCard.js","src/screens/ProfessionalProfile.js","src/components/ContractList.js","src/components/OwnerPicker.js","src/components/ContractTemplate.js","src/components/ChronicleSummary.js","src/components/QuestionInput.js","src/components/ChronicleForm.js","src/screens/MyContracts.js","src/screens/ChangePassword.js","src/components/ServiceTypeSelect.js","src/components/SearchRefiner.js","src/components/ProfessionalList.js","src/components/MapView.js","src/components/ProfessionalServicesModal.js","src/screens/SearchProfessionalsListing.js","src/screens/MyBookings.js","src/components/LogoHeader.js","src/screens/ServiceManagerScreen.js","src/screens/BlogScreen.js","src/screens/BlogPost.js","src/screens/Waitlist.js","src/screens/TestToast.js","src/components/ConnectionCard.js","src/screens/Connections.js","App.js","src/api/API.js","src/components/Navigation.js","src/config/config.js","src/context/AuthContext.js","src/context/MessageNotificationContext.js","src/styles/fonts.js","src/styles/theme.js","src/utils/logging.js","src/utils/platformNavigation.js","src/utils/time_utils.js","src/utils/websocket.js","webpack://web/./src/styles/viewport-fix.css?2df9","node_modules/moment/locale|sync|/^/.//.*$","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/harmony module decorator","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Platform, Alert, Animated, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { debugLog } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst TutorialModal = ({\n  step,\n  totalSteps,\n  title,\n  description,\n  onNext,\n  onPrevious,\n  onSkip,\n  onClose,\n  onFinish,\n  position = 'bottomRight', // bottomRight, bottomLeft, topRight, topLeft\n  userRole,\n  is_DEBUG = false\n}) => {\n  const isFirstStep = step === 1;\n  const isLastStep = step === totalSteps;\n  const [isVisible, setIsVisible] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(null);\n  const navigation = useNavigation();\n  \n  // Animation values\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(0)).current;\n  const overlayAnim = useRef(new Animated.Value(1)).current;\n  const { width, height } = Dimensions.get('window');\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal mounted/updated', {\n        isVisible,\n        currentStep: step,\n        userRole,\n        screen: currentScreen\n      });\n    }\n  }, [isVisible, step, userRole, currentScreen]);\n\n  useEffect(() => {\n    // Ensure the tutorial stays visible during screen changes\n    if (isVisible) {\n      debugLog('MBA54321 Tutorial is visible, ensuring it stays visible on screen change');\n      const timer = setTimeout(() => {\n        setIsVisible(true);\n      }, 100);\n      return () => clearTimeout(timer);\n    }\n  }, [isVisible]);\n\n  // Add a focus listener to ensure the tutorial stays visible when the screen changes\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      if (isVisible) {\n        debugLog('MBA54321 Screen focused, ensuring tutorial stays visible');\n        setIsVisible(true);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, isVisible]);\n\n  // Animation effect\n  useEffect(() => {\n    // Fade in animation for modal\n    Animated.timing(fadeAnim, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n\n    // Animate from center to final position\n    Animated.timing(slideAnim, {\n      toValue: 1,\n      duration: 800,\n      useNativeDriver: true,\n    }).start();\n\n    // Fade out the overlay as the modal slides\n    Animated.timing(overlayAnim, {\n      toValue: 0,\n      duration: 800,\n      useNativeDriver: true,\n    }).start();\n  }, []);\n\n  const handleNext = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleNext called', { step, totalSteps });\n    }\n    onNext();\n  };\n\n  const handlePrevious = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handlePrevious called', { step, totalSteps });\n    }\n    onPrevious();\n  };\n\n  const handleSkip = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleSkip called');\n    }\n    onSkip();\n  };\n\n  const handleClose = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleClose called');\n    }\n    onClose();\n  };\n\n  const handleFinish = () => {\n    if (is_DEBUG) {\n      debugLog('MBA54321 TutorialModal handleFinish called');\n    }\n    onFinish();\n  };\n\n  const getPositionStyles = () => {\n    switch (position) {\n      case 'bottomRight':\n        return {\n          bottom: 20,\n          right: 20,\n        };\n      case 'bottomLeft':\n        return {\n          bottom: 20,\n          left: 20,\n        };\n      case 'topRight':\n        return {\n          top: 20,\n          right: 20,\n        };\n      case 'topLeft':\n        return {\n          top: 20,\n          left: 20,\n        };\n      default:\n        return {\n          bottom: 20,\n          right: 20,\n        };\n    }\n  };\n\n  // Calculate the initial position (center of screen)\n  const initialPosition = {\n    top: (height + 60) / 2 - 150,\n    left: (width - 15) / 2 - 160,\n  };\n\n  // Get the final position\n  const finalPosition = getPositionStyles();\n\n  // Calculate the slide animation values\n  const slideStyle = {\n    transform: [\n      {\n        translateX: slideAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, finalPosition.right ? width/2 - 160 : -width/2 + 160],\n        }),\n      },\n      {\n        translateY: slideAnim.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, finalPosition.bottom ? height/2 - 150 : -height/2 + 150],\n        }),\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Animated.View \n        style={[\n          styles.overlay,\n          { opacity: overlayAnim }\n        ]}\n        pointerEvents=\"none\"\n      />\n      <Animated.View \n        style={[\n          styles.container, \n          initialPosition,\n          { opacity: fadeAnim },\n          slideStyle\n        ]}\n      >\n        <View style={styles.pulseBorder} />\n        <TouchableOpacity style={styles.closeButton} onPress={handleClose}>\n          <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.text} />\n        </TouchableOpacity>\n\n        <View style={styles.content}>\n          <Text style={styles.title}>{title}</Text>\n          <Text style={styles.description}>{description}</Text>\n\n          <View style={styles.footer}>\n            <View style={styles.leftButtons}>\n              {isFirstStep ? (\n                <TouchableOpacity style={styles.skipButton} onPress={handleSkip}>\n                  <Text style={styles.skipText}>Skip Tutorial</Text>\n                </TouchableOpacity>\n              ) : (\n                <TouchableOpacity style={styles.navigationButton} onPress={handlePrevious}>\n                  <MaterialCommunityIcons name=\"chevron-left\" size={20} color={theme.colors.primary} />\n                  <Text style={styles.navigationText}>Previous</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n\n            <View style={styles.stepIndicator}>\n              <Text style={styles.stepText}>{step}/{totalSteps}</Text>\n            </View>\n\n            {isLastStep ? (\n              <TouchableOpacity style={styles.finishButton} onPress={handleFinish}>\n                <Text style={styles.finishText}>Finish Tutorial</Text>\n              </TouchableOpacity>\n            ) : (\n              <TouchableOpacity style={styles.navigationButton} onPress={handleNext}>\n                <Text style={styles.navigationText}>Next</Text>\n                <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </Animated.View>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 999,\n  },\n  container: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    width: 320,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 5,\n    elevation: 8,\n    zIndex: 1000,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  pulseBorder: {\n    position: 'absolute',\n    top: -4,\n    left: -4,\n    right: -4,\n    bottom: -4,\n    borderRadius: 14,\n    opacity: 0.7,\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n    padding: 8,\n    zIndex: 1,\n  },\n  content: {\n    marginTop: 12,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: '700',\n    color: theme.colors.primary,\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  description: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 20,\n    lineHeight: 22,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  leftButtons: {\n    flex: 1,\n  },\n  skipButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  skipText: {\n    color: theme.colors.secondary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  navigationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  navigationText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  finishButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 4,\n  },\n  finishText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stepIndicator: {\n    paddingHorizontal: 12,\n  },\n  stepText: {\n    color: theme.colors.secondary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default TutorialModal; ","import React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ConfirmationModal = ({ \n  visible, \n  onClose, \n  onConfirm, \n  actionText,\n  isLoading = false\n}) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalText}>\n            Are you sure you want to {actionText}?\n          </Text>\n          \n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.cancelButton]}\n              onPress={onClose}\n              disabled={isLoading}\n            >\n              <Text style={[\n                styles.cancelButtonText,\n                isLoading && styles.disabledText\n              ]}>\n                Cancel\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={[\n                styles.button, \n                styles.confirmButton,\n                isLoading && styles.disabledButton\n              ]}\n              onPress={onConfirm}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator size=\"small\" color={theme.colors.surface} />\n              ) : (\n                <Text style={styles.confirmButtonText}>Confirm</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalText: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: theme.colors.text,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  confirmButtonText: {\n    color: theme.colors.surface,\n    fontWeight: '500',\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  disabledText: {\n    opacity: 0.5,\n  },\n});\n\nexport default ConfirmationModal;","import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext } from './AuthContext';\nimport { debugLog } from './AuthContext';\nimport { navigateToFrom } from '../components/Navigation';\nimport TutorialModal from '../components/TutorialModal';\nimport ConfirmationModal from '../components/ConfirmationModal';\nimport { useNavigation } from '@react-navigation/native';\n\nexport const TutorialContext = createContext();\n\nconst defaultTutorialStatus = {\n  done_client_tutorial: false,\n  done_pro_tutorial: false,\n};\n\nconst tutorialSteps = {\n  client: [\n    {\n      screen: 'MyProfile',\n      tab: 'profile_info',\n      title: 'Welcome to Your Profile',\n      description: 'This is where you can manage your personal information. Start by completing your profile to help professionals understand your needs better.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'pets_preferences',\n      title: 'Add Pets & Home Info',\n      description: 'Add information about your pets and their care preferences along with your home information. This helps professionals provide the best care possible.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'settings_payments',\n      title: 'Payment & Settings',\n      description: 'Set up your settings, payment methods, and subscription preferences to easily book services.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'Dashboard',\n      title: 'Your Dashboard',\n      description: 'Here you can view your upcoming bookings, track ongoing services, and manage your account.',\n      position: 'bottomRight',\n      onStepEnter: (navigation) => {\n        if (navigation) {\n          navigation.navigate('Dashboard');\n        }\n      }\n    },\n    {\n      screen: 'SearchProfessionalsListing',\n      title: 'Find Professionals',\n      description: 'Search for qualified professionals in your area. Filter by service type, availability, and more.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'BecomeProfessional',\n      title: 'Become a Professional',\n      description: 'Want to offer your services? You can apply to become a professional anytime.',\n      position: 'bottomRight',\n    },\n  ],\n  professional: [\n    {\n      screen: 'MyProfile',\n      tab: 'profile_info',\n      title: 'Welcome to Your Professional Profile',\n      description: 'This is where you can manage your professional information. Start by completing your profile to help clients find you.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'services',\n      title: 'Your Services',\n      description: 'Add and manage the services you offer. Set your rates, availability, and service areas.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'MyProfile',\n      tab: 'settings_payments',\n      title: 'Payment Settings',\n      description: 'Set up your payment methods and subscription preferences to receive payments from clients.',\n      position: 'bottomRight',\n    },\n    {\n      screen: 'Dashboard',\n      title: 'Your Dashboard',\n      description: 'Here you can view your upcoming bookings, track ongoing services, and manage your account.',\n      position: 'bottomRight',\n      onStepEnter: (navigation) => {\n        if (navigation) {\n          navigation.navigate('Dashboard');\n        }\n      }\n    },\n    {\n      screen: 'SearchClients',\n      title: 'Find Clients',\n      description: 'Search for potential clients in your area. Filter by service type, pet type, and more.',\n      position: 'bottomRight',\n    },\n  ],\n  // Default steps for when userRole is not set\n  default: [\n    {\n      screen: 'Home',\n      title: 'Welcome',\n      description: 'Welcome to CrittrCove! Let\\'s get started with a quick tour.',\n      position: 'bottomRight',\n    }\n  ]\n};\n\nexport const TutorialProvider = ({ children }) => {\n  const { isSignedIn, userRole, is_DEBUG } = useContext(AuthContext);\n  const navigation = useNavigation();\n  const [tutorialStatus, setTutorialStatus] = useState(defaultTutorialStatus);\n  const [currentStep, setCurrentStep] = useState(1);\n  const [isVisible, setIsVisible] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const [skipConfirmationVisible, setSkipConfirmationVisible] = useState(false);\n  const [closeConfirmationVisible, setCloseConfirmationVisible] = useState(false);\n\n  useEffect(() => {\n    if (isSignedIn && userRole) {\n      debugLog(\"MBA54321 Both isSignedIn and userRole are available, fetching tutorial status\", { isSignedIn, userRole });\n      fetchTutorialStatus();\n    } else {\n      debugLog(\"MBA54321 Waiting for auth data\", { isSignedIn, userRole });\n      setIsLoading(false);\n    }\n  }, [isSignedIn, userRole]);\n\n  const fetchTutorialStatus = async () => {\n    try {\n      setIsLoading(true);\n      const response = await axios.get(`${API_BASE_URL}/api/users/v1/tutorial-status/current/`);\n      if (is_DEBUG) {\n        debugLog('MBA54321 Tutorial status:', response.data);\n      }\n      setTutorialStatus(response.data);\n      setHasError(false);\n      setErrorMessage('');\n      \n      // Show tutorial if it's not completed\n      if ((userRole === 'professional' && !response.data.done_pro_tutorial) ||\n          (userRole === 'petOwner' && !response.data.done_client_tutorial)) {\n        setIsVisible(true);\n        \n        // Redirect new users to MyProfile screen\n        if (is_DEBUG) {\n          debugLog('MBA54321 Redirecting new user to MyProfile screen');\n        }\n        // Use navigateToFrom instead of navigation.navigate to ensure proper tab highlighting\n        navigateToFrom(navigation, 'MyProfile', 'Dashboard', { screen: 'profile_info' });\n        \n        if (is_DEBUG) {\n          debugLog('MBA54321 Tutorial should be visible:', {\n            userRole,\n            done_client_tutorial: response.data.done_client_tutorial,\n            done_pro_tutorial: response.data.done_pro_tutorial\n          });\n        }\n      } else {\n        if (is_DEBUG) {\n          debugLog('MBA54321 Tutorial should NOT be visible');\n        }\n        setIsVisible(false);\n      }\n    } catch (error) {\n      console.error('Error fetching tutorial status:', error);\n      setHasError(true);\n      setErrorMessage('We had trouble loading your tutorial settings, but you can still proceed with the tutorial.');\n      // Show tutorial with default settings if there's an error\n      setTutorialStatus(defaultTutorialStatus);\n      setIsVisible(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateTutorialStatus = async (updates) => {\n    try {\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/users/v1/tutorial-status/update_status/`,\n        updates\n      );\n      if (is_DEBUG) {\n        debugLog('MBA54321 Tutorial status updated:', response.data);\n      }\n      setTutorialStatus(response.data);\n      setHasError(false);\n      setErrorMessage('');\n    } catch (error) {\n      console.error('Error updating tutorial status:', error);\n      setHasError(true);\n      setErrorMessage('We had trouble saving your tutorial progress, but you can continue using the app.');\n      // Continue with local state even if server update fails\n      setTutorialStatus(prev => ({ ...prev, ...updates }));\n    }\n  };\n\n  const getCurrentStepData = () => {\n    // Determine which steps to use based on userRole\n    let roleKey = 'default';\n    if (userRole === 'professional') {\n      roleKey = 'professional';\n    } else if (userRole === 'petOwner' || userRole === 'client') {\n      roleKey = 'client';\n    }\n    \n    const steps = tutorialSteps[roleKey] || tutorialSteps.default;\n    \n    // Make sure currentStep is within bounds\n    const safeCurrentStep = Math.min(Math.max(1, currentStep), steps.length);\n    \n    // Get the step data\n    const stepData = steps[safeCurrentStep - 1];\n    \n    // If there's an error, add it to the first step's description\n    if (hasError && safeCurrentStep === 1) {\n      return {\n        ...stepData,\n        description: `${errorMessage}\\n\\n${stepData.description}`\n      };\n    }\n    \n    return stepData;\n  };\n\n  const handleNext = async () => {\n    debugLog(\"MBA54321 handleNext called\", { currentStep, userRole });\n    \n    // Check if we're at the last step\n    const roleKey = userRole === 'professional' ? 'professional' : 'client';\n    const steps = tutorialSteps[roleKey];\n    \n    if (currentStep >= steps.length) {\n      debugLog(\"MBA54321 At last step, completing tutorial\", { currentStep, totalSteps: steps.length });\n      // Don't complete the tutorial here, just move to the next step\n      // The tutorial will be completed when the user clicks the \"Finish Tutorial\" button\n      return;\n    }\n    \n    // Get the next step data before incrementing the step counter\n    const nextStep = steps[currentStep];\n    const currentStepData = steps[currentStep - 1];\n    \n    debugLog(\"MBA54321 Current step data\", currentStepData);\n    debugLog(\"MBA54321 Next step data\", nextStep);\n    \n    // Increment the step counter first\n    setCurrentStep(prevStep => prevStep + 1);\n    \n    // If we're navigating to a different screen or tab\n    if (nextStep.screen !== currentStepData.screen || (nextStep.tab && nextStep.tab !== currentStepData.tab)) {\n      debugLog(\"MBA54321 Navigating to different screen/tab\", { \n        from: currentStepData.screen, \n        to: nextStep.screen,\n        fromTab: currentStepData.tab,\n        toTab: nextStep.tab\n      });\n      \n      // Use navigateToFrom for consistent navigation behavior\n      if (nextStep.tab) {\n        // If we have a tab parameter, pass it in the params\n        navigateToFrom(navigation, nextStep.screen, currentStepData.screen, { screen: nextStep.tab });\n      } else {\n        // For screens without tabs\n        navigateToFrom(navigation, nextStep.screen, currentStepData.screen);\n      }\n      \n      // Keep the tutorial visible after navigation\n      setTimeout(() => {\n        setIsVisible(true);\n      }, 700);\n    }\n  };\n\n  const handlePrevious = () => {\n    debugLog(\"MBA54321 handlePrevious called\", { currentStep, userRole });\n    \n    if (currentStep > 1) {\n      // Get the previous step data before decrementing the step counter\n      const roleKey = userRole === 'professional' ? 'professional' : 'client';\n      const steps = tutorialSteps[roleKey];\n      const previousStep = steps[currentStep - 2]; // -2 because currentStep is 1-indexed\n      const currentStepData = steps[currentStep - 1];\n      \n      debugLog(\"MBA54321 Previous step data\", previousStep);\n      debugLog(\"MBA54321 Current step data\", currentStepData);\n      \n      // Decrement the step counter\n      setCurrentStep(prevStep => prevStep - 1);\n      \n      // If we're navigating to a different screen or tab\n      if (previousStep.screen !== currentStepData.screen || (previousStep.tab && previousStep.tab !== currentStepData.tab)) {\n        debugLog(\"MBA54321 Navigating back to different screen/tab\", { \n          from: currentStepData.screen, \n          to: previousStep.screen,\n          fromTab: currentStepData.tab,\n          toTab: previousStep.tab\n        });\n        \n        // Use navigateToFrom for consistent navigation behavior\n        if (previousStep.tab) {\n          // If we have a tab parameter, pass it in the params\n          navigateToFrom(navigation, previousStep.screen, currentStepData.screen, { screen: previousStep.tab });\n        } else {\n          // For screens without tabs\n          navigateToFrom(navigation, previousStep.screen, currentStepData.screen);\n        }\n        \n        // Keep the tutorial visible after navigation\n        setTimeout(() => {\n          setIsVisible(true);\n        }, 700);\n      }\n    }\n  };\n\n  const handleSkip = () => {\n    debugLog('MBA54321 handleSkip called through the later');\n    // Show confirmation modal before skipping\n    setSkipConfirmationVisible(true);\n  };\n\n  const handleSkipConfirm = () => {\n    debugLog('MBA54321 handleSkipConfirm called');\n    setSkipConfirmationVisible(false);\n    completeTutorial();\n  };\n\n  const handleSkipCancel = () => {\n    debugLog('MBA54321 handleSkipCancel called');\n    setSkipConfirmationVisible(false);\n  };\n\n  const handleClose = () => {\n    debugLog('MBA54321 handleClose called');\n    setCloseConfirmationVisible(true);\n  };\n\n  const handleCloseConfirm = () => {\n    debugLog('MBA54321 handleCloseConfirm called');\n    setCloseConfirmationVisible(false);\n    completeTutorial();\n  };\n\n  const handleCloseCancel = () => {\n    debugLog('MBA54321 handleCloseCancel called');\n    setCloseConfirmationVisible(false);\n  };\n\n  const completeTutorial = async () => {\n    debugLog(\"MBA54321 Completing tutorial\", { userRole });\n    \n    try {\n      // Update the tutorial status in the backend based on user role\n      const updates = {};\n      \n      // Set the appropriate tutorial completion flag based on user role\n      if (userRole === 'professional') {\n        updates.done_pro_tutorial = true;\n      } else if (userRole === 'petOwner' || userRole === 'client') {\n        updates.done_client_tutorial = true;\n      }\n      \n      // Update the tutorial status in the backend\n      await axios.patch(`${API_BASE_URL}/api/users/v1/tutorial-status/update_status/`, updates);\n      \n      debugLog(\"MBA54321 Tutorial status updated in backend\");\n      \n      // Hide the tutorial modal\n      setIsVisible(false);\n      \n      // Navigate to the Dashboard\n      debugLog(\"MBA54321 Navigating to Dashboard\");\n      navigateToFrom(navigation, 'Dashboard', getCurrentStepData().screen);\n      \n    } catch (error) {\n      debugLog(\"MBA54321 Error completing tutorial\", { error: error.message });\n      console.error('Error completing tutorial:', error);\n      \n      // Even if there's an error, try to navigate to Dashboard\n      navigateToFrom(navigation, 'Dashboard', getCurrentStepData().screen);\n    }\n  };\n\n  // If still loading, return a loading state\n  if (isLoading) {\n    return (\n      <TutorialContext.Provider\n        value={{\n          isVisible: false,\n          currentStep: 1,\n          totalSteps: 1,\n          stepData: tutorialSteps.default[0],\n          tutorialStatus: defaultTutorialStatus,\n          hasError: false,\n          errorMessage: '',\n          handleNext: () => {},\n          handlePrevious: () => {},\n          handleSkip: () => {},\n          completeTutorial: () => {},\n          setIsVisible: () => {},\n          isLoading: true\n        }}\n      >\n        {children}\n      </TutorialContext.Provider>\n    );\n  }\n\n  return (\n    <TutorialContext.Provider\n      value={{\n        isVisible,\n        setIsVisible,\n        currentStep,\n        setCurrentStep,\n        handleNext,\n        handlePrevious,\n        handleSkip,\n        completeTutorial,\n        isLoading,\n      }}\n    >\n      {children}\n      {isVisible && getCurrentStepData() && (\n        <TutorialModal\n          step={currentStep}\n          totalSteps={tutorialSteps[userRole === 'professional' ? 'professional' : \n                     (userRole === 'petOwner' || userRole === 'client') ? 'client' : 'default'].length}\n          title={getCurrentStepData().title}\n          description={getCurrentStepData().description}\n          onNext={handleNext}\n          onPrevious={handlePrevious}\n          onSkip={handleSkip}\n          onClose={handleClose}\n          onFinish={completeTutorial}\n          position={getCurrentStepData().position}\n          userRole={userRole}\n          is_DEBUG={is_DEBUG}\n        />\n      )}\n      <ConfirmationModal\n        visible={skipConfirmationVisible}\n        onClose={handleSkipCancel}\n        onConfirm={handleSkipConfirm}\n        actionText=\"skip the tutorial\"\n        isLoading={false}\n      />\n      <ConfirmationModal\n        visible={closeConfirmationVisible}\n        onClose={handleCloseCancel}\n        onConfirm={handleCloseConfirm}\n        actionText=\"close the tutorial\"\n        isLoading={false}\n      />\n    </TutorialContext.Provider>\n  );\n}; ","import React, { useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, Animated, TouchableOpacity, Dimensions, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\n/**\n * Toast notification component that slides in from the right corner\n * \n * @param {Object} props Component props\n * @param {boolean} props.visible Whether the toast is visible\n * @param {string} props.message The message to display in the toast\n * @param {string} props.type The type of toast: 'success', 'error', 'info', 'warning'\n * @param {Function} props.onDismiss Callback when toast is dismissed\n * @param {number} props.duration Duration in ms to show toast before auto-dismissing (default: 3000ms)\n */\nconst Toast = ({ \n  visible, \n  message, \n  type = 'success', \n  onDismiss,\n  duration = 3000\n}) => {\n  const animation = useRef(new Animated.Value(Dimensions.get('window').width)).current;\n  const opacity = useRef(new Animated.Value(0)).current;\n  const timeoutRef = useRef(null);\n\n  const getBackgroundColor = () => {\n    switch (type) {\n      case 'error':\n        return theme.colors.error;\n      case 'warning':\n        return theme.colors.warning || '#FFA726';\n      case 'info':\n        return theme.colors.info || '#29B6F6';\n      case 'success':\n      default:\n        return theme.colors.primary;\n    }\n  };\n\n  const getIcon = () => {\n    switch (type) {\n      case 'error':\n        return 'alert-circle';\n      case 'warning':\n        return 'alert';\n      case 'info':\n        return 'information';\n      case 'success':\n      default:\n        return 'check-circle';\n    }\n  };\n\n  const animateIn = () => {\n    Animated.parallel([\n      Animated.timing(animation, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start();\n  };\n\n  const animateOut = (callback) => {\n    Animated.parallel([\n      Animated.timing(animation, {\n        toValue: Dimensions.get('window').width,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(callback);\n  };\n\n  useEffect(() => {\n    if (visible) {\n      // Clear any existing timer\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      \n      // Animate in\n      animateIn();\n      \n      // Set timer to automatically dismiss\n      timeoutRef.current = setTimeout(() => {\n        handleDismiss();\n      }, duration);\n    }\n\n    // Cleanup\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [visible, duration]);\n\n  const handleDismiss = () => {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    \n    animateOut(() => {\n      if (onDismiss) {\n        onDismiss();\n      }\n    });\n  };\n\n  if (!visible) return null;\n\n  return (\n    <View style={styles.container} pointerEvents=\"box-none\">\n      <Animated.View\n        style={[\n          styles.toast,\n          {\n            backgroundColor: getBackgroundColor(),\n            transform: [{ translateX: animation }],\n            opacity: opacity\n          }\n        ]}\n      >\n        <View style={styles.content}>\n          <MaterialCommunityIcons name={getIcon()} size={24} color=\"white\" style={styles.icon} />\n          <Text style={styles.message} numberOfLines={3} ellipsizeMode=\"tail\">{message}</Text>\n        </View>\n        <TouchableOpacity onPress={handleDismiss} style={styles.closeButton} hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}>\n          <MaterialCommunityIcons name=\"close\" size={18} color=\"white\" />\n        </TouchableOpacity>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: Platform.OS === 'web' ? 'fixed' : 'absolute',\n    bottom: 20,\n    right: 0,\n    zIndex: 9999,\n    paddingHorizontal: 16,\n    width: '100%',\n    alignItems: 'flex-end',\n  },\n  toast: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 12, \n    borderRadius: 8,\n    minWidth: 200,\n    maxWidth: 300,\n    elevation: 6,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginRight: 8,\n  },\n  message: {\n    color: '#fff',\n    fontSize: 14,\n    fontFamily: Platform.OS === 'web' ? undefined : theme.fonts?.regular?.fontFamily,\n    flex: 1,\n  },\n  closeButton: {\n    padding: 4,\n  }\n});\n\nexport default Toast; ","import React, { createContext, useState, useContext, useCallback } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Toast from './Toast';\n\n// Create context\nconst ToastContext = createContext();\n\n/**\n * Hook to use the toast functionality\n * @returns {Function} showToast - Function to show a toast\n */\nexport const useToast = () => {\n  const context = useContext(ToastContext);\n  if (!context) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  return context;\n};\n\n/**\n * Provider component that wraps your app and provides toast functionality\n */\nexport const ToastProvider = ({ children }) => {\n  const [toast, setToast] = useState({\n    visible: false,\n    message: '',\n    type: 'success',\n    duration: 3000,\n  });\n\n  // Function to show a toast notification\n  const showToast = useCallback(({ message, type = 'success', duration = 3000 }) => {\n    setToast({\n      visible: true,\n      message,\n      type,\n      duration,\n    });\n  }, []);\n\n  // Function to hide the toast\n  const hideToast = useCallback(() => {\n    setToast(prev => ({\n      ...prev,\n      visible: false,\n    }));\n  }, []);\n\n  return (\n    <ToastContext.Provider value={showToast}>\n      <View style={styles.container}>\n        {children}\n        <Toast\n          visible={toast.visible}\n          message={toast.message}\n          type={toast.type}\n          duration={toast.duration}\n          onDismiss={hideToast}\n        />\n      </View>\n    </ToastContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    position: 'relative',\n  }\n});\n\nexport default ToastProvider; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Modal, Platform } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\n\nconst RoadmapSection = () => {\n  const [selectedMilestone, setSelectedMilestone] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const { screenWidth } = useContext(AuthContext);\n  const isMobile = screenWidth < 768;\n\n  const roadmapData = [\n    {\n      id: 1,\n    //   number: '01',\n      title: 'Prototype Launch',\n      description: 'Initial release of CrittrCove webpage and landing page with no signup or app functionality.',\n      icon: 'dog',\n      color: theme.colors.mainColors.senary // Royal Blue\n    },\n    {\n      id: 2,\n    //   number: '02',\n      title: 'Launch of MVP',\n      description: 'This is when users will be able to sign up and use the app fully for the first time on the website! For a full feature list, please check our blog or discord.',\n      icon: 'dragon',\n      color: theme.colors.mainColors.quinary // Medium Purple\n    },\n    {\n      id: 3,\n    //   number: '03',\n      title: 'Launch of App',\n      description: 'Mobile app release with real-time messaging, notifications, and payment integration. For a full feature list, please check our blog or discord.',\n      icon: 'cat',\n      color: theme.colors.mainColors.quaternary // Royal Blue\n    },\n    {\n      id: 4,\n    //   number: '04',\n      title: 'Community Features',\n      description: 'Adding social features, pet communities, and expert advice forums.',\n      icon: 'fish',\n      color: theme.colors.mainColors.main // Medium Purple\n    }\n  ];\n\n  const handleMilestonePress = (milestone) => {\n    setSelectedMilestone(milestone);\n    setModalVisible(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Roadmap</Text>\n      \n      {isMobile ? (\n        // Mobile Layout\n        <View style={styles.mobileContainer}>\n          {roadmapData.map((milestone, index) => (\n            <View key={milestone.id} style={[\n              styles.mobileItemContainer,\n              index === roadmapData.length - 1 ? { marginBottom: 0 } : null\n            ]}>\n              <TouchableOpacity\n                style={styles.mobileMarker}\n                onPress={() => handleMilestonePress(milestone)}\n              >\n                <View style={[styles.markerContainer, { backgroundColor: milestone.color }]}>\n                  <FontAwesome5 name={milestone.icon} size={24} color=\"white\" />\n                </View>\n              </TouchableOpacity>\n              <Text style={styles.mobileMilestoneTitle}>{milestone.title}</Text>\n              {index < roadmapData.length - 1 && (\n                <View style={styles.mobileDashedLine} />\n              )}\n            </View>\n          ))}\n        </View>\n      ) : (\n        // Web Layout\n        <View style={styles.webContainer}>\n          <View style={[styles.dashedLine, {\n            width: '80%',\n            left: '10%'\n          }]} />\n          {roadmapData.map((milestone, index) => (\n            <TouchableOpacity\n              key={milestone.id}\n              style={[\n                styles.webMarker,\n                { \n                  left: `${10 + (index * (80 / (roadmapData.length - 1)))}%`,\n                }\n              ]}\n              onPress={() => handleMilestonePress(milestone)}\n            >\n              <View style={[styles.markerContainer, { backgroundColor: milestone.color }]}>\n                <FontAwesome5 name={milestone.icon} size={24} color=\"white\" />\n              </View>\n              <Text style={styles.webMilestoneTitle}>{milestone.title}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      )}\n\n      {/* Modal for milestone details */}\n      <Modal\n        visible={modalVisible}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            {selectedMilestone && (\n              <>\n                <View style={[styles.modalIconContainer, { backgroundColor: selectedMilestone.color }]}>\n                  <Text style={styles.modalNumber}>{selectedMilestone.number}</Text>\n                  <FontAwesome5 \n                    name={selectedMilestone.icon} \n                    size={40} \n                    color=\"white\"\n                  />\n                </View>\n                <Text style={styles.modalTitle}>{selectedMilestone.title}</Text>\n                <Text style={styles.modalDescription}>\n                  {selectedMilestone.description}\n                </Text>\n                <TouchableOpacity\n                  style={[styles.closeButton, { backgroundColor: selectedMilestone.color }]}\n                  onPress={() => setModalVisible(false)}\n                >\n                  <Text style={styles.closeButtonText}>Close</Text>\n                </TouchableOpacity>\n              </>\n            )}\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: 'black',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  mobileContainer: {\n    width: '100%',\n    alignItems: 'center',\n    paddingVertical: 20,\n  },\n  mobileItemContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 80,\n    position: 'relative',\n  },\n  mobileMarker: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  mobileMilestoneTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    marginTop: 15,\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  mobileDashedLine: {\n    position: 'absolute',\n    width: 2,\n    height: 60,\n    bottom: -50,\n    borderStyle: 'dashed',\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  webContainer: {\n    // height: 200,\n    position: 'relative',\n    marginTop: 20,\n    marginBottom: 120,\n    width: '100%',\n  },\n  dashedLine: {\n    position: 'absolute',\n    height: 2,\n    top: 30,\n    borderStyle: 'dashed',\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  webMarker: {\n    position: 'absolute',\n    alignItems: 'center',\n    width: 120,\n    transform: [{ translateX: -60 }], // Center the marker\n  },\n  webMilestoneTitle: {\n    marginTop: 10,\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    textAlign: 'center',\n  },\n  markerContainer: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 20,\n    borderRadius: 15,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center',\n  },\n  modalIconContainer: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalNumber: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    position: 'absolute',\n    top: 10,\n  },\n  modalTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    color: 'black',\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  modalDescription: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: 'black',\n    lineHeight: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  closeButton: {\n    padding: 12,\n    borderRadius: 8,\n    width: '100%',\n    alignItems: 'center',\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});\n\nexport default RoadmapSection; ","// First, declare the BOOKING_STATES constant\nexport const BOOKING_STATES = {\n  // # Initial States\n  DRAFT: 'Draft',\n  PENDING_INITIAL_PROFESSIONAL_CHANGES: 'Pending Initial Professional Changes',\n    \n  // # Review States\n  PENDING_PROFESSIONAL_CHANGES: 'Pending Professional Changes',\n  PENDING_CLIENT_APPROVAL: 'Pending Owner Approval',\n    \n  // # Active States\n  CONFIRMED: 'Confirmed',\n  CONFIRMED_PENDING_PROFESSIONAL_CHANGES: 'Confirmed Pending Professional Changes',\n  CONFIRMED_PENDING_CLIENT_APPROVAL: 'Confirmed Pending Owner Approval',\n    \n  // # Terminal States\n  COMPLETED: 'Completed',\n  DENIED: 'Denied',\n  CANCELLED: 'Cancelled',\n\n  // # States where professionals can edit\n  PROFESSIONAL_EDITABLE_STATES: [\n    'Draft',\n    'Pending Initial Professional Changes',\n    'Pending Professional Changes',\n    'Confirmed Pending Professional Changes',\n    'Confirmed'\n  ]\n};\n\nexport const ALL_SERVICES = \"All Services\";\nexport const SERVICE_TYPES = [\n  ALL_SERVICES,\n  \"Overnight Cat Sitting (Owner's Home)\",\n  \"Cat Boarding\",\n  \"Drop-In Visits (30 min)\",\n  \"Drop-In Visits (60 min)\",\n  \"Dog Walking\",\n  \"Doggy Day Care\",\n  \"Pet Boarding\",\n  \"Exotic Pet Care\",\n  \"Daytime Pet Sitting\",\n  \"Ferrier\",\n];\n\nexport const TIME_OPTIONS = [\n  '15 Min',\n  '30 Min',\n  '45 Min',\n  '1 Hour',\n  '2 Hour',\n  '3 Hour',\n  '4 Hour',\n  '5 Hour',\n  '6 Hour',\n  '7 Hour',\n  '8 Hour',\n  '24 Hour',\n  'Per Day',\n  'Per Visit',\n  'Week'\n];\n\n// Mapping of user-friendly time unit labels to backend constants\nexport const TIME_UNIT_MAPPING = {\n  // User-friendly labels mapped to backend constants\n  'Per Visit': 'Per Visit',\n  'Per Day (24 Hours)': 'Per Day',\n  'Per Night': 'Per Night',\n  'Every 15 Minutes': '15 Min',\n  'Every 30 Minutes': '30 Min',\n  'Every 45 Minutes': '45 Min',\n  'Per Hour': '1 Hour',\n  'Every 2 Hours': '2 Hour',\n  'Every 3 Hours': '3 Hour',\n  'Every 4 Hours': '4 Hour',\n  'Every 5 Hours': '5 Hour',\n  'Every 6 Hours': '6 Hour',\n  'Every 7 Hours': '7 Hour',\n  'Every 8 Hours': '8 Hour',\n  'Per Week': 'Week'\n};\n\n// Reverse mapping for display purposes\nexport const BACKEND_TO_FRONTEND_TIME_UNIT = Object.entries(TIME_UNIT_MAPPING).reduce((acc, [key, value]) => {\n  acc[value] = key;\n  return acc;\n}, {});\n\nexport const mockAdditionalRates = {\n  'Fish Tank Cleaning': [\n    { title: 'Extended Stay (7+ days)', amount: 15 },\n    { title: 'Pickup/Dropoff Service', amount: 25 },\n    { title: 'Special Diet Handling', amount: 10 },\n    { title: 'Medication Administration', amount: 15 },\n  ],\n  'Ferrier': [\n    { title: 'Extended Hours', amount: 20 },\n    { title: 'Training Session', amount: 30 },\n    { title: 'Grooming', amount: 25 },\n  ],\n  'Dog Walking': [\n    { title: 'Extra 15 Minutes', amount: 10 },\n    { title: 'Plant Watering', amount: 5 },\n    { title: 'Photo Updates', amount: 5 },\n  ],\n  'Reptile Boarding & Habitat Maintenance': [\n    { title: 'Plant Watering', amount: 10 },\n    { title: 'Mail Collection', amount: 5 },\n    { title: 'Extended Visit (4+ hrs)', amount: 30 },\n  ],\n  'Bird Feeding': [\n    { title: 'Extra 15 Minutes', amount: 10 },\n    { title: 'Multiple Route Options', amount: 5 },\n    { title: 'Training During Walk', amount: 20 },\n  ],\n};\n\nexport const mockServicesForCards = [\n  {\n    id: 1,\n    name: 'Fish Tank Cleaning',\n    startingPrice: 25,\n    animalTypes: ['Fish'],\n    icon: 'fish',\n    additionalRates: mockAdditionalRates['Fish Tank Cleaning']\n  },\n  {\n    id: 2,\n    name: 'Ferrier',\n    startingPrice: 30,\n    animalTypes: ['Dogs'],\n    icon: 'horse',\n    additionalRates: mockAdditionalRates['Ferrier']\n  },\n  {\n    id: 3,\n    name: 'Dog Walking',\n    startingPrice: 40,\n    animalTypes: ['Dogs'],\n    icon: 'dog',\n    additionalRates: mockAdditionalRates['Dog Walking']\n  },\n  {\n    id: 4,\n    name: 'Reptile Boarding & Habitat Maintenance',\n    startingPrice: 35,\n    animalTypes: ['Reptiles'],\n    icon: 'snake',\n    additionalRates: mockAdditionalRates['Reptile Boarding & Habitat Maintenance']\n  },\n  {\n    id: 5,\n    name: 'Bird Feeding',\n    startingPrice: 45,\n    animalTypes: ['Birds'],\n    icon: 'bird',\n    additionalRates: mockAdditionalRates['Bird Feeding']\n  }\n];\n\nexport const GENERAL_CATEGORIES = [\n  'Farm Animals', \n  'Domestic',\n  'Exotic',\n  'Aquatic',\n  'Invertibrates',\n];\n\nexport const mockPets = [\n  {\n    id: '1',\n    name: 'Max',\n    animal_type: 'Dog',\n    breed: 'border collie',\n    age: {\n      months: 0,\n      years: 5,\n    },\n    weight: 32,\n    sex: 'Male',\n    friendlyWithChildren: true,\n    friendlyWithCats: false,\n    friendlyWithDogs: true,\n    spayedNeutered: true,\n    houseTrained: true,\n    microchipped: true,\n    adoptionDate: '2020-01-15',\n    description: 'Loves to play fetch and go for walks.',\n    energyLevel: 'High',\n    feedingSchedule: 'Morning',\n    leftAlone: '1-4 hours',\n    medication: null,\n    additionalInstructions: 'Needs daily exercise.',\n    vetName: 'Dr. Smith',\n    vetAddress: '123 Vet St.',\n    vetPhone: '555-1234',\n    insuranceProvider: 'Pet Insurance Co.',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n  {\n    id: '2',\n    name: 'Whiskers',\n    animal_type: 'Cat',\n    breed: 'tammy ammy',\n    age: {\n      months: 3,\n      years: 4,\n    },\n    weight: 16,\n    sex: 'Female',\n    friendlyWithChildren: true,\n    friendlyWithCats: true,\n    friendlyWithDogs: false,\n    spayedNeutered: true,\n    houseTrained: true,\n    microchipped: false,\n    adoptionDate: '2019-05-20',\n    description: 'Enjoys lounging in the sun.',\n    energyLevel: 'Low',\n    feedingSchedule: 'Twice a day',\n    leftAlone: '4-8 hours',\n    medication: null,\n    additionalInstructions: 'Prefers quiet environments.',\n    vetName: 'Dr. Jones',\n    vetAddress: '456 Vet Ave.',\n    vetPhone: '555-5678',\n    insuranceProvider: 'Pet Health Insurance',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n  {\n    id: '3',\n    name: 'Buddy',\n    animal_type: 'snake',\n    breed: 'leopard gecko',\n    age: {\n      months: 0,\n      years: 2,\n    },\n    weight: 1,\n    sex: 'Male',\n    friendlyWithChildren: false,\n    friendlyWithCats: false,\n    friendlyWithDogs: false,\n    spayedNeutered: false,\n    houseTrained: false,\n    microchipped: false,\n    adoptionDate: '2021-08-10',\n    description: 'A calm and quiet pet.',\n    energyLevel: 'Low',\n    feedingSchedule: ['Custom', '3 times a day with liquid food.'],\n    leftAlone: 'Can be left alone indefinitely',\n    medication: null,\n    additionalInstructions: 'Keep in a warm environment.',\n    vetName: 'Dr. Green',\n    vetAddress: '789 Vet Blvd.',\n    vetPhone: '555-9012',\n    insuranceProvider: 'Reptile Insurance Co.',\n    vetDocuments: [],\n    galleryImages: [],\n  },\n];\n\nexport const mockProfessionals = [\n  {\n    id: 1,\n    name: \"Mike V.\",\n    profilePicture: require('../../assets/user1.png'),\n    location: \"Briargate, Colorado Springs, CO, 80920\",\n    rating: 5.0,\n    reviewCount: 72,\n    price: 35,\n    distance: \"5.7 mi. away\",\n    coordinates: {\n      latitude: 38.8339,\n      longitude: -104.8214,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"5 years\",\n    description: \"Professional pet sitter with extensive experience in dog walking and pet sitting. Certified in pet first aid and CPR.\",\n    repeat_owners: 18,\n    verified: true,\n    bestReview: \"Benny's stay with Mike was outstanding! I would not hesitate to have Benny stay with them again. I would highly recommend Mike to anyone needing pet care services.\"\n  },\n  {\n    id: 2,\n    name: \"Sarah Johnson\",\n    profilePicture: require('../../assets/user2.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 127,\n    price: 45,\n    coordinates: {\n      latitude: 38.8340,\n      longitude: -104.8215,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"8 years\",\n    description: \"Experienced dog trainer and pet sitter. Specializes in working with large breeds and puppies.\",\n    verified: true,\n    bestReview: \"Sarah is amazing with pets! She took great care of my dog and sent regular updates.\"\n  },\n  {\n    id: 3,\n    name: \"Emily Rodriguez\",\n    profilePicture: require('../../assets/user3.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.7,\n    reviewCount: 156,\n    price: 40,\n    coordinates: {\n      latitude: 38.8341,\n      longitude: -104.8216,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\", \"Training\"],\n    experience: \"6 years\",\n    description: \"Professional pet sitter and groomer. Available for both short-term and long-term pet care needs.\",\n    verified: true\n  },\n  {\n    id: 4,\n    name: \"David Kim\",\n    profilePicture: require('../../assets/user4.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 98,\n    price: 55,\n    coordinates: {\n      latitude: 38.8342,\n      longitude: -104.8217,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\", \"Grooming\"],\n    experience: \"10 years\",\n    description: \"Certified dog trainer and experienced pet sitter. Specializes in working with rescue dogs and behavioral training.\",\n    verified: true\n  },\n  {\n    id: 5,\n    name: \"Lisa Thompson\",\n    profilePicture: require('../../assets/user5.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 143,\n    price: 45,\n    coordinates: {\n      latitude: 38.8343,\n      longitude: -104.8218,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"7 years\",\n    description: \"Professional pet sitter with a passion for animal care. Available for both regular and occasional pet sitting needs.\",\n    verified: true\n  },\n  {\n    id: 6,\n    name: \"John Martinez\",\n    profilePicture: require('../../assets/user6.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.6,\n    reviewCount: 89,\n    price: 42,\n    coordinates: {\n      latitude: 38.8344,\n      longitude: -104.8219,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\"],\n    experience: \"4 years\",\n    description: \"Dedicated pet care professional specializing in dog walking and pet sitting services.\",\n    verified: true\n  },\n  {\n    id: 7,\n    name: \"Rachel White\",\n    profilePicture: require('../../assets/user7.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 167,\n    price: 48,\n    coordinates: {\n      latitude: 38.8345,\n      longitude: -104.8220,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"9 years\",\n    description: \"Experienced pet trainer and caregiver with a focus on positive reinforcement techniques.\",\n    verified: true\n  },\n  {\n    id: 8,\n    name: \"Michael Chen\",\n    profilePicture: require('../../assets/user8.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.7,\n    reviewCount: 112,\n    price: 38,\n    coordinates: {\n      latitude: 38.8346,\n      longitude: -104.8221,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Grooming\"],\n    experience: \"5 years\",\n    description: \"Professional pet groomer and sitter with expertise in handling various breeds.\",\n    verified: true\n  },\n  {\n    id: 9,\n    name: \"Amanda Foster\",\n    profilePicture: require('../../assets/user9.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.8,\n    reviewCount: 134,\n    price: 44,\n    coordinates: {\n      latitude: 38.8347,\n      longitude: -104.8222,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\"],\n    experience: \"7 years\",\n    description: \"Certified pet trainer with extensive experience in behavioral modification.\",\n    verified: true\n  },\n  {\n    id: 10,\n    name: \"Robert Taylor\",\n    profilePicture: require('../../assets/user10.png'),\n    location: \"Colorado Springs, CO\",\n    rating: 4.9,\n    reviewCount: 178,\n    price: 50,\n    coordinates: {\n      latitude: 38.8348,\n      longitude: -104.8223,\n    },\n    services: [\"Dog Walking\", \"Pet Sitting\", \"Training\", \"Grooming\"],\n    experience: \"11 years\",\n    description: \"Comprehensive pet care professional offering a full range of services.\",\n    verified: true\n  }\n];\n\nexport const mockOwners = [\n  {\n    id: '1',\n    name: 'Alice Johnson',\n    pet_types: ['Dog', 'Cat'],\n    last_booking: '2024-01-15',\n    pets: ['1', '2'], // References to pet IDs\n    email: 'alice@example.com',\n    phone: '555-0101',\n    address: '123 Pine St, Colorado Springs, CO',\n  },\n  {\n    id: '2',\n    name: 'Bob Wilson',\n    pet_types: ['Dog'],\n    last_booking: '2024-02-01',\n    pets: ['3'],\n    email: 'bob@example.com',\n    phone: '555-0102',\n    address: '456 Oak Ave, Colorado Springs, CO',\n  },\n  {\n    id: '3',\n    name: 'Carol Martinez',\n    pet_types: ['Cat', 'Exotic'],\n    last_booking: '2024-01-28',\n    pets: ['4', '5'],\n    email: 'carol@example.com',\n    phone: '555-0103',\n    address: '789 Maple Dr, Colorado Springs, CO',\n  },\n  {\n    id: '4',\n    name: 'David Brown',\n    pet_types: ['Dog'],\n    last_booking: '2024-02-05',\n    pets: ['6'],\n    email: 'david@example.com',\n    phone: '555-0104',\n    address: '321 Elm St, Colorado Springs, CO',\n  },\n  {\n    id: '5',\n    name: 'Eva Garcia',\n    pet_types: ['Exotic'],\n    last_booking: '2024-01-20',\n    pets: ['7'],\n    email: 'eva@example.com',\n    phone: '555-0105',\n    address: '654 Birch Ln, Colorado Springs, CO',\n  }\n];\n\n// Availability Tab\nexport const fetchAvailabilityData = () => {\n  return new Promise((resolve) => {\n    // to get the bookings, we need to fetch the booking table on backend\n    // to get available/unavailable dates we need to fetch the availability table on backend\n    setTimeout(() => {\n      resolve({\n        availableDates: {\n          '2025-02-01': { startTime: '09:00', endTime: '17:00' },\n          '2025-02-02': { startTime: '10:00', endTime: '18:00' },\n          '2025-02-03': { startTime: '09:00', endTime: '17:00' },\n        },\n        unavailableDates: {\n          '2025-02-04': { startTime: '00:00', endTime: '24:00' },\n          '2025-02-05': { startTime: '10:00', endTime: '18:00' },\n        },\n        bookings: {\n          '2025-02-06': [\n            { id: 'bk1', startTime: '14:00', endTime: '16:00', owner_name: 'Charlie', service_type: 'Dog Walking' },\n            { id: 'bk2', startTime: '16:00', endTime: '18:00', owner_name: 'Bob', service_type: 'Dog Walking' },\n            { id: 'bk3', startTime: '18:00', endTime: '20:00', owner_name: 'Nick', service_type: 'Pet Boarding' },\n            { id: 'bk4', startTime: '20:00', endTime: '22:00', owner_name: 'Alfred', service_type: 'Drop-In Visits (30 min)' }\n          ],\n          '2025-02-07': [\n            { id: 'bk5', startTime: '10:00', endTime: '12:00', owner_name: 'Uhtred', service_type: 'Dog Walking' }\n          ],\n        },\n      });\n    }, 1000);\n  });\n};\n\n// Add mock update functions\nexport const updateAvailability = (updates) => {\n  console.log(\"updateAvailability\", updates);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true, data: updates });\n    }, 500);\n  });\n};\n\nexport const updateBooking = (bookingData) => {\n  console.log(\"updateBooking\", bookingData);\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({ success: true, data: bookingData });\n    }, 500);\n  });\n};\n\nconst sharedBookingDetails = {\n  booking_id: 'bk1',\n  status: 'Confirmed',\n  owner_name: 'matt aertker',\n  professional_name: 'matt2 aertker2',\n  service_details: {\n    service_type: 'Ferrier'\n  },\n  pets: [\n    {\n      pet_id: 3,\n      name: 'Jack',\n      species: 'DOG',\n      breed: 'Golden'\n    }\n  ],\n  occurrences: [\n    {\n      occurrence_id: 10,\n      start_date: '2025-02-01',\n      end_date: '2025-02-02',\n      start_time: '15:06',\n      end_time: '16:06',\n      calculated_cost: '61.04',\n      base_total: '$26.04',\n      rates: {\n        base_rate: '25.00',\n        additional_animal_rate: '5.00',\n        additional_animal_rate_applies: false,\n        applies_after: 2,\n        unit_of_time: 'PER_DAY',\n        holiday_rate: '35.00',\n        holiday_days: 0,\n        additional_rates: [\n          {\n            title: 'Extra Travel Time Rate',\n            description: 'Far Drive rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Poops Inside Rate',\n            description: 'Dog Poops Inside rate for service',\n            amount: '$5.00'\n          },\n          {\n            title: 'Dog Separation rate',\n            description: 'When we need to separate the dog from other animals in the house',\n            amount: '$5.00'\n          }\n        ]\n      }\n    },\n    {\n      occurrence_id: 9,\n      start_date: '2025-03-13',\n      end_date: '2025-03-14',\n      start_time: '09:00',\n      end_time: '14:00',\n      calculated_cost: '120.08',\n      base_total: '$35.04',\n      rates: {\n        base_rate: '29.00',\n        additional_animal_rate: '8.00',\n        additional_animal_rate_applies: false,\n        applies_after: 1,\n        unit_of_time: 'PER_DAY',\n        holiday_rate: '40.00',\n        holiday_days: 0,\n        additional_rates: [\n          {\n            title: 'Extra Travel Time Rate',\n            description: 'Far Drive rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Poops Inside Rate',\n            description: 'Dog Poops Inside rate for service',\n            amount: '$25.00'\n          },\n          {\n            title: 'Dog Separation rate',\n            description: 'When we need to separate the dog from other animals in the house',\n            amount: '$35.04'\n          }\n        ]\n      }\n    }\n  ],\n  cost_summary: {\n    subtotal: 181.12,\n    platform_fee: 18.11,\n    taxes: 15.94,\n    total_owner_cost: 215.17,\n    total_sitter_payout: 163.01,\n    is_prorated: true\n  }\n};\n\n// Initialize mockBookingDetails with existing mock data\nconst mockBookingDetails = {\n  '1234': {\n    ...sharedBookingDetails,\n    id: '1234',\n    ownerName: 'John Doe',\n    status: BOOKING_STATES.CONFIRMED,\n    startDate: '2024-02-20',\n    startTime: '14:00',\n  },\n  '5678': {\n    ...sharedBookingDetails,\n    id: '5678',\n    ownerName: 'Margarett Laporte',\n    status: BOOKING_STATES.CANCELLED,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '56782': {\n    ...sharedBookingDetails,\n    id: '56782',\n    ownerName: 'Zoe Aerial',\n    status: BOOKING_STATES.DENIED,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5673': {\n    ...sharedBookingDetails,\n    id: '5673',\n    ownerName: 'Matt Clark',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5674': {\n    ...sharedBookingDetails,\n    id: '5674',\n    ownerName: 'Mark Smith',\n    status: BOOKING_STATES.PENDING_CLIENT_APPROVAL,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5675': {\n    ...sharedBookingDetails,\n    id: '5675',\n    ownerName: 'Lauren Smith',\n    status: BOOKING_STATES.PENDING_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '5675': {\n    ...sharedBookingDetails,\n    id: '56712',\n    ownerName: 'Matt Smith',\n    status: BOOKING_STATES.CONFIRMED_PENDING_PROFESSIONAL_CHANGES,\n    startDate: '2024-02-21',\n    startTime: '15:30',\n  },\n  '56713': {\n    ...sharedBookingDetails,\n    id: '567123',\n    ownerName: 'Albert Einstein',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '3749': {...sharedBookingDetails,\n    id: '567132',\n    ownerName: 'Dr. Mike Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '91011': {\n    ...sharedBookingDetails,\n    id: '91011',\n    ownerName: 'Dr. Bla Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  },\n  '91012': {\n    ...sharedBookingDetails,\n    id: '91012',\n    ownerName: 'Dr. Blabla Johnson',\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    startDate: '2025-02-21',\n    startTime: '15:30',\n  }\n};\n\n// Map mockProfessionalBookings from mockBookingDetails\nexport const mockProfessionalBookings = Object.values(mockBookingDetails)\n  .map(booking => ({\n    id: booking.id,\n    ownerName: booking.ownerName,\n    status: booking.status,\n    date: booking.startDate,\n    time: booking.startTime,\n    serviceType: booking.serviceType,\n    numberOfPets: booking.numberOfPets || 1,\n    totalCost: booking.costs?.totalOwnerCost || 0,\n    professionalPayout: booking.costs?.professionalPayout || 0\n  }));\n\n// Add the createBooking function\nexport const createBooking = async (ownerId, freelancerId, initialData = {}) => {\n  const newBookingId = `booking_${Date.now()}`;\n  \n  const newBooking = {\n    id: newBookingId,\n    ownerId: ownerId,\n    freelancerId: freelancerId,\n    status: BOOKING_STATES.PENDING_INITIAL_PROFESSIONAL_CHANGES,\n    ownerName: initialData.ownerName || 'TBD',\n    professionalName: initialData.professionalName || 'TBD',\n    serviceType: initialData.serviceType || 'TBD',\n    animalType: initialData.animalType || 'TBD',\n    numberOfPets: initialData.numberOfPets || 0,\n    duration: initialData.duration || 0,\n    occurrences: initialData.occurrences || [],\n    rates: {\n      baseRate: 0,\n      additionalPetRate: 0,\n      extraServices: []\n    },\n    costs: {\n      baseTotal: 0,\n      additionalPetTotal: 0,\n      extraServicesTotal: 0,\n      subtotal: 0,\n      ownerFee: 0,\n      taxes: 0,\n      totalOwnerCost: 0,\n      professionalPayout: 0\n    },\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString(),\n    ...initialData\n  };\n\n  // Add to mock database\n  mockBookingDetails[newBookingId] = newBooking;\n  \n  console.log('Created new booking:', {\n    bookingId: newBookingId,\n    booking: newBooking,\n    allBookings: Object.keys(mockBookingDetails)\n  });\n\n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 500));\n  return newBookingId;\n};\n\n// Export mockBookingDetails for debugging\nexport const _mockBookingDetails = mockBookingDetails;\n\n// Add new mock function for updating booking status\nexport const updateBookingStatus = async (bookingId, newStatus, reason = '', metadata = {}) => {\n  console.log('updateBookingStatus called with:', {\n    bookingId,\n    newStatus,\n    reason,\n    metadata,\n    availableBookings: Object.keys(mockBookingDetails)\n  });\n  \n  // Simulate API delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n  \n  // Find the booking by ID regardless of the key\n  const bookingKey = Object.keys(mockBookingDetails).find(key => \n    mockBookingDetails[key].id === bookingId\n  );\n  \n  if (!bookingKey) {\n    console.error('Booking not found in mockBookingDetails. Available bookings:', \n      Object.keys(mockBookingDetails),\n      '\\nFull mockBookingDetails:', mockBookingDetails\n    );\n    throw new Error('Booking not found');\n  }\n  \n  // Create updated booking object\n  mockBookingDetails[bookingKey] = {\n    ...mockBookingDetails[bookingKey],\n    status: newStatus,\n    statusReason: reason,\n    updated_at: new Date().toISOString(),\n    ...metadata\n  };\n\n  console.log('Updated booking:', mockBookingDetails[bookingKey]);\n  return mockBookingDetails[bookingKey];\n};\n\n// Make sure to update MyBookings.js to use the same BOOKING_STATES constant\nexport const mockOwnerBookings = [\n  {\n    id: '91011',\n    professionalName: 'Sarah Wilson',\n    status: BOOKING_STATES.CONFIRMED,\n    date: '2024-02-22',\n    time: '10:00',\n    serviceType: 'Dog Walking',\n    numberOfPets: 2,\n    totalCost: 75.00,\n  },\n  {\n    id: '91012',\n    professionalName: 'Mike Johnson',\n    status: BOOKING_STATES.PENDING_CLIENT_APPROVAL,\n    date: '2024-02-23',\n    time: '11:00',\n    serviceType: 'Pet Sitting',\n    numberOfPets: 1,\n    totalCost: 50.00,\n  },\n];\n\n// Assuming current user ID is 101 for testing\nexport const CURRENT_USER_ID = 101;\n\nexport const mockConversations = [\n  {\n    id: 'conv_1',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 202,\n    name: \"Dr. Sarah Smith\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"I'd be happy to help! What kind of pet do you have?\",\n    timestamp: \"2024-02-21T07:05:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_2',\n    participant1_id: 303,\n    participant2_id: CURRENT_USER_ID,\n    name: \"Dr. Mike Johnson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"I'm available! Let's set up a booking\",\n    timestamp: \"2024-02-21T15:35:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_3',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 204,\n    name: \"Dr. Emily Wilson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Your cat's checkup is scheduled\",\n    timestamp: \"2024-02-20T10:15:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_4',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 205,\n    name: \"Dr. James Anderson\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"See you tomorrow at 2 PM\",\n    timestamp: \"2024-02-19T16:45:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_5',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 206,\n    name: \"Dr. Lisa Brown\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"How is Max doing today?\",\n    timestamp: \"2024-02-18T09:30:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_6',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 207,\n    name: \"Dr. Robert Taylor\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"The medication has been prescribed\",\n    timestamp: \"2024-02-17T14:20:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_7',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 208,\n    name: \"Dr. Maria Garcia\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Your appointment is confirmed\",\n    timestamp: \"2024-02-16T11:25:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_8',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 209,\n    name: \"Dr. David Lee\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Let's schedule a follow-up\",\n    timestamp: \"2024-02-15T13:40:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_9',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 210,\n    name: \"Dr. Sarah Martinez\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"The test results are ready\",\n    timestamp: \"2024-02-14T15:55:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_10',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 211,\n    name: \"Dr. John White\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"How's the new diet working?\",\n    timestamp: \"2024-02-13T08:15:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_11',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 212,\n    name: \"Dr. Anna Clark\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Vaccination reminder\",\n    timestamp: \"2024-02-12T10:30:00Z\",\n    unread: true\n  },\n  {\n    id: 'conv_12',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 213,\n    name: \"Dr. Thomas Wright\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Surgery scheduled for next week\",\n    timestamp: \"2024-02-11T12:45:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_13',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 214,\n    name: \"Dr. Patricia Moore\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Emergency consultation available\",\n    timestamp: \"2024-02-10T17:20:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_14',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 215,\n    name: \"Dr. Kevin Hall\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Treatment plan updated\",\n    timestamp: \"2024-02-09T14:10:00Z\",\n    unread: false\n  },\n  {\n    id: 'conv_15',\n    participant1_id: CURRENT_USER_ID,\n    participant2_id: 216,\n    name: \"Dr. Rachel Green\",\n    role_map: {\n      participant1_role: \"owner\",\n      participant2_role: \"professional\"\n    },\n    lastMessage: \"Prescription ready for pickup\",\n    timestamp: \"2024-02-08T16:35:00Z\",\n    unread: true\n  }\n];\n\nexport const mockMessages = {\n  'conv_1': [\n    {\n      message_id: 1,\n      participant1_id: CURRENT_USER_ID,\n      participant2_id: 202,\n      sender: CURRENT_USER_ID,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"Hi, I'm interested in your pet sitting services\",\n      timestamp: \"2024-02-21T14:00:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n    {\n      message_id: 2,\n      participant1_id: CURRENT_USER_ID,\n      participant2_id: 202,\n      sender: 202,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"I'd be happy to help! What kind of pet do you have?\",\n      timestamp: \"2024-02-21T14:05:00Z\",\n      booking_id: null,\n      status: \"sent\",\n      is_booking_request: false,\n      metadata: {}\n    }\n  ],\n  'conv_2': [\n    {\n      message_id: 3,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: 303,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"Looking for a dog walker next week\",\n      timestamp: \"2024-02-21T15:30:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n    {\n      message_id: 4,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: 303,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      type: 'booking_request',\n      data: {\n        serviceType: \"Dog Walking\",\n        pets: [\n          { id: '1', name: 'Max', type: 'Dog', breed: 'Golden Retriever' }\n        ],\n        occurrences: [\n          {\n            startDate: '2024-02-28',\n            endDate: '2024-02-28',\n            startTime: '14:00',\n            endTime: '15:00'\n          }\n        ]\n      },\n      timestamp: \"2024-02-21T15:35:00Z\",\n      status: \"sent\",\n      is_booking_request: true,\n      metadata: {}\n    },\n    {\n      message_id: 5,\n      participant1_id: 303,\n      participant2_id: CURRENT_USER_ID,\n      sender: CURRENT_USER_ID,\n      role_map: {\n        participant1_role: \"owner\",\n        participant2_role: \"professional\"\n      },\n      content: \"I'll take a look!\",\n      timestamp: \"2024-02-21T15:30:00Z\",\n      booking_id: null,\n      status: \"read\",\n      is_booking_request: false,\n      metadata: {}\n    },\n  ]\n};\n\n// Helper function to create a new conversation\nexport const createNewConversation = (professionalId, professionalName, ownerId, ownerName) => {\n  const conversationId = `conv_${Date.now()}`;\n  const isCurrentUserOwner = ownerId === CURRENT_USER_ID;\n  \n  return {\n    id: conversationId,\n    participant1_id: isCurrentUserOwner ? ownerId : professionalId,\n    participant2_id: isCurrentUserOwner ? professionalId : ownerId,\n    role_map: {\n      participant1_role: isCurrentUserOwner ? \"owner\" : \"professional\",\n      participant2_role: isCurrentUserOwner ? \"professional\" : \"owner\"\n    },\n    lastMessage: \"\",\n    timestamp: new Date().toISOString(),\n    unread: false,\n    bookingStatus: null\n  };\n};\n\nexport const DEFAULT_SERVICES = [\n  {\n    serviceName: 'Dog Walking',\n    animalTypes: 'Dogs',\n    rates: { base_rate: '20' },\n    additionalAnimalRate: '10',\n  },\n  {\n    serviceName: 'Cat Sitting',\n    animalTypes: 'Cats',\n    rates: { base_rate: '20' },\n    additionalAnimalRate: '5',\n  },\n  {\n    serviceName: 'Exotic Pet Care',\n    animalTypes: 'Lizards, Birds',\n    rates: { base_rate: '25' },\n    additionalAnimalRate: '15',\n  },\n];\n\nexport const SERVICE_TYPE_SUGGESTIONS = [\n  \"Overnight Cat Sitting (Owner's Home)\",\n  \"Cat Boarding\",\n  \"Drop-In Visits (30 min)\",\n  \"Drop-In Visits (60 min)\",\n  \"Dog Walking\",\n  \"Doggy Day Care\",\n  \"Pet Boarding\",\n  \"Exotic Pet Care\",\n  \"Daytime Pet Sitting\",\n  \"Ferrier\", \n];\n\nexport const ANIMAL_TYPE_SUGGESTIONS = [\n  'Dog',\n  'Cat',\n  'Cow',\n  'Calf',\n  'Lizard',\n  'Bird',\n  'Rabbit',\n  'Fish',\n];\n\nexport const BLOG_POSTS = [\n  {\n    id: 'blog_1',\n    title: 'What Your Dog is Really Saying',\n    author: {\n      id: 'author_1',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Professional dog trainer and animal behavior specialist with over 10 years of experience.'\n    },\n    publishDate: '2024-02-22',\n    readTime: '8 min',\n    tags: ['Dogs', 'Behavior', 'Training', 'Pet Care'],\n    content: `You know that moment when your dog tilts their head at you like you just asked them to solve a calculus problem? Turns out, they're not the only ones trying to understand you—they've been communicating with you this whole time, and you probably didn't even realize it.\n\nDogs may not speak English (yet—give them time), but they have an entire language built on tail wags, ear positions, and those big, soulful eyes they use to manipulate you into giving them extra treats. Learning to read their body language isn't just a party trick—it can help prevent stress, deepen your bond, and maybe even stop your dog from embarrassing you at the dog park. So, let's finally crack the code on what your dog has been trying to tell you.\n\nTail Wagging: Not Always a Sign of Happiness\nOne of the biggest myths out there is that a wagging tail means a happy dog. Nope. Not always. A dog's tail is basically their mood ring, and the way they wag tells a whole different story.\nLoose, full-body wag (with bonus butt wiggles): This is the classic \"OMG YOU'RE HOME!!\" happy dance. A+ vibes.\nSlow wag, tail held high: The \"I'm analyzing this situation\" wag. Suspicious, calculating, possibly deciding if you're worth their energy.\nStiff, fast wag with a raised tail: Yikes. This is \"I'm on edge, don't mess with me\" energy. Proceed with caution.\nLow, fast wag: \"I'm nervous, and I don't know what's happening, so I'm just gonna keep wiggling and hope for the best.\"\nTucked tail: Fear. If the tail is all the way tucked under, your dog is basically saying, \"I regret everything, please don't yell at me.\"\nEven the direction of the wag matters—researchers found that dogs wag more to the right when they're happy and to the left when they're unsure or stressed (Quaranta et al., 2007). Yes, your dog's tail literally has anxiety tells.\n\nEars and Eyes: The Silent Storytellers\nDogs don't just talk with their tails—they also use their ears and eyes like tiny, furry actors in a silent film.\nSoft eyes, relaxed ears: Your dog is living their best life. No stress, just vibes.\nWide eyes, whites showing (a.k.a. \"whale eye\"): \"I am uncomfortable with the energy we have created in this room.\" This is a warning sign—your dog feels uneasy or trapped.\nPerked-up ears: \"I heard something, and I will investigate.\" Could be excitement, curiosity, or them preparing to bark at absolutely nothing.\nEars pinned back: \"I'm nervous\" or \"I did something bad, and I hope you don't notice.\" Classic guilty dog move.\nEver notice how some dogs do a little squint when they're happy? It's their version of a smile. On the flip side, prolonged direct eye contact—especially with an unfamiliar dog—can be a challenge. So, if you're having a staring contest with a dog you just met…maybe don't.\n\nThe Freeze: When Your Dog Hits Pause (And You Should Pay Attention)\nIf a dog suddenly stops moving and stiffens, pay attention. Freezing is often their last warning before things escalate to growling, snapping, or biting. A lot of people miss this and then wonder why their dog \"suddenly\" lashed out.\nYou might see this when:\nA child is hugging a dog (which, fun fact, most dogs hate).\nSomeone is petting a dog too aggressively.\nThe dog feels cornered and has no escape route.\nResearch by Rooney Clark and Casey (2016) helped show that when a dog freezes, in some way or another they are stressed, its best to give them space in that moment and take a mental note of your newest training goal! Sometimes, they just need a minute to de-escalate, like when you have to breathe through a customer service call that's not going well.\n\nMouth Matters: Smiles vs. Stress\nDogs can technically smile, but it's not always what you think.\nLoose, open mouth, tongue hanging out: Happy, relaxed, living their best life.\nClosed mouth, tight lips: Alert or unsure. They're analyzing the situation.\nLips pulled back, slight teeth showing: Some dogs do a \"submissive grin,\" which isn't aggression—it's their way of saying, \"Hey, I'm friendly!\"\nWrinkled nose, full teeth bared: This is aggression. Back off.\nExcessive yawning in a new situation: Dogs don't just yawn when they're tired—they also yawn when they're stressed. To put it simply, they are overstimulated. (Glenk, 2020) Don't be fooled by the parrot dog, sometimes they yawn because they saw you yawn first! (D'Aniello, 2019)\n\nConclusion: Your Dog Has Been Sending You Texts—Now You Can Finally Read Them\nDogs may not be able to talk (yet), but they've been communicating loud and clear this whole time. That tail wag? Could be excitement, could be stress. That little squint? Doggy love. The full-body freeze? That's a big ol' \"DO NOT DISTURB\" sign.\nThe more you pay attention, the better you'll understand your dog—and the fewer awkward misunderstandings you'll have (like mistaking a stress yawn for a nap cue). As we said in the beginning, your dog already knows exactly how to read you. They know your routine, when you're about to leave the house, and how to guilt-trip you into sharing your snacks. The least you can do is return the favor.\nSo next time your dog gives you the side-eye, perks their ears, or flops over dramatically after a single walk, you'll finally know what they're saying. And let's be honest—it's probably, \"I love you… now give me a treat.\"`,\n    references: [\n      {\n        title: '7 tips for canine body language',\n        authors: 'American Society for the Prevention of Cruelty to Animals (ASPCA)',\n        publication: 'ASPCApro',\n        url: 'https://www.aspcapro.org/resource/7-tips-canine-body-language'\n      },\n      {\n        title: \"Therapy dogs' salivary cortisol levels vary during animal-assisted interventions\",\n        authors: 'Glenk, L. M., Kothgassner, O. D., Stetina, B. U., Palme, R., & Kepplinger, B.',\n        publication: 'Frontiers in Veterinary Science',\n        year: 2020,\n        doi: '10.3389/fvets.2020.564201'\n      },\n      {\n        title: 'The importance of associative learning in cross-species social bonding: Dogs and humans',\n        authors: \"D'Aniello, B., Scandurra, A., Alterisio, A., Aria, M., & Siniscalchi, M.\",\n        publication: 'Frontiers in Psychology',\n        year: 2019,\n        doi: '10.3389/fpsyg.2019.01678'\n      },\n      {\n        title: 'Oxytocin-gaze positive loop and the coevolution of human-dog bonds',\n        authors: 'Nagasawa, M., Mitsui, S., En, S., Ohtani, N., Ohta, M., Sakuma, Y., Onaka, T., Mogi, K., & Kikusui, T.',\n        publication: 'Science',\n        year: 2015,\n        doi: '10.1126/science.1261022'\n      },\n      {\n        title: 'Asymmetric tail-wagging responses by dogs to different emotive stimuli',\n        authors: 'Quaranta, A., Siniscalchi, M., & Vallortigara, G.',\n        publication: 'Current Biology',\n        year: 2007,\n        doi: '10.1016/j.cub.2007.02.008'\n      },\n      {\n        title: 'Minimizing fear and anxiety in working dogs: A review',\n        authors: 'Rooney, N. J., Clark, C. C. A., & Casey, R. A.',\n        publication: 'Journal of Veterinary Behavior',\n        year: 2016,\n        doi: '10.1016/j.jveb.2016.11.001'\n      }\n    ],\n    likes: 245,\n    comments: 56,\n    shares: 89\n  },\n  {\n    id: 'blog_2',\n    title: 'What Your Cat is Really Saying',\n    author: {\n      id: 'author_2',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Feline behavior specialist and veterinarian with a focus on cat-human relationships.'\n    },\n    publishDate: '2024-02-23',\n    readTime: '7 min',\n    tags: ['Cats', 'Behavior', 'Pet Care', 'Communication'],\n    content: `Ever wonder why your cat stares at you before slowly blinking or why they randomly sprint across the house at 2 AM? While cats may seem mysterious, they actually have a complex system of communication—if you know what to look for. Unlike dogs, who wear their emotions on their tails (literally), cats are more subtle. But once you learn their signals, you'll start to see what your cat has been trying to tell you all along.\n\nThe Myth of the Aloof Cat: Do They Actually Care About You?\nMany people think cats are independent and don't bond with their owners the way dogs do. But research suggests otherwise. A study by Vitale et al. (2019) found that cats form secure attachments to their owners, much like infants do with their caregivers. In an experiment where cats were briefly separated from their owners, many showed signs of distress when left alone and relief upon their owner's return. So yes, your cat does care about you—they just have their own way of showing it.\n\nThe Slow Blink: A Feline \"I Love You\"\nOne of the best-kept secrets of cat communication is the slow blink. If your cat locks eyes with you and then slowly closes and opens their eyes, congratulations! You've just received a cat's version of a smile. Research completed in 2020 (Humphrey) found that when humans slowly blink at their cats, the cats are more likely to return the gesture and approach them in a friendly manner. So, next time you want to say \"I love you\" to your cat, skip the baby talk and try a slow blink instead.\n\nTail Talk: Not Just for Dogs\nA cat's tail is like a built-in mood ring. Learning to read tail signals can help you avoid scratches and strengthen your bond.\nTail up, tip curved: A friendly, confident cat greeting. If your cat walks toward you with their tail high, they're happy to see you.\nPuffed-up tail: This is a defensive reaction. Your cat is startled or feels threatened.\nLow, slow-wagging tail: Unlike dogs, a slow-wagging cat tail isn't a good sign—it often signals irritation or mild aggression.\nTail wrapped around you or another cat: This is a sign of affection, almost like holding hands.\n\nPurring: More Than Just Happiness\nEveryone loves the soothing sound of a purring cat, but did you know cats don't just purr when they're happy? While contentment is a common reason, studies suggest cats also purr when they're stressed, in pain, or even trying to heal themselves. The frequency of cat purrs (between 25 and 150 Hz) has been linked to tissue regeneration and bone healing in studies on vibrational therapy (Muggenthaler, 2001). So, if your cat is purring at the vet's office, they may not be enjoying themselves—they might just be self-soothing.\n\nHeadbutting and Kneading: Strange but Sweet Gestures\nHeadbutting (bunting): When your cat gently bumps their head against you, they're not just being cute—they're marking you with their scent glands, claiming you as their own (Rodan, 2015).\nKneading: The rhythmic pressing of paws against a soft surface (or your lap) is a behavior kittens use to stimulate milk flow. In adult cats, it's a sign of comfort and contentment (Brown & Bradshaw, 2016).\n\nDo Cats Really Ignore Their Names?\nIf you've ever called your cat and been met with a flick of the ear but no movement, you might think they don't recognize their name. But research says otherwise. A study by Saito & Shinozuka (2013) found that cats can distinguish their names from other words, even in a household with multiple cats. They just don't always feel the need to respond. Unlike dogs, who evolved to seek human approval, cats evolved as solitary hunters. They hear you—they're just deciding whether you're worth getting up for.\n\nThe Zoomies: Science Behind the 2 AM Sprints\nThose sudden, chaotic bursts of energy—also known as \"zoomies\"—are actually a by normal part of feline behavior. Cats are natural hunters, and their instincts tell them to be most active at dawn and dusk. If your cat has zoomies at odd hours, they might just be burning off excess energy. Providing interactive play during the day can help prevent nighttime sprints (Turner, 2021).\n\nConclusion: The More You Watch, the More You Understand\nCats may seem mysterious, but once you learn their language, they're basically tiny, furry drama queens with very specific ways of expressing love (and judgment). That slow blink? A kiss. That tail flick? A warning. The 2 AM zoomies? Either pent-up energy or an exorcism—we may never know.\n\nThe more you pay attention to their signals, the better you'll understand them. And honestly your cat already understands you. They know exactly how to guilt-trip you into giving extra treats, how to wake you up precisely one minute before your alarm, and how to act like they don't care—right before curling up in your lap.\n\nAt the end of the day, cats aren't ignoring us. They're just selectively participating. And now that you can read their signals, you're officially part of their very exclusive club.`,\n    references: [\n      {\n        title: 'Communication in the domestic cat: within- and between-species',\n        authors: 'Brown, S. L., & Bradshaw, J. W. S.',\n        publication: 'Animal Behaviour',\n        year: 2016,\n        doi: '10.1016/j.anbehav.2016.05.015'\n      },\n      {\n        title: 'Feline Behavioral Health and Welfare',\n        authors: 'Rodan, I., & Heath, S.',\n        publication: 'Elsevier Health Sciences',\n        year: 2015\n      },\n      {\n        title: 'The felid purr: A healing mechanism?',\n        authors: 'Muggenthaler, E. von.',\n        publication: 'Proceedings of the 12th International Conference on Low Frequency Noise and Vibration',\n        year: 2001,\n        url: 'https://www.researchgate.net/publication/272259095_The_felid_purr_A_healing_mechanism'\n      },\n      {\n        title: 'Vocal recognition of owners by domestic cats (Felis catus)',\n        authors: 'Saito, A., & Shinozuka, K.',\n        publication: 'Animal Cognition',\n        year: 2013,\n        doi: '10.1007/s10071-013-0620-4'\n      },\n      {\n        title: 'The mechanics of social interactions between cats and their owners',\n        authors: 'Turner, D. C.',\n        publication: 'Frontiers in Veterinary Science',\n        year: 2021,\n        doi: '10.3389/fvets.2021.650143'\n      },\n      {\n        title: 'Attachment bonds between domestic cats and humans',\n        authors: 'Vitale, K. R., Behnke, A. C., & Udell, M. A. R.',\n        publication: 'Current Biology',\n        year: 2019,\n        doi: '10.1016/j.cub.2019.08.036'\n      },\n      {\n        title: 'The role of cat eye narrowing movements in cat–human communication',\n        authors: 'Humphrey, T., Proops, L., & McComb, K.',\n        publication: 'Scientific Reports',\n        year: 2020,\n        doi: '10.1038/s41598-020-73426-0'\n      }\n    ],\n    likes: 312,\n    comments: 78,\n    shares: 102\n  },\n  {\n    id: 'blog_3',\n    title: 'What Your Bird is Really Saying',\n    author: {\n      id: 'author_3',\n      name: 'Zoe Neale',\n      profilePicture: require('../../assets/ZEGN_USER.jpeg'),\n      bio: 'Avian specialist and researcher focusing on bird behavior and communication.'\n    },\n    publishDate: '2024-02-24',\n    readTime: '6 min',\n    tags: ['Birds', 'Behavior', 'Pet Care', 'Avian Communication'],\n    content: `Ever look at your bird and think, What's going on in that tiny dinosaur brain of yours? Well, good news—birds may not text, but they do have an entire language made up of wing flutters, tail flicks, and the occasional judgmental stare. And if you learn to read these signals, you'll finally understand what your feathered friend has been trying to tell you all along.\n\nLet's break down the mysterious world of bird body language so you can stop guessing and start actually communicating with your avian BFF.\n\nThe Head Tilt: Curious or Plotting Something?\nThat adorable head tilt your bird does isn't just to make you go aww—it's actually their way of getting a better look at something. Birds process images differently than we do, so when they tilt their head, they're adjusting their angle to see more clearly (Massen et al., 2014).\n\nSlow, curious head tilt: They're interested in what's happening and trying to analyze the situation. Basically, they're bird detectives.\nFrequent or extreme tilting: Could indicate a vision issue or neurological problem—if it looks excessive, a vet visit is a good idea (Massen et al., 2014).\nOne-eye stare, body stiffened: A sign they're feeling cautious or potentially threatened. If they were a human, this would be the equivalent of side-eye.\n\nFeather Fluffing: Cozy or Cranky?\nFeather movements say a lot about how a bird is feeling. Think of them as mood indicators, kind of like how we use facial expressions—except, you know, with more feathers.\n\nFluffed-up feathers for a few seconds: Just getting comfortable. If your bird puffs up and then smooths back down, they're basically stretching.\nConstantly fluffed-up feathers: Not good. This can be a sign of illness, stress, or even feeling cold (Massen et al., 2014).\nFeathers sleeked back tight to the body: Your bird is nervous or possibly feeling aggressive. Approach with caution (Pika & Bugnyar, 2011).\n\nThe Wing Flutter: Excitement or Back Off?\nBirds use their wings for way more than just flying—they also use them to communicate. Unfortunately, no sign language because birds dont have thumbs\n\nExcited, quick flutters: Happiness! Your bird is basically doing a little happy dance (Osaka University, 2023).\nSlow, controlled wing movements: This can be a \"stay away\" signal, kind of like putting up a hand to say \"not now.\"\nOne wing slightly drooped: Could be a sign of injury—time to check in with your vet.\n\nBunting: Love, Not a Headbutt Attack\nIf your bird presses or rubs their beak against you, congratulations—they're bunting, which is a sign of affection (Pika & Bugnyar, 2011).\n\nGentle beak rubbing: They're marking you as part of their flock. You're officially theirs now.\nAggressive, sudden beak nudging: Might mean \"Hey, stop that\" or \"Give me attention NOW.\"\n\nThe Stare-Down: Challenge or Trust?\nUnlike with dogs, where prolonged eye contact can be a dominance move, birds love staring at their favorite humans. It's actually a good thing—eye contact helps strengthen bonds (Osaka University, 2023).\n\nSoft, relaxed eyes: A sign of trust and comfort. They're chilling.\nWide eyes with pinning pupils: Intense excitement—or potential aggression. If they suddenly go from relaxed to laser-focused, read the room.\n\nTail Wagging: A Whole Different Story Than Dogs\nIf you thought tail wagging only meant happiness (like with dogs), think again—birds have their own unique tail signals.\n\nFast, side-to-side tail wagging: Happy and excited! Your bird is feeling good.\nSlow, deliberate tail flick: Annoyed or getting ready to give you a warning. Think of this as their way of saying \"I'm this close to losing it.\"\nTail fanned out: Displaying dominance or excitement—this is common in birds like parrots when they're trying to show off.\n\nThe Playful Side: Hanging Upside Down & Wing Spreading\nSome birds (especially parrots) love hanging upside down like little acrobats. This is usually a sign of happiness and playfulness. If your bird does this often, they're feeling safe and confident.\n\nUpside-down hanging: Your bird is comfortable with you and their surroundings. They trust you.\nOne wing slightly lifted while playing: This can be an invitation to interact—kind of like a bird's version of waving at you.\n\nConclusion: Your Bird Has Been Speaking—Now You're Fluent\nBirds may not use words the way we do (unless you have a talkative parrot), but their body language speaks volumes. From fluffed feathers to head tilts and beak bunts, every little movement is a clue to how they're feeling.\n\nThe more you watch and learn, the better you'll understand their unique way of communicating. And let's be real—your bird already knows exactly how to get your attention. Whether it's staring at you until you feel guilty enough to offer a treat or flapping their wings dramatically for no reason, they've got you trained.\n\nNow that you can finally read their signals, you're one step closer to becoming the ultimate bird whisperer. Just don't be surprised if they start giving you even more attitude now that you know what's up.`,\n    references: [\n      {\n        title: 'Facial display and blushing: Means of visual communication in blue-and-yellow macaws',\n        authors: 'Massen, J. J. M., Vermunt, D. A., & Sterck, E. H. M.',\n        publication: 'PLoS ONE',\n        year: 2014,\n        doi: '10.1371/journal.pone.0108794'\n      },\n      {\n        title: 'The use of referential gestures in ravens (Corvus corax) in the wild',\n        authors: 'Pika, S., & Bugnyar, T.',\n        publication: 'Nature Communications',\n        year: 2011,\n        doi: '10.1038/ncomms1567'\n      },\n      {\n        title: 'Wild birds gesture \"after you\" to insist their mate go first',\n        authors: 'Osaka University',\n        publication: 'Scientific American',\n        year: 2023,\n        url: 'https://www.scientificamerican.com/article/wild-birds-gesture-after-you-to-insist-their-mate-go-first/'\n      }\n    ],\n    likes: 198,\n    comments: 45,\n    shares: 67\n  }\n];","import React, { useState, useEffect, useContext } from 'react';\nimport { View, ScrollView, Image, StyleSheet, Linking, Dimensions, Platform, TouchableOpacity, TextInput } from 'react-native';\nimport { Button, Text, Card, Title, Paragraph, useTheme } from 'react-native-paper';\nimport { ImageBackground } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { SCREEN_WIDTH } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from '../components/Navigation';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport RoadmapSection from '../components/RoadmapSection';\n// Conditionally import formspree only on web\nlet useForm, ValidationError;\nif (Platform.OS === 'web') {\n  try {\n    const formspree = require('@formspree/react');\n    useForm = formspree.useForm;\n    ValidationError = formspree.ValidationError;\n  } catch (error) {\n    console.log('Formspree not available:', error);\n  }\n}\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { FontAwesome6 } from '@expo/vector-icons';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { AuthContext } from '../context/AuthContext';\n\nconst { width: windowWidth, height: windowHeight } = Dimensions.get('window');\n\n// Define a sample reviews array\nconst reviews = [\n  {\n    image: require('../../assets/user1.png'),\n    text: \"\\\"CrittrCove has been amazing for finding reliable pet professionals!\",\n    author: \"John Smith\"\n  },\n  {\n    image: require('../../assets/user2.png'),\n    text: \"\\\"Great experience with pet sitting services!\",\n    author: \"Jane Doe\"\n  },\n  {\n    image: require('../../assets/user3.png'),\n    text: \"\\\"Found the perfect sitter for my exotic pets!\",\n    author: \"Sudhakar Vuluvala\"\n  },\n  {\n    image: require('../../assets/user4.png'),\n    text: \"\\\"I've had a fantastic experience with CrittrCove's pet grooming services!\",\n    author: \"Alice Brown\"\n  }\n];\n\n// Define the ReviewImage component\nconst ReviewImage = ({ source, style }) => {\n  if (Platform.OS === 'web') {\n    return <img src={source} style={style} alt=\"\" />;\n  }\n  return <Image source={source} style={style} />;\n};\n\nexport default function HomeScreen({ navigation }) {\n  const { colors } = useTheme();\n  const { screenWidth } = useContext(AuthContext);\n  const isMobileView = screenWidth < 660;\n  const openAppStore = (url) => {\n    Linking.openURL(url);\n  };\n\n  // Add state for social media popup visibility\n  const [isUserScrolling, setIsUserScrolling] = useState(false);\n\n  const AutoScrollSection = ({ data, renderItem, title, cardWidth = 320 }) => {\n    const scrollViewRef = React.useRef(null);\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [userScrolling, setUserScrolling] = useState(false);\n    const autoScrollTimerRef = React.useRef(null);\n\n    // Auto-scroll effect\n    useEffect(() => {\n      if (!userScrolling) {\n        autoScrollTimerRef.current = setInterval(() => {\n          if (scrollViewRef.current) {\n            const nextIndex = (currentIndex + 1) % data.length;\n            scrollToIndex(nextIndex);\n          }\n        }, 3000);\n      }\n\n      return () => {\n        if (autoScrollTimerRef.current) {\n          clearInterval(autoScrollTimerRef.current);\n        }\n      };\n    }, [currentIndex, userScrolling, data.length]);\n\n    const scrollToIndex = (index) => {\n      if (scrollViewRef.current) {\n        scrollViewRef.current.scrollTo({\n          x: index * cardWidth,\n          animated: true\n        });\n        setCurrentIndex(index);\n      }\n    };\n\n    const handleScroll = (event) => {\n      const contentOffset = event.nativeEvent.contentOffset.x;\n      const index = Math.round(contentOffset / cardWidth);\n      setCurrentIndex(index);\n    };\n\n    const handleScrollBegin = () => {\n      setUserScrolling(true);\n      if (autoScrollTimerRef.current) {\n        clearInterval(autoScrollTimerRef.current);\n      }\n    };\n\n    const handleScrollEnd = () => {\n      // Reset after a short delay to prevent immediate auto-scroll\n      setTimeout(() => {\n        setUserScrolling(false);\n      }, 1000);\n    };\n\n    const handleDotPress = (index) => {\n      setUserScrolling(true);\n      scrollToIndex(index);\n      // Reset auto-scroll after a delay\n      setTimeout(() => {\n        setUserScrolling(false);\n      }, 1000);\n    };\n\n    return (\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>{title}</Text>\n        <View style={styles.scrollContainer}>\n          <ScrollView\n            ref={scrollViewRef}\n            horizontal\n            showsHorizontalScrollIndicator={true}\n            style={[styles.scrollContainer, { WebkitOverflowScrolling: 'touch' }]}\n            contentContainerStyle={styles.scrollContent}\n            onScroll={handleScroll}\n            scrollEventThrottle={16}\n            pagingEnabled={Platform.OS !== 'web'}\n            onScrollBeginDrag={handleScrollBegin}\n            onScrollEndDrag={handleScrollEnd}\n            onMomentumScrollEnd={handleScrollEnd}\n          >\n            {data.map((item, index) => renderItem(item, index))}\n          </ScrollView>\n          {/* Clickable scroll indicators */}\n          <View style={styles.scrollIndicators}>\n            {data.map((_, index) => (\n              <TouchableOpacity\n                key={index}\n                onPress={() => handleDotPress(index)}\n                style={styles.scrollIndicatorButton}\n              >\n                <View\n                  style={[\n                    styles.scrollIndicator,\n                    currentIndex === index && styles.scrollIndicatorActive\n                  ]}\n                />\n              </TouchableOpacity>\n            ))}\n          </View>\n          {/* Scroll hint for mobile */}\n          {Platform.OS !== 'web' && (\n            <View style={styles.scrollHint}>\n              <Text style={styles.scrollHintText}>Swipe for more</Text>\n              <MaterialCommunityIcons name=\"gesture-swipe-horizontal\" size={24} color={theme.colors.primary} />\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const ReviewsSection = () => {\n    const renderReview = (review, index) => (\n      <View key={index} style={styles.reviewCard}>\n        <Text style={styles.reviewText}>{review.text}</Text>\n        <View style={styles.reviewAuthorContainer}>\n          <ReviewImage\n            source={review.image}\n            style={styles.reviewerImage}\n          />\n          <View>\n            <Text style={styles.reviewAuthorName}>{review.author}</Text>\n            <Text style={styles.reviewAuthorTitle}>Owner Review</Text>\n            <View style={styles.starsContainer}>\n              {[1, 2, 3, 4, 5].map((_, index) => (\n                <MaterialCommunityIcons \n                  key={index}\n                  name=\"star\"\n                  size={16}\n                  color={theme.colors.primary}\n                  style={styles.starIcon}\n                />\n              ))}\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n\n    return (\n      <AutoScrollSection\n        data={reviews}\n        renderItem={renderReview}\n        title=\"Kind Words From Users\"\n      />\n    );\n  };\n\n  const BlogSection = () => {\n    const renderBlogPost = (post, index) => (\n      <TouchableOpacity \n        key={post.id} \n        style={[\n          styles.blogCard,\n          { marginRight: index === BLOG_POSTS.length - 1 ? 0 : 10 }\n        ]} \n        onPress={() => navigateToFrom(navigation, 'BlogPost', 'Home', { post })}\n      >\n        <View style={styles.authorContainer}>\n          {/* Add safety check for image source */}\n          {post.author.profilePicture && (\n            <Image\n              source={\n                typeof post.author.profilePicture === 'string' \n                  ? { uri: post.author.profilePicture }\n                  : post.author.profilePicture\n              }\n              style={styles.authorImage}\n              onError={(error) => {\n                console.log('Image load error:', error);\n              }}\n            />\n          )}\n          <View style={styles.blogContent}>\n            <Text style={[styles.title, { color: theme.colors.primary }]} numberOfLines={2}>\n              {post.title}\n            </Text>\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.dot}> • </Text>\n              <Text style={styles.readTime}>{post.readTime}</Text>\n            </View>\n            <Text style={styles.preview} numberOfLines={3}>\n              {post.content.slice(0, 100)}...\n            </Text>\n            <View style={styles.tags}>\n              {post.tags.slice(0, 2).map((tag, tagIndex) => (\n                <View \n                  key={tagIndex} \n                  style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n                >\n                  <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.stats}>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"heart-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.likes}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"comment-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.comments}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"share-outline\" size={16} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.shares}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n\n    return (\n      <AutoScrollSection\n        data={BLOG_POSTS}\n        renderItem={renderBlogPost}\n        title=\"Blog\"\n        cardWidth={320}\n      />\n    );\n  };\n\n  const Features = () => {\n    const [activeTab, setActiveTab] = useState('owners'); // Default to owners tab\n\n    // Add roadmap colors array\n    const roadmapColors = ['#515d6c', '#516a6c', '#516C61', '#6A6C51'];\n\n    // Update the feature item structure and styles\n    const featureItemStyle = {\n      flexDirection: 'row',\n      marginBottom: 20,\n      alignItems: 'flex-start',\n      width: '100%',\n    };\n\n    const featureContentStyle = {\n      flex: 1,\n      marginLeft: 5,\n    };\n\n    return (\n      <View style={styles.featuresSection}>\n        <Text style={styles.sectionTitle}>How It Works</Text>\n        <View style={styles.toggleContainer}>\n          <TouchableOpacity \n            style={[styles.toggleButton, activeTab === 'owners' && styles.toggleButtonActive]}\n            onPress={() => setActiveTab('owners')}\n          >\n            <Text style={[styles.toggleButtonText, activeTab === 'owners' && styles.toggleButtonTextActive]}>For Pet Owners</Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={[styles.toggleButton, activeTab === 'sitters' && styles.toggleButtonActive]}\n            onPress={() => setActiveTab('sitters')}\n          >\n            <Text style={[styles.toggleButtonText, activeTab === 'sitters' && styles.toggleButtonTextActive]}>For Pet Professionals</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.featuresContainer}>\n          {activeTab === 'owners' && (\n            <View style={styles.featureColumn}>\n              <Text style={styles.columnTitle}>For Pet Owners</Text>\n              <View style={styles.featuresList}>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[0] }]}>\n                    <FontAwesome6 name=\"person-running\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Complete Your Profile</Text>\n                    <Text style={styles.featureText}>Submit details about you and your requirements.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[1] }]}>\n                    <MaterialCommunityIcons name=\"horse-human\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Complete Pet Profile</Text>\n                    <Text style={styles.featureText}>Submit details about your pet and sitting requirements.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[2] }]}>\n                    <MaterialCommunityIcons name=\"professional-hexagon\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Search for Pro's</Text>\n                    <Text style={styles.featureText}>You can use our marketplace to find the best pro for your desired service.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[3] }]}>\n                    <FontAwesome5 name=\"calendar-check\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Confirm Your Booking</Text>\n                    <Text style={styles.featureText}>Coordinate directly with your professional to finalize details.</Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.actionButton} onPress={() => navigateToFrom(navigation, 'SignUp', 'Home')}>\n                  <Text style={styles.buttonText}>Sign up Today!</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n          {activeTab === 'sitters' && (\n            <View style={styles.featureColumn}>\n              <Text style={styles.columnTitle}>For Pet Professionals</Text>\n              <View style={styles.featuresList}>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[0] }]}>\n                    <FontAwesome name=\"sign-in\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Apply to Join Pro Community</Text>\n                    <Text style={styles.featureText}>Submit your specialties, documents, bio, and availability to begin.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[1] }]}>\n                    <MaterialCommunityIcons name=\"plus-circle\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Create Services</Text>\n                    <Text style={styles.featureText}>Create services to offer to pet owners.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[2] }]}>\n                    <FontAwesome6 name=\"handshake-simple\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Get Matched with Owners</Text>\n                    <Text style={styles.featureText}>Pet owners in your area will reach out to you for yourservices.</Text>\n                  </View>\n                </View>\n                <View style={featureItemStyle}>\n                  <View style={[styles.featureIconCircle, { backgroundColor: roadmapColors[3] }]}>\n                    <MaterialIcons name=\"auto-graph\" size={24} color=\"white\" />\n                  </View>\n                  <View style={featureContentStyle}>\n                    <Text style={styles.featureTitle}>Grow Your Business</Text>\n                    <Text style={styles.featureText}>Manage bookings and get support as you build your pet service business.</Text>\n                  </View>\n                </View>\n              </View>\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity style={styles.actionButton} onPress={() => navigateToFrom(navigation, 'SignUp', 'Home')}>\n                  <Text style={styles.buttonText}>Become a Professional</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const ContactSection = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n    // Use formspree only on web\n    const webFormData = Platform.OS === 'web' && useForm ? useForm(\"mkgobpro\") : [null, null];\n    const [state, handleSubmit] = webFormData;\n\n    const handleFormSubmit = async (e) => {\n      if (Platform.OS === 'web') {\n        e.preventDefault();\n      }\n      \n      setIsSubmitting(true);\n\n      if (Platform.OS === 'web' && handleSubmit) {\n        // Use formspree on web\n        const formData = {\n          name: name,\n          email: email,\n          message: message\n        };\n        \n        await handleSubmit(formData);\n        \n        if (state && state.succeeded) {\n          setName('');\n          setEmail('');\n          setMessage('');\n          setIsSubmitted(true);\n        }\n      } else {\n        // On mobile, use mailto or show success message\n        const subject = `Contact from ${name}`;\n        const body = `Name: ${name}\\nEmail: ${email}\\n\\nMessage:\\n${message}`;\n        const mailtoUrl = `mailto:support@crittrcove.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n        \n        try {\n          await Linking.openURL(mailtoUrl);\n          setName('');\n          setEmail('');\n          setMessage('');\n          setIsSubmitted(true);\n        } catch (error) {\n          console.log('Error opening mail app:', error);\n          // Still show success for better UX\n          setIsSubmitted(true);\n        }\n      }\n      \n      setIsSubmitting(false);\n    };\n\n    const isWebSubmitted = Platform.OS === 'web' && state && state.succeeded;\n    const showSuccessMessage = isSubmitted || isWebSubmitted;\n\n    if (showSuccessMessage) {\n      return (\n        <View style={styles.contactSection}>\n          <View style={styles.contactContainer}>\n            <Text style={[styles.sectionTitle, { color: theme.colors.primary }]}>\n              Thanks for reaching out!\n            </Text>\n            <Text style={styles.successMessage}>\n              {Platform.OS === 'web' \n                ? \"We'll get back to you soon.\" \n                : \"Your email app should open with a pre-filled message.\"}\n            </Text>\n          </View>\n        </View>\n      );\n    }\n\n    const webErrors = Platform.OS === 'web' && state ? state.errors : null;\n    const currentlySubmitting = isSubmitting || (Platform.OS === 'web' && state && state.submitting);\n\n    return (\n      <View style={styles.contactSection}>\n        <View style={styles.contactContainer}>\n          <Text style={styles.sectionTitle}>Contact Us</Text>\n          <TextInput\n            placeholder=\"Your Name\"\n            style={styles.input}\n            value={name}\n            onChangeText={setName}\n            name=\"name\"\n          />\n          {Platform.OS === 'web' && ValidationError && (\n            <ValidationError prefix=\"Name\" field=\"name\" errors={webErrors} />\n          )}\n          \n          <TextInput\n            placeholder=\"Your Email\"\n            style={styles.input}\n            value={email}\n            onChangeText={setEmail}\n            keyboardType=\"email-address\"\n            name=\"email\"\n            autoCapitalize=\"none\"\n          />\n          {Platform.OS === 'web' && ValidationError && (\n            <ValidationError prefix=\"Email\" field=\"email\" errors={webErrors} />\n          )}\n          \n          <TextInput\n            placeholder=\"Your Message\"\n            style={[styles.input, styles.messageInput]}\n            value={message}\n            onChangeText={setMessage}\n            multiline\n            name=\"message\"\n          />\n          {Platform.OS === 'web' && ValidationError && (\n            <ValidationError prefix=\"Message\" field=\"message\" errors={webErrors} />\n          )}\n          \n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[\n                styles.actionButton,\n                currentlySubmitting && styles.disabledButton\n              ]}\n              onPress={handleFormSubmit}\n              disabled={currentlySubmitting}\n            >\n              <Text style={styles.buttonText}>\n                {currentlySubmitting ? 'Sending...' : (Platform.OS === 'web' ? 'Send' : 'Open Email')}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const ServiceCard = ({ icon, title, description, color }) => {\n    const cardStyles = {\n      container: {\n        width: isMobileView ? '90%' : '45%',\n        minWidth: isMobileView ? 'auto' : 300,\n        maxWidth: 500,\n        padding: 20,\n        backgroundColor: '#fff',\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.1,\n        shadowRadius: 4,\n        elevation: 3,\n        marginBottom: 20,\n        alignSelf: 'center',\n      },\n      header: {\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: 15,\n      },\n      iconContainer: {\n        width: 60,\n        height: 60,\n        borderRadius: 30,\n        backgroundColor: `${theme.colors.primary}15`,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginBottom: 15,\n      },\n      title: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: theme.colors.text,\n        fontFamily: theme.fonts.header.fontFamily,\n        textAlign: 'center',\n        marginBottom: 10,\n      },\n      description: {\n        fontSize: 16,\n        lineHeight: 24,\n        color: theme.colors.text,\n        fontFamily: theme.fonts.regular.fontFamily,\n        textAlign: 'center',\n      },\n    };\n\n    return (\n      <View style={cardStyles.container}>\n        <View style={cardStyles.header}>\n          <View style={cardStyles.iconContainer}>\n            <MaterialCommunityIcons name={icon} size={32} color={color} />\n          </View>\n          <Text style={cardStyles.title}>{title}</Text>\n        </View>\n        <Text style={cardStyles.description}>{description}</Text>\n      </View>\n    );\n  };\n\n  return (\n    <ScrollView \n      style={styles.container}\n      contentContainerStyle={styles.contentContainer}\n      showsVerticalScrollIndicator={true}\n      bounces={false}\n      overScrollMode=\"never\"\n    >\n      <View style={styles.heroSection}>\n        <Image\n          source={require('../../assets/hero-image.jpg')}\n          style={styles.heroImage}\n          resizeMode=\"cover\"\n        />\n        <View style={styles.heroContent}>\n          <Text style={styles.heroText}>Welcome to CrittrCove</Text>\n          <TouchableOpacity \n            style={styles.heroSignupButton} \n            onPress={() => navigateToFrom(navigation, 'SignUp', 'Home')}\n          >\n            <Text style={styles.heroSignupButtonText}>Sign Up Today</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Service Highlights Section */}\n      <View style={styles.serviceHighlightsSection}>\n        <Text style={styles.mainServiceTitle}>Marketplace for Pet Owners and Care Professionals</Text>\n        \n        <View style={[styles.servicesGrid, { \n          flexDirection: isMobileView ? 'column' : 'row',\n          alignItems: isMobileView ? 'center' : 'flex-start',\n        }]}>\n          <ServiceCard\n            icon=\"paw\"\n            title=\"All Animals Welcome\"\n            description=\"From everyday pets to exotic companions, CrittrCove is a marketplace where you can find independent professionals offerring care for a wide variety of animals.\"\n            color={theme.colors.mainColors.senary}\n          />\n          <ServiceCard\n            icon=\"calendar-clock\"\n            title=\"Flexible Booking Options\"\n            description=\"Book single visits, multiple days, or set up recurring services. Create subscription plans or schedule services months in advance.\"\n            color={theme.colors.mainColors.quinary}\n          />\n          <ServiceCard\n            icon=\"shield-check\"\n            title=\"Verified Badges\"\n            description=\"All professionals are allowed on the platform, and clients can see their verified badges to ensure they are who they say they are.\"\n            color={theme.colors.mainColors.main}\n          />\n          <ServiceCard\n            icon=\"tune-variant\"\n            title=\"Customizable Services\"\n            description=\"Professionals can create custom service packages and pricing plans tailored to your specific needs and preferences.\"\n            color={theme.colors.mainColors.quaternary}\n          />\n        </View>\n      </View>\n\n      <Features />\n      <ReviewsSection />\n      <BlogSection />\n\n      {/* Roadmap Section */}\n      <RoadmapSection />\n\n      {/* FAQ Section */}\n      {/* <View style={styles.section}>\n        <Text style={styles.sectionTitle}>FAQs</Text>\n         {faqs.map((faq, index) => (\n          <View key={index} style={styles.faqItem}>\n            <TouchableOpacity \n              style={styles.faqButton}\n              onPress={() => setSelectedFaq(selectedFaq === index ? null : index)}\n            >\n              <Text style={styles.faqQuestion}>{faq.question}</Text>\n              <Text style={styles.faqToggle}>{selectedFaq === index ? '-' : '+'}</Text>\n            </TouchableOpacity>\n            {selectedFaq === index && (\n              <Text style={styles.faqAnswer}>{faq.answer}</Text>\n            )}\n          </View>\n        ))} \n      </View> */}\n\n      {/* Contact Us Section */}\n      <ContactSection />\n\n      {/* Footer */}\n      <View style={styles.footer}>\n        <View style={styles.socialIconsRow}>\n          <TouchableOpacity \n            style={styles.socialIcon} \n            onPress={() => Linking.openURL('https://www.instagram.com/thezensitter')}\n          >\n            <FontAwesome name=\"instagram\" size={24} color=\"white\" />\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.socialIcon} \n            onPress={() => Linking.openURL('https://discord.com/your-profile')}\n          >\n            <FontAwesome5 name=\"discord\" size={24} color=\"white\" />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.footerLinksRow}>\n          <Text style={styles.footerLink} onPress={() => navigateToFrom(navigation, 'PrivacyPolicy', 'Home')}>Privacy Policy</Text>\n          <Text style={styles.footerLink} onPress={() => navigateToFrom(navigation, 'TermsOfService', 'Home')}>Terms of Service</Text>\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  contentContainer: {\n    flexGrow: 1,\n  },\n  heroSection: {\n    height: Platform.OS === 'web' ? '70vh' : windowHeight * 0.5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    overflow: 'hidden',\n    position: 'relative',\n  },\n  heroImage: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  heroContent: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100%',\n    paddingHorizontal: 20,\n  },\n  heroText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n    color: 'white',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {width: -1, height: 1},\n    textShadowRadius: 10,\n    marginBottom: 20,\n  },\n  heroSignupButton: {\n    backgroundColor: 'white',\n    paddingHorizontal: 30,\n    paddingVertical: 15,\n    borderRadius: 25,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  heroSignupButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  section: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    alignItems: 'center',\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 10,\n    textAlign: 'center',\n    color: 'black',\n  },\n  card: {\n    marginBottom: 10,\n  },\n  appButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 10,\n  },\n  appButton: {\n    width: '45%',\n  },\n  reviewsSection: {\n    // height: 350,\n    marginBottom: 20,\n  },\n  reviewsBackground: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewsOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  reviewsSubtitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10,\n    textAlign: 'center',\n    width: '100%',\n  },\n  reviewsTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontFamily: theme.fonts.header.fontFamily,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 20,\n    textAlign: 'center',\n    width: '100%',\n  },\n  reviewsContainer: {\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    overflowX: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    msOverflowStyle: 'auto',\n    scrollbarWidth: 'auto',\n    scrollbarColor: `${theme.colors.primary} transparent`,\n  },\n  reviewsContent: {\n    flexDirection: 'row',\n    minWidth: 'min-content',\n    gap: 10,\n    padding: 20,\n    paddingBottom: 40, // Add space for indicators\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewCard: {\n    width: 300,\n    height: 200,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    marginRight: 10,\n  },\n  reviewCardMobile: {\n    width: '100%',\n    height: '100%',\n  },\n  reviewQuote: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n    marginBottom: 10,\n  },\n  reviewText: {\n    fontSize: 18,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 15,\n    flex: 1,\n  },\n  reviewAuthorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  reviewerImage: {\n    width: 45,\n    height: 60,\n    borderRadius: 8,\n    marginRight: 10,\n    objectFit: 'cover',\n  },\n  reviewAuthorName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewAuthorTitle: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 2,\n  },\n  paginationDots: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginTop: 10,\n  },\n  paginationDot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: 'white',\n    margin: 5,\n  },\n  paginationDotActive: {\n    backgroundColor: 'black',\n  },\n  featuresSection: {\n    marginBottom: 80,\n    marginTop: 20,\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 10,\n  },\n  toggleButton: {\n    padding: 10,\n    backgroundColor: 'white',\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  toggleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  toggleButtonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  toggleButtonTextActive: {\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  featuresContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  featureColumn: {\n    width: SCREEN_WIDTH < 768 ? '90%' : '100%',\n    maxWidth: 600,\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  columnTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: 'black',\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  featuresList: {\n    width: '100%',\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 20,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    marginBottom: 20,\n    alignItems: 'flex-start',\n    width: '100%',\n  },\n  featureIconCircle: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 5,\n  },\n  featureIcon: {\n    fontSize: 40,\n  },\n  featureTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    color: 'black',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  featureText: {\n    fontSize: theme.fontSizes.mediumLarge + 2,\n    color: 'black',\n    lineHeight: 22,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButton: {\n    backgroundColor: '#6A6C51',\n    width: '50%',\n    padding: 5,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: 'white',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  blogSection: {\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  blogCard: {\n    width: 300,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    padding: 15,\n    marginRight: 10,\n  },\n  authorContainer: {\n    flexDirection: 'column',\n  },\n  authorImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginBottom: 10,\n  },\n  blogContent: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  authorName: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    color: '#666',\n  },\n  readTime: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  preview: {\n    fontSize: 16,\n    lineHeight: 20,\n    marginBottom: 12,\n    color: '#444',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 12,\n  },\n  tag: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 8,\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  statText: {\n    marginLeft: 4,\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  roadmapSection: {\n    marginBottom: 20,\n  },\n  roadmapImage: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  roadmapOverlayText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: 'black',\n  },\n  faqSection: {\n    marginBottom: 20,\n  },\n  faqItem: {\n    marginBottom: 10,\n  },\n  faqButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  faqQuestion: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  faqToggle: {\n    fontSize: 14,\n    color: 'gray',\n  },\n  faqAnswer: {\n    fontSize: 16,\n  },\n  contactSection: {\n    // maxWidth: 800,\n    width: '100%',\n    // display: 'flex',\n    // flexDirection: 'column',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: 20,\n  },\n  contactContainer: {\n    width: '100%',\n    maxWidth: 600,\n  },\n  input: {\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: 'gray',\n    borderRadius: 5,\n  },\n  footer: {\n    padding: 20,\n    backgroundColor: theme.colors.primary,\n    alignItems: 'center',\n  },\n  socialIconsRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    marginBottom: 15,\n  },\n  socialIcon: {\n    marginHorizontal: 15,\n    padding: 5,\n  },\n  footerLinksRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n  },\n  footerLink: {\n    color: 'white',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginHorizontal: 15,\n    textDecorationLine: 'underline',\n  },\n  successMessage: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 10,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  messageInput: {\n    height: 100,\n    textAlignVertical: 'top',\n    paddingTop: 10,\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  validationError: {\n    color: 'red',\n    fontSize: 16,\n    marginTop: -5,\n    marginBottom: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  starsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  starIcon: {\n    marginRight: 2,\n  },\n  waitlistSection: {\n    // backgroundColor: '#f5f5f5',\n    marginVertical: 20,\n    borderRadius: 10,\n  },\n  waitlistDescription: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginBottom: 20,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n    paddingHorizontal: 20,\n    lineHeight: 24,\n  },\n  waitlistButton: {\n    marginTop: 10,\n    width: '80%',\n    maxWidth: 300,\n    padding: 15,\n  },\n  scrollIndicators: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  scrollIndicatorButton: {\n    padding: 10, // Increase touch target\n    marginHorizontal: -6, // Compensate for padding while maintaining visual spacing\n  },\n  scrollIndicator: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: theme.colors.border,\n    marginHorizontal: 4,\n  },\n  scrollIndicatorActive: {\n    backgroundColor: theme.colors.primary,\n    width: 24,\n  },\n  scrollHint: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 10,\n  },\n  scrollHintText: {\n    color: theme.colors.primary,\n    marginRight: 5,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  scrollContainer: {\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    overflowX: 'auto',\n    WebkitOverflowScrolling: 'touch',\n    msOverflowStyle: 'auto',\n    scrollbarWidth: 'auto',\n    scrollbarColor: `${theme.colors.primary} transparent`,\n  },\n  scrollContent: {\n    flexDirection: 'row',\n    minWidth: 'min-content',\n    gap: 10,\n    padding: 20,\n    paddingBottom: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  serviceHighlightsSection: {\n    padding: 20,\n    width: '100%',\n    maxWidth: 1200,\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    alignItems: 'center',\n  },\n  mainServiceTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  servicesGrid: {\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    gap: 20,\n    width: '100%',\n  },\n});\n","import React from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { Button } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\n\nconst FloatingSaveButton = ({ visible, onSave, btnText = \"Save Changes\" }) => {\n  const { screenWidth, isCollapsed } = React.useContext(AuthContext);\n  \n  // Don't render anything if not visible\n  if (!visible) {\n    return null;\n  }\n  \n  // Simple logging only when visible\n  React.useEffect(() => {\n    if (visible) {\n      debugLog('MBA230uvj0834h9', 'FloatingSaveButton is visible');\n    }\n  }, [visible]);\n\n  // Calculate marginLeft to match sidebar on desktop\n  const marginLeft = screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0;\n\n  return (\n    <View \n      style={[\n        styles.floatingButtonContainer,\n        Platform.OS === 'web' ? styles.webButton : styles.mobileButton,\n        { marginLeft }\n      ]}\n    >\n      <Button \n        mode=\"contained\" \n        onPress={onSave}\n        style={styles.floatingButton}\n        labelStyle={styles.buttonLabel}\n      >\n        {btnText}\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  floatingButtonContainer: {\n    position: 'fixed',\n    bottom: 20,\n    left: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 9999,\n    backgroundColor: 'transparent',\n  },\n  webButton: {\n    position: 'fixed',\n    bottom: 20,\n    backgroundColor: 'transparent',\n  },\n  mobileButton: {\n    position: 'fixed',\n    bottom: 20,\n    backgroundColor: 'transparent',\n    width: '100%',\n  },\n  floatingButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 25,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    maxWidth: 600,\n    minWidth: 200,\n  },\n  buttonLabel: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n});\n\nexport default FloatingSaveButton;","import React, { useContext } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\n\n/**\n * @typedef {Object} StepProgressIndicatorProps\n * @property {string[]} steps - Array of step names\n * @property {number} currentStep - Current active step (0-based index)\n * @property {function} [onStepPress] - Optional callback when a step is pressed\n * @property {Object} [style] - Optional style overrides\n */\n\nconst StepProgressIndicator = props => {\n  const {\n    steps,\n    currentStep,\n    onStepPress,\n    style,\n  } = props;\n  \n  const { screenWidth, is_DEBUG } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n\n  if (is_DEBUG) {\n    console.log(\"MBA1234 - Screen width:\", screenWidth);\n    console.log(\"MBA1234 - Is desktop:\", isDesktop);\n    console.log(\"MBA1234 - Steps:\", steps);\n    console.log(\"MBA1234 - Current step:\", currentStep);\n  }\n\n  // Helper function to determine what type of line to render between steps\n  const renderLine = (stepIndex) => {\n    if (stepIndex < currentStep) {\n      // Line between completed steps\n      return (\n        <View style={[styles.line, styles.completedLine]} />\n      );\n    } else if (stepIndex === currentStep) {\n      // Line after the active step - show progress indicator\n      return (\n        <View style={styles.progressLine}>\n          <View style={styles.progressFilled} />\n          <View style={styles.progressEmpty} />\n        </View>\n      );\n    } else {\n      // Line between future steps\n      return (\n        <View style={styles.line} />\n      );\n    }\n  };\n\n  // Render a single step\n  const renderStep = (stepName, index) => {\n    const isActive = index === currentStep;\n    const isCompleted = index < currentStep;\n\n    return (\n      <View key={`step-${index}`} style={styles.step}>\n        <View style={[\n          styles.stepCircle,\n          isActive && styles.activeStepCircle,\n          isCompleted && styles.completedStepCircle\n        ]}>\n          <Text style={[\n            styles.stepNumber,\n            isActive && styles.activeStepNumber,\n            isCompleted && styles.completedStepNumber,\n          ]}>{index + 1}</Text>\n        </View>\n        \n        {(isActive || isDesktop) && (\n          <Text style={[\n            styles.stepName,\n            isActive && styles.activeStepName,\n          ]}>{stepName}</Text>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <View style={[styles.wrapper, style]}>\n      <View style={styles.container}>\n        {steps.map((step, index) => (\n          <React.Fragment key={`step-fragment-${index}`}>\n            {renderStep(step, index)}\n            {index < steps.length - 1 && renderLine(index)}\n          </React.Fragment>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    backgroundColor: theme.colors.background,\n    paddingVertical: 12,\n    width: '100%',\n    zIndex: 1,\n  },\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    paddingHorizontal: 16,\n    justifyContent: 'space-between',\n  },\n  step: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 2,\n  },\n  stepCircle: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    zIndex: 3,\n  },\n  activeStepCircle: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n  },\n  completedStepCircle: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n    opacity: 0.8,\n  },\n  stepNumber: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.5,\n  },\n  activeStepNumber: {\n    color: theme.colors.surface,\n    opacity: 1,\n  },\n  completedStepNumber: {\n    color: theme.colors.surface,\n  },\n  stepName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.7,\n    marginLeft: 8,\n    whiteSpace: 'nowrap',\n  },\n  activeStepName: {\n    color: theme.colors.mainColors.main,\n    opacity: 1,\n  },\n  line: {\n    height: 2,\n    backgroundColor: theme.colors.border,\n    opacity: 0.2,\n    flex: 1,\n    marginHorizontal: 4,\n    zIndex: 1,\n  },\n  completedLine: {\n    backgroundColor: theme.colors.mainColors.main,\n    opacity: 1,\n  },\n  progressLine: {\n    flex: 1,\n    flexDirection: 'row',\n    height: 2,\n    marginHorizontal: 4,\n    zIndex: 1,\n  },\n  progressFilled: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    height: 2,\n  },\n  progressEmpty: {\n    flex: 1,\n    backgroundColor: theme.colors.border,\n    opacity: 0.2,\n    height: 2,\n  },\n});\n\nexport default StepProgressIndicator; ","/**\n * Validation utility functions for form inputs\n * These functions are used across the app to ensure data integrity and security\n */\n\n// Import is_PRODUCTION from AuthContext\nimport { IsProduction } from '../context/AuthContext';\n\n/**\n * Universal input sanitizer that handles different input types\n * This function sanitizes input based on the specified type while preventing XSS and injection attacks\n * @param {string} input - The input string to sanitize\n * @param {string} type - The type of input ('message', 'email', 'name', 'password', 'phone', 'general', 'amount', 'description')\n * @param {Object} options - Additional options for sanitization\n * @returns {string} - The sanitized input\n */\nexport const sanitizeInput = (input, type = 'general', options = {}) => {\n  console.log(`[SANITIZE DEBUG] Input: \"${input}\", Type: ${type}`);\n  \n  if (!input || typeof input !== 'string') {\n    console.log(`[SANITIZE DEBUG] Empty input, returning empty string`);\n    return '';\n  }\n  \n  // Common security patterns to remove\n  const removeScriptTags = (str) => str.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '');\n  const removeHtmlTags = (str) => str.replace(/<[^>]*>/g, '');\n  const removeJavaScriptProtocol = (str) => str.replace(/javascript:/gi, '');\n  const removeEventHandlers = (str) => str.replace(/on\\w+\\s*=/gi, '');\n  const removeDataAttributes = (str) => str.replace(/data-\\w+\\s*=/gi, '');\n  \n  // SQL injection prevention patterns\n  const removeSqlKeywords = (str) => str.replace(/(\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT)\\b)/gi, '');\n  \n  let sanitized = input;\n  console.log(`[SANITIZE DEBUG] Initial sanitized: \"${sanitized}\"`);\n  \n  // Apply common security sanitization to all types\n  sanitized = removeScriptTags(sanitized);\n  console.log(`[SANITIZE DEBUG] After removeScriptTags: \"${sanitized}\"`);\n  sanitized = removeJavaScriptProtocol(sanitized);\n  console.log(`[SANITIZE DEBUG] After removeJavaScriptProtocol: \"${sanitized}\"`);\n  sanitized = removeEventHandlers(sanitized);\n  console.log(`[SANITIZE DEBUG] After removeEventHandlers: \"${sanitized}\"`);\n  sanitized = removeDataAttributes(sanitized);\n  console.log(`[SANITIZE DEBUG] After removeDataAttributes: \"${sanitized}\"`);\n  \n  // Type-specific sanitization\n  switch (type.toLowerCase()) {\n    case 'message':\n      // For messages, we want to preserve most characters for natural communication\n      // but still prevent XSS and malicious code injection\n      \n      // Remove HTML tags but preserve common symbols and emojis\n      sanitized = removeHtmlTags(sanitized);\n      \n      // Remove SQL injection patterns\n      sanitized = removeSqlKeywords(sanitized);\n      \n      // Remove dangerous character sequences but preserve normal punctuation\n      sanitized = sanitized.replace(/[<>]/g, ''); // Remove angle brackets\n      sanitized = sanitized.replace(/\\{[^}]*\\}/g, ''); // Remove code blocks\n      \n      // Preserve line breaks and common punctuation\n      // Allow: letters, numbers, spaces, common punctuation, emojis\n      // This regex allows most unicode characters while blocking dangerous patterns\n      sanitized = sanitized.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, ''); // Remove control characters\n      \n      // Limit length to prevent DoS attacks\n      const maxMessageLength = options.maxLength || 5000;\n      if (sanitized.length > maxMessageLength) {\n        sanitized = sanitized.substring(0, maxMessageLength);\n      }\n      break;\n      \n    case 'email':\n      // For emails, be more restrictive\n      sanitized = sanitized.replace(/[<>\"']/g, ''); // Remove quotes and brackets\n      sanitized = sanitized.replace(/\\s/g, ''); // Remove spaces\n      sanitized = sanitized.toLowerCase(); // Convert to lowercase\n      break;\n      \n    case 'name':\n      console.log(`[SANITIZE DEBUG] Processing 'name' type, before: \"${sanitized}\"`);\n      // For names, allow letters, spaces, hyphens, apostrophes, and periods\n      sanitized = sanitized.replace(/[^a-zA-Z\\s\\-'\\.]/g, '');\n      console.log(`[SANITIZE DEBUG] After character filter: \"${sanitized}\"`);\n      sanitized = sanitized.replace(/[<>\"]/g, '');\n      console.log(`[SANITIZE DEBUG] After quote removal: \"${sanitized}\"`);\n      break;\n      \n    case 'password':\n      // For passwords, remove HTML tags, SQL keywords, and dangerous characters but preserve most special chars\n      sanitized = removeHtmlTags(sanitized);\n      sanitized = removeSqlKeywords(sanitized);\n      sanitized = sanitized.replace(/[<>\"']/g, '');\n      break;\n      \n    case 'phone':\n      // For phone numbers, allow only digits, spaces, hyphens, parentheses, and plus\n      sanitized = sanitized.replace(/[^0-9\\s\\-\\(\\)\\+\\.]/g, '');\n      break;\n      \n    case 'amount':\n      // For monetary amounts, allow only digits and decimal point\n      sanitized = sanitized.replace(/[^\\d\\.]/g, '');\n      // Ensure only one decimal point\n      const parts = sanitized.split('.');\n      if (parts.length > 2) {\n        sanitized = parts[0] + '.' + parts.slice(1).join('');\n      }\n      // Limit to 2 decimal places\n      if (parts.length === 2 && parts[1].length > 2) {\n        sanitized = parts[0] + '.' + parts[1].substring(0, 2);\n      }\n      break;\n      \n    case 'description':\n      // For descriptions, allow spaces, dashes, punctuation, and normal text characters\n      sanitized = removeHtmlTags(sanitized);\n      sanitized = removeSqlKeywords(sanitized);\n      \n      // Remove dangerous angle brackets but preserve normal punctuation and spaces\n      sanitized = sanitized.replace(/[<>]/g, '');\n      \n      // Remove control characters but preserve spaces, dashes, punctuation, and normal text\n      sanitized = sanitized.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, '');\n      \n      // Limit length\n      const maxDescLength = options.maxLength || 1000;\n      if (sanitized.length > maxDescLength) {\n        sanitized = sanitized.substring(0, maxDescLength);\n      }\n      break;\n      \n    case 'general':\n    default:\n      // For general input, allow spaces, dashes, and normal text but remove dangerous content\n      sanitized = removeHtmlTags(sanitized);\n      sanitized = removeSqlKeywords(sanitized);\n      \n      // Remove dangerous characters but preserve spaces, dashes, and normal punctuation\n      sanitized = sanitized.replace(/[<>\"']/g, '');\n      \n      // Remove control characters but preserve normal text characters\n      sanitized = sanitized.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F]/g, '');\n      break;\n  }\n  \n  // Final security check - remove any remaining dangerous patterns\n  sanitized = sanitized.replace(/\\0/g, ''); // Remove null bytes\n  console.log(`[SANITIZE DEBUG] After null byte removal: \"${sanitized}\"`);\n  // Note: Control characters are already removed in type-specific sanitization above\n  \n  console.log(`[SANITIZE DEBUG] Final result (no trim): \"${sanitized}\"`);\n  return sanitized;\n};\n\n/**\n * Validates message content for chat/messaging functionality\n * @param {string} message - The message content to validate\n * @param {Object} options - Validation options\n * @returns {Object} - Object containing isValid (boolean), message (string), and sanitizedInput (string)\n */\nexport const validateMessage = (message, options = {}) => {\n  const maxLength = options.maxLength || 5000;\n  const minLength = options.minLength || 0;\n  const allowEmpty = options.allowEmpty || false;\n  \n  // Check if message is empty\n  if (!message || message.trim() === '') {\n    if (allowEmpty) {\n      return {\n        isValid: true,\n        message: '',\n        sanitizedInput: ''\n      };\n    } else {\n      return {\n        isValid: false,\n        message: 'Message cannot be empty',\n        sanitizedInput: ''\n      };\n    }\n  }\n  \n  // Sanitize the message\n  const sanitizedMessage = sanitizeInput(message, 'message', { maxLength });\n  \n  // Check length after sanitization\n  if (sanitizedMessage.length < minLength) {\n    return {\n      isValid: false,\n      message: `Message must be at least ${minLength} characters long`,\n      sanitizedInput: sanitizedMessage\n    };\n  }\n  \n  if (sanitizedMessage.length > maxLength) {\n    return {\n      isValid: false,\n      message: `Message must be no more than ${maxLength} characters long`,\n      sanitizedInput: sanitizedMessage\n    };\n  }\n  \n  // Check if sanitization removed too much content (potential attack)\n  const originalLength = message.length;\n  const sanitizedLength = sanitizedMessage.length;\n  const removalPercentage = ((originalLength - sanitizedLength) / originalLength) * 100;\n  \n  if (removalPercentage > 50 && originalLength > 10) {\n    return {\n      isValid: false,\n      message: 'Message contains too many invalid characters',\n      sanitizedInput: sanitizedMessage\n    };\n  }\n  \n  // Check for spam patterns (repeated characters)\n  const repeatedCharPattern = /(.)\\1{10,}/; // More than 10 repeated characters\n  if (repeatedCharPattern.test(sanitizedMessage)) {\n    return {\n      isValid: false,\n      message: 'Message contains too many repeated characters',\n      sanitizedInput: sanitizedMessage\n    };\n  }\n  \n  return {\n    isValid: true,\n    message: '',\n    sanitizedInput: sanitizedMessage\n  };\n};\n\n/**\n * Validates an email address\n * @param {string} email - The email address to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validateEmail = (email) => {\n  // Check if email is empty\n  if (!email || email.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Email is required'\n    };\n  }\n\n  // Sanitize the email first\n  const sanitizedEmail = sanitizeInput(email, 'email');\n\n  // Basic email format validation\n  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  \n  if (!emailRegex.test(sanitizedEmail)) {\n    return {\n      isValid: false,\n      message: 'Please enter a valid email address'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: '',\n    sanitizedInput: sanitizedEmail\n  };\n};\n\n/**\n * Validates a first or last name\n * @param {string} name - The name to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validateName = (name) => {\n  // Check if name is empty\n  if (!name || name.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Name is required'\n    };\n  }\n\n  // Don't sanitize again - assume input is already sanitized\n  // This prevents double sanitization when called from components\n  \n  // Only allow letters, spaces, hyphens, and apostrophes\n  const nameRegex = /^[a-zA-Z\\s\\-'\\.]+$/;\n  \n  if (!nameRegex.test(name)) {\n    return {\n      isValid: false,\n      message: 'Name can only contain letters, spaces, hyphens, and apostrophes'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: '',\n    sanitizedInput: name\n  };\n};\n\n/**\n * Validates a password\n * @param {string} password - The password to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePassword = (password) => {\n  // Check if password is empty\n  if (!password || password.trim() === '') {\n    return {\n      isValid: false,\n      message: 'Password is required'\n    };\n  }\n\n  // Sanitize the password\n  const sanitizedPassword = sanitizeInput(password, 'password');\n\n  // Password strength requirements\n  const minLength = 8;\n  const hasUpperCase = /[A-Z]/.test(sanitizedPassword);\n  const hasLowerCase = /[a-z]/.test(sanitizedPassword);\n  const hasNumbers = /\\d/.test(sanitizedPassword);\n  const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(sanitizedPassword);\n\n  // Validate password strength\n  if (IsProduction()) {\n    if (sanitizedPassword.length < minLength) {\n        return {\n        isValid: false,\n        message: `Password must be at least ${minLength} characters long`,\n        sanitizedInput: sanitizedPassword\n        };\n    }\n  }\n\n  // Only enforce strict password requirements in production\n  if (IsProduction()) {\n    if (!hasUpperCase || !hasLowerCase || !hasNumbers || !hasSpecialChar) {\n      return {\n        isValid: false,\n        message: 'Password must contain uppercase, lowercase, numbers, and special characters',\n        sanitizedInput: sanitizedPassword\n      };\n    }\n  }\n\n  return {\n    isValid: true,\n    message: '',\n    sanitizedInput: sanitizedPassword\n  };\n};\n\n/**\n * Validates that two passwords match\n * @param {string} password - The first password\n * @param {string} confirmPassword - The confirmation password\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePasswordMatch = (password, confirmPassword) => {\n  if (password !== confirmPassword) {\n    return {\n      isValid: false,\n      message: 'Passwords do not match'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: ''\n  };\n};\n\n/**\n * Validates a phone number\n * @param {string} phoneNumber - The phone number to validate\n * @returns {Object} - Object containing isValid (boolean) and message (string)\n */\nexport const validatePhoneNumber = (phoneNumber) => {\n  // If phone number is optional, allow empty values\n  if (!phoneNumber || phoneNumber.trim() === '') {\n    return {\n      isValid: true,\n      message: ''\n    };\n  }\n\n  // Sanitize the phone number\n  const sanitizedPhone = sanitizeInput(phoneNumber, 'phone');\n\n  // Basic phone number format validation (allows various formats)\n  const phoneRegex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n  \n  if (!phoneRegex.test(sanitizedPhone)) {\n    return {\n      isValid: false,\n      message: 'Please enter a valid phone number'\n    };\n  }\n\n  return {\n    isValid: true,\n    message: '',\n    sanitizedInput: sanitizedPhone\n  };\n};\n\n// Legacy function - kept for backward compatibility but now uses the universal sanitizer\nexport const sanitizeInputLegacy = (input) => {\n  return sanitizeInput(input, 'general');\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Modal,\n  TextInput,\n  Platform,\n  Dimensions,\n  Picker\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { debugLog } from '../../context/AuthContext';\nimport { sanitizeInput, validateName } from '../../validation/validation';\n\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n    animalTypes: [] // Will be populated with all animal types\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n    animalTypes: ['Horse', 'Cow', 'Sheep', 'Goat', 'Pig', 'Other']\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n    animalTypes: ['Dogs', 'Cats', 'Birds', 'Rabbits', 'Hamsters', 'Other']\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n    animalTypes: ['Snake', 'Lizard', 'Turtle', 'Gecko', 'Chameleon', 'Other']\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n    animalTypes: ['Fish', 'Frog', 'Newt', 'Axolotl', 'Other']\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n    animalTypes: ['Spider', 'Scorpion', 'Crab', 'Snail', 'Millipede', 'Other']\n  }\n];\n\n// Animal icons lookup\nconst ANIMAL_ICONS = {\n  // Farm animals\n  'Horse': 'horse',\n  'Cow': 'cow',\n  'Sheep': 'sheep',\n  'Goat': 'cow',\n  'Pig': 'pig',\n  \n  // Domestic\n  'Dogs': 'dog',\n  'Cats': 'cat',\n  'Birds': 'bird',\n  'Rabbits': 'rabbit',\n  'Hamsters': 'rodent',\n  \n  // Reptiles\n  'Snake': 'snake',\n  'Lizard': 'snake',\n  'Turtle': 'turtle',\n  'Gecko': 'snake',\n  'Chameleon': 'snake',\n  \n  // Aquatic\n  'Fish': 'fish',\n  'Frog': 'snake',\n  'Newt': 'fish',\n  'Axolotl': 'fish',\n  \n  // Invertebrates\n  'Spider': 'spider',\n  'Scorpion': 'spider',\n  'Crab': 'fish',\n  'Snail': 'snail',\n  'Millipede': 'bug',\n  \n  // Default\n  'Other': 'help-circle-outline'\n};\n\n// Animal categories lookup - hardcoded mapping of each animal to its proper category\nconst ANIMAL_CATEGORIES = {\n  // Farm animals\n  'Horse': 'Farm Animals',\n  'Cow': 'Farm Animals',\n  'Sheep': 'Farm Animals',\n  'Goat': 'Farm Animals',\n  'Pig': 'Farm Animals',\n  \n  // Domestic\n  'Dogs': 'Domestic',\n  'Cats': 'Domestic',\n  'Birds': 'Domestic',\n  'Rabbits': 'Domestic',\n  'Hamsters': 'Domestic',\n  \n  // Reptiles\n  'Snake': 'Reptiles',\n  'Lizard': 'Reptiles',\n  'Turtle': 'Reptiles',\n  'Gecko': 'Reptiles',\n  'Chameleon': 'Reptiles',\n  \n  // Aquatic\n  'Fish': 'Aquatic',\n  'Frog': 'Aquatic',\n  'Newt': 'Aquatic',\n  'Axolotl': 'Aquatic',\n  \n  // Invertebrates\n  'Spider': 'Invertebrates',\n  'Scorpion': 'Invertebrates',\n  'Crab': 'Invertebrates',\n  'Snail': 'Invertebrates',\n  'Millipede': 'Invertebrates'\n};\n\n// Get all animal types from all categories\nconst getAllAnimalTypes = () => {\n  const allTypes = [];\n  GENERAL_CATEGORIES.forEach(category => {\n    if (category.id !== 'all') {\n      category.animalTypes.forEach(type => {\n        if (type !== 'Other' && !allTypes.includes(type)) {\n          allTypes.push(type);\n        }\n      });\n    }\n  });\n  return allTypes;\n};\n\n// Populate the 'all' category with all animal types\nGENERAL_CATEGORIES[0].animalTypes = getAllAnimalTypes();\n\nconst DEFAULT_ANIMAL_TYPES = [\n  'Dogs',\n  'Cats',\n  'Fish',\n  'Birds',\n  'Rabbits',\n  'Snake'\n];\n\n// Most common pets to display first when \"All\" is selected\nconst COMMON_PETS = [\n  'Dogs',\n  'Cats',\n  'Fish',\n  'Birds',\n  'Hamsters',\n  'Rabbits',\n  'Snake',\n  'Turtle'\n];\n\n// Get the appropriate icon for an animal type\nconst getAnimalIcon = (animalName, categoryId = null) => {\n  // If the animal has a predefined icon, use it\n  if (ANIMAL_ICONS[animalName]) {\n    return ANIMAL_ICONS[animalName];\n  }\n  \n  // For custom animals, use the category icon if available\n  if (categoryId) {\n    const category = GENERAL_CATEGORIES.find(cat => cat.id === categoryId);\n    if (category) {\n      return category.icon;\n    }\n  }\n  \n  // Default to paw icon\n  return 'paw';\n};\n\nconst getCategoryIcon = (categoryName) => {\n  const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n  return category ? category.icon : 'paw-outline';\n};\n\nconst CategorySelectionStep = ({ serviceData, setServiceData }) => {\n  const [customAnimalInput, setCustomAnimalInput] = useState('');\n  const [customAnimalCategory, setCustomAnimalCategory] = useState('');\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n  const [customAnimalError, setCustomAnimalError] = useState('');\n  const isMobile = Platform.OS !== 'web';\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setScreenWidth(Dimensions.get('window').width);\n    };\n\n    Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      // Remove listener on cleanup\n      if (Dimensions.removeEventListener) {\n        Dimensions.removeEventListener('change', updateLayout);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize with first category selected\n    if (!customAnimalCategory && GENERAL_CATEGORIES.length > 1) {\n      setCustomAnimalCategory(GENERAL_CATEGORIES[1].id);\n    }\n    \n    // Debug log to check what animal types we're receiving\n    debugLog('MBA456789', 'CategorySelectionStep received serviceData:', serviceData);\n    if (serviceData.animalTypes && serviceData.animalTypes.length > 0) {\n      debugLog('MBA456789', 'Initial animal types in CategorySelectionStep:', serviceData.animalTypes);\n    }\n  }, []);\n\n  const isAnimalTypeSelected = (animalName) => {\n    if (!serviceData.animalTypes || !serviceData.animalTypes.length) {\n      return false;\n    }\n    \n    // Check all possible formats of animal types\n    return serviceData.animalTypes.some(animal => {\n      if (typeof animal === 'string') {\n        return animal === animalName;\n      } else if (typeof animal === 'object' && animal !== null) {\n        return animal.name === animalName;\n      }\n      return false;\n    });\n  };\n\n  const getCategoryForAnimal = (animalName) => {\n    const animal = serviceData.animalTypes.find(a => a.name === animalName);\n    if (animal && animal.categoryId) {\n      const category = GENERAL_CATEGORIES.find(cat => cat.id === animal.categoryId);\n      return category ? category.name : 'Other';\n    }\n    return 'Other';\n  };\n\n  const handleAnimalTypeSelect = (animalName, categoryId = null) => {\n    debugLog('MBA456789', `Selecting animal: ${animalName}, categoryId: ${categoryId}`);\n    \n    if (animalName === 'Other') {\n      // No longer need to show custom input since it's always visible\n      setCustomAnimalCategory(categoryId || (GENERAL_CATEGORIES[1] && GENERAL_CATEGORIES[1].id));\n      return;\n    }\n\n    setServiceData(prev => {\n      const prevAnimalTypes = prev.animalTypes || [];\n      debugLog('MBA456789', 'Current animal types before update:', prevAnimalTypes);\n      \n      // Check if this animal is already selected\n      const existingAnimalIndex = prevAnimalTypes.findIndex(animal => {\n        if (typeof animal === 'string') {\n          return animal === animalName;\n        } else if (typeof animal === 'object' && animal !== null) {\n          return animal.name === animalName;\n        }\n        return false;\n      });\n      \n      debugLog('MBA456789', `Animal ${animalName} is ${existingAnimalIndex !== -1 ? 'already selected' : 'not selected'}`);\n      \n      if (existingAnimalIndex !== -1) {\n        // If already selected, remove it\n        const updatedTypes = [...prevAnimalTypes];\n        updatedTypes.splice(existingAnimalIndex, 1);\n        debugLog('MBA456789', 'Animal types after removal:', updatedTypes);\n        \n        return {\n          ...prev,\n          animalTypes: updatedTypes\n        };\n      } else {\n        // If not selected, add it with the hardcoded category\n        // Get the proper category from our mapping\n        const hardcodedCategory = ANIMAL_CATEGORIES[animalName] || 'Other';\n        \n        // Find the category ID from the name if needed\n        let categoryToUse = categoryId;\n        if (!categoryToUse) {\n          const foundCategory = GENERAL_CATEGORIES.find(cat => cat.name === hardcodedCategory);\n          categoryToUse = foundCategory ? foundCategory.id : 'other';\n        }\n        \n        const newAnimal = {\n          name: animalName,\n          categoryId: categoryToUse,\n          categoryName: hardcodedCategory, // Always use the hardcoded category name\n          isCustom: false\n        };\n        \n        debugLog('MBA456789', 'Adding new animal:', newAnimal);\n        debugLog('MBA456789', 'Animal types after addition:', [...prevAnimalTypes, newAnimal]);\n        \n        return {\n          ...prev,\n          animalTypes: [...prevAnimalTypes, newAnimal]\n        };\n      }\n    });\n  };\n\n  const handleCustomAnimalInputChange = (text) => {\n    debugLog('MBA1234', 'Custom animal input change:', text);\n    \n    // Sanitize the input using the universal sanitizer\n    const sanitized = sanitizeInput(text, 'name', { maxLength: 30 });\n    \n    // Validate the sanitized input\n    const validation = validateName(sanitized);\n    if (!validation.isValid && sanitized.length > 0) {\n      setCustomAnimalError(validation.message);\n    } else {\n      setCustomAnimalError('');\n    }\n    \n    setCustomAnimalInput(sanitized);\n  };\n\n  const handleAddCustomAnimal = () => {\n    if (!customAnimalInput.trim()) {\n      setCustomAnimalError('Animal name is required');\n      return;\n    }\n\n    // Final validation before adding\n    const validation = validateName(customAnimalInput);\n    if (!validation.isValid) {\n      setCustomAnimalError(validation.message);\n      return;\n    }\n\n    // Additional business logic validation\n    if (customAnimalInput.trim().length < 2) {\n      setCustomAnimalError('Animal name must be at least 2 characters long');\n      return;\n    }\n\n    // Check if animal already exists\n    const animalExists = serviceData.animalTypes.some(animal => \n      animal.name.toLowerCase() === customAnimalInput.trim().toLowerCase()\n    );\n    \n    if (animalExists) {\n      setCustomAnimalError('This animal type is already added');\n      return;\n    }\n\n    debugLog('MBA1234', 'Adding custom animal with validated input:', customAnimalInput.trim());\n\n    // Find the category name for the custom animal\n    let categoryName = 'Other';\n    if (customAnimalCategory) {\n      const categoryInfo = GENERAL_CATEGORIES.find(cat => cat.id === customAnimalCategory);\n      if (categoryInfo) {\n        categoryName = categoryInfo.name;\n      }\n    }\n\n    setServiceData(prev => ({\n      ...prev,\n      animalTypes: [...prev.animalTypes, { \n        name: customAnimalInput.trim(),\n        categoryId: customAnimalCategory || 'other',\n        categoryName: categoryName, // Add the category name\n        isCustom: true\n      }]\n    }));\n    \n    // Also add the category to generalCategories if it's not already there\n    if (customAnimalCategory) {\n      const categoryExists = serviceData.generalCategories.some(cat => cat.id === customAnimalCategory);\n      if (!categoryExists) {\n        const categoryToAdd = GENERAL_CATEGORIES.find(cat => cat.id === customAnimalCategory);\n        if (categoryToAdd) {\n          setServiceData(prev => ({\n            ...prev,\n            generalCategories: [...prev.generalCategories, {\n              id: categoryToAdd.id,\n              name: categoryToAdd.name,\n              icon: categoryToAdd.icon\n            }]\n          }));\n        }\n      }\n    }\n    \n    setCustomAnimalInput('');\n    setCustomAnimalError('');\n    // Don't hide the form anymore since it's always visible\n  };\n\n  const getFilteredAnimalTypes = () => {\n    debugLog('MBA456789', 'Current serviceData.animalTypes:', serviceData.animalTypes);\n    \n    // Only show Dogs and Cats for MVP\n    let animalTypesToShow = [\n      {\n        name: 'Dogs',\n        categoryId: 'domestic',\n        categoryName: 'Domestic',\n        icon: getAnimalIcon('Dogs', 'domestic')\n      },\n      {\n        name: 'Cats',\n        categoryId: 'domestic',\n        categoryName: 'Domestic',\n        icon: getAnimalIcon('Cats', 'domestic')\n      }\n    ];\n    \n    // Add custom animals\n    if (serviceData.animalTypes && serviceData.animalTypes.length > 0) {\n      serviceData.animalTypes.forEach(animal => {\n        // Skip if not an object or has no name\n        if (typeof animal !== 'object' || !animal || !animal.name) {\n          return;\n        }\n        \n        // Check if it's a custom animal or if its name doesn't match Dogs/Cats\n        const isCustomOrUnknown = animal.isCustom || \n          (animal.name !== 'Dogs' && animal.name !== 'Cats');\n        \n        if (isCustomOrUnknown) {\n          let categoryId = animal.categoryId;\n          let categoryName = animal.categoryName || 'Other';\n          \n          // If we have a categoryName but no categoryId, try to find the corresponding categoryId\n          if (!categoryId && categoryName) {\n            const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n            if (category) {\n              categoryId = category.id;\n            }\n          }\n          \n          // If we still don't have a categoryName, try to derive from categoryId\n          if (!categoryName && categoryId) {\n            const category = GENERAL_CATEGORIES.find(cat => cat.id === categoryId);\n            if (category) {\n              categoryName = category.name;\n            }\n          }\n          \n          // Check if this animal is already in the list\n          const existing = animalTypesToShow.find(a => a.name === animal.name);\n          if (!existing) {\n            debugLog('MBA456789', `Adding custom animal to filtered list: ${animal.name}, category: ${categoryName}`);\n            \n            animalTypesToShow.push({\n              name: animal.name,\n              categoryId: categoryId,\n              categoryName: categoryName,\n              icon: getAnimalIcon(animal.name, categoryId),\n              isCustom: true\n            });\n          }\n        }\n      });\n    }\n    \n    debugLog('MBA456789', 'Filtered animal types to show:', animalTypesToShow);\n    \n    return { animalTypes: animalTypesToShow, categories: [] };\n  };\n\n  const { animalTypes: filteredAnimalTypes } = getFilteredAnimalTypes();\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      padding: 16,\n    },\n    title: {\n      fontSize: 24,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 16,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    subtitle: {\n      fontSize: 20,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginTop: 24,\n      marginBottom: 16,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    instructions: {\n      fontSize: 16,\n      color: theme.colors.textSecondary,\n      marginBottom: 16,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    animalTypesGrid: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 16,\n    },\n    animalTypeItem: {\n      flex: 1,\n      minWidth: Platform.OS === 'web' ? (screenWidth <= 420 ? '45%' : '30%') : '45%',\n      marginBottom: 12,\n    },\n    animalTypeCard: {\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: theme.colors.surface,\n      padding: 16,\n      height: 70,\n      justifyContent: 'center',\n    },\n    selectedAnimalCard: {\n      borderColor: theme.colors.mainColors.main,\n      backgroundColor: theme.colors.mainColors.mainLight,\n    },\n    animalTypeRow: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    animalIconAndName: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: 12,\n    },\n    animalTypeName: {\n      fontSize: 16,\n      fontWeight: '500',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    customInputContainer: {\n      marginTop: 6,\n      padding: 16,\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      backgroundColor: theme.colors.backgroundContrast,\n    },\n    customInputTitle: {\n      fontSize: 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    inputRow: {\n      flexDirection: 'row',\n      gap: 8,\n      marginBottom: 12,\n    },\n    textInputContainer: {\n      flex: 1,\n      marginRight: 12,\n    },\n    textInput: {\n      flex: 1,\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      paddingHorizontal: 12,\n      backgroundColor: theme.colors.surface,\n      fontSize: 16,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    textInputError: {\n      borderColor: theme.colors.error,\n    },\n    pickerContainer: {\n      flex: 1,\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      backgroundColor: theme.colors.surface,\n      justifyContent: 'center',\n    },\n    picker: {\n      height: 48,\n      color: theme.colors.text,\n    },\n    addButton: {\n      backgroundColor: theme.colors.mainColors.main,\n      borderRadius: 8,\n      paddingVertical: 12,\n      paddingHorizontal: 16,\n      alignItems: 'center',\n    },\n    addButtonText: {\n      color: theme.colors.surface,\n      fontSize: 16,\n      fontWeight: '600',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    addButtonDisabled: {\n      backgroundColor: theme.colors.border,\n      opacity: 0.6,\n    },\n    addButtonTextDisabled: {\n      color: theme.colors.textSecondary,\n    },\n    selectedAnimalsSection: {\n      marginTop: 24,\n      marginBottom: 16,\n      padding: 16,\n      backgroundColor: theme.colors.backgroundContrast,\n      borderRadius: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n    },\n    selectedAnimalsTitle: {\n      fontSize: 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      marginBottom: 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedAnimalsList: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 8,\n    },\n    animalBubble: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.colors.surface,\n      borderRadius: 20,\n      paddingVertical: 6,\n      paddingHorizontal: 12,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      marginBottom: 8,\n      marginRight: 8,\n      gap: 8,\n    },\n    animalBubbleText: {\n      fontSize: 14,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    removeAnimalButton: {\n      padding: 2,\n    },\n    errorText: {\n      color: theme.colors.error,\n      fontSize: 12,\n      marginTop: 4,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n  });\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.title}>Select Animal Types for Your Service</Text>\n      <Text style={styles.instructions}>\n        Choose the animal types your service will cover. You can select Dogs, Cats, or add custom animals.\n      </Text>\n      \n      {/* Selected Animals Summary - Moved above Dogs/Cats cards */}\n      {serviceData.animalTypes.length > 0 && (\n        <View style={styles.selectedAnimalsSection}>\n          <Text style={styles.selectedAnimalsTitle}>\n            Selected Animals ({serviceData.animalTypes.length})\n          </Text>\n          <View style={styles.selectedAnimalsList}>\n            {serviceData.animalTypes.map((animal, index) => {\n              const animalName = animal.name;\n              const icon = getAnimalIcon(animalName, animal.categoryId);\n              \n              return (\n                <View key={index} style={styles.animalBubble}>\n                  <MaterialCommunityIcons\n                    name={icon}\n                    size={18}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.animalBubbleText}>{animalName}</Text>\n                  <TouchableOpacity \n                    onPress={() => handleAnimalTypeSelect(animalName)}\n                    style={styles.removeAnimalButton}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"close-circle\" \n                      size={16} \n                      color={theme.colors.text} \n                    />\n                  </TouchableOpacity>\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      )}\n      \n      {/* Animal Types Grid - Only Dogs and Cats */}\n      {filteredAnimalTypes.length > 0 ? (\n        <View style={styles.animalTypesGrid}>\n          {filteredAnimalTypes.filter(animal => animal.name === 'Dogs' || animal.name === 'Cats').map((animalType) => (\n            <View key={`${animalType.categoryId}-${animalType.name}`} style={styles.animalTypeItem}>\n              <TouchableOpacity\n                style={[\n                  styles.animalTypeCard,\n                  isAnimalTypeSelected(animalType.name) && styles.selectedAnimalCard\n                ]}\n                onPress={() => handleAnimalTypeSelect(animalType.name, animalType.categoryId)}\n              >\n                <View style={styles.animalTypeRow}>\n                  <View style={styles.animalIconAndName}>\n                    <MaterialCommunityIcons\n                      name={animalType.icon}\n                      size={24}\n                      color={theme.colors.text}\n                    />\n                    <Text style={styles.animalTypeName}>{animalType.name}</Text>\n                  </View>\n                  {isAnimalTypeSelected(animalType.name) && (\n                    <MaterialCommunityIcons\n                      name=\"check-circle\"\n                      size={24}\n                      color={theme.colors.mainColors.main}\n                    />\n                  )}\n                </View>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      ) : null}\n      \n      {/* Custom Animal Input - Always visible */}\n      <View style={styles.customInputContainer}>\n        <Text style={styles.customInputTitle}>Add a Custom Animal Type</Text>\n        <View style={styles.inputRow}>\n          <View style={styles.textInputContainer}>\n            <TextInput\n              style={[styles.textInput, customAnimalError ? styles.textInputError : null]}\n              placeholder=\"Animal Type (e.g. Hamster)\"\n              value={customAnimalInput}\n              onChangeText={handleCustomAnimalInputChange}\n              placeholderTextColor={theme.colors.placeHolderText}\n              maxLength={30}\n            />\n            {customAnimalError ? (\n              <Text style={styles.errorText}>{customAnimalError}</Text>\n            ) : null}\n          </View>\n          <View style={styles.pickerContainer}>\n            {Platform.OS === 'ios' || Platform.OS === 'android' ? (\n              <Picker\n                selectedValue={customAnimalCategory}\n                style={styles.picker}\n                onValueChange={(itemValue) => setCustomAnimalCategory(itemValue)}\n              >\n                {GENERAL_CATEGORIES.filter(cat => cat.id !== 'all').map(category => (\n                  <Picker.Item \n                    key={category.id} \n                    label={category.name} \n                    value={category.id} \n                  />\n                ))}\n              </Picker>\n            ) : (\n              React.createElement('select', {\n                value: customAnimalCategory,\n                onChange: (e) => setCustomAnimalCategory(e.target.value),\n                style: styles.picker\n              }, \n                GENERAL_CATEGORIES.filter(cat => cat.id !== 'all').map(category => \n                  React.createElement('option', {\n                    key: category.id,\n                    value: category.id\n                  }, category.name)\n                )\n              )\n            )}\n          </View>\n        </View>\n        <TouchableOpacity \n          style={[\n            styles.addButton,\n            (!customAnimalInput.trim() || customAnimalError) ? styles.addButtonDisabled : null\n          ]}\n          onPress={handleAddCustomAnimal}\n          disabled={!customAnimalInput.trim() || customAnimalError}\n        >\n          <Text style={[\n            styles.addButtonText,\n            (!customAnimalInput.trim() || customAnimalError) ? styles.addButtonTextDisabled : null\n          ]}>Add Animal</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n};\n\nexport default CategorySelectionStep; ","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Switch\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\nimport { sanitizeInput } from '../../validation/validation';\n\nconst MAX_SERVICE_NAME_LENGTH = 30;\nconst MAX_DESCRIPTION_LENGTH = 300;\n\nconst ServiceDetailsStep = ({ serviceData, setServiceData }) => {\n  const [nameError, setNameError] = useState('');\n  const [descriptionError, setDescriptionError] = useState('');\n\n  const handleServiceNameChange = (text) => {\n    debugLog('MBA1234', 'Service name input change:', text);\n    \n    // Sanitize the input using the universal sanitizer\n    const sanitized = sanitizeInput(text, 'name', { maxLength: MAX_SERVICE_NAME_LENGTH });\n    \n    // Business logic validation\n    if (sanitized.length > 0 && sanitized.length < 3) {\n      setNameError('Service name must be at least 3 characters long');\n    } else if (sanitized.length > MAX_SERVICE_NAME_LENGTH) {\n      setNameError(`Service name must be no more than ${MAX_SERVICE_NAME_LENGTH} characters long`);\n    } else {\n      setNameError('');\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      serviceName: sanitized\n    }));\n  };\n\n  const handleDescriptionChange = (text) => {\n    debugLog('MBA1234', 'Service description input change:', text);\n    \n    // Sanitize the input using the universal sanitizer\n    const sanitized = sanitizeInput(text, 'description', { maxLength: MAX_DESCRIPTION_LENGTH });\n    \n    // Business logic validation\n    if (sanitized.length > 0 && sanitized.length < 10) {\n      setDescriptionError('Service description must be at least 10 characters long');\n    } else if (sanitized.length > MAX_DESCRIPTION_LENGTH) {\n      setDescriptionError(`Service description must be no more than ${MAX_DESCRIPTION_LENGTH} characters long`);\n    } else {\n      setDescriptionError('');\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      serviceDescription: sanitized\n    }));\n  };\n\n  const handleOvernightToggle = (value) => {\n    setServiceData(prev => ({\n      ...prev,\n      isOvernight: value\n    }));\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Service Details</Text>\n      \n      <View style={styles.inputGroup}>\n        <Text style={styles.label}>Service Name</Text>\n        <TextInput\n          style={[styles.input, nameError ? styles.inputError : null]}\n          value={serviceData.serviceName}\n          onChangeText={handleServiceNameChange}\n          placeholder=\"e.g. Premium Pet Grooming\"\n          placeholderTextColor={theme.colors.placeHolderText}\n          maxLength={MAX_SERVICE_NAME_LENGTH}\n        />\n        <Text style={styles.characterCount}>\n          {serviceData.serviceName.length}/{MAX_SERVICE_NAME_LENGTH}\n        </Text>\n        {nameError ? <Text style={styles.errorText}>{nameError}</Text> : null}\n      </View>\n      \n      <View style={styles.inputGroup}>\n        <Text style={styles.label}>Service Description</Text>\n        <TextInput\n          style={[styles.input, styles.textArea, descriptionError ? styles.inputError : null]}\n          value={serviceData.serviceDescription}\n          onChangeText={handleDescriptionChange}\n          placeholder=\"Describe your service in detail...\"\n          placeholderTextColor={theme.colors.placeHolderText}\n          multiline={true}\n          numberOfLines={6}\n          textAlignVertical=\"top\"\n          maxLength={MAX_DESCRIPTION_LENGTH}\n        />\n        <Text style={styles.characterCount}>\n          {serviceData.serviceDescription.length}/{MAX_DESCRIPTION_LENGTH}\n        </Text>\n        {descriptionError ? <Text style={styles.errorText}>{descriptionError}</Text> : null}\n      </View>\n      \n      <View style={styles.switchContainer}>\n        <View style={styles.switchGroup}>\n          <Text style={styles.switchLabel}>Overnight Service</Text>\n          <Text style={styles.switchSubLabel}>Does this service require overnight stay?</Text>\n        </View>\n        <Switch\n          value={serviceData.isOvernight}\n          onValueChange={handleOvernightToggle}\n          trackColor={{ false: theme.colors.border, true: theme.colors.mainColors.main }}\n          thumbColor={theme.colors.surface}\n          ios_backgroundColor={theme.colors.border}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputGroup: {\n    marginBottom: 24,\n  },\n  label: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.surface,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputError: {\n    borderColor: theme.colors.error,\n  },\n  textArea: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  switchContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  switchGroup: {\n    flex: 1,\n    marginRight: 16,\n  },\n  switchLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 4,\n  },\n  switchSubLabel: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 14,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  characterCount: {\n    color: theme.colors.textSecondary,\n    fontSize: 12,\n    marginTop: 4,\n    textAlign: 'right',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceDetailsStep; ","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Switch,\n  ScrollView,\n  TouchableWithoutFeedback,\n  Modal\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { TIME_UNIT_MAPPING, BACKEND_TO_FRONTEND_TIME_UNIT } from '../../data/mockData';\nimport { debugLog } from '../../context/AuthContext';\nimport { sanitizeInput } from '../../validation/validation';\n\nconst TIME_UNITS = Object.keys(TIME_UNIT_MAPPING);\nconst ANIMAL_THRESHOLDS = ['1', '2', '3', '4', '5'];\n\nconst RatesAndReviewStep = ({ serviceData, setServiceData, isUpdatingService, setIsUpdatingService, onProceedWithUpdate }) => {\n  // Debug log for tracking isOvernight status\n  debugLog('MBA5931', 'RatesAndReviewStep render - isOvernight status:', serviceData.isOvernight);\n  \n  const [showTimeUnitDropdown, setShowTimeUnitDropdown] = useState(false);\n  const [showThresholdDropdown, setShowThresholdDropdown] = useState(false);\n  const [customChargeVisible, setCustomChargeVisible] = useState(false);\n  const [isHolidayRatePercent, setIsHolidayRatePercent] = useState(true);\n  const [isEditingExistingRate, setIsEditingExistingRate] = useState(false);\n  const [showUnsavedRateWarning, setShowUnsavedRateWarning] = useState(false);\n  const [newCustomRate, setNewCustomRate] = useState({\n    title: '',\n    rate: '',\n    description: ''\n  });\n  \n  // Error states for validation\n  const [baseRateError, setBaseRateError] = useState('');\n  const [additionalRateError, setAdditionalRateError] = useState('');\n  const [holidayRateError, setHolidayRateError] = useState('');\n  const [customRateTitleError, setCustomRateTitleError] = useState('');\n  const [customRateAmountError, setCustomRateAmountError] = useState('');\n  const [customRateDescriptionError, setCustomRateDescriptionError] = useState('');\n\n  // Filter available time units based on isOvernight flag\n  const availableTimeUnits = serviceData.isOvernight ? \n    ['Per Night'] : \n    TIME_UNITS;\n\n  // Check if we need to convert existing data on component mount\n  useEffect(() => {\n    // Initialize isPercent property based on the state\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        isPercent: isHolidayRatePercent\n      }\n    }));\n    \n    // If service is overnight, ensure the base_rate_unit is 'Per Night'\n    if (serviceData.isOvernight) {\n      debugLog('MBA5931', 'Service is overnight, setting rate unit to Per Night');\n      setServiceData(prev => ({\n        ...prev,\n        rates: {\n          ...prev.rates,\n          base_rate_unit: 'Per Night'\n        }\n      }));\n    }\n    // If we have a base_rate_unit from backend but it's not in our mapping, initialize with default\n    else if (serviceData.rates?.base_rate_unit && !BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit]) {\n      debugLog('MBA5931', 'Converting initial base_rate_unit to mapped value');\n      const frontendKey = Object.keys(TIME_UNIT_MAPPING).find(\n        key => TIME_UNIT_MAPPING[key] === serviceData.rates.base_rate_unit\n      );\n      \n      if (!frontendKey && serviceData.rates.base_rate_unit) {\n        // If we don't have a mapping for this value, keep the backend value\n        debugLog('MBA5931', 'No mapping found for:', serviceData.rates.base_rate_unit);\n      }\n    }\n\n    // Check if existing holiday rate has a % sign\n    if (serviceData.rates?.holidayRate) {\n      const holidayRateString = serviceData.rates.holidayRate.toString();\n      if (holidayRateString.includes('%')) {\n        setIsHolidayRatePercent(true);\n        // Strip the % sign for the input field\n        setServiceData(prev => ({\n          ...prev,\n          rates: {\n            ...prev.rates,\n            holidayRate: holidayRateString.replace('%', ''),\n            isPercent: true\n          }\n        }));\n      } else if (holidayRateString.includes('$')) {\n        setIsHolidayRatePercent(false);\n        // Strip the $ sign for the input field\n        setServiceData(prev => ({\n          ...prev,\n          rates: {\n            ...prev.rates,\n            holidayRate: holidayRateString.replace('$', ''),\n            isPercent: false\n          }\n        }));\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    debugLog('MBA5931', 'Available TIME_UNITS:', TIME_UNITS);\n    debugLog('MBA5931', 'TIME_UNIT_MAPPING:', TIME_UNIT_MAPPING);\n    debugLog('MBA5931', 'Current base_rate_unit:', serviceData.rates?.base_rate_unit);\n    debugLog('MBA5931', 'Displayed unit text:', serviceData.rates?.base_rate_unit ? \n      (BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit] || serviceData.rates.base_rate_unit) : \n      TIME_UNITS[0]);\n  }, [serviceData.rates?.base_rate_unit]);\n\n  // Watch for changes to isOvernight and update rate unit accordingly\n  useEffect(() => {\n    if (serviceData.isOvernight) {\n      debugLog('MBA5931', 'Overnight service detected, forcing Per Night rate unit');\n      setServiceData(prev => ({\n        ...prev,\n        rates: {\n          ...prev.rates,\n          base_rate_unit: 'Per Night'\n        }\n      }));\n    }\n  }, [serviceData.isOvernight]);\n\n  // Helper function to check if there's an unsaved custom rate\n  const hasUnsavedCustomRate = () => {\n    // If the custom rate form is open, we consider it as unsaved\n    // regardless of whether fields have content\n    const result = customChargeVisible;\n    \n    debugLog('MBAno34othg0v', 'hasUnsavedCustomRate check:', { \n      customChargeVisible, \n      title: newCustomRate.title,\n      rate: newCustomRate.rate,\n      description: newCustomRate.description,\n      result \n    });\n    \n    return result;\n  };\n\n  // Add effect to check if trying to update service while custom rate is being added\n  useEffect(() => {\n    debugLog('MBAno34othg0v', 'isUpdatingService changed:', {\n      isUpdatingService,\n      hasUnsaved: hasUnsavedCustomRate()\n    });\n    \n    if (!isUpdatingService) {\n      // Skip processing when isUpdatingService becomes false\n      return;\n    }\n    \n    // Check if there's an unsaved rate\n    const hasUnsaved = hasUnsavedCustomRate();\n    \n    // Only show warning if isUpdatingService becomes true while there's an unsaved rate\n    if (hasUnsaved) {\n      debugLog('MBAno34othg0v', 'Showing unsaved rate warning modal');\n      // Show the modal\n      setShowUnsavedRateWarning(true);\n      // Reset the isUpdatingService flag after showing the modal\n      if (setIsUpdatingService) {\n        debugLog('MBAno34othg0v', 'Setting isUpdatingService to FALSE to prevent API call');\n        setIsUpdatingService(false);\n      }\n    } else {\n      debugLog('MBAno34othg0v', 'No unsaved custom rate, allowing update to proceed');\n      // Here we would directly call the API, but we need to add that functionality to props\n      if (setIsUpdatingService) {\n        // Signal to parent that it's OK to proceed\n        debugLog('MBAno34othg0v', 'Setting isUpdatingService to TRUE to allow parent to call API');\n        setIsUpdatingService(true);\n        \n        // This will trigger the parent component to call its callServiceApi function\n        if (typeof onProceedWithUpdate === 'function') {\n          debugLog('MBAno34othg0v', 'Calling onProceedWithUpdate directly');\n          onProceedWithUpdate();\n        }\n      }\n    }\n  }, [isUpdatingService]);\n\n  // Close dropdowns when clicking outside\n  const handlePressOutside = () => {\n    if (showTimeUnitDropdown) setShowTimeUnitDropdown(false);\n    if (showThresholdDropdown) setShowThresholdDropdown(false);\n  };\n\n  // Enhanced numeric input formatter with validation\n  const formatNumericInput = (text, fieldType = 'amount') => {\n    debugLog('MBA1234', `Formatting numeric input for ${fieldType}:`, text);\n    \n    // Don't apply real-time sanitization during typing - this interferes with user experience\n    // Only block extremely dangerous content in real-time\n    const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(text);\n    const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(text);\n    \n    if (hasScriptTags || hasSqlInjection) {\n      debugLog('MBA1234', `Dangerous content detected in ${fieldType}:`, text);\n      return null; // Return null to indicate invalid input\n    }\n    \n    return text;\n  };\n\n  const handleBaseRateChange = (text) => {\n    const processed = formatNumericInput(text, 'base rate');\n    \n    if (processed === null) {\n      setBaseRateError('Invalid characters detected in base rate');\n      return;\n    }\n    \n    // Clear error when user starts typing normally\n    if (baseRateError) {\n      setBaseRateError('');\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        base_rate: processed\n      }\n    }));\n  };\n\n  const handleTimeUnitSelect = (unit) => {\n    // If this is an overnight service, always use 'Per Night'\n    // Otherwise, map the user-friendly display value to the backend value\n    const selectedUnit = serviceData.isOvernight ? \n      'Per Night' : \n      TIME_UNIT_MAPPING[unit];\n    \n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        base_rate_unit: selectedUnit\n      }\n    }));\n    setShowTimeUnitDropdown(false);\n  };\n\n  const handleAdditionalAnimalRateChange = (text) => {\n    const processed = formatNumericInput(text, 'additional animal rate');\n    \n    if (processed === null) {\n      setAdditionalRateError('Invalid characters detected in additional animal rate');\n      return;\n    }\n    \n    // Clear error when user starts typing normally\n    if (additionalRateError) {\n      setAdditionalRateError('');\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalAnimalRate: processed\n      }\n    }));\n  };\n\n  const handleThresholdSelect = (threshold) => {\n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalAnimalThreshold: threshold\n      }\n    }));\n    setShowThresholdDropdown(false);\n  };\n\n  const handleHolidayRateChange = (text) => {\n    const processed = formatNumericInput(text, 'holiday rate');\n    \n    if (processed === null) {\n      setHolidayRateError('Invalid characters detected in holiday rate');\n      return;\n    }\n    \n    // Clear error when user starts typing normally\n    if (holidayRateError) {\n      setHolidayRateError('');\n    }\n    \n    setServiceData(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        holidayRate: processed\n      }\n    }));\n  };\n\n  const toggleHolidayRateType = (isPercent) => {\n    setIsHolidayRatePercent(isPercent);\n    // Update the serviceData with the new holiday rate type\n    setServiceData(prevData => ({\n      ...prevData,\n      rates: {\n        ...prevData.rates,\n        isPercent: isPercent\n      }\n    }));\n    // Clear any existing error when switching types\n    setHolidayRateError('');\n  };\n\n  // Calculate the dollar amount for percentage holiday rate\n  const calculateHolidayRateDollarValue = () => {\n    const baseRate = parseFloat(serviceData.rates?.base_rate) || 0;\n    const holidayRatePercent = parseFloat(serviceData.rates?.holidayRate) || 0;\n    \n    if (baseRate > 0 && holidayRatePercent > 0) {\n      const dollarValue = (baseRate * holidayRatePercent / 100).toFixed(2);\n      return `$${dollarValue}`;\n    }\n    return null;\n  };\n\n  // Format holiday rate based on type (% or $)\n  const getFormattedHolidayRate = () => {\n    const value = serviceData.rates?.holidayRate || '';\n    if (!value) return '';\n    \n    return isHolidayRatePercent ? `${value}%` : `$${value}`;\n  };\n\n  const handleCustomRateChange = (field, value) => {\n    debugLog('MBA1234', `Custom rate ${field} change:`, value);\n    \n    if (field === 'rate') {\n      const processed = formatNumericInput(value, 'custom rate amount');\n      \n      if (processed === null) {\n        setCustomRateAmountError('Invalid characters detected in rate amount');\n        return;\n      }\n      \n      // Clear error when user starts typing normally\n      if (customRateAmountError) {\n        setCustomRateAmountError('');\n      }\n      \n      setNewCustomRate(prev => ({\n        ...prev,\n        [field]: processed\n      }));\n    } else if (field === 'title') {\n      // Don't apply real-time sanitization during typing\n      // Only block extremely dangerous content in real-time\n      const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(value);\n      const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(value);\n      \n      if (hasScriptTags || hasSqlInjection) {\n        debugLog('MBA1234', 'Dangerous content detected in custom rate title:', value);\n        setCustomRateTitleError('Invalid characters detected in title');\n        return;\n      }\n      \n      // Clear error when user starts typing normally\n      if (customRateTitleError) {\n        setCustomRateTitleError('');\n      }\n      \n      setNewCustomRate(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    } else if (field === 'description') {\n      // Don't apply real-time sanitization during typing\n      // Only block extremely dangerous content in real-time\n      const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(value);\n      const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(value);\n      \n      if (hasScriptTags || hasSqlInjection) {\n        debugLog('MBA1234', 'Dangerous content detected in custom rate description:', value);\n        setCustomRateDescriptionError('Invalid characters detected in description');\n        return;\n      }\n      \n      // Clear error when user starts typing normally\n      if (customRateDescriptionError) {\n        setCustomRateDescriptionError('');\n      }\n      \n      setNewCustomRate(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleAddCustomRate = () => {\n    if (!customChargeVisible) {\n      debugLog('MBAno34othg0v', 'Opening custom rate form');\n      setCustomChargeVisible(true);\n      setIsEditingExistingRate(false);\n      // Clear any existing errors\n      setCustomRateTitleError('');\n      setCustomRateAmountError('');\n      setCustomRateDescriptionError('');\n      return;\n    }\n\n    // Check for validation errors\n    if (customRateTitleError || customRateAmountError || customRateDescriptionError) {\n      debugLog('MBA1234', 'Cannot save custom rate due to validation errors');\n      return;\n    }\n\n    // Check for title\n    if (!newCustomRate.title.trim()) {\n      setCustomRateTitleError('Title is required');\n      debugLog('MBAno34othg0v', 'Missing custom rate title');\n      return;\n    }\n    \n    // Check for rate value\n    if (!newCustomRate.rate) {\n      setCustomRateAmountError('Rate amount is required');\n      debugLog('MBAno34othg0v', 'Missing custom rate value');\n      return;\n    }\n\n    // Validate rate value\n    const rateValue = parseFloat(newCustomRate.rate);\n    if (isNaN(rateValue) || rateValue <= 0) {\n      setCustomRateAmountError('Rate amount must be a valid number greater than $0');\n      debugLog('MBAno34othg0v', 'Invalid rate value:', newCustomRate.rate);\n      return;\n    }\n\n    debugLog('MBAno34othg0v', 'Saving custom rate successfully:', newCustomRate);\n    \n    // Sanitize the data before saving\n    const sanitizedRate = {\n      title: sanitizeInput(newCustomRate.title, 'name', { maxLength: 50 }).trim(),\n      rate: newCustomRate.rate, // Rate is already numeric, no need to sanitize\n      description: sanitizeInput(newCustomRate.description, 'description', { maxLength: 200 }).trim()\n    };\n    \n    // Save the sanitized custom rate to the service data\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: [...(prev.additionalRates || []), sanitizedRate]\n    }));\n    \n    // Reset the form state\n    setNewCustomRate({\n      title: '',\n      rate: '',\n      description: ''\n    });\n    \n    // Clear errors\n    setCustomRateTitleError('');\n    setCustomRateAmountError('');\n    setCustomRateDescriptionError('');\n    \n    // Close the form\n    setCustomChargeVisible(false);\n    setIsEditingExistingRate(false);\n  };\n\n  const handleEditCustomRate = (index) => {\n    // Get the rate to edit\n    const rateToEdit = serviceData.additionalRates[index];\n    \n    // Set the form with existing values\n    setNewCustomRate({\n      title: rateToEdit.title,\n      rate: rateToEdit.rate,\n      description: rateToEdit.description || ''\n    });\n    \n    // Show the custom charge form and indicate we're editing\n    setCustomChargeVisible(true);\n    setIsEditingExistingRate(true);\n    \n    // Remove the old item\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: prev.additionalRates.filter((_, i) => i !== index)\n    }));\n  };\n\n  const handleDeleteCustomRate = (index) => {\n    setServiceData(prev => ({\n      ...prev,\n      additionalRates: prev.additionalRates.filter((_, i) => i !== index)\n    }));\n  };\n\n  const renderDropdown = (options, selectedValue, onSelect, visible, containerStyle) => {\n    if (!visible) return null;\n\n    return (\n      <View style={[styles.dropdownContainer, containerStyle]}>\n        <ScrollView style={styles.dropdownScroll} contentContainerStyle={styles.dropdownScrollContent}>\n          {options.map((option) => (\n            <TouchableOpacity\n              key={option}\n              style={[\n                styles.dropdownItem,\n                selectedValue === option && styles.selectedDropdownItem\n              ]}\n              onPress={() => onSelect(option)}\n            >\n              <Text style={[\n                styles.dropdownText,\n                selectedValue === option && styles.selectedDropdownText\n              ]}>\n                {option}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n    );\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={handlePressOutside}>\n      <ScrollView style={styles.container}>\n        <Text style={styles.title}>Set Your Rates</Text>\n\n        {/* Error Modal */}\n        <Modal\n          visible={showUnsavedRateWarning}\n          transparent={true}\n          animationType=\"fade\"\n          onRequestClose={() => setShowUnsavedRateWarning(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <MaterialCommunityIcons\n                name=\"alert-circle\"\n                size={48}\n                color={theme.colors.error}\n                style={styles.modalIcon}\n              />\n              <Text style={styles.modalTitle}>Unsaved Custom Rate</Text>\n              <Text style={styles.modalText}>\n                Please save or cancel your custom rate before updating the service.\n              </Text>\n              <TouchableOpacity\n                style={styles.modalButton}\n                onPress={() => {\n                  debugLog('MBAno34othg0v', 'Modal OK button clicked');\n                  // Just close the modal, keep the form open for editing\n                  setShowUnsavedRateWarning(false);\n                }}\n              >\n                <Text style={styles.modalButtonText}>OK</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n\n        <View style={[styles.rateContainer, { zIndex: 3 }]}>\n          <Text style={styles.label}>Base Rate <Text style={{ color: theme.colors.placeHolderText }}>(Required)</Text></Text>\n          <View style={styles.rateInputGroup}>\n            <View style={[styles.currencyInputContainer, { flex: 1 }, baseRateError ? styles.inputError : null]}>\n              <Text style={styles.currencySymbol}>$</Text>\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0.00\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.base_rate || ''}\n                onChangeText={handleBaseRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n            </View>\n            <View style={{ flex: 1, zIndex: 1 }}>\n              <TouchableOpacity\n                style={[\n                  styles.unitSelector,\n                  serviceData.isOvernight && styles.disabledUnitSelector\n                ]}\n                onPress={() => {\n                  if (!serviceData.isOvernight) {\n                    setShowThresholdDropdown(false);\n                    setShowTimeUnitDropdown(!showTimeUnitDropdown);\n                  }\n                }}\n                disabled={serviceData.isOvernight}\n              >\n                <Text style={styles.unitText}>\n                  {serviceData.isOvernight ? \n                    'Per Night' : \n                    (serviceData.rates?.base_rate_unit ? \n                      (BACKEND_TO_FRONTEND_TIME_UNIT[serviceData.rates.base_rate_unit] || serviceData.rates.base_rate_unit) : \n                      TIME_UNITS[0])}\n                </Text>\n                {!serviceData.isOvernight && (\n                  <MaterialCommunityIcons\n                    name={showTimeUnitDropdown ? 'chevron-up' : 'chevron-down'}\n                    size={24}\n                    color={theme.colors.text}\n                  />\n                )}\n              </TouchableOpacity>\n              {renderDropdown(\n                availableTimeUnits,\n                serviceData.rates?.base_rate_unit,\n                handleTimeUnitSelect,\n                showTimeUnitDropdown && !serviceData.isOvernight,\n                { width: '100%' }\n              )}\n            </View>\n          </View>\n          {baseRateError ? <Text style={styles.errorText}>{baseRateError}</Text> : null}\n        </View>\n\n        <View style={[styles.rateContainer, { zIndex: 2 }]}>\n          <Text style={styles.label}>Additional Animal Rate <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n          <View style={styles.rateInputGroup}>\n            <View style={[styles.currencyInputContainer, { flex: 1 }, additionalRateError ? styles.inputError : null]}>\n              <Text style={styles.currencySymbol}>$</Text>\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0.00\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.additionalAnimalRate || ''}\n                onChangeText={handleAdditionalAnimalRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n            </View>\n            <View style={{ flex: 1, zIndex: 1 }}>\n              <TouchableOpacity\n                style={styles.unitSelector}\n                onPress={() => {\n                  setShowTimeUnitDropdown(false);\n                  setShowThresholdDropdown(!showThresholdDropdown);\n                }}\n              >\n                <Text style={styles.unitText}>\n                  After {serviceData.rates?.additionalAnimalThreshold || '1'} animals\n                </Text>\n                <MaterialCommunityIcons\n                  name={showThresholdDropdown ? 'chevron-up' : 'chevron-down'}\n                  size={24}\n                  color={theme.colors.text}\n                />\n              </TouchableOpacity>\n              {renderDropdown(\n                ANIMAL_THRESHOLDS,\n                serviceData.rates?.additionalAnimalThreshold,\n                handleThresholdSelect,\n                showThresholdDropdown,\n                { width: '100%' }\n              )}\n            </View>\n          </View>\n          {additionalRateError ? <Text style={styles.errorText}>{additionalRateError}</Text> : null}\n        </View>\n\n        {/* Holiday Rate Section - Commented out for MVP\n        <View style={styles.holidayRateContainer}>\n          <View style={styles.holidayRateHeader}>\n            <Text style={styles.label}>Holiday Rate <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n            <View style={styles.rateTypeToggleContainer}>\n              <TouchableOpacity\n                style={[\n                  styles.toggleButton,\n                  isHolidayRatePercent ? styles.activeToggleButton : styles.inactiveToggleButton,\n                  {\n                    borderTopLeftRadius: 8,\n                    borderBottomLeftRadius: 8,\n                    borderTopRightRadius: 0,\n                    borderBottomRightRadius: 0\n                  }\n                ]}\n                onPress={() => toggleHolidayRateType(true)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  isHolidayRatePercent ? styles.activeToggleText : styles.inactiveToggleText\n                ]}>%</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  styles.toggleButton,\n                  !isHolidayRatePercent ? styles.activeToggleButton : styles.inactiveToggleButton,\n                  {\n                    borderTopLeftRadius: 0,\n                    borderBottomLeftRadius: 0,\n                    borderTopRightRadius: 8,\n                    borderBottomRightRadius: 8\n                  }\n                ]}\n                onPress={() => toggleHolidayRateType(false)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  !isHolidayRatePercent ? styles.activeToggleText : styles.inactiveToggleText\n                ]}>$</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n          <View style={[\n            styles.holidayRateInputWrapper, \n            { marginBottom: isHolidayRatePercent && serviceData.rates?.base_rate && serviceData.rates?.holidayRate ? 28 : 0 }\n          ]}>\n            <View style={isHolidayRatePercent ? styles.percentageInputContainer : styles.currencyInputContainer}>\n              {!isHolidayRatePercent && <Text style={styles.currencySymbol}>$</Text>}\n              <TextInput\n                style={styles.currencyInput}\n                placeholder=\"0\"\n                keyboardType=\"decimal-pad\"\n                value={serviceData.rates?.holidayRate === '0' ? '' : serviceData.rates?.holidayRate}\n                onChangeText={handleHolidayRateChange}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              {isHolidayRatePercent && <Text style={styles.percentageSymbol}>%</Text>}\n            </View>\n            {isHolidayRatePercent && serviceData.rates?.base_rate && serviceData.rates?.holidayRate && (\n              <Text style={styles.calculatedHolidayRate}>\n                {calculateHolidayRateDollarValue()}\n              </Text>\n            )}\n          </View>\n        </View>\n        */}\n\n        <View style={styles.customRatesContainer}>\n          <Text style={styles.label}>Custom Charges <Text style={{ color: theme.colors.placeHolderText }}>(Optional)</Text></Text>\n          {serviceData.additionalRates?.length > 0 ? (\n            serviceData.additionalRates.map((rate, index) => (\n              <View key={index} style={styles.customRateItem}>\n                <View style={styles.customRateContent}>\n                  <View style={styles.customRateTitleContainer}>\n                    <Text style={styles.customRateTitle}>{rate.title}</Text>\n                    {rate.description ? (\n                      <Text style={styles.customRateDescription} numberOfLines={1}>\n                        {rate.description}\n                      </Text>\n                    ) : null}\n                  </View>\n                  <Text style={styles.customRateAmount}>${rate.rate}</Text>\n                </View>\n                <View style={styles.customRateActions}>\n                  <TouchableOpacity\n                    onPress={() => handleEditCustomRate(index)}\n                    style={styles.customRateAction}\n                    activeOpacity={0.7}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"pencil\"\n                      size={20}\n                      color={theme.colors.mainColors.main}\n                    />\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    onPress={() => handleDeleteCustomRate(index)}\n                    style={styles.customRateAction}\n                    activeOpacity={0.7}\n                  >\n                    <MaterialCommunityIcons\n                      name=\"delete\"\n                      size={20}\n                      color=\"#F26969\"\n                    />\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ))\n          ) : customChargeVisible ? null : (\n            <Text style={styles.noCustomRatesText}>\n              No custom charges added yet. Use the button below to add one.\n            </Text>\n          )}\n          \n          {/* Custom charge form or Add button */}\n          {customChargeVisible ? (\n            <View style={styles.newCustomRateContainer}>\n              <Text style={styles.customRateFormHeading}>\n                {isEditingExistingRate ? 'Edit Custom Rate' : 'New Custom Rate'}\n              </Text>\n              <TextInput\n                style={[styles.customRateInput, customRateTitleError ? styles.inputError : null]}\n                placeholder=\"Charge Title\"\n                value={newCustomRate.title}\n                onChangeText={(text) => handleCustomRateChange('title', text)}\n                placeholderTextColor={theme.colors.placeHolderText}\n                maxLength={50}\n              />\n              {customRateTitleError ? <Text style={styles.errorText}>{customRateTitleError}</Text> : null}\n              <View style={[styles.currencyInputContainer, customRateAmountError ? styles.inputError : null]}>\n                <Text style={styles.currencySymbol}>$</Text>\n                <TextInput\n                  style={styles.currencyInput}\n                  placeholder=\"0.00\"\n                  keyboardType=\"decimal-pad\"\n                  value={newCustomRate.rate}\n                  onChangeText={(text) => handleCustomRateChange('rate', text)}\n                  placeholderTextColor={theme.colors.placeHolderText}\n                />\n              </View>\n              {customRateAmountError ? <Text style={styles.errorText}>{customRateAmountError}</Text> : null}\n              <TextInput\n                style={[styles.customRateInput, styles.textArea, customRateDescriptionError ? styles.inputError : null]}\n                placeholder=\"Description\"\n                value={newCustomRate.description}\n                onChangeText={(text) => handleCustomRateChange('description', text)}\n                placeholderTextColor={theme.colors.placeHolderText}\n                multiline={true}\n                numberOfLines={3}\n                maxLength={200}\n              />\n              {customRateDescriptionError ? <Text style={styles.errorText}>{customRateDescriptionError}</Text> : null}\n              <View style={styles.customRateButtonContainer}>\n                <TouchableOpacity\n                  style={styles.cancelRateButton}\n                  onPress={() => {\n                    debugLog('MBAno34othg0v', 'Cancel button pressed for custom rate form');\n                    // Reset all form-related state\n                    setCustomChargeVisible(false);\n                    setNewCustomRate({\n                      title: '',\n                      rate: '',\n                      description: ''\n                    });\n                    setIsEditingExistingRate(false);\n                    // Ensure any warning modal is also closed\n                    setShowUnsavedRateWarning(false);\n                  }}\n                >\n                  <MaterialCommunityIcons\n                    name=\"close\"\n                    size={20}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.cancelRateText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.addRateButton, \n                    styles.saveRateButton,\n                    (!newCustomRate.title.trim() || !newCustomRate.rate || \n                      isNaN(parseFloat(newCustomRate.rate)) || parseFloat(newCustomRate.rate) <= 0) \n                      ? styles.disabledSaveButton : {}\n                  ]}\n                  onPress={handleAddCustomRate}\n                  disabled={!newCustomRate.title.trim() || !newCustomRate.rate || \n                    isNaN(parseFloat(newCustomRate.rate)) || parseFloat(newCustomRate.rate) <= 0}\n                >\n                  <MaterialCommunityIcons\n                    name=\"content-save\"\n                    size={20}\n                    color={theme.colors.surface}\n                  />\n                  <Text style={styles.saveRateText}>\n                    {isEditingExistingRate ? 'Update Custom Rate' : 'Save Custom Rate'}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          ) : (\n            <TouchableOpacity\n              style={styles.addRateButton}\n              onPress={handleAddCustomRate}\n            >\n              <MaterialCommunityIcons\n                name=\"plus\"\n                size={20}\n                color={theme.colors.mainColors.main}\n              />\n              <Text style={styles.addRateText}>Add Rate</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      </ScrollView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateContainer: {\n    marginBottom: 24,\n  },\n  label: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateInputGroup: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  currencyInputContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  currencySymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginRight: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  currencyInput: {\n    flex: 1,\n    fontSize: 16,\n    color: theme.colors.text,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  unitSelector: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    paddingVertical: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  unitText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginTop: 4,\n    zIndex: 1000,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    maxHeight: 200,\n  },\n  dropdownScroll: {\n    width: '100%',\n  },\n  dropdownScrollContent: {\n    flexGrow: 1,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  selectedDropdownItem: {\n    backgroundColor: theme.colors.mainColors.mainLight,\n  },\n  dropdownText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedDropdownText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  holidayRateContainer: {\n    marginBottom: 24,\n  },\n  holidayRateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  rateTypeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    overflow: 'hidden',\n    borderRadius: 8,\n  },\n  toggleButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 14,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: 40,\n    width: 44,\n    height: 36,\n  },\n  activeToggleButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n  },\n  inactiveToggleButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  toggleButtonText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  activeToggleText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  inactiveToggleText: {\n    color: theme.colors.text,\n  },\n  holidayRateInputWrapper: {\n    position: 'relative',\n  },\n  percentageInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  percentageInput: {\n    flex: 1,\n    fontSize: 16,\n    color: theme.colors.text,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  percentageSymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginRight: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calculatedHolidayRate: {\n    position: 'absolute',\n    bottom: -24,\n    right: 4,\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    paddingTop: 4,\n  },\n  customRatesContainer: {\n    // marginTop: 24,\n  },\n  customRateItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  customRateContent: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  customRateActions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  customRateTitleContainer: {\n    flex: 1,\n    marginRight: 16,\n  },\n  customRateTitle: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateDescription: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    marginTop: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  newCustomRateContainer: {\n    gap: 12,\n    marginBottom: 16,\n  },\n  customRateInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.surface,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n  },\n  textArea: {\n    height: 80,\n    textAlignVertical: 'top',\n  },\n  addRateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n    borderRadius: 8,\n    justifyContent: 'center',\n  },\n  addRateText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateButtonContainer: {\n    flexDirection: 'row',\n    gap: 12,\n    marginTop: 12,\n  },\n  cancelRateButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    justifyContent: 'center',\n    backgroundColor: theme.colors.surface,\n  },\n  cancelRateText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  saveRateButton: {\n    flex: 2,\n    backgroundColor: theme.colors.mainColors.main,\n    borderColor: theme.colors.mainColors.main,\n  },\n  disabledSaveButton: {\n    backgroundColor: theme.colors.placeHolderText,\n    borderColor: theme.colors.placeHolderText,\n  },\n  saveRateText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  customRateFormHeading: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noCustomRatesText: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 16,\n    fontStyle: 'italic',\n  },\n  customRateAction: {\n    padding: 8,\n    borderRadius: 4,\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    padding: 24,\n    borderRadius: 12,\n    maxWidth: '85%',\n    minWidth: 280,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  modalIcon: {\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 12,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 24,\n    textAlign: 'center',\n    lineHeight: 22,\n  },\n  modalButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n  },\n  modalButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  disabledUnitSelector: {\n    backgroundColor: theme.colors.surface,\n    opacity: 0.8,\n    borderColor: theme.colors.modernBorder,\n  },\n  inputError: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default RatesAndReviewStep; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n  Platform,\n  ScrollView,\n  ActivityIndicator\n} from 'react-native';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport StepProgressIndicator from './common/StepProgressIndicator';\nimport { debugLog } from '../context/AuthContext';\nimport CategorySelectionStep from './serviceCreation/CategorySelectionStep';\nimport ServiceDetailsStep from './serviceCreation/ServiceDetailsStep';\nimport RatesAndReviewStep from './serviceCreation/RatesAndReviewStep';\nimport { createService, updateService } from '../api/API';\nimport { useToast } from './ToastProvider';\n\nconst STEPS = {\n  CATEGORY_SELECTION: {\n    id: 0,\n    name: 'Categories & Types'\n  },\n  SERVICE_DETAILS: {\n    id: 1,\n    name: 'Service Details'\n  },\n  RATES_AND_REVIEW: {\n    id: 2,\n    name: 'Rates & Review'\n  }\n};\n\n// Import the hardcoded animal categories directly\nconst ANIMAL_CATEGORIES = {\n  // Farm animals\n  'Horse': 'Farm Animals',\n  'Cow': 'Farm Animals',\n  'Sheep': 'Farm Animals',\n  'Goat': 'Farm Animals',\n  'Pig': 'Farm Animals',\n  \n  // Domestic\n  'Dogs': 'Domestic',\n  'Cats': 'Domestic',\n  'Birds': 'Domestic',\n  'Rabbits': 'Domestic',\n  'Hamsters': 'Domestic',\n  \n  // Reptiles\n  'Snake': 'Reptiles',\n  'Lizard': 'Reptiles',\n  'Turtle': 'Reptiles',\n  'Gecko': 'Reptiles',\n  'Chameleon': 'Reptiles',\n  \n  // Aquatic\n  'Fish': 'Aquatic',\n  'Frog': 'Aquatic',\n  'Newt': 'Aquatic',\n  'Axolotl': 'Aquatic',\n  \n  // Invertebrates\n  'Spider': 'Invertebrates',\n  'Scorpion': 'Invertebrates',\n  'Crab': 'Invertebrates',\n  'Snail': 'Invertebrates',\n  'Millipede': 'Invertebrates'\n};\n\n// Also define GENERAL_CATEGORIES so we can look up category IDs from names\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n  }\n];\n\nconst ServiceCreationModal = ({ \n  visible, \n  onClose,\n  onSave,\n  initialService = null,\n  setHasUnsavedChanges \n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  const [currentStep, setCurrentStep] = useState(STEPS.CATEGORY_SELECTION.id);\n  const [serviceData, setServiceData] = useState({\n    generalCategories: [],\n    animalTypes: [],\n    serviceName: '',\n    serviceDescription: '',\n    isOvernight: false,\n    rates: {\n      base_rate: '',\n      base_rate_unit: 'Per Visit',\n      additionalAnimalRate: '',\n      additionalAnimalThreshold: '1',\n      hasHolidayRate: false,\n      holidayRate: '0',\n      isPercent: true\n    },\n    additionalRates: []\n  });\n  const [error, setError] = useState(null);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isAddingCustomRate, setIsAddingCustomRate] = useState(false);\n  const showToast = useToast();\n\n  // Reset state when modal is opened\n  useEffect(() => {\n    if (visible) {\n      setCurrentStep(STEPS.CATEGORY_SELECTION.id);\n      setError(null);\n      \n      if (initialService) {\n        debugLog('MBA123456', 'Initializing with service data:', initialService);\n        setIsEditMode(true);\n        \n        // Extract animal types from the object\n        let animalTypesArray = [];\n        \n        // Log the animal types we're working with\n        if (initialService.animalTypes && initialService.animalTypes.length > 0) {\n          // If animalTypes is already provided in the expected format, use it directly\n          debugLog('MBA123456', 'Using pre-formatted animalTypes array:', initialService.animalTypes);\n          animalTypesArray = initialService.animalTypes;\n        } else if (initialService.animal_types) {\n          debugLog('MBA123456', 'Using animal_types from backend:', initialService.animal_types);\n          \n          // Handle if animal_types is a dictionary mapping animal types to categories\n          if (typeof initialService.animal_types === 'object' && !Array.isArray(initialService.animal_types)) {\n            debugLog('MBA123456', 'Processing animal_types as dictionary');\n            Object.entries(initialService.animal_types).forEach(([animalName, categoryName]) => {\n              // Find the category ID for this category name\n              const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n              debugLog('MBA123456', `Adding animal: ${animalName}, category: ${categoryName}, categoryId: ${category?.id || 'not found'}`);\n              \n              animalTypesArray.push({\n                name: animalName,\n                categoryName: categoryName,\n                categoryId: category ? category.id : null, \n                isCustom: false\n              });\n            });\n          }\n        } else {\n          debugLog('MBA123456', 'No animal types found in data');\n        }\n        \n        debugLog('MBA123456', 'Final converted animal types:', animalTypesArray);\n        \n        // Parse holiday rate\n        let holidayRate = '0';\n        let isPercent = true;\n        \n        if (initialService.holiday_rate) {\n          if (typeof initialService.holiday_rate === 'string') {\n            if (initialService.holiday_rate.includes('%')) {\n              holidayRate = initialService.holiday_rate.replace('%', '');\n              isPercent = true;\n            } else if (initialService.holiday_rate.includes('$')) {\n              holidayRate = initialService.holiday_rate.replace('$', '');\n              isPercent = false;\n            } else {\n              holidayRate = initialService.holiday_rate;\n              isPercent = initialService.holiday_rate_is_percent !== undefined \n                ? initialService.holiday_rate_is_percent \n                : true;\n            }\n          } else {\n            holidayRate = initialService.holiday_rate.toString();\n            isPercent = initialService.holiday_rate_is_percent !== undefined \n              ? initialService.holiday_rate_is_percent \n              : true;\n          }\n        }\n        \n        // Format additional rates\n        let additionalRates = [];\n        if (initialService.additional_rates && Array.isArray(initialService.additional_rates)) {\n          additionalRates = initialService.additional_rates.map(rate => ({\n            title: rate.title,\n            rate: rate.rate,\n            description: rate.description || ''\n          }));\n        }\n        \n        // Set the service data with the provided initial values\n        setServiceData({\n          service_id: initialService.service_id,\n          generalCategories: [], // We don't need to populate this as it's derived from animalTypes\n          animalTypes: animalTypesArray,\n          serviceName: initialService.service_name || '',\n          serviceDescription: initialService.description || '',\n          isOvernight: initialService.is_overnight || false,\n          rates: {\n            base_rate: initialService.base_rate || '',\n            base_rate_unit: initialService.unit_of_time || 'Per Visit',\n            additionalAnimalRate: initialService.additional_animal_rate || '',\n            additionalAnimalThreshold: initialService.applies_after?.toString() || '1',\n            hasHolidayRate: holidayRate !== '0',\n            holidayRate: holidayRate,\n            isPercent: isPercent\n          },\n          additionalRates: additionalRates\n        });\n      } else {\n        // Reset to default state if not in edit mode\n        setIsEditMode(false);\n        setServiceData({\n          generalCategories: [],\n          animalTypes: [],\n          serviceName: '',\n          serviceDescription: '',\n          isOvernight: false,\n          rates: {\n            base_rate: '',\n            base_rate_unit: 'Per Visit',\n            additionalAnimalRate: '',\n            additionalAnimalThreshold: '1',\n            hasHolidayRate: false,\n            holidayRate: '0',\n            isPercent: true\n          },\n          additionalRates: []\n        });\n      }\n    }\n  }, [visible, initialService]);\n\n  const canProceedToNextStep = () => {\n    switch (currentStep) {\n      case STEPS.CATEGORY_SELECTION.id:\n        return serviceData.animalTypes?.length > 0;\n      \n      case STEPS.SERVICE_DETAILS.id:\n        return (\n          serviceData.serviceName?.trim() &&\n          serviceData.serviceDescription?.trim()\n        );\n      \n      case STEPS.RATES_AND_REVIEW.id:\n        const hasValidBaseRate = serviceData.rates?.base_rate && \n          parseFloat(serviceData.rates.base_rate) > 0;\n        const hasValidAdditionalRate = !serviceData.rates?.additionalAnimalRate || \n          parseFloat(serviceData.rates.additionalAnimalRate) >= 0;\n        \n        return hasValidBaseRate && hasValidAdditionalRate;\n      \n      default:\n        return false;\n    }\n  };\n\n  // Direct API call function that doesn't depend on state\n  const callServiceApi = async () => {\n    debugLog('MBAno34othg0v', 'Directly calling API without state dependencies');\n    \n    debugLog('MBA54321', 'Original serviceData:', serviceData);\n    setIsSubmitting(true);\n    \n    try {\n      // Format animal types as a dictionary mapping animal types to their categories\n      const animalTypesDict = {};\n      \n      serviceData.animalTypes.forEach(animalType => {\n        const animalName = typeof animalType === 'string' ? animalType : animalType.name;\n        \n        // Use the hardcoded ANIMAL_CATEGORIES mapping\n        if (ANIMAL_CATEGORIES[animalName]) {\n          animalTypesDict[animalName] = ANIMAL_CATEGORIES[animalName];\n        } else {\n          // For custom animals, use the category name if it exists\n          if (typeof animalType === 'object' && animalType.categoryName) {\n            animalTypesDict[animalName] = animalType.categoryName;\n          } else {\n            animalTypesDict[animalName] = 'Other';\n          }\n        }\n      });\n      \n      // Log animal types dictionary for debugging\n      debugLog('MBA54321', 'Animal types dictionary created:', animalTypesDict);\n      \n      // Check what type of data we have for generalCategories (for backward compatibility)\n      const categories = serviceData.generalCategories.map(cat => \n        typeof cat === 'string' ? cat : (cat.name || 'Uncategorized')\n      );\n      \n      // Format holiday rate with appropriate symbol based on type\n      const holidayRateValue = serviceData.rates.holidayRate || '0';\n      const holidayRateString = holidayRateValue && holidayRateValue !== '0' ? \n        (serviceData.rates.isPercent ? `${holidayRateValue}%` : `$${holidayRateValue}`) : \n        '0';\n      \n      // Format the data according to the backend's expected format\n      const formattedData = {\n        service_name: serviceData.serviceName,\n        description: serviceData.serviceDescription,\n        animal_types: animalTypesDict,\n        base_rate: serviceData.rates.base_rate,\n        additional_animal_rate: serviceData.rates.additionalAnimalRate || '0',\n        holiday_rate: holidayRateString,\n        applies_after: parseInt(serviceData.rates.additionalAnimalThreshold) || 1,\n        unit_of_time: serviceData.rates.base_rate_unit,\n        is_overnight: serviceData.isOvernight || false,\n        additional_rates: serviceData.additionalRates.map(rate => ({\n          title: rate.title,\n          description: rate.description || '',\n          rate: rate.rate\n        }))\n      };\n      \n      // If in edit mode, include the service_id in the formatted data\n      if (isEditMode && serviceData.service_id) {\n        formattedData.service_id = serviceData.service_id;\n      }\n      \n      debugLog('MBA54321', 'Formatted data for backend:', formattedData);\n      \n      let response;\n      \n      // Call the appropriate API based on edit mode\n      if (isEditMode && serviceData.service_id) {\n        response = await updateService(formattedData);\n        debugLog('MBA54321', 'Service updated successfully, response:', response);\n      } else {\n        response = await createService(formattedData);\n        debugLog('MBA54321', 'Service created successfully, response:', response);\n      }\n      \n      // Show success toast\n      showToast({\n        message: isEditMode ? 'Service updated successfully!' : 'Service created successfully!',\n        type: 'success',\n        duration: 3000\n      });\n      \n      // Format the data according to what ServiceManager expects\n      const serviceManagerData = {\n        // Use the service_id from the response\n        service_id: response.service_id,\n        // Use the formatted service_name from the response if available\n        serviceName: response.service_name || serviceData.serviceName,\n        serviceDescription: serviceData.serviceDescription,\n        // Use the formatted unit_of_time from the response if available\n        lengthOfService: response.unit_of_time || serviceData.rates.base_rate_unit,\n        isOvernight: serviceData.isOvernight || false,\n        is_active: response.is_active !== undefined ? response.is_active : true,\n        rates: {\n          base_rate: serviceData.rates.base_rate,\n          additionalAnimalRate: serviceData.rates.additionalAnimalRate || '0',\n          holidayRate: holidayRateString\n        },\n        generalCategories: serviceData.generalCategories.map(cat => {\n          if (typeof cat === 'string') {\n            return {\n              id: cat.toLowerCase().replace(/\\s+/g, '_'),\n              name: cat,\n              isCustom: false\n            };\n          }\n          return {\n            id: cat.id || cat.name.toLowerCase().replace(/\\s+/g, '_'),\n            name: cat.name,\n            isCustom: cat.isCustom || false\n          };\n        }),\n        animalTypes: serviceData.animalTypes.map(type => {\n          if (typeof type === 'string') {\n            return {\n              name: type,\n              categoryId: null,\n              isCustom: false\n            };\n          }\n          \n          // Use the categoryName if it exists, otherwise we need to include it\n          return {\n            name: type.name,\n            categoryId: type.categoryId,\n            categoryName: type.categoryName || 'Other', // Ensure categoryName is included\n            isCustom: type.isCustom || false\n          };\n        }),\n        additionalRates: serviceData.additionalRates.map(rate => ({\n          label: rate.title,\n          value: rate.rate,\n          description: rate.description || ''\n        }))\n      };\n      \n      // If the response has additional_rates, use those instead\n      if (response.additional_rates && Array.isArray(response.additional_rates)) {\n        serviceManagerData.additionalRates = response.additional_rates.map(rate => ({\n          label: rate.title,\n          value: rate.rate,\n          description: rate.description || ''\n        }));\n      }\n      \n      debugLog('MBA54321', 'Formatted data for ServiceManager:', serviceManagerData);\n      \n      // Call the onSave prop with properly formatted data\n      if (onSave) {\n        onSave(serviceManagerData);\n      }\n      \n      // Reset form and close modal\n      setServiceData({\n        generalCategories: [],\n        animalTypes: [],\n        serviceName: '',\n        serviceDescription: '',\n        isOvernight: false,\n        rates: {\n          base_rate: '',\n          base_rate_unit: 'Per Visit',\n          additionalAnimalRate: '',\n          additionalAnimalThreshold: '1',\n          hasHolidayRate: false,\n          holidayRate: '0',\n          isPercent: true\n        },\n        additionalRates: []\n      });\n      \n      setCurrentStep(STEPS.CATEGORY_SELECTION.id);\n      setHasUnsavedChanges(true);\n      onClose();\n    } catch (error) {\n      debugLog('MBA54321', 'Error saving service:', error);\n      debugLog('MBA54321', 'Error response:', error.response?.data);\n      \n      // Show error toast\n      showToast({\n        message: `Failed to ${isEditMode ? 'update' : 'create'} service: ${error.response?.data?.error || error.message}`,\n        type: 'error',\n        duration: 4000\n      });\n      \n      setError(`Failed to ${isEditMode ? 'update' : 'create'} service. Please try again.`);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleNext = () => {\n    debugLog('MBAno34othg0v', 'handleNext called, currentStep:', currentStep);\n    \n    if (!canProceedToNextStep()) {\n      setError('Please complete all required fields before proceeding');\n      return;\n    }\n\n    setError(null);\n    if (currentStep < STEPS.RATES_AND_REVIEW.id) {\n      setCurrentStep(prev => prev + 1);\n    } else {\n      // We're on the final step (Rates & Review)\n      debugLog('MBAno34othg0v', 'Final step, checking for unsaved custom rates');\n      \n      // Signal to RatesAndReviewStep that we're attempting to update\n      setIsAddingCustomRate(true);\n      \n      // Don't even call handleSaveService\n      // We'll call the API directly from the RatesAndReviewStep when appropriate\n    }\n  };\n\n  const handleSaveService = async () => {\n    debugLog('MBAno34othg0v', 'DEPRECATED: handleSaveService called, this should not happen');\n  };\n\n  const handleBack = () => {\n    if (currentStep > STEPS.CATEGORY_SELECTION.id) {\n      setCurrentStep(prev => prev - 1);\n    } else {\n      onClose();\n    }\n  };\n\n  const renderCurrentStep = () => {\n    debugLog('MBA54321 Rendering step:', currentStep, 'with serviceData:', serviceData);\n    \n    switch (currentStep) {\n      case STEPS.CATEGORY_SELECTION.id:\n        return (\n          <CategorySelectionStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n          />\n        );\n      case STEPS.SERVICE_DETAILS.id:\n        return (\n          <ServiceDetailsStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n          />\n        );\n      case STEPS.RATES_AND_REVIEW.id:\n        return (\n          <RatesAndReviewStep\n            serviceData={serviceData}\n            setServiceData={setServiceData}\n            isUpdatingService={isAddingCustomRate}\n            setIsUpdatingService={setIsAddingCustomRate}\n            onProceedWithUpdate={callServiceApi}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"fade\"\n      onRequestClose={handleBack}\n      transparent={true}\n    >\n      <View style={styles.modalOverlay}>\n        <SafeAreaView style={styles.modalContent}>\n          <View style={styles.stepIndicatorContainer}>\n            <StepProgressIndicator\n              steps={Object.values(STEPS).map(step => step.name)}\n              currentStep={currentStep}\n            />\n          </View>\n          <ScrollView style={styles.scrollContent} contentContainerStyle={styles.scrollContentContainer}>\n            <View style={styles.content}>\n              {renderCurrentStep()}\n            </View>\n            {error && (\n              <Text style={styles.errorText}>{error}</Text>\n            )}\n          </ScrollView>\n          <View style={styles.footer}>\n            <TouchableOpacity\n              style={styles.cancelButton}\n              onPress={handleBack}\n              disabled={isSubmitting}\n            >\n              <Text style={styles.cancelButtonText}>\n                {currentStep > STEPS.CATEGORY_SELECTION.id ? 'Back' : 'Cancel'}\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[\n                styles.nextButton,\n                (!canProceedToNextStep() || isSubmitting) && styles.disabledButton\n              ]}\n              onPress={handleNext}\n              disabled={!canProceedToNextStep() || isSubmitting}\n            >\n              {isSubmitting && currentStep === STEPS.RATES_AND_REVIEW.id ? (\n                <ActivityIndicator color={theme.colors.surface} size=\"small\" />\n              ) : (\n                <Text style={[\n                  styles.nextButtonText,\n                  !canProceedToNextStep() && styles.disabledButtonText\n                ]}>\n                  {currentStep === STEPS.RATES_AND_REVIEW.id ? \n                    (isEditMode ? 'Update Service' : 'Create Service') : \n                    'Next'}\n                </Text>\n              )}\n            </TouchableOpacity>\n          </View>\n        </SafeAreaView>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  modalContent: {\n    width: '95%',\n    maxWidth: Platform.OS === 'web' ? 550 : '100%',\n    maxHeight: '90%',\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  stepIndicatorContainer: {\n    width: '100%',\n    paddingVertical: 12,\n    backgroundColor: theme.colors.background,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  },\n  scrollContent: {\n    flex: 1,\n  },\n  scrollContentContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  footer: {\n    flexDirection: 'row',\n    padding: 16,\n    justifyContent: 'space-between',\n    gap: 12,\n    backgroundColor: theme.colors.background,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.modernBorder,\n  },\n  cancelButton: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  nextButton: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.placeHolderText,\n  },\n  nextButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  disabledButtonText: {\n    color: theme.colors.surface,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceCreationModal; ","import React, { useContext, useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Switch } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport { debugLog } from '../context/AuthContext';\n\nconst ProfessionalServiceCard = ({ \n  item, \n  index, \n  onEdit, \n  onDelete \n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [isActive, setIsActive] = useState(item.is_active !== false); // Default to true if not specified\n  \n  // Log the item data when it changes\n  useEffect(() => {\n    debugLog('MBA3377', 'ProfessionalServiceCard Item Data:', item);\n  }, [item]);\n\n  const handleToggleActive = () => {\n    setIsActive(!isActive);\n    // Here you would normally update this to the backend\n  };\n\n  // Determine background color for pricing section based on service type\n  const getPricingBackgroundColor = () => {\n    // This will cycle through different colors based on the index\n    const colors = [\n      // theme.colors.proDashboard.main, // Light green\n      // theme.colors.proDashboard.secondary, // Light blue\n      // theme.colors.proDashboard.tertiary, // Light orange\n    ];\n    return colors[index % colors.length];\n  };\n\n  // Format the display of unit of time in a user-friendly way\n  const formatUnitOfTime = (unitOfTime) => {\n    if (!unitOfTime) return 'visit';\n    \n    // If we receive a nicely formatted unit of time from the backend, use it\n    return unitOfTime;\n  };\n\n  return (\n    <View style={styles.serviceCard}>\n      <View style={styles.cardHeader}>\n        <Text style={styles.serviceName} numberOfLines={2} ellipsizeMode=\"tail\">{item.serviceName}</Text>\n        {/* TODO: Add back in after MVP and make it the primary toggle instead of active. \n        <View style={styles.activeToggleContainer}>\n          <Text style={isActive ? styles.activeText : styles.inactiveText}>\n            {isActive ? 'Active' : 'Inactive'}\n          </Text>\n          <Switch\n            value={isActive}\n            onValueChange={handleToggleActive}\n            trackColor={{\n              false: theme.colors.quaternary, \n              true: theme.colors.primary\n            }}\n            thumbColor={theme.colors.surfaceContrast}\n            style={styles.switch}\n          />\n        </View> */}\n      </View>\n\n      <View style={[styles.ratesContainer, { backgroundColor: getPricingBackgroundColor() }]}>\n        <View style={styles.rateRow}>\n          <Text style={styles.rateLabel}>Base Rate</Text>\n          <Text style={styles.rateValue}>${item.rates.base_rate || 'N/A'}/{formatUnitOfTime(item.lengthOfService)}</Text>\n        </View>\n        \n        {item.rates.additionalAnimalRate && (\n          <View style={styles.rateRow}>\n            <Text style={styles.rateLabel}>Additional Animal</Text>\n            <Text style={styles.rateValue}>${item.rates.additionalAnimalRate}</Text>\n          </View>\n        )}\n        {item.rates.holidayRate && (\n          <View style={styles.rateRow}>\n            <Text style={styles.rateLabel}>Holiday Rate</Text>\n            <Text style={styles.rateValue}>{item.rates.holidayRate}</Text>\n          </View>\n        )}\n        {item.additionalRates && item.additionalRates.map((rate, idx) => (\n          <View key={idx} style={styles.rateRow}>\n            <Text style={styles.rateLabel}>{rate.label}</Text>\n            <Text style={styles.rateValue}>${rate.value}</Text>\n          </View>\n        ))}\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <TouchableOpacity onPress={() => onDelete(index)} style={styles.deleteButton}>\n          <MaterialCommunityIcons name=\"trash-can\" size={20} color={'#F26969'} />\n          <Text style={styles.deleteButtonText}>Delete</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => onEdit(index)} style={styles.editButton}>\n          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.surfaceContrast} />\n          <Text style={styles.buttonText}>Edit</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  serviceCard: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    shadowColor: \"#000\",\n    display: 'flex',\n    justifyContent: 'center',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16,\n  },\n  serviceName: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    flex: 1,\n    flexWrap: 'wrap',\n    marginRight: 8,\n  },\n  activeToggleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  activeText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  inactiveText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  switch: {\n    transform: [{ scaleX: 0.8 }, { scaleY: 0.8 }],\n  },\n  ratesContainer: {\n    gap: 12,\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  rateRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 4,\n  },\n  rateLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  rateValue: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 8,\n  },\n  editButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 10,\n    borderRadius: 8,\n    gap: 8,\n  },\n  deleteButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderColor: '#F26969',\n    borderWidth: 1,\n    paddingVertical: 10,\n    borderRadius: 8,\n    gap: 8,\n  },\n  buttonText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.surfaceContrast,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  deleteButtonText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    color: '#F26969',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ProfessionalServiceCard;","import { Platform } from 'react-native';\n\n/**\n * Detects if the device supports hover interactions properly\n * Returns false for touch devices (mobile, tablets) even when on web browsers\n */\nexport const supportsHover = () => {\n  // Return false for React Native app\n  if (Platform.OS !== 'web') {\n    return false;\n  }\n\n  // For web, check if device supports hover\n  if (typeof window !== 'undefined') {\n    // Check for touch capability\n    const hasTouchScreen = 'ontouchstart' in window || \n                          navigator.maxTouchPoints > 0 || \n                          navigator.msMaxTouchPoints > 0;\n    \n    // Use CSS media query to check hover capability\n    const supportsHoverQuery = window.matchMedia('(hover: hover)').matches;\n    \n    // Return true only if device supports hover AND is not primarily a touch device\n    return supportsHoverQuery && !hasTouchScreen;\n  }\n\n  return false;\n};\n\n/**\n * Hook to get hover support status\n */\nexport const useHoverSupport = () => {\n  return supportsHover();\n}; ","import React, { useState, useRef, useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, FlatList, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport ServiceCreationModal from './ServiceCreationModal';\nimport ProfessionalServiceCard from './ProfessionalServiceCard';\nimport ConfirmationModal from './ConfirmationModal';\nimport { Portal } from 'react-native-paper';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { deleteService } from '../api/API';\nimport { useToast } from './ToastProvider';\nimport { supportsHover } from '../utils/deviceUtils';\n\n// Define GENERAL_CATEGORIES for mapping category names to IDs\nconst GENERAL_CATEGORIES = [\n  {\n    id: 'all',\n    name: 'All',\n    icon: 'paw-outline',\n  },\n  {\n    id: 'farm_animals',\n    name: 'Farm Animals',\n    icon: 'horse',\n  },\n  {\n    id: 'domestic',\n    name: 'Domestic',\n    icon: 'paw',\n  },\n  {\n    id: 'reptiles',\n    name: 'Reptiles',\n    icon: 'snake',\n  },\n  {\n    id: 'aquatic',\n    name: 'Aquatic',\n    icon: 'fish',\n  },\n  {\n    id: 'invertebrates',\n    name: 'Invertebrates',\n    icon: 'spider',\n  }\n];\n\nconst ServiceManager = ({ services, setServices, setHasUnsavedChanges, isProfessionalTab = false, isMobile = false }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [editingService, setEditingService] = useState(null);\n  const [collapsedServices, setCollapsedServices] = useState([]);\n  const [allCollapsed, setAllCollapsed] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [serviceToDelete, setServiceToDelete] = useState(null);\n  const [hoveredButton, setHoveredButton] = useState(null);\n  const [tooltipPosition, setTooltipPosition] = useState(null);\n  const { screenWidth, is_DEBUG } = useContext(AuthContext);\n  const [collapseTooltipPosition, setCollapseTooltipPosition] = useState(null);\n  const buttonRef = useRef(null);\n  const collapseButtonRef = useRef(null);\n  const showToast = useToast();\n\n  // Check if device supports hover\n  const deviceSupportsHover = supportsHover();\n\n  // Reset local state when services change (e.g., when user changes)\n  useEffect(() => {\n    setCollapsedServices([]);\n    setAllCollapsed(false);\n    setEditingService(null);\n    setShowModal(false);\n    setShowDeleteModal(false);\n    setServiceToDelete(null);\n  }, [services]);\n\n  const toggleCollapseAll = () => {\n    if (allCollapsed) {\n      setCollapsedServices([]);\n    } else {\n      setCollapsedServices(services.map((_, index) => index));\n    }\n    setAllCollapsed(!allCollapsed);\n  };\n\n  const handleEditService = (index) => {\n    const serviceToEdit = services[index];\n    debugLog('MBA87654', 'Original service for editing:', serviceToEdit);\n    \n    // Convert animal_types from object format to array format if needed\n    let formattedAnimalTypes = [];\n    \n    if (serviceToEdit.animal_types && typeof serviceToEdit.animal_types === 'object' && !Array.isArray(serviceToEdit.animal_types)) {\n      // Convert from backend format {animalName: categoryName} to array of objects\n      formattedAnimalTypes = Object.entries(serviceToEdit.animal_types).map(([animalName, categoryName]) => {\n        // Find category ID from category name\n        const category = GENERAL_CATEGORIES.find(cat => cat.name === categoryName);\n        const categoryId = category ? category.id : null;\n        \n        return {\n          name: animalName,\n          categoryName: categoryName,\n          categoryId: categoryId,\n          isCustom: false\n        };\n      });\n      \n      debugLog('MBA87654', 'Converted animal_types to array format:', formattedAnimalTypes);\n    } else if (serviceToEdit.animalTypes) {\n      // If we already have animalTypes in the expected format, use it\n      formattedAnimalTypes = serviceToEdit.animalTypes;\n      debugLog('MBA87654', 'Using existing animalTypes array:', formattedAnimalTypes);\n    }\n    \n    // Transform to the format expected by ServiceCreationModal\n    const formattedService = {\n      service_id: serviceToEdit.service_id,\n      service_name: serviceToEdit.service_name || serviceToEdit.serviceName,\n      description: serviceToEdit.description || serviceToEdit.serviceDescription,\n      animal_types: serviceToEdit.animal_types,  // Keep the original format for API calls\n      animalTypes: formattedAnimalTypes,        // Add the formatted version for the UI\n      base_rate: serviceToEdit.base_rate || (serviceToEdit.rates ? serviceToEdit.rates.base_rate : ''),\n      additional_animal_rate: serviceToEdit.additional_animal_rate || (serviceToEdit.rates ? serviceToEdit.rates.additionalAnimalRate : '0'),\n      holiday_rate: serviceToEdit.holiday_rate || (serviceToEdit.rates ? serviceToEdit.rates.holidayRate : '0'),\n      applies_after: serviceToEdit.applies_after || 1,\n      unit_of_time: serviceToEdit.unit_of_time || serviceToEdit.lengthOfService || 'Per Visit',\n      is_overnight: serviceToEdit.is_overnight || serviceToEdit.isOvernight || false,\n      is_active: serviceToEdit.is_active !== undefined ? serviceToEdit.is_active : true,\n      holiday_rate_is_percent: serviceToEdit.holiday_rate_is_percent,\n      additional_rates: serviceToEdit.additional_rates || \n        (serviceToEdit.additionalRates ? serviceToEdit.additionalRates.map(rate => ({\n          title: rate.label || rate.title,\n          rate: rate.value || rate.rate,\n          description: rate.description || ''\n        })) : [])\n    };\n    \n    debugLog('MBA87654', 'Formatted service for editing modal:', formattedService);\n    setEditingService(formattedService);\n    setShowModal(true);\n  };\n\n  const handleDeleteService = (index) => {\n    setServiceToDelete(index);\n    setShowDeleteModal(true);\n  };\n\n  const handleSaveService = (updatedService) => {\n    // Add debugging log for service data received\n    debugLog('MBA8765', 'Service data received from modal:', updatedService);\n    \n    // Check if we're updating an existing service\n    const isEditingExisting = editingService && updatedService.service_id;\n    \n    if (isEditingExisting) {\n      debugLog('MBA8765', 'Updating existing service with ID:', updatedService.service_id);\n      \n      // Find the index of this service in our list by service_id\n      const serviceIndex = services.findIndex(s => s.service_id === updatedService.service_id);\n      \n      if (serviceIndex !== -1) {\n        // Update the service in the array\n        setServices(prev => {\n          const newServices = [...prev];\n          newServices[serviceIndex] = updatedService;\n          return newServices;\n        });\n        \n        debugLog('MBA8765', 'Service updated at index:', serviceIndex);\n      } else {\n        // If not found by ID, just add it\n        debugLog('MBA8765', 'Service ID not found in existing list, adding as new');\n        setServices(prev => [...prev, updatedService]);\n      }\n      \n      setHasUnsavedChanges(true);\n      setEditingService(null);\n      return;\n    }\n    \n    // For new services\n    if (updatedService.service_id) {\n      debugLog('MBA8765', 'New service created on backend with ID:', updatedService.service_id);\n      \n      // Add the new service to the list\n      setServices(prev => [...prev, updatedService]);\n      setHasUnsavedChanges(true);\n      setEditingService(null);\n      return;\n    }\n    \n    // Legacy support for old-format services (should not reach here with new code)\n    debugLog('MBA8765', 'Warning: Falling back to legacy service format handling');\n    \n    // Create animal_types dictionary from animalTypes array\n    const animalTypesDict = {};\n    if (updatedService.animalTypes && Array.isArray(updatedService.animalTypes)) {\n      updatedService.animalTypes.forEach(animal => {\n        if (animal && animal.name) {\n          // Use the categoryName directly from the animal object if available\n          if (animal.categoryName) {\n            animalTypesDict[animal.name] = animal.categoryName;\n          } \n          // Fallback if no categoryName is available\n          else {\n            animalTypesDict[animal.name] = animal.category || 'Other';\n          }\n        }\n      });\n    }\n\n    // Transform the service data to match the backend structure\n    const transformedService = {\n      service_name: updatedService.serviceName,\n      description: updatedService.serviceDescription,\n      unit_of_time: updatedService.lengthOfService,\n      is_overnight: updatedService.isOvernight || false,\n      base_rate: updatedService.rates.base_rate,\n      additional_animal_rate: updatedService.rates.additionalAnimalRate,\n      holiday_rate: updatedService.rates.holidayRate,\n      animal_types: animalTypesDict,\n      additional_rates: updatedService.additionalRates.map(rate => ({\n        title: rate.label,\n        rate: rate.value,\n        description: rate.description\n      }))\n    };\n\n    // Legacy code for handling legacy editing\n    if (editingService) {\n      const existingIndex = services.findIndex(s => \n        s.service_id === editingService.service_id\n      );\n      \n      if (existingIndex !== -1) {\n        setServices(prev => {\n          const newServices = [...prev];\n          newServices[existingIndex] = transformedService;\n          return newServices;\n        });\n      } else {\n        setServices(prev => [...prev, transformedService]);\n      }\n    } else {\n      setServices(prev => [...prev, transformedService]);\n    }\n    \n    setHasUnsavedChanges(true);\n    setEditingService(null);\n  };\n\n  const toggleCollapse = (index) => {\n    setCollapsedServices((prev) =>\n      prev.includes(index)\n        ? prev.filter((i) => i !== index)\n        : [...prev, index]\n    );\n  };\n\n  const confirmDelete = async () => {\n    try {\n      // Get the service ID from the selected service\n      const serviceToRemove = services[serviceToDelete];\n      if (!serviceToRemove || !serviceToRemove.service_id) {\n        showToast({\n          message: 'Unable to identify service for deletion',\n          type: 'error',\n          duration: 3000\n        });\n        setShowDeleteModal(false);\n        return;\n      }\n\n      // Call the API to delete the service\n      await deleteService(serviceToRemove.service_id);\n\n      // Remove from UI if successful\n      setServices(prevServices => \n        prevServices.filter((_, i) => i !== serviceToDelete)\n      );\n      \n      setHasUnsavedChanges(true);\n      setShowDeleteModal(false);\n      \n      showToast({\n        message: 'Service deleted successfully',\n        type: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      // Handle the error case\n      const errorMessage = error.response?.data?.error || 'Failed to delete service';\n      \n      showToast({\n        message: errorMessage,\n        type: 'error',\n        duration: 3000\n      });\n      \n      setShowDeleteModal(false);\n    }\n  };\n\n  const showTooltip = (ref, tooltipText, setPosition) => {\n    if (ref && ref.current) {\n      try {\n        setTimeout(() => {\n          // Get the button's DOM element\n          const element = ref.current;\n          // Get the button's bounding rectangle relative to the viewport\n          if (element.getBoundingOwnerRect) {\n            const rect = element.getBoundingOwnerRect();\n            \n            setPosition({\n              x: rect.left + (rect.width / 2),\n              y: rect.top, // Position tooltip at the top of the button\n              text: tooltipText\n            });\n            \n            setHoveredButton(tooltipText);\n          } else {\n            console.error('Error: getBoundingOwnerRect method not found on element');\n          }\n        }, 0);\n      } catch (error) {\n        console.error('Error showing tooltip:', error);\n      }\n    }\n  };\n\n  const renderService = ({ item, index }) => {\n    if (!item || typeof item !== 'object') {\n      console.warn('Invalid item detected:', item);\n      return null;\n    }\n\n    debugLog('MBA8765', 'Rendering service item:', item);\n\n    // Check if this is a service that already has a service_id (created on backend)\n    if (item.service_id) {\n      debugLog('MBA8765', 'This is a backend-created service with ID:', item.service_id);\n      \n      // If the item structure already matches what ProfessionalServiceCard expects, use it directly\n      if (item.serviceName && item.rates) {\n        return (\n          <ProfessionalServiceCard\n            key={`service-${index}`}\n            item={item}\n            index={index}\n            onEdit={() => handleEditService(index)}\n            onDelete={() => handleDeleteService(index)}\n            isCollapsed={collapsedServices.includes(index)}\n            onToggleCollapse={() => toggleCollapse(index)}\n            isProfessionalTab={isProfessionalTab}\n          />\n        );\n      }\n    }\n\n    // Convert animal_types from dictionary to array format\n    let animalTypesArray = [];\n    if (item.animal_types && typeof item.animal_types === 'object' && !Array.isArray(item.animal_types)) {\n      // Convert dictionary format to array format\n      animalTypesArray = Object.entries(item.animal_types).map(([name, category]) => ({\n        name: name,\n        categoryId: undefined, // We don't have exact category IDs, just names\n        category: category,    // Store the category name\n        isCustom: false        // Default to false as we don't know\n      }));\n    } else if (Array.isArray(item.animal_types)) {\n      // If it's already an array, use it directly\n      animalTypesArray = item.animal_types;\n    }\n    \n    // Transform the service data to match the frontend structure\n    const serviceData = {\n      service_id: item.service_id,\n      serviceName: item.service_name,\n      description: item.description,\n      lengthOfService: item.unit_of_time,\n      is_active: item.is_active,\n      generalCategories: item.categories?.map(cat => ({\n        id: cat.id,\n        name: cat.name,\n        isCustom: cat.is_custom\n      })) || [],\n      animalTypes: animalTypesArray,\n      rates: {\n        base_rate: item.base_rate,\n        additionalAnimalRate: item.additional_animal_rate,\n        holidayRate: item.holiday_rate\n      },\n      additionalRates: item.additional_rates?.map(rate => ({\n        label: rate.title,\n        value: rate.rate,\n        description: rate.description\n      })) || []\n    };\n\n    return (\n      <ProfessionalServiceCard\n        key={`service-${index}`}\n        item={serviceData}\n        index={index}\n        onEdit={() => handleEditService(index)}\n        onDelete={() => handleDeleteService(index)}\n        isCollapsed={collapsedServices.includes(index)}\n        onToggleCollapse={() => toggleCollapse(index)}\n        isProfessionalTab={isProfessionalTab}\n      />\n    );\n  };\n\n  // {console.log('Services:', services)}\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.serviceListContainer,\n        {\n          maxWidth: 1200,\n          marginHorizontal: 'auto',\n          width: '100%',\n          paddingHorizontal: isMobile ? 20 : 24,\n          paddingTop: isMobile ? 0 : 44,\n        }\n      ]}>\n        <View style={styles.headerContainer}>\n          <Text style={styles.sectionTitle}>Service Manager</Text>\n          <View style={styles.headerActions}>\n            {/* <TouchableOpacity\n              ref={collapseButtonRef}\n              onPress={toggleCollapseAll} \n              style={styles.collapseButton}\n              onMouseEnter={() => {\n                try {\n                  if (deviceSupportsHover) {\n                    showTooltip(\n                      collapseButtonRef, \n                      allCollapsed ? 'Expand All' : 'Collapse All', \n                      setCollapseTooltipPosition\n                    );\n                  }\n                } catch (error) {\n                  console.error('Error showing collapse tooltip:', error);\n                }\n              }}\n              onMouseLeave={() => {\n                if (deviceSupportsHover) {\n                  setHoveredButton(null);\n                  setCollapseTooltipPosition(null);\n                }\n              }}\n            >\n              <MaterialCommunityIcons \n                name={allCollapsed ? \"chevron-down\" : \"chevron-up\"} \n                size={24} \n                color={theme.colors.text} \n              />\n            </TouchableOpacity> */}\n            \n            <TouchableOpacity\n              ref={buttonRef}\n              style={styles.addServiceButton}\n              onMouseEnter={() => {\n                try {\n                  if (deviceSupportsHover) {\n                    showTooltip(buttonRef, 'Add Service', setTooltipPosition);\n                  }\n                } catch (error) {\n                  console.error('Error showing add tooltip:', error);\n                }\n              }}\n              onMouseLeave={() => {\n                if (deviceSupportsHover) {\n                  setHoveredButton(null);\n                  setTooltipPosition(null);\n                }\n              }}\n              onPress={() => {\n                setEditingService(null);\n                setShowModal(true);\n              }}\n            >\n              <MaterialCommunityIcons \n                name=\"plus\" \n                size={20} \n                color={theme.colors.surface} \n              />\n              <Text style={styles.addServiceText}>Add New Service</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n\n        {(Array.isArray(services) && services.length > 0) ? (\n          <View style={[styles.servicesGrid, { justifyContent: screenWidth > 600 ? '' : 'center' }]}>\n            {services.map((item, index) => (\n              <View key={`service-wrapper-${index}`} style={styles.serviceCardWrapper}>\n                {renderService({ item, index })}\n              </View>\n            ))}\n          </View>\n        ) : (\n          <View style={styles.emptyContainer}>\n            <Text style={styles.emptyText}>No services yet</Text>\n            <TouchableOpacity \n              style={styles.addButton}\n              onPress={() => setShowModal(true)}\n            >\n              <Text style={styles.addButtonText}>Add Services</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n      \n\n      <ServiceCreationModal\n        visible={showModal}\n        onClose={() => {\n          setShowModal(false);\n          setEditingService(null);\n        }}\n        onSave={handleSaveService}\n        initialService={editingService}\n        setHasUnsavedChanges={setHasUnsavedChanges}\n      />\n\n      <ConfirmationModal\n        visible={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        onConfirm={confirmDelete}\n        actionText=\"delete this service\"\n      />\n\n      {tooltipPosition && (\n        <Portal>\n          <View \n            style={[\n              styles.portalTooltip,\n              {\n                position: 'fixed',\n                top: tooltipPosition.y - 40,\n                left: tooltipPosition.x - 35,\n              }\n            ]}\n          >\n            <Text style={styles.tooltipText}>{tooltipPosition.text}</Text>\n          </View>\n        </Portal>\n      )}\n\n      {collapseTooltipPosition && (\n        <Portal>\n          <View \n            style={[\n              styles.portalTooltip,\n              {\n                position: 'fixed',\n                top: collapseTooltipPosition.y - 40,\n                left: collapseTooltipPosition.x - 35,\n              }\n            ]}\n          >\n            <Text style={styles.tooltipText}>{collapseTooltipPosition.text}</Text>\n          </View>\n        </Portal>\n      )}\n      \n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 9998,\n    elevation: 9998,\n    backgroundColor: theme.colors.surface,\n    minHeight: '100%',\n  },\n  serviceListContainer: {\n    paddingVertical: 0,\n  },\n  servicesGrid: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    paddingBottom: 24,\n  },\n  serviceCardWrapper: {\n    flex: 1,\n    minWidth: 300,\n    maxWidth: 375,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 24,\n    position: 'relative',\n    zIndex: 9999,\n    elevation: 9999,\n  },\n  headerActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  collapseButton: {\n    padding: 8,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  addServiceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 10,\n    borderRadius: 50,\n  },\n  addServiceText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 40,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 24,\n    minHeight: 200,\n  },\n  emptyText: {\n    fontSize: theme.fontSizes.mediumLarge,\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  addButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 50,\n  },\n  addButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  portalTooltip: {\n    backgroundColor: theme.colors.surface,\n    padding: 8,\n    borderRadius: 4,\n    width: 70,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  tooltipText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceManager;\n","import React from 'react';\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst RecordedPets = ({ pets }) => {\n  return (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>My Pets</Text>\n      {pets.map((pet) => (\n        <TouchableOpacity key={pet.id} style={styles.petItem}>\n          <View style={styles.petItemContent}>\n            <Image source={{ uri: pet.photo }} style={styles.petPhoto} />\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petDetails}>{pet.type} • {pet.breed} • {pet.age} years old</Text>\n            </View>\n          </View>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 10,\n  },\n  petItem: {\n    marginBottom: 10,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 5,\n    width: '100%',\n    maxWidth: 600,\n  },\n  petItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  petPhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10,\n  },\n  petName: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petDetails: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n    flexWrap: 'wrap',\n  },\n});\n\nexport default RecordedPets;","import React from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst EditableSection = ({ \n  title, \n  value, \n  onChangeText, \n  editMode, \n  toggleEditMode, \n  setHasUnsavedChanges,\n  getContentWidth,\n  multiline = true \n}) => {\n  const renderEditableField = () => {\n    return editMode ? (\n      <TextInput\n        value={value}\n        onChangeText={(text) => {\n          onChangeText(text);\n          setHasUnsavedChanges(true);\n        }}\n        style={[\n          styles.input,\n          { width: getContentWidth() },\n          multiline && { height: 100, textAlignVertical: 'top' }\n        ]}\n        multiline={multiline}\n        numberOfLines={multiline ? 4 : 1}\n      />\n    ) : (\n      <Text style={[styles.fieldText, { width: getContentWidth() }]}>\n        {value || `No ${title.toLowerCase()} provided`}\n      </Text>\n    );\n  };\n\n  return (\n    <View style={styles.section}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>{title}</Text>\n        <TouchableOpacity onPress={toggleEditMode}>\n          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n        </TouchableOpacity>\n      </View>\n      {renderEditableField()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    // marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  input: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 10,\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  fieldText: {\n    width: '100%',\n    maxWidth: 600,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 10,\n  },\n});\n\nexport default EditableSection;","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  TouchableOpacity,\n  ScrollView,\n  StyleSheet,\n  Modal,\n} from 'react-native';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport ServiceManager from './ServiceManager';\nimport { theme } from '../styles/theme';\nimport RecordedPets from './RecordedPets';\nimport EditableSection from './EditableSection';\nimport * as ImagePicker from 'expo-image-picker';\n\nconst ProfessionalTab = ({ \n  services, \n  setServices, \n  setHasUnsavedChanges,\n  getContentWidth,\n  pets,\n  editMode,\n  toggleEditMode\n}) => {\n  const [professionalPhoto, setProfessionalPhoto] = useState(null);\n  const [professionalBio, setProfessionalBio] = useState('');\n  const [portfolioPhotos, setPortfolioPhotos] = useState([]);\n  const [facilities, setFacilities] = useState('');\n  const [skills, setSkills] = useState({\n    certifications: [],\n    experience: '',\n    specialties: [],\n  });\n  const [selectedFacilities, setSelectedFacilities] = useState([]);\n  const [facilitiesModalVisible, setFacilitiesModalVisible] = useState(false);\n  const [tempSelectedFacilities, setTempSelectedFacilities] = useState([]);\n\n  const FACILITY_OPTIONS = [\n    // Living Situation\n    { id: 'apartment', label: 'Lives in an apartment' },\n    { id: 'house', label: 'Lives in a house' },\n    { id: 'fenced_yard', label: 'Has a fenced yard' },\n    \n    // Household Environment\n    { id: 'non_smoking', label: 'Non-smoking household' },\n    { id: 'no_children', label: 'No children present' },\n    { id: 'has_children', label: 'Children present' },\n    { id: 'security_system', label: 'Has security system' },\n    \n    // Pet Policies\n    { id: 'dogs_bed', label: 'Dogs allowed on bed' },\n    { id: 'dogs_furniture', label: 'Dogs allowed on furniture' },\n    { id: 'crate_available', label: 'Crate available' },\n    { id: 'separate_areas', label: 'Can separate pets' },\n    \n    // Care Details\n    { id: 'potty_0_2', label: 'Potty breaks every 0-2 hours' },\n    { id: 'potty_2_4', label: 'Potty breaks every 2-4 hours' },\n    { id: 'potty_4_6', label: 'Potty breaks every 4-6 hours' },\n    \n    // Resident Pets\n    { id: 'no_pets', label: 'No resident pets' },\n    { id: 'has_dogs', label: 'Has resident dogs' },\n    { id: 'has_cats', label: 'Has resident cats' },\n    \n    // Additional Features\n    { id: 'air_conditioned', label: 'Air-conditioned' },\n    { id: 'outdoor_area', label: 'Has outdoor play area' },\n    { id: 'emergency_transport', label: 'Emergency transport available' },\n  ];\n\n  const pickProfessionalPhoto = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [1, 1],\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setProfessionalPhoto(result.assets[0].uri);\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  const addPortfolioPhoto = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: false,\n      quality: 1,\n      aspect: [4, 3],\n      allowsMultipleSelection: true,\n      selectionLimit: 10,\n    });\n\n    if (!result.canceled) {\n      const newPhotos = result.assets.map(asset => ({\n        id: Date.now().toString() + Math.random().toString(36).substr(2, 9),\n        uri: asset.uri,\n        caption: 'New portfolio photo'\n      }));\n      \n      setPortfolioPhotos(prev => [...prev, ...newPhotos]);\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  const renderEditableField = (label, value, onChangeText, section, multiline = false) => {\n    return editMode[section] ? (\n      <TextInput\n        value={value}\n        onChangeText={(text) => {\n          onChangeText(text);\n          setHasUnsavedChanges(true);\n        }}\n        style={[\n          styles.input,\n          { width: getContentWidth() },\n          multiline && { height: 100, textAlignVertical: 'top' }\n        ]}\n        multiline={multiline}\n        numberOfLines={multiline ? 4 : 1}\n      />\n    ) : (\n      <Text style={[styles.fieldText, { width: getContentWidth() }]}>\n        {value || `No ${label.toLowerCase()} provided`}\n      </Text>\n    );\n  };\n\n  const toggleFacility = (facilityId) => {\n    setSelectedFacilities(prev => {\n      if (prev.includes(facilityId)) {\n        return prev.filter(id => id !== facilityId);\n      } else {\n        return [...prev, facilityId];\n      }\n    });\n    setHasUnsavedChanges(true);\n  };\n\n  const openFacilitiesModal = () => {\n    setTempSelectedFacilities([...selectedFacilities]);\n    setFacilitiesModalVisible(true);\n  };\n\n  const saveFacilities = () => {\n    setSelectedFacilities(tempSelectedFacilities);\n    setFacilitiesModalVisible(false);\n    setHasUnsavedChanges(true);\n  };\n\n  const toggleTempFacility = (facilityId) => {\n    setTempSelectedFacilities(prev => {\n      if (prev.includes(facilityId)) {\n        return prev.filter(id => id !== facilityId);\n      } else {\n        return [...prev, facilityId];\n      }\n    });\n  };\n\n  return (\n    <View style={styles.centeredContent}>\n      {/* Professional Photo Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Profile Photo (Professional)</Text>\n        </View>\n        <View style={styles.profileHeader}>\n          <TouchableOpacity onPress={pickProfessionalPhoto}>\n            {professionalPhoto ? (\n              <Image source={{ uri: professionalPhoto }} style={styles.profilePhoto} />\n            ) : (\n              <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n                <Ionicons name=\"person\" size={60} color={theme.colors.placeholder} />\n              </View>\n            )}\n          </TouchableOpacity>\n        </View>\n      </View>\n\n      {/* Professional Bio Section */}\n      <EditableSection\n        title=\"Professional Bio\"\n        value={professionalBio}\n        onChangeText={setProfessionalBio}\n        editMode={editMode.professionalBio}\n        toggleEditMode={() => toggleEditMode('professionalBio')}\n        setHasUnsavedChanges={setHasUnsavedChanges}\n        getContentWidth={getContentWidth}\n      />\n\n      {/* Services Section */}\n      <View style={styles.section}>\n        <ServiceManager\n          services={services || []}\n          setServices={setServices}\n          setHasUnsavedChanges={setHasUnsavedChanges}\n          isProfessionalTab={true}\n        />\n      </View>\n\n      {/* Portfolio Photos Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Portfolio Photos</Text>\n          <TouchableOpacity onPress={addPortfolioPhoto}>\n            <MaterialCommunityIcons \n              name=\"plus\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.portfolioGrid}>\n          {portfolioPhotos.map((photo) => (\n            <TouchableOpacity \n              key={photo.id} \n              style={styles.portfolioCard}\n              onPress={() => {\n                // Handle photo edit/view\n                // Could add modal to edit caption or view full size\n              }}\n            >\n              <View style={styles.portfolioImageContainer}>\n                <Image \n                  source={{ uri: photo.uri }} \n                  style={styles.portfolioPhoto} \n                />\n              </View>\n              <Text style={styles.portfolioCaption}>{photo.caption}</Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n        {portfolioPhotos.length === 0 && (\n          <Text style={styles.emptyText}>\n            No portfolio photos added yet\n          </Text>\n        )}\n      </View>\n        \n      { /* My Pets Section (Read-Only) */}\n      <RecordedPets pets={pets} />\n\n      {/* Home & Facilities Section */}\n      <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Home & Facilities</Text>\n          <TouchableOpacity onPress={openFacilitiesModal}>\n            <MaterialCommunityIcons \n              name=\"pencil\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.facilitiesContainer}>\n          {selectedFacilities.map((facilityId) => {\n            const facility = FACILITY_OPTIONS.find(f => f.id === facilityId);\n            return (\n              <View key={facilityId} style={styles.facilityTag}>\n                <Text style={styles.facilityTagText}>{facility.label}</Text>\n              </View>\n            );\n          })}\n          {selectedFacilities.length === 0 && (\n            <Text style={styles.emptyText}>No facilities selected</Text>\n          )}\n        </View>\n\n        {/* Facilities Selection Modal */}\n        <Modal\n          visible={facilitiesModalVisible}\n          transparent={true}\n          animationType=\"slide\"\n          onRequestClose={() => setFacilitiesModalVisible(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Select Home & Facilities</Text>\n                <TouchableOpacity onPress={() => setFacilitiesModalVisible(false)}>\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              \n              <ScrollView style={styles.modalScroll}>\n                {FACILITY_OPTIONS.map((facility) => (\n                  <TouchableOpacity\n                    key={facility.id}\n                    style={[\n                      styles.modalFacilityTag,\n                      tempSelectedFacilities.includes(facility.id) && styles.facilityTagSelected\n                    ]}\n                    onPress={() => toggleTempFacility(facility.id)}\n                  >\n                    <Text style={[\n                      styles.modalFacilityText,\n                      tempSelectedFacilities.includes(facility.id) && styles.facilityTagTextSelected\n                    ]}>\n                      {facility.label}\n                    </Text>\n                  </TouchableOpacity>\n                ))}\n              </ScrollView>\n\n              <View style={styles.modalFooter}>\n                <TouchableOpacity \n                  style={[styles.modalButton, styles.cancelButton]}\n                  onPress={() => setFacilitiesModalVisible(false)}\n                >\n                  <Text style={styles.modalButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={[styles.modalButton, styles.saveButton]}\n                  onPress={saveFacilities}\n                >\n                  <Text style={styles.modalButtonText2}>Save</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n\n      {/* Skills & Experience Section */}\n      {/* <View style={styles.section}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Skills & Experience</Text>\n          <TouchableOpacity onPress={() => toggleEditMode('skills')}>\n            <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        {renderEditableField('Experience', skills.experience, \n          (text) => setSkills(prev => ({ ...prev, experience: text })), \n          'skills', \n          true\n        )}\n      </View> */}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centeredContent: {\n    width: '100%',\n    maxWidth: 600,\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  section: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 20,\n    paddingVertical: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.large,\n    marginBottom: 10,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  profileHeader: {\n    alignItems: 'center',\n    marginBottom: 20,\n    width: '100%',\n    maxWidth: 600,\n  },\n  profilePhoto: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n  },\n  profilePhotoPlaceholder: {\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  input: {\n    width: '100%',\n    maxWidth: 600,\n    marginBottom: 10,\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n  },\n  fieldText: {\n    width: '100%',\n    maxWidth: 600,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 10,\n  },\n  portfolioGrid: {\n    width: '100%',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    gap: 16,\n  },\n  portfolioCard: {\n    width: '48%',\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    overflow: 'hidden',\n    elevation: 2,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.23,\n    shadowRadius: 2.62,\n  },\n  portfolioImageContainer: {\n    aspectRatio: 4/3,\n    width: '100%',\n  },\n  portfolioPhoto: {\n    width: '100%',\n    height: '100%',\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8,\n  },\n  portfolioCaption: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    padding: 8,\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: theme.colors.placeholder,\n    marginTop: 16,\n  },\n  facilitiesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    paddingHorizontal: 4,\n  },\n  facilityTag: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 20,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    marginBottom: 8,\n  },\n  facilityTagSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  facilityTagText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.small,\n  },\n  facilityTagTextSelected: {\n    color: theme.colors.surface,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    width: '90%',\n    maxWidth: 500,\n    backgroundColor: theme.colors.background,\n    borderRadius: 10,\n    padding: 20,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n  },\n  modalScroll: {\n    maxHeight: '70%',\n  },\n  modalFacilityTag: {\n    padding: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    marginBottom: 8,\n  },\n  modalFacilityText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.primary,\n  },\n  modalFooter: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n  },\n  modalButton: {\n    padding: 12,\n    borderRadius: 8,\n    width: '48%',\n    alignItems: 'center',\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  modalButtonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  modalButtonText2: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ProfessionalTab;","import React, { useState } from 'react';\nimport { Platform, TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\n\n// Called in DefaultSettingsModal.js\n// Called in MyProfile.js\n\nconst DatePicker = ({ \n  value, \n  onChange, \n  placeholder = 'Select Date',\n  displayFormat = (date) => date, // Optional custom display format\n  disabled = false,\n  isInModal = false // New prop to handle modal context differently\n}) => {\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const dateValue = value ? new Date(value) : new Date();\n\n  const handleChange = (event, selectedDate) => {\n    const currentDate = selectedDate || dateValue;\n    \n    // Only close picker on Android after selection\n    if (Platform.OS === 'android') {\n      setShowDatePicker(false);\n    }\n    \n    if (selectedDate) {\n      onChange(currentDate.toISOString().split('T')[0]);\n    }\n  };\n\n  if (Platform.OS === 'web') {\n    const handleWrapperEvents = (e) => {\n      if (isInModal) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    };\n\n    const handleInputChange = (e) => {\n      if (!disabled) {\n        onChange(e.target.value);\n      }\n    };\n\n    return (\n      <div \n        onClick={handleWrapperEvents}\n        onMouseDown={handleWrapperEvents}\n      >\n        <input\n          type=\"date\"\n          value={value || ''}\n          onChange={handleInputChange}\n          style={{\n            ...styles.webDatePicker,\n            ...(disabled ? styles.disabledInput : {}),\n            cursor: disabled ? 'default' : 'pointer'\n          }}\n          placeholder={placeholder}\n          disabled={disabled}\n        />\n      </div>\n    );\n  } else if (Platform.OS === 'ios') {\n    return (\n      <DateTimePicker\n        value={dateValue}\n        mode=\"date\"\n        display=\"default\"\n        onChange={handleChange}\n        disabled={disabled}\n      />\n    );\n  } else {\n    return (\n      <>\n        <TouchableOpacity \n          onPress={() => !disabled && setShowDatePicker(true)}\n          style={[\n            styles.androidButton,\n            disabled && styles.disabledInput\n          ]}\n          disabled={disabled}\n        >\n          <Text style={[\n            styles.dateText,\n            disabled && styles.disabledText\n          ]}>\n            {value ? displayFormat(value) : placeholder}\n          </Text>\n        </TouchableOpacity>\n        {Platform.OS === 'android' && showDatePicker && (\n          <DateTimePicker\n            value={dateValue}\n            mode=\"date\"\n            display=\"default\"\n            onChange={handleChange}\n            disabled={disabled}\n          />\n        )}\n      </>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  webDatePicker: {\n    padding: 8,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    backgroundColor: theme.colors.background,\n  },\n  androidButton: {\n    padding: 8,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  disabledInput: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  disabledText: {\n    color: theme.colors.placeholder,\n  }\n});\n\nexport default DatePicker;","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\n\nconst BackHeader = ({ \n  title, \n  onBackPress, \n  rightIcon = null, // Optional right icon\n  onRightPress = null, // Optional right icon press handler\n  rightComponent = null, // Add this prop\n  customStyles = {} \n}) => {\n  const navigation = useNavigation();\n\n  return (\n    <View style={[styles.header, customStyles]}>\n      <TouchableOpacity onPress={onBackPress} style={styles.backButton}>\n        <MaterialCommunityIcons \n          name=\"arrow-left\" \n          size={24} \n          color={theme.colors.primary} \n        />\n      </TouchableOpacity>\n      \n      <Text style={styles.headerText}>{title}</Text>\n      \n      {rightComponent ? rightComponent : (\n        rightIcon && (\n          <TouchableOpacity \n            onPress={onRightPress} \n            style={styles.rightButton}\n          >\n            <MaterialCommunityIcons \n              name={rightIcon} \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        )\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    zIndex: 100,\n    elevation: 100,\n  },\n  backButton: {\n    marginRight: 16,\n  },\n  headerText: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    flex: 1, // This allows the title to take up remaining space\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  rightButton: {\n    marginLeft: 16,\n  },\n});\n\nexport default BackHeader;","import React, { useState, useEffect } from 'react';\nimport { View, SafeAreaView, Platform, StatusBar, StyleSheet, Dimensions } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst CrossPlatformView = ({ \n  children, \n  style,\n  useSafeArea = true,\n  backgroundColor = theme.colors.background,\n  fullWidthHeader = false,\n  contentWidth = '800px'\n}) => {\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\n\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const updateDimensions = () => {\n        setWindowWidth(Dimensions.get('window').width);\n      };\n\n      window.addEventListener('resize', updateDimensions);\n      return () => {\n        window.removeEventListener('resize', updateDimensions);\n      };\n    }\n  }, []);\n\n  // For web platform\n  if (Platform.OS === 'web') {\n    // Split children into header and content if fullWidthHeader is true\n    const childrenArray = React.Children.toArray(children);\n    const headerContent = fullWidthHeader && childrenArray.length > 0 ? childrenArray[0] : null;\n    const mainContent = fullWidthHeader && childrenArray.length > 1 ? childrenArray.slice(1) : children;\n\n    return (\n      <div style={{ \n        backgroundColor,\n        width: '100%',\n        maxWidth: '100%',\n        minHeight: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        ...style,\n      }}>\n        {fullWidthHeader && headerContent && (\n          <div style={{ \n            width: '100%', \n            backgroundColor,\n          }}>\n            {headerContent}\n          </div>\n        )}\n        <div style={{\n          ...styles.webContainer,\n          maxWidth: contentWidth,\n          width: '100%',\n          flex: 1,\n          overflow: 'hidden',\n        }}>\n          {mainContent}\n        </div>\n      </div>\n    );\n  }\n\n  // For iOS\n  if (Platform.OS === 'ios' && useSafeArea) {\n    return (\n      <SafeAreaView style={[styles.container, { backgroundColor }, style]}>\n        {children}\n      </SafeAreaView>\n    );\n  }\n\n  // For Android or when SafeAreaView is disabled\n  return (\n    <View style={[\n      styles.container,\n      { \n        paddingTop: useSafeArea ? StatusBar.currentHeight : 0,\n        backgroundColor \n      },\n      style\n    ]}>\n      {children}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    width: '100%',\n    maxWidth: '100%',\n    overflow: 'hidden',\n  },\n  webContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '85vh',\n    width: '100%',\n    maxWidth: '100%',\n    overflow: 'hidden',\n  },\n});\n\nexport default CrossPlatformView;","import { debugLog } from '../context/AuthContext';\n\n// Colorado bounds for validation\nconst COLORADO_BOUNDS = {\n  north: 41.0,\n  south: 37.0,\n  east: -102.0,\n  west: -109.0\n};\n\nclass GeocodingQueue {\n  constructor() {\n    this.queue = [];\n    this.processing = false;\n    this.lastRequest = 0;\n    this.minInterval = 1100; // 1.1 seconds to be safe with Nominatim rate limit\n  }\n\n  async geocode(address) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({ address, resolve, reject });\n      this.processQueue();\n    });\n  }\n\n  async processQueue() {\n    if (this.processing || this.queue.length === 0) {\n      return;\n    }\n\n    this.processing = true;\n\n    while (this.queue.length > 0) {\n      const { address, resolve, reject } = this.queue.shift();\n      \n      try {\n        // Ensure we don't exceed rate limit\n        const now = Date.now();\n        const timeSinceLastRequest = now - this.lastRequest;\n        \n        if (timeSinceLastRequest < this.minInterval) {\n          const waitTime = this.minInterval - timeSinceLastRequest;\n          debugLog('MBA7890', `Rate limiting: waiting ${waitTime}ms before next geocoding request`);\n          await new Promise(resolve => setTimeout(resolve, waitTime));\n        }\n\n        this.lastRequest = Date.now();\n        const result = await this.performGeocode(address);\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    }\n\n    this.processing = false;\n  }\n\n  async performGeocode(address) {\n    const { street, apartment, city, state, zip } = address;\n    \n    // Build the address string\n    let addressString = street;\n    if (apartment) {\n      addressString += ` ${apartment}`;\n    }\n    addressString += `, ${city}, ${state}`;\n    if (zip) {\n      addressString += ` ${zip}`;\n    }\n    addressString += ', USA';\n\n    debugLog('MBA7890', 'Geocoding address:', addressString);\n\n    const url = 'https://nominatim.openstreetmap.org/search';\n    const params = new URLSearchParams({\n      q: addressString,\n      format: 'json',\n      limit: '1',\n      countrycodes: 'us',\n      addressdetails: '1'\n    });\n\n    const response = await fetch(`${url}?${params}`, {\n      headers: {\n        'User-Agent': 'CrittrCove/1.0 (contact@crittrcove.com)' // Required by Nominatim\n      }\n    });\n\n    if (response.status === 429) {\n      throw new Error('RATE_LIMITED');\n    }\n\n    if (!response.ok) {\n      throw new Error(`Geocoding failed: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (!data || data.length === 0) {\n      throw new Error('No results found');\n    }\n\n    const result = data[0];\n    const lat = parseFloat(result.lat);\n    const lng = parseFloat(result.lon);\n\n    // Validate coordinates are within Colorado\n    if (!this.isInColorado(lat, lng)) {\n      debugLog('MBA7890', 'Address is outside Colorado bounds:', { lat, lng, address: addressString });\n      throw new Error('Address must be within Colorado');\n    }\n\n    debugLog('MBA7890', 'Geocoding successful:', { lat, lng, address: addressString });\n    \n    return {\n      latitude: lat,\n      longitude: lng,\n      formatted_address: result.display_name\n    };\n  }\n\n  isInColorado(lat, lng) {\n    return lat >= COLORADO_BOUNDS.south && \n           lat <= COLORADO_BOUNDS.north && \n           lng >= COLORADO_BOUNDS.west && \n           lng <= COLORADO_BOUNDS.east;\n  }\n}\n\n// Create a singleton instance\nconst geocodingQueue = new GeocodingQueue();\n\n/**\n * Geocode an address with retry logic and rate limiting\n * @param {Object} address - Address object with street, city, state, zip\n * @param {number} maxRetries - Maximum number of retry attempts\n * @returns {Promise<Object>} - Coordinates object with latitude/longitude\n */\nexport const geocodeAddress = async (address, maxRetries = 3) => {\n  for (let attempt = 1; attempt <= maxRetries; attempt++) {\n    try {\n      const result = await geocodingQueue.geocode(address);\n      return result;\n    } catch (error) {\n      debugLog('MBA7890', `Geocoding attempt ${attempt} failed:`, error.message);\n      \n      if (error.message === 'RATE_LIMITED' && attempt < maxRetries) {\n        // Exponential backoff for rate limiting\n        const waitTime = Math.pow(2, attempt) * 1000;\n        debugLog('MBA7890', `Rate limited, waiting ${waitTime}ms before retry`);\n        await new Promise(resolve => setTimeout(resolve, waitTime));\n        continue;\n      }\n      \n      if (attempt === maxRetries) {\n        throw error;\n      }\n    }\n  }\n};\n\n/**\n * Geocode an address with graceful fallback\n * Returns coordinates if successful, null if failed (but doesn't throw)\n * @param {Object} address - Address object\n * @returns {Promise<Object|null>} - Coordinates or null\n */\nexport const geocodeAddressGraceful = async (address) => {\n  try {\n    return await geocodeAddress(address);\n  } catch (error) {\n    debugLog('MBA7890', 'Geocoding failed gracefully:', error.message);\n    return null;\n  }\n};\n\n/**\n * Validate if coordinates are within Colorado bounds\n * @param {number} lat - Latitude\n * @param {number} lng - Longitude\n * @returns {boolean} - True if within Colorado\n */\nexport const isInColorado = (lat, lng) => {\n  return lat >= COLORADO_BOUNDS.south && \n         lat <= COLORADO_BOUNDS.north && \n         lng >= COLORADO_BOUNDS.west && \n         lng <= COLORADO_BOUNDS.east;\n}; ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, TextInput, TouchableOpacity, Text, StyleSheet, FlatList, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { debugLog } from '../context/AuthContext';\n\n// Colorado bounds for validation\nconst COLORADO_BOUNDS = {\n  north: 41.0,\n  south: 37.0,\n  east: -102.0,\n  west: -109.0\n};\n\nclass AddressSearchQueue {\n  constructor() {\n    this.queue = [];\n    this.processing = false;\n    this.lastRequest = 0;\n    this.minInterval = 1100; // 1.1 seconds for Nominatim rate limit\n  }\n\n  async search(query) {\n    return new Promise((resolve, reject) => {\n      this.queue.push({ query, resolve, reject });\n      this.processQueue();\n    });\n  }\n\n  async processQueue() {\n    if (this.processing || this.queue.length === 0) {\n      return;\n    }\n\n    this.processing = true;\n\n    while (this.queue.length > 0) {\n      const { query, resolve, reject } = this.queue.shift();\n      \n      try {\n        // Ensure we don't exceed rate limit\n        const now = Date.now();\n        const timeSinceLastRequest = now - this.lastRequest;\n        \n        if (timeSinceLastRequest < this.minInterval) {\n          const waitTime = this.minInterval - timeSinceLastRequest;\n          await new Promise(resolve => setTimeout(resolve, waitTime));\n        }\n\n        this.lastRequest = Date.now();\n        const result = await this.performSearch(query);\n        resolve(result);\n      } catch (error) {\n        reject(error);\n      }\n    }\n\n    this.processing = false;\n  }\n\n  async performSearch(query) {\n    debugLog('MBA8901', 'Searching addresses for:', query);\n\n    const url = 'https://nominatim.openstreetmap.org/search';\n    const params = new URLSearchParams({\n      q: `${query}, Colorado, USA`,\n      format: 'json',\n      limit: '5',\n      countrycodes: 'us',\n      addressdetails: '1',\n      bounded: '1',\n      viewbox: `${COLORADO_BOUNDS.west},${COLORADO_BOUNDS.south},${COLORADO_BOUNDS.east},${COLORADO_BOUNDS.north}`\n    });\n\n    const response = await fetch(`${url}?${params}`, {\n      headers: {\n        'User-Agent': 'CrittrCove/1.0 (contact@crittrcove.com)'\n      }\n    });\n\n    if (response.status === 429) {\n      throw new Error('RATE_LIMITED');\n    }\n\n    if (!response.ok) {\n      throw new Error(`Search failed: ${response.status}`);\n    }\n\n    const data = await response.json();\n    \n    if (!data || data.length === 0) {\n      return [];\n    }\n\n    // Filter and format results\n    return data\n      .filter(result => {\n        const lat = parseFloat(result.lat);\n        const lng = parseFloat(result.lon);\n        return this.isInColorado(lat, lng);\n      })\n      .map(result => ({\n        id: result.place_id,\n        formatted_address: result.display_name,\n        components: {\n          street: result.address?.house_number && result.address?.road \n            ? `${result.address.house_number} ${result.address.road}`\n            : result.address?.road || '',\n          apartment: '',\n          city: result.address?.city || result.address?.town || result.address?.village || '',\n          state: result.address?.state || 'Colorado',\n          zip: result.address?.postcode || ''\n        },\n        coordinates: {\n          latitude: parseFloat(result.lat),\n          longitude: parseFloat(result.lon),\n          formatted_address: result.display_name\n        }\n      }));\n  }\n\n  isInColorado(lat, lng) {\n    return lat >= COLORADO_BOUNDS.south && \n           lat <= COLORADO_BOUNDS.north && \n           lng >= COLORADO_BOUNDS.west && \n           lng <= COLORADO_BOUNDS.east;\n  }\n}\n\n// Create singleton instance\nconst searchQueue = new AddressSearchQueue();\n\nconst AddressAutocomplete = ({ \n  value = '', \n  onAddressSelect, \n  placeholder = \"Enter your address...\",\n  style = {},\n  disabled = false \n}) => {\n  const [inputValue, setInputValue] = useState(value);\n  const [suggestions, setSuggestions] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const searchTimeoutRef = useRef(null);\n\n  // Update input value when prop changes\n  useEffect(() => {\n    setInputValue(value);\n  }, [value]);\n\n  // Debounced search function\n  const searchAddresses = async (query) => {\n    if (query.length < 3) {\n      setSuggestions([]);\n      setShowSuggestions(false);\n      return;\n    }\n\n    setIsLoading(true);\n    \n    try {\n      const results = await searchQueue.search(query);\n      setSuggestions(results);\n      setShowSuggestions(results.length > 0);\n      debugLog('MBA8901', `Found ${results.length} address suggestions`);\n    } catch (error) {\n      debugLog('MBA8901', 'Address search failed:', error.message);\n      setSuggestions([]);\n      setShowSuggestions(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle input change with debouncing\n  const handleInputChange = (text) => {\n    setInputValue(text);\n    setSelectedAddress(null);\n\n    // Clear previous timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout for search\n    searchTimeoutRef.current = setTimeout(() => {\n      searchAddresses(text);\n    }, 500); // 500ms debounce\n  };\n\n  // Handle address selection\n  const handleAddressSelect = (address) => {\n    setInputValue(address.formatted_address);\n    setSelectedAddress(address);\n    setShowSuggestions(false);\n    setSuggestions([]);\n\n    // Notify parent component\n    if (onAddressSelect) {\n      onAddressSelect(address);\n    }\n\n    debugLog('MBA8901', 'Address selected:', address);\n  };\n\n  // Clear suggestions when input loses focus\n  const handleBlur = () => {\n    // Delay hiding suggestions to allow for selection\n    setTimeout(() => {\n      setShowSuggestions(false);\n    }, 200);\n  };\n\n  // Render suggestion item\n  const renderSuggestion = ({ item, index }) => (\n    <TouchableOpacity\n      style={[\n        styles.suggestionItem,\n        index === suggestions.length - 1 && styles.lastSuggestionItem\n      ]}\n      onPress={() => handleAddressSelect(item)}\n      activeOpacity={0.7}\n    >\n      <MaterialCommunityIcons \n        name=\"map-marker\" \n        size={20} \n        color={theme.colors.primary} \n        style={styles.suggestionIcon}\n      />\n      <View style={styles.suggestionContent}>\n        <Text style={styles.suggestionText} numberOfLines={2}>\n          {item.formatted_address}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={[styles.container, style]}>\n      <View style={styles.inputContainer}>\n        <TextInput\n          style={[\n            styles.input,\n            selectedAddress && styles.inputValid,\n            disabled && styles.inputDisabled\n          ]}\n          value={inputValue}\n          onChangeText={handleInputChange}\n          onBlur={handleBlur}\n          placeholder={placeholder}\n          placeholderTextColor={theme.colors.placeholder}\n          editable={!disabled}\n        />\n        \n        {isLoading && (\n          <ActivityIndicator \n            size=\"small\" \n            color={theme.colors.primary} \n            style={styles.loadingIndicator}\n          />\n        )}\n        \n        {selectedAddress && (\n          <MaterialCommunityIcons \n            name=\"check-circle\" \n            size={20} \n            color={theme.colors.success} \n            style={styles.validIcon}\n          />\n        )}\n      </View>\n\n      {showSuggestions && suggestions.length > 0 && (\n        <View style={styles.suggestionsContainer}>\n          <FlatList\n            data={suggestions}\n            renderItem={renderSuggestion}\n            keyExtractor={(item) => item.id.toString()}\n            style={styles.suggestionsList}\n            keyboardShouldPersistTaps=\"handled\"\n            showsVerticalScrollIndicator={false}\n          />\n        </View>\n      )}\n\n      {inputValue.length >= 3 && !isLoading && suggestions.length === 0 && showSuggestions && (\n        <View style={styles.noResultsContainer}>\n          <Text style={styles.noResultsText}>\n            No addresses found. Please check your spelling or try a different address.\n          </Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n    zIndex: 1000, // High enough to appear above modal buttons (which are at -1)\n  },\n  inputContainer: {\n    position: 'relative',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    minHeight: 44,\n  },\n  inputValid: {\n    borderColor: theme.colors.success,\n    backgroundColor: theme.colors.success + '10',\n  },\n  inputDisabled: {\n    backgroundColor: theme.colors.surface,\n    color: theme.colors.placeholder,\n  },\n  loadingIndicator: {\n    position: 'absolute',\n    right: 12,\n  },\n  validIcon: {\n    position: 'absolute',\n    right: 12,\n  },\n  suggestionsContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderTopWidth: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    maxHeight: 200,\n    zIndex: 1001, // Higher than container, much higher than modal buttons (-1)\n    elevation: 10, // Reasonable elevation for Android\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 6,\n  },\n  suggestionsList: {\n    maxHeight: 200,\n  },\n  suggestionItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    minHeight: 56,\n  },\n  lastSuggestionItem: {\n    borderBottomWidth: 0,\n  },\n  suggestionIcon: {\n    marginRight: 12,\n  },\n  suggestionContent: {\n    flex: 1,\n  },\n  suggestionText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    lineHeight: 20,\n  },\n  noResultsContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderTopWidth: 0,\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    padding: 16,\n    zIndex: 1001, // Same z-index as suggestions\n  },\n  noResultsText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    textAlign: 'center',\n    fontStyle: 'italic',\n  },\n});\n\nexport default AddressAutocomplete; ","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  View,\n  Modal,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  Text,\n  Animated,\n  PanResponder,\n  Dimensions,\n  Platform,\n  ActivityIndicator,\n  SafeAreaView,\n  TouchableWithoutFeedback\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\nimport Slider from '@react-native-community/slider';\n\nconst { width: SCREEN_WIDTH } = Dimensions.get('window');\nconst CONTAINER_SIZE = Math.min(SCREEN_WIDTH * 0.9, 400);\nconst CIRCLE_SIZE = CONTAINER_SIZE * 0.8;\n\nconst ProfilePhotoCropper = ({ \n  visible, \n  imageUri, \n  onClose, \n  onSave,\n  isUploading = false\n}) => {\n  // State for image manipulation\n  const [scale, setScale] = useState(1);\n  const [imageSize, setImageSize] = useState({ width: 0, height: 0 });\n  const [imagePosition, setImagePosition] = useState({ x: 0, y: 0 });\n  const [imageLoaded, setImageLoaded] = useState(false);\n  \n  // Reference to track the initial scale\n  const initialScaleRef = useRef(1);\n  \n  // Animation values\n  const pan = useRef(new Animated.ValueXY()).current;\n\n  // Disable scrolling in parent when modal is open (for web)\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      const disableScroll = (e) => {\n        // Prevent scrolling when the modal is open\n        if (visible) {\n          e.preventDefault();\n        }\n      };\n      \n      // Add event listeners to prevent scrolling\n      document.addEventListener('touchmove', disableScroll, { passive: false });\n      document.addEventListener('wheel', disableScroll, { passive: false });\n      \n      // Also set overflow hidden on body\n      if (visible) {\n        document.body.style.overflow = 'hidden';\n      }\n      \n      return () => {\n        // Clean up\n        document.removeEventListener('touchmove', disableScroll);\n        document.removeEventListener('wheel', disableScroll);\n        document.body.style.overflow = '';\n      };\n    }\n  }, [visible]);\n  \n  // Reset values when the modal becomes visible or the image changes\n  useEffect(() => {\n    if (visible && imageUri) {\n      // Reset loading state\n      setImageLoaded(false);\n      \n      // Get image dimensions\n      Image.getSize(imageUri, (width, height) => {\n        debugLog('MBA23o9h8v45', 'Image dimensions:', { width, height });\n        setImageSize({ width, height });\n        \n        // Calculate the initial scale to fit the image within the crop circle\n        const initialScale = calculateInitialScale(width, height);\n        setScale(initialScale);\n        initialScaleRef.current = initialScale; // Store initial scale for reference\n        \n        // Center the image initially\n        pan.setValue({ x: 0, y: 0 });\n        setImagePosition({ x: 0, y: 0 });\n        \n        // Mark image as loaded\n        setImageLoaded(true);\n      }, error => {\n        debugLog('MBA23o9h8v45', 'Error getting image dimensions:', error);\n      });\n    }\n  }, [visible, imageUri]);\n  \n  // Calculate initial scale to fit image in crop circle\n  const calculateInitialScale = (width, height) => {\n    if (width === 0 || height === 0) return 1;\n    \n    const imageRatio = width / height;\n    const circleRatio = 1; // Circle is 1:1 aspect ratio\n    \n    // Calculate scale based on which dimension needs to fit\n    if (imageRatio > circleRatio) {\n      // Image is wider than tall, scale based on height\n      return CIRCLE_SIZE / height * 1.1; // Scale up slightly to fill circle\n    } else {\n      // Image is taller than wide, scale based on width\n      return CIRCLE_SIZE / width * 1.1; // Scale up slightly to fill circle\n    }\n  };\n  \n  // Create pan responder for dragging the image\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: (_, gestureState) => {\n        // Only respond to deliberate movements\n        return Math.abs(gestureState.dx) > 2 || Math.abs(gestureState.dy) > 2;\n      },\n      onPanResponderGrant: () => {\n        debugLog('MBA23o9h8v45', 'Pan responder activated');\n        pan.setOffset({\n          x: pan.x._value,\n          y: pan.y._value\n        });\n        pan.setValue({ x: 0, y: 0 });\n      },\n      onPanResponderMove: (_, gestureState) => {\n        pan.x.setValue(gestureState.dx);\n        pan.y.setValue(gestureState.dy);\n      },\n      onPanResponderRelease: () => {\n        debugLog('MBA23o9h8v45', 'Pan responder released');\n        pan.flattenOffset();\n        \n        // Update the image position state after pan ends\n        setImagePosition({\n          x: pan.x._value,\n          y: pan.y._value\n        });\n      },\n      // Don't let other components steal the gesture\n      onPanResponderTerminationRequest: () => false,\n    })\n  ).current;\n  \n  // Simple direct scale change function - keeps position stable\n  const handleScaleChange = (newScale) => {\n    // If returning to initial scale, reset position\n    if (Math.abs(newScale - initialScaleRef.current) < 0.01) {\n      // Reset position to center\n      pan.setValue({ x: 0, y: 0 });\n      setImagePosition({ x: 0, y: 0 });\n    }\n    \n    // Update scale\n    setScale(newScale);\n  };\n  \n  // Handle save button press\n  const handleSave = () => {\n    // Calculate crop parameters to pass to the parent component\n    const cropParams = {\n      scale,\n      x: -pan.x._value,\n      y: -pan.y._value,\n      imageWidth: imageSize.width,\n      imageHeight: imageSize.height,\n      cropWidth: CIRCLE_SIZE,\n      cropHeight: CIRCLE_SIZE\n    };\n    \n    debugLog('MBA23o9h8v45', 'Saving cropped image with params:', cropParams);\n    onSave(imageUri, cropParams);\n  };\n  \n  // Calculate transform styles for the image\n  const imageTransform = {\n    transform: [\n      { translateX: pan.x },\n      { translateY: pan.y },\n      { scale: scale }\n    ]\n  };\n  \n  // Calculate the min and max zoom values\n  const minZoom = initialScaleRef.current || 1;\n  const maxZoom = (initialScaleRef.current || 1) * 3;\n  \n  if (!visible) return null;\n  \n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n      statusBarTranslucent={true}\n      presentationStyle=\"overFullScreen\"\n    >\n      <TouchableWithoutFeedback>\n        <View style={styles.modalContainer}>\n          <View style={styles.contentContainer}>\n            {/* Header */}\n            <View style={styles.header}>\n              <Text style={styles.title}>Adjust Profile Photo</Text>\n              <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            {/* Main crop area container - this defines the visible area */}\n            <View style={styles.cropAreaOuterContainer}>\n              <View style={styles.cropAreaContainer}>\n                {/* This is where we clip/mask the image to only show within this container */}\n                <View style={styles.imageViewport}>\n                  {/* This is the actual photo that will be cropped */}\n                  <Animated.View\n                    style={[styles.imageContainer, imageTransform]}\n                    {...panResponder.panHandlers}\n                  >\n                    {imageUri && imageLoaded ? (\n                      <Image\n                        source={{ uri: imageUri }}\n                        style={[\n                          styles.image,\n                          {\n                            width: imageSize.width,\n                            height: imageSize.height,\n                          }\n                        ]}\n                        resizeMode=\"contain\"\n                        onLoad={() => {\n                          debugLog('MBA23o9h8v45', 'Image loaded in cropper component');\n                        }}\n                      />\n                    ) : (\n                      <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                    )}\n                  </Animated.View>\n                  \n                  {/* Semi-transparent overlay with hole for the crop circle */}\n                  <View style={styles.overlay} pointerEvents=\"none\">\n                    {/* This creates the transparent circle in the overlay */}\n                    <View style={styles.cropCircleHole} />\n                  </View>\n                  \n                  {/* Circle guide border */}\n                  <View style={styles.circleGuide} pointerEvents=\"none\" />\n                </View>\n              </View>\n            </View>\n            \n            {/* Zoom slider */}\n            <View style={styles.sliderContainer}>\n              <TouchableOpacity \n                onPress={() => {\n                  const newScale = Math.max(minZoom, scale - 0.1);\n                  handleScaleChange(newScale);\n                }}\n                style={styles.zoomButton}\n              >\n                <MaterialCommunityIcons name=\"magnify-minus\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n              <Slider\n                style={styles.slider}\n                minimumValue={minZoom}\n                maximumValue={maxZoom}\n                value={scale}\n                onValueChange={handleScaleChange}\n                minimumTrackTintColor={theme.colors.primary}\n                maximumTrackTintColor={theme.colors.border}\n                thumbTintColor={theme.colors.primary}\n              />\n              <TouchableOpacity \n                onPress={() => {\n                  const newScale = Math.min(maxZoom, scale + 0.1);\n                  handleScaleChange(newScale);\n                }}\n                style={styles.zoomButton}\n              >\n                <MaterialCommunityIcons name=\"magnify-plus\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            <View style={styles.instructionsContainer}>\n              <Text style={styles.instructionsText}>\n                Use slider to zoom • Drag to position • Return slider to left to reset zoom\n              </Text>\n            </View>\n            \n            <View style={styles.footer}>\n              <TouchableOpacity \n                style={[styles.button, styles.cancelButton]} \n                onPress={onClose}\n                disabled={isUploading}\n              >\n                <Text style={styles.cancelButtonText}>Cancel</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={[styles.button, styles.saveButton, isUploading && styles.disabledButton]} \n                onPress={handleSave}\n                disabled={isUploading || !imageLoaded}\n              >\n                {isUploading ? (\n                  <ActivityIndicator size=\"small\" color=\"#FFFFFF\" />\n                ) : (\n                  <Text style={styles.saveButtonText}>Save</Text>\n                )}\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </TouchableWithoutFeedback>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    width: CONTAINER_SIZE,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 16,\n    overflow: 'hidden',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  cropAreaOuterContainer: {\n    alignItems: 'center',\n    paddingVertical: 16, // Reduced padding to ensure image is contained\n  },\n  cropAreaContainer: {\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    position: 'relative',\n    overflow: 'hidden', // This is crucial - confines the image to this container\n  },\n  imageViewport: {\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    overflow: 'hidden', // Important - this clips the image to this container\n    position: 'relative',\n  },\n  imageContainer: {\n    position: 'absolute',\n    width: CIRCLE_SIZE * 3, // Make it larger to ensure the image is always visible\n    height: CIRCLE_SIZE * 3,\n    left: -CIRCLE_SIZE,\n    top: -CIRCLE_SIZE,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  image: {\n    // Width and height will be set dynamically\n  },\n  overlay: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    zIndex: 2,\n  },\n  cropCircleHole: {\n    position: 'absolute',\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    borderRadius: CIRCLE_SIZE / 2,\n    top: 0,\n    left: 0,\n    // This creates a circular hole by masking out the center\n    ...Platform.select({\n      web: {\n        backgroundColor: 'transparent',\n        boxShadow: `0 0 0 ${CIRCLE_SIZE}px rgba(0, 0, 0, 0.5)`,\n      },\n      default: {\n        backgroundColor: 'transparent',\n        borderWidth: CIRCLE_SIZE / 2,\n        borderColor: 'rgba(0, 0, 0, 0.5)',\n        width: 0,\n        height: 0,\n        borderRadius: CIRCLE_SIZE,\n        top: CIRCLE_SIZE / 4,\n        left: CIRCLE_SIZE / 4,\n      },\n    }),\n  },\n  circleGuide: {\n    position: 'absolute',\n    width: CIRCLE_SIZE,\n    height: CIRCLE_SIZE,\n    borderRadius: CIRCLE_SIZE / 2,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n    borderStyle: 'dashed',\n    zIndex: 3,\n  },\n  sliderContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '90%',\n    marginTop: 8,\n    alignSelf: 'center',\n  },\n  slider: {\n    flex: 1,\n    height: 40,\n    marginHorizontal: 8,\n  },\n  zoomButton: {\n    padding: 8,\n  },\n  instructionsContainer: {\n    marginVertical: 8,\n    alignItems: 'center',\n  },\n  instructionsText: {\n    color: theme.colors.secondary,\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  button: {\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginHorizontal: 8,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  saveButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.disabled,\n  },\n  cancelButtonText: {\n    color: theme.colors.primary,\n    fontWeight: '600',\n  },\n  saveButtonText: {\n    color: '#FFFFFF',\n    fontWeight: '600',\n  },\n});\n\nexport default ProfilePhotoCropper; ","import { Platform } from 'react-native';\nimport { debugLog } from '../context/AuthContext';\n\n/**\n * Processes an image URI with crop parameters to generate a cropped image.\n * On web, it returns a base64 data URL of the cropped image.\n * On native platforms, it's not possible to directly manipulate the image,\n * so we return the crop parameters for server-side processing.\n * \n * @param {string} imageUri - URI of the original image\n * @param {Object} cropParams - Parameters for cropping\n * @param {number} cropParams.scale - Scale factor of the image\n * @param {number} cropParams.x - X translation of the image\n * @param {number} cropParams.y - Y translation of the image\n * @param {number} cropParams.imageWidth - Original width of the image\n * @param {number} cropParams.imageHeight - Original height of the image\n * @param {number} cropParams.cropWidth - Width of the crop area\n * @param {number} cropParams.cropHeight - Height of the crop area\n * @returns {Promise<Object>} Object containing the processed image data\n */\nexport const processImageWithCrop = async (imageUri, cropParams) => {\n  try {\n    debugLog('MBA8080', 'Processing image with crop params:', cropParams);\n    \n    // For web platform, we can create a canvas and crop the image\n    if (Platform.OS === 'web') {\n      return await cropImageOnWeb(imageUri, cropParams);\n    } \n    \n    // For native platforms, we'll send the original image with crop parameters\n    // to be processed on the server\n    return {\n      uri: imageUri,\n      cropParams,\n      oldProfilePhotoUrl: cropParams.oldProfilePhotoUrl // Pass through for deletion\n    };\n  } catch (error) {\n    debugLog('MBA8080', 'Error processing image with crop:', error);\n    throw error;\n  }\n};\n\n/**\n * Crops an image on web using canvas\n * @param {string} imageUri - URI of the original image\n * @param {Object} cropParams - Parameters for cropping\n * @returns {Promise<Object>} Object containing the cropped image as base64\n */\nconst cropImageOnWeb = async (imageUri, cropParams) => {\n  return new Promise((resolve, reject) => {\n    // Ensure we're on web platform and have required APIs\n    if (Platform.OS !== 'web' || typeof document === 'undefined' || typeof Image === 'undefined') {\n      debugLog('MBA8080', 'Canvas cropping not available on this platform');\n      reject(new Error('Canvas cropping not available on this platform'));\n      return;\n    }\n    \n    try {\n      // Create an image element to load the original image\n      const img = new Image();\n      img.crossOrigin = 'anonymous';\n      \n      img.onload = () => {\n        try {\n          // Check if canvas is available\n          if (typeof document.createElement !== 'function') {\n            throw new Error('document.createElement not available');\n          }\n          \n          // Create a canvas to draw the cropped image\n          const canvas = document.createElement('canvas');\n          if (!canvas || typeof canvas.getContext !== 'function') {\n            throw new Error('Canvas not supported');\n          }\n          \n          const ctx = canvas.getContext('2d');\n          if (!ctx) {\n            throw new Error('Canvas 2D context not available');\n          }\n          \n          // Set canvas size to the crop dimensions (which is the circle diameter)\n          const cropSize = Math.min(cropParams.cropWidth, cropParams.cropHeight);\n          canvas.width = cropSize;\n          canvas.height = cropSize;\n          \n          // Calculate the center of the crop area\n          const centerX = cropSize / 2;\n          const centerY = cropSize / 2;\n          \n          // Create circular clipping path\n          ctx.beginPath();\n          ctx.arc(centerX, centerY, cropSize / 2, 0, Math.PI * 2, true);\n          ctx.closePath();\n          ctx.clip();\n          \n          // Calculate the source position and dimensions in the original image\n          const scaledWidth = cropParams.imageWidth * cropParams.scale;\n          const scaledHeight = cropParams.imageHeight * cropParams.scale;\n          \n          // Calculate the center of the image in the coordinate system\n          // of the crop window, accounting for the translation\n          const cropCenterX = cropSize / 2;\n          const cropCenterY = cropSize / 2;\n          \n          // Calculate the image center coordinates in the crop window\n          const imageCenterX = cropCenterX - cropParams.x;\n          const imageCenterY = cropCenterY - cropParams.y;\n          \n          // Calculate the top-left position to draw the image\n          const drawX = imageCenterX - (scaledWidth / 2);\n          const drawY = imageCenterY - (scaledHeight / 2);\n          \n          debugLog('MBA8080', 'Crop calculations:', {\n            cropSize,\n            scaledWidth,\n            scaledHeight,\n            drawX,\n            drawY,\n            imageCenterX,\n            imageCenterY\n          });\n          \n          // Draw the image with the appropriate transformations\n          ctx.drawImage(\n            img,\n            drawX,\n            drawY,\n            scaledWidth,\n            scaledHeight\n          );\n          \n          // Convert the canvas to a base64 data URL\n          const dataUrl = canvas.toDataURL('image/jpeg', 0.9);\n          \n          debugLog('MBA8080', 'Image cropped successfully on web');\n          \n          // Return the cropped image data\n          resolve({\n            base64Data: dataUrl,\n            type: 'image/jpeg',\n            oldProfilePhotoUrl: cropParams.oldProfilePhotoUrl // Pass through for deletion\n          });\n        } catch (error) {\n          debugLog('MBA8080', 'Error cropping image on web:', error);\n          reject(error);\n        }\n      };\n      \n      img.onerror = (error) => {\n        debugLog('MBA8080', 'Error loading image for cropping:', error);\n        reject(new Error('Failed to load image for cropping'));\n      };\n      \n      // Start loading the image\n      img.src = imageUri;\n    } catch (error) {\n      debugLog('MBA8080', 'Error cropping image on web:', error);\n      reject(error);\n    }\n  });\n};\n\n/**\n * Prepares image data for upload based on platform\n * @param {Object} processedImage - Processed image data from processImageWithCrop\n * @returns {Object} Data ready for upload (FormData or base64)\n */\nexport const prepareImageForUpload = (processedImage) => {\n  // If we have base64 data (from web), return it directly\n  if (processedImage.base64Data) {\n    return {\n      isBase64: true,\n      data: processedImage.base64Data,\n      oldProfilePhotoUrl: processedImage.oldProfilePhotoUrl\n    };\n  }\n  \n  // For native platforms, create a FormData object with the URI and crop parameters\n  if (processedImage.uri) {\n    const formData = new FormData();\n    \n    // Add the image file\n    const photoFile = {\n      uri: Platform.OS === 'android' ? processedImage.uri : processedImage.uri.replace('file://', ''),\n      type: 'image/jpeg',\n      name: 'profile_photo.jpg'\n    };\n    formData.append('profile_picture', photoFile);\n    \n    // Add crop parameters if provided\n    if (processedImage.cropParams) {\n      formData.append('crop_params', JSON.stringify(processedImage.cropParams));\n    }\n    \n    // Add the old profile photo URL if provided for deletion\n    if (processedImage.oldProfilePhotoUrl) {\n      formData.append('old_profile_photo_url', processedImage.oldProfilePhotoUrl);\n    }\n    \n    return {\n      isBase64: false,\n      data: formData,\n      oldProfilePhotoUrl: processedImage.oldProfilePhotoUrl\n    };\n  }\n  \n  throw new Error('Invalid processed image data');\n}; ","/**\n * SupportButton Component\n * \n * A reusable button component that opens a modal with donation options.\n * \n * Setup Instructions:\n * 1. For Venmo: Replace 'YOUR_VENMO_USERNAME' in handleVenmoDonation with your actual Venmo username\n * 2. For Credit Card: Uncomment the code in handleCreditCardDonation and replace 'YOUR_PAYMENT_LINK_HERE' \n *    with your Stripe payment link after setting up your Stripe account\n * \n * Props:\n * - style: Custom container styling\n * - buttonStyle: Custom button styling  \n * - showTitle: Show/hide section title (default: true)\n * - title: Custom title text (default: \"Support CrittrCove\")\n * - subtitle: Custom subtitle text (default: \"Help us keep costs low for everyone\")\n * - size: Button size variant - \"default\", \"compact\", or \"large\" (default: \"default\")\n */\n\nimport React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Linking, Modal } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { useToast } from './ToastProvider';\nimport { debugLog } from '../context/AuthContext';\n\nconst SupportButton = ({ \n  style, \n  buttonStyle, \n  showTitle = true, \n  title = \"Support CrittrCove\",\n  subtitle = \"Help us keep costs low for everyone\",\n  size = \"default\" // \"default\", \"compact\", \"large\"\n}) => {\n  const showToast = useToast();\n  const [showDonateModal, setShowDonateModal] = useState(false);\n\n  // Handle donate button press - now opens modal instead of direct link\n  const handleDonatePress = () => {\n    debugLog('MBA9902', 'Opening donate modal from SupportButton component');\n    setShowDonateModal(true);\n  };\n\n  // Handle credit card donation\n  const handleCreditCardDonation = () => {\n    debugLog('MBA9902', 'Credit card donation selected');\n    setShowDonateModal(false);\n    \n    // TODO: Uncomment and replace with your actual Stripe payment link once created\n    // To create: Go to Stripe Dashboard > Products > Add Product > Create Payment Link\n    // Set it as a donation with \"Customer chooses price\" option enabled\n    /*\n    const donateUrl = 'https://buy.stripe.com/YOUR_PAYMENT_LINK_HERE';\n    \n    Linking.openURL(donateUrl).catch((err) => {\n      debugLog('MBA9902', 'Error opening donate link:', err);\n      showToast({\n        message: 'Unable to open donation page. Please try again later.',\n        type: 'error',\n        duration: 3000\n      });\n    });\n    */\n    \n    // Temporary message while Stripe is being set up\n    showToast({\n      message: 'Credit card donations coming soon! Please use Venmo for now.',\n      type: 'info',\n      duration: 4000\n    });\n  };\n\n  // Handle Venmo donation\n  const handleVenmoDonation = () => {\n    debugLog('MBA9902', 'Venmo donation selected');\n    setShowDonateModal(false);\n    \n    // TODO: Replace with your actual Venmo username\n    const venmoUrl = 'https://venmo.com/u/matt-aertker';\n    \n    Linking.openURL(venmoUrl).catch((err) => {\n      debugLog('MBA9902', 'Error opening Venmo link:', err);\n      showToast({\n        message: 'Unable to open Venmo. Please try again later.',\n        type: 'error',\n        duration: 3000\n      });\n    });\n  };\n\n  const getSizeStyles = () => {\n    switch (size) {\n      case \"compact\":\n        return {\n          button: styles.donateButtonCompact,\n          icon: styles.donateButtonIconCompact,\n          title: styles.donateButtonTitleCompact,\n          subtitle: styles.donateButtonSubtitleCompact,\n          iconSize: 20,\n          arrowSize: 16\n        };\n      case \"large\":\n        return {\n          button: styles.donateButtonLarge,\n          icon: styles.donateButtonIconLarge,\n          title: styles.donateButtonTitleLarge,\n          subtitle: styles.donateButtonSubtitleLarge,\n          iconSize: 28,\n          arrowSize: 24\n        };\n      default:\n        return {\n          button: styles.donateButton,\n          icon: styles.donateButtonIcon,\n          title: styles.donateButtonTitle,\n          subtitle: styles.donateButtonSubtitle,\n          iconSize: 24,\n          arrowSize: 20\n        };\n    }\n  };\n\n  const sizeStyles = getSizeStyles();\n\n  return (\n    <>\n      <View style={[styles.donateSection, style]}>\n        {showTitle && (\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>{title}</Text>\n          </View>\n        )}\n        <TouchableOpacity \n          style={[sizeStyles.button, buttonStyle]}\n          onPress={handleDonatePress}\n        >\n          <View style={sizeStyles.icon}>\n            <MaterialCommunityIcons \n              name=\"heart\" \n              size={sizeStyles.iconSize} \n              color={theme.colors.background} \n            />\n          </View>\n          <View style={styles.donateButtonContent}>\n            <Text style={sizeStyles.title}>Support CrittrCove</Text>\n            <Text style={sizeStyles.subtitle}>{subtitle}</Text>\n          </View>\n          <MaterialCommunityIcons \n            name=\"chevron-right\" \n            size={sizeStyles.arrowSize} \n            color={theme.colors.background} \n          />\n        </TouchableOpacity>\n      </View>\n\n      {/* Donation Options Modal */}\n      <Modal\n        visible={showDonateModal}\n        transparent\n        animationType=\"fade\"\n        onRequestClose={() => setShowDonateModal(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Support CrittrCove</Text>\n              <TouchableOpacity \n                style={styles.modalCloseButton}\n                onPress={() => setShowDonateModal(false)}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            <Text style={styles.modalDescription}>\n              Choose your preferred way to support us and help keep CrittrCove running!\n            </Text>\n\n            <View style={styles.donationOptionsContainer}>\n              {/* Credit Card Option - Commented out functionality */}\n              <TouchableOpacity \n                style={[styles.donationOption, styles.disabledOption]}\n                onPress={handleCreditCardDonation}\n              >\n                <View style={styles.donationOptionIcon}>\n                  <MaterialCommunityIcons \n                    name=\"credit-card\" \n                    size={28} \n                    color={theme.colors.placeHolderText} \n                  />\n                </View>\n                <View style={styles.donationOptionContent}>\n                  <Text style={[styles.donationOptionTitle, styles.disabledText]}>\n                    Credit Card\n                  </Text>\n                  <Text style={[styles.donationOptionSubtitle, styles.disabledText]}>\n                    Coming soon - secure payment via Stripe\n                  </Text>\n                </View>\n                <View style={styles.comingSoonBadge}>\n                  <Text style={styles.comingSoonText}>Soon</Text>\n                </View>\n              </TouchableOpacity>\n\n              {/* Venmo Option */}\n              <TouchableOpacity \n                style={styles.donationOption}\n                onPress={handleVenmoDonation}\n              >\n                <View style={styles.donationOptionIcon}>\n                  <MaterialCommunityIcons \n                    name=\"cash\" \n                    size={28} \n                    color={theme.colors.primary} \n                  />\n                </View>\n                <View style={styles.donationOptionContent}>\n                  <Text style={styles.donationOptionTitle}>Venmo</Text>\n                  <Text style={styles.donationOptionSubtitle}>\n                    Quick and easy mobile payments\n                  </Text>\n                </View>\n                <MaterialCommunityIcons \n                  name=\"chevron-right\" \n                  size={20} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.modalFooter}>\n              <Text style={styles.modalFooterText}>\n                Your support helps us keep costs low for everyone in the CrittrCove community!\n              </Text>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  donateSection: {\n    marginTop: 16,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n\n  // Default size styles\n  donateButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.mainColors.tertiary,\n    padding: 16,\n    borderRadius: 12,\n    shadowColor: theme.colors.mainColors.tertiary,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  donateButtonIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  donateButtonContent: {\n    flex: 1,\n  },\n  donateButtonTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.background,\n    marginBottom: 2,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  donateButtonSubtitle: {\n    fontSize: 12,\n    color: theme.colors.background,\n    opacity: 0.9,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Compact size styles\n  donateButtonCompact: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.mainColors.tertiary,\n    padding: 12,\n    borderRadius: 8,\n    shadowColor: theme.colors.mainColors.tertiary,\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  donateButtonIconCompact: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  donateButtonTitleCompact: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.background,\n    marginBottom: 1,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  donateButtonSubtitleCompact: {\n    fontSize: 11,\n    color: theme.colors.background,\n    opacity: 0.9,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Large size styles\n  donateButtonLarge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.mainColors.tertiary,\n    padding: 20,\n    borderRadius: 16,\n    shadowColor: theme.colors.mainColors.tertiary,\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.15,\n    shadowRadius: 6,\n    elevation: 4,\n  },\n  donateButtonIconLarge: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  donateButtonTitleLarge: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.background,\n    marginBottom: 3,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  donateButtonSubtitleLarge: {\n    fontSize: 14,\n    color: theme.colors.background,\n    opacity: 0.9,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Modal styles\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '100%',\n    maxWidth: 400,\n    maxHeight: '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  modalCloseButton: {\n    width: 32,\n    height: 32,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 16,\n    backgroundColor: theme.colors.background,\n  },\n  modalDescription: {\n    fontSize: 16,\n    color: theme.colors.text,\n    lineHeight: 24,\n    padding: 20,\n    paddingBottom: 10,\n    textAlign: 'center',\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Donation options styles\n  donationOptionsContainer: {\n    padding: 20,\n    paddingTop: 10,\n    gap: 12,\n  },\n  donationOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  disabledOption: {\n    opacity: 0.6,\n    backgroundColor: theme.colors.surface,\n  },\n  donationOptionIcon: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: theme.colors.primary + '10',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  donationOptionContent: {\n    flex: 1,\n  },\n  donationOptionTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  donationOptionSubtitle: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  disabledText: {\n    color: theme.colors.placeHolderText,\n  },\n  comingSoonBadge: {\n    backgroundColor: theme.colors.warning + '20',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    marginLeft: 8,\n  },\n  comingSoonText: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: theme.colors.warning,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Modal footer styles\n  modalFooter: {\n    padding: 20,\n    paddingTop: 10,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  modalFooterText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    textAlign: 'center',\n    lineHeight: 20,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n});\n\nexport default SupportButton; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Image, Modal, Alert, ScrollView, ActivityIndicator, Platform, Keyboard } from 'react-native';\nimport { MaterialCommunityIcons, FontAwesome } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport * as Location from 'expo-location';\nimport * as ImagePicker from 'expo-image-picker';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport { updateProfileInfo, uploadProfilePicture } from '../../api/API';\nimport { useToast } from '../../components/ToastProvider';\nimport { geocodeAddressGraceful } from '../../utils/geocoding';\nimport AddressAutocomplete from '../AddressAutocomplete';\nimport axios from 'axios';\nimport { API_BASE_URL, getMediaUrl } from '../../config/config';\nimport ProfilePhotoCropper from './ProfilePhotoCropper';\nimport { processImageWithCrop, prepareImageForUpload } from '../../utils/imageCropUtils';\nimport SupportButton from '../SupportButton';\nimport { sanitizeInput, validateEmail, validateName } from '../../validation/validation';\n\nconst FACILITY_PRESETS = [\n  { id: 'fenced_yard', icon: 'fence', title: 'Fenced Yard', description: 'Secure outdoor space for pets' },\n  { id: 'pet_door', icon: 'door', title: 'Pet Door', description: 'Easy access to outdoor areas' },\n  { id: 'air_conditioning', icon: 'air-conditioner', title: 'Climate Control', description: 'Temperature controlled environment' },\n  { id: 'security_cameras', icon: 'cctv', title: 'Security Cameras', description: '24/7 monitoring capability' },\n  { id: 'separate_room', icon: 'door-closed', title: 'Separate Pet Room', description: 'Dedicated space for pets' },\n  { id: 'pet_gates', icon: 'gate', title: 'Pet Gates', description: 'Indoor barriers for pet safety' },\n  { id: 'pool', icon: 'pool', title: 'Pool', description: 'Swimming area (with safety features)' },\n  { id: 'cleaning_station', icon: 'shower-head', title: 'Pet Cleaning Station', description: 'Dedicated pet washing area' },\n  { id: 'first_aid', icon: 'medical-bag', title: 'Pet First Aid Kit', description: 'Emergency medical supplies' },\n  { id: 'food_storage', icon: 'food-variant', title: 'Pet Food Storage', description: 'Dedicated food storage area' },\n];\n\nconst INSURANCE_OPTIONS = [\n  { id: 'none', label: 'No Insurance', description: 'I do not have insurance' },\n  { id: 'petplan', label: 'PetPlan Insurance', description: 'Comprehensive pet insurance coverage' },\n  { id: 'trupanion', label: 'Trupanion', description: 'Lifetime coverage for your pets' },\n  { id: 'custom', label: 'Custom Insurance', description: 'Upload my own insurance card' }\n];\n\n// Legacy AddressForm - keeping for reference but not used\nconst AddressForm = ({ address, setAddress }) => (\n  <View style={styles.addressForm}>\n    <TextInput\n      style={styles.addressInput}\n      value={address.street}\n      onChangeText={(text) => setAddress(prev => ({ ...prev, street: text }))}\n      placeholder=\"Street Address\"\n    />\n    <TextInput\n      style={styles.addressInput}\n      value={address.apartment}\n      onChangeText={(text) => setAddress(prev => ({ ...prev, apartment: text }))}\n      placeholder=\"Apartment/Suite (optional)\"\n    />\n    <View style={styles.addressRow}>\n      <TextInput\n        style={[styles.addressInput, { flex: 2 }]}\n        value={address.city}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, city: text }))}\n        placeholder=\"City\"\n      />\n      <TextInput\n        style={[styles.addressInput, { flex: 1 }]}\n        value={address.state || 'Colorado'}\n        onChangeText={(text) => setAddress(prev => ({ ...prev, state: text }))}\n        placeholder=\"State\"\n      />\n    </View>\n    <TextInput\n      style={styles.addressInput}\n      value={address.zip}\n      onChangeText={(text) => setAddress(prev => ({ ...prev, zip: text }))}\n      placeholder=\"ZIP Code\"\n      keyboardType=\"numeric\"\n    />\n  </View>\n);\n\nconst EditOverlay = ({ visible, onClose, title, value, onSave, isLocation, isMultiline, isProfessional, isInsurance, selectedInsurance = { type: 'none', card: null }, onInsuranceChange }) => {\n  const [localValue, setLocalValue] = useState('');\n  const [localInsurance, setLocalInsurance] = useState(selectedInsurance);\n  const [isLoadingLocation, setIsLoadingLocation] = useState(false);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [currentAddressValue, setCurrentAddressValue] = useState('');\n  const [insuranceStep, setInsuranceStep] = useState(1); // 1: Choose type, 2: Upload/Select insurance\n  const [insuranceType, setInsuranceType] = useState(null); // 'own' or 'platform'\n  const [validationError, setValidationError] = useState('');\n\n  useEffect(() => {\n    if (visible) {\n      if (isInsurance) {\n        setLocalInsurance(selectedInsurance);\n        setInsuranceStep(1);\n        setInsuranceType(null);\n      } else if (isLocation) {\n        // Initialize address autocomplete with current value\n        setCurrentAddressValue(value || '');\n        setSelectedAddress(null);\n      } else {\n        setLocalValue(value || '');\n      }\n      // Clear any validation errors when modal opens\n      setValidationError('');\n    }\n  }, [visible]); // Only depend on visibility changing - nothing else\n\n  const handleTextInputChange = (text) => {\n    debugLog('MBA1234', 'Profile text input change:', { title, text });\n    \n    // Don't apply real-time sanitization during typing - this interferes with user experience\n    // Only block extremely dangerous content in real-time\n    const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(text);\n    const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(text);\n    \n    if (hasScriptTags || hasSqlInjection) {\n      debugLog('MBA1234', 'Dangerous content detected and blocked in real-time:', text);\n      setValidationError('Invalid content detected in input');\n      return;\n    }\n    \n    // Determine the input type based on the title for validation (not sanitization)\n    let inputType = 'general';\n    let maxLength = 1000;\n    \n    if (title.toLowerCase().includes('name')) {\n      inputType = 'name';\n      maxLength = 50;\n    } else if (title.toLowerCase().includes('email')) {\n      inputType = 'email';\n      maxLength = 254;\n    } else if (title.toLowerCase().includes('bio') || title.toLowerCase().includes('about')) {\n      inputType = 'description';\n      maxLength = isMultiline ? 1000 : 500;\n    }\n    \n    // Perform field-specific validation on the original text (not sanitized)\n    if (title.toLowerCase().includes('email') && text.length > 0) {\n      // For email, we can validate format without sanitizing during typing\n      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!emailRegex.test(text)) {\n        setValidationError('Please enter a valid email address');\n      } else {\n        setValidationError('');\n      }\n    } else if (title.toLowerCase().includes('name') && text.length > 0) {\n      // For names, check basic requirements without removing content\n      if (text.length < 2) {\n        setValidationError('Name must be at least 2 characters long');\n      } else {\n        setValidationError('');\n      }\n    } else if ((title.toLowerCase().includes('bio') || title.toLowerCase().includes('about')) && text.length > 0) {\n      if (text.length < 10) {\n        setValidationError('Description must be at least 10 characters long');\n      } else if (text.length > maxLength) {\n        setValidationError(`Description must be no more than ${maxLength} characters long`);\n      } else {\n        setValidationError('');\n      }\n    } else {\n      setValidationError('');\n    }\n    \n    // Set the original text (not sanitized) - sanitization will happen at save time\n    setLocalValue(text);\n  };\n\n  const handleSave = () => {\n    // Check for validation errors before saving\n    if (validationError) {\n      debugLog('MBA1234', 'Cannot save due to validation error:', validationError);\n      Alert.alert('Validation Error', validationError);\n      return;\n    }\n    \n    // Additional validation for required fields\n    if (!isInsurance && !isLocation && localValue.trim() === '') {\n      Alert.alert('Required Field', 'This field cannot be empty.');\n      return;\n    }\n    \n    if (isInsurance) {\n      onSave(localInsurance);\n    } else if (isLocation) {\n      if (!selectedAddress) {\n        // Show error - address must be validated\n        Alert.alert('Invalid Address', 'Please select a valid address from the suggestions.');\n        return;\n      }\n      // Pass the selected address object with all components and coordinates\n      debugLog('MBA8901', 'Saving location with selected address:', selectedAddress);\n      onSave(selectedAddress);\n    } else {\n      // Sanitize the value before saving based on field type\n      let inputType = 'general';\n      let maxLength = 1000;\n      \n      if (title.toLowerCase().includes('name')) {\n        inputType = 'name';\n        maxLength = 50;\n      } else if (title.toLowerCase().includes('email')) {\n        inputType = 'email';\n        maxLength = 254;\n      } else if (title.toLowerCase().includes('bio') || title.toLowerCase().includes('about')) {\n        inputType = 'description';\n        maxLength = isMultiline ? 1000 : 500;\n      }\n      \n      const sanitizedValue = sanitizeInput(localValue, inputType, { maxLength });\n      \n      // Final validation before saving\n      debugLog('MBA1234', 'Saving profile field with sanitized value:', {\n        original: localValue,\n        sanitized: sanitizedValue,\n        type: inputType\n      });\n      onSave(sanitizedValue);\n    }\n    onClose();\n  };\n\n  const handleInsuranceTypeSelect = (type) => {\n    setInsuranceType(type);\n    setInsuranceStep(2);\n  };\n\n  const handleInsuranceChange = async (insuranceType) => {\n    if (insuranceType === 'custom') {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [16, 9],\n        quality: 1,\n      });\n\n      if (!result.canceled) {\n        const newInsurance = { type: 'custom', card: result.assets[0].uri };\n        setLocalInsurance(newInsurance);\n        onInsuranceChange(insuranceType);\n      }\n    } else {\n      const newInsurance = { type: insuranceType, card: null };\n      setLocalInsurance(newInsurance);\n      onInsuranceChange(insuranceType);\n    }\n  };\n\n  const handleGetCurrentLocation = async () => {\n    setIsLoadingLocation(true);\n    try {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        if (Platform.OS === 'web') {\n          Alert.alert('Permission denied: Please enable location services to use this feature.');\n        }\n        return;\n      }\n      \n      const location = await Location.getCurrentPositionAsync({});\n      const { latitude, longitude } = location.coords;\n      \n      // Get the address from coordinates\n      const [address] = await Location.reverseGeocodeAsync({ latitude, longitude });\n      \n      if (address) {\n        setAddressForm({\n          street: address.street || '',\n          apartment: '',\n          city: address.city || '',\n          state: address.region || '',\n          zip: address.postalCode || '',\n          country: address.country || ''\n        });\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to get current location. Please enter address manually.');\n    } finally {\n      setIsLoadingLocation(false);\n    }\n  };\n\n  const renderInsuranceContent = () => {\n    if (insuranceStep === 1) {\n      return (\n        <View style={styles.insuranceStepContent}>\n          <Text style={styles.insuranceStepTitle}>Choose Insurance Type</Text>\n          <TouchableOpacity \n            style={styles.insuranceTypeButton}\n            onPress={() => handleInsuranceTypeSelect('own')}\n          >\n            <MaterialCommunityIcons name=\"file-document\" size={24} color={theme.colors.primary} />\n            <View style={styles.insuranceTypeContent}>\n              <Text style={styles.insuranceTypeTitle}>Use My Own Insurance</Text>\n              <Text style={styles.insuranceTypeDescription}>Upload your existing insurance card</Text>\n            </View>\n          </TouchableOpacity>\n          {/* TODO: Implement after MVP\n           <TouchableOpacity \n            style={styles.insuranceTypeButton}\n            onPress={() => handleInsuranceTypeSelect('platform')}\n          >\n            <MaterialCommunityIcons name=\"shield-check\" size={24} color={theme.colors.primary} />\n            <View style={styles.insuranceTypeContent}>\n              <Text style={styles.insuranceTypeTitle}>Use Platform Insurance</Text>\n              <Text style={styles.insuranceTypeDescription}>Select from our insurance providers</Text>\n            </View>\n          </TouchableOpacity> */}\n        </View>\n      );\n    }\n\n    if (insuranceStep === 2) {\n      if (insuranceType === 'own') {\n        return (\n          <View style={styles.insuranceStepContent}>\n            <Text style={styles.insuranceStepTitle}>Upload Insurance Card</Text>\n            <TouchableOpacity \n              style={styles.uploadButton}\n              onPress={() => handleInsuranceChange('custom')}\n            >\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.primary} />\n              <Text style={styles.uploadText}>Upload Insurance Card</Text>\n            </TouchableOpacity>\n            {localInsurance.type === 'custom' && localInsurance.card && (\n              <View style={styles.customInsuranceCard}>\n                <Image \n                  source={{ uri: localInsurance.card }} \n                  style={styles.insuranceCardImage}\n                />\n                <Text style={styles.insuranceCardText}>Custom Insurance Card</Text>\n              </View>\n            )}\n          </View>\n        );\n      }\n\n      return (\n        <View style={styles.insuranceStepContent}>\n          <Text style={styles.insuranceStepTitle}>Select Insurance Provider</Text>\n          {INSURANCE_OPTIONS.filter(opt => opt.id !== 'custom').map((option) => (\n            <TouchableOpacity\n              key={option.id}\n              style={[\n                styles.insuranceOption,\n                localInsurance.type === option.id && styles.selectedInsuranceOption\n              ]}\n              onPress={() => {\n                const newInsurance = { type: option.id, card: null };\n                setLocalInsurance(newInsurance);\n                onInsuranceChange(option.id);\n              }}\n            >\n              <MaterialCommunityIcons \n                name={option.id === 'none' ? 'shield-off' : 'shield-check'} \n                size={24} \n                color={theme.colors.primary} \n              />\n              <View style={styles.insuranceOptionContent}>\n                <Text style={styles.insuranceOptionTitle}>{option.label}</Text>\n                <Text style={styles.insuranceOptionDescription}>{option.description}</Text>\n              </View>\n            </TouchableOpacity>\n          ))}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={[\n          styles.modalContent,\n          isInsurance && styles.insuranceModalContent\n        ]}>\n          <View style={styles.modalHeader}>\n            {isInsurance && insuranceStep === 2 && (\n              <TouchableOpacity \n                style={styles.backButton}\n                onPress={() => setInsuranceStep(1)}\n              >\n                <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n                <Text style={styles.backButtonText}>Back</Text>\n              </TouchableOpacity>\n            )}\n            <Text style={[\n              styles.modalTitle,\n              isInsurance && insuranceStep === 2 && styles.modalTitleCentered\n            ]}>{title}</Text>\n          </View>\n          \n          {isInsurance ? renderInsuranceContent() : (\n            isLocation ? (\n              <View style={styles.locationContent}>\n                <Text style={styles.addressInstructions}>\n                Enter your complete street address (e.g., \"123 Main Street\"). Only valid street addresses will appear in suggestions.\n                </Text>\n                <AddressAutocomplete\n                  value={currentAddressValue}\n                  onAddressSelect={(address) => {\n                    setSelectedAddress(address);\n                    setCurrentAddressValue(address.formatted_address);\n                    debugLog('MBA8901', 'Address selected in modal:', address);\n                  }}\n                  placeholder=\"Enter address in Colorado Springs...\"\n                  style={styles.addressAutocomplete}\n                />\n                {selectedAddress && (\n                  <View style={styles.selectedAddressInfo}>\n                    <MaterialCommunityIcons \n                      name=\"check-circle\" \n                      size={16} \n                      color={theme.colors.mainColors.tertiary} \n                    />\n                    <Text style={styles.selectedAddressText}>\n                      Address validated and ready to save\n                    </Text>\n                  </View>\n                )}\n              </View>\n            ) : (\n              <View>\n                <TextInput\n                  style={[\n                    styles.modalInput, \n                    isMultiline && styles.multilineInput,\n                    validationError ? styles.modalInputError : null\n                  ]}\n                  value={localValue}\n                  onChangeText={handleTextInputChange}\n                  multiline={isMultiline}\n                  numberOfLines={isMultiline ? 4 : 1}\n                  autoFocus\n                  maxLength={\n                    title.toLowerCase().includes('name') ? 50 :\n                    title.toLowerCase().includes('email') ? 254 :\n                    (title.toLowerCase().includes('bio') || title.toLowerCase().includes('about')) ? 1000 :\n                    500\n                  }\n                />\n                {validationError ? (\n                  <Text style={styles.modalInputErrorText}>{validationError}</Text>\n                ) : null}\n                {(title.toLowerCase().includes('bio') || title.toLowerCase().includes('about')) && (\n                  <Text style={styles.modalInputCharacterCount}>\n                    {localValue.length}/{isMultiline ? 1000 : 500}\n                  </Text>\n                )}\n              </View>\n            )\n          )}\n          \n          <View style={[styles.modalButtons, { zIndex: -1 }]}>\n            <TouchableOpacity style={styles.modalCancelButton} onPress={onClose}>\n              <Text style={styles.modalCancelText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={[\n                styles.modalSaveButton,\n                (isLocation && !selectedAddress) || validationError ? styles.modalSaveButtonDisabled : null\n              ]} \n              onPress={handleSave}\n              disabled={(isLocation && !selectedAddress) || validationError}\n            >\n              <Text style={styles.modalSaveText}>Save</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\n// Add new modal components after EditOverlay\nconst VerificationModal = ({ visible, onClose, title, type, onProceed }) => {\n  const getModalContent = () => {\n    switch (type) {\n      case 'background_check':\n        return {\n          icon: 'shield-check',\n          description: 'Get background checked to increase trust with pet owners and unlock premium features.',\n          steps: [\n            'Contact our support team via the contact button below',\n            'We\\'ll send you a secure link to our background check partner',\n            'Complete the background check process (typically 2-3 business days)',\n            'Once verified, your profile will display a \"Background Verified\" badge'\n          ],\n          benefits: [\n            'Increased booking requests',\n            'Higher trust rating from pet owners',\n            'Access to premium client matches',\n            'Priority listing in search results'\n          ]\n        };\n      case 'insurance':\n        return {\n          icon: 'shield-account',\n          description: 'Get insured to provide additional protection for you and the pets you care for.',\n          steps: [\n            'Contact our support team via the contact button below',\n            'We\\'ll connect you with our insurance partner or have you provide proof of insurance',\n            'Complete the insurance application process or we will alert you when we have verified your private insurance',\n            'Once approved, your profile will display an \"Insured\" badge'\n          ],\n          benefits: [\n            'Protection against accidents and liability',\n            'Increased confidence from pet owners',\n            'Access to higher-value bookings',\n            'Professional credibility enhancement'\n          ]\n        };\n      case 'elite_pro':\n        return {\n          icon: 'star-circle',\n          description: 'Congratulations! You\\'ve earned Elite Pro status with 10+ bookings and a 5-star average rating.',\n          steps: [\n            'You\\'ve completed 10+ successful bookings',\n            'You\\'ve maintained a 5-star average rating',\n            'Your Elite Pro badge is now active on your profile'\n          ],\n          benefits: [\n            'Exclusive Elite Pro badge on your profile',\n            'Priority placement in search results',\n            'Access to premium booking opportunities',\n            'Special recognition in the community'\n          ]\n        };\n      default:\n        return { icon: 'help', description: '', steps: [], benefits: [] };\n    }\n  };\n\n  const content = getModalContent();\n\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.verificationModalOverlay}>\n        <View style={styles.verificationModalContent}>\n          <View style={styles.verificationModalHeader}>\n            <View style={styles.verificationIconContainer}>\n              <MaterialCommunityIcons \n                name={content.icon} \n                size={40} \n                color={theme.colors.primary} \n              />\n            </View>\n            <Text style={styles.verificationModalTitle}>{title}</Text>\n            <TouchableOpacity \n              style={styles.verificationModalClose}\n              onPress={onClose}\n            >\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          <ScrollView style={styles.verificationModalScroll}>\n            <Text style={styles.verificationDescription}>\n              {content.description}\n            </Text>\n            \n                         <View style={styles.verificationModalSection}>\n               <Text style={styles.verificationModalSectionTitle}>Process Steps:</Text>\n              {content.steps.map((step, index) => (\n                <View key={index} style={styles.verificationStep}>\n                  <View style={styles.verificationStepNumber}>\n                    <Text style={styles.verificationStepNumberText}>{index + 1}</Text>\n                  </View>\n                  <Text style={styles.verificationStepText}>{step}</Text>\n                </View>\n              ))}\n            </View>\n\n                         <View style={styles.verificationModalSection}>\n               <Text style={styles.verificationModalSectionTitle}>Benefits:</Text>\n              {content.benefits.map((benefit, index) => (\n                <View key={index} style={styles.verificationBenefit}>\n                  <MaterialCommunityIcons \n                    name=\"check-circle\" \n                    size={16} \n                    color={theme.colors.mainColors.tertiary} \n                  />\n                  <Text style={styles.verificationBenefitText}>{benefit}</Text>\n                </View>\n              ))}\n            </View>\n          </ScrollView>\n\n          <View style={styles.verificationModalButtons}>\n            <TouchableOpacity \n              style={styles.verificationModalCancelButton} \n              onPress={onClose}\n            >\n              <Text style={styles.verificationModalCancelText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={styles.verificationModalProceedButton} \n              onPress={onProceed}\n            >\n              <Text style={styles.verificationModalProceedText}>\n                {type === 'elite_pro' ? 'Got It!' : 'Contact Support'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst ProfileInfoTab = ({\n  profilePhoto,\n  email,\n  phone,\n  age,\n  address,\n  city,\n  state,\n  zip,\n  country,\n  coordinates,\n  bio,\n  about_me,\n  emergencyContact,\n  authorizedHouseholdMembers,\n  editMode,\n  toggleEditMode,\n  onChangeText,\n  pickImage,\n  setHasUnsavedChanges,\n  onSaveComplete,\n  isMobile,\n  rating,\n  reviews,\n  role,\n  isProfessional,\n  insurance = { type: 'none', card: null },\n  onNavigateToTab,\n  name,\n  navigation,\n}) => {\n  const { name: authName } = useContext(AuthContext);\n  \n  // Track direct user edits\n  const [hasEdits, setHasEdits] = useState(false);\n  const [editingField, setEditingField] = useState(null);\n  const [editValue, setEditValue] = useState('');\n  const [portfolioPhotos, setPortfolioPhotos] = useState([]);\n  const [selectedInsurance, setSelectedInsurance] = useState(insurance);\n  const [isSaving, setIsSaving] = useState(false);\n  \n  // Add state for verification modals\n  const [showVerificationModal, setShowVerificationModal] = useState(false);\n  const [verificationModalType, setVerificationModalType] = useState(null);\n  \n  // Add state for photo cropper\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [showCropper, setShowCropper] = useState(false);\n  \n  // Add state to track edited values that should display in the UI\n  const [displayValues, setDisplayValues] = useState({\n    name: name || authName || \"Your Name\",\n    email: email || \"\",\n    bio: isProfessional ? bio : about_me,\n    location: `${address || ''}${city ? `, ${city}` : ''}${state ? `, ${state}` : ''}`,\n  });\n  \n  // Add profileData state to store all profile-related data including profile photo\n  const [profileData, setProfileData] = useState({\n    name: name || authName || \"Your Name\",\n    email: email || \"\",\n    bio: isProfessional ? bio : about_me,\n    about_me: about_me || \"\",\n    profile_photo: profilePhoto || null,\n    address: address || \"\",\n    city: city || \"\",\n    state: state || \"\",\n    zip: zip || \"\",\n    coordinates: coordinates || null,\n  });\n  \n  const showToast = useToast();\n  \n  // Track original values to detect changes\n  const [originalValues, setOriginalValues] = useState({\n    name: '',\n    email: '',\n    bio: '',\n    location: '',\n    address: '',\n    apartment: '',\n    city: '',\n    state: '',\n    zip: '',\n    country: 'USA',\n    insurance: { type: 'none', card: null }\n  });\n\n  // Make sure parent component is notified about unsaved changes\n  useEffect(() => {\n    if (setHasUnsavedChanges) {\n      debugLog('MBA230uvj0834h9', 'Updating parent component with hasUnsavedChanges:', hasEdits);\n      setHasUnsavedChanges(hasEdits);\n    }\n  }, [hasEdits, setHasUnsavedChanges]);\n  \n  // Update profileData when profilePhoto prop changes\n  useEffect(() => {\n    if (profilePhoto) {\n      debugLog('MBA5080', 'Updating profile photo from props:', profilePhoto);\n      setProfileData(prevData => ({\n        ...prevData,\n        profile_photo: profilePhoto\n      }));\n    }\n  }, [profilePhoto]);\n  \n  // Update the initial useEffect to only run once\n  useEffect(() => {\n    debugLog('MBA230uvj0834h9', 'ProfileInfoTab mounted with props:', { \n      propName: name,\n      authName, \n      email, \n      address, \n      bio, \n      about_me, \n      profilePhoto,\n      isProfessional\n    });\n    \n    // Use formatted address if available, otherwise fall back to constructed address\n    const locationDisplay = coordinates?.formatted_address || \n                           `${address || ''}${city ? `, ${city}` : ''}${state ? `, ${state}` : ''}`;\n    \n    // Initialize display values on mount ONLY\n    setDisplayValues({\n      name: name || authName || \"Your Name\",\n      email: email || \"\",\n      bio: isProfessional ? bio : about_me,\n      location: locationDisplay\n    });\n    \n    // Initialize profileData with all props\n    setProfileData(prevData => ({\n      ...prevData,\n      profile_photo: profilePhoto || prevData.profile_photo,\n      name: name || prevData.name,\n      email: email || prevData.email,\n      bio: isProfessional ? (bio || prevData.bio) : (about_me || prevData.bio),\n      about_me: about_me || prevData.about_me,\n      address: address || prevData.address,\n      city: city || prevData.city,\n      state: state || prevData.state,\n      zip: zip || prevData.zip,\n      coordinates: coordinates || prevData.coordinates,\n    }));\n  }, []); // Empty dependency array - only run on mount\n\n  // Add effect to update bio when isProfessional changes\n  useEffect(() => {\n    // Update the bio/about_me when the role changes\n    setDisplayValues(prev => ({\n      ...prev,\n      bio: isProfessional ? bio : about_me\n    }));\n    \n    debugLog('MBA230uvj0834h9', 'Role changed - updating bio/about_me:', { \n      isProfessional, \n      bio, \n      about_me \n    });\n  }, [isProfessional, bio, about_me]);\n  \n  // Simplify hasFieldChanged to be more direct\n  const hasFieldChanged = (field, value) => {\n    // For insurance, we need to do a deep comparison\n    if (field === 'insurance') {\n      return JSON.stringify(value) !== JSON.stringify(originalValues.insurance);\n    }\n    \n    // For location, we can use a simpler comparison\n    if (field === 'location') {\n      // If it's an object, check all address fields\n      if (typeof value === 'object') {\n        // Handle AddressAutocomplete format (with components)\n        const newAddress = value.components?.street || value.street || value.address || '';\n        const newApartment = value.components?.apartment || value.apartment || '';\n        const newCity = value.components?.city || value.city || '';\n        const newState = value.components?.state || value.state || 'Colorado';\n        const newZip = value.components?.zip || value.zip || '';\n        \n        debugLog('MBA12345', 'Checking location changes:', {\n          originalAddress: originalValues.address,\n          newAddress: newAddress,\n          originalApartment: originalValues.apartment,\n          newApartment: newApartment,\n          originalCity: originalValues.city,\n          newCity: newCity,\n          originalState: originalValues.state,\n          newState: newState,\n          originalZip: originalValues.zip,\n          newZip: newZip\n        });\n        \n        // Check all fields that could have changed\n        const hasChanges = newAddress !== originalValues.address ||\n                          newApartment !== originalValues.apartment ||\n                          newCity !== originalValues.city ||\n                          newState !== originalValues.state ||\n                          newZip !== originalValues.zip;\n        \n        debugLog('MBA12345', `Location has changes: ${hasChanges}`);\n        return hasChanges;\n      }\n    }\n    \n    // For other fields, direct comparison\n    return value !== originalValues[field];\n  };\n\n  // Handle edit field\n  const handleEdit = (field, currentValue) => {\n    debugLog('MBA230uvj0834h9', `Edit ${field}:`, currentValue);\n    \n    // For location field, pass the current display value as a string for the modal\n    if (field === 'location') {\n      // Use the current display value (formatted address or constructed address)\n      setEditValue(currentValue || '');\n    } else {\n      setEditValue(currentValue);\n    }\n    \n    // This triggers the modal to open\n    setEditingField(field);\n    \n    // Mark that we're starting an edit\n    setHasEdits(true);\n    \n    // Notify parent component\n    if (setHasUnsavedChanges) {\n      setHasUnsavedChanges(true);\n    }\n  };\n\n  // Update extractAddressComponents to handle address objects correctly\n  const extractAddressComponents = async (locationData) => {\n    let addressComponents = {};\n    \n    // If we're getting a validated address object from AddressAutocomplete\n    if (locationData && typeof locationData === 'object' && 'components' in locationData) {\n      debugLog('MBA8901', 'Processing validated address from autocomplete:', locationData);\n      \n      addressComponents = {\n        address: locationData.components.street || '',\n        apartment: locationData.components.apartment || '',\n        city: locationData.components.city || '',\n        state: locationData.components.state || 'Colorado',\n        zip: locationData.components.zip || ''\n      };\n      \n      // Coordinates are already included from the autocomplete\n      if (locationData.coordinates) {\n        addressComponents.coordinates = locationData.coordinates;\n        debugLog('MBA8901', 'Using coordinates from validated address:', locationData.coordinates);\n      }\n    }\n    // Legacy: If we're getting an addressForm object from our old modal\n    else if (locationData && typeof locationData === 'object') {\n      // If it's an address form with street property\n      if ('street' in locationData) {\n        addressComponents = {\n          address: locationData.street || '',\n          apartment: locationData.apartment || '',\n          city: locationData.city || '',\n          state: locationData.state || 'Colorado',\n          zip: locationData.zip || ''\n        };\n      }\n      // If it's our own object with address property\n      else if ('address' in locationData) {\n        addressComponents = {\n          address: locationData.address || '',\n          apartment: locationData.apartment || '',\n          city: locationData.city || '',\n          state: locationData.state || 'Colorado',\n          zip: locationData.zip || ''\n        };\n      }\n      \n      // Only try to geocode if we don't already have coordinates\n      if (!addressComponents.coordinates && addressComponents.address && addressComponents.city && addressComponents.state) {\n        debugLog('MBA7890', 'Attempting to geocode legacy address:', addressComponents);\n        \n        const coordinates = await geocodeAddressGraceful({\n          street: addressComponents.address,\n          apartment: addressComponents.apartment,\n          city: addressComponents.city,\n          state: addressComponents.state,\n          zip: addressComponents.zip\n        });\n\n        if (coordinates) {\n          debugLog('MBA7890', 'Geocoding successful, adding coordinates:', coordinates);\n          addressComponents.coordinates = coordinates;\n        } else {\n          debugLog('MBA7890', 'Geocoding failed, saving address without coordinates');\n        }\n      }\n    }\n    // If we're getting a string (legacy format)\n    else if (typeof locationData === 'string') {\n      const components = locationData.split(',').map(part => part.trim());\n      addressComponents = {\n        address: components[0] || '',\n        apartment: '',\n        city: components[1] || '',\n        state: components[2] || 'Colorado',\n        zip: components[3] || ''\n      };\n      \n      // Try to geocode string addresses\n      if (addressComponents.address && addressComponents.city && addressComponents.state) {\n        const coordinates = await geocodeAddressGraceful({\n          street: addressComponents.address,\n          apartment: addressComponents.apartment,\n          city: addressComponents.city,\n          state: addressComponents.state,\n          zip: addressComponents.zip\n        });\n\n        if (coordinates) {\n          addressComponents.coordinates = coordinates;\n        }\n      }\n    }\n    // Default empty object if all else fails\n    else {\n      addressComponents = {\n        address: '',\n        apartment: '',\n        city: '',\n        state: 'Colorado',\n        zip: ''\n      };\n    }\n    \n    return addressComponents;\n  };\n\n  // Set original values when props change\n  useEffect(() => {\n    // Only set original values once on component mount\n    const locationDisplay = `${city || ''}${state ? `, ${state}` : ''}`;\n    \n    setOriginalValues({\n      name: name || authName || \"Your Name\",\n      email: email || \"\",\n      bio: isProfessional ? bio : about_me,\n      location: locationDisplay,\n      address: address || '',\n      apartment: '',\n      city: city || '',\n      state: state || 'Colorado',\n      zip: zip || '',\n      insurance: insurance\n    });\n  }, []); // Empty dependency array - only run once on mount\n  \n  // Simplify the handleSaveField function to avoid state update loops\n  const handleSaveField = async (field, value) => {\n    // Skip if no changes (keep this logic)\n    if (!hasFieldChanged(field, value)) {\n      debugLog('MBA230uvj0834h9', `No changes detected for ${field}, skipping save.`);\n      setEditingField(null);\n      \n      // Reset state since no changes were made\n      setHasEdits(false);\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(false);\n      }\n      return;\n    }\n\n    debugLog('MBA12345', `Changes detected for ${field}, proceeding with save.`, { value });\n    setIsSaving(true);\n    \n    try {\n      let profileData = {};\n      \n      switch (field) {\n        case 'name':\n          profileData = { name: value };\n          break;\n        case 'email':\n          profileData = { email: value };\n          break;\n        case 'bio':\n          // Make it clearer which field we're updating\n          if (isProfessional) {\n            profileData = { bio: value };\n            debugLog('MBA4928', 'Saving professional bio:', value);\n          } else {\n            profileData = { about_me: value };\n            debugLog('MBA4928', 'Saving client about_me:', value);\n          }\n          break;\n        case 'location':\n          debugLog('MBA12345', 'Extracting address components from:', value);\n          const locationComponents = await extractAddressComponents(value);\n          debugLog('MBA12345', 'Extracted components:', locationComponents);\n          \n          profileData = {\n            address: locationComponents.address,\n            apartment: locationComponents.apartment,\n            city: locationComponents.city,\n            state: locationComponents.state,\n            zip: locationComponents.zip\n          };\n\n          // Add coordinates if geocoding was successful\n          if (locationComponents.coordinates) {\n            profileData.coordinates = locationComponents.coordinates;\n            debugLog('MBA7890', 'Including coordinates in profile update:', locationComponents.coordinates);\n          }\n          break;\n        case 'insurance':\n          profileData = { insurance: value };\n          break;\n        default:\n          break;\n      }\n      \n      // Call API to update only the changed field\n      debugLog('MBA4928', `Saving ${field} to backend:`, profileData);\n      const updatedProfile = await updateProfileInfo(profileData);\n      debugLog('MBA4928', `Backend response for ${field}:`, updatedProfile);\n      \n      // Update display values first\n      if (field === 'name') {\n        setDisplayValues({\n          ...displayValues, \n          name: updatedProfile.name || displayValues.name\n        });\n        \n        // Update original values to match the new values from the server\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          name: updatedProfile.name || prevValues.name\n        }));\n      } else if (field === 'email') {\n        setDisplayValues({\n          ...displayValues, \n          email: updatedProfile.email || displayValues.email\n        });\n        \n        // Update original values\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          email: updatedProfile.email || prevValues.email\n        }));\n      } else if (field === 'bio') {\n        // Update display values with the correct field from the response\n        if (isProfessional) {\n          setDisplayValues({\n            ...displayValues, \n            bio: updatedProfile.bio || displayValues.bio\n          });\n          \n          // Update original values\n          setOriginalValues(prevValues => ({\n            ...prevValues,\n            bio: updatedProfile.bio || prevValues.bio\n          }));\n        } else {\n          setDisplayValues({\n            ...displayValues, \n            bio: updatedProfile.about_me || displayValues.bio\n          });\n          \n          // Update original values\n          setOriginalValues(prevValues => ({\n            ...prevValues,\n            bio: updatedProfile.about_me || prevValues.bio\n          }));\n        }\n      } else if (field === 'location') {\n        // Use formatted address if available, otherwise construct from components\n        const newLocation = updatedProfile.coordinates?.formatted_address || \n                           `${updatedProfile.address || ''}${updatedProfile.city ? `, ${updatedProfile.city}` : ''}${updatedProfile.state ? `, ${updatedProfile.state}` : ''}`;\n        setDisplayValues({\n          ...displayValues, \n          location: newLocation\n        });\n        \n        // Update original values for all address components\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          location: newLocation,\n          address: updatedProfile.address || prevValues.address,\n          apartment: updatedProfile.apartment || prevValues.apartment,\n          city: updatedProfile.city || prevValues.city,\n          state: updatedProfile.state || prevValues.state,\n          zip: updatedProfile.zip || prevValues.zip\n        }));\n      } else if (field === 'insurance') {\n        setSelectedInsurance(value);\n        \n        // Update original values\n        setOriginalValues(prevValues => ({\n          ...prevValues,\n          insurance: value\n        }));\n      }\n      \n      // Log the updated original values for debugging\n      debugLog('MBA4928', `Original values updated after save for ${field}`, { \n        originalValues: {\n          ...originalValues,\n          [field]: field === 'location' ? \n            `${updatedProfile.address || ''}${updatedProfile.city ? `, ${updatedProfile.city}` : ''}${updatedProfile.state ? `, ${updatedProfile.state}` : ''}` : \n            updatedProfile[field]\n        }\n      });\n      \n      // Success notification\n      showToast({\n        message: `${field.charAt(0).toUpperCase() + field.slice(1)} updated successfully`,\n        type: 'success',\n        duration: 3000\n      });\n      \n      // Reset state since changes were saved\n      setHasEdits(false);\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(false);\n      }\n      \n      // Notify parent component if needed\n      if (onSaveComplete) {\n        debugLog('MBA3oin4f084', 'Notifying parent component of profile photo update:', updatedProfile.profile_photo);\n        onSaveComplete(updatedProfile);\n      } else {\n        debugLog('MBA3oin4f084', 'No onSaveComplete function provided by parent component');\n      }\n    } catch (error) {\n      debugLog('MBA4928', `Error saving ${field}:`, error);\n      \n      // Show error toast\n      showToast({\n        message: `Failed to update ${field}. Please try again.`,\n        type: 'error',\n        duration: 4000\n      });\n      \n      // Keep edit state if there was an error\n      if (setHasUnsavedChanges) {\n        setHasUnsavedChanges(true);\n      }\n    } finally {\n      setIsSaving(false);\n      setEditingField(null);\n    }\n  };\n\n  // Update handle save to call the new function\n  const handleSave = (value) => {\n    debugLog('MBA4928', `Save ${editingField} to value:`, value);\n    \n    if (editingField === 'insurance') {\n      handleSaveField('insurance', value);\n    } else if (editingField === 'location') {\n      handleSaveField('location', value);\n    } else {\n      // For text fields, update the display value first\n      const newDisplayValues = { ...displayValues };\n      newDisplayValues[editingField] = value;\n      setDisplayValues(newDisplayValues);\n      \n      // Then save to backend\n      handleSaveField(editingField, value);\n    }\n  };\n\n  const location = `${city}${state ? `, ${state}` : ''}`;\n  \n  // Display name (use display values instead of context)\n  const displayName = displayValues.name || \"Your Name\";\n  \n  // Handle profile photo selection and upload\n  const handleProfilePhotoSelection = async () => {\n    try {\n      // Request permissions first if on native platforms\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          debugLog('MBA8080', 'Permission to access media library was denied');\n          showToast({\n            message: 'Permission to access media library was denied',\n            type: 'error',\n            duration: 3000\n          });\n          return;\n        }\n      }\n      \n      // Launch image picker with platform-specific options\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false, // Disable built-in editing as we'll use our custom cropper\n        quality: 1,\n        // On web, we need base64 for direct upload\n        base64: Platform.OS === 'web',\n        allowsMultipleSelection: false,\n      });\n      \n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        const selectedAsset = result.assets[0];\n        \n        debugLog('MBA8080', 'Selected profile photo:', {\n          uri: selectedAsset.uri.substring(0, 30) + '...',\n          type: selectedAsset.type || 'image/jpeg',\n          width: selectedAsset.width,\n          height: selectedAsset.height,\n          hasBase64: !!selectedAsset.base64\n        });\n        \n        // Store the selected photo and show the cropper\n        setSelectedPhoto(selectedAsset.uri);\n        setShowCropper(true);\n      }\n    } catch (error) {\n      debugLog('MBA8080', 'Error selecting profile photo:', error);\n      showToast({\n        message: 'Failed to select profile photo. Please try again.',\n        type: 'error',\n        duration: 3000\n      });\n    }\n  };\n  \n  // Handle saving the cropped image\n  const handleSaveCroppedImage = async (imageUri, cropParams) => {\n    try {\n        setIsSaving(true);\n        \n      // Add the current profile photo URL to cropParams for deletion\n      const currentProfilePhotoUrl = profileData.profile_photo || null;\n      const cropParamsWithOldPhoto = {\n        ...cropParams,\n        oldProfilePhotoUrl: currentProfilePhotoUrl\n      };\n      \n      debugLog('MBA8080', 'Processing cropped image with params:', cropParamsWithOldPhoto);\n      debugLog('MBA8080', 'Old profile photo URL for deletion:', currentProfilePhotoUrl);\n      \n      // Process the image with crop parameters\n      const processedImage = await processImageWithCrop(imageUri, cropParamsWithOldPhoto);\n      \n      // Prepare the image data for upload\n      const imageData = prepareImageForUpload(processedImage);\n      \n      let response;\n      \n      // Handle web platform (use JSON with base64)\n      if (imageData.isBase64) {\n        debugLog('MBA8080', 'Uploading as base64 (web platform)');\n        \n        // Send as JSON with oldProfilePhotoUrl\n        response = await axios.post(\n          `${API_BASE_URL}/api/users/v1/upload-profile-picture/`,\n          { \n            image_data: imageData.data,\n            old_profile_photo_url: imageData.oldProfilePhotoUrl\n          }\n        );\n      }\n      // Handle native platforms (use FormData)\n      else {\n        debugLog('MBA8080', 'Uploading as FormData (native platform)');\n        \n        // Send as FormData (already contains old_profile_photo_url)\n        response = await uploadProfilePicture(imageData.data);\n      }\n      \n      // Handle the response\n      debugLog('MBA8080', 'Profile photo upload successful:', response.data);\n        \n      // Update UI with the new photo URL\n      if (response.data && response.data.profile_photo) {\n        const photoUrl = response.data.profile_photo;\n        debugLog('MBA5080', 'Setting profile photo in local state:', photoUrl);\n        debugLog('MBA5080', 'Full photo URL will be:', getMediaUrl(photoUrl));\n        \n        // Update the profile photo in our local state\n        setProfileData(prev => ({\n          ...prev,\n          profile_photo: photoUrl\n        }));\n        \n        // Notify parent component of the change\n        if (onSaveComplete) {\n          debugLog('MBA8080', 'Notifying parent component of profile photo update:', response.data.profile_photo);\n          onSaveComplete({ profile_photo: photoUrl });\n        } else {\n          debugLog('MBA8080', 'No onSaveComplete function provided by parent component');\n        }\n        \n        showToast({\n          message: 'Profile photo updated successfully',\n          type: 'success',\n          duration: 3000\n        });\n      }\n    } catch (uploadError) {\n      debugLog('MBA8080', 'Error uploading profile photo:', uploadError);\n      if (uploadError.response) {\n        debugLog('MBA8080', 'Server error response:', uploadError.response.data);\n      }\n      showToast({\n        message: 'Failed to upload profile photo. Please try again.',\n        type: 'error',\n        duration: 3000\n      });\n    } finally {\n      setIsSaving(false);\n      setShowCropper(false);\n      setSelectedPhoto(null);\n    }\n  };\n  \n  // Simplify the portfolio photo handler\n  const handleAddPortfolioPhoto = async () => {\n    try {\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n      });\n      \n      if (!result.canceled) {\n        setIsSaving(true);\n        \n        // Create form data for photo upload\n        const formData = new FormData();\n        const photoFile = {\n          uri: result.assets[0].uri,\n          type: 'image/jpeg',\n          name: 'portfolio_photo.jpg'\n        };\n        \n        formData.append('portfolio_photo', photoFile);\n        \n        // Upload the photo - don't update state based on response\n        debugLog('MBA4928', 'Uploading portfolio photo');\n        await updateProfileInfo(formData);\n        \n        // Just add to local portfolio photos\n        setPortfolioPhotos([...portfolioPhotos, result.assets[0].uri]);\n        \n        showToast({\n          message: 'Portfolio photo added successfully',\n          type: 'success',\n          duration: 3000\n        });\n      }\n    } catch (error) {\n      debugLog('MBA4928', 'Error adding portfolio photo:', error);\n      showToast({\n        message: 'Failed to add portfolio photo. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  // Add verification button handlers\n  const handleVerificationButton = (type) => {\n    debugLog('MBA9901', `Opening verification modal for type: ${type}`);\n    setVerificationModalType(type);\n    setShowVerificationModal(true);\n  };\n\n  const handleVerificationProceed = () => {\n    if (verificationModalType === 'elite_pro') {\n      // Just close the modal for Elite Pro - it's informational\n      setShowVerificationModal(false);\n      setVerificationModalType(null);\n    } else {\n      // Close modal and navigate to ContactUs for background check and insurance\n      setShowVerificationModal(false);\n      setVerificationModalType(null);\n      \n      // Navigate to ContactUs screen\n      if (navigation) {\n        debugLog('MBA9901', 'Navigating to ContactUs screen for verification');\n        navigation.navigate('ContactUs');\n      } else {\n        // Fallback: show toast with instructions if navigation isn't available\n        debugLog('MBA9901', 'No navigation available, showing toast');\n        showToast({\n          message: 'Please contact us at support@crittrcove.com to begin the verification process',\n          type: 'info',\n          duration: 5000\n        });\n      }\n    }\n  };\n\n  // Check if user qualifies for Elite Pro status\n  const checkEliteProStatus = () => {\n    // Mock data for now - in real implementation, this would come from props\n    const totalBookings = reviews?.length || 0;\n    const averageRating = rating || 0;\n    \n    return totalBookings >= 10 && averageRating >= 5.0;\n  };\n\n\n\n  // Render verification and support section\n  const renderVerificationAndSupport = () => {\n    const isElitePro = checkEliteProStatus();\n\n    return (\n      <View style={[styles.section, isMobile && styles.mobileVerificationSection]}>\n        {/* Professional Verification Section */}\n        {isProfessional && (\n          <>\n            <View style={styles.sectionHeader}>\n              <Text style={styles.sectionTitle}>Professional Verification</Text>\n            </View>\n            <Text style={styles.verificationSectionSubtitle}>\n              Enhance your profile with professional credentials\n            </Text>\n            \n            <View style={styles.verificationButtonsContainer}>\n              {/* Background Check Button */}\n              <TouchableOpacity \n                style={styles.verificationButton}\n                onPress={() => handleVerificationButton('background_check')}\n              >\n                <View style={styles.verificationButtonIcon}>\n                  <MaterialCommunityIcons \n                    name=\"shield-check\" \n                    size={24} \n                    color={theme.colors.primary} \n                  />\n                </View>\n                <View style={styles.verificationButtonContent}>\n                  <Text style={styles.verificationButtonTitle}>Background Verified</Text>\n                  <Text style={styles.verificationButtonSubtitle}>Increase client trust</Text>\n                </View>\n                <MaterialCommunityIcons \n                  name=\"chevron-right\" \n                  size={20} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n\n              {/* Insurance Button */}\n              <TouchableOpacity \n                style={styles.verificationButton}\n                onPress={() => handleVerificationButton('insurance')}\n              >\n                <View style={styles.verificationButtonIcon}>\n                  <MaterialCommunityIcons \n                    name=\"shield-account\" \n                    size={24} \n                    color={theme.colors.primary} \n                  />\n                </View>\n                <View style={styles.verificationButtonContent}>\n                  <Text style={styles.verificationButtonTitle}>Insured Professional</Text>\n                  <Text style={styles.verificationButtonSubtitle}>Additional protection</Text>\n                </View>\n                <MaterialCommunityIcons \n                  name=\"chevron-right\" \n                  size={20} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n\n              {/* Elite Pro Button */}\n              <TouchableOpacity \n                style={[\n                  styles.verificationButton,\n                  isElitePro && styles.verificationButtonElite\n                ]}\n                onPress={() => handleVerificationButton('elite_pro')}\n                disabled={!isElitePro}\n              >\n                <View style={styles.verificationButtonIcon}>\n                  <MaterialCommunityIcons \n                    name=\"star-circle\" \n                    size={24} \n                    color={isElitePro ? theme.colors.warning : theme.colors.placeHolderText} \n                  />\n                </View>\n                <View style={styles.verificationButtonContent}>\n                  <Text style={[\n                    styles.verificationButtonTitle,\n                    isElitePro && styles.verificationButtonTitleElite\n                  ]}>\n                    Elite Pro Status\n                  </Text>\n                  <Text style={[\n                    styles.verificationButtonSubtitle,\n                    isElitePro && styles.verificationButtonSubtitleElite\n                  ]}>\n                    {isElitePro ? 'Congratulations! You\\'re Elite!' : '10+ bookings, 5-star average rating required'}\n                  </Text>\n                </View>\n                <MaterialCommunityIcons \n                  name={isElitePro ? \"crown\" : \"chevron-right\"} \n                  size={20} \n                  color={isElitePro ? theme.colors.warning : theme.colors.placeHolderText} \n                />\n              </TouchableOpacity>\n            </View>\n          </>\n        )}\n\n        {/* Support Section */}\n        <SupportButton \n          style={[isProfessional && styles.donateSectionWithVerification]}\n          showTitle={!isProfessional}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.contentWrapper}>\n        <View style={[styles.mainContent, !isMobile && styles.desktopLayout]}>\n          {/* Profile Photo Section */}\n          <View style={[styles.profileSection, !isMobile && styles.profileSectionDesktop]}>\n            <View style={styles.profileCard}>\n              <TouchableOpacity onPress={handleProfilePhotoSelection} style={styles.profilePhotoContainer}>\n                {profileData.profile_photo ? (\n                  <Image \n                    source={{ \n                      uri: getMediaUrl(profileData.profile_photo)\n                    }} \n                    style={styles.profilePhoto}\n                    onError={(e) => {\n                      debugLog('MBA5080', 'Error loading profile photo:', e.nativeEvent.error);\n                      debugLog('MBA5080', 'Profile photo URI:', getMediaUrl(profileData.profile_photo));\n                    }}\n                  />\n                ) : (\n                  <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n                    <MaterialCommunityIcons name=\"camera-plus\" size={40} color={theme.colors.placeHolderText} />\n                  </View>\n                )}\n                <View style={styles.cameraButton}>\n                  <MaterialCommunityIcons name=\"camera\" size={20} color={theme.colors.background} />\n                </View>\n              </TouchableOpacity>\n              \n              <View style={styles.nameSection}>\n                <Text style={styles.name}>\n                  {name || authName || 'Your Name'}\n                </Text>\n                  <TouchableOpacity \n                    onPress={() => handleEdit('name', displayValues.name)}\n                  style={styles.editButton}\n                  >\n                  <MaterialCommunityIcons name=\"pencil\" size={24} color={theme.colors.primary} />\n                  </TouchableOpacity>\n                </View>\n              \n              <View style={styles.section}>\n                <View style={styles.sectionTitleContainer}>\n                  <MaterialCommunityIcons\n                    name=\"email-outline\"\n                    size={24}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.sectionTitle}>Email</Text>\n                </View>\n                <View style={styles.sectionContent}>\n                  <Text style={styles.sectionText}>\n                    {email || 'Add your email'}\n                  </Text>\n                  <TouchableOpacity \n                    onPress={() => handleEdit('email', displayValues.email)}\n                    style={styles.editButton}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n                  </TouchableOpacity>\n                </View>\n                  </View>\n              \n              <View style={styles.section}>\n                <View style={styles.sectionTitleContainer}>\n                  <MaterialCommunityIcons\n                    name=\"map-marker-outline\"\n                    size={24}\n                    color={theme.colors.text}\n                  />\n                  <Text style={styles.sectionTitle}>Location</Text>\n                </View>\n                <View style={styles.sectionContent}>\n                  <Text style={styles.sectionText}>\n                    {displayValues.location || 'Add your location'}\n                  </Text>\n                  <TouchableOpacity \n                    onPress={() => handleEdit('location', displayValues.location)}\n                    style={styles.editButton}\n                  >\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n                  </TouchableOpacity>\n                </View>\n              </View>\n\n              {/* Mobile: Show verification and support section here */}\n              {isMobile && renderVerificationAndSupport()}\n            </View>\n          </View>\n\n          {/* Right Side Sections */}\n          <View style={[styles.sectionsContainer, { paddingBottom: isMobile ? 150 : 0 }, !isMobile && styles.sectionsContainerDesktop]}>\n            {/* About Me Section */}\n            <View style={[styles.section, { marginBottom: isMobile ? 0 : 16 }]}>\n              <View style={styles.sectionHeader}>\n                <Text style={styles.sectionTitle}>{isProfessional ? 'Professional Bio' : 'About Me'}</Text>\n                <TouchableOpacity \n                  style={styles.editButton}\n                  onPress={() => handleEdit('bio', displayValues.bio)}\n                >\n                  <Text style={styles.editButtonText}>Edit {isProfessional ? 'Bio' : 'About Me'}</Text>\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.bioText}>\n                {displayValues.bio || 'Tell us about yourself...'}\n              </Text>\n            </View>\n\n            {/* Desktop: Show verification and support section here */}\n            {!isMobile && renderVerificationAndSupport()}\n\n            {/* Show either Home & Facilities (for owners) or Insurance (for professionals) */}\n            {/* TODO: UNCOMMONT THIS SECTION after mvp launch and implementation of facilities and insurance */}\n            {/* {isProfessional ? renderInsuranceSection() : renderFacilitiesSection()} */}\n\n            {/* TODO: UNCOMMONT THIS SECTION\n            Portfolio Photos Section - comment this out for now\n            <View style={styles.section}>\n              <View style={styles.sectionHeader}>\n                <Text style={styles.sectionTitle}>Portfolio Photos</Text>\n                <TouchableOpacity \n                  style={styles.addPhotoButton}\n                  onPress={handleAddPortfolioPhoto}\n                >\n                  <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n                  <Text style={styles.addPhotoText}>Add Photos</Text>\n                </TouchableOpacity>\n              </View>\n              <View style={styles.photoGrid}>\n                {portfolioPhotos.map((photo, index) => (\n                  <Image \n                    key={index} \n                    source={{ uri: photo }} \n                    style={styles.portfolioPhoto} \n                  />\n                ))}\n                {portfolioPhotos.length === 0 && (\n                  <Text style={styles.noPhotosText}>No photos added yet</Text>\n                )}\n              </View>\n            </View> */}\n          </View>\n        </View>\n      </View>\n\n      {/* Photo Cropper Modal */}\n      <ProfilePhotoCropper\n        visible={showCropper}\n        imageUri={selectedPhoto}\n        onClose={() => {\n          setShowCropper(false);\n          setSelectedPhoto(null);\n        }}\n        onSave={handleSaveCroppedImage}\n        isUploading={isSaving}\n      />\n\n      {/* Verification Modal */}\n      <VerificationModal\n        visible={showVerificationModal}\n        onClose={() => {\n          setShowVerificationModal(false);\n          setVerificationModalType(null);\n        }}\n        title={\n          verificationModalType === 'background_check' ? 'Background Verification' :\n          verificationModalType === 'insurance' ? 'Insurance Verification' :\n          verificationModalType === 'elite_pro' ? 'Elite Pro Status' : ''\n        }\n        type={verificationModalType}\n        onProceed={handleVerificationProceed}\n      />\n\n      <EditOverlay\n        visible={!!editingField}\n        onClose={() => setEditingField(null)}\n        title={`Edit ${editingField?.charAt(0).toUpperCase()}${editingField?.slice(1)}`}\n        value={editValue}\n        onSave={handleSave}\n        isLocation={editingField === 'location'}\n        isMultiline={editingField === 'bio' || editingField === 'about_me'}\n        isProfessional={isProfessional}\n        isInsurance={editingField === 'insurance'}\n        selectedInsurance={selectedInsurance}\n        onInsuranceChange={setSelectedInsurance}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  contentWrapper: {\n    maxWidth: 1200,\n    alignSelf: 'center',\n    width: '100%',\n    padding: 16,\n  },\n  mainContent: {\n    width: '100%',\n  },\n  desktopLayout: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  profileSection: {\n    marginBottom: 24,\n  },\n  profileSectionDesktop: {\n    width: 300,\n    marginBottom: 0,\n  },\n  profileCard: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n  },\n  profilePhotoContainer: {\n    position: 'relative',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  profilePhoto: {\n    width: 200,\n    height: 200,\n    borderRadius: 100,\n  },\n  profilePhotoPlaceholder: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 2,\n    borderStyle: 'dashed',\n    borderColor: theme.colors.border,\n  },\n  cameraButton: {\n    position: 'absolute',\n    right: 8,\n    bottom: 8,\n    backgroundColor: theme.colors.primary,\n    padding: 8,\n    borderRadius: 20,\n  },\n  profileInfo: {\n    alignItems: 'center',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    marginBottom: 4,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  emailContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    marginBottom: 4,\n  },\n  email: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  locationContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    width: '100%',\n    position: 'relative',\n    paddingHorizontal: 20,\n  },\n  locationIconWrapper: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n  },\n  location: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n    textAlign: 'center',\n    flex: 1,\n  },\n  locationEditIcon: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    padding: 4,\n  },\n  roleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    marginBottom: 4,\n  },\n  role: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  editIcon: {\n    padding: 4,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  rating: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  reviews: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  sectionsContainer: {\n    flex: 1,\n  },\n  sectionsContainerDesktop: {\n    paddingLeft: 24,\n  },\n  section: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  editButton: {\n    backgroundColor: 'transparent',\n  },\n  editButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  bioInput: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    minHeight: 100,\n    textAlignVertical: 'top',\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  facilitiesGrid: {\n    gap: 16,\n  },\n  facilityItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    padding: 12,\n    borderRadius: 8,\n  },\n  facilityContent: {\n    marginLeft: 12,\n  },\n  facilityTitle: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  facilityValue: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginTop: 2,\n  },\n  addPhotoButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    gap: 6,\n  },\n  addPhotoText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    marginTop: 16,\n  },\n  reviewsContainer: {\n    marginBottom: 12,\n  },\n  noReviews: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n  },\n  bioText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    lineHeight: 24,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  locationButtons: {\n    gap: 16,\n  },\n  locationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    justifyContent: 'center',\n    gap: 8,\n  },\n  locationButtonText: {\n    color: theme.colors.background,\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  orText: {\n    textAlign: 'center',\n    color: theme.colors.secondary,\n    fontSize: 14,\n  },\n  multilineInput: {\n    minHeight: 100,\n    textAlignVertical: 'top',\n  },\n  portfolioPhoto: {\n    width: '30%',\n    aspectRatio: 4/3,\n    borderRadius: 8,\n  },\n  noPhotosText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: 20,\n  },\n  facilitiesModalContent: {\n    height: '80%',\n    width: '90%',\n    maxWidth: 500,\n  },\n  facilitiesScrollView: {\n    flex: 1,\n    marginBottom: 16,\n  },\n  facilityPresetItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n    backgroundColor: theme.colors.background,\n  },\n  selectedFacilityPreset: {\n    backgroundColor: theme.colors.primary,\n  },\n  facilityPresetContent: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  facilityPresetTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  facilityPresetDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  selectedFacilityText: {\n    color: theme.colors.background,\n  },\n  checkIcon: {\n    marginLeft: 8,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n  },\n  modalCancelButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n  },\n  modalCancelText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  modalSaveButton: {\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n    backgroundColor: theme.colors.primary,\n  },\n  modalSaveText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  locationModalContent: {\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '90%',\n  },\n  locationContent: {\n    gap: 16,\n    paddingBottom: 16,\n  },\n  addressInstructions: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 8,\n    textAlign: 'center',\n  },\n  addressAutocomplete: {\n    marginBottom: 12,\n  },\n  selectedAddressInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    padding: 12,\n    backgroundColor: theme.colors.mainColors.tertiary + '10',\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.tertiary + '30',\n  },\n  selectedAddressText: {\n    fontSize: 14,\n    color: theme.colors.mainColors.tertiary,\n    fontWeight: '500',\n  },\n  addressForm: {\n    gap: 12,\n  },\n  addressInput: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    minHeight: 44,\n  },\n  addressRow: {\n    flexDirection: 'row',\n    gap: 12,\n    flexWrap: 'wrap',\n  },\n  maxFacilitiesText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 8,\n  },\n  modalSaveButtonDisabled: {\n    opacity: 0.5,\n  },\n  modalInputError: {\n    borderColor: theme.colors.error,\n    borderWidth: 1,\n  },\n  modalInputErrorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 4,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  modalInputCharacterCount: {\n    color: theme.colors.textSecondary,\n    fontSize: 12,\n    marginTop: 4,\n    textAlign: 'right',\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  insuranceContent: {\n    gap: 16,\n  },\n  customInsuranceCard: {\n    alignItems: 'center',\n    gap: 8,\n  },\n  insuranceCardImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n    backgroundColor: theme.colors.background,\n  },\n  insuranceCardText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  insuranceOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 16,\n  },\n  insuranceOptionContent: {\n    flex: 1,\n  },\n  insuranceOptionTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  insuranceOptionDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  editButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  insuranceStepContent: {\n    gap: 16,\n  },\n  insuranceStepTitle: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  insuranceTypeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 16,\n  },\n  insuranceTypeContent: {\n    flex: 1,\n  },\n  insuranceTypeTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  insuranceTypeDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.background,\n    padding: 16,\n    borderRadius: 8,\n    gap: 8,\n  },\n  uploadText: {\n    fontSize: 16,\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  selectedInsuranceOption: {\n    backgroundColor: theme.colors.primary + '20',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n    maxHeight: '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n    position: 'relative',\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  modalTitleCentered: {\n    textAlign: 'center',\n  },\n  backButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    position: 'absolute',\n    left: 0,\n    padding: 8,\n    zIndex: 1,\n  },\n  backButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  modalInput: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  modalCloseButton: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 6,\n  },\n  modalCloseText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  nameSection: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 4,\n  },\n  sectionTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  sectionContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  sectionText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  verificationSectionSubtitle: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 16,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationButtonsContainer: {\n    gap: 12,\n  },\n  verificationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  verificationButtonElite: {\n    backgroundColor: theme.colors.warning + '10',\n    borderColor: theme.colors.warning + '30',\n  },\n  verificationButtonIcon: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: theme.colors.primary + '10',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n  },\n  verificationButtonContent: {\n    flex: 1,\n  },\n  verificationButtonTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 2,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationButtonTitleElite: {\n    color: theme.colors.warning,\n  },\n  verificationButtonSubtitle: {\n    fontSize: 12,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationButtonSubtitleElite: {\n    color: theme.colors.warning,\n  },\n  \n  // Verification modal styles\n  verificationModalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  verificationModalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '100%',\n    maxWidth: 500,\n    maxHeight: '90%',\n  },\n  verificationModalHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  verificationIconContainer: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.primary + '10',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  verificationModalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n    textAlign: 'center',\n    fontFamily: theme.fonts?.header?.fontFamily,\n  },\n  verificationModalClose: {\n    width: 30,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  verificationModalScroll: {\n    maxHeight: 400,\n  },\n     verificationDescription: {\n     fontSize: 16,\n     color: theme.colors.text,\n     lineHeight: 24,\n     padding: 20,\n     textAlign: 'center',\n     fontFamily: theme.fonts?.regular?.fontFamily,\n   },\n   verificationModalSection: {\n     padding: 20,\n     paddingTop: 0,\n   },\n   verificationModalSectionTitle: {\n     fontSize: 18,\n     fontWeight: '600',\n     color: theme.colors.text,\n     marginBottom: 12,\n     fontFamily: theme.fonts?.header?.fontFamily,\n   },\n  verificationStep: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  verificationStepNumber: {\n    width: 24,\n    height: 24,\n    borderRadius: 12,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 12,\n    marginTop: 2,\n  },\n  verificationStepNumberText: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: theme.colors.background,\n  },\n  verificationStepText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    lineHeight: 20,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationBenefit: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  verificationBenefitText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    marginLeft: 8,\n    lineHeight: 20,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationModalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n    padding: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  verificationModalCancelButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  verificationModalCancelText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  verificationModalProceedButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n  },\n  verificationModalProceedText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n\n  // Mobile verification section styles\n  mobileVerificationSection: {\n    backgroundColor: 'transparent',\n    marginTop: 16,\n    padding: 0,\n    borderRadius: 0,\n  },\n\n  // Support section styles\n  donateSectionWithVerification: {\n    paddingTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n});\n\nexport default ProfileInfoTab; ","import React, { useState, useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Switch, ScrollView } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst DAYS_OF_WEEK = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\nconst ServiceIcon = ({ service }) => {\n  const iconMap = {\n    'Dog Walking': 'walk',\n    'Pet Sitting': 'home',\n    'Overnight Care': 'bed',\n    // Add more mappings as needed\n  };\n\n  return (\n    <MaterialCommunityIcons \n      name={iconMap[service] || 'paw'} \n      size={24} \n      color={theme.colors.text} \n    />\n  );\n};\n\nconst ServicesAvailabilityTab = ({\n  services = [\n    {\n      id: 1,\n      name: 'Dog Walking',\n      price: 25,\n      unit: 'walk',\n      isActive: true,\n      unavailableDays: ['Sun']\n    },\n    {\n      id: 2,\n      name: 'Pet Sitting',\n      price: 35,\n      unit: 'visit',\n      isActive: true,\n      unavailableDays: ['Sat', 'Sun']\n    },\n    {\n      id: 3,\n      name: 'Overnight Care',\n      price: 85,\n      unit: 'night',\n      isActive: true,\n      isOvernight: true\n    }\n  ],\n  onToggleService,\n  onEditHours,\n  onBlockService,\n  onPartialDayBlock,\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const navigation = useNavigation();\n  const [selectedService, setSelectedService] = useState(null);\n  const isStacked = screenWidth <= 1250;\n\n  const renderServiceItem = (service, index) => (\n    <TouchableOpacity\n      key={service.id}\n      style={[\n        styles.serviceItem,\n        { backgroundColor: index % 2 === 0 ? \n          theme.colors.proDashboard.secondary : \n          theme.colors.proDashboard.tertiary \n        },\n        selectedService?.id === service.id && styles.selectedServiceItem\n      ]}\n      onPress={() => setSelectedService(service)}\n    >\n      <View style={styles.serviceItemContent}>\n        <ServiceIcon service={service.name} />\n        <View style={styles.serviceInfo}>\n          <Text style={styles.serviceName}>{service.name}</Text>\n          <Text style={styles.servicePrice}>${service.price}/{service.unit}</Text>\n        </View>\n      </View>\n      <Switch\n        value={service.isActive}\n        onValueChange={() => onToggleService(service.id)}\n        trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\n        thumbColor={theme.colors.background}\n      />\n    </TouchableOpacity>\n  );\n\n  const renderDayAvailability = (service) => {\n    if (service.isOvernight) {\n      // For overnight services, show next unavailable date\n      return (\n        <View style={styles.nextUnavailableContainer}>\n          <Text style={styles.nextUnavailableText}>Next Unavailable: Dec 24-25</Text>\n        </View>\n      );\n    }\n\n    return (\n      <ScrollView \n        horizontal \n        showsHorizontalScrollIndicator={false}\n        style={styles.daysScrollContainer}\n        contentContainerStyle={styles.daysContainer}\n      >\n        {DAYS_OF_WEEK.map((day) => {\n          const isUnavailable = service.unavailableDays?.includes(day);\n          return (\n            <View \n              key={day} \n              style={[\n                styles.dayItem,\n                isUnavailable && styles.unavailableDayItem\n              ]}\n            >\n              {isUnavailable && <View style={styles.unavailableSlash} />}\n              <Text style={[\n                styles.dayText,\n                isUnavailable && styles.unavailableDayText\n              ]}>{day}</Text>\n            </View>\n          );\n        })}\n      </ScrollView>\n    );\n  };\n\n  const renderAvailabilitySection = (service, index) => (\n    <View style={styles.availabilitySection}>\n      <View style={styles.availabilityHeader}>\n        <Text style={styles.availabilityTitle}>{service.name}</Text>\n        <TouchableOpacity \n          style={styles.editHoursButton}\n          onPress={() => onEditHours(service.id)}\n        >\n          <Text style={styles.editHoursText}>Edit Hours</Text>\n        </TouchableOpacity>\n      </View>\n      {renderDayAvailability(service)}\n      <Text style={styles.availabilityTime}>\n        {service.isOvernight ? 'Check-in: 3 PM, Check-out: 11 AM' : 'Available 9 AM - 5 PM'}\n      </Text>\n      {index !== services.length - 1 && <View style={styles.availabilityDivider} />}\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={[\n        styles.content,\n        { flexDirection: isStacked ? 'column' : 'row' }\n      ]}>\n        {/* Services Section */}\n        <View style={[\n          styles.servicesSection,\n          !isStacked && { maxWidth: 400 },\n          styles.sectionBox\n        ]}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>Your Services</Text>\n            <TouchableOpacity \n              style={styles.editButton}\n              onPress={() => navigation.navigate('ServiceManager')}\n            >\n              <Text style={styles.editButtonText}>Edit Services</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.servicesList}>\n            {services.map((service, index) => (\n              <View key={service.id} style={styles.serviceWrapper}>\n                {renderServiceItem(service, index)}\n                {index !== services.length - 1 && <View style={styles.serviceDivider} />}\n              </View>\n            ))}\n          </View>\n        </View>\n\n        {/* Availability Section */}\n        <View style={[\n          styles.availabilityContainer,\n          isStacked && { marginTop: 24 },\n          styles.sectionBox\n        ]}>\n          <View style={styles.sectionHeader}>\n            <Text style={styles.sectionTitle}>Availability</Text>\n          </View>\n          <ScrollView \n            horizontal \n            showsHorizontalScrollIndicator={false}\n            style={styles.controlsScrollContainer}\n            contentContainerStyle={styles.availabilityControls}\n          >\n            <TouchableOpacity \n              style={styles.controlButton}\n              onPress={onBlockService}\n            >\n              <View style={styles.blockButtonContent}>\n                <MaterialCommunityIcons name=\"block-helper\" size={20} color={theme.colors.error} />\n                <Text style={styles.blockButtonText}>Block All Services</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={styles.controlButton}\n              onPress={onPartialDayBlock}\n            >\n              <View style={styles.partialBlockButtonContent}>\n                <MaterialCommunityIcons name=\"clock-outline\" size={20} color=\"#F97316\" />\n                <Text style={styles.partialBlockText}>Partial Day Block</Text>\n              </View>\n            </TouchableOpacity>\n            <TouchableOpacity \n              style={styles.controlButton}\n            >\n              <View style={styles.dateRangeButtonContent}>\n                <MaterialCommunityIcons name=\"calendar-range\" size={20} color=\"#3B82F6\" />\n                <Text style={styles.dateRangeText}>Date Range</Text>\n              </View>\n            </TouchableOpacity>\n          </ScrollView>\n          <View style={styles.controlsDivider} />\n          <View style={styles.availabilityList}>\n            {services.map((service, index) => renderAvailabilitySection(service, index))}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  content: {\n    padding: 24,\n    gap: 24,\n  },\n  sectionBox: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    alignSelf: 'flex-start',\n  },\n  servicesSection: {\n    width: '100%',\n  },\n  servicesList: {\n    width: '100%',\n  },\n  serviceWrapper: {\n    width: '100%',\n  },\n  serviceItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  selectedServiceItem: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  serviceItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  serviceInfo: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  serviceName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  servicePrice: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  availabilityContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  controlsScrollContainer: {\n    marginBottom: 16,\n  },\n  availabilityControls: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  controlsDivider: {\n    height: 1,\n    backgroundColor: theme.colors.surface,\n    marginBottom: 16,\n  },\n  daysScrollContainer: {\n    marginBottom: 12,\n  },\n  daysContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  availabilityDivider: {\n    height: 4,\n    backgroundColor: theme.colors.surface,\n    marginTop: 16,\n  },\n  availabilitySection: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  availabilityHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  availabilityTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  editHoursButton: {\n    backgroundColor: 'transparent',\n  },\n  editHoursText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  dayItem: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: 'transparent',\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  petsittingDayItem: {\n    backgroundColor: theme.colors.warningLight,\n  },\n  dayText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n    zIndex: 1,\n  },\n  availabilityTime: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  serviceDivider: {\n    // height: 1,\n    backgroundColor: theme.colors.surface,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  availabilityList: {\n    width: '100%',\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  editButton: {\n    backgroundColor: 'transparent',\n  },\n  editButtonText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  controlButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  blockButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#FEE2E2',\n    gap: 6,\n  },\n  blockButtonText: {\n    color: theme.colors.error,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  partialBlockButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#FFEDD5',\n    gap: 6,\n  },\n  partialBlockText: {\n    color: '#F97316',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  dateRangeButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: '#EFF6FF',\n    gap: 6,\n  },\n  dateRangeText: {\n    color: '#3B82F6',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  unavailableDayItem: {\n    borderColor: theme.colors.error,\n  },\n  unavailableSlash: {\n    position: 'absolute',\n    top: '50%',\n    left: -5,\n    right: -5,\n    height: 1,\n    backgroundColor: theme.colors.error,\n    transform: [{ rotate: '45deg' }],\n  },\n  unavailableDayText: {\n    color: theme.colors.error,\n  },\n  nextUnavailableContainer: {\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n  },\n  nextUnavailableText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n});\n\nexport default ServicesAvailabilityTab; ","// This is a calculation for the addpet.js file\nexport const calculateAge = (birthday) => {\n  if (!birthday) return '';\n  const today = new Date();\n  const birthDate = new Date(birthday);\n  let ageYears = today.getFullYear() - birthDate.getFullYear();\n  let ageMonths = today.getMonth() - birthDate.getMonth();\n\n  if (ageMonths < 0) {\n    ageYears--;\n    ageMonths += 12;\n  }\n\n  let result = '';\n  if (ageYears > 0) {\n    result += `${ageYears} year${ageYears > 1 ? 's' : ''}`;\n  }\n  if (ageMonths > 0) {\n    if (result) result += ' ';\n    result += `${ageMonths} month${ageMonths > 1 ? 's' : ''}`;\n  }\n  if (!result) result = '< 1 month';\n  return result;\n};\n\nexport const calculateProratedMultiplier = (startDate, endDate, startTime, endTime, timeUnit) => {\n    // Parse the dates and times separately\n    const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n    const [startHour, startMinute] = startTime.split(':').map(Number);\n    const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n    const [endHour, endMinute] = endTime.split(':').map(Number);\n\n    console.log('MBA12348785 ========= Starting calculateProratedMultiplier =========');\n    console.log('MBA12348785 Input parameters:', {\n        startDate,\n        endDate,\n        startTime,\n        endTime,\n        timeUnit\n    });\n\n    console.log('MBA12348785 Parsed components:', {\n        start: {\n            year: startYear,\n            month: startMonth,\n            day: startDay,\n            hour: startHour,\n            minute: startMinute\n        },\n        end: {\n            year: endYear,\n            month: endMonth,\n            day: endDay,\n            hour: endHour,\n            minute: endMinute\n        }\n    });\n\n    // Calculate days difference directly\n    const startDateOnly = new Date(Date.UTC(startYear, startMonth - 1, startDay));\n    const endDateOnly = new Date(Date.UTC(endYear, endMonth - 1, endDay));\n    const daysDiff = Math.floor((endDateOnly - startDateOnly) / (1000 * 60 * 60 * 24));\n    const daysDiffHours = daysDiff * 24;\n    \n    console.log('MBA12348785 Date difference calculation:', {\n        startDateOnly: startDateOnly.toISOString(),\n        endDateOnly: endDateOnly.toISOString(),\n        daysDiff,\n        daysDiffHours\n    });\n    \n    // Calculate time difference\n    const startTimeMinutes = startHour * 60 + startMinute;\n    const endTimeMinutes = endHour * 60 + endMinute;\n    const timeDiffHours = (endTimeMinutes - startTimeMinutes) / 60;\n    \n    console.log('MBA12348785 Time difference calculation:', {\n        startTimeMinutes,\n        endTimeMinutes,\n        timeDiffHours\n    });\n    \n    // Total hours is days difference plus time difference\n    const totalHours = daysDiffHours + timeDiffHours;\n    \n    console.log('MBA12348785 Total duration:', {\n        daysDiffHours,\n        timeDiffHours,\n        totalHours\n    });\n\n    let result;\n    switch(timeUnit) {\n        case '15 Min':\n            result = totalHours / .25;\n            break;\n        case '30 Min':\n            result = totalHours / .5;\n            break;\n        case '45 Min':\n            result = totalHours / .75;\n            break;\n        case '1 Hour':\n            result = totalHours / 1;\n            break;\n        case '2 Hour':\n            result = totalHours / 2;\n            break;\n        case '3 Hour':\n            result = totalHours / 3;\n            break;\n        case '4 Hour':\n            result = totalHours / 4;\n            break;\n        case '5 Hour':\n            result = totalHours / 5;\n            break;\n        case '6 Hour':\n            result = totalHours / 6;\n            break;\n        case '7 Hour':\n            result = totalHours / 7;\n            break;\n        case '8 Hour':\n            result = totalHours / 8;\n            break;\n        case '24 Hour':\n        case 'Per Day':\n            result = totalHours / 24;\n            break;\n        case 'Week':\n            result = totalHours / 168;\n            break;\n        case 'Per Visit':\n            result = 1;\n            break;\n        default:\n            result = 1;\n    }\n\n    console.log('MBA12348785 Final calculation:', {\n        timeUnit,\n        totalHours,\n        divisor: timeUnit === 'Per Visit' ? 1 : timeUnit === 'Week' ? 168 : parseInt(timeUnit) || 24,\n        result\n    });\n    console.log('MBA12348785 ========= End calculateProratedMultiplier =========');\n\n    return result;\n};\n  \n// Implementation of the backend's calculate_cost function in JavaScript\nexport const calculateOccurrenceCost = (occurrenceData, numPets = 0) => {\n    console.log('MBA93652 Starting cost calculation with data:', {\n        occurrenceData,\n        numPets\n    });\n\n    // Extract values from occurrence data\n    const {\n        start_date,\n        end_date,\n        start_time,\n        end_time,\n        rates: {\n            base_rate,\n            additional_animal_rate,\n            applies_after,\n            holiday_rate,\n            unit_of_time,\n            additional_rates = []\n        }\n    } = occurrenceData;\n\n    // Calculate number of units needed (this already handles the unit_of_time appropriately)\n    const numberOfUnits = calculateProratedMultiplier(\n        start_date,\n        end_date,\n        start_time,\n        end_time,\n        unit_of_time\n    );\n\n    console.log('MBA93652 calculateProratedMultiplier returned:', {\n        numberOfUnits,\n        unit_of_time,\n        start: `${start_date} ${start_time}`,\n        end: `${end_date} ${end_time}`\n    });\n    \n    // Calculate base cost - simply multiply base rate by number of units\n    const baseTotal = parseFloat(base_rate) * numberOfUnits;\n\n    console.log('MBA93652 Base cost calculation:', {\n        numberOfUnits,\n        baseTotal,\n        base_rate\n    });\n\n    // Calculate additional animal cost\n    let additionalAnimalRateTotal = 0;\n    if (numPets > parseInt(applies_after)) {\n        const additionalPets = numPets - parseInt(applies_after);\n        additionalAnimalRateTotal = parseFloat(additional_animal_rate) * additionalPets;\n    }\n\n    console.log('MBA93652 Additional animal cost:', {\n        additionalAnimalRateTotal,\n        numPets,\n        applies_after,\n        additional_animal_rate\n    });\n\n    // Add holiday rate if applicable (currently not implemented)\n    const holidayRateTotal = 0;\n\n    // Calculate additional rates total\n    const additionalRatesTotal = additional_rates.reduce((sum, rate) => \n        sum + parseFloat(rate.amount || 0), 0);\n\n    console.log('MBA93652 Additional rates:', {\n        additionalRatesTotal,\n        additional_rates\n    });\n\n    // Calculate total\n    const totalCost = baseTotal + additionalAnimalRateTotal + holidayRateTotal + additionalRatesTotal;\n\n    console.log('MBA93652 Final calculation:', {\n        baseTotal,\n        additionalAnimalRateTotal,\n        holidayRateTotal,\n        additionalRatesTotal,\n        totalCost\n    });\n\n    return {\n        base_total: baseTotal,\n        multiplier: numberOfUnits,\n        additional_animal_rate_total: additionalAnimalRateTotal,\n        holiday_rate_total: holidayRateTotal,\n        additional_rates_total: additionalRatesTotal,\n        total_cost: totalCost\n    };\n};","import React, { useState, useRef, useMemo, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image, TextInput, ScrollView, Platform, Modal, Dimensions, TouchableWithoutFeedback } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\nimport { getMediaUrl } from '../../config/config';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { addPet, updatePet, fixPetOwner, deletePet } from '../../api/API';\nimport { useToast } from '../../components/ToastProvider';\nimport ConfirmationModal from '../ConfirmationModal';\nimport { calculateAge } from '../../data/calculations';\nimport * as ImagePicker from 'expo-image-picker';\nimport ProfilePhotoCropper from './ProfilePhotoCropper';\nimport { processImageWithCrop, prepareImageForUpload } from '../../utils/imageCropUtils';\nimport { sanitizeInput, validateName, validatePhoneNumber } from '../../validation/validation';\n\nconst PetsPreferencesTab = ({\n  pets = [],\n  preferences = {\n    homeEnvironment: [],\n    emergencyContacts: [],\n    authorizedHouseholdMembers: []\n  },\n  onAddPet,\n  onEditPet,\n  onDeletePet,\n  onReplacePet, // New prop for atomic replace operation\n  onUpdatePreferences,\n  userRole,\n  isMobile,\n}) => {\n  // Debug the initial pets array\n  debugLog(\"MBAi39gh45v\", \"COMPONENT INIT - Pets provided to component:\", \n    Array.isArray(pets) ? pets.map(p => ({ id: p.id, name: p.name || 'unnamed' })) : 'Not an array');\n    \n  // Debug the available callback functions\n  debugLog(\"MBAi39gh45v\", \"COMPONENT INIT - Available callbacks:\", {\n    hasOnAddPet: !!onAddPet,\n    hasOnEditPet: !!onEditPet,\n    hasOnDeletePet: !!onDeletePet,\n    hasOnReplacePet: !!onReplacePet\n  });\n  const [expandedPetIds, setExpandedPetIds] = useState(new Set());\n  const [newEmergencyContact, setNewEmergencyContact] = useState({ name: '', phone: '' });\n  const [newHouseholdMember, setNewHouseholdMember] = useState({ name: '', phone: '' });\n  const [isAddingEmergencyContact, setIsAddingEmergencyContact] = useState(false);\n  const [isAddingHouseholdMember, setIsAddingHouseholdMember] = useState(false);\n  const [editingPetIds, setEditingPetIds] = useState(new Set());\n  const [editedPetsData, setEditedPetsData] = useState({});\n  const [expandedSections, setExpandedSections] = useState({});\n  const [datePickerConfig, setDatePickerConfig] = useState({\n    isVisible: false,\n    currentField: null,\n    currentPetId: null,\n    selectedDate: new Date()\n  });\n  \n  // Add state for calendar display\n  const [displayMonth, setDisplayMonth] = useState(new Date().getMonth());\n  const [displayYear, setDisplayYear] = useState(new Date().getFullYear());\n  const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\n  const toast = useToast();\n\n  // Add this new variable to track if a save operation is in progress\n  const [savingPet, setSavingPet] = useState(false);\n\n  // Add this near other state declarations\n  const [showSuccessModals, setShowSuccessModals] = useState(true);\n\n  // Add state for delete confirmation modal\n  const [deleteConfirmation, setDeleteConfirmation] = useState({\n    visible: false,\n    petId: null,\n    petName: '',\n    isDeleting: false\n  });\n\n  // Add these new state variables at the top of the component with other state declarations\n  const [showMonthPicker, setShowMonthPicker] = useState(false);\n  const [showYearPicker, setShowYearPicker] = useState(false);\n\n  // Add state for pet photo cropping\n  const [selectedPetPhotoUri, setSelectedPetPhotoUri] = useState(null);\n  const [showPetPhotoCropper, setShowPetPhotoCropper] = useState(false);\n  const [currentEditingPetId, setCurrentEditingPetId] = useState(null);\n  const [isUploadingPhoto, setIsUploadingPhoto] = useState(false);\n  \n  // Add validation state\n  const [validationErrors, setValidationErrors] = useState({});\n  const [contactValidationErrors, setContactValidationErrors] = useState({});\n\n  // Add window resize listener\n  useEffect(() => {\n    const updateWidth = () => {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n\n    Dimensions.addEventListener('change', updateWidth);\n    \n    return () => {\n      // For newer React Native versions, we would use remove\n      // In case this component is using an older version, handle appropriately\n      if (Dimensions.removeEventListener) {\n        Dimensions.removeEventListener('change', updateWidth);\n      }\n    };\n  }, []);\n\n  // Define all available facilities\n  const allFacilities = [\n    { id: 'yard', label: 'Fully fenced backyard', icon: 'fence' },\n    { id: 'roam', label: 'Free roam of house', icon: 'home' },\n    { id: 'ac', label: 'Air Conditioned', icon: 'snowflake' },\n    { id: 'furniture', label: 'Allowed on furniture', icon: 'sofa' },\n    { id: 'bed', label: 'Allowed on bed', icon: 'bed' },\n    { id: 'crate', label: 'Crate Available', icon: 'gate' },\n    { id: 'pet_door', label: 'Pet Door', icon: 'door' },\n    { id: 'toys', label: 'Pet Toy Collection', icon: 'handball' },\n    { id: 'first_aid', label: 'Pet First Aid Kit', icon: 'medical-bag' },\n    { id: 'cameras', label: 'Pet Cameras', icon: 'cctv' },\n    { id: 'covered_patio', label: 'Covered Patio', icon: 'umbrella' },\n    { id: 'garden', label: 'Pet-Safe Garden', icon: 'flower' },\n    { id: 'heating', label: 'Central Heating', icon: 'fire' },\n    { id: 'feeding_station', label: 'Feeding Station', icon: 'food-variant' },\n    { id: 'water_fountain', label: 'Water Fountain', icon: 'fountain' },\n    { id: 'scratching_post', label: 'Cat Posts', icon: 'cat' },\n    { id: 'litter_area', label: 'Private Litter Area', icon: 'broom' }\n  ];\n\n  // Define selectable options for dropdowns\n  const yesNoOptions = [\"Yes\", \"No\", \"N/A\"];\n  const energyLevelOptions = [\"Low\", \"Medium\", \"High\", \"N/A\"];\n  const sexOptions = [\"Male\", \"Female\"];\n\n  // Add at the top of the component, after the other utility functions\n  \n  // Helper function to safely convert any value to a display string\n  const safeDisplayText = (value, defaultText = '') => {\n    if (value === null || value === undefined) {\n      return defaultText;\n    }\n    \n    if (typeof value === 'string') {\n      return value;\n    }\n    \n    if (typeof value === 'number' || typeof value === 'boolean') {\n      return String(value);\n    }\n    \n    // For any other type (like objects), return the default\n    return defaultText;\n  };\n  \n  const returnYesNoContainer = (pet, attributeName) => {\n    let displayValue = 'No Option Selected';\n    \n    if (pet && attributeName) {\n      if (pet[attributeName] === null) {\n        displayValue = 'N/A';\n      } else if (pet[attributeName] === true) {\n        displayValue = 'Yes';\n      } else if (pet[attributeName] === false) {\n        displayValue = 'No';\n      } else if (typeof pet[attributeName] === 'string') {\n        displayValue = pet[attributeName];\n      }\n      // If pet[attributeName] is an object or other non-string type, keep the default \"No Option Selected\"\n    }\n    \n    return (\n      <View style={styles.dropdownContainer}>\n        <Text style={styles.dropdownText}>{displayValue}</Text>\n      </View>\n    );\n  };\n\n  const returnEnergyLevelContainer = (pet) => {\n    // Map backend value to frontend display value\n    let displayValue = 'No Option Selected';\n    \n    // Make sure pet exists before trying to access its energyLevel property\n    if (pet && pet.energyLevel !== undefined) {\n      if (pet.energyLevel === null) {\n        displayValue = 'N/A';\n      } else if (pet.energyLevel === 'LOW') {\n        displayValue = 'Low';\n      } else if (pet.energyLevel === 'MODERATE') {\n        displayValue = 'Medium';\n      } else if (pet.energyLevel === 'HIGH') {\n        displayValue = 'High';\n      } else if (typeof pet.energyLevel === 'string') {\n        displayValue = pet.energyLevel ? pet.energyLevel : \"None selected yet\"; // Fallback to whatever string is there\n      } else if (pet.energyLevel && typeof pet.energyLevel === 'object') {\n        displayValue = 'No Option Selected';\n      }\n    }\n    \n    return (\n      <View style={styles.dropdownContainer}>\n        <Text style={styles.dropdownText}>{displayValue}</Text>\n      </View>\n    );\n  };\n\n  const togglePetDetails = (petId) => {\n    // Remove the condition that prevents toggling when editing\n    // We want to allow collapsing/expanding even in edit mode\n    setExpandedPetIds(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(petId)) {\n        newSet.delete(petId);\n      } else {\n        newSet.add(petId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleEditPet = (petId) => {\n    // Clone the current pet data to edit\n    const petToEdit = pets.find(pet => pet.id === petId);\n    \n    // Make sure medications is a string, not an object\n    const editData = {...petToEdit};\n    if (editData.medications && typeof editData.medications === 'object') {\n      editData.medications = '';\n    }\n    \n    // Map boolean/null values to \"Yes\"/\"No\"/\"N/A\" for UI compatibility fields\n    const booleanToYesNo = (value) => {\n      if (value === true) return \"Yes\";\n      if (value === false) return \"No\";\n      return \"N/A\";\n    };\n    \n    // Convert backend compatibility fields to UI-friendly format\n    if (petToEdit) {\n      editData.childrenFriendly = booleanToYesNo(petToEdit.friendly_with_children);\n      editData.catFriendly = booleanToYesNo(petToEdit.friendly_with_cats);\n      editData.dogFriendly = booleanToYesNo(petToEdit.friendly_with_dogs);\n      editData.spayedNeutered = booleanToYesNo(petToEdit.spayed_neutered);\n      editData.houseTrained = booleanToYesNo(petToEdit.house_trained);\n      editData.microchipped = booleanToYesNo(petToEdit.microchipped);\n      editData.canBeLeftAlone = booleanToYesNo(petToEdit.can_be_left_alone);\n      \n      // Also map the corresponding gets_along_with_* fields for compatibility\n      editData.getsAlongWithChildren = editData.childrenFriendly;\n      editData.getsAlongWithCats = editData.catFriendly;\n      editData.getsAlongWithDogs = editData.dogFriendly;\n    }\n    \n    // Update the edited data for this specific pet\n    setEditedPetsData(prev => ({\n      ...prev,\n      [petId]: editData\n    }));\n    \n    // Add this pet's ID to the set of pets being edited\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(petId);\n      return newSet;\n    });\n  };\n  \n  const handleFixPet = async (petId) => {\n    try {\n      debugLog(\"MBA456\", \"Attempting to fix pet with ID:\", petId);\n      \n      // Show fixing toast\n      toast({\n        message: \"Attempting to repair pet data. Please wait...\",\n        type: 'info',\n        duration: 4000\n      });\n      \n      // Call the fix pet owner API\n      const response = await fixPetOwner(petId);\n      debugLog(\"MBA456\", \"Successfully fixed pet owner:\", response);\n      \n      // Update the pet data with the fixed pet info\n      if (response && response.pet) {\n        // Find the current pet data\n        const currentPetIndex = pets.findIndex(pet => pet.id === petId);\n        if (currentPetIndex !== -1) {\n          // Create updated pet data\n          const updatedPet = {\n            ...pets[currentPetIndex],\n            ...response.pet,\n            // Ensure UI-specific fields are updated\n            type: response.pet.species || pets[currentPetIndex].type,\n            feedingInstructions: response.pet.feeding_schedule || pets[currentPetIndex].feedingInstructions,\n            medicalNotes: response.pet.medication_notes || pets[currentPetIndex].medicalNotes,\n            pottyBreakSchedule: response.pet.potty_break_schedule || pets[currentPetIndex].pottyBreakSchedule,\n            specialCareInstructions: response.pet.special_care_instructions || pets[currentPetIndex].specialCareInstructions,\n            birthday: response.pet.birthday ? formatDateFromBackend(response.pet.birthday) : pets[currentPetIndex].birthday,\n            adoptionDate: response.pet.adoption_date ? formatDateFromBackend(response.pet.adoption_date) : pets[currentPetIndex].adoptionDate,\n            lastEditFailed: false // Clear the error flag\n          };\n          \n          // Update the pet in the parent component\n          onEditPet(petId, updatedPet);\n          \n          // Show success toast\n          toast({\n            message: \"The pet's owner has been restored. You should now be able to edit this pet normally.\",\n            type: 'success',\n            duration: 5000\n          });\n        }\n      }\n    } catch (error) {\n      debugLog(\"MBA456\", \"Error fixing pet:\", error);\n      \n      // Show error toast\n      let errorMessage = \"There was a problem fixing the pet. Please try again or contact support.\";\n      \n      if (error.response && error.response.data) {\n        if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        }\n      }\n      \n      toast({\n        message: errorMessage,\n        type: 'error',\n        duration: 5000\n      });\n    }\n  };\n  \n  const handleDeletePet = async (petId) => {\n    // Find the pet to get its name for the confirmation\n    const petToDelete = pets.find(pet => pet.id === petId);\n    \n    // Log the petId and found pet for debugging\n    debugLog(\"MBA456\", \"DELETE PET - Attempting to delete pet with ID:\", petId);\n    debugLog(\"MBA456\", \"DELETE PET - Found pet:\", petToDelete ? { id: petToDelete.id, name: petToDelete.name } : \"Pet not found\");\n    \n    // Safety check - if pet is not found or has no ID, show error\n    if (!petToDelete) {\n      toast({\n        message: `Unable to delete pet - could not find pet with ID ${petId}`,\n        type: 'error',\n        duration: 4000\n      });\n      return;\n    }\n    \n    const petName = petToDelete.name || 'this pet';\n    \n    // Show confirmation modal with the real pet ID from the pet object\n    setDeleteConfirmation({\n      visible: true,\n      petId: petToDelete.id, // Use the pet's actual ID from the object\n      petName: petName,\n      isDeleting: false\n    });\n  };\n  \n  const confirmDeletePet = async () => {\n    try {\n      const { petId, petName } = deleteConfirmation;\n      \n      // Set deleting state\n      setDeleteConfirmation(prev => ({ ...prev, isDeleting: true }));\n      \n      debugLog(\"MBA456\", \"Attempting to delete pet with ID:\", petId);\n      \n      // Show deleting toast\n      toast({\n        message: `Deleting ${petName}...`,\n        type: 'info',\n        duration: 4000\n      });\n      \n      // Call the delete pet API\n      await deletePet(petId);\n      debugLog(\"MBA456\", \"Successfully deleted pet:\", petId);\n      \n      // Remove the pet from the parent component's state\n      onDeletePet(petId);\n      \n      // Hide modal\n      setDeleteConfirmation({\n        visible: false,\n        petId: null,\n        petName: '',\n        isDeleting: false\n      });\n      \n      // Show success toast\n      toast({\n        message: `${petName} has been successfully deleted.`,\n        type: 'success',\n        duration: 4000\n      });\n      \n    } catch (error) {\n      debugLog(\"MBA456\", \"Error deleting pet:\", error);\n      \n      // Reset deleting state but keep modal open\n      setDeleteConfirmation(prev => ({ ...prev, isDeleting: false }));\n      \n      // Show error toast\n      let errorMessage = \"There was a problem deleting the pet. Please try again or contact support.\";\n      \n      if (error.response && error.response.data) {\n        if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        }\n      }\n      \n      toast({\n        message: errorMessage,\n        type: 'error',\n        duration: 5000\n      });\n    }\n  };\n  \n  const cancelDeletePet = () => {\n    setDeleteConfirmation({\n      visible: false,\n      petId: null,\n      petName: '',\n      isDeleting: false\n    });\n  };\n  \n  const formatDateForBackend = (dateString) => {\n    if (!dateString) return null;\n    \n    // Convert from MM-DD-YYYY to YYYY-MM-DD\n    const [month, day, year] = dateString.split('-');\n    return `${year}-${month}-${day}`;\n  };\n  \n  // Helper function to convert dates from backend format to frontend format\n  const formatDateFromBackend = (dateString) => {\n    if (!dateString) return null;\n    \n    // Convert from YYYY-MM-DD to MM-DD-YYYY\n    const [year, month, day] = dateString.split('-');\n    return `${month}-${day}-${year}`;\n  };\n  \n  const handleSavePetEdit = async (petId) => {\n    try {\n      // Set saving indicator to prevent duplicate saves\n      setSavingPet(true);\n      \n      // Get the edited data for this pet\n      const petData = editedPetsData[petId] || {};\n      \n      // Make a copy of the current pets list before any operations\n      // This ensures we can restore it if something goes wrong\n      const currentPetsList = [...pets];\n      debugLog(\"MBA456\", \"SAVE PET - Saving current pets list state:\", \n        currentPetsList.map(p => ({ id: p.id, name: p.name || 'unnamed' }))\n      );\n      \n      debugLog(\"MBA456\", \"SAVE PET - Starting to save pet:\", { petId, petData });\n      \n      // Check if this is a new pet\n      const isNewPet = petId && petId.toString().startsWith('temp_');\n      \n      // Helper function to convert Yes/No/N/A to true/false/null\n      const convertYesNoToBoolean = (value) => {\n        if (value === 'Yes') return true;\n        if (value === 'No') return false;\n        return null; // For N/A or undefined\n      };\n      \n      // Sanitize the pet data before saving\n      const sanitizedPetData = {\n        name: sanitizeInput(petData.name || '', 'name', { maxLength: 50 }),\n        breed: sanitizeInput(petData.breed || '', 'name', { maxLength: 50 }),\n        type: sanitizeInput(petData.type || '', 'name', { maxLength: 50 }),\n        feedingInstructions: sanitizeInput(petData.feedingInstructions || '', 'description', { maxLength: 500 }),\n        medicalNotes: sanitizeInput(petData.medicalNotes || '', 'description', { maxLength: 500 }),\n        pottyBreakSchedule: sanitizeInput(petData.pottyBreakSchedule || '', 'description', { maxLength: 500 }),\n        specialCareInstructions: sanitizeInput(petData.specialCareInstructions || '', 'description', { maxLength: 500 }),\n        medications: sanitizeInput(petData.medications || '', 'description', { maxLength: 500 }),\n        vetName: sanitizeInput(petData.vetName || '', 'general', { maxLength: 100 }),\n        vetAddress: sanitizeInput(petData.vetAddress || '', 'description', { maxLength: 200 }),\n        insuranceProvider: sanitizeInput(petData.insuranceProvider || '', 'general', { maxLength: 100 }),\n        // These fields don't need sanitization as they're controlled inputs\n        birthday: petData.birthday,\n        adoptionDate: petData.adoptionDate,\n        weight: petData.weight,\n        microchipId: petData.microchipId,\n        sex: petData.sex,\n        allergies: petData.allergies,\n        vaccinations: petData.vaccinations,\n        vetPhone: petData.vetPhone, // Already sanitized in phone validation\n      };\n      \n      debugLog(\"MBA456\", \"SAVE PET - Sanitized pet data:\", {\n        originalName: petData.name,\n        sanitizedName: sanitizedPetData.name,\n        originalBreed: petData.breed,\n        sanitizedBreed: sanitizedPetData.breed\n      });\n      \n      // Format the pet data for the API\n      let petToSave = {\n        name: sanitizedPetData.name,\n        breed: sanitizedPetData.breed,\n        birthday: sanitizedPetData.birthday ? formatDateForBackend(sanitizedPetData.birthday) : null,\n        adoption_date: sanitizedPetData.adoptionDate ? formatDateForBackend(sanitizedPetData.adoptionDate) : null,\n        weight: sanitizedPetData.weight || null,\n        feeding_schedule: sanitizedPetData.feedingInstructions,\n        medication_notes: sanitizedPetData.medicalNotes,\n        potty_break_schedule: sanitizedPetData.pottyBreakSchedule,\n        special_care_instructions: sanitizedPetData.specialCareInstructions,\n        species: sanitizedPetData.type,\n        microchip_id: sanitizedPetData.microchipId || '',\n        sex: sanitizedPetData.sex || null,\n        medications: sanitizedPetData.medications,\n        allergies: sanitizedPetData.allergies || '',\n        vaccinations: sanitizedPetData.vaccinations || '',\n        vet_name: sanitizedPetData.vetName,\n        vet_address: sanitizedPetData.vetAddress || '',\n        vet_phone: sanitizedPetData.vetPhone || '',\n        insurance_provider: sanitizedPetData.insuranceProvider,\n        // Use the correct field names for the backend\n        spayed_neutered: convertYesNoToBoolean(petData.spayedNeutered),\n        house_trained: convertYesNoToBoolean(petData.houseTrained),\n        friendly_with_dogs: convertYesNoToBoolean(petData.dogFriendly),\n        friendly_with_cats: convertYesNoToBoolean(petData.catFriendly),\n        friendly_with_children: convertYesNoToBoolean(petData.childrenFriendly),\n        microchipped: convertYesNoToBoolean(petData.microchipped),\n        can_be_left_alone: convertYesNoToBoolean(petData.canBeLeftAlone),\n        // Use the exact energy level values expected by the backend\n        energy_level: petData.energyLevel || null,\n      };\n      \n      debugLog(\"MBA456\", \"SAVE PET - Formatted pet compatibility fields:\", { \n        friendly_with_children: petToSave.friendly_with_children,\n        friendly_with_cats: petToSave.friendly_with_cats,\n        friendly_with_dogs: petToSave.friendly_with_dogs,\n        spayed_neutered: petToSave.spayed_neutered,\n        house_trained: petToSave.house_trained,\n        microchipped: petToSave.microchipped,\n        can_be_left_alone: petToSave.can_be_left_alone,\n        energy_level: petToSave.energy_level\n      });\n      \n      // Create a FormData object for sending multipart/form-data (needed for file upload)\n      const formData = new FormData();\n      \n      // Add the pet photo if available\n      if (petData.photo) {\n        debugLog(\"MBA5555\", \"Adding pet photo to form data\");\n        \n        // Add old pet photo URL for deletion, if this is an existing pet\n        if (!isNewPet) {\n          const currentPet = pets.find(p => p.id === petId);\n          if (currentPet && currentPet.profile_photo) {\n            formData.append('old_profile_photo_url', currentPet.profile_photo);\n          }\n        }\n        \n        // If it's a base64 image (web platform)\n        if (petData.photo.base64Data) {\n          formData.append('pet_photo_base64', petData.photo.base64Data);\n        } \n        // If it's a file URI (native platforms)\n        else if (petData.photo.uri) {\n          const photoFile = {\n            uri: Platform.OS === 'android' ? petData.photo.uri : petData.photo.uri.replace('file://', ''),\n            type: 'image/jpeg',\n            name: 'pet_photo.jpg'\n          };\n          formData.append('pet_photo', photoFile);\n          \n          // Add crop parameters if provided\n          if (petData.photo.cropParams) {\n            formData.append('crop_params', JSON.stringify(petData.photo.cropParams));\n          }\n        }\n      }\n      \n      // Add all the pet data fields to the FormData\n      Object.entries(petToSave).forEach(([key, value]) => {\n        // Only add fields that have values\n        if (value !== null && value !== undefined) {\n          // Convert boolean values to strings for FormData\n          if (typeof value === 'boolean') {\n            formData.append(key, value.toString());\n          } else {\n            formData.append(key, value);\n          }\n        }\n      });\n      \n      let response;\n      \n      if (isNewPet) {\n        try {\n          // This is a new pet, add it\n          debugLog(\"MBA456\", \"Adding new pet with data:\", {\n            name: petToSave.name,\n            species: petToSave.species,\n            breed: petToSave.breed\n          });\n          \n          // Create a direct copy of the pet data for UI use in case the API call fails\n          const uiSafePet = {\n            id: petId, // Keep using the temp ID for now\n            name: petToSave.name || 'New Pet',\n            type: petToSave.species || '',\n            breed: petToSave.breed || '',\n            // Map all the other fields for UI display\n            childrenFriendly: petData.childrenFriendly || 'N/A',\n            catFriendly: petData.catFriendly || 'N/A',\n            dogFriendly: petData.dogFriendly || 'N/A',\n            houseTrained: petData.houseTrained || 'N/A',\n            spayedNeutered: petData.spayedNeutered || 'N/A',\n            microchipped: petData.microchipped || 'N/A',\n            canBeLeftAlone: petData.canBeLeftAlone || 'N/A',\n            energyLevel: petData.energyLevel || '',\n            birthday: petData.birthday || null,\n            adoptionDate: petData.adoptionDate || null,\n            feedingInstructions: petData.feedingInstructions || '',\n            medicalNotes: petData.medicalNotes || '',\n            pottyBreakSchedule: petData.pottyBreakSchedule || '',\n            specialCareInstructions: petData.specialCareInstructions || '',\n            // These are used directly from the edited data\n            weight: petData.weight || '',\n            vetName: petData.vetName || '',\n            vetAddress: petData.vetAddress || '',\n            vetPhone: petData.vetPhone || '',\n            insuranceProvider: petData.insuranceProvider || '',\n            sex: petData.sex || '',\n            // Photo data if available\n            photoUri: petData.photoUri || null,\n          };\n          \n          response = await addPet(formData);\n          \n          // Check if it's a successful response\n          if (response && response.pet) {\n            const savedPet = response.pet;\n            // Log the full pet_id to make sure we're getting it from the server\n            debugLog(\"MBA5555\", \"Pet created successfully, server response:\", {\n              pet_id: savedPet.pet_id || 'not returned',\n              id: savedPet.id || 'not returned', // Log any alternative ID as well\n              name: savedPet.name,\n              species: savedPet.species,\n              breed: savedPet.breed\n            });\n            \n            // Validate that we have a proper pet_id\n            if (!savedPet.pet_id) {\n              debugLog(\"MBA5555\", \"WARNING: No pet_id in server response. Raw response:\", savedPet);\n            }\n            \n            // Show success toast\n            toast({\n              message: `${petToSave.name || 'Pet'} added successfully!`,\n              type: 'success',\n              duration: 4000\n            });\n            \n            // Replace the temporary pet with the real one - this needs to be atomic to prevent duplicates\n            // We pass both the server response and our locally edited data\n            const enhancedPetData = {\n              ...savedPet,\n              // Ensure these fields are present from user input\n              name: petToSave.name || savedPet.name,\n              species: petToSave.species || savedPet.species,\n              breed: petToSave.breed || savedPet.breed,\n              // The backend response contains pet_id - we must use this as the primary identifier\n              // This ensures we're always using the real database ID, not a temporary one\n              id: savedPet.pet_id,\n            };\n            \n            // Use the enhanced pet data for the replacement\n            replaceTempPetWithReal(petId, enhancedPetData);\n          } else {\n            throw new Error(\"Invalid response from server when adding pet\");\n          }\n        } catch (error) {\n          // Show error toast\n          toast({\n            message: `Error saving pet: ${error.message}`,\n            type: 'error',\n            duration: 4000\n          });\n          \n          debugLog(\"MBA456\", \"Error in pet creation:\", error);\n          \n          // Important: If there was an error, we need to make sure the pets list doesn't disappear\n          // We'll use the current pets list we saved earlier\n          if (Array.isArray(currentPetsList) && currentPetsList.length > 0) {\n            debugLog(\"MBA456\", \"Restoring pets list after error\");\n            // This approach depends on how your parent component updates the pets\n            // If you're using React context, you might need a different approach\n          }\n        }\n      } else {\n        // This is an existing pet, update it\n        debugLog(\"MBA456\", \"Updating existing pet with ID:\", petId);\n        response = await updatePet(petId, formData);\n        \n        // Check if it's a successful response\n        if (response && response.pet) {\n          const updatedPet = response.pet;\n          \n          // Show success toast\n          toast({\n            message: `${updatedPet.name ? updatedPet.name.charAt(0).toUpperCase() + updatedPet.name.slice(1).toLowerCase() : 'Pet'} updated successfully!`,\n            type: 'success',\n            duration: 4000\n          });\n          \n          // Process the profile_photo URL from the server to ensure it's complete\n          let profilePhotoUrl = updatedPet.profile_photo;\n          \n          // Only prepend MEDIA_URL if the URL is a relative path\n          if (profilePhotoUrl && !profilePhotoUrl.startsWith('http') && !profilePhotoUrl.startsWith('data:')) {\n            profilePhotoUrl = getMediaUrl(profilePhotoUrl);\n          }\n          \n          debugLog(\"MBA5555\", \"Pet updated successfully, profile photo URL:\", profilePhotoUrl);\n          \n          // Format the updated pet data for UI\n          const formattedPet = {\n            ...updatedPet,\n            id: petId, // Ensure the ID is preserved\n            // Map fields from backend to frontend format\n            type: updatedPet.species || updatedPet.type,\n            feedingInstructions: updatedPet.feeding_schedule || updatedPet.feedingInstructions,\n            medicalNotes: updatedPet.medication_notes || updatedPet.medicalNotes,\n            pottyBreakSchedule: updatedPet.potty_break_schedule || updatedPet.pottyBreakSchedule,\n            specialCareInstructions: updatedPet.special_care_instructions || updatedPet.specialCareInstructions,\n            // Map vet info fields\n            vetName: updatedPet.vet_name || '',\n            vetAddress: updatedPet.vet_address || '',\n            vetPhone: updatedPet.vet_phone || '',\n            insuranceProvider: updatedPet.insurance_provider || '',\n            // Format compatibility fields for UI (true/false/null to Yes/No/N/A)\n            childrenFriendly: updatedPet.friendly_with_children === true ? \"Yes\" : \n                             updatedPet.friendly_with_children === false ? \"No\" : \"N/A\",\n            catFriendly: updatedPet.friendly_with_cats === true ? \"Yes\" : \n                        updatedPet.friendly_with_cats === false ? \"No\" : \"N/A\",\n            dogFriendly: updatedPet.friendly_with_dogs === true ? \"Yes\" : \n                        updatedPet.friendly_with_dogs === false ? \"No\" : \"N/A\",\n            houseTrained: updatedPet.house_trained === true ? \"Yes\" : \n                         updatedPet.house_trained === false ? \"No\" : \"N/A\",\n            spayedNeutered: updatedPet.spayed_neutered === true ? \"Yes\" : \n                           updatedPet.spayed_neutered === false ? \"No\" : \"N/A\",\n            microchipped: updatedPet.microchipped === true ? \"Yes\" : \n                         updatedPet.microchipped === false ? \"No\" : \"N/A\",\n            canBeLeftAlone: updatedPet.can_be_left_alone === true ? \"Yes\" : \n                           updatedPet.can_be_left_alone === false ? \"No\" : \"N/A\",\n            // Map energy level from backend to frontend\n            energyLevel: updatedPet.energy_level || '',\n            // Format dates correctly\n            birthday: updatedPet.birthday ? formatDateFromBackend(updatedPet.birthday) : null,\n            adoptionDate: updatedPet.adoption_date ? formatDateFromBackend(updatedPet.adoption_date) : null,\n            // Update the profile photo with the server's URL\n            profile_photo: profilePhotoUrl,\n          };\n          \n          debugLog(\"MBA5555\", \"Formatted pet data for UI:\", formattedPet);\n          \n          // Update our local state with server data\n          setEditedPetsData(prev => {\n            const newData = { ...prev };\n            delete newData[petId]; // Remove editing data\n            return newData;\n          });\n          \n          // Notify parent component of the updated pet\n          if (onEditPet) {\n            onEditPet(petId, formattedPet);\n          }\n        } else {\n          throw new Error(\"Invalid response from server when updating pet\");\n        }\n      }\n      \n      // Remove this pet from the editing set\n      setEditingPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(petId);\n        return newSet;\n      });\n      \n    } catch (error) {\n      debugLog(\"MBA456\", \"Error saving pet:\", error);\n      \n      // Show error toast\n      toast({\n        message: `Failed to save pet: ${error.message || 'Unknown error'}`,\n        type: 'error',\n        duration: 5000\n      });\n      \n      // Mark the pet as failed\n      setEditedPetsData(prev => ({\n        ...prev,\n        [petId]: {\n          ...(prev[petId] || {}),\n          lastEditFailed: true\n        }\n      }));\n    } finally {\n      setSavingPet(false);\n    }\n  };\n  \n  const handleCancelPetEdit = (petId) => {\n    // Check if this is a newly added pet (has a temp_ ID)\n    if (petId && petId.toString().startsWith('temp_')) {\n      // Delete the pet instead of just canceling edit mode\n      debugLog(\"MBA456\", \"Discarding newly added pet:\", petId);\n      onDeletePet(petId);\n    }\n    \n    // Remove this pet from editing state\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.delete(petId);\n      return newSet;\n    });\n    \n    // Clean up the edited data for this pet\n    setEditedPetsData(prev => {\n      const newData = {...prev};\n      delete newData[petId];\n      return newData;\n    });\n  };\n  \n  const formatPhoneNumber = (phoneNumber) => {\n    // Format phone number as XXX-XXX-XXXX\n    const cleaned = phoneNumber.replace(/\\D/g, '');\n    \n    if (cleaned.length >= 6) {\n      return `${cleaned.substring(0, 3)}-${cleaned.substring(3, 6)}-${cleaned.substring(6, 10)}`;\n    } else if (cleaned.length >= 3) {\n      return `${cleaned.substring(0, 3)}-${cleaned.substring(3)}`;\n    } else {\n      return cleaned;\n    }\n  };\n\n  const validatePetInput = (field, value, petId) => {\n    debugLog('MBA1234', 'Validating pet input:', { field, value, petId });\n    \n    let sanitized = value;\n    let error = '';\n    \n    // Skip validation for dropdown/boolean fields\n    if (['childrenFriendly', 'catFriendly', 'dogFriendly', 'spayedNeutered', 'houseTrained', 'microchipped', 'canBeLeftAlone', 'energyLevel', 'sex', 'type'].includes(field)) {\n      return { sanitized, error };\n    }\n    \n    // First check for dangerous content that should always be blocked\n    const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(value);\n    const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(value);\n    \n    if (hasScriptTags || hasSqlInjection) {\n      debugLog('MBA1234', 'Dangerous content detected and blocked:', { field, value });\n      return { sanitized: '', error: 'Invalid content detected and removed' };\n    }\n    \n    // Sanitize based on field type\n    if (field === 'name') {\n      sanitized = sanitizeInput(value, 'name', { maxLength: 50 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 3) {\n        debugLog('MBA1234', 'Malicious content detected in pet name:', { originalLength, sanitizedLength, removalPercentage });\n        error = 'Invalid characters detected in pet name';\n      } else {\n        const nameValidation = validateName(sanitized);\n        if (!nameValidation.isValid && sanitized.length > 0) {\n          error = nameValidation.message;\n        } else if (sanitized.length > 0 && sanitized.length < 2) {\n          error = 'Pet name must be at least 2 characters long';\n        }\n      }\n    } else if (field === 'breed' || field === 'color') {\n      sanitized = sanitizeInput(value, 'name', { maxLength: 50 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 3) {\n        debugLog('MBA1234', `Malicious content detected in pet ${field}:`, { originalLength, sanitizedLength, removalPercentage });\n        error = `Invalid characters detected in pet ${field}`;\n      } else if (sanitized.length > 0 && sanitized.length < 2) {\n        error = `Pet ${field} must be at least 2 characters long`;\n      }\n    } else if (['specialInstructions', 'medicalConditions', 'feedingInstructions', 'medicalNotes', 'pottyBreakSchedule', 'specialCareInstructions', 'medications'].includes(field)) {\n      sanitized = sanitizeInput(value, 'description', { maxLength: 500 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 10) {\n        debugLog('MBA1234', `Malicious content detected in pet ${field}:`, { originalLength, sanitizedLength, removalPercentage });\n        error = `Invalid characters detected in ${field}`;\n      } else if (sanitized.length > 500) {\n        error = `${field} must be no more than 500 characters long`;\n      }\n    } else if (field === 'weight') {\n      sanitized = sanitizeInput(value, 'amount');\n      \n      if (sanitized && sanitized.length > 0) {\n        const weightValue = parseFloat(sanitized);\n        if (isNaN(weightValue)) {\n          error = 'Weight must be a valid number';\n        } else if (weightValue <= 0) {\n          error = 'Weight must be greater than 0';\n        } else if (weightValue > 500) {\n          error = 'Weight cannot exceed 500 lbs';\n        }\n      }\n    } else if (['vetName', 'insuranceProvider'].includes(field)) {\n      sanitized = sanitizeInput(value, 'general', { maxLength: 100 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 3) {\n        debugLog('MBA1234', `Malicious content detected in ${field}:`, { originalLength, sanitizedLength, removalPercentage });\n        error = `Invalid characters detected in ${field}`;\n      }\n    } else if (['vetAddress'].includes(field)) {\n      sanitized = sanitizeInput(value, 'description', { maxLength: 200 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 5) {\n        debugLog('MBA1234', `Malicious content detected in ${field}:`, { originalLength, sanitizedLength, removalPercentage });\n        error = `Invalid characters detected in ${field}`;\n      }\n    } else if (field === 'vetPhone') {\n      // For vet phone, be more restrictive - only allow numbers and format as XXX-XXX-XXXX\n      const numbersOnly = value.replace(/\\D/g, ''); // Remove all non-digits\n      \n      if (numbersOnly.length > 10) {\n        // Don't allow more than 10 digits\n        sanitized = formatPhoneNumber(numbersOnly.substring(0, 10));\n        error = 'Phone number cannot exceed 10 digits';\n      } else if (numbersOnly.length > 0) {\n        sanitized = formatPhoneNumber(numbersOnly);\n        \n        if (numbersOnly.length === 10) {\n          // Validate complete phone number\n          const phoneValidation = validatePhoneNumber(sanitized);\n          if (!phoneValidation.isValid) {\n            error = phoneValidation.message;\n          }\n        } else if (numbersOnly.length < 10 && numbersOnly.length > 0) {\n          // Allow partial entry but show it's incomplete\n          // Don't set error for partial entry to allow typing\n        }\n      } else {\n        sanitized = '';\n      }\n    } else {\n      // General text field sanitization\n      sanitized = sanitizeInput(value, 'general', { maxLength: 200 });\n    }\n    \n    // Update validation errors\n    setValidationErrors(prevErrors => {\n      const petErrors = prevErrors[petId] || {};\n      const newPetErrors = { ...petErrors };\n      \n      if (error) {\n        newPetErrors[field] = error;\n      } else {\n        delete newPetErrors[field];\n      }\n      \n      const cleanedErrors = Object.keys(newPetErrors).length > 0 ? newPetErrors : undefined;\n      const newErrors = { ...prevErrors };\n      \n      if (cleanedErrors) {\n        newErrors[petId] = cleanedErrors;\n      } else {\n        delete newErrors[petId];\n      }\n      \n      return newErrors;\n    });\n    \n    return { sanitized, error };\n  };\n\n  const handleEditChange = (petId, field, value) => {\n    // For compatibility fields, no need to validate\n    if (['childrenFriendly', 'catFriendly', 'dogFriendly', 'spayedNeutered', 'houseTrained', 'microchipped', 'canBeLeftAlone', 'energyLevel', 'sex', 'type'].includes(field)) {\n      // Store the direct selected value (\"Yes\", \"No\", \"N/A\") in the edit state\n      setEditedPetsData(prev => ({\n        ...prev,\n        [petId]: {\n          ...(prev[petId] || {}),\n          [field]: value\n        }\n      }));\n      \n      // Also update the corresponding gets_along_with_* fields for compatibility with the API\n      if (field === 'childrenFriendly') {\n        setEditedPetsData(prev => ({\n          ...prev,\n          [petId]: {\n            ...(prev[petId] || {}),\n            getsAlongWithChildren: value\n          }\n        }));\n      } else if (field === 'catFriendly') {\n        setEditedPetsData(prev => ({\n          ...prev,\n          [petId]: {\n            ...(prev[petId] || {}),\n            getsAlongWithCats: value\n          }\n        }));\n      } else if (field === 'dogFriendly') {\n        setEditedPetsData(prev => ({\n          ...prev,\n          [petId]: {\n            ...(prev[petId] || {}),\n            getsAlongWithDogs: value\n          }\n        }));\n      }\n    } else {\n      // For text fields, only block extremely dangerous content in real-time\n      const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(value);\n      const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(value);\n      \n      if (hasScriptTags || hasSqlInjection) {\n        debugLog('MBA1234', 'Dangerous content detected and blocked in pet input:', { field, value });\n        return; // Don't update the input if it contains dangerous content\n      }\n      \n      // For phone fields, apply formatting\n      let processedValue = value;\n      if (field === 'vetPhone') {\n        const numbersOnly = value.replace(/\\D/g, '');\n        if (numbersOnly.length <= 10) {\n          processedValue = formatPhoneNumber(numbersOnly);\n        } else {\n          // Don't allow more than 10 digits\n          processedValue = formatPhoneNumber(numbersOnly.substring(0, 10));\n        }\n      }\n      \n      // Store the value (with formatting for phone numbers, original for everything else)\n      setEditedPetsData(prev => ({\n        ...prev,\n        [petId]: {\n          ...(prev[petId] || {}),\n          [field]: processedValue\n        }\n      }));\n    }\n    debugLog(\"MBA456\", \"Editing pet field\", { petId, field, value });\n  };\n\n  const handleAddNewPet = () => {\n    // Debug current state before adding a pet\n    debugLog(\"MBAi39gh45v\", \"ADD PET START - Current pets array:\", \n      Array.isArray(pets) ? \n        pets.map(p => ({ id: p.id, name: p.name || 'unnamed' })) : \n        'pets is not an array');\n    \n    // Check for existing temporary pets first\n    const existingTempPets = Array.isArray(pets) ? \n      pets.filter(pet => pet && pet.id && String(pet.id).startsWith('temp_')) : \n      [];\n    \n    debugLog(\"MBAi39gh45v\", \"ADD PET - Existing temp pets:\", \n      existingTempPets.length ? existingTempPets.map(p => p.id) : 'none');\n    \n    // If we already have a temporary pet being edited, don't create a new one\n    if (existingTempPets.length > 0) {\n      debugLog(\"MBAi39gh45v\", \"ADD PET - Found existing temp pet, not creating a new one\");\n      // Just focus on the existing temp pet instead\n      const tempPet = existingTempPets[0];\n      \n      // Make sure it's in edit mode\n      setEditingPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.add(tempPet.id);\n        return newSet;\n      });\n      \n      // Make sure it's expanded\n      setExpandedPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.add(tempPet.id);\n        return newSet;\n      });\n      \n      debugLog(\"MBAi39gh45v\", \"ADD PET - Focused on existing temp pet:\", tempPet.id);\n      return;\n    }\n    \n    // Create a temporary ID for the new pet\n    const tempId = `temp_${Date.now()}`;\n    debugLog(\"MBAi39gh45v\", \"ADD PET - Creating new pet with temp ID:\", tempId);\n    \n    // Create a blank pet entry\n    const newPet = {\n      id: tempId,\n      name: '',\n      breed: '',\n      birthday: '',\n      type: '',\n      feedingInstructions: '',\n      medicalNotes: '',\n      pottyBreakSchedule: '',\n      specialCareInstructions: '',\n      childrenFriendly: undefined,\n      dogFriendly: undefined,\n      catFriendly: undefined,\n      spayedNeutered: undefined,\n      houseTrained: undefined,\n      microchipped: undefined,\n      energyLevel: undefined,\n      canBeLeftAlone: undefined,\n      medications: '',\n      vetName: '',\n      vetAddress: '',\n      vetPhone: '',\n      insuranceProvider: '',\n      vetDocuments: [],\n      // New fields\n      sex: undefined,\n      weight: '',\n      adoptionDate: ''\n    };\n    \n    // Debug the new pet data\n    debugLog(\"MBAi39gh45v\", \"ADD PET - New pet object created:\", { id: newPet.id });\n    \n    // First update our local state to show we're editing this pet\n    setEditingPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(tempId);\n      return newSet;\n    });\n    \n    setEditedPetsData(prev => ({\n      ...prev,\n      [tempId]: {...newPet}\n    }));\n    \n    // Expand the pet card\n    setExpandedPetIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(tempId);\n      return newSet;\n    });\n    \n    debugLog(\"MBAi39gh45v\", \"ADD PET - Local state updated, now calling parent component\");\n    \n    // Check if onAddPet function exists\n    if (!onAddPet) {\n      debugLog(\"MBAi39gh45v\", \"ADD PET ERROR - onAddPet function is not available\");\n      toast({\n        message: \"Unable to add pet - system error\",\n        type: 'error',\n        duration: 4000\n      });\n      return;\n    }\n    \n    try {\n      // Now add the new pet to the existing pets array via the parent component\n      // Adding at the top of the list makes it visible immediately to the user\n      debugLog(\"MBAi39gh45v\", \"ADD PET - Calling onAddPet with new pet (adding to top of list)\");\n      onAddPet({...newPet, _addToTop: true});\n      \n      // After everything is done, log the current state\n      setTimeout(() => {\n        if (Array.isArray(pets)) {\n          debugLog(\"MBAi39gh45v\", \"ADD PET - Pets after adding:\", \n            pets.length > 0 ? \n              pets.map(p => ({id: p.id, name: p.name || 'unnamed'})) : \n              'empty array');\n        } else {\n          debugLog(\"MBAi39gh45v\", \"ADD PET ERROR - Pets is not an array after adding\");\n        }\n      }, 100);\n    } catch (error) {\n      debugLog(\"MBAi39gh45v\", \"ADD PET ERROR - Exception when calling onAddPet:\", error);\n      toast({\n        message: \"Error adding pet\",\n        type: 'error',\n        duration: 4000\n      });\n    }\n  };\n\n  const handleUploadDocument = async (petId) => {\n    try {\n      debugLog(\"MBA5555\", \"Opening image picker for pet:\", petId);\n      \n      // Request permissions first if on native platforms\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          debugLog('MBA5555', 'Permission to access media library was denied');\n          toast({\n            message: 'Permission to access media library was denied',\n            type: 'error',\n            duration: 4000\n          });\n          return;\n        }\n      }\n      \n      // Launch image picker with platform-specific options\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false, // Disable built-in editing as we'll use our custom cropper\n        quality: 1,\n        // On web, we need base64 for direct upload\n        base64: Platform.OS === 'web',\n        allowsMultipleSelection: false,\n      });\n      \n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        const selectedAsset = result.assets[0];\n        \n        debugLog('MBA5555', 'Selected pet photo:', {\n          uri: selectedAsset.uri.substring(0, 30) + '...',\n          type: selectedAsset.type || 'image/jpeg',\n          width: selectedAsset.width,\n          height: selectedAsset.height,\n          hasBase64: !!selectedAsset.base64\n        });\n        \n        // Store the selected photo URI and pet ID\n        setSelectedPetPhotoUri(selectedAsset.uri);\n        setCurrentEditingPetId(petId);\n        \n        // Show the photo cropper\n        setShowPetPhotoCropper(true);\n      }\n    } catch (error) {\n      debugLog('MBA5555', 'Error selecting pet photo:', error);\n      toast({\n        message: 'Failed to select pet photo. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    }\n  };\n\n  const renderVetDocuments = (documents = []) => {\n    if (documents.length === 0) {\n      return <Text style={styles.noDocumentsText}>No documents uploaded</Text>;\n    }\n    \n    return (\n      <View style={styles.documentsList}>\n        {documents.map((doc, index) => (\n          <View key={index} style={styles.documentItem}>\n            <MaterialCommunityIcons name=\"file-document-outline\" size={18} color={theme.colors.primary} />\n            <Text style={styles.documentName} numberOfLines={1} ellipsizeMode=\"middle\">\n              {doc.name}\n            </Text>\n            <TouchableOpacity style={styles.viewDocButton}>\n              <Text style={styles.viewDocText}>View</Text>\n            </TouchableOpacity>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const toggleSection = (petId, sectionName, event) => {\n    // A completely rewritten, bulletproof version of toggleSection\n    \n    try {\n      // First, stop event propagation if an event was provided\n      if (event && typeof event.stopPropagation === 'function') {\n        event.stopPropagation();\n      }\n      \n      // Validate inputs - only proceed if we have valid data\n      if (!petId) {\n        console.warn(\"Missing petId in toggleSection\");\n        return;\n      }\n      \n      if (!sectionName) {\n        console.warn(\"Missing sectionName in toggleSection\");\n        return;\n      }\n      \n      // Sanitize inputs to ensure they're simple strings\n      const petIdStr = String(petId);\n      const sectionNameStr = String(sectionName);\n      \n      // Create a consistent key format\n      const key = `${petIdStr}-${sectionNameStr}`;\n      \n      // Update state safely\n      setExpandedSections((prev) => {\n        // If prev is somehow not an object, start fresh\n        if (!prev || typeof prev !== 'object') {\n          const newState = {};\n          newState[key] = true;\n          return newState;\n        }\n        \n        // Create a clean copy of the previous state\n        const newState = { ...prev };\n        \n        // Toggle the value, defaulting to false if not boolean\n        const currentValue = newState[key] === true;\n        newState[key] = !currentValue;\n        \n        return newState;\n      });\n    } catch (err) {\n      // If anything goes wrong, log it but don't crash\n      console.error(\"Error toggling section:\", err.message || \"Unknown error\");\n    }\n  };\n\n  const isSectionExpanded = (petId, sectionName) => {\n    try {\n      // Safety checks for invalid inputs\n      if (!petId || !sectionName) {\n        return false;\n      }\n      \n      // Ensure petId is a string for consistent key format\n      const petIdStr = String(petId);\n      const key = `${petIdStr}-${sectionName}`;\n      \n      // Default to false (closed) for initial view or non-boolean values\n      const result = expandedSections[key] === true;\n      return result;\n    } catch (err) {\n      console.error(\"Error checking if section is expanded:\", err.message || \"Unknown error\");\n      return false; // Default to not expanded on error\n    }\n  };\n\n  const renderSectionHeader = (petId, title, sectionName) => {\n    try {\n      // Safety check for valid inputs\n      if (!petId || !sectionName) {\n        console.warn(\"Missing required parameters in renderSectionHeader\");\n        return null;\n      }\n      \n      // Ensure title has a valid string value\n      const safeTitle = typeof title === 'string' ? title : 'Section';\n      \n      const isExpanded = isSectionExpanded(petId, sectionName);\n      \n      return (\n        <TouchableOpacity \n          style={styles.sectionHeader}\n          onPress={(event) => toggleSection(petId, sectionName, event)}\n        >\n          <Text style={styles.detailTitle}>{safeTitle}</Text>\n          <MaterialCommunityIcons \n            name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n            size={20} \n            color={theme.colors.text}\n          />\n        </TouchableOpacity>\n      );\n    } catch (error) {\n      console.error(\"Error rendering section header:\", error.message || \"Unknown error\");\n      return null; // Return null on error to prevent crashes\n    }\n  };\n\n  const renderPetCard = (pet) => {\n    // Check if this pet is being edited\n    const isEditing = editingPetIds.has(pet.id);\n    \n    // Get the edited data for this pet if it exists\n    const editedPetData = editedPetsData[pet.id] || {};\n    \n    // Determine if this is a newly added pet\n    const isNewPet = pet.id && pet.id.toString().startsWith('temp_');\n    \n    // Is this pet's details expanded?\n    const isExpanded = expandedPetIds.has(pet.id);\n    \n    // Determine what photo URL to display\n    let photoUri = null;\n    \n    // First priority: if we're editing and have a new photo URI from cropping, use that\n    if (isEditing && editedPetData.photoUri) {\n      // Check if the URI already has http/https or is a data URI\n      if (editedPetData.photoUri.startsWith('http') || editedPetData.photoUri.startsWith('data:')) {\n        photoUri = editedPetData.photoUri;\n      } else {\n        // If it's a relative path, prepend the API base URL\n        photoUri = getMediaUrl(editedPetData.photoUri);\n      }\n      debugLog('MBA5555', 'Using edited pet photo URI:', photoUri);\n    } \n    // Second priority: use the pet's profile_photo from the server if available\n    else if (pet.profile_photo) {\n      // Check if the profile_photo is a valid URL or a relative path\n      if (pet.profile_photo.startsWith('http')) {\n        photoUri = pet.profile_photo;\n      } else {\n        // If it's a relative path, prepend the API base URL\n        photoUri = getMediaUrl(pet.profile_photo);\n      }\n      debugLog('MBA5555', 'Using server profile photo:', photoUri);\n    }\n    \n    return (\n      <View \n        key={pet.id} \n        style={styles.petCard}\n      >\n        <TouchableOpacity\n          style={styles.petCardHeader}\n          onPress={() => togglePetDetails(pet.id)}\n          activeOpacity={0.7}\n        >\n          <View style={styles.petBasicInfo}>\n            {isEditing ? (\n              <View style={styles.editMainContainer}>\n                <View style={styles.editHeaderRow}>\n                  <View style={styles.editProfileContainer}>\n                    <TouchableOpacity\n                      style={styles.profilePhotoButton}\n                      onPress={() => handleUploadDocument(pet.id)}\n                    >\n                      {editedPetData.photoUri ? (\n                        <Image \n                          source={{ uri: editedPetData.photoUri }}\n                          style={styles.petPhoto}\n                        />\n                      ) : photoUri ? (\n                        <Image \n                          source={{ uri: photoUri }}\n                          style={styles.petPhoto}\n                        />\n                      ) : (\n                        <MaterialCommunityIcons \n                          name=\"paw\" \n                          size={40} \n                          color={theme.colors.primary} \n                          style={styles.placeholderIcon}\n                        />\n                      )}\n                      <View style={styles.plusIconContainer}>\n                        <MaterialCommunityIcons name=\"plus-circle\" size={20} color={theme.colors.primary} />\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                  <View style={[\n                    styles.editActions,\n                    windowWidth < 600 && styles.editActionsSmallScreen\n                  ]}>\n                    {windowWidth < 600 ? (\n                      // Small screen layout: two rows of buttons\n                      <>\n                        <View style={styles.buttonRowTop}>\n                          {!isNewPet && (\n                            <TouchableOpacity \n                              style={styles.deleteButton}\n                              onPress={(event) => {\n                                event.stopPropagation();\n                                handleDeletePet(pet.id);\n                              }}\n                            >\n                              <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                            </TouchableOpacity>\n                          )}\n                          <TouchableOpacity \n                            style={styles.saveButton}\n                            onPress={(event) => {\n                              // Prevent event propagation\n                              event.stopPropagation();\n                              // Prevent duplicates\n                              if (savingPet) {\n                                debugLog(\"MBA5555\", \"Save button already clicked, ignoring\");\n                                return;\n                              }\n                              debugLog(\"MBA5555\", \"SAVE BUTTON - Clicked for pet:\", pet.id);\n                              handleSavePetEdit(pet.id);\n                            }}\n                            disabled={savingPet}\n                          >\n                            <Text style={styles.saveButtonText}>\n                              {isNewPet ? 'Create Pet' : 'Save Pet'}\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                        <View style={styles.buttonRowBottom}>\n                          <TouchableOpacity \n                            style={styles.editButton}\n                            onPress={(event) => {\n                              event.stopPropagation();\n                              handleCancelPetEdit(pet.id);\n                            }}\n                          >\n                            <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={styles.editButton}\n                            onPress={(event) => {\n                              event.stopPropagation();\n                              togglePetDetails(pet.id);\n                            }}\n                          >\n                            <MaterialCommunityIcons \n                              name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n                              size={24} \n                              color={theme.colors.text}\n                            />\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    ) : (\n                      // Large screen layout: single row\n                      <>\n                        <TouchableOpacity \n                          style={styles.saveButton}\n                          onPress={(event) => {\n                            // Prevent event propagation\n                            event.stopPropagation();\n                            // Prevent duplicates\n                            if (savingPet) {\n                              debugLog(\"MBA5555\", \"Save button already clicked, ignoring\");\n                              return;\n                            }\n                            debugLog(\"MBA5555\", \"SAVE BUTTON - Clicked for pet:\", pet.id);\n                            handleSavePetEdit(pet.id);\n                          }}\n                          disabled={savingPet}\n                        >\n                          <Text style={styles.saveButtonText}>\n                            {isNewPet ? 'Create Pet' : 'Save Pet'}\n                          </Text>\n                        </TouchableOpacity>\n                        {!isNewPet && (\n                          <TouchableOpacity \n                            style={styles.deleteButton}\n                            onPress={(event) => {\n                              event.stopPropagation();\n                              handleDeletePet(pet.id);\n                            }}\n                          >\n                            <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                          </TouchableOpacity>\n                        )}\n                        <TouchableOpacity \n                          style={styles.editButton}\n                          onPress={(event) => {\n                            event.stopPropagation();\n                            handleCancelPetEdit(pet.id);\n                          }}\n                        >\n                          <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                          style={styles.editButton}\n                          onPress={(event) => {\n                            event.stopPropagation();\n                            togglePetDetails(pet.id);\n                          }}\n                        >\n                          <MaterialCommunityIcons \n                            name={isExpanded ? \"chevron-up\" : \"chevron-down\"} \n                            size={24} \n                            color={theme.colors.text}\n                          />\n                        </TouchableOpacity>\n                      </>\n                    )}\n                  </View>\n                </View>\n                \n                <View style={styles.editDetailsContainer}>\n                  <View style={styles.detailRow}>\n                    <View style={styles.detailColumn}>\n                      <Text style={styles.inputLabel}>Name</Text>\n                      <TextInput\n                        style={styles.editInput}\n                        value={editedPetData.name || ''}\n                        onChangeText={(text) => handleEditChange(pet.id, 'name', text)}\n                        placeholder=\"Enter pet name\"\n                        placeholderTextColor={theme.colors.placeholder}\n                      />\n                    </View>\n                    <View style={styles.detailColumn}>\n                      <Text style={styles.inputLabel}>Breed</Text>\n                      <TextInput\n                        style={styles.editInput}\n                        value={editedPetData.breed || ''}\n                        onChangeText={(text) => handleEditChange(pet.id, 'breed', text)}\n                        placeholder=\"Enter breed - ex: Golden Retriever\"\n                        placeholderTextColor={theme.colors.placeholder}\n                      />\n                    </View>\n                  </View>\n                  \n                  {windowWidth < 900 ? (\n                    // Stack animal type and birthday vertically on small screens\n                    <View style={styles.stackedFields}>\n                      <View style={[styles.detailColumn, styles.fullWidth]}>\n                        <Text style={styles.inputLabel}>Animal Type</Text>\n                        <TextInput\n                          style={styles.editInput}\n                          value={editedPetData.type || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'type', text)}\n                          placeholder=\"Enter type - ex: Dog\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      </View>\n                      \n                      <View style={[styles.detailColumn, styles.fullWidth]}>\n                        <Text style={styles.inputLabel}>Birthday</Text>\n                        <View style={styles.customDatePickerContainer}>\n                          <TouchableOpacity \n                            activeOpacity={0.8}\n                            style={styles.dateInputBox}\n                            onPress={() => showDatePicker(pet.id, 'birthday')}\n                          >\n                            <Text style={[\n                              styles.dateInputText, \n                              !editedPetData.birthday && styles.placeholderText\n                            ]}>\n                              {editedPetData.birthday || 'MM-DD-YYYY'}\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={styles.calendarButton}\n                            onPress={() => showDatePicker(pet.id, 'birthday')}\n                            activeOpacity={0.7}\n                          >\n                            <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </View>\n                  ) : (\n                    // Original horizontal layout for larger screens\n                    <View style={styles.detailRow}>\n                      <View style={styles.detailColumn}>\n                        <Text style={styles.inputLabel}>Birthday</Text>\n                        <View style={styles.customDatePickerContainer}>\n                          <TouchableOpacity \n                            activeOpacity={0.8}\n                            style={styles.dateInputBox}\n                            onPress={() => showDatePicker(pet.id, 'birthday')}\n                          >\n                            <Text style={[\n                              styles.dateInputText, \n                              !editedPetData.birthday && styles.placeholderText\n                            ]}>\n                              {editedPetData.birthday || 'MM-DD-YYYY'}\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={styles.calendarButton}\n                            onPress={() => showDatePicker(pet.id, 'birthday')}\n                            activeOpacity={0.7}\n                          >\n                            <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                      <View style={styles.detailColumn}>\n                        <Text style={styles.inputLabel}>Animal Type</Text>\n                        <TextInput\n                          style={styles.editInput}\n                          value={editedPetData.type || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'type', text)}\n                          placeholder=\"Enter type - ex: Dog\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      </View>\n                    </View>\n                  )}\n                </View>\n              </View>\n            ) : (\n              <>\n                {photoUri ? (\n                  <Image \n                    source={{ uri: photoUri }}\n                    style={styles.petPhoto}\n                    onError={(e) => {\n                      debugLog('MBA5555', 'Error loading pet photo:', e.nativeEvent.error);\n                      // If there's an error loading the image, set photoUri to null to show the default icon\n                      setEditedPetsData(prev => ({\n                        ...prev,\n                        [pet.id]: {\n                          ...(prev[pet.id] || {}),\n                          photoLoadError: true\n                        }\n                      }));\n                    }}\n                  />\n                ) : (\n                  <MaterialCommunityIcons \n                    name=\"paw\" \n                    size={40} \n                    color={theme.colors.primary} \n                    style={styles.placeholderIcon}\n                  />\n                )}\n                <View style={[\n                  styles.petInfo,\n                  windowWidth < 600 && styles.petInfoWithButtonPadding\n                ]}>\n                  <Text style={styles.petName}>{pet.name.toLowerCase().charAt(0).toUpperCase() + pet.name.toLowerCase().slice(1)}</Text>\n                  <View style={styles.petDetailsContainer}>\n                    <Text style={styles.petDetails}>\n                    {pet.type ? pet.type.toLowerCase().charAt(0).toUpperCase() + pet.type.toLowerCase().slice(1) : 'No type'} • {pet.birthday ? calculateAge(pet.birthday) : 'No age set'} • {pet.breed ? pet.breed.toLowerCase().charAt(0).toUpperCase() + pet.breed.toLowerCase().slice(1) : 'No breed'}\n                    </Text>\n                  </View>\n                </View>\n              </>\n            )}\n          </View>\n          {!isEditing && windowWidth < 600 ? (\n            <>\n              <TouchableOpacity\n                style={[styles.editButton, styles.editButtonTopRight]}\n                onPress={() => handleEditPet(pet.id)}\n              >\n                <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[styles.editButton, styles.chevronButtonBottomRight]}\n                onPress={() => togglePetDetails(pet.id)}\n              >\n                <MaterialCommunityIcons\n                  name={isExpanded ? \"chevron-up\" : \"chevron-down\"}\n                  size={24}\n                  color={theme.colors.text}\n                />\n              </TouchableOpacity>\n            </>\n          ) : !isEditing ? (\n            <View style={styles.petActions}>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => handleEditPet(pet.id)}\n              >\n                <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.editButton}\n                onPress={() => togglePetDetails(pet.id)}\n              >\n                <MaterialCommunityIcons\n                  name={isExpanded ? \"chevron-up\" : \"chevron-down\"}\n                  size={24}\n                  color={theme.colors.text}\n                />\n              </TouchableOpacity>\n            </View>\n          ) : null}\n        </TouchableOpacity>\n\n        {isExpanded && (\n          <View style={[styles.expandedDetails, { backgroundColor: theme.colors.surfaceContrast }]}>\n            <View style={styles.detailRow}>\n              <View style={styles.detailColumn}>\n                <Text style={styles.detailTitle}>Feeding Instructions</Text>\n                {isEditing ? (\n                  <TextInput\n                    style={styles.editInput}\n                    value={editedPetData.feedingInstructions || ''}\n                    onChangeText={(text) => handleEditChange(pet.id, 'feedingInstructions', text)}\n                    placeholder=\"Enter feeding instructions\"\n                    placeholderTextColor={theme.colors.placeholder}\n                    multiline\n                  />\n                ) : (\n                  <Text style={styles.detailText}>{pet.feedingInstructions || 'No feeding instructions yet'}</Text>\n                )}\n              </View>\n              <View style={styles.detailColumn}>\n                <Text style={styles.detailTitle}>Medical Notes</Text>\n                {isEditing ? (\n                  <TextInput\n                    style={styles.editInput}\n                    value={editedPetData.medicalNotes || ''}\n                    onChangeText={(text) => handleEditChange(pet.id, 'medicalNotes', text)}\n                    placeholder=\"Enter medical notes\"\n                    placeholderTextColor={theme.colors.placeholder}\n                    multiline\n                  />\n                ) : (\n                  <Text style={styles.detailText}>{pet.medicalNotes || 'No medical notes yet'}</Text>\n                )}\n              </View>\n            </View>\n            <View style={styles.detailRow}>\n              <View style={styles.detailColumn}>\n                <Text style={styles.detailTitle}>Potty Break Schedule</Text>\n                {isEditing ? (\n                  <TextInput\n                    style={styles.editInput}\n                    value={editedPetData.pottyBreakSchedule || ''}\n                    onChangeText={(text) => handleEditChange(pet.id, 'pottyBreakSchedule', text)}\n                    placeholder=\"Potty break schedule\"\n                    placeholderTextColor={theme.colors.placeholder}\n                    multiline\n                  />\n                ) : (\n                  <Text style={styles.detailText}>{pet.pottyBreakSchedule || 'No potty break schedule yet'}</Text>\n                )}\n              </View>\n              <View style={styles.detailColumn}>\n                <Text style={styles.detailTitle}>Special Care Instructions</Text>\n                {isEditing ? (\n                  <TextInput\n                    style={styles.editInput}\n                    value={editedPetData.specialCareInstructions || ''}\n                    onChangeText={(text) => handleEditChange(pet.id, 'specialCareInstructions', text)}\n                    placeholder=\"Special care instructions\"\n                    placeholderTextColor={theme.colors.placeholder}\n                    multiline\n                  />\n                ) : (\n                  <Text style={styles.detailText}>{pet.specialCareInstructions || 'No special care instructions yet'}</Text>\n                )}\n              </View>\n            </View>\n            \n            <View style={styles.detailSection}>\n              {renderSectionHeader(pet.id, \"Care Information\", \"careInfo\")}\n              \n              {isSectionExpanded(pet.id, \"careInfo\") && (\n                <View style={styles.detailColumn}>\n                  <View style={styles.careInfoContainer}>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Energy level:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {energyLevelOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.energyLevel === null && option === \"N/A\") || \n                                editedPetData.energyLevel === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'energyLevel', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.energyLevel === null && option === \"N/A\") || \n                                editedPetData.energyLevel === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option ? option : \"None selected yet\"}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnEnergyLevelContainer(pet)\n                      )}\n                    </View>\n                    \n                    {/* Removing duplicate \"Can be left alone\" section as it's already in the Compatibility & Training section */}\n                    \n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Weight (lbs):</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputWeight}\n                          value={editedPetData.weight || ''}\n                          onChangeText={(text) => {\n                            // Only allow numbers and decimal point\n                            if (/^(\\d*\\.?\\d*)$/.test(text) || text === '') {\n                              handleEditChange(pet.id, 'weight', text);\n                            }\n                          }}\n                          placeholder=\"Enter weight\"\n                          placeholderTextColor={theme.colors.placeholder}\n                          keyboardType=\"numeric\"\n                        />\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.weight || 'Not specified'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.medicationsContainer}>\n                      <Text style={styles.compatibilityLabel}>Medications:</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputMedications}\n                          value={editedPetData.medications || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'medications', text)}\n                          placeholder=\"Enter medications\"\n                          placeholderTextColor={theme.colors.placeholder}\n                          multiline\n                        />\n                      ) : (\n                        <Text style={styles.medicationsText}>\n                          {pet.medications || 'None'}\n                        </Text>\n                      )}\n                    </View>\n                  </View>\n                </View>\n              )}\n            </View>\n            \n            <View style={styles.detailSection}>\n              {renderSectionHeader(pet.id, \"Compatibility & Training\", \"compatibility\")}\n              \n              {isSectionExpanded(pet.id, \"compatibility\") && (\n                <View style={styles.detailColumn}>\n                  <View style={styles.compatibilityContainer}>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Friendly with children:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.childrenFriendly === null && option === \"N/A\") || \n                                (editedPetData.childrenFriendly === true && option === \"Yes\") || \n                                (editedPetData.childrenFriendly === false && option === \"No\") ||\n                                editedPetData.childrenFriendly === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'childrenFriendly', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.childrenFriendly === null && option === \"N/A\") || \n                                (editedPetData.childrenFriendly === true && option === \"Yes\") || \n                                (editedPetData.childrenFriendly === false && option === \"No\") ||\n                                editedPetData.childrenFriendly === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'childrenFriendly')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Friendly with cats:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.catFriendly === null && option === \"N/A\") || \n                                (editedPetData.catFriendly === true && option === \"Yes\") || \n                                (editedPetData.catFriendly === false && option === \"No\") ||\n                                editedPetData.catFriendly === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'catFriendly', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.catFriendly === null && option === \"N/A\") || \n                                (editedPetData.catFriendly === true && option === \"Yes\") || \n                                (editedPetData.catFriendly === false && option === \"No\") ||\n                                editedPetData.catFriendly === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'catFriendly')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Friendly with dogs:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.dogFriendly === null && option === \"N/A\") || \n                                (editedPetData.dogFriendly === true && option === \"Yes\") || \n                                (editedPetData.dogFriendly === false && option === \"No\") ||\n                                editedPetData.dogFriendly === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'dogFriendly', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.dogFriendly === null && option === \"N/A\") || \n                                (editedPetData.dogFriendly === true && option === \"Yes\") || \n                                (editedPetData.dogFriendly === false && option === \"No\") ||\n                                editedPetData.dogFriendly === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'dogFriendly')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Spayed/neutered:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.spayedNeutered === null && option === \"N/A\") || \n                                (editedPetData.spayedNeutered === true && option === \"Yes\") || \n                                (editedPetData.spayedNeutered === false && option === \"No\") ||\n                                editedPetData.spayedNeutered === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'spayedNeutered', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.spayedNeutered === null && option === \"N/A\") || \n                                (editedPetData.spayedNeutered === true && option === \"Yes\") || \n                                (editedPetData.spayedNeutered === false && option === \"No\") ||\n                                editedPetData.spayedNeutered === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'spayedNeutered')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>House trained:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.houseTrained === null && option === \"N/A\") || \n                                (editedPetData.houseTrained === true && option === \"Yes\") || \n                                (editedPetData.houseTrained === false && option === \"No\") ||\n                                editedPetData.houseTrained === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'houseTrained', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.houseTrained === null && option === \"N/A\") || \n                                (editedPetData.houseTrained === true && option === \"Yes\") || \n                                (editedPetData.houseTrained === false && option === \"No\") ||\n                                editedPetData.houseTrained === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'houseTrained')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Microchipped:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.microchipped === null && option === \"N/A\") || \n                                (editedPetData.microchipped === true && option === \"Yes\") || \n                                (editedPetData.microchipped === false && option === \"No\") ||\n                                editedPetData.microchipped === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'microchipped', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.microchipped === null && option === \"N/A\") || \n                                (editedPetData.microchipped === true && option === \"Yes\") || \n                                (editedPetData.microchipped === false && option === \"No\") ||\n                                editedPetData.microchipped === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'microchipped')\n                      )}\n                    </View>\n                    <View style={styles.compatibilityItem}>\n                      <Text style={styles.compatibilityLabel}>Can be left alone:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {yesNoOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                (editedPetData.canBeLeftAlone === null && option === \"N/A\") || \n                                (editedPetData.canBeLeftAlone === true && option === \"Yes\") || \n                                (editedPetData.canBeLeftAlone === false && option === \"No\") ||\n                                editedPetData.canBeLeftAlone === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'canBeLeftAlone', option === \"N/A\" ? null : option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                (editedPetData.canBeLeftAlone === null && option === \"N/A\") || \n                                (editedPetData.canBeLeftAlone === true && option === \"Yes\") || \n                                (editedPetData.canBeLeftAlone === false && option === \"No\") ||\n                                editedPetData.canBeLeftAlone === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        returnYesNoContainer(pet, 'canBeLeftAlone')\n                      )}\n                    </View>\n                  </View>\n                </View>\n              )}\n            </View>\n            \n            <View style={styles.detailSection}>\n              {renderSectionHeader(pet.id, \"Vet Information\", \"vetInfo\")}\n              \n              {isSectionExpanded(pet.id, \"vetInfo\") && (\n                <View style={styles.detailColumn}>\n                  <View style={styles.vetInfoContainer}>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Vet name:</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputShort}\n                          value={editedPetData.vetName || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'vetName', text)}\n                          placeholder=\"Enter vet name\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.vetName || 'None'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Vet address:</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputShort}\n                          value={editedPetData.vetAddress || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'vetAddress', text)}\n                          placeholder=\"Enter vet address\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.vetAddress || 'None'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Vet phone:</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputShort}\n                          value={editedPetData.vetPhone || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'vetPhone', text)}\n                          placeholder=\"Enter vet phone\"\n                          placeholderTextColor={theme.colors.placeholder}\n                          keyboardType=\"phone-pad\"\n                          maxLength={12}\n                        />\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.vetPhone || 'None'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Insurance provider:</Text>\n                      {isEditing ? (\n                        <TextInput\n                          style={styles.editInputShort}\n                          value={editedPetData.insuranceProvider || ''}\n                          onChangeText={(text) => handleEditChange(pet.id, 'insuranceProvider', text)}\n                          placeholder=\"Enter insurance provider\"\n                          placeholderTextColor={theme.colors.placeholder}\n                        />\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.insuranceProvider || 'Not specified'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Sex:</Text>\n                      {isEditing ? (\n                        <View style={styles.dropdownContainerEdit}>\n                          {sexOptions.map((option) => (\n                            <TouchableOpacity\n                              key={option}\n                              style={[\n                                styles.optionButton,\n                                editedPetData.sex === option ? styles.selectedOption : null\n                              ]}\n                              onPress={() => handleEditChange(pet.id, 'sex', option)}\n                            >\n                              <Text style={[\n                                styles.optionText,\n                                editedPetData.sex === option ? styles.selectedOptionText : null\n                              ]}>\n                                {option}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </View>\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.sex || 'None Selected'}</Text>\n                      )}\n                    </View>\n                    <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Adoption Date:</Text>\n                      {isEditing ? (\n                        <View style={styles.customDatePickerContainer}>\n                          <TouchableOpacity \n                            activeOpacity={0.8}\n                            style={styles.dateInputBox}\n                            onPress={() => showDatePicker(pet.id, 'adoptionDate')}\n                          >\n                            <Text style={[\n                              styles.dateInputText, \n                              !editedPetData.adoptionDate && styles.placeholderText\n                            ]}>\n                              {editedPetData.adoptionDate || 'MM-DD-YYYY'}\n                            </Text>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={styles.calendarButton}\n                            onPress={() => showDatePicker(pet.id, 'adoptionDate')}\n                            activeOpacity={0.7}\n                          >\n                            <MaterialCommunityIcons name=\"calendar\" size={20} color={theme.colors.primary} />\n                          </TouchableOpacity>\n                        </View>\n                      ) : (\n                        <Text style={styles.vetInfoText}>{pet.adoptionDate || 'Not specified'}</Text>\n                      )}\n                    </View>\n                    {/* TODO: add back after MVP <View style={styles.vetInfoItem}>\n                      <Text style={styles.vetInfoLabel}>Vet documents:</Text>\n                      {isEditing ? (\n                        <View style={styles.documentActionContainer}>\n                          <TouchableOpacity \n                            style={styles.uploadButton}\n                            onPress={() => handleUploadDocument(pet.id)}\n                          >\n                            <MaterialCommunityIcons name=\"upload\" size={16} color={theme.colors.background} />\n                            <Text style={styles.uploadButtonText}>Upload</Text>\n                          </TouchableOpacity>\n                          {renderVetDocuments(editedPetData.vetDocuments)}\n                        </View>\n                      ) : (\n                        <TouchableOpacity style={styles.documentButton}>\n                          <MaterialCommunityIcons name=\"file-document-outline\" size={16} color={theme.colors.primary} />\n                          <Text style={styles.documentButtonText}>View documents</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View> */}\n                  </View>\n                </View>\n              )}\n            </View>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  const validateContactInput = (field, value, type) => {\n    debugLog('MBA1234', 'Validating contact input:', { field, value, type });\n    \n    let sanitized = value;\n    let error = '';\n    \n    if (field === 'name') {\n      sanitized = sanitizeInput(value, 'name', { maxLength: 50 });\n      \n      // Check for malicious content\n      const originalLength = value.length;\n      const sanitizedLength = sanitized.length;\n      const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n      \n      if (removalPercentage > 30 && originalLength > 3) {\n        debugLog('MBA1234', `Malicious content detected in ${type} name:`, { originalLength, sanitizedLength, removalPercentage });\n        error = `Invalid characters detected in ${type} name`;\n      } else {\n        const nameValidation = validateName(sanitized);\n        if (!nameValidation.isValid && sanitized.length > 0) {\n          error = nameValidation.message;\n        } else if (sanitized.length > 0 && sanitized.length < 2) {\n          error = `${type} name must be at least 2 characters long`;\n        }\n      }\n    } else if (field === 'phone') {\n      // For contact phone, be more restrictive - only allow numbers and format as XXX-XXX-XXXX\n      const numbersOnly = value.replace(/\\D/g, ''); // Remove all non-digits\n      \n      if (numbersOnly.length > 10) {\n        // Don't allow more than 10 digits\n        sanitized = formatPhoneNumber(numbersOnly.substring(0, 10));\n        error = 'Phone number cannot exceed 10 digits';\n      } else if (numbersOnly.length > 0) {\n        sanitized = formatPhoneNumber(numbersOnly);\n        \n        if (numbersOnly.length === 10) {\n          // Validate complete phone number\n          const phoneValidation = validatePhoneNumber(sanitized);\n          if (!phoneValidation.isValid) {\n            error = phoneValidation.message;\n          }\n        } else if (numbersOnly.length < 10 && numbersOnly.length > 0) {\n          // Allow partial entry but show it's incomplete\n          // Don't set error for partial entry to allow typing\n        }\n      } else {\n        sanitized = '';\n      }\n    }\n    \n    return { sanitized, error };\n  };\n\n  const handleContactInputChange = (field, value, type) => {\n    // First check for dangerous content that should always be blocked\n    const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(value);\n    const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(value);\n    \n    if (hasScriptTags || hasSqlInjection) {\n      debugLog('MBA1234', 'Dangerous content detected and blocked in contact input:', { field, value, type });\n      return; // Don't update the input if it contains dangerous content\n    }\n    \n    const { sanitized, error } = validateContactInput(field, value, type);\n    \n    // Update validation errors\n    setContactValidationErrors(prevErrors => {\n      const newErrors = { ...prevErrors };\n      const errorKey = `${type}_${field}`;\n      \n      if (error) {\n        newErrors[errorKey] = error;\n      } else {\n        delete newErrors[errorKey];\n      }\n      \n      return newErrors;\n    });\n    \n    // Update the input state with sanitized value for proper formatting\n    if (type === 'emergency') {\n      setNewEmergencyContact(prev => ({\n        ...prev,\n        [field]: sanitized\n      }));\n    } else if (type === 'household') {\n      setNewHouseholdMember(prev => ({\n        ...prev,\n        [field]: sanitized\n      }));\n    }\n  };\n\n  const handleAddEmergencyContact = () => {\n    // Validate inputs before adding\n    const nameError = contactValidationErrors.emergency_name;\n    const phoneError = contactValidationErrors.emergency_phone;\n    \n    if (nameError || phoneError) {\n      debugLog('MBA1234', 'Cannot add emergency contact due to validation errors:', { nameError, phoneError });\n      return;\n    }\n    \n    if (newEmergencyContact.name && newEmergencyContact.phone) {\n      debugLog(\"MBA123\", \"Adding emergency contact\", newEmergencyContact);\n      const updatedContacts = [...(preferences.emergencyContacts || []), newEmergencyContact];\n      onUpdatePreferences('emergencyContacts', updatedContacts);\n      setNewEmergencyContact({ name: '', phone: '' });\n      setIsAddingEmergencyContact(false);\n      \n      // Clear validation errors\n      setContactValidationErrors(prevErrors => {\n        const newErrors = { ...prevErrors };\n        delete newErrors.emergency_name;\n        delete newErrors.emergency_phone;\n        return newErrors;\n      });\n    }\n  };\n\n  const handleAddHouseholdMember = () => {\n    // Validate inputs before adding\n    const nameError = contactValidationErrors.household_name;\n    const phoneError = contactValidationErrors.household_phone;\n    \n    if (nameError || phoneError) {\n      debugLog('MBA1234', 'Cannot add household member due to validation errors:', { nameError, phoneError });\n      return;\n    }\n    \n    if (newHouseholdMember.name && newHouseholdMember.phone) {\n      debugLog(\"MBA123\", \"Adding household member\", newHouseholdMember);\n      const updatedMembers = [...(preferences.authorizedHouseholdMembers || []), newHouseholdMember];\n      onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n      setNewHouseholdMember({ name: '', phone: '' });\n      setIsAddingHouseholdMember(false);\n      \n      // Clear validation errors\n      setContactValidationErrors(prevErrors => {\n        const newErrors = { ...prevErrors };\n        delete newErrors.household_name;\n        delete newErrors.household_phone;\n        return newErrors;\n      });\n    }\n  };\n\n  const handleRemoveEmergencyContact = (index) => {\n    debugLog(\"MBA123\", \"Removing emergency contact\", index);\n    const updatedContacts = [...(preferences.emergencyContacts || [])];\n    updatedContacts.splice(index, 1);\n    onUpdatePreferences('emergencyContacts', updatedContacts);\n  };\n\n  const handleRemoveHouseholdMember = (index) => {\n    debugLog(\"MBA123\", \"Removing household member\", index);\n    const updatedMembers = [...(preferences.authorizedHouseholdMembers || [])];\n    updatedMembers.splice(index, 1);\n    onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n  };\n\n  const handleAddAsHouseholdMember = (contact) => {\n    debugLog(\"MBA123\", \"Adding emergency contact as household member\", contact);\n    const updatedMembers = [...(preferences.authorizedHouseholdMembers || [])];\n    \n    // Check if already exists\n    const exists = updatedMembers.some(member => \n      member.name === contact.name && member.phone === contact.phone\n    );\n    \n    if (!exists) {\n      updatedMembers.push(contact);\n      onUpdatePreferences('authorizedHouseholdMembers', updatedMembers);\n    }\n  };\n\n  const renderEmergencyContactsSection = () => {\n    if (userRole !== 'petOwner') return null;\n\n    return (\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Emergency Contacts</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={() => setIsAddingEmergencyContact(!isAddingEmergencyContact)}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Contact</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {isAddingEmergencyContact && (\n          <View style={styles.addContactForm}>\n            <View>\n              <TextInput\n                style={[\n                  styles.input,\n                  contactValidationErrors.emergency_name ? styles.inputError : null\n                ]}\n                placeholder=\"Contact Name\"\n                value={newEmergencyContact.name}\n                onChangeText={(text) => handleContactInputChange('name', text, 'emergency')}\n                maxLength={50}\n              />\n              {contactValidationErrors.emergency_name ? (\n                <Text style={styles.errorText}>{contactValidationErrors.emergency_name}</Text>\n              ) : null}\n            </View>\n            <View>\n              <TextInput\n                style={[\n                  styles.input,\n                  contactValidationErrors.emergency_phone ? styles.inputError : null\n                ]}\n                placeholder=\"719-510-6342\"\n                value={newEmergencyContact.phone}\n                onChangeText={(text) => handleContactInputChange('phone', text, 'emergency')}\n                keyboardType=\"phone-pad\"\n                maxLength={12}\n              />\n              {contactValidationErrors.emergency_phone ? (\n                <Text style={styles.errorText}>{contactValidationErrors.emergency_phone}</Text>\n              ) : null}\n            </View>\n            <TouchableOpacity \n              style={[\n                styles.submitButton,\n                (contactValidationErrors.emergency_name || contactValidationErrors.emergency_phone || !newEmergencyContact.name.trim() || !newEmergencyContact.phone.trim()) ? styles.submitButtonDisabled : null\n              ]}\n              onPress={handleAddEmergencyContact}\n              disabled={contactValidationErrors.emergency_name || contactValidationErrors.emergency_phone || !newEmergencyContact.name.trim() || !newEmergencyContact.phone.trim()}\n            >\n              <Text style={styles.submitButtonText}>Save Contact</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        <View style={styles.contactsList}>\n          {(preferences.emergencyContacts || []).map((contact, index) => (\n            <View key={index} style={styles.contactCard}>\n              <View style={styles.contactInfo}>\n                <Text style={styles.contactName}>{contact.name}</Text>\n                <Text style={styles.contactPhone}>{contact.phone}</Text>\n              </View>\n              <View style={styles.contactActions}>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleAddAsHouseholdMember(contact)}\n                >\n                  <MaterialCommunityIcons name=\"account-plus\" size={20} color={theme.colors.primary} />\n                </TouchableOpacity>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleRemoveEmergencyContact(index)}\n                >\n                  <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n          {(preferences.emergencyContacts || []).length === 0 && !isAddingEmergencyContact && (\n            <Text style={styles.emptyListText}>No emergency contacts added yet</Text>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const renderHouseholdMembersSection = () => {\n    if (userRole !== 'petOwner') return null;\n\n    return (\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>Authorized Household Members</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={() => setIsAddingHouseholdMember(!isAddingHouseholdMember)}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Member</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {isAddingHouseholdMember && (\n          <View style={styles.addContactForm}>\n            <View>\n              <TextInput\n                style={[\n                  styles.input,\n                  contactValidationErrors.household_name ? styles.inputError : null\n                ]}\n                placeholder=\"Member Name\"\n                value={newHouseholdMember.name}\n                onChangeText={(text) => handleContactInputChange('name', text, 'household')}\n                maxLength={50}\n              />\n              {contactValidationErrors.household_name ? (\n                <Text style={styles.errorText}>{contactValidationErrors.household_name}</Text>\n              ) : null}\n            </View>\n            <View>\n              <TextInput\n                style={[\n                  styles.input,\n                  contactValidationErrors.household_phone ? styles.inputError : null\n                ]}\n                placeholder=\"719-510-6342\"\n                value={newHouseholdMember.phone}\n                onChangeText={(text) => handleContactInputChange('phone', text, 'household')}\n                keyboardType=\"phone-pad\"\n                maxLength={12}\n              />\n              {contactValidationErrors.household_phone ? (\n                <Text style={styles.errorText}>{contactValidationErrors.household_phone}</Text>\n              ) : null}\n            </View>\n            <TouchableOpacity \n              style={[\n                styles.submitButton,\n                (contactValidationErrors.household_name || contactValidationErrors.household_phone || !newHouseholdMember.name.trim() || !newHouseholdMember.phone.trim()) ? styles.submitButtonDisabled : null\n              ]}\n              onPress={handleAddHouseholdMember}\n              disabled={contactValidationErrors.household_name || contactValidationErrors.household_phone || !newHouseholdMember.name.trim() || !newHouseholdMember.phone.trim()}\n            >\n              <Text style={styles.submitButtonText}>Save Member</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n        \n        <View style={styles.contactsList}>\n          {(preferences.authorizedHouseholdMembers || []).map((member, index) => (\n            <View key={index} style={styles.contactCard}>\n              <View style={styles.contactInfo}>\n                <Text style={styles.contactName}>{member.name}</Text>\n                <Text style={styles.contactPhone}>{member.phone}</Text>\n              </View>\n              <View style={styles.contactActions}>\n                <TouchableOpacity \n                  style={styles.actionButton}\n                  onPress={() => handleRemoveHouseholdMember(index)}\n                >\n                  <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          ))}\n          {(preferences.authorizedHouseholdMembers || []).length === 0 && !isAddingHouseholdMember && (\n            <Text style={styles.emptyListText}>No household members added yet</Text>\n          )}\n        </View>\n      </View>\n    );\n  };\n\n  const formatDateString = (date) => {\n    if (!date) return '';\n    \n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\n    const day = date.getDate().toString().padStart(2, '0');\n    const year = date.getFullYear();\n    \n    return `${month}-${day}-${year}`;\n  };\n\n  const parseDate = (dateString) => {\n    if (!dateString) return new Date();\n    \n    const [month, day, year] = dateString.split('-').map(part => parseInt(part, 10));\n    \n    if (!month || !day || !year || isNaN(month) || isNaN(day) || isNaN(year)) {\n      return new Date();\n    }\n    \n    return new Date(year, month - 1, day);\n  };\n\n  const showDatePicker = (petId, field) => {\n    const currentDate = parseDate(editedPetsData[petId]?.[field]);\n    \n    setDisplayMonth(currentDate.getMonth());\n    setDisplayYear(currentDate.getFullYear());\n    \n    setDatePickerConfig({\n      isVisible: true,\n      currentField: field,\n      currentPetId: petId,\n      selectedDate: currentDate\n    });\n  };\n\n  const handleDatePickerSelect = (event, date) => {\n    // On Android, this is called immediately when a date is selected\n    if (Platform.OS === 'android') {\n      if (event?.type === 'dismissed') {\n        setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n        return;\n      }\n      \n      if (date) {\n        const formattedDate = formatDateString(date);\n        handleEditChange(datePickerConfig.currentPetId, datePickerConfig.currentField, formattedDate);\n      }\n      \n      setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n      return;\n    }\n    \n    // For iOS and Web, this is called when the confirm button is pressed\n    if (date) {\n      const formattedDate = formatDateString(date);\n      handleEditChange(datePickerConfig.currentPetId, datePickerConfig.currentField, formattedDate);\n    }\n    \n    setDatePickerConfig({\n      isVisible: false,\n      currentField: null,\n      currentPetId: null,\n      selectedDate: null\n    });\n  };\n\n  // Generate calendar grid data\n  const calendarData = useMemo(() => {\n    if (!datePickerConfig.isVisible) return [];\n    \n    const currentDate = datePickerConfig.selectedDate || new Date();\n    const firstDayOfMonth = new Date(displayYear, displayMonth, 1);\n    const lastDayOfMonth = new Date(displayYear, displayMonth + 1, 0);\n    const daysInMonth = lastDayOfMonth.getDate();\n    const startingDayOfWeek = firstDayOfMonth.getDay(); // 0 = Sunday, 1 = Monday, etc.\n    \n    // Create calendar grid with padding for previous and next month days\n    const totalDays = Math.ceil((daysInMonth + startingDayOfWeek) / 7) * 7;\n    const calendarDays = [];\n    \n    let dayCounter = 1 - startingDayOfWeek;\n    for (let i = 0; i < totalDays; i++) {\n      const dayDate = new Date(displayYear, displayMonth, dayCounter);\n      const isCurrentMonth = dayDate.getMonth() === displayMonth;\n      const isSelectedDate = isCurrentMonth && \n        dayDate.getDate() === currentDate.getDate() && \n        dayDate.getMonth() === currentDate.getMonth() && \n        dayDate.getFullYear() === currentDate.getFullYear();\n      \n      calendarDays.push({\n        date: dayDate,\n        day: dayDate.getDate(),\n        isCurrentMonth,\n        isSelectedDate,\n      });\n      \n      dayCounter++;\n    }\n    \n    // Group by weeks\n    const weeks = [];\n    for (let i = 0; i < calendarDays.length; i += 7) {\n      weeks.push(calendarDays.slice(i, i + 7));\n    }\n    \n    return weeks;\n  }, [displayMonth, displayYear, datePickerConfig.selectedDate, datePickerConfig.isVisible]);\n  \n  // Navigation functions\n  const goToPreviousMonth = () => {\n    if (displayMonth === 0) {\n      setDisplayMonth(11);\n      setDisplayYear(prevYear => prevYear - 1);\n    } else {\n      setDisplayMonth(prevMonth => prevMonth - 1);\n    }\n    // Close any open dropdowns when navigating\n    setShowMonthPicker(false);\n    setShowYearPicker(false);\n  };\n  \n  const goToNextMonth = () => {\n    if (displayMonth === 11) {\n      setDisplayMonth(0);\n      setDisplayYear(prevYear => prevYear + 1);\n    } else {\n      setDisplayMonth(prevMonth => prevMonth + 1);\n    }\n    // Close any open dropdowns when navigating\n    setShowMonthPicker(false);\n    setShowYearPicker(false);\n  };\n  \n  const selectDate = (date) => {\n    // Close any open dropdowns when selecting a date\n    setShowMonthPicker(false);\n    setShowYearPicker(false);\n    // Just update the selected date without closing the modal\n    setDatePickerConfig(prev => ({\n      ...prev,\n      selectedDate: date\n    }));\n  };\n\n  const renderDatePickerModal = () => {\n    if (!datePickerConfig.isVisible) return null;\n    \n    // For Android, use the native date picker\n    if (Platform.OS === 'android') {\n      return (\n        <DateTimePicker\n          value={datePickerConfig.selectedDate}\n          mode=\"date\"\n          display=\"default\"\n          onChange={handleDatePickerSelect}\n        />\n      );\n    }\n    \n    // Month names for header\n    const monthNames = [\n      'January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    // Generate years array - only current and previous years, with current year first\n    const currentYear = new Date().getFullYear();\n    const years = Array.from({ length: 101 }, (_, i) => currentYear - i);\n    \n    // Function to handle clicking outside dropdowns\n    const handleOutsideClick = () => {\n      setShowMonthPicker(false);\n      setShowYearPicker(false);\n    };\n    \n    return (\n      <Modal\n        visible={datePickerConfig.isVisible}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => {\n          setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n          setShowMonthPicker(false);\n          setShowYearPicker(false);\n        }}\n      >\n        <TouchableOpacity\n          style={styles.modalOverlay}\n          activeOpacity={1}\n          onPress={handleOutsideClick}\n        >\n          <View style={styles.calendarModalContent}>\n            <View style={styles.calendarModalHeader}>\n              <Text style={styles.calendarModalTitle}>\n                Select {datePickerConfig.currentField === 'birthday' ? 'Birthday' : 'Adoption Date'}\n              </Text>\n              <TouchableOpacity \n                onPress={() => {\n                  setDatePickerConfig(prev => ({ ...prev, isVisible: false }));\n                  setShowMonthPicker(false);\n                  setShowYearPicker(false);\n                }}\n                style={styles.closeButton}\n              >\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            \n            {/* Calendar Header with Dropdowns */}\n            <View style={styles.calendarHeader}>\n              <View style={styles.dropdownContainer}>\n                <TouchableOpacity \n                  style={styles.dropdownButton}\n                  onPress={(e) => {\n                    e.stopPropagation();\n                    setShowMonthPicker(!showMonthPicker);\n                    setShowYearPicker(false);\n                  }}\n                >\n                  <Text style={styles.dropdownButtonText}>{monthNames[displayMonth]}</Text>\n                  <MaterialCommunityIcons \n                    name={showMonthPicker ? \"chevron-up\" : \"chevron-down\"} \n                    size={20} \n                    color={theme.colors.text} \n                  />\n                </TouchableOpacity>\n                \n                <TouchableOpacity \n                  style={styles.dropdownButton}\n                  onPress={(e) => {\n                    e.stopPropagation();\n                    setShowYearPicker(!showYearPicker);\n                    setShowMonthPicker(false);\n                  }}\n                >\n                  <Text style={styles.dropdownButtonText}>{displayYear}</Text>\n                  <MaterialCommunityIcons \n                    name={showYearPicker ? \"chevron-up\" : \"chevron-down\"} \n                    size={20} \n                    color={theme.colors.text} \n                  />\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* Month Picker Dropdown */}\n            {showMonthPicker && (\n              <TouchableOpacity \n                style={styles.dropdownList}\n                activeOpacity={1}\n                onPress={(e) => e.stopPropagation()}\n              >\n                <ScrollView style={styles.dropdownScrollView}>\n                  {monthNames.map((month, index) => (\n                    <TouchableOpacity\n                      key={month}\n                      style={[\n                        styles.dropdownItem,\n                        displayMonth === index && styles.dropdownItemSelected\n                      ]}\n                      onPress={(e) => {\n                        e.stopPropagation();\n                        setDisplayMonth(index);\n                        setShowMonthPicker(false);\n                      }}\n                    >\n                      <Text style={[\n                        styles.dropdownItemText,\n                        displayMonth === index && styles.dropdownItemTextSelected\n                      ]}>\n                        {month}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n              </TouchableOpacity>\n            )}\n\n            {/* Year Picker Dropdown */}\n            {showYearPicker && (\n              <TouchableOpacity \n                style={styles.dropdownList}\n                activeOpacity={1}\n                onPress={(e) => e.stopPropagation()}\n              >\n                <ScrollView style={styles.dropdownScrollView}>\n                  {years.map((year) => (\n                    <TouchableOpacity\n                      key={year}\n                      style={[\n                        styles.dropdownItem,\n                        displayYear === year && styles.dropdownItemSelected\n                      ]}\n                      onPress={(e) => {\n                        e.stopPropagation();\n                        setDisplayYear(year);\n                        setShowYearPicker(false);\n                      }}\n                    >\n                      <Text style={[\n                        styles.dropdownItemText,\n                        displayYear === year && styles.dropdownItemTextSelected\n                      ]}>\n                        {year}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n              </TouchableOpacity>\n            )}\n            \n            {/* Weekday Headers */}\n            <TouchableOpacity \n              activeOpacity={1} \n              onPress={(e) => e.stopPropagation()}\n            >\n              <View style={styles.weekdayLabels}>\n                {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day, index) => (\n                  <Text key={index} style={styles.weekdayLabel}>{day}</Text>\n                ))}\n              </View>\n            </TouchableOpacity>\n            \n            {/* Calendar Grid */}\n            <TouchableOpacity \n              activeOpacity={1} \n              onPress={(e) => e.stopPropagation()}\n            >\n              <View style={styles.calendarGrid}>\n                {calendarData.map((week, weekIndex) => (\n                  <View key={weekIndex} style={styles.calendarRow}>\n                    {week.map((dayObj, dayIndex) => (\n                      <TouchableOpacity\n                        key={dayIndex}\n                        style={[\n                          styles.calendarDay,\n                          !dayObj.isCurrentMonth && styles.calendarDayOtherMonth,\n                          dayObj.isSelectedDate && styles.calendarDaySelected\n                        ]}\n                        onPress={(e) => {\n                          e.stopPropagation();\n                          if (dayObj.isCurrentMonth) selectDate(dayObj.date);\n                        }}\n                        disabled={!dayObj.isCurrentMonth}\n                      >\n                        <Text style={[\n                          styles.calendarDayText,\n                          !dayObj.isCurrentMonth && styles.calendarDayTextOtherMonth,\n                          dayObj.isSelectedDate && styles.calendarDayTextSelected\n                        ]}>\n                          {dayObj.day}\n                        </Text>\n                      </TouchableOpacity>\n                    ))}\n                  </View>\n                ))}\n              </View>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n              style={styles.confirmButton}\n              onPress={(e) => {\n                e.stopPropagation();\n                handleDatePickerSelect(null, datePickerConfig.selectedDate);\n              }}\n            >\n              <Text style={styles.confirmButtonText}>Confirm</Text>\n            </TouchableOpacity>\n          </View>\n        </TouchableOpacity>\n      </Modal>\n    );\n  };\n\n  // Helper function to show error toasts with consistent formatting\n  const showErrorMessage = (title, error) => {\n    let errorMessage = \"There was a problem with this operation. Please try again.\";\n    \n    // Check if we have more specific error details from the API\n    if (error.response && error.response.data) {\n      const details = error.response.data.details;\n      if (details) {\n        // Build a more specific error message\n        errorMessage = \"Error details: \";\n        \n        Object.keys(details).forEach(field => {\n          errorMessage += `${field}: ${details[field].join(\", \")}`;\n        });\n      } else if (error.response.data.error) {\n        errorMessage = error.response.data.error;\n      }\n    } else if (error.message) {\n      errorMessage = error.message;\n    }\n    \n    toast({\n      message: `${title}: ${errorMessage}`,\n      type: 'error',\n      duration: 5000\n    });\n  };\n\n\n  // New helper function to replace a temporary pet with a real one in a single operation\n  const replaceTempPetWithReal = (tempPetId, realPetData) => {\n    try {\n      // Detailed debugging for the pet replacement process\n      debugLog(\"MBAi39gh45v\", \"REPLACE PET START - Current pets before replacement:\", \n        Array.isArray(pets) ? \n          pets.map(p => ({ id: p.id, name: p.name || 'unnamed' })) : \n          'pets is not an array');\n          \n      debugLog(\"MBAi39gh45v\", \"REPLACE PET - Temp ID to replace:\", tempPetId);\n      debugLog(\"MBAi39gh45v\", \"REPLACE PET - Real pet data:\", JSON.stringify(realPetData));\n      \n      // Make sure we have valid input data\n      if (!tempPetId || !realPetData) {\n        debugLog(\"MBAi39gh45v\", \"REPLACE PET ERROR - Invalid data provided\", { tempPetId, realPetData });\n        // Just show success toast but don't attempt replacement\n        toast({\n          message: `Pet saved successfully!`,\n          type: 'success',\n          duration: 4000\n        });\n        return;\n      }\n      \n      // Log the full response data to help diagnose issues\n      debugLog(\"MBA5555\", \"REPLACE PET - Backend response data:\", JSON.stringify(realPetData));\n      \n      // The pet_id from the server response is the primary key in the database\n      // This is the ID we should always use for the pet\n      const realPetId = realPetData.pet_id;\n      \n      // Verify we have a valid ID\n      if (!realPetId) {\n        debugLog(\"MBA5555\", \"REPLACE PET ERROR - No pet_id in server response:\", realPetData);\n        // If somehow we don't have a pet_id (this should never happen), show an error\n        toast({\n          message: \"Pet was created but ID is missing. Please refresh the page.\",\n          type: 'warning',\n          duration: 5000\n        });\n      } else {\n        debugLog(\"MBA5555\", \"REPLACE PET - Using pet_id from server:\", realPetId);\n      }\n      \n      debugLog(\"MBA5555\", \"REPLACE PET - Using pet ID:\", realPetId);\n      \n      // Helper function to convert backend boolean to UI Yes/No/N/A\n      const booleanToYesNo = (value) => {\n        if (value === true) return \"Yes\";\n        if (value === false) return \"No\";\n        return \"N/A\";\n      };\n      \n      // Format the pet data with the correct field mappings for UI\n      const formattedPetData = {\n        ...realPetData,\n        // Always use the pet_id from the API response as our primary id\n        id: realPetId,\n        // Ensure proper type mapping between backend and UI\n        type: realPetData.species || realPetData.type || '',\n        // Make sure feeding instructions are mapped properly\n        feedingInstructions: realPetData.feeding_schedule || realPetData.feedingInstructions || '',\n        // Make sure medical notes are mapped properly\n        medicalNotes: realPetData.medication_notes || realPetData.medicalNotes || '',\n        // Make sure potty break schedule is mapped properly\n        pottyBreakSchedule: realPetData.potty_break_schedule || realPetData.pottyBreakSchedule || '',\n        // Make sure special care instructions are mapped properly\n        specialCareInstructions: realPetData.special_care_instructions || realPetData.specialCareInstructions || '',\n        // Map vet info fields\n        vetName: realPetData.vet_name || '',\n        vetAddress: realPetData.vet_address || '',\n        vetPhone: realPetData.vet_phone || '',\n        insuranceProvider: realPetData.insurance_provider || '',\n        // Format compatibility fields for UI (true/false/null to Yes/No/N/A)\n        childrenFriendly: booleanToYesNo(realPetData.friendly_with_children),\n        catFriendly: booleanToYesNo(realPetData.friendly_with_cats),\n        dogFriendly: booleanToYesNo(realPetData.friendly_with_dogs),\n        houseTrained: booleanToYesNo(realPetData.house_trained),\n        spayedNeutered: booleanToYesNo(realPetData.spayed_neutered),\n        microchipped: booleanToYesNo(realPetData.microchipped),\n        canBeLeftAlone: booleanToYesNo(realPetData.can_be_left_alone),\n        // Format dates correctly\n        birthday: realPetData.birthday ? formatDateFromBackend(realPetData.birthday) : null,\n        adoptionDate: realPetData.adoption_date ? formatDateFromBackend(realPetData.adoption_date) : null,\n        // Preserve photo information if it exists\n        photoUri: realPetData.profile_photo ? \n          getMediaUrl(realPetData.profile_photo) : \n          null,\n        // Add a flag to indicate this pet was just created (for UI logic)\n        justCreated: true,\n        // Important - make sure name is preserved in the UI\n        name: realPetData.name || 'Unnamed Pet',\n        // Explicitly copy other fields that might be missing\n        breed: realPetData.breed || '',\n        energyLevel: realPetData.energy_level || '',\n      };\n      \n      debugLog(\"MBA5555\", \"REPLACE PET - Formatted pet data:\", { \n        tempPetId, \n        realPetId,\n        name: formattedPetData.name,\n        type: formattedPetData.type,\n        breed: formattedPetData.breed\n      });\n      \n      // Get the data the user was editing\n      const editedData = editedPetsData[tempPetId] || {};\n      \n      // Merge user edits with server data to ensure no data loss\n      const mergedPetData = {\n        ...formattedPetData,\n        // If user edited these fields, prefer their values over server values\n        name: editedData.name || formattedPetData.name,\n        breed: editedData.breed || formattedPetData.breed,\n        type: editedData.type || formattedPetData.type,\n        // Preserve user's compatibility field selections\n        childrenFriendly: editedData.childrenFriendly || formattedPetData.childrenFriendly,\n        catFriendly: editedData.catFriendly || formattedPetData.catFriendly,\n        dogFriendly: editedData.dogFriendly || formattedPetData.dogFriendly,\n        houseTrained: editedData.houseTrained || formattedPetData.houseTrained,\n        spayedNeutered: editedData.spayedNeutered || formattedPetData.spayedNeutered,\n        microchipped: editedData.microchipped || formattedPetData.microchipped,\n        canBeLeftAlone: editedData.canBeLeftAlone || formattedPetData.canBeLeftAlone,\n        // Preserve user's energy level selection\n        energyLevel: editedData.energyLevel || formattedPetData.energyLevel,\n        // Preserve other user-edited fields\n        sex: editedData.sex || formattedPetData.sex,\n        weight: editedData.weight || formattedPetData.weight,\n        feedingInstructions: editedData.feedingInstructions || formattedPetData.feedingInstructions,\n        medicalNotes: editedData.medicalNotes || formattedPetData.medicalNotes,\n        pottyBreakSchedule: editedData.pottyBreakSchedule || formattedPetData.pottyBreakSchedule,\n        specialCareInstructions: editedData.specialCareInstructions || formattedPetData.specialCareInstructions,\n        medications: editedData.medications || formattedPetData.medications,\n        vetName: editedData.vetName || formattedPetData.vetName,\n        vetAddress: editedData.vetAddress || formattedPetData.vetAddress,\n        vetPhone: editedData.vetPhone || formattedPetData.vetPhone,\n        insuranceProvider: editedData.insuranceProvider || formattedPetData.insuranceProvider,\n        birthday: editedData.birthday || formattedPetData.birthday,\n        adoptionDate: editedData.adoptionDate || formattedPetData.adoptionDate,\n      };\n      \n      // Clean up the edited data for the temp pet\n      setEditedPetsData(prev => {\n        const newData = { ...prev };\n        delete newData[tempPetId];\n        return newData;\n      });\n      \n      // Notify parent component of the replacement - critical to prevent duplicate pets\n      try {\n        // Save a copy of the current pets array for debugging\n        const petsBefore = Array.isArray(pets) ? [...pets] : [];\n        debugLog(\"MBAi39gh45v\", \"REPLACE PET - Pets count before update:\", petsBefore.length);\n        \n        // Double-check that the merged pet data is valid\n        if (!mergedPetData.id && !mergedPetData.pet_id) {\n          debugLog(\"MBAi39gh45v\", \"REPLACE PET ERROR - Merged data has no valid ID:\", mergedPetData);\n          mergedPetData.id = `generated_${Date.now()}`;\n          debugLog(\"MBAi39gh45v\", \"REPLACE PET FIX - Generated new ID:\", mergedPetData.id);\n        }\n        \n        if (onReplacePet) {\n          debugLog(\"MBAi39gh45v\", \"REPLACE PET - Calling onReplacePet:\", {\n            tempId: tempPetId,\n            realId: mergedPetData.id || mergedPetData.pet_id,\n            name: mergedPetData.name\n          });\n          \n          // Build a new pets array for atomic replacement\n          // The parent component expects a complete new array, not just two parameters\n          const newPetsArray = [\n            // Add the new pet at the top for better visibility\n            mergedPetData,\n            // Add all previous pets except the temp one we're replacing\n            ...pets.filter(p => p.id !== tempPetId)\n          ];\n          \n          // Actually call the parent function to replace the entire pets array\n          onReplacePet(newPetsArray);\n          \n          // Debug the result after a short delay to allow state updates\n          setTimeout(() => {\n            debugLog(\"MBAi39gh45v\", \"REPLACE PET - After onReplacePet, pets count:\", \n              Array.isArray(pets) ? pets.length : \"pets not an array\");\n          }, 100);\n        } else {\n          // Fallback if onReplacePet is not provided (though it should be)\n          debugLog(\"MBAi39gh45v\", \"REPLACE PET WARNING - No onReplacePet handler provided by parent component\");\n          \n          // Use onDeletePet and onAddPet as a fallback, adding to the top of the list\n          if (onDeletePet && onAddPet) {\n            debugLog(\"MBAi39gh45v\", \"REPLACE PET - Using fallback: delete temp pet and add real pet\");\n            \n            // Safely create a copy of the merged pet data to avoid reference issues\n            const newPetData = {...mergedPetData, _addToTop: true};\n            \n            // First, add the new pet to ensure we don't end up with an empty list\n            onAddPet(newPetData);\n            \n            // Then delete the temporary pet - but only if it's different from what we just added\n            if (tempPetId !== newPetData.id) {\n              onDeletePet(tempPetId);\n            }\n            \n            // Debug the result after a short delay\n            setTimeout(() => {\n              debugLog(\"MBAi39gh45v\", \"REPLACE PET - After fallback method, pets count:\", \n                Array.isArray(pets) ? pets.length : \"pets not an array\");\n            }, 100);\n          } else {\n            // No replacement methods available at all\n            debugLog(\"MBAi39gh45v\", \"REPLACE PET ERROR - No methods available to update pets list\");\n            toast({\n              message: \"Unable to update pets list. Please refresh the page.\",\n              type: 'error',\n              duration: 4000\n            });\n          }\n        }\n      } catch (error) {\n        // If the parent component's update methods fail, at least don't crash\n        debugLog(\"MBAi39gh45v\", \"REPLACE PET ERROR - Exception updating parent component:\", error);\n        \n        // Safety check: If somehow the pets list is no longer an array, restore it\n        // This is the critical fix for the main bug where pets becomes a string\n        if (!Array.isArray(pets)) {\n          debugLog(\"MBAi39gh45v\", \"REPLACE PET CRITICAL ERROR - pets is not an array after replace:\", pets);\n          \n          // Restore from the saved copy we made earlier\n          const petsBefore = Array.isArray(pets) ? [...pets] : [];\n          \n          // If we have the original pets array, use that with the new pet added\n          if (Array.isArray(petsBefore) && petsBefore.length > 0) {\n            // Create a clean pets array with the new pet added\n            const restoredPets = [\n              // Add the new pet at the top\n              mergedPetData,\n              // Add all previous pets except the temp one\n              ...petsBefore.filter(p => p.id !== tempPetId)\n            ];\n            \n            // If the parent component has a pets state setter, we could call it here\n            // This is commented out because we don't have direct access to the parent's state setter\n            // setPets(restoredPets);\n            \n            debugLog(\"MBAi39gh45v\", \"REPLACE PET FIX - Created restored pets array with length:\", restoredPets.length);\n          }\n        }\n        \n        toast({\n          message: \"Pet saved but display may not be updated. Please refresh if needed.\",\n          type: 'info',\n          duration: 4000\n        });\n      }\n      \n      // Clear any editing state for the temp pet\n      setEditingPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(tempPetId);\n        return newSet;\n      });\n      \n      // Update expanded state to show the real pet\n      setExpandedPetIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(tempPetId);\n        newSet.add(realPetId);\n        return newSet;\n      });\n      \n      // Log success\n      debugLog(\"MBA5555\", \"REPLACE PET - Successfully replaced temp pet with real pet\");\n      \n      // No need for a toast anymore since we've properly handled the data\n      \n    } catch (error) {\n      debugLog(\"MBA5555\", \"REPLACE PET - Error replacing pet:\", error);\n    }\n  };\n\n  // Handle saving the cropped pet image\n  const handleSaveCroppedPetImage = async (imageUri, cropParams) => {\n    try {\n      setIsUploadingPhoto(true);\n      \n      debugLog('MBA5555', 'Processing cropped pet image with params:', cropParams);\n      \n      // Process the image with crop parameters\n      const processedImage = await processImageWithCrop(imageUri, cropParams);\n      \n      // For web platform, we get a base64 data URL that we can display directly\n      let displayUri = imageUri;\n      if (processedImage.base64Data) {\n        displayUri = processedImage.base64Data;\n      }\n      \n      // Update the edited pet data with the new photo URI\n      setEditedPetsData(prev => {\n        const petData = prev[currentEditingPetId] || {};\n        return {\n          ...prev,\n          [currentEditingPetId]: {\n            ...petData,\n            photo: processedImage, // Store the processed image for later upload\n            photoUri: displayUri, // Use the cropped image for display\n          }\n        };\n      });\n      \n      toast({\n        message: 'Pet photo updated. It will be saved when you save the pet.',\n        type: 'success',\n        duration: 4000\n      });\n      \n    } catch (error) {\n      debugLog('MBA5555', 'Error processing pet photo:', error);\n      toast({\n        message: 'Failed to process pet photo. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setIsUploadingPhoto(false);\n      setShowPetPhotoCropper(false);\n      setSelectedPetPhotoUri(null);\n      setCurrentEditingPetId(null);\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      {renderDatePickerModal()}\n      <ConfirmationModal\n        visible={deleteConfirmation.visible}\n        onClose={cancelDeletePet}\n        onConfirm={confirmDeletePet}\n        actionText={`delete ${deleteConfirmation.petName}`}\n        isLoading={deleteConfirmation.isDeleting}\n      />\n      <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.sectionHeader}>\n          <Text style={styles.sectionTitle}>My Pets</Text>\n          <TouchableOpacity \n            style={styles.addButton}\n            onPress={handleAddNewPet}\n          >\n            <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n            <Text style={styles.addButtonText}>Add Pet</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.petsList}>\n          {Array.isArray(pets) ? (\n            pets.length > 0 ? (\n              pets.map(renderPetCard)\n            ) : (\n              // Show empty state if pets array is empty\n              <View style={styles.emptyStateContainer}>\n                <Text style={styles.emptyStateText}>No pets found. Add a pet using the button above.</Text>\n              </View>\n            )\n          ) : (\n            // Show error state if pets is not an array\n            <View style={styles.emptyStateContainer}>\n              <Text style={styles.emptyStateText}>Error: Unable to display pets</Text>\n            </View>\n          )}\n        </View>\n      </View>\n\n      {/* TODO: uncomment this once we have implemented edit facilities */}\n      {/* <View style={[styles.section, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <Text style={styles.sectionTitle}>\n          {userRole === 'professional' ? 'My Home & Environment Facilities' : 'Home & Environment Preferences'}\n        </Text>\n        <Text style={styles.sectionDescription}>\n          {userRole === 'professional' \n            ? 'Select the facilities available in your home for pet care'\n            : 'Select your preferences for pet care facilities'\n          }\n        </Text>\n        <View style={styles.preferencesGrid}>\n          {allFacilities.map((facility) => {\n            const isSelected = preferences.homeEnvironment.includes(facility.id);\n            return (\n              <TouchableOpacity\n                key={facility.id}\n                style={[\n                  styles.preferenceButton,\n                  isSelected && styles.selectedPreference\n                ]}\n                onPress={() => onUpdatePreferences('homeEnvironment', facility.id)}\n              >\n                <MaterialCommunityIcons \n                  name={facility.icon} \n                  size={20} \n                  color={theme.colors.primary}\n                />\n                <Text style={[\n                  styles.preferenceText,\n                  isSelected && styles.selectedPreferenceText\n                ]}>\n                  {facility.label}\n                </Text>\n                {isSelected && (\n                  <MaterialCommunityIcons \n                    name=\"check\" \n                    size={18} \n                    color={theme.colors.primary}\n                    style={styles.checkmark}\n                  />\n                )}\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n      </View>\n\n      {renderEmergencyContactsSection()}\n      {renderHouseholdMembersSection()} */}\n      \n      {/* Pet Photo Cropper Modal */}\n      <ProfilePhotoCropper\n        visible={showPetPhotoCropper}\n        imageUri={selectedPetPhotoUri}\n        onClose={() => {\n          setShowPetPhotoCropper(false);\n          setSelectedPetPhotoUri(null);\n          setCurrentEditingPetId(null);\n        }}\n        onSave={handleSaveCroppedPetImage}\n        isUploading={isUploadingPhoto}\n      />\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  emptyStateContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderStyle: 'dashed',\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    marginVertical: 10,\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    textAlign: 'center',\n    marginBottom: 10,\n  },\n  container: {\n    flex: 1,\n    gap: 24,\n  },\n  section: {\n    borderRadius: 12,\n    padding: 24,\n    marginBottom: 24,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    marginBottom: 12,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  sectionDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 16,\n  },\n  addButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 6,\n    gap: 8,\n  },\n  addButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  petsList: {\n    gap: 16,\n    paddingBottom: 70, // Add extra padding at the bottom for better scrolling on mobile\n  },\n  petCard: {\n    borderRadius: 12,\n    overflow: 'hidden',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petCardHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n  },\n  petBasicInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    flex: 1,\n  },\n  petPhoto: {\n    width: 68,\n    height: 68,\n    borderRadius: 50,\n  },\n  placeholderIcon: {\n    width: 68,\n    height: 68,\n    borderRadius: 34,\n    backgroundColor: theme.colors.surfaceVariant,\n    textAlign: 'center',\n    textAlignVertical: 'center',\n    paddingTop: 14,  // Center the icon\n  },\n  profilePhotoButton: {\n    position: 'relative',\n  },\n  plusIconContainer: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 2,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  petInfo: {\n    flex: 1,\n    marginLeft: 12,\n    justifyContent: 'center',\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  petDetailsContainer: {\n    flexDirection: 'column',\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 2,\n  },\n  expandedDetails: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    padding: 16,\n  },\n  detailRow: {\n    flexDirection: 'row',\n    gap: 24,\n    marginBottom: 16,\n  },\n  detailColumn: {\n    flex: 1,\n  },\n  detailTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  preferencesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    marginTop: 16,\n  },\n  preferenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: theme.colors.surface,\n  },\n  selectedPreference: {\n    borderColor: theme.colors.primary,\n    backgroundColor: `${theme.colors.primary}15`, // 15 is the hex opacity (about 8%)\n  },\n  preferenceText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    flex: 1,\n  },\n  selectedPreferenceText: {\n    color: theme.colors.primary,\n  },\n  checkmark: {\n    marginLeft: 'auto',\n  },\n  petActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  editButton: {\n    padding: 4,\n  },\n  fixButton: {\n    padding: 4,\n    backgroundColor: `${theme.colors.warning}15`,\n    borderRadius: 4,\n    marginHorizontal: 4,\n  },\n  // New styles for emergency contacts and household members\n  addContactForm: {\n    marginBottom: 16,\n    gap: 12,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n  },\n  submitButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  contactsList: {\n    gap: 12,\n  },\n  contactCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  contactInfo: {\n    flex: 1,\n  },\n  contactName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  contactPhone: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  contactActions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  actionButton: {\n    padding: 8,\n  },\n  emptyListText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    padding: 12,\n  },\n  compatibilityContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  compatibilityItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    flexWrap: 'wrap',\n  },\n  compatibilityLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 0.4,\n    marginRight: 10,\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    minWidth: 60,\n    justifyContent: 'flex-end',\n  },\n  dropdownText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  careInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  medicationsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  medicationsText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  vetInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  vetInfoItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  vetInfoLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  vetInfoText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  documentButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  documentButtonText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n  },\n  dropdownContainerEdit: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    minWidth: 60,\n    justifyContent: 'flex-end',\n    flexWrap: 'wrap'\n  },\n  optionButton: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    marginLeft: 10,\n    marginBottom: 5\n  },\n  selectedOption: {\n    borderColor: theme.colors.primary,\n    backgroundColor: `${theme.colors.primary}15`,\n  },\n  optionText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  selectedOptionText: {\n    color: theme.colors.primary,\n  },\n  editInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  editInputMedications: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    marginLeft: 10\n  },\n  editInputShort: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    width: '55%',\n    marginLeft: 'auto'\n  },\n  editInputWeight: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    padding: 12,\n    fontSize: 14,\n    color: theme.colors.text,\n    width: '40%',\n    marginLeft: 'auto'\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n  },\n  uploadButtonText: {\n    color: theme.colors.background,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  documentActionContainer: {\n    flexDirection: 'column',\n    gap: 8,\n  },\n  documentsList: {\n    marginTop: 8,\n  },\n  documentItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n    paddingVertical: 6,\n  },\n  documentName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  viewDocButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    backgroundColor: `${theme.colors.primary}15`,\n  },\n  viewDocText: {\n    fontSize: 12,\n    color: theme.colors.primary,\n  },\n  noDocumentsText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    marginTop: 8,\n  },\n  detailSection: {\n    marginTop: 16,\n  },\n  editContainer: {\n    flexWrap: 'wrap',\n    gap: 16,\n    alignItems: 'flex-start',\n  },\n  inputsWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    flex: 1,\n  },\n  inputWrapper: {\n    minWidth: 150,\n    flexBasis: '46%',\n    flexGrow: 1,\n    marginBottom: 8,\n  },\n  inputLabel: {\n    fontSize: 12,\n    color: theme.colors.secondary,\n    marginBottom: 4,\n  },\n  editMainContainer: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  editHeaderRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 16,\n  },\n  editProfileContainer: {\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  editDetailsContainer: {\n    width: '100%',\n  },\n  editActions: {\n    flexDirection: 'row',\n    gap: 12,\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  editActionsSmallScreen: {\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    gap: 8,\n  },\n  buttonRowTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  buttonRowBottom: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    marginTop: 8,\n    gap: 4,\n  },\n  dateInfoContainer: {\n    flexDirection: 'column',\n    gap: 12,\n  },\n  dateInfoItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dateInfoLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n  },\n  dateInfoText: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n  },\n  customDatePickerContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 6,\n    overflow: 'hidden',\n    height: 46,\n  },\n  dateInputBox: {\n    flex: 1,\n    height: '100%',\n    justifyContent: 'center',\n    paddingHorizontal: 12,\n  },\n  dateInputText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  placeholderText: {\n    color: theme.colors.placeholder,\n  },\n  calendarButton: {\n    width: 46,\n    height: '100%',\n    backgroundColor: theme.colors.surface,\n    borderLeftWidth: 1,\n    borderLeftColor: theme.colors.border,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  datePickerContainer: {\n    flex: 1,\n    maxWidth: '60%',\n    marginLeft: 'auto',\n    marginRight: 10,\n  },\n  // Media query style for larger screens\n  '@media (min-width: 900px)': {\n    petDetailsContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 8,\n    },\n    petDetails: {\n      marginRight: 8,\n    },\n  },\n  // Modal calendar styles\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  calendarModalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 20,\n    width: '90%',\n    maxWidth: 420,\n  },\n  calendarModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  calendarModalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  calendarHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  calendarNavButton: {\n    padding: 8,\n  },\n  calendarMonthYear: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  weekdayLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  weekdayLabel: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.secondary,\n    paddingVertical: 8,\n  },\n  calendarGrid: {\n    marginBottom: 16,\n  },\n  calendarRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  calendarDay: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n    margin: 2,\n  },\n  calendarDayText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  calendarDayOtherMonth: {\n    opacity: 0.3,\n  },\n  calendarDayTextOtherMonth: {\n    color: theme.colors.placeholder,\n  },\n  calendarDaySelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  calendarDayTextSelected: {\n    color: theme.colors.background,\n    fontWeight: '600',\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n    padding: 14,\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  confirmButtonText: {\n    color: theme.colors.background,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  stackedFields: {\n    flexDirection: 'column',\n    gap: 16,\n    marginBottom: 16,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  saveButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 6,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    backgroundColor: theme.colors.primary,\n    marginRight: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  deleteButton: {\n    padding: 8,\n    marginRight: 4,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  // Error modal styles\n  errorModalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 24,\n    width: '90%',\n    maxWidth: 500,\n  },\n  successModalContent: {\n    borderLeftWidth: 4,\n    borderLeftColor: theme.colors.success,\n  },\n  errorModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  successModalHeader: {\n    // Same styles, but we might want to customize in the future\n  },\n  errorModalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.error,\n  },\n  successModalTitle: {\n    color: theme.colors.success,\n  },\n  errorModalMessage: {\n    marginBottom: 24,\n    fontSize: 16,\n    lineHeight: 24,\n  },\n  successModalMessage: {\n    // Same styles, but we might want to customize in the future\n  },\n  errorModalButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  successModalButton: {\n    backgroundColor: theme.colors.success,\n  },\n  errorModalButtonText: {\n    color: theme.colors.surface,\n    fontWeight: 'bold',\n  },\n  successModalButtonText: {\n    // Same styles, but we might want to customize in the future\n  },\n  editButtonTopRight: {\n    position: 'absolute',\n    top: 12,\n    right: 12,\n    zIndex: 2,\n  },\n  chevronButtonBottomRight: {\n    position: 'absolute',\n    bottom: 12,\n    right: 12,\n    zIndex: 2,\n  },\n  petInfoWithButtonPadding: {\n    paddingRight: 20, // enough space for both buttons\n  },\n  dropdownContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: 12,\n    marginBottom: 16,\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 8,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    minWidth: 120,\n  },\n  dropdownButtonText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginRight: 8,\n  },\n  dropdownList: {\n    position: 'absolute',\n    top: 100,\n    left: 20,\n    right: 20,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    zIndex: 1000,\n    maxHeight: 200,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  dropdownScrollView: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemSelected: {\n    backgroundColor: theme.colors.primary + '20',\n  },\n  dropdownItemText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  dropdownItemTextSelected: {\n    color: theme.colors.primary,\n    fontWeight: '600',\n  },\n  inputError: {\n    borderColor: theme.colors.error,\n    borderWidth: 1,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 4,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  submitButtonDisabled: {\n    opacity: 0.5,\n  },\n});\n\nexport default PetsPreferencesTab; ","// Centralized timezone data for the entire application\n\n// Complete mapping of all backend timezone IDs to display names\n// This ensures any timezone returned by the backend can be translated to a user-friendly name\nexport const TIMEZONE_MAPPING = {\n  // Eastern Time Zone (UTC-5)\n  'America/New_York': 'Eastern Time',\n  'America/Detroit': 'Eastern Time',\n  'America/Indiana/Indianapolis': 'Eastern Time',\n  'America/Indiana/Marengo': 'Eastern Time',\n  'America/Indiana/Vincennes': 'Eastern Time',\n  'America/Indiana/Tell_City': 'Eastern Time',\n  'America/Indiana/Petersburg': 'Eastern Time',\n  'America/Indiana/Vevay': 'Eastern Time',\n  'America/Indiana/Winamac': 'Eastern Time',\n  'America/Kentucky/Louisville': 'Eastern Time',\n  'America/Kentucky/Monticello': 'Eastern Time',\n  \n  // Central Time Zone (UTC-6)\n  'America/Chicago': 'Central Time',\n  'America/Indiana/Knox': 'Central Time',\n  'America/Menominee': 'Central Time',\n  'America/North_Dakota/Center': 'Central Time',\n  'America/North_Dakota/New_Salem': 'Central Time',\n  'America/North_Dakota/Beulah': 'Central Time',\n  \n  // Mountain Time Zone (UTC-7)\n  'America/Denver': 'Mountain Time',\n  'America/Boise': 'Mountain Time',\n  'America/Phoenix': 'Mountain Time (No DST)',\n  \n  // Pacific Time Zone (UTC-8)\n  'America/Los_Angeles': 'Pacific Time',\n  \n  // Alaska Time Zone (UTC-9)\n  'America/Anchorage': 'Alaska Time',\n  'America/Juneau': 'Alaska Time',\n  'America/Sitka': 'Alaska Time',\n  'America/Metlakatla': 'Alaska Time',\n  'America/Yakutat': 'Alaska Time',\n  'America/Nome': 'Alaska Time',\n  \n  // Hawaii-Aleutian Time Zone (UTC-10)\n  'Pacific/Honolulu': 'Hawaii Time',\n  'America/Adak': 'Hawaii-Aleutian Time',\n  \n  // UTC\n  'UTC': 'UTC',\n};\n\n// Simplified timezone options for user selection\n// These are the only options users will see in the dropdown\nexport const USER_TIMEZONE_OPTIONS = [\n  { \n    id: 'America/New_York', \n    displayName: 'Eastern Time', \n    searchTerms: ['eastern', 'est', 'edt', 'new york', 'florida', 'georgia', 'virginia', 'north carolina', 'south carolina', 'tennessee', 'kentucky', 'ohio', 'pennsylvania', 'new jersey', 'connecticut', 'rhode island', 'massachusetts', 'vermont', 'new hampshire', 'maine', 'delaware', 'maryland', 'west virginia', 'washington dc', 'michigan', 'indiana'],\n    zone: 'Eastern'\n  },\n  { \n    id: 'America/Chicago', \n    displayName: 'Central Time', \n    searchTerms: ['central', 'cst', 'cdt', 'texas', 'illinois', 'alabama', 'arkansas', 'iowa', 'kansas', 'louisiana', 'minnesota', 'mississippi', 'missouri', 'nebraska', 'north dakota', 'oklahoma', 'south dakota', 'wisconsin', 'chicago'],\n    zone: 'Central'\n  },\n  { \n    id: 'America/Denver', \n    displayName: 'Mountain Time', \n    searchTerms: ['mountain', 'mst', 'mdt', 'colorado', 'montana', 'utah', 'wyoming', 'new mexico', 'idaho', 'denver'],\n    zone: 'Mountain'\n  },\n  { \n    id: 'America/Phoenix', \n    displayName: 'Mountain Time (No DST)', \n    searchTerms: ['arizona', 'phoenix', 'mountain no dst', 'mst arizona'],\n    zone: 'Mountain'\n  },\n  { \n    id: 'America/Los_Angeles', \n    displayName: 'Pacific Time', \n    searchTerms: ['pacific', 'pst', 'pdt', 'california', 'washington', 'oregon', 'nevada', 'los angeles', 'san francisco', 'seattle', 'portland'],\n    zone: 'Pacific'\n  },\n  { \n    id: 'America/Anchorage', \n    displayName: 'Alaska Time', \n    searchTerms: ['alaska', 'akst', 'akdt', 'anchorage', 'juneau', 'fairbanks'],\n    zone: 'Alaska'\n  },\n  { \n    id: 'Pacific/Honolulu', \n    displayName: 'Hawaii Time', \n    searchTerms: ['hawaii', 'hst', 'honolulu', 'maui', 'big island', 'kauai', 'oahu'],\n    zone: 'Hawaii'\n  },\n  { \n    id: 'UTC', \n    displayName: 'UTC', \n    searchTerms: ['utc', 'coordinated universal time', 'gmt', 'greenwich'],\n    zone: 'UTC'\n  },\n];\n\n// Function to get display name from backend timezone ID\nexport const getTimezoneDisplayName = (timezoneId) => {\n  return TIMEZONE_MAPPING[timezoneId] || timezoneId;\n};\n\n// Function to search timezones based on query\nexport const searchTimezones = (query) => {\n  if (!query) return USER_TIMEZONE_OPTIONS;\n  \n  const searchTerm = query.toLowerCase();\n  return USER_TIMEZONE_OPTIONS.filter(tz => \n    tz.displayName.toLowerCase().includes(searchTerm) ||\n    tz.searchTerms.some(term => term.includes(searchTerm))\n  );\n};\n\n// Function to group timezones by zone for display\nexport const getGroupedTimezones = (timezones = USER_TIMEZONE_OPTIONS) => {\n  return timezones.reduce((groups, tz) => {\n    const zone = tz.zone;\n    if (!groups[zone]) {\n      groups[zone] = [];\n    }\n    groups[zone].push(tz);\n    return groups;\n  }, {});\n}; ","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Switch, ScrollView, Modal, FlatList, TextInput } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { getTimeSettings, updateTimeSettings } from '../../api/API';\nimport { debugLog } from '../../context/AuthContext';\nimport { useToast } from '../../components/ToastProvider';\nimport { USER_TIMEZONE_OPTIONS, getTimezoneDisplayName, searchTimezones, getGroupedTimezones } from '../../data/Timezones';\n\nconst SubscriptionPlan = ({ plan, isPopular, isCurrent, onSwitch }) => (\n  <View style={[\n    styles.planCard,\n    isCurrent && styles.currentPlanBorder\n  ]}>\n    {isPopular && (\n      <View style={styles.popularTag}>\n        <Text style={styles.popularTagText}>Popular</Text>\n      </View>\n    )}\n    <Text style={styles.planTitle}>{plan.title}</Text>\n    <Text style={styles.planPrice}>{plan.price}</Text>\n    <Text style={styles.planDescription}>{plan.description}</Text>\n    <View style={styles.featuresList}>\n      {plan.features.map((feature, index) => (\n        <View key={index} style={styles.featureItem}>\n          <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />\n          <Text style={styles.featureText}>{feature}</Text>\n        </View>\n      ))}\n    </View>\n    <TouchableOpacity\n      style={[styles.planButton, isCurrent && styles.currentPlanButton]}\n      onPress={() => !isCurrent && onSwitch(plan.id)}\n    >\n      <Text style={[styles.planButtonText, isCurrent && styles.currentPlanButtonText]}>\n        {isCurrent ? 'Current Plan' : 'Switch Plan'}\n      </Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst SettingsPaymentsTab = ({\n  push_notifications,\n  email_updates,\n  marketing_communications,\n  profile_visibility,\n  timezone: propTimezone,\n  use_military_time,\n  onUpdateSetting,\n  paymentMethods,\n  onAddPaymentMethod,\n  onRemovePaymentMethod,\n  onSetDefaultPayment,\n  isMobile,\n  currentPlan = { \n    id: 'waitlist',\n    title: 'Waitlist Signup',\n    nextBilling: 'N/A',\n    connections: { used: 0, total: 'Unlimited' }\n  },\n  onSwitchPlan,\n  userRole,\n  isApprovedProfessional,\n  navigation,\n}) => {\n  const [timezone, setTimezone] = useState(propTimezone || 'UTC');\n  const [timezoneModalVisible, setTimezoneModalVisible] = useState(false);\n  const [timezones, setTimezones] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const showToast = useToast();\n\n  useEffect(() => {\n    // Fetch user's time settings when component mounts\n    const fetchTimeSettings = async () => {\n      try {\n        setLoading(true);\n        const timeSettings = await getTimeSettings();\n        setTimezone(timeSettings.timezone);\n        debugLog('MBA12345 Fetched time settings:', timeSettings);\n      } catch (error) {\n        debugLog('MBA12345 Error fetching time settings:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Check if timezone is in the props already\n    if (propTimezone) {\n      setTimezone(propTimezone);\n    } else {\n      fetchTimeSettings();\n    }\n  }, [propTimezone]);\n\n  useEffect(() => {\n    debugLog('MBA54321 SettingsPaymentsTab received paymentMethods:', paymentMethods);\n  }, [paymentMethods]);\n\n  const handleTimezoneChange = async (newTimezone) => {\n    try {\n      setLoading(true);\n      await updateTimeSettings(newTimezone);\n      setTimezone(newTimezone);\n      setTimezoneModalVisible(false);\n      setSearchQuery(''); // Clear search when timezone is selected\n      debugLog('MBA12345 Updated timezone to:', newTimezone);\n      \n      // Get display name for the toast using centralized function\n      const friendlyName = getTimezoneDisplayName(newTimezone);\n      \n      showToast({\n        message: `Timezone updated to ${friendlyName}`,\n        type: 'success',\n        duration: 3000\n      });\n    } catch (error) {\n      debugLog('MBA12345 Error updating timezone:', error);\n      showToast({\n        message: 'Failed to update timezone. Please try again.',\n        type: 'error',\n        duration: 4000\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const openTimezoneModal = () => {\n    setTimezones(USER_TIMEZONE_OPTIONS);\n    setSearchQuery(''); // Clear search when opening modal\n    setTimezoneModalVisible(true);\n  };\n\n  // Get display name for current timezone using centralized mapping\n  const getCurrentTimezoneDisplayName = () => {\n    return getTimezoneDisplayName(timezone);\n  };\n\n  const renderTimezoneModal = () => {\n    // Use centralized search function\n    const filteredTimezones = searchTimezones(searchQuery);\n    \n    // Use centralized grouping function\n    const groupedTimezones = getGroupedTimezones(filteredTimezones);\n\n    const renderTimezoneGroup = (zoneName, timezones) => (\n      <View key={zoneName} style={styles.timezoneGroup}>\n        <Text style={styles.timezoneGroupHeader}>{zoneName} Time Zone</Text>\n        {timezones.map((tz) => (\n          <TouchableOpacity\n            key={tz.id}\n            style={[\n              styles.timezoneItem,\n              tz.id === timezone && styles.selectedTimezoneItem\n            ]}\n            onPress={() => handleTimezoneChange(tz.id)}\n          >\n            <View style={styles.timezoneItemContent}>\n              <Text style={[\n                styles.timezoneText,\n                tz.id === timezone && styles.selectedTimezoneText\n              ]}>\n                {tz.displayName}\n              </Text>\n            </View>\n            {tz.id === timezone && (\n              <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />\n            )}\n          </TouchableOpacity>\n        ))}\n      </View>\n    );\n\n    return (\n              <Modal\n          animationType=\"slide\"\n          transparent={true}\n          visible={timezoneModalVisible}\n          onRequestClose={() => {\n            setTimezoneModalVisible(false);\n            setSearchQuery(''); // Clear search when closing modal\n          }}\n        >\n        <View style={styles.modalOverlay}>\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Select Timezone</Text>\n              <TouchableOpacity onPress={() => {\n                setTimezoneModalVisible(false);\n                setSearchQuery(''); // Clear search when closing modal\n              }}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n\n            <TextInput\n              style={styles.searchInput}\n              placeholder=\"Search timezones (e.g., 'Texas', 'Central Time', 'Mountain')...\"\n              value={searchQuery}\n              onChangeText={setSearchQuery}\n              placeholderTextColor={theme.colors.secondary}\n            />\n            \n            <FlatList\n              data={Object.keys(groupedTimezones)}\n              keyExtractor={(zoneName) => zoneName}\n              renderItem={({ item: zoneName }) => \n                renderTimezoneGroup(zoneName, groupedTimezones[zoneName])\n              }\n              showsVerticalScrollIndicator={true}\n              initialNumToRender={20}\n              maxToRenderPerBatch={20}\n              windowSize={10}\n            />\n          </View>\n        </View>\n      </Modal>\n    );\n  };\n\n  const getSubscriptionPlans = () => {\n    const commonPlans = [\n      {\n        id: 'free',\n        title: 'Free Tier',\n        price: 'Free',\n        description: '1 Free Booking/Month, then 15% per booking',\n        features: ['Basic profile listing', 'Up to 1 booking/month', 'Standard support'],\n        isPopular: false,\n      },\n      {\n        id: 'waitlist',\n        title: 'Waitlist Tier',\n        price: 'Free',\n        description: 'No commissions, no subscriptions, no fees',\n        features: ['Early signup discounts', 'Waitlist for early access', 'Unlimited connections', 'Priority support',],\n        isPopular: false,\n      }\n    ];\n\n    if (userRole === 'professional') {\n      return [\n        ...commonPlans,\n        {\n          id: 'subscription',\n          title: 'Pro Subscription',\n          price: '$29.99/month',\n          description: 'No fees as pro',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees'],\n          isPopular: true,\n        },\n        {\n          id: 'dual_subscription',\n          title: 'Dual Role Subscription',\n          price: '$39.99/month',\n          description: 'No fees as pro or owner',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees', 'Use as both pro and owner'],\n          isPopular: false,\n        }\n      ];\n    } else {\n      return [\n        ...commonPlans,\n        {\n          id: 'subscription',\n          title: 'Owner Subscription',\n          price: '$19.99/month',\n          description: 'Unlimited bookings',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics'],\n          isPopular: true,\n        }\n      ];\n\n      if (isApprovedProfessional) {\n        plans.push({\n          id: 'dual_subscription',\n          title: 'Dual Role Subscription',\n          price: '$39.99/month',\n          description: 'No fees as pro or owner',\n          features: ['Unlimited connections', 'Priority support', 'Advanced analytics', 'No commission fees', 'Use as both pro and owner'],\n          isPopular: false,\n        });\n      }\n\n      return plans;\n    }\n  };\n\n  const renderPlansSection = () => (\n    <View style={styles.section}>\n      <Text style={styles.sectionTitle}>Subscription Plans</Text>\n      <ScrollView \n        horizontal\n        showsHorizontalScrollIndicator={true}\n        style={styles.plansScroll}\n        contentContainerStyle={styles.plansScrollContent}\n      >\n        {getSubscriptionPlans().map((plan) => (\n          <View key={plan.id} style={styles.planCardContainer}>\n            <SubscriptionPlan\n              plan={plan}\n              isPopular={plan.isPopular}\n              isCurrent={currentPlan?.id === plan.id}\n              onSwitch={onSwitchPlan}\n            />\n          </View>\n        ))}\n      </ScrollView>\n    </View>\n  );\n\n  const renderCurrentPlanInfo = () => (\n    <View style={styles.currentPlanInfo}>\n      <Text style={styles.currentPlanTitle}>{currentPlan?.title || 'Waitlist Signup'}</Text>\n      <Text style={styles.currentPlanBilling}>\n        Next billing date: {currentPlan?.nextBilling || 'N/A'}\n      </Text>\n      <View style={styles.usageStats}>\n        <Text style={styles.usageText}>\n          {currentPlan?.id === 'waitlist' ? 'Unlimited connections available' : `${currentPlan?.connections?.used || 0} of ${currentPlan?.connections?.total || 'Unlimited'} connections used`}\n        </Text>\n        {currentPlan?.id !== 'waitlist' && (\n          <View style={styles.usageBar}>\n            <View style={[styles.usageProgress, { width: `${(currentPlan?.connections?.used / currentPlan?.connections?.total) * 100 || 0}%` }]} />\n          </View>\n        )}\n      </View>\n    </View>\n  );\n\n  const renderPaymentMethodsSection = () => (\n    <View style={styles.section}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>{userRole === 'professional' ? 'Payout Methods' : 'Payment Methods' }</Text>\n        <TouchableOpacity style={styles.addButton} onPress={onAddPaymentMethod}>\n          <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.background} />\n          <Text style={styles.addButtonText}>Add New</Text>\n        </TouchableOpacity>\n      </View>\n      {paymentMethods && paymentMethods.length > 0 ? (\n        paymentMethods.map(renderPaymentMethod)\n      ) : (\n        <View style={styles.noPaymentMethodsContainer}>\n          <Text style={styles.noPaymentMethodsText}>No payment methods added yet</Text>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderDesktopLayout = () => (\n    <View style={styles.desktopContainer}>\n      <View style={styles.leftColumn}>\n        {/*\n        TODO: Add back in after MVP \n        {renderPlansSection()} */}\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Notification Preferences</Text>\n          {renderNotificationSettings()}\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Privacy & Security Settings</Text>\n          {renderPrivacySettings()}\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Time Settings</Text>\n          <View style={styles.settingItem}>\n            <View style={styles.settingContent}>\n              <MaterialCommunityIcons name=\"clock-outline\" size={24} color={theme.colors.primary} />\n              <View style={styles.settingTextContainer}>\n                <Text style={styles.settingTitle}>Timezone</Text>\n                <Text style={styles.settingDescription}>Set your local timezone for accurate time display</Text>\n              </View>\n            </View>\n            <TouchableOpacity \n              style={styles.timezoneButton}\n              onPress={openTimezoneModal}\n            >\n              <Text style={styles.timezoneButtonText}>{getCurrentTimezoneDisplayName()}</Text>\n              <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n            </TouchableOpacity>\n          </View>\n          \n          {/* TODO: implement after MVP Launch \n          <View style={styles.settingItem}>\n            <View style={styles.settingContent}>\n              <MaterialCommunityIcons name=\"clock-time-eight\" size={24} color={theme.colors.primary} />\n              <View style={styles.settingTextContainer}>\n                <Text style={styles.settingTitle}>Military Time (24-hour)</Text>\n                <Text style={styles.settingDescription}>Use 24-hour time format instead of 12-hour format</Text>\n              </View>\n            </View>\n            <Switch\n              value={use_military_time}\n              onValueChange={(value) => handleUpdateSetting('use_military_time', value)}\n              trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n            />\n          </View> */}\n        </View>\n      </View>\n\n      {/* TODO: Add back in after MVP \n      <View style={styles.rightColumn}>\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Current Plan</Text>\n          {renderCurrentPlanInfo()}\n        </View>\n\n        {renderPaymentMethodsSection()}\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Billing History</Text>\n          {/* Add billing history items here\n          <TouchableOpacity style={styles.viewAllButton}>\n            <Text style={styles.viewAllText}>View All Transactions</Text>\n          </TouchableOpacity>\n        </View>\n      </View> */}\n    </View>\n  );\n\n  const renderMobileLayout = () => (\n    <ScrollView style={styles.mobileContainer} contentContainerStyle={{ paddingBottom: 100 }}>\n      {/* TODO: Add back after MVP \n      {renderPlansSection()}\n      {renderPaymentMethodsSection()} */}\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Notification Settings</Text>\n        {renderNotificationSettings()}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Privacy & Security Settings</Text>\n        {renderPrivacySettings()}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Time Settings</Text>\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"clock-outline\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Timezone</Text>\n              <Text style={styles.settingDescription}>Set your local timezone for accurate time display</Text>\n            </View>\n          </View>\n          <TouchableOpacity \n            style={styles.timezoneButton}\n            onPress={openTimezoneModal}\n          >\n            <Text style={styles.timezoneButtonText}>{getCurrentTimezoneDisplayName()}</Text>\n            <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        \n        {/* TODO: implement after MVP Launch \n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"clock-time-eight\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Military Time (24-hour)</Text>\n              <Text style={styles.settingDescription}>Use 24-hour time format instead of 12-hour format</Text>\n            </View>\n          </View>\n          <Switch\n            value={use_military_time}\n            onValueChange={(value) => handleUpdateSetting('use_military_time', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View> */}\n      </View>\n    </ScrollView>\n  );\n\n  const renderNotificationSettings = () => {\n    return (\n      <>\n        {/* TODO: Uncomment for ios/android code\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"bell\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Push Notifications</Text>\n              <Text style={styles.settingDescription}>Receive push notifications for updates</Text>\n            </View>\n          </View>\n          <Switch\n            value={push_notifications}\n            onValueChange={(value) => handleUpdateSetting('push_notifications', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View> */}\n\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"email\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Email Updates</Text>\n              <Text style={styles.settingDescription}>Receive important updates via email</Text>\n            </View>\n          </View>\n          <Switch\n            value={email_updates}\n            onValueChange={(value) => handleUpdateSetting('email_updates', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"bell-outline\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Marketing Communications</Text>\n              <Text style={styles.settingDescription}>Receive promotions and marketing emails</Text>\n            </View>\n          </View>\n          <Switch\n            value={marketing_communications}\n            onValueChange={(value) => handleUpdateSetting('marketing_communications', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n      </>\n    );\n  };\n\n  const renderPrivacySettings = () => {\n    return (\n      <>\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"account-eye\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Profile Visibility</Text>\n              <Text style={styles.settingDescription}>Make your profile visible to others</Text>\n            </View>\n          </View>\n          <Switch\n            value={profile_visibility}\n            onValueChange={(value) => handleUpdateSetting('profile_visibility', value)}\n            trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n          />\n        </View>\n\n        <View style={styles.settingItem}>\n          <View style={styles.settingContent}>\n            <MaterialCommunityIcons name=\"lock-reset\" size={24} color={theme.colors.primary} />\n            <View style={styles.settingTextContainer}>\n              <Text style={styles.settingTitle}>Change Password</Text>\n              <Text style={styles.settingDescription}>Update your account password</Text>\n            </View>\n          </View>\n          <TouchableOpacity \n            style={styles.actionButton}\n            onPress={() => navigation.navigate('ChangePassword')}\n          >\n            <Text style={styles.actionButtonText}>Change</Text>\n          </TouchableOpacity>\n        </View>\n        \n        {/* TODO: Add location privacy toggle after MVP launch */}\n      </>\n    );\n  };\n\n  const renderSettingItem = (setting) => (\n    <View key={setting.id} style={styles.settingItem}>\n      <View style={styles.settingContent}>\n        <MaterialCommunityIcons name={setting.icon} size={24} color={theme.colors.primary} />\n        <View style={styles.settingTextContainer}>\n          <Text style={styles.settingTitle}>{setting.title}</Text>\n          {setting.description && (\n            <Text style={styles.settingDescription}>{setting.description}</Text>\n          )}\n        </View>\n      </View>\n      {setting.type === 'toggle' ? (\n        <Switch\n          value={setting.value}\n          onValueChange={(value) => handleUpdateSetting(setting.id, value)}\n          trackColor={{ false: theme.colors.disabled, true: theme.colors.primary }}\n        />\n      ) : setting.type === 'timezone' ? (\n        <TouchableOpacity \n          style={styles.timezoneButton}\n          onPress={openTimezoneModal}\n        >\n          <Text style={styles.timezoneButtonText}>{getCurrentTimezoneDisplayName()}</Text>\n          <MaterialCommunityIcons name=\"chevron-down\" size={20} color={theme.colors.primary} />\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity \n          style={styles.actionButton}\n          onPress={() => handleUpdateSetting(setting.id)}\n        >\n          <Text style={styles.actionButtonText}>{setting.actionText || 'Update'}</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n\n  const renderPaymentMethod = (method) => (\n    <View key={method.id} style={styles.paymentItem}>\n      <View style={styles.paymentContent}>\n        <MaterialCommunityIcons \n          name={method.type === 'card' ? 'credit-card' : 'bank'} \n          size={24} \n          color={theme.colors.primary} \n        />\n        <View style={styles.paymentTextContainer}>\n          <View style={styles.paymentTitleRow}>\n            <Text style={styles.paymentTitle}>\n              {method.type === 'card' ? `•••• ${method.last4}` : method.bankName}\n            </Text>\n            {!method.isDefault && (\n              <TouchableOpacity \n                style={styles.setDefaultButton}\n                onPress={() => onSetDefaultPayment(method.id)}\n              >\n                <Text style={styles.setDefaultText}>Set Default</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n          <Text style={styles.paymentDescription} numberOfLines={1}>\n            {method.type === 'card' ? `Expires ${method.expiry}` : `Account ending in ${method.last4}`}\n          </Text>\n        </View>\n      </View>\n      <TouchableOpacity \n        style={styles.deleteButton} \n        onPress={() => onRemovePaymentMethod(method.id)}\n      >\n        <MaterialCommunityIcons name=\"delete\" size={20} color={theme.colors.error} />\n      </TouchableOpacity>\n    </View>\n  );\n\n  // Handle setting updates with toast notifications\n  const handleUpdateSetting = (id, value) => {\n    debugLog('MBA54321 Updating setting:', { id, value });\n    \n    // Get readable setting name for toast messages\n    const settingNames = {\n      'push_notifications': 'Push Notifications',\n      'email_updates': 'Email Updates',\n      'marketing_communications': 'Marketing Communications',\n      'profile_visibility': 'Profile Visibility',\n      'use_military_time': 'Military Time'\n    };\n    \n    const settingName = settingNames[id] || id;\n    \n    // Call the parent update function\n    onUpdateSetting(id, value)\n      .then(() => {\n        // Show success toast\n        showToast({\n          message: `${settingName} ${value ? 'enabled' : 'disabled'} successfully`,\n          type: 'success',\n          duration: 3000\n        });\n      })\n      .catch(error => {\n        debugLog('MBA54321 Error updating setting:', error);\n        // Show error toast\n        showToast({\n          message: `Failed to update ${settingName.toLowerCase()}. Please try again.`,\n          type: 'error',\n          duration: 4000\n        });\n      });\n  };\n\n  return (\n    <View style={styles.container}>\n      {isMobile ? renderMobileLayout() : renderDesktopLayout()}\n      {renderTimezoneModal()}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  desktopContainer: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  leftColumn: {\n    flex: 1,\n    gap: 24,\n  },\n  rightColumn: {\n    width: '35%',\n    minWidth: 300,\n    gap: 24,\n  },\n  mobileContainer: {\n    flex: 1,\n  },\n  section: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 10,\n    padding: 20,\n    marginBottom: 15,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: 15,\n  },\n  plansScroll: {\n    marginHorizontal: -20,\n  },\n  plansScrollContent: {\n    paddingHorizontal: 20,\n    paddingBottom: 16,\n  },\n  planCardContainer: {\n    width: 280,\n    marginRight: 16,\n    paddingBottom: 4,\n  },\n  planCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    position: 'relative',\n    marginTop: 12,\n    height: '100%',\n    borderWidth: 0,\n  },\n  currentPlanBorder: {\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n  },\n  popularPlan: {\n  },\n  popularTag: {\n    position: 'absolute',\n    top: -12,\n    right: 20,\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 12,\n    zIndex: 2,\n  },\n  popularTagText: {\n    color: theme.colors.surfaceContrast,\n    fontWeight: '600',\n    fontSize: 12,\n  },\n  planTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  planPrice: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginBottom: 5,\n  },\n  planDescription: {\n    color: theme.colors.secondary,\n    marginBottom: 15,\n  },\n  featuresList: {\n    gap: 10,\n    marginBottom: 20,\n  },\n  featureItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  featureText: {\n    color: theme.colors.text,\n  },\n  planButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 'auto',\n    marginBottom: 0,\n  },\n  currentPlanButton: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  planButtonText: {\n    color: theme.colors.surfaceContrast,\n    fontWeight: '600',\n  },\n  currentPlanButtonText: {\n    color: theme.colors.primary,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.placeHolderText,\n  },\n  settingContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  settingTextContainer: {\n    marginLeft: 15,\n    flex: 1,\n  },\n  settingTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  settingDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  actionButton: {\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  actionButtonText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  currentPlanInfo: {\n    backgroundColor: theme.colors.surface,\n    padding: 15,\n    borderRadius: 8,\n  },\n  currentPlanTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginBottom: 5,\n  },\n  currentPlanBilling: {\n    color: theme.colors.secondary,\n    marginBottom: 15,\n  },\n  usageStats: {\n    gap: 8,\n  },\n  usageText: {\n    fontSize: 14,\n    color: theme.colors.text,\n  },\n  usageBar: {\n    height: 8,\n    backgroundColor: theme.colors.background,\n    borderRadius: 4,\n  },\n  usageProgress: {\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n    borderRadius: 4,\n  },\n  paymentItem: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 10,\n  },\n  paymentContent: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flex: 1,\n    marginRight: 12,\n  },\n  paymentTextContainer: {\n    marginLeft: 15,\n    flex: 1,\n  },\n  paymentTitleRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  paymentTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  paymentDescription: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  setDefaultButton: {\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 4,\n  },\n  setDefaultText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  deleteButton: {\n    padding: 4,\n  },\n  addButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    padding: 8,\n    borderRadius: 5,\n  },\n  addButtonText: {\n    color: theme.colors.surfaceContrast,\n    marginLeft: 5,\n    fontWeight: '500',\n  },\n  viewAllButton: {\n    padding: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n  },\n  viewAllText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 10,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n    padding: 20,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    paddingBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  timezoneItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  selectedTimezoneItem: {\n    backgroundColor: theme.colors.primaryLight,\n  },\n  timezoneText: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  selectedTimezoneText: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  timezoneButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 6,\n  },\n  timezoneButtonText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 5,\n  },\n  searchInput: {\n    backgroundColor: theme.colors.surface,\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 15,\n    fontSize: 16,\n    color: theme.colors.text,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  timezoneGroup: {\n    marginBottom: 20,\n  },\n  timezoneGroupHeader: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n  },\n  timezoneItemContent: {\n    flex: 1,\n  },\n  timezoneId: {\n    fontSize: 12,\n    color: theme.colors.secondary,\n    marginTop: 2,\n  },\n  noPaymentMethodsContainer: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n  },\n  noPaymentMethodsText: {\n    color: theme.colors.secondary,\n    fontSize: 16,\n  },\n});\n\nexport default SettingsPaymentsTab; ","import React from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst TabBar = ({ tabs, activeTab, onTabPress, isMobile }) => {\n  return (\n    <ScrollView \n      horizontal={isMobile}\n      showsHorizontalScrollIndicator={false}\n      contentContainerStyle={[\n        styles.container,\n        isMobile && styles.mobileContainer\n      ]}\n    >\n      {tabs.map((tab) => (\n        <TouchableOpacity\n          key={tab.id}\n          style={[\n            styles.tab,\n            activeTab === tab.id && styles.activeTab,\n            isMobile && styles.mobileTab\n          ]}\n          onPress={() => onTabPress(tab.id)}\n        >\n          <Text style={[\n            styles.tabText,\n            activeTab === tab.id && styles.activeTabText,\n            isMobile && styles.mobileTabText\n          ]}>\n            {tab.label}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 8,\n    marginBottom: 16,\n  },\n  mobileContainer: {\n    padding: 4,\n    marginBottom: 10,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 6,\n    marginHorizontal: 4,\n  },\n  mobileTab: {\n    flex: 0,\n    minWidth: 150,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  activeTab: {\n    backgroundColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.regular?.fontFamily,\n  },\n  mobileTabText: {\n    fontSize: 14,\n  },\n  activeTabText: {\n    color: theme.colors.whiteText || theme.colors.background,\n  },\n});\n\nexport default TabBar; ","import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { View, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, Image, Platform, StatusBar, Alert, useWindowDimensions, SafeAreaView, ActivityIndicator } from 'react-native';\nimport { MaterialCommunityIcons, Ionicons } from '@expo/vector-icons';\nimport { Button, Portal, Dialog, Paragraph } from 'react-native-paper';\nimport { useNavigation } from '@react-navigation/native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { theme } from '../styles/theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext, debugLog, getStorage, setStorage } from '../context/AuthContext';\nimport { TutorialContext } from '../context/TutorialContext';\nimport FloatingSaveButton from '../components/FloatingSaveButton';\nimport ServiceManager from '../components/ServiceManager';\nimport ProfessionalTab from '../components/ProfessionalTab';\nimport RecordedPets from '../components/RecordedPets';\nimport EditableSection from '../components/EditableSection';\nimport DatePicker from '../components/DatePicker';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport TutorialModal from '../components/TutorialModal';\nimport { DEFAULT_SERVICES } from '../data/mockData';\nimport ProfileInfoTab from '../components/profile/ProfileInfoTab';\nimport ServicesAvailabilityTab from '../components/profile/ServicesAvailabilityTab';\nimport PetsPreferencesTab from '../components/profile/PetsPreferencesTab';\nimport SettingsPaymentsTab from '../components/profile/SettingsPaymentsTab';\nimport TabBar from '../components/TabBar';\nimport { userProfile, updateProfileInfo } from '../api/API';\n\nconst MyProfile = () => {\n  debugLog('MBA3ou4bg54ug: MyProfile component rendering/mounting');\n  \n  const navigation = useNavigation();\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG, userRole, isApprovedProfessional, user, logout } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1200);\n  const styles = createStyles(screenWidth, isCollapsed);\n  const [activeTab, setActiveTab] = useState('profile_info');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  \n  // Track when profile was last loaded\n  const lastProfileLoadRef = useRef(0);\n  // Flag to prevent multiple concurrent API calls\n  const isLoadingProfileRef = useRef(false);\n  // Track component mounted state\n  const isMountedRef = useRef(true);\n  \n  // Profile state\n  const [profileData, setProfileData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const [editMode, setEditMode] = useState({});\n\n  const [currentPlan, setCurrentPlan] = useState({\n    id: 'waitlist',\n    title: 'Waitlist Signup',\n    nextBilling: 'N/A',\n    connections: { used: 0, total: 'Unlimited' }\n  });\n\n  const { \n    isVisible: isTutorialVisible,\n    currentStep,\n    totalSteps,\n    stepData,\n    handleNext,\n    handlePrevious,\n    handleSkip,\n    completeTutorial,\n  } = useContext(TutorialContext);\n\n  // Set mounted flag to false when component unmounts\n  useEffect(() => {\n    return () => {\n      debugLog('MBA3ou4bg54ug: MyProfile component unmounting');\n      isMountedRef.current = false;\n    };\n  }, []);\n\n  const loadActiveTab = useCallback(async () => {\n    try {\n      // First, check URL parameters directly when on web\n      if (Platform.OS === 'web') {\n        const urlParams = new URLSearchParams(window.location.search);\n        const tabFromUrl = urlParams.get('initialTab') || urlParams.get('screen');\n        \n        if (tabFromUrl && ['profile_info', 'pets_preferences', 'settings_payments', 'services_availability'].includes(tabFromUrl)) {\n          debugLog('MBA3ou4bg54ug: Retrieved tab from URL params', { tabFromUrl });\n          setActiveTab(tabFromUrl);\n          // Store this tab in storage for persistence\n          await setStorage('MyProfileActiveTab', tabFromUrl);\n          return;\n        }\n      }\n      \n      // Then check navigation params\n      const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n      debugLog('MBA3ou4bg54ug: Navigation params', params);\n      \n      if (params?.initialTab) {\n        debugLog('MBA3ou4bg54ug: Received initialTab param', { initialTab: params.initialTab });\n        setActiveTab(params.initialTab);\n        await setStorage('MyProfileActiveTab', params.initialTab);\n        return;\n      } else if (params?.screen) {\n        debugLog('MBA3ou4bg54ug: Received screen param', { screen: params.screen });\n        setActiveTab(params.screen);\n        await setStorage('MyProfileActiveTab', params.screen);\n        return;\n      } else if (stepData?.tab) {\n        debugLog('MBA3ou4bg54ug: Received tab from stepData', { tab: stepData.tab });\n        setActiveTab(stepData.tab);\n        await setStorage('MyProfileActiveTab', stepData.tab);\n        return;\n      }\n      \n      // If we reach here, attempt to load from storage\n      const storedTab = await getStorage('MyProfileActiveTab');\n      if (storedTab) {\n        debugLog('MBA3ou4bg54ug: Loaded tab from storage', { storedTab });\n        setActiveTab(storedTab);\n      }\n    } catch (error) {\n      debugLog('MBA3ou4bg54ug: Error loading active tab', error);\n    }\n  }, [navigation, stepData]);\n\n  // Safely fix pet owners without triggering a profile reload\n  const checkAndFixPetOwners = useCallback(async (pets) => {\n    if (!pets || pets.length === 0) return;\n    \n    try {\n      const petsWithMissingOwners = pets.filter(pet => \n        pet.lastUpdateFailed || pet.ownerMissing\n      );\n      \n      if (petsWithMissingOwners.length > 0) {\n        debugLog('MBA3ou4bg54ug: Found pets with potential missing owners:', petsWithMissingOwners.length);\n        \n        // Try to fix each pet\n        for (const pet of petsWithMissingOwners) {\n          try {\n            const { fixPetOwner } = require('../api/API');\n            await fixPetOwner(pet.id);\n            debugLog('MBA3ou4bg54ug: Fixed pet owner successfully:', pet.id);\n          } catch (err) {\n            debugLog('MBA3ou4bg54ug: Failed to fix pet owner:', err);\n          }\n        }\n      }\n    } catch (error) {\n      debugLog('MBA3ou4bg54ug: Error checking/fixing pet owners:', error);\n    }\n  }, []);\n\n  const loadProfileData = useCallback(async () => {\n    // Prevent concurrent API calls\n    if (isLoadingProfileRef.current) {\n      debugLog('MBA3ou4bg54ug: Profile data load already in progress, skipping');\n      return;\n    }\n\n    // Check if we should reload based on time\n    const now = Date.now();\n    const timeSinceLastLoad = now - lastProfileLoadRef.current;\n    if (profileData && timeSinceLastLoad < 5000) {\n      debugLog('MBA3ou4bg54ug: Profile data loaded recently, skipping reload', { \n        timeSinceLastLoad: Math.round(timeSinceLastLoad / 1000) + 's' \n      });\n      return;\n    }\n\n    try {\n      isLoadingProfileRef.current = true;\n      \n      if (isMountedRef.current) setLoading(true);\n      if (isMountedRef.current) setError(null);\n      \n      debugLog('MBA3ou4bg54ug: Starting profile data load');\n      const response = await userProfile();\n      \n      if (!response || typeof response !== 'object') {\n        throw new Error('Invalid response format from API');\n      }\n      \n      debugLog('MBA3ou4bg54ug: Profile data loaded successfully');\n      \n      // Process the response\n      const processedResponse = {\n        ...response,\n        profilePhoto: response.profile_photo || null\n      };\n      \n      // Update the profile data state if the component is still mounted\n      if (isMountedRef.current) {\n        setProfileData(processedResponse);\n        setLoading(false);\n      }\n      \n      // Record successful load time\n      lastProfileLoadRef.current = Date.now();\n      \n      // Process pets if needed (without triggering another profile load)\n      await checkAndFixPetOwners(response.pets);\n      \n      // Load active tab after data is ready\n      if (isMountedRef.current) {\n        setTimeout(() => {\n          loadActiveTab();\n        }, 100);\n      }\n    } catch (error) {\n      debugLog('MBA3ou4bg54ug: Failed to load profile data:', error);\n      \n      if (isMountedRef.current) {\n        // Only show error if we don't have existing data\n        if (!profileData) {\n          setError('Failed to load profile data');\n        }\n        setLoading(false);\n      }\n    } finally {\n      isLoadingProfileRef.current = false;\n    }\n  }, [checkAndFixPetOwners, loadActiveTab]);\n\n  // Initial data load on mount\n  useEffect(() => {\n    debugLog('MBA3ou4bg54ug: Initial profile data load');\n    loadProfileData();\n    \n    // Load active tab independently\n    loadActiveTab();\n  }, []); // Empty dependency array to run only once on mount\n\n  // Handle focus events (when returning to this screen)\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      // Only reload data if sufficient time has passed since the last load\n      const now = Date.now();\n      const timeSinceLastLoad = now - lastProfileLoadRef.current;\n      const shouldReload = !profileData || timeSinceLastLoad > 60000;\n      \n      if (shouldReload) {\n        debugLog('MBA3ou4bg54ug: Focus event - reloading profile data', {\n          timeSinceLastLoad: Math.round(timeSinceLastLoad / 1000) + 's'\n        });\n        loadProfileData();\n      } else {\n        debugLog('MBA3ou4bg54ug: Focus event - using existing profile data', {\n          timeSinceLastLoad: Math.round(timeSinceLastLoad / 1000) + 's'\n        });\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, loadProfileData]);\n\n  // Store the active tab whenever it changes\n  useEffect(() => {\n    const storeActiveTab = async () => {\n      try {\n        await setStorage('MyProfileActiveTab', activeTab);\n        \n        // Update URL params without reloading the page\n        if (Platform.OS === 'web') {\n          const url = new URL(window.location.href);\n          url.searchParams.set('initialTab', activeTab);\n          window.history.replaceState({}, '', url.toString());\n        }\n        \n        debugLog('MBA3ou4bg54ug: Stored active tab', { activeTab });\n      } catch (error) {\n        debugLog('MBA3ou4bg54ug: Error storing active tab', error);\n      }\n    };\n    \n    if (activeTab) {\n      storeActiveTab();\n    }\n  }, [activeTab]);\n\n  // Handle navigation state changes (tab selection from params)\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('state', () => {\n      try {\n        const params = navigation.getState().routes.find(route => route.name === 'MyProfile')?.params;\n        \n        if (params?.screen) {\n          debugLog('MBA3ou4bg54ug: State change - setting active tab', { screen: params.screen });\n          setActiveTab(params.screen);\n        } else if (params?.initialTab) {\n          debugLog('MBA3ou4bg54ug: State change - setting active tab', { initialTab: params.initialTab });\n          setActiveTab(params.initialTab);\n        }\n      } catch (error) {\n        debugLog('MBA3ou4bg54ug: Error handling navigation state change', error);\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  // Handle screen dimension changes\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n      setIsWideScreen(screenWidth >= 1200);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n    } catch (err) {\n      debugLog('MBA3ou4bg54ug: Error during logout:', err);\n    }\n  };\n\n  const tabs = [\n    { id: 'profile_info', label: userRole === 'professional' ? 'Professional Profile Info' : 'Owner Profile Info' },\n    // ...(userRole === 'professional' ? [{ id: 'services_availability', label: 'Services & Availability' }] : []), TODO: Add back in after MVP\n    { id: 'pets_preferences', label: 'My Pets' },\n    // { id: 'pets_preferences', label: 'Pets & Preferences' }, // TODO: Add back in after MVP\n    { id: 'settings_payments', label: 'Settings' }\n    // { id: 'settings_payments', label: userRole === 'professional' ? 'Settings & Payout Methods' : 'Settings & Payment Methods' } // TODO: Add back in after MVP\n  ];\n\n  const handlePickImage = async () => {\n    // This function is now just a stub that returns a promise\n    // The actual image picking and uploading is handled in ProfileInfoTab\n    return null;\n  };\n\n  // Handle save completion from child components\n  const handleSaveComplete = (updatedProfile) => {\n    debugLog('MBA3ou4bg54ug: Save completed with updated profile');\n    \n    // Update the profileData with the saved data\n    setProfileData(prev => {\n      const newProfileData = {\n        ...prev,\n        ...updatedProfile\n      };\n      \n      // Ensure profilePhoto is set from either property name\n      if (updatedProfile.profile_photo) {\n        newProfileData.profilePhoto = updatedProfile.profile_photo;\n        newProfileData.profile_photo = updatedProfile.profile_photo;\n      } else if (updatedProfile.profilePhoto) {\n        newProfileData.profile_photo = updatedProfile.profilePhoto;\n        newProfileData.profilePhoto = updatedProfile.profilePhoto;\n      }\n      \n      return newProfileData;\n    });\n    \n    // Reset state flags\n    setHasUnsavedChanges(false);\n    setEditMode({});\n    \n    // Update last profile load timestamp to prevent unnecessary reloads\n    lastProfileLoadRef.current = Date.now();\n  };\n\n  // Handle field updates before saving\n  const handleUpdateField = (field, value) => {\n    debugLog('MBA3ou4bg54ug: Updating field locally:', field);\n    \n    // Only update local state, actual save will happen in the child component\n    setProfileData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n    \n    // Mark that we have unsaved changes\n    setHasUnsavedChanges(true);\n  };\n\n  const toggleEditMode = (section) => {\n    setEditMode(prev => ({ ...prev, [section]: !prev[section] }));\n  };\n\n  const handleSwitchPlan = (planId) => {\n    // TODO: Implement API call to switch plans\n    debugLog('MBA3ou4bg54ug: Switching to plan:', planId);\n  };\n\n  const renderActiveTab = () => {\n    debugLog('MBA3ou4bg54ug: Rendering active tab', { activeTab });\n    \n    switch (activeTab) {\n      case 'profile_info':\n        return (\n          <ProfileInfoTab\n            profilePhoto={profileData?.profilePhoto}\n            email={profileData?.email}\n            phone={profileData?.phone}\n            age={profileData?.age}\n            address={profileData?.address}\n            city={profileData?.city}\n            state={profileData?.state}\n            zip={profileData?.zip}\n            country={profileData?.country}\n            coordinates={profileData?.coordinates}\n            bio={profileData?.bio}\n            about_me={profileData?.about_me}\n            name={profileData?.name}\n            emergencyContact={profileData?.emergency_contact}\n            authorizedHouseholdMembers={profileData?.authorized_household_members}\n            editMode={editMode}\n            toggleEditMode={toggleEditMode}\n            onChangeText={handleUpdateField}\n            pickImage={handlePickImage}\n            setHasUnsavedChanges={(hasChanges) => {\n              debugLog('MBA9876', 'ProfileInfoTab setting hasUnsavedChanges:', hasChanges);\n              setHasUnsavedChanges(hasChanges);\n            }}\n            onSaveComplete={handleSaveComplete}\n            isMobile={isMobile}\n            rating={profileData?.rating}\n            reviews={profileData?.reviews}\n            role={userRole}\n            isProfessional={userRole === 'professional'}\n            insurance={profileData?.insurance}\n            onNavigateToTab={setActiveTab}\n            navigation={navigation}\n          />\n        );\n      case 'services_availability':\n        return (\n          <ServicesAvailabilityTab\n            services={profileData?.services}\n            onToggleService={(id) => {\n              const updatedServices = profileData?.services.map(s => \n                s.id === id ? { ...s, isActive: !s.isActive } : s\n              );\n              handleUpdateField('services', updatedServices);\n            }}\n            onEditHours={() => {}}\n            onBlockService={() => {}}\n            onPartialDayBlock={() => {}}\n            isMobile={isMobile}\n          />\n        );\n      case 'pets_preferences':\n        return (\n          <PetsPreferencesTab\n            pets={profileData?.pets}\n            onAddPet={(newPet) => {\n              // Check if the pet should be added to the top of the list\n              const shouldAddToTop = newPet._addToTop;\n              \n              // Remove the _addToTop flag before adding to state\n              const { _addToTop, ...petToAdd } = newPet;\n              \n              // Add the new pet to the local state (at the top or bottom)\n              const updatedPets = shouldAddToTop \n                ? [petToAdd, ...(profileData?.pets || [])] \n                : [...(profileData?.pets || []), petToAdd];\n                \n              handleUpdateField('pets', updatedPets);\n              \n              // This will mark that there are unsaved changes\n              debugLog('MBA5432', 'Added new pet locally:', petToAdd, shouldAddToTop ? '(at top of list)' : '(at bottom of list)');\n            }}\n            onEditPet={(petId, updatedPetData) => {\n              // Update the existing pet in local state\n              const updatedPets = (profileData?.pets || []).map(pet => \n                pet.id === petId ? { ...pet, ...updatedPetData } : pet\n              );\n              handleUpdateField('pets', updatedPets);\n              debugLog('MBA5432', 'Updated pet locally:', { petId, updatedPetData });\n            }}\n            onDeletePet={(petId) => {\n              // Remove the pet from local state\n              const updatedPets = (profileData?.pets || []).filter(pet => pet.id !== petId);\n              handleUpdateField('pets', updatedPets);\n              debugLog('MBA5432', 'Deleted pet locally:', petId);\n            }}\n            onReplacePet={(newPetsArray) => {\n              // Replace the entire pets array with the new one\n              // This prevents the issue with double updates causing blank pets\n              handleUpdateField('pets', newPetsArray);\n              debugLog('MBA5432', 'Replaced entire pets array:', newPetsArray);\n            }}\n            preferences={profileData?.preferences}\n            onUpdatePreferences={(section, id) => {\n              const updatedPreferences = { ...profileData?.preferences };\n              if (section === 'homeEnvironment') {\n                if (updatedPreferences[section].includes(id)) {\n                  updatedPreferences[section] = updatedPreferences[section].filter(item => item !== id);\n                } else {\n                  updatedPreferences[section] = [...updatedPreferences[section], id];\n                }\n              } else {\n                updatedPreferences[section] = updatedPreferences[section].map(p =>\n                  p.id === id ? { ...p, selected: !p.selected } : p\n                );\n              }\n              handleUpdateField('preferences', updatedPreferences);\n            }}\n            userRole={userRole}\n            isMobile={isMobile}\n          />\n        );\n      case 'settings_payments':\n        debugLog('MBA54321 Rendering settings_payments tab with payment methods:', {\n          paymentMethods: profileData?.payment_methods\n        });\n        return (\n          <SettingsPaymentsTab\n            {...profileData}\n            navigation={navigation}\n            onUpdateSetting={(id, value) => {\n              debugLog('Updating setting:', { id, value });\n              // Create an update object with just the changed setting\n              const updateData = { [id]: value };\n              \n              // Return the promise for proper chaining in the component\n              return updateProfileInfo(updateData)\n                .then(updatedProfile => {\n                  // Update the profile data with the response\n                  setProfileData(prev => ({\n                    ...prev,\n                    ...updatedProfile\n                  }));\n                  debugLog('MBA54321 Setting updated successfully:', updateData);\n                  // Return the updated profile for the promise chain\n                  return updatedProfile;\n                });\n            }}\n            paymentMethods={profileData?.payment_methods || []}\n            onAddPaymentMethod={() => navigation.navigate('AddPaymentMethod')}\n            onRemovePaymentMethod={(id) => {\n              debugLog('Removing payment method:', id);\n              // TODO: Implement API call to remove payment method\n            }}\n            onSetDefaultPayment={(id) => {\n              debugLog('Setting default payment method:', id);\n              // TODO: Implement API call to set default payment method\n            }}\n            currentPlan={profileData?.currentPlan || currentPlan}\n            onSwitchPlan={handleSwitchPlan}\n            isMobile={isMobile}\n            userRole={userRole}\n            isApprovedProfessional={isApprovedProfessional}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Show loading indicator if we're loading AND don't have existing data\n  if (loading && !profileData) {\n    return (\n      <View style={styles.container}>\n        <ActivityIndicator size=\"large\" color=\"#0000ff\" />\n      </View>\n    );\n  }\n\n  // Only show error if we have an error AND don't have existing data to display\n  if (error && !profileData) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n  \n  // If loading with existing data, we'll render the UI with the existing data\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>        \n        <View style={styles.content}>\n          <View style={styles.mainContent}>\n            <View style={styles.headerSection}>\n              <Text style={styles.title}>Profile Settings</Text>\n              <ScrollView \n                horizontal \n                showsHorizontalScrollIndicator={false}\n                contentContainerStyle={styles.tabScrollContainer}\n              >\n                <View style={styles.tabContainer}>\n                  {tabs.map((tab) => (\n                    <TouchableOpacity\n                      key={tab.id}\n                      style={[styles.tab, activeTab === tab.id && styles.activeTab]}\n                      onPress={() => {\n                        if (activeTab !== tab.id) {\n                          debugLog('MBA3ou4bg54ug: Tab clicked - changing to', { tab: tab.id });\n                          setActiveTab(tab.id);\n                          // Update URL params without navigation\n                          if (Platform.OS === 'web') {\n                            const url = new URL(window.location.href);\n                            url.searchParams.set('initialTab', tab.id);\n                            window.history.replaceState({}, '', url.toString());\n                          }\n                        }\n                      }}\n                    >\n                      <Text style={[styles.tabText, activeTab === tab.id && styles.activeTabText]}>\n                        {tab.label}\n                      </Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n              </ScrollView>\n            </View>\n\n            <View style={styles.tabContent}>\n              {renderActiveTab()}\n            </View>\n          </View>\n        </View>\n\n        {isTutorialVisible && stepData?.screen === 'MyProfile' && (\n          <TutorialModal\n            step={currentStep}\n            totalSteps={totalSteps}\n            title={stepData.title}\n            description={stepData.description}\n            position={stepData.position}\n            onNext={handleNext}\n            onPrevious={handlePrevious}\n            onSkip={handleSkip}\n            onClose={completeTutorial}\n          />\n        )}\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n    backgroundColor: theme.colors.surface,\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.surface,\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabScrollContainer: {\n    flexGrow: 0,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: screenWidth <= 900 ? 22 : 32,\n    paddingRight: screenWidth <= 900 ? 16 : 0,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  tabContent: {\n    flex: 1,\n    padding: screenWidth <= 900 ? 10 : 24,\n    backgroundColor: theme.colors.surface,\n  },\n  errorText: {\n    color: 'red',\n    textAlign: 'center',\n    marginTop: 20,\n  },\n});\n\nexport default MyProfile;\n","import React from 'react';\nimport { TouchableOpacity, Text, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nexport default function CustomButton({ title, onPress }) {\n  return (\n    <TouchableOpacity style={styles.button} onPress={onPress}>\n      <Text style={styles.buttonText}>{title}</Text>\n    </TouchableOpacity>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing.small,\n    paddingHorizontal: theme.spacing.medium,\n    borderRadius: 5,\n    alignItems: 'center',\n    marginVertical: theme.spacing.small,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n  },\n});","import React, { useState, useContext, useEffect } from 'react';\nimport { View, TextInput, Text, StyleSheet, TouchableOpacity, Dimensions, Alert, ActivityIndicator, Platform, Keyboard, SafeAreaView, KeyboardAvoidingView, ScrollView } from 'react-native';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport axios from 'axios';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport { AuthContext } from '../context/AuthContext';\nimport { API_BASE_URL } from '../config/config';\nimport { navigateToFrom } from '../components/Navigation';\nimport { validateEmail, validatePassword, sanitizeInput } from '../validation/validation';\nimport { debugLog } from '../context/AuthContext';\nimport { updateTimeSettings } from '../api/API';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\nimport platformNavigation from '../utils/platformNavigation';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [rememberMe, setRememberMe] = useState(false);\n  const navigation = useNavigation();\n  const { signIn, is_prototype, is_DEBUG } = useContext(AuthContext);\n  const route = useRoute();\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate email\n    const emailValidation = validateEmail(email.trim());\n    setEmailError(emailValidation.message);\n    if (!emailValidation.isValid) isValid = false;\n    \n    // Validate password\n    const passwordValidation = validatePassword(password);\n    setPasswordError(passwordValidation.message);\n    if (!passwordValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  // Enhanced input handlers with real-time sanitization\n  const handleEmailChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'email');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 20 && text.length > 5) {\n      debugLog('MBA1234: Potentially malicious email input detected in SignIn:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setEmail(sanitizedText);\n    setEmailError('');\n  };\n\n  const handlePasswordChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious password input detected in SignIn:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setPassword(sanitizedText);\n    setPasswordError('');\n  };\n\n  const handleLogin = async () => {\n    if (Platform.OS === 'ios' || Platform.OS === 'android') {\n      Keyboard.dismiss();\n    }\n\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      debugLog('MBA67890 Starting login process');\n      debugLog('MBA67890 API Base URL:', API_BASE_URL);\n      debugLog('MBA67890 Login request details:', {\n        url: `${API_BASE_URL}/api/token/`,\n        method: 'POST',\n        data: {\n          email: email.trim().toLowerCase(),\n          password: '***' // masked for security\n        }\n      });\n\n      debugLog('MBA67890 Attempting to authenticate with backend');\n      \n      // Sanitize inputs before sending to API\n      const sanitizedEmail = sanitizeInput(email, 'email');\n      const sanitizedPassword = sanitizeInput(password, 'password');\n      \n      debugLog('MBA9876: Login attempt with sanitized inputs', {\n        originalEmail: email,\n        sanitizedEmail,\n        passwordChanged: password !== sanitizedPassword\n      });\n      \n      // Create a direct axios instance without interceptors for login\n      const directAxios = axios.create({\n        baseURL: API_BASE_URL,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      const response = await directAxios.post('/api/token/', {\n        email: sanitizedEmail.toLowerCase(),\n        password: sanitizedPassword,\n      });\n\n      const { access, refresh } = response.data;\n      \n      debugLog('MBA67890 Authentication successful, received tokens');\n      \n      // Use the signIn function from AuthContext to properly set up authentication\n      await signIn(access, refresh);\n\n      // Update time settings after successful login\n      try {\n        let userTimezone = 'UTC';\n        try {\n          userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        } catch (error) {\n          debugLog('MBA9876: Error detecting timezone', error);\n        }\n        \n        await updateTimeSettings(userTimezone, false);\n        debugLog('MBA9876: Time settings updated successfully');\n      } catch (timeError) {\n        debugLog('MBA9876: Error updating time settings (non-critical)', timeError);\n      }\n\n      // Navigate to the appropriate screen\n      const fromScreen = route.params?.from;\n      if (fromScreen) {\n        navigateToFrom(navigation, fromScreen);\n      } else {\n        navigation.navigate('Dashboard');\n      }\n    } catch (error) {\n      debugLog('MBA9876: Login error:', error.response?.data || error.message);\n      \n      let errorMessage = 'Login failed. Please check your credentials.';\n      if (error.response) {\n        const errorData = error.response.data;\n        if (errorData) {\n          if (typeof errorData === 'string') {\n            errorMessage = errorData;\n          } else if (errorData.detail) {\n            errorMessage = errorData.detail;\n          } else if (errorData.error) {\n            errorMessage = errorData.error;\n          }\n        }\n      }\n      \n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Login Failed', errorMessage);\n      } else {\n        setSuccessMessage(errorMessage);\n      }\n\n      setEmailError('Invalid email or password');\n      setPasswordError('Invalid email or password');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Add useEffect to handle document-wide keyboard events\n  useEffect(() => {\n    if (Platform.OS === 'web' && typeof document !== 'undefined') {\n      const handleDocumentKeyPress = (e) => {\n        if (e.key === 'Enter') {\n          handleLogin();\n        }\n      };\n\n      document.addEventListener('keydown', handleDocumentKeyPress);\n\n      // Cleanup listener when component unmounts\n      return () => {\n        document.removeEventListener('keydown', handleDocumentKeyPress);\n      };\n    }\n  }, [email, password]); // Dependencies ensure we have latest state values\n\n  // Keep the existing handleKeyPress for input fields\n  const handleKeyPress = (e) => {\n    if (Platform.OS === 'web' && e.nativeEvent.key === 'Enter') {\n      handleLogin();\n    }\n  };\n\n  // Add this inside the SignIn component, after any existing useEffect\n  useEffect(() => {\n    // Check if we're on web and have an invitation token in the URL\n    if (Platform.OS === 'web') {\n      const currentRouteInfo = platformNavigation.getCurrentRoute();\n      const url = currentRouteInfo.path;\n      debugLog('MBA5555 SignIn screen - Current URL path:', url);\n      \n      if (url.includes('/invite/')) {\n        // Extract token and redirect to signup\n        const pathParts = url.split('/');\n        const inviteIndex = pathParts.findIndex(part => part === 'invite');\n        if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n          const token = pathParts[inviteIndex + 1];\n          debugLog('MBA5555 SignIn detected invite token, redirecting to SignUp:', token);\n          // Navigate to SignUp with the token\n          navigation.navigate('SignUp', { token });\n        }\n      }\n    }\n  }, []);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.card}>\n        <Text style={styles.title}>Log in</Text>\n        \n        {is_prototype && (\n          <Text style={styles.prototypeWarning}>\n            Prototype Mode: You can sign in with anything for email and password\n          </Text>\n        )}\n        \n        <View style={styles.createAccountContainer}>\n          <Text style={styles.createAccountText}>Need a CrittrCove account?</Text>\n          <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\n            <Text style={styles.createAccountLink}>Create an account</Text>\n          </TouchableOpacity>\n        </View>\n        \n        <View style={styles.inputLabelContainer}>\n          <Text style={styles.inputLabel}>Email</Text>\n          <TextInput\n            style={[styles.input, emailError ? styles.errorInput : null]}\n            value={email}\n            onChangeText={handleEmailChange}\n            keyboardType=\"email-address\"\n            autoCapitalize=\"none\"\n            onKeyPress={Platform.OS === 'web' ? handleKeyPress : undefined}\n          />\n          {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n        </View>\n        \n        <View style={styles.inputLabelContainer}>\n          <View style={styles.passwordLabelContainer}>\n            <Text style={styles.inputLabel}>Password</Text>\n            <TouchableOpacity onPress={togglePasswordVisibility}>\n              <Text style={styles.showHideText}>{showPassword ? 'Hide' : 'Show'}</Text>\n            </TouchableOpacity>\n          </View>\n          <TextInput\n            style={[styles.input, passwordError ? styles.errorInput : null]}\n            secureTextEntry={!showPassword}\n            value={password}\n            onChangeText={handlePasswordChange}\n            onKeyPress={Platform.OS === 'web' ? handleKeyPress : undefined}\n          />\n          {passwordError ? <Text style={styles.errorText}>{passwordError}</Text> : null}\n        </View>\n        \n        <View style={styles.rememberMeContainer}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setRememberMe(!rememberMe)}\n          >\n            {rememberMe && (\n              <View style={styles.checkboxInner}>\n                <MaterialCommunityIcons name=\"check\" size={14} color={theme.colors.whiteText} />\n              </View>\n            )}\n          </TouchableOpacity>\n          <Text style={styles.rememberMeText}>Keep me logged in</Text>\n        </View>\n        \n        <TouchableOpacity style={styles.loginButton} onPress={handleLogin}>\n          <Text style={styles.loginButtonText}>Log in</Text>\n        </TouchableOpacity>\n        \n        {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} />}\n        {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n        \n        <TouchableOpacity onPress={() => navigation.navigate('ResetPassword')} style={styles.forgotPasswordContainer}>\n          <Text style={styles.link}>Forgot Password?</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    padding: theme.spacing.medium,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: theme.spacing.large * 1.5,\n    width: '100%',\n    maxWidth: 480,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  title: {\n    fontSize: theme.fontSizes.extraLarge * 1.4,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    marginBottom: theme.spacing.medium,\n    textAlign: 'left',\n  },\n  createAccountContainer: {\n    flexDirection: 'row',\n    marginBottom: theme.spacing.large,\n  },\n  createAccountText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginRight: 5,\n  },\n  createAccountLink: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.primary,\n    textDecorationLine: 'underline',\n  },\n  inputLabelContainer: {\n    marginBottom: theme.spacing.medium,\n  },\n  inputLabel: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n    fontWeight: '500',\n  },\n  passwordLabelContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small,\n  },\n  showHideText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.smallMedium,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingHorizontal: theme.spacing.small * 1.5,\n    fontSize: theme.fontSizes.medium,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  errorInput: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.smallMedium,\n    marginTop: 4,\n  },\n  rememberMeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: theme.spacing.large,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 2,\n    marginRight: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  checkboxInner: {\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  rememberMeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  loginButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: theme.spacing.small * 1.75,\n    borderRadius: 4,\n    alignItems: 'center',\n    marginBottom: theme.spacing.medium,\n  },\n  loginButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  forgotPasswordContainer: {\n    alignItems: 'center',\n    marginTop: theme.spacing.small,\n  },\n  link: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.smallMedium,\n  },\n  message: {\n    marginTop: theme.spacing.small,\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.smallMedium,\n    textAlign: 'center',\n  },\n  prototypeWarning: {\n    backgroundColor: '#FFF3CD',\n    color: '#856404',\n    padding: theme.spacing.small * 1.5,\n    marginBottom: theme.spacing.medium,\n    borderRadius: 4,\n    textAlign: 'center',\n  },\n});\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, TextInput, Text, StyleSheet, ActivityIndicator, Dimensions, KeyboardAvoidingView, Platform, ScrollView, Alert, TouchableOpacity } from 'react-native';\nimport axios from 'axios';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext, debugLog } from '../context/AuthContext'; // Import AuthContext\nimport { validateEmail, validateName, validatePassword, validatePasswordMatch, sanitizeInput } from '../validation/validation';\nimport { verifyInvitation } from '../api/API';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function SignUp() {\n  const navigation = useNavigation();\n  const route = useRoute();\n  const { signIn, is_DEBUG } = useContext(AuthContext); // Use AuthContext to update auth state\n\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const [inviterName, setInviterName] = useState('');\n  const [inviteToken, setInviteToken] = useState(null);\n  const [inviteVerified, setInviteVerified] = useState(false);\n  const [verifyingInvite, setVerifyingInvite] = useState(false);\n  \n  // Location state\n  const [location, setLocation] = useState('');\n  const [showLocationDropdown, setShowLocationDropdown] = useState(false);\n  const [locationError, setLocationError] = useState('');\n  const [locations, setLocations] = useState([]);\n  const [loadingLocations, setLoadingLocations] = useState(true);\n  \n  // Fallback locations in case API fails\n  const fallbackLocations = [\n    { name: 'Colorado Springs', supported: true },\n    { name: 'Denver', supported: false },\n    { name: 'Other', supported: false }\n  ];\n  \n  // Validation states\n  const [firstNameError, setFirstNameError] = useState('');\n  const [lastNameError, setLastNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n\n  // Check for invitation token when component mounts\n  useEffect(() => {\n    // Check if we have an invitation token in the route params or URL\n    const checkInvitation = async () => {\n      try {\n        // First check if we're on the 'Invite' screen\n        const isInviteScreen = route.name === 'Invite';\n        debugLog('MBA4321 Current route name:', route.name);\n        \n        // Check route params\n        let token = route.params?.token;\n        debugLog('MBA4321 Token from route params:', token);\n        \n        // If not in route params, check if we're on web and have it in the URL\n        if (!token && Platform.OS === 'web') {\n          const url = window.location.pathname;\n          debugLog('MBA4321 Current URL path:', url);\n          debugLog('MBA4321 Full location object:', {\n            pathname: window.location.pathname,\n            href: window.location.href,\n            search: window.location.search,\n            hash: window.location.hash\n          });\n          \n          if (url.includes('/invite/')) {\n            // Extract token from invite URL format\n            const pathParts = url.split('/');\n            const inviteIndex = pathParts.findIndex(part => part === 'invite');\n            if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n              token = pathParts[inviteIndex + 1];\n              debugLog('MBA4321 Found invitation token from invite URL path:', token);\n            }\n          } else if (url.includes('/signup/')) {\n            // Extract token from signup URL format\n            const pathParts = url.split('/');\n            const signupIndex = pathParts.findIndex(part => part === 'signup');\n            if (signupIndex !== -1 && pathParts.length > signupIndex + 1) {\n              token = pathParts[signupIndex + 1];\n              debugLog('MBA4321 Found invitation token from signup URL path:', token);\n            }\n          }\n        }\n        \n        // If we still don't have a token, check the URL search params\n        if (!token && Platform.OS === 'web') {\n          const searchParams = new URLSearchParams(window.location.search);\n          const searchToken = searchParams.get('token');\n          if (searchToken) {\n            token = searchToken;\n            debugLog('MBA4321 Found invitation token from URL search params:', token);\n          }\n        }\n        \n        if (token) {\n          debugLog('MBA4321 Processing invitation token:', token);\n          setInviteToken(token);\n          setVerifyingInvite(true);\n          \n          try {\n            // Verify the token with the backend\n            const inviteInfo = await verifyInvitation(token);\n            debugLog('MBA4321 Invitation verification result:', inviteInfo);\n            \n            if (inviteInfo.valid) {\n              setInviteVerified(true);\n              setInviterName(inviteInfo.inviter_name);\n              \n              // If it's an email invitation, set the email field\n              if (inviteInfo.email) {\n                setEmail(inviteInfo.email);\n              }\n              \n              setSuccessMessage(`You've been invited by ${inviteInfo.inviter_name}!`);\n            } else {\n              setSuccessMessage(`This invitation is no longer valid: ${inviteInfo.error}`);\n            }\n          } catch (error) {\n            debugLog('MBA4321 Error verifying invitation:', error);\n            setSuccessMessage('This invitation link is invalid or has expired.');\n          } finally {\n            setVerifyingInvite(false);\n          }\n        }\n      } catch (error) {\n        debugLog('MBA4321 Error processing invitation:', error);\n        setVerifyingInvite(false);\n      }\n    };\n    \n    checkInvitation();\n  }, [route.params, route.name]);\n\n  // Fetch supported locations from backend\n  useEffect(() => {\n    const fetchLocations = async () => {\n      setLoadingLocations(true);\n      try {\n        // Fetch locations from backend\n        const response = await axios.get(`${API_BASE_URL}/api/locations/v1/supported/`);\n        debugLog('MBA6789: Locations fetched from backend', response.data);\n        \n        if (response.data && Array.isArray(response.data.locations)) {\n          setLocations(response.data.locations);\n        } else {\n          // Fallback to hardcoded locations if response format is unexpected\n          debugLog('MBA6789: Using fallback locations due to unexpected response format', response.data);\n          setLocations(fallbackLocations);\n        }\n      } catch (error) {\n        debugLog('MBA6789: Error fetching locations', error);\n        // Use fallback locations if API call fails\n        setLocations(fallbackLocations);\n      } finally {\n        setLoadingLocations(false);\n      }\n    };\n    \n    fetchLocations();\n  }, []);\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate location only if not invited\n    if (!inviteVerified && !location) {\n      setLocationError('Please select your location');\n      isValid = false;\n    }\n    \n    // Validate first name with sanitization\n    const firstNameValidation = validateName(firstName);\n    setFirstNameError(firstNameValidation.message);\n    if (!firstNameValidation.isValid) isValid = false;\n    \n    // Validate last name with sanitization\n    const lastNameValidation = validateName(lastName);\n    setLastNameError(lastNameValidation.message);\n    if (!lastNameValidation.isValid) isValid = false;\n    \n    // Validate email with sanitization\n    const emailValidation = validateEmail(email);\n    setEmailError(emailValidation.message);\n    if (!emailValidation.isValid) isValid = false;\n    \n    // Validate password with sanitization\n    const passwordValidation = validatePassword(password);\n    setPasswordError(passwordValidation.message);\n    if (!passwordValidation.isValid) isValid = false;\n    \n    // Validate password match\n    const passwordMatchValidation = validatePasswordMatch(password, confirmPassword);\n    setConfirmPasswordError(passwordMatchValidation.message);\n    if (!passwordMatchValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  const handleSignUp = async () => {\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      debugLog('MBA12345 Starting user registration process');\n      \n      // Sanitize all inputs before sending to backend\n      const sanitizedFirstName = sanitizeInput(firstName, 'name');\n      const sanitizedLastName = sanitizeInput(lastName, 'name');\n      const sanitizedEmail = sanitizeInput(email, 'email');\n      const sanitizedPassword = sanitizeInput(password, 'password');\n      const sanitizedLocation = sanitizeInput(location, 'general');\n      \n      debugLog('MBA12345 Input sanitization completed', {\n        originalFirstName: firstName,\n        sanitizedFirstName,\n        originalLastName: lastName,\n        sanitizedLastName,\n        originalEmail: email,\n        sanitizedEmail,\n        originalLocation: location,\n        sanitizedLocation,\n        passwordChanged: password !== sanitizedPassword\n      });\n      \n      // Get user's timezone and time format preferences\n      let userTimezone = 'UTC';\n      try {\n        // Try to get the timezone using Intl API\n        userTimezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n        debugLog('MBA12345 User timezone detected using Intl API', { userTimezone });\n      } catch (error) {\n        debugLog('MBA12345 Error detecting timezone using Intl API', error);\n        // Fallback to a default timezone\n        userTimezone = 'UTC';\n      }\n      \n      const useMilitaryTime = false; // Default to non-military time\n      \n      debugLog('MBA12345 User timezone and preferences', { userTimezone, useMilitaryTime });\n      \n      // Updated data structure with sanitized inputs\n      const userData = {\n        name: `${sanitizedFirstName.trim().charAt(0).toUpperCase() + sanitizedFirstName.trim().slice(1).toLowerCase()} ${sanitizedLastName.trim().charAt(0).toUpperCase() + sanitizedLastName.trim().slice(1).toLowerCase()}`, // Combine first and last name with first letter capitalized and all other letters lowercase\n        email: sanitizedEmail.trim().toLowerCase(),\n        password: sanitizedPassword,\n        password2: confirmPassword, // Note: We don't sanitize confirm password as it needs to match exactly\n        phone_number: '', // Add empty phone number for now\n        location: inviteVerified ? 'Colorado Springs' : sanitizedLocation, // Use default location for invited users\n        ...(inviteToken && { invitation_token: inviteToken }) // Only include invitation_token if it exists\n      };\n      \n      // Prepare user data with time settings and invitation token\n      const registrationData = {\n        ...userData,\n        timezone: userTimezone,\n        use_military_time: useMilitaryTime,\n        invitation_token: inviteToken // Add invitation token here for backend to handle\n      };\n      \n      debugLog('MBA12345 Registration data:', registrationData);\n      \n      // Create a direct axios instance without interceptors for registration\n      const directAxios = axios.create({\n        baseURL: API_BASE_URL,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      // First register the user with the direct axios instance\n      const registerResponse = await directAxios.post('/api/users/v1/register/', registrationData);\n      \n      debugLog('MBA12345 User registration successful', registerResponse.data);\n      \n      // The backend already handles invitation acceptance during registration\n      // No need to manually accept it again\n      \n      // After successful registration, log the user in to get authentication tokens\n      debugLog('MBA12345 Attempting to log in with new credentials');\n      \n      const loginResponse = await directAxios.post('/api/token/', {\n        email: sanitizedEmail.trim().toLowerCase(),\n        password: sanitizedPassword,\n      });\n      \n      debugLog('MBA12345 Login successful, received tokens');\n      \n      const { access, refresh } = loginResponse.data;\n      \n      // Use the signIn function from AuthContext to properly set up authentication\n      debugLog('MBA12345 Calling signIn function from AuthContext');\n      \n      await signIn(access, refresh);\n      \n      debugLog('MBA12345 Authentication setup complete');\n      \n      // NOTE: We don't need to manually accept the invitation since the backend handles it during registration\n      \n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Success', 'Account created successfully!', [\n          { text: 'OK', onPress: () => navigation.navigate('Dashboard') }\n        ]);\n      } else {\n        navigation.navigate('Dashboard');\n      }\n    } catch (error) {\n      debugLog('MBA12345 Error during signup process', error.response?.data || error.message);\n      \n      let errorMessage = 'Signup Failed: An error occurred during signup.';\n      if (error.response) {\n        const errorData = error.response.data;\n        // Handle specific field errors\n        if (errorData) {\n          if (typeof errorData === 'object') {\n            // Handle field-specific errors\n            const firstError = Object.entries(errorData)[0];\n            if (firstError) {\n              const [field, messages] = firstError;\n              errorMessage = `${field}: ${Array.isArray(messages) ? messages[0] : messages}`;\n            }\n          } else if (typeof errorData === 'string') {\n            // Handle string error responses\n            errorMessage = errorData;\n          }\n        }\n      }\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', errorMessage);\n      } else {\n        setSuccessMessage(errorMessage);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Enhanced input handlers with real-time sanitization\n  const handleFirstNameChange = (text) => {\n    // Apply real-time sanitization for names\n    const sanitizedText = sanitizeInput(text, 'name');\n    \n    // Check if sanitization removed too much content (potential attack)\n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 30 && text.length > 3) {\n      debugLog('MBA1234: Potentially malicious first name input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return; // Don't update if too much was removed\n    }\n    \n    setFirstName(sanitizedText);\n    setFirstNameError('');\n  };\n\n  const handleLastNameChange = (text) => {\n    // Apply real-time sanitization for names\n    const sanitizedText = sanitizeInput(text, 'name');\n    \n    // Check if sanitization removed too much content (potential attack)\n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 30 && text.length > 3) {\n      debugLog('MBA1234: Potentially malicious last name input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return; // Don't update if too much was removed\n    }\n    \n    setLastName(sanitizedText);\n    setLastNameError('');\n  };\n\n  const handleEmailChange = (text) => {\n    // Apply real-time sanitization for emails\n    const sanitizedText = sanitizeInput(text, 'email');\n    \n    // For emails, we're more strict about changes since they have a specific format\n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 20 && text.length > 5) {\n      debugLog('MBA1234: Potentially malicious email input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return; // Don't update if too much was removed\n    }\n    \n    setEmail(sanitizedText);\n    setEmailError('');\n  };\n\n  const handlePasswordChange = (text) => {\n    // For passwords, we're more lenient with sanitization during typing\n    // Full validation happens on form submission\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    // Only block if obvious malicious content\n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious password input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return; // Don't update if too much was removed\n    }\n    \n    setPassword(sanitizedText);\n    setPasswordError('');\n  };\n\n  const handleConfirmPasswordChange = (text) => {\n    // For confirm password, we don't sanitize as much since it needs to match exactly\n    // But we still prevent obvious XSS attempts\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious confirm password input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return; // Don't update if too much was removed\n    }\n    \n    setConfirmPassword(sanitizedText);\n    setConfirmPasswordError('');\n  };\n\n  // Navigate to the sign in page\n  const navigateToSignIn = () => {\n    navigation.navigate('SignIn');\n  };\n\n  // Navigate to the waitlist page\n  const navigateToWaitlist = () => {\n    navigation.navigate('Waitlist');\n  };\n\n  // Handle location selection \n  const selectLocation = (selectedLocation) => {\n    console.log(\"Location selected:\", selectedLocation);\n    debugLog('MBA6789: Location selected', selectedLocation);\n    setLocation(selectedLocation);\n    setShowLocationDropdown(false);\n    setLocationError('');\n  };\n\n  return (\n    <KeyboardAvoidingView\n      style={styles.container}\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n      keyboardVerticalOffset={Platform.OS === 'ios' ? 64 : 0}\n    >\n      <ScrollView contentContainerStyle={styles.scrollContainer}>\n        <View style={styles.formContainer}>\n          <Text style={styles.title}>Sign Up</Text>\n          <Text style={styles.subtitle}>Sign up to continue</Text>\n          \n          {verifyingInvite && (\n            <View style={styles.inviteContainer}>\n              <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n              <Text style={styles.inviteText}>Verifying invitation...</Text>\n            </View>\n          )}\n          \n          {inviteVerified && (\n            <View style={styles.inviteContainer}>\n              <Text style={styles.inviteText}>\n                You've been invited by {inviterName}!\n              </Text>\n            </View>\n          )}\n          \n          {/* Location Dropdown - Only show if not invited */}\n          {!inviteVerified && (\n            <View style={styles.locationContainer}>\n              <Text style={styles.label}>Where are you located?</Text>\n              {loadingLocations ? (\n                <View style={[styles.input, styles.dropdown, styles.loadingContainer]}>\n                  <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n                  <Text style={styles.placeholderText}>Loading locations...</Text>\n                </View>\n              ) : (\n                <View style={styles.dropdownWrapper}>\n                  <TouchableOpacity\n                    style={[\n                      styles.input,\n                      styles.dropdown,\n                      locationError ? styles.errorInput : null\n                    ]}\n                    onPress={() => setShowLocationDropdown(!showLocationDropdown)}\n                  >\n                    <Text style={location ? styles.inputText : styles.placeholderText}>\n                      {location || 'Select your location'}\n                    </Text>\n                    <MaterialCommunityIcons\n                      name={showLocationDropdown ? \"chevron-up\" : \"chevron-down\"}\n                      size={24}\n                      color={theme.colors.text}\n                    />\n                  </TouchableOpacity>\n                  \n                  {showLocationDropdown && (\n                    <View style={styles.dropdownMenu}>\n                      {locations.map((loc) => (\n                        <TouchableOpacity\n                          key={loc.name}\n                          style={styles.dropdownItem}\n                          onPress={() => selectLocation(loc.name)}\n                        >\n                          <Text style={styles.dropdownItemText}>\n                            {loc.name} {!loc.supported && \"(Coming Soon)\"}\n                          </Text>\n                        </TouchableOpacity>\n                      ))}\n                    </View>\n                  )}\n                </View>\n              )}\n              {locationError ? <Text style={styles.errorText}>{locationError}</Text> : null}\n            </View>\n          )}\n          \n          {/* Regular form fields */}\n          {(inviteVerified || !location || locations.find(loc => loc.name === location && loc.supported)) ? (\n            <>\n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, firstNameError ? styles.errorInput : null]}\n                  placeholder=\"First Name\"\n                  value={firstName}\n                  onChangeText={handleFirstNameChange}\n                />\n                {firstNameError ? <Text style={styles.errorText}>{firstNameError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, lastNameError ? styles.errorInput : null]}\n                  placeholder=\"Last Name\"\n                  value={lastName}\n                  onChangeText={handleLastNameChange}\n                />\n                {lastNameError ? <Text style={styles.errorText}>{lastNameError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, emailError ? styles.errorInput : null]}\n                  placeholder=\"Email\"\n                  value={email}\n                  onChangeText={handleEmailChange}\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                  editable={true}\n                />\n                {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, passwordError ? styles.errorInput : null]}\n                  placeholder=\"Password\"\n                  value={password}\n                  onChangeText={handlePasswordChange}\n                  secureTextEntry\n                />\n                {passwordError ? <Text style={styles.errorText}>{passwordError}</Text> : null}\n              </View>\n              \n              <View style={styles.inputContainer}>\n                <TextInput\n                  style={[styles.input, confirmPasswordError ? styles.errorInput : null]}\n                  placeholder=\"Confirm Password\"\n                  value={confirmPassword}\n                  onChangeText={handleConfirmPasswordChange}\n                  secureTextEntry\n                />\n                {confirmPasswordError ? <Text style={styles.errorText}>{confirmPasswordError}</Text> : null}\n              </View>\n              \n              <CustomButton title=\"Sign Up\" onPress={handleSignUp} style={styles.signupButton} />\n            </>\n          ) : (\n            /* Show waitlist button if unsupported location is selected */\n            <View style={styles.waitlistContainer}>\n              <Text style={styles.waitlistMessage}>\n                CrittrCove isn't available in {location} yet, but we're expanding soon!\n              </Text>\n              <Text style={styles.waitlistSubMessage}>\n                Join our waitlist to be notified when we launch in your area.\n              </Text>\n              <CustomButton\n                title=\"Join Waitlist\"\n                onPress={navigateToWaitlist}\n                style={styles.waitlistButton}\n              />\n            </View>\n          )}\n          \n          {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} style={styles.loader} />}\n          {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n        </View>\n        \n        {/* Sign In Link */}\n        <View style={styles.signInContainer}>\n          <Text style={styles.signInText}>Already have an account? </Text>\n          <TouchableOpacity onPress={navigateToSignIn}>\n            <Text style={styles.signInLink}>Sign in</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  scrollContainer: {\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100%',\n  },\n  formContainer: {\n    backgroundColor: theme.colors.surfaceContrast,\n    padding: 30,\n    borderRadius: 10,\n    width: '100%',\n    maxWidth: 500,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  title: {\n    fontSize: 32,\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  subtitle: {\n    color: theme.colors.text,\n    fontSize: 16,\n    marginBottom: 24,\n    textAlign: 'center',\n  },\n  inputContainer: {\n    width: '100%',\n    marginBottom: 16,\n  },\n  input: {\n    width: '100%',\n    height: 50,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.surface,\n    fontSize: 16,\n  },\n  errorInput: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 5,\n  },\n  message: {\n    marginTop: 20,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontSize: 16,\n  },\n  inviteContainer: {\n    marginBottom: 20,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: '#f0f9ff',\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  inviteText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    marginLeft: 8,\n    fontWeight: '500',\n    textAlign: 'center',\n  },\n  signupButton: {\n    marginTop: 24,\n    width: '100%',\n  },\n  loader: {\n    marginTop: 20,\n  },\n  signInContainer: {\n    flexDirection: 'row',\n    marginTop: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  signInText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  signInLink: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  dropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 50,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  placeholderText: {\n    color: theme.colors.placeHolderText,\n    fontSize: 16,\n  },\n  inputText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  dropdownMenu: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    zIndex: 1002,\n    marginTop: 4,\n    maxHeight: 200,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemText: {\n    color: theme.colors.text,\n    fontSize: 16,\n  },\n  label: {\n    color: theme.colors.text,\n    fontSize: 16,\n    marginBottom: 8,\n  },\n  locationContainer: {\n    width: '100%',\n    marginBottom: 16,\n    position: 'relative',\n    zIndex: 1000,\n  },\n  dropdownWrapper: {\n    position: 'relative',\n    zIndex: 1001,\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n  },\n  waitlistContainer: {\n    marginTop: 20,\n    padding: 20,\n    borderRadius: 8,\n    alignItems: 'center',\n    width: '100%',\n    backgroundColor: '#f0f9ff',\n    borderWidth: 1,\n    borderColor: '#e0e7ff',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  waitlistMessage: {\n    color: theme.colors.text,\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 16,\n    textAlign: 'center',\n  },\n  waitlistSubMessage: {\n    color: theme.colors.text,\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  waitlistButton: {\n    marginTop: 24,\n    width: '100%',\n    backgroundColor: '#6B7280',\n  },\n});","import React, { useState, useContext } from 'react';\nimport { View, TextInput, Text, StyleSheet, Alert, ActivityIndicator, Dimensions, Platform, SafeAreaView, TouchableOpacity } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport CustomButton from '../components/CustomButton';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { validateEmail, sanitizeInput } from '../validation/validation';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function ResetPassword() {\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigation = useNavigation();\n  const { screenWidth: contextScreenWidth, isCollapsed, isSignedIn } = useContext(AuthContext);\n\n  // Enhanced input handler with real-time sanitization\n  const handleEmailChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'email');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 20 && text.length > 5) {\n      debugLog('MBA1234: Potentially malicious email input detected in ResetPassword:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setEmail(sanitizedText);\n    setEmailError('');\n    setSuccessMessage('');\n  };\n\n  const handleResetPassword = async () => {\n    // Validate email before proceeding\n    const emailValidation = validateEmail(email);\n    setEmailError(emailValidation.message);\n    \n    if (!emailValidation.isValid) {\n      return;\n    }\n\n    setLoading(true);\n    setSuccessMessage('');\n\n    try {\n      // Sanitize email before sending to API\n      const sanitizedEmail = sanitizeInput(email, 'email');\n      \n      debugLog('MBA1234: Password reset request for sanitized email:', {\n        originalEmail: email,\n        sanitizedEmail\n      });\n\n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/reset-password/`, {\n        email: sanitizedEmail.toLowerCase(),\n      });\n\n      if (response.status === 200) {\n        setSuccessMessage('If an account with this email exists, you will receive a password reset link shortly.');\n        setEmail('');\n      }\n    } catch (error) {\n      debugLog('MBA1234: Error during password reset:', error);\n      \n      let errorMessage = 'Error: Unable to process password reset request.';\n      if (error.response && error.response.data) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else if (error.response.data.detail) {\n          errorMessage = error.response.data.detail;\n        }\n      }\n      \n      setSuccessMessage(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const styles = createStyles(contextScreenWidth, isCollapsed, isSignedIn);\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeArea}>\n        <View style={styles.content}>\n          {isSignedIn && (\n            <TouchableOpacity onPress={() => navigation.navigate('ChangePassword')} style={styles.backButton}>\n              <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.text} />\n              <Text style={styles.backText}>Reset Password</Text>\n            </TouchableOpacity>\n          )}\n          \n          <View style={styles.card}>\n            <Text style={styles.title}>Reset Password</Text>\n            \n            <TextInput\n              style={[styles.input, emailError && styles.inputError]}\n              placeholder=\"Email\"\n              value={email}\n              onChangeText={handleEmailChange}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              placeholderTextColor={theme.colors.placeHolderText}\n            />\n            {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n            \n            <CustomButton \n              title=\"Reset Password\" \n              onPress={handleResetPassword}\n              disabled={loading}\n              style={styles.button}\n            />\n            \n            {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} style={styles.loader} />}\n            {successMessage ? <Text style={[styles.message, successMessage.includes('Error') && styles.errorMessage]}>{successMessage}</Text> : null}\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n}\n\nconst createStyles = (screenWidth, isCollapsed, isSignedIn) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    marginLeft: (screenWidth > 900 && isSignedIn) ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  safeArea: {\n    flex: 1,\n    paddingTop: Platform.OS === 'android' ? 20 : 0,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  backButton: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  backText: {\n    marginLeft: 8,\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 40,\n    width: '100%',\n    maxWidth: 400,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '600',\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 15,\n    fontSize: 16,\n    color: theme.colors.text,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginBottom: 20,\n  },\n  inputError: {\n    borderColor: theme.colors.error,\n  },\n  button: {\n    marginBottom: 20,\n  },\n  loader: {\n    marginTop: 10,\n  },\n  message: {\n    textAlign: 'center',\n    color: theme.colors.primary,\n    fontSize: 14,\n    marginTop: 10,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    marginBottom: 10,\n  },\n});\n","import React, { useState } from 'react';\nimport { View, TextInput, Text, StyleSheet, ActivityIndicator, Dimensions, Alert, Platform } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { theme } from '../styles/theme';\nimport CustomButton from '../components/CustomButton';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nexport default function ResetPasswordConfirm({ route }) {\n  const { uid, token } = route.params;\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  const navigation = useNavigation();\n\n  const handlePasswordReset = async () => {\n    if (newPassword !== confirmPassword) {\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', 'Passwords do not match.');\n      } else {\n        setSuccessMessage('Passwords do not match.');\n      }\n      return;\n    }\n\n    setLoading(true);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/reset-password-confirm/${uid}/${token}/`, {\n        new_password: newPassword,\n      });\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Success', 'Your password has been reset.', [\n          { text: 'OK', onPress: () => navigateToFrom(navigation, 'SignIn', 'ResetPasswordConfirm') }\n        ]);\n      } else {\n        setSuccessMessage('Your password has been reset.');\n        setTimeout(() => {\n          navigateToFrom(navigation, 'SignIn', 'ResetPasswordConfirm');\n        }, 2000); // Navigate after 2 seconds\n      }\n    } catch (error) {\n      const errorMessage = 'Failed to reset password. Please try again later.';\n      if (Platform.OS === 'ios' || Platform.OS === 'android') {\n        Alert.alert('Error', errorMessage);\n      } else {\n        setSuccessMessage(errorMessage);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Reset Password</Text>\n      <TextInput\n        style={styles.input}\n        placeholder=\"New Password\"\n        value={newPassword}\n        onChangeText={setNewPassword}\n        secureTextEntry\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={confirmPassword}\n        onChangeText={setConfirmPassword}\n        secureTextEntry\n      />\n      <CustomButton title=\"Reset Password\" onPress={handlePasswordReset} />\n      {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} />}\n      {successMessage ? <Text style={styles.message}>{successMessage}</Text> : null}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: theme.spacing.medium,\n    backgroundColor: theme.colors.background,\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.primary,\n    marginBottom: theme.spacing.medium,\n  },\n  input: {\n    width: screenWidth > 600 ? 600 : '100%',\n    maxWidth: 600,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: theme.spacing.small,\n    paddingHorizontal: theme.spacing.small,\n  },\n  message: {\n    marginTop: theme.spacing.small,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n});","// components/BookingCard.js\nimport React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { convertDateTimeFromUTC, formatDate } from '../utils/time_utils';\nimport { supportsHover } from '../utils/deviceUtils';\n\nconst getStatusInfo = (status) => {\n  // Add debugging for status values\n  debugLog(\"MBA5677: Processing status\", { status });\n  \n  switch (status) {\n    case 'Pending Initial Professional Changes':\n    case 'Pending Professional Changes':\n      return {\n        text: 'Pending Pro',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n    case 'Pending Owner Approval':\n      return {\n        text: 'Pending Owner',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n    case 'Confirmed':\n      return {\n        text: 'Confirmed',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    case 'Completed':\n      return {\n        text: 'Completed',\n        bgColor: theme.colors.mybookings.completedBg,\n        textColor: theme.colors.mybookings.completedText,\n        icon: 'flag-checkered'\n      };\n    case 'Confirmed Pending Professional Changes':\n      return {\n        text: 'Confirmed • Pending Pro',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    case 'Confirmed Pending Owner Approval':\n      return {\n        text: 'Confirmed • Pending Owner',\n        bgColor: theme.colors.mybookings.confirmedBg,\n        textColor: theme.colors.mybookings.confirmedText,\n        icon: 'check-circle-outline'\n      };\n    default:\n      return {\n        text: status || 'Unknown',\n        bgColor: theme.colors.mybookings.main,\n        textColor: theme.colors.mybookings.secondary,\n        icon: 'clock-outline'\n      };\n  }\n};\n\nconst BookingCard = ({ booking, type, onViewDetails }) => {\n  const { id, status, date, time, serviceName } = booking;\n  \n  // Handle both client_name and professional_name, with fallbacks for backward compatibility\n  let name = '';\n  if (type === 'professional') {\n    name = booking.client_name || booking.ownerName || 'Client';\n    debugLog(\"MBA5677: Using client name for professional view\", { client_name: booking.client_name, ownerName: booking.ownerName });\n  } else {\n    name = booking.professional_name || booking.professionalName || 'Professional';\n    debugLog(\"MBA5677: Using professional name for client view\", { professional_name: booking.professional_name, professionalName: booking.professionalName });\n  }\n  \n  const statusInfo = getStatusInfo(status);\n  const pets = booking.pets || [];\n  const { screenWidth, timeSettings } = useContext(AuthContext);\n  const isMobile = screenWidth < 600;\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Check if device supports hover\n  const deviceSupportsHover = supportsHover();\n\n  // Add debugging for incoming date\n  debugLog(\"MBA5677: Original booking date/time\", { date, time });\n\n  // Convert time from UTC to user's timezone if needed\n  const convertedDateTime = timeSettings?.timezone !== 'UTC' && date && time\n    ? convertDateTimeFromUTC(date, time, timeSettings?.timezone || 'America/Denver', timeSettings?.use_military_time || false)\n    : date && time ? { date, time } : null;\n\n  // Format the date for display using the moment-based approach\n  const formattedDate = convertedDateTime?.date \n    ? (() => {\n        debugLog(\"MBA5677: Formatting with direct date\", convertedDateTime.date);\n        const parts = convertedDateTime.date.split('-');\n        if (parts.length === 3) {\n          const [year, month, day] = parts;\n          // Create date object directly\n          const dateObj = new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n          if (!isNaN(dateObj.getTime())) {\n            const monthName = dateObj.toLocaleString('default', { month: 'short' });\n            debugLog(\"MBA5677: Formatted date parts\", { year, month, day, monthName, day: dateObj.getDate() });\n            return `${monthName} ${dateObj.getDate()}`;\n          }\n        }\n        // Fallback to original date if parsing fails\n        return convertedDateTime.date;\n      })()\n    : 'No date selected';\n    \n  const convertedTime = convertedDateTime?.time;\n\n  debugLog(\"MBA5677: Converted date/time\", { \n    formattedDate,\n    convertedTime,\n    convertedDateTime,\n    timezone: timeSettings?.timezone,\n    originalDate: date,\n    originalTime: time\n  });\n\n  const getMetaText = () => {\n    const timeText = convertedTime || 'No time selected';\n    const serviceText = serviceName || 'No service selected';\n\n    if (isMobile) {\n      return (\n        <View style={styles.mobileMetaInfo}>\n          <View style={styles.mobileMetaRow}>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"calendar\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{formattedDate}</Text>\n            </View>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"clock-outline\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{timeText}</Text>\n            </View>\n            <View style={styles.metaItemContainer}>\n              <MaterialCommunityIcons name=\"briefcase-outline\" size={14} color={theme.colors.mybookings.metaText} />\n              <Text style={styles.metaText}>{serviceText}</Text>\n            </View>\n          </View>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.metaInfo}>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"calendar\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{formattedDate}</Text>\n        </View>\n        <Text style={styles.metaText}> • </Text>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"clock-outline\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{timeText}</Text>\n        </View>\n        <Text style={styles.metaText}> • </Text>\n        <View style={styles.metaItemContainer}>\n          <MaterialCommunityIcons name=\"briefcase-outline\" size={16} color={theme.colors.mybookings.metaText} />\n          <Text style={styles.metaText}>{serviceText}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  // Add debugging for complete booking object and type\n  debugLog(\"MBA5677: Rendering BookingCard\", { \n    booking,\n    type,\n    name,\n    status\n  });\n\n  return (\n    <TouchableOpacity \n      style={[\n        styles.card,\n        Platform.OS === 'web' && isHovered && styles.cardHovered\n      ]}\n      onPress={onViewDetails}\n      onMouseEnter={() => deviceSupportsHover && setIsHovered(true)}\n      onMouseLeave={() => deviceSupportsHover && setIsHovered(false)}\n    >\n      <View style={[styles.cardContent, isMobile && styles.mobileCardContent]}>\n        <View style={[styles.topContent, isMobile && styles.mobileTopContent]}>\n          <Image \n            source={require('../../assets/default-profile.png')} \n            style={[\n              styles.profileImage,\n              isMobile && styles.mobileProfileImage\n            ]}\n          />\n          <View style={[styles.contentContainer, isMobile && styles.mobileContentContainer]}>\n            <View style={[styles.headerContainer, isMobile && styles.mobileHeaderContainer]}>\n              <View style={styles.nameAndPets}>\n                <View style={[styles.clientContainer, isMobile && styles.mobileClientContainer]}>\n                  <MaterialCommunityIcons \n                    name=\"account\" \n                    size={isMobile ? 16 : 18} \n                    color={theme.colors.mybookings.ownername} \n                  />\n                  <Text style={[styles.name, isMobile && styles.mobileName]}>{name}</Text>\n                </View>\n                <View style={[styles.petContainer, isMobile && styles.mobilePetContainer]}>\n                  <MaterialCommunityIcons name=\"paw\" size={isMobile ? 14 : 14} color={theme.colors.mybookings.metaText} />\n                  <Text style={[styles.petInfo, isMobile && styles.mobilePetInfo]}>\n                    {pets.length > 0 ? pets.map(pet => pet.name).join(', ') : 'No pets selected'}\n                  </Text>\n                </View>\n              </View>\n              <View style={[\n                styles.statusBadge, \n                { backgroundColor: statusInfo.bgColor },\n                isMobile && styles.mobileStatusBadge\n              ]}>\n                <View style={styles.statusContent}>\n                  <MaterialCommunityIcons \n                    name={statusInfo.icon} \n                    size={isMobile ? 12 : 16} \n                    color={statusInfo.textColor}\n                  />\n                  <Text style={[\n                    styles.statusText, \n                    { color: statusInfo.textColor },\n                    isMobile && styles.mobileStatusText\n                  ]}>\n                    {statusInfo.text}\n                  </Text>\n                </View>\n              </View>\n            </View>\n            {!isMobile && getMetaText()}\n          </View>\n          {!isMobile && (\n            <TouchableOpacity\n              style={styles.viewDetailsButton}\n              onPress={onViewDetails}\n            >\n              <Text style={styles.viewDetailsText}>View Details</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        {isMobile && (\n          <>\n            <View style={styles.mobileDivider} />\n            {getMetaText()}\n          </>\n        )}\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 16,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  cardHovered: {\n    transform: [{ scale: 1.02 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  cardContent: {\n    flexDirection: 'column',\n  },\n  mobileCardContent: {\n    gap: 12,\n  },\n  topContent: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    gap: 16,\n  },\n  mobileTopContent: {\n    marginBottom: 0,\n  },\n  profileImage: {\n    width: 88,\n    height: 88,\n    borderRadius: 44,\n  },\n  mobileProfileImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  mobileContentContainer: {\n    flex: 1,\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 8,\n  },\n  mobileHeaderContainer: {\n    marginBottom: 0,\n  },\n  nameAndPets: {\n    flex: 1,\n  },\n  statusBadge: {\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 16,\n  },\n  statusContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  statusText: {\n    fontSize: 12,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  clientContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n    marginBottom: 6,\n  },\n  name: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.mybookings.ownerName,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  petInfo: {\n    fontSize: 14,\n    color: '#888975',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileDivider: {\n    height: 1,\n    backgroundColor: theme.colors.surface,\n    width: '100%',\n    // marginVertical: 12,\n  },\n  metaInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  mobileMetaInfo: {\n    width: '100%',\n  },\n  mobileMetaRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  metaItemContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  metaText: {\n    fontSize: 14,\n    color: theme.colors.mybookings.metaText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  viewDetailsButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    borderRadius: 8,\n  },\n  viewDetailsText: {\n    color: theme.colors.surfaceContrast,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileClientContainer: {\n    marginBottom: 4,\n  },\n  mobileName: {\n    fontSize: 15,\n    color: theme.colors.mybookings.ownerName,\n  },\n  mobilePetContainer: {\n    marginBottom: 2,\n  },\n  mobilePetInfo: {\n    fontSize: 13,\n    color: theme.colors.mybookings.metaText,\n  },\n  mobileStatusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 2,\n    borderRadius: 12,\n  },\n  mobileStatusText: {\n    fontSize: 10,\n  },\n});\n\nexport default BookingCard;","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\n\nconst ProfessionalAlert = ({ isProfessional, fromApprovalModal = false }) => {\n  if (!isProfessional || fromApprovalModal) return null;\n\n  return (\n    <View style={styles.alertContainer}>\n      <View style={styles.alertHeader}>\n        <MaterialCommunityIcons name=\"alert-circle\" size={20} color={theme.colors.error} />\n        <Text style={styles.alertBold}>Professional Reminders</Text>\n      </View>\n      <Text style={styles.alertText}>\n        • <Text style={styles.alertText}>Collect payment from your client before the booking begins</Text>\n      </Text>\n      <Text style={styles.alertText}>\n        • Consider scheduling a meet-and-greet before confirming this booking to ensure compatibility and discuss specific care requirements\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  alertContainer: {\n    backgroundColor: '#fef2f2',\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n    borderLeftWidth: 4,\n    borderLeftColor: theme.colors.error,\n  },\n  alertHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  alertBold: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 8,\n    fontWeight: 'bold',\n  },\n  alertText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ProfessionalAlert; ","import React, { useContext } from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  Platform\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\n\nconst TermsOfServiceModal = ({ visible, onClose, termsData }) => {\n  const { screenWidth } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n\n  // Default terms data if none provided\n  const defaultTermsData = [\n    {\n      header: \"Terms of Service\",\n      body: \"By using CrittrCove's services, you agree to the following terms and conditions. Please read these terms carefully before proceeding with your booking.\"\n    },\n    {\n      header: \"Service Agreement\",\n      body: \"This agreement is between you (the client) and the professional pet care provider. CrittrCove acts as a platform to facilitate this connection but is not directly responsible for the services provided.\"\n    },\n    {\n      header: \"Payment Terms\",\n      body: \"Payment is due as agreed upon between the client and professional. CrittrCove may process payments on behalf of professionals. All fees and charges are clearly displayed before booking confirmation.\"\n    },\n    {\n      header: \"Cancellation Policy\",\n      body: \"Cancellation policies vary by professional and service type. Please review the specific cancellation terms with your chosen professional before confirming your booking.\"\n    },\n    {\n      header: \"Liability and Insurance\",\n      body: \"Professionals are responsible for maintaining appropriate insurance coverage. Clients are responsible for ensuring their pets are properly vaccinated and disclosed any behavioral or health concerns.\"\n    },\n    {\n      header: \"Platform Fees\",\n      body: \"CrittrCove charges platform fees to both clients and professionals to maintain and improve our services. These fees are clearly disclosed during the booking process.\"\n    },\n    {\n      header: \"User Conduct\",\n      body: \"All users must conduct themselves professionally and respectfully. Any inappropriate behavior, harassment, or violation of these terms may result in account suspension or termination.\"\n    },\n    {\n      header: \"Privacy and Data Protection\",\n      body: \"Your privacy is important to us. We collect and use personal information in accordance with our Privacy Policy. By using our services, you consent to our data collection and use practices.\"\n    },\n    {\n      header: \"Dispute Resolution\",\n      body: \"Any disputes should first be addressed directly between the client and professional. If resolution cannot be reached, CrittrCove may assist in mediation. Legal disputes will be resolved according to applicable law.\"\n    },\n    {\n      header: \"Modifications to Terms\",\n      body: \"CrittrCove reserves the right to modify these terms at any time. Users will be notified of significant changes and continued use of the platform constitutes acceptance of updated terms.\"\n    }\n  ];\n\n  const terms = termsData || defaultTermsData;\n\n  const renderTermsContent = () => {\n    return terms.map((section, index) => (\n      <View key={index} style={styles.section}>\n        <Text style={styles.sectionHeader}>{section.header}</Text>\n        <Text style={styles.sectionBody}>{section.body}</Text>\n      </View>\n    ));\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={onClose}\n    >\n      <SafeAreaView style={styles.safeArea}>\n        <View style={[\n          styles.container, \n          isDesktop ? styles.desktopContainer : {}\n        ]}>\n          {/* Header */}\n          <View style={styles.header}>\n            <Text style={styles.title}>Terms of Service</Text>\n            <TouchableOpacity style={styles.closeButton} onPress={onClose}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Content */}\n          <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.scrollContent}>\n            {renderTermsContent()}\n          </ScrollView>\n          \n          {/* Footer */}\n          <View style={styles.footerContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.closeFooterButton]}\n              onPress={onClose}\n            >\n              <Text style={styles.buttonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    margin: Platform.OS === 'web' ? 0 : 24,\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  desktopContainer: {\n    maxWidth: 800,\n    maxHeight: '90%',\n    alignSelf: 'center',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  scrollContainer: {\n    flex: 1,\n  },\n  scrollContent: {\n    padding: 16,\n    paddingBottom: 32,\n  },\n  section: {\n    marginBottom: 24,\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 8,\n  },\n  sectionBody: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    lineHeight: 24,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  button: {\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  closeFooterButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default TermsOfServiceModal; ","// THIS FILE IS FOR THE BOOKING STEP MODAL\nimport React, { useEffect, useContext, useState, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  TextInput,\n  useWindowDimensions,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport { formatDateTimeRangeFromUTC, formatFromUTC, FORMAT_TYPES } from '../../utils/time_utils';\nimport { updateBookingDraftRates } from '../../api/API';\nimport SupportButton from '../SupportButton';\nimport ProfessionalAlert from '../common/ProfessionalAlert';\nimport TermsOfServiceModal from '../modals/TermsOfServiceModal';\n\nconst ReviewAndRatesCard = ({ bookingData, onRatesUpdate, bookingId, showEditControls = true, isProfessional = true, onTermsAgreed, fromApprovalModal = false, onTosAgreementChange }) => {\n  const { timeSettings } = useContext(AuthContext);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [isAddingRate, setIsAddingRate] = useState(false);\n  const [editedRates, setEditedRates] = useState(null);\n  const [newRate, setNewRate] = useState({ name: '', amount: '', description: '' });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [expandedRates, setExpandedRates] = useState(new Set());\n  const [editingOccurrenceId, setEditingOccurrenceId] = useState(null);\n  const [occurrenceEdits, setOccurrenceEdits] = useState({});\n  const [isAddingRateForOccurrence, setIsAddingRateForOccurrence] = useState(null);\n  const [newOccurrenceRate, setNewOccurrenceRate] = useState({ name: '', amount: '', description: '' });\n  const [termsAgreed, setTermsAgreed] = useState(false);\n  const [serviceAdditionalRatesEnabled, setServiceAdditionalRatesEnabled] = useState({});\n  const [availableAdditionalRates, setAvailableAdditionalRates] = useState([]);\n  const [hasInitializedRates, setHasInitializedRates] = useState(false);\n  const lastBookingIdRef = useRef(null);\n  \n  // Determine TOS status based on user type and booking data\n  const getTosStatus = () => {\n    if (!bookingData) return undefined;\n    return isProfessional ? bookingData.pro_agreed_tos : bookingData.client_agreed_tos;\n  };\n  \n  const currentTosStatus = getTosStatus();\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const { width } = useWindowDimensions();\n\n  useEffect(() => {\n    debugLog('MBA54321 ReviewAndRatesCard received bookingData:', bookingData);\n    debugLog('MBA54321 ReviewAndRatesCard received bookingId:', bookingId);\n    \n    if (bookingData?.occurrences?.[0]) {\n      // Create a safe default rates object\n      const defaultRates = {\n        base_rate: 0,\n        additional_animal_rate: 0,\n        applies_after: 1,\n        holiday_rate: 0,\n        holiday_days: 0,\n        additional_rates: []\n      };\n      \n      // Get the occurrence\n      const occurrence = bookingData.occurrences[0];\n      \n      // Use the existing rates or default to our safe defaults\n      const safeRates = occurrence.rates || defaultRates;\n      \n      // Initialize edited rates\n      setEditedRates({ ...safeRates });\n    }\n\n    // Initialize service additional rates toggle state for non-overnight services\n    debugLog('MBA2394jv340 Effect triggered - checking if should initialize service rates');\n    debugLog('MBA2394jv340 Has service:', !!bookingData?.service);\n    debugLog('MBA2394jv340 Service is_overnight:', bookingData?.service?.is_overnight);\n    debugLog('MBA2394jv340 Occurrences length:', bookingData?.occurrences?.length);\n    debugLog('MBA2394jv340 Has already initialized rates:', hasInitializedRates);\n    \n    // Check if bookingId changed to reset initialization\n    if (lastBookingIdRef.current !== bookingId && lastBookingIdRef.current !== null) {\n      debugLog('MBA2394jv340 BookingId changed from', lastBookingIdRef.current, 'to', bookingId, '- resetting');\n      setHasInitializedRates(false);\n      setAvailableAdditionalRates([]);\n      setServiceAdditionalRatesEnabled({});\n    }\n    lastBookingIdRef.current = bookingId;\n    \n    if (bookingData?.service && !bookingData.service.is_overnight && bookingData?.occurrences?.length > 1 && !hasInitializedRates) {\n      debugLog('MBA2394jv340 Initializing service additional rates for non-overnight service with multiple dates');\n      \n      // Get service additional rates from the service object or collect from occurrences\n      const serviceAdditionalRates = bookingData.service.additional_rates || [];\n      debugLog('MBA2394jv340 Raw service additional rates from initialization:', serviceAdditionalRates);\n      \n      // If service doesn't have additional rates, collect unique rates from all occurrences\n      let availableRates = serviceAdditionalRates;\n      if (serviceAdditionalRates.length === 0) {\n        debugLog('MBA2394jv340 No service rates found in initialization, collecting from occurrences');\n        const allOccurrenceRates = [];\n        \n        bookingData.occurrences.forEach((occ, index) => {\n          const occRates = occ.rates?.additional_rates || [];\n          debugLog(`MBA2394jv340 Initialization: Occurrence ${index} additional rates:`, occRates);\n          allOccurrenceRates.push(...occRates);\n        });\n        \n        // Get unique rates by title\n        const uniqueRatesMap = new Map();\n        allOccurrenceRates.forEach(rate => {\n          if (rate.title && !uniqueRatesMap.has(rate.title)) {\n            uniqueRatesMap.set(rate.title, {\n              title: rate.title,\n              amount: rate.amount,\n              rate: rate.amount, // For consistency with service rates\n              description: rate.description || ''\n            });\n          }\n        });\n        \n        availableRates = Array.from(uniqueRatesMap.values());\n        debugLog('MBA2394jv340 Initialization: Unique rates collected from occurrences:', availableRates);\n      }\n      \n      // Filter out base rates that are not actual additional rates\n      const filteredRates = availableRates.filter(rate => {\n        const title = (rate.title || '').toLowerCase();\n        return !title.includes('base rate') && \n               !title.includes('additional animal') && \n               !title.includes('holiday rate');\n      });\n      \n      debugLog('MBA2394jv340 Filtered service additional rates from initialization:', filteredRates);\n      \n      // Store the available rates in state so they persist\n      setAvailableAdditionalRates(filteredRates);\n      \n      // Check which rates are currently applied to the first occurrence\n      const firstOccurrenceRates = bookingData.occurrences[0]?.rates?.additional_rates || [];\n      debugLog('MBA2394jv340 First occurrence additional rates:', firstOccurrenceRates);\n      const enabledRates = {};\n      \n      filteredRates.forEach(serviceRate => {\n        // Check if this service rate is currently applied\n        const isEnabled = firstOccurrenceRates.some(occRate => \n          (occRate.title || occRate.name) === serviceRate.title\n        );\n        enabledRates[serviceRate.title] = isEnabled;\n        debugLog('MBA2394jv340 Rate status:', { title: serviceRate.title, isEnabled });\n      });\n      \n      debugLog('MBA2394jv340 Final enabled rates state:', enabledRates);\n      setServiceAdditionalRatesEnabled(enabledRates);\n      setHasInitializedRates(true);\n    } else {\n      debugLog('MBA2394jv340 NOT initializing service rates - conditions not met or already initialized');\n      if (!hasInitializedRates) {\n        setAvailableAdditionalRates([]);\n      }\n    }\n  }, [bookingData, bookingId, hasInitializedRates]);\n\n\n\n  // Log whenever either editMode or editingOccurrenceId changes\n  useEffect(() => {\n    debugLog('MBA66777 Edit state changed:', { \n      isEditMode, \n      editingOccurrenceId, \n      occurrencesCount: bookingData?.occurrences?.length || 0\n    });\n  }, [isEditMode, editingOccurrenceId, bookingData?.occurrences?.length]);\n\n  const formatCurrency = (amount) => {\n    if (!amount) return '$0.00';\n    return `$${parseFloat(amount).toFixed(2)}`;\n  };\n\n  const toggleEditMode = () => {\n    if (isEditMode) {\n      // Save changes\n      saveRateChanges();\n    } else {\n      // Enter edit mode\n      setIsEditMode(true);\n      setIsAddingRate(false);\n    }\n  };\n\n  const toggleAddRate = () => {\n    setIsAddingRate(!isAddingRate);\n    // Don't exit edit mode when adding a rate for overnight bookings\n    setNewRate({ name: '', amount: '', description: '' });\n  };\n\n  // Helper function to sanitize amount input for consistent handling\n  const sanitizeAmountInput = (value) => {\n    // Remove non-numeric characters except decimal point\n    let sanitized = value\n      .replace(/[^\\d.]/g, '') // Remove anything that's not a digit or decimal point\n      .replace(/(\\..*)\\./g, '$1'); // Remove multiple decimal points, keep only the first one\n    \n    // Limit to 2 decimal places\n    const parts = sanitized.split('.');\n    if (parts.length > 1 && parts[1].length > 2) {\n      sanitized = `${parts[0]}.${parts[1].substring(0, 2)}`;\n    }\n    \n    return sanitized;\n  };\n  \n  // Update the setNewRate for amount field to apply consistent validation\n  const handleNewRateAmountChange = (text) => {\n    setNewRate(prev => ({\n      ...prev,\n      amount: sanitizeAmountInput(text)\n    }));\n  };\n  \n  // Update the setNewOccurrenceRate for amount field to apply consistent validation\n  const handleNewOccurrenceRateAmountChange = (text) => {\n    setNewOccurrenceRate(prev => ({\n      ...prev,\n      amount: sanitizeAmountInput(text)\n    }));\n  };\n\n  const saveRateChanges = async () => {\n    // Create a copy of bookingData with updated rates\n    if (!editedRates) return;\n\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      debugLog('MBA66777 Saving rate changes:', editedRates);\n      debugLog('MBA66777 Using bookingId:', bookingId);\n      \n      // Create a clean version of editedRates to send to API\n      const cleanEditedRates = {\n        ...editedRates,\n        additional_rates: editedRates.additional_rates && editedRates.additional_rates.length > 0 \n          ? editedRates.additional_rates.map(rate => ({\n              title: rate.name || rate.title, // Always use 'title' for backend\n              // Convert empty or string amount values to number\n              amount: rate.amount === '' ? 0 : typeof rate.amount === 'string' ? parseFloat(rate.amount) : rate.amount,\n              description: rate.description || `Additional rate`\n            }))\n          : []\n      };\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, index) => {\n        // For the first occurrence (the one being edited in this case), update its rates\n        if (index === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: editedRates.base_rate === '' ? 0 : typeof editedRates.base_rate === 'string' ? parseFloat(editedRates.base_rate) : editedRates.base_rate,\n              additional_animal_rate: editedRates.additional_animal_rate === '' ? 0 : typeof editedRates.additional_animal_rate === 'string' ? parseFloat(editedRates.additional_animal_rate) : editedRates.additional_animal_rate || 0,\n              applies_after: parseInt(editedRates.applies_after || 1),\n              holiday_rate: editedRates.holiday_rate === '' ? 0 : typeof editedRates.holiday_rate === 'string' ? parseFloat(editedRates.holiday_rate) : editedRates.holiday_rate || 0,\n              additional_rates: cleanEditedRates.additional_rates\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 Rate update API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n      \n      // Reset all edit state\n      setIsEditMode(false);\n      setEditingOccurrenceId(null);\n      setOccurrenceEdits({});\n      setExpandedRates(new Set());\n      setIsAddingRate(false);\n      setIsAddingRateForOccurrence(null);\n    } catch (err) {\n      debugLog('MBA66777 Error saving rate changes:', err);\n      setError('Failed to update rates. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const saveNewRate = async () => {\n    if (!newRate.name || (!newRate.amount && newRate.amount !== '')) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create the new rate object\n      const newAdditionalRate = {\n        title: newRate.name,\n        amount: newRate.amount === '' ? 0 : typeof newRate.amount === 'string' ? parseFloat(newRate.amount) : newRate.amount,\n        description: newRate.description || `Additional rate`\n      };\n      \n      // Create an updated rates object\n      const updatedRates = { ...editedRates };\n      \n      if (!updatedRates.additional_rates) {\n        updatedRates.additional_rates = [];\n      }\n      \n      updatedRates.additional_rates.push({\n        name: newRate.name,\n        title: newRate.name, // Add title for consistency\n        amount: newRate.amount === '' ? 0 : typeof newRate.amount === 'string' ? parseFloat(newRate.amount) : newRate.amount,\n        description: newRate.description || `Additional rate`\n      });\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, index) => {\n        // For the first occurrence (the one being edited in this case), update its rates with the new rate\n        if (index === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedRates.base_rate),\n              additional_animal_rate: parseFloat(updatedRates.additional_animal_rate || 0),\n              applies_after: parseInt(updatedRates.applies_after || 1),\n              holiday_rate: parseFloat(updatedRates.holiday_rate || 0),\n              additional_rates: updatedRates.additional_rates.map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || `Additional rate`\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences with new rate to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 New rate added API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Set the edited rates from the response\n        if (response.draft_data.occurrences && response.draft_data.occurrences[0]) {\n          setEditedRates(response.draft_data.occurrences[0].rates);\n        }\n        \n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n      \n      setIsAddingRate(false);\n      setNewRate({ name: '', amount: '', description: '' });\n    } catch (err) {\n      debugLog('MBA66777 Error adding new rate:', err);\n      setError('Failed to add new rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const updateBaseRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      base_rate: sanitizedValue\n    }));\n  };\n\n  const updateAdditionalAnimalRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      additional_animal_rate: sanitizedValue\n    }));\n  };\n\n  const updateHolidayRate = (value) => {\n    // Apply consistent amount sanitization\n    const sanitizedValue = sanitizeAmountInput(value);\n    \n    setEditedRates(prev => ({\n      ...prev,\n      holiday_rate: sanitizedValue\n    }));\n  };\n\n  const updateAdditionalRate = (index, field, value) => {\n    if (!editedRates?.additional_rates) return;\n    \n    const updatedAdditionalRates = [...editedRates.additional_rates];\n    \n    if (field === 'amount') {\n      // Apply consistent amount sanitization\n      const sanitizedValue = sanitizeAmountInput(value);\n      \n      updatedAdditionalRates[index] = {\n        ...updatedAdditionalRates[index],\n        amount: sanitizedValue === '' ? '' : sanitizedValue\n      };\n    } else if (field === 'name') {\n      updatedAdditionalRates[index] = {\n        ...updatedAdditionalRates[index],\n        name: value\n      };\n    }\n    \n    setEditedRates(prev => ({\n      ...prev,\n      additional_rates: updatedAdditionalRates\n    }));\n  };\n\n  const deleteAdditionalRate = async (index) => {\n    if (!editedRates?.additional_rates) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create an updated rates object\n      const updatedRates = { ...editedRates };\n      const updatedAdditionalRates = [...updatedRates.additional_rates];\n      updatedAdditionalRates.splice(index, 1);\n      updatedRates.additional_rates = updatedAdditionalRates;\n      \n      // Create occurrences array for API with all occurrences\n      const occurrencesForApi = bookingData.occurrences.map((occ, occIndex) => {\n        // For the first occurrence (the one being edited in this case), update its rates with the updated rates\n        if (occIndex === 0) {\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedRates.base_rate),\n              additional_animal_rate: parseFloat(updatedRates.additional_animal_rate || 0),\n              applies_after: parseInt(updatedRates.applies_after || 1),\n              holiday_rate: parseFloat(updatedRates.holiday_rate || 0),\n              additional_rates: updatedRates.additional_rates.map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || `Additional rate`\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA66777 Sending all occurrences with updated rates to API:', occurrencesForApi);\n      \n      // Call the API to update rates using the bookingId prop\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA66777 Rate deleted API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        // Set the edited rates from the response\n        if (response.draft_data.occurrences && response.draft_data.occurrences[0]) {\n          setEditedRates(response.draft_data.occurrences[0].rates);\n        }\n        \n        // Call onRatesUpdate with the updated data from the API\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n    } catch (err) {\n      debugLog('MBA66777 Error deleting rate:', err);\n      setError('Failed to delete rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleEditOccurrence = (occurrence) => {\n    debugLog('MBA66777 Editing occurrence:', occurrence);\n    \n    // Set the occurrence ID being edited\n    setEditingOccurrenceId(occurrence.occurrence_id);\n    \n    // For single occurrence bookings (typically overnight), also enter edit mode\n    if (bookingData.occurrences.length === 1) {\n      debugLog('MBA66777 Setting isEditMode for single occurrence booking');\n      setIsEditMode(true);\n      \n      // Make sure we have the correct rates in editedRates\n      setEditedRates({\n        base_rate: occurrence.rates.base_rate,\n        additional_animal_rate: occurrence.rates.additional_animal_rate || 0,\n        applies_after: occurrence.rates.applies_after || 1,\n        holiday_rate: occurrence.rates.holiday_rate || 0,\n        additional_rates: occurrence.rates.additional_rates?.map(r => ({\n          name: r.name || r.title,\n          amount: r.amount,\n          description: r.description || ''\n        })) || []\n      });\n    } else {\n      // For multiple occurrences, expand the rates panel\n      setExpandedRates(new Set([occurrence.occurrence_id]));\n    }\n    \n    // Set the occurrence edits for either case\n    setOccurrenceEdits({\n      base_rate: occurrence.rates.base_rate,\n      additional_animal_rate: occurrence.rates.additional_animal_rate || 0,\n      applies_after: occurrence.rates.applies_after || 1,\n      holiday_rate: occurrence.rates.holiday_rate || 0,\n      additional_rates: occurrence.rates.additional_rates?.map(r => ({\n        name: r.name || r.title,\n        amount: r.amount,\n        description: r.description || ''\n      })) || []\n    });\n  };\n\n  const handleCancelEdit = () => {\n    setEditingOccurrenceId(null);\n    setOccurrenceEdits({});\n    \n    // If we were editing a single occurrence booking, exit edit mode\n    if (bookingData.occurrences.length === 1) {\n      setIsEditMode(false);\n    }\n    \n    // Also cancel adding a rate if that was in progress\n    setIsAddingRate(false);\n    setIsAddingRateForOccurrence(null);\n  };\n\n  const handleOccurrenceInputChange = (field, value) => {\n    if (field === 'base_rate' || field === 'additional_animal_rate' || field === 'holiday_rate') {\n      // Apply consistent amount sanitization\n      const sanitizedValue = sanitizeAmountInput(value);\n      \n      setOccurrenceEdits(prev => ({\n        ...prev,\n        [field]: sanitizedValue\n      }));\n    } else {\n      setOccurrenceEdits(prev => ({\n        ...prev,\n        [field]: value\n      }));\n    }\n  };\n\n  const handleAdditionalRateChange = (index, field, value) => {\n    debugLog(`MBA66778 Changing additional rate at index ${index}, field ${field} to value: ${value}`, {\n      currentOccurrenceEdits: occurrenceEdits,\n      currentAdditionalRates: occurrenceEdits.additional_rates\n    });\n    \n    setOccurrenceEdits(prev => {\n      const updated = [...(prev.additional_rates || [])];\n      \n      if (field === 'amount') {\n        // Apply consistent amount sanitization\n        const sanitizedValue = sanitizeAmountInput(value);\n        \n        updated[index] = {\n          ...updated[index],\n          amount: sanitizedValue === '' ? '' : sanitizedValue\n        };\n      } else if (field === 'name') {\n        updated[index] = {\n          ...updated[index],\n          name: value\n        };\n      }\n      \n      debugLog(`MBA66778 Updated additional rate:`, {\n        updatedRate: updated[index],\n        allRates: updated\n      });\n      \n      return { ...prev, additional_rates: updated };\n    });\n  };\n\n  const handleSaveOccurrenceRates = async (occurrence) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Clean up any empty amount values in occurrenceEdits\n      const cleanOccurrenceEdits = {\n        ...occurrenceEdits,\n        additional_rates: (occurrenceEdits.additional_rates || []).map(rate => ({\n          title: rate.name || rate.title, // Always use 'title' for backend\n          // Convert empty or string amount values to number\n          amount: rate.amount === '' ? 0 : typeof rate.amount === 'string' ? parseFloat(rate.amount) : rate.amount,\n          description: rate.description || ''\n        }))\n      };\n      \n      // Create a list of occurrences to send to the API\n      const occurrencesForApi = bookingData.occurrences.map(occ => {\n        // For the occurrence being edited, update its rates\n        if (occ.occurrence_id === occurrence.occurrence_id) {\n          return {\n            occurrence_id: occurrence.occurrence_id,\n            rates: {\n              base_rate: occurrenceEdits.base_rate === '' ? 0 : typeof occurrenceEdits.base_rate === 'string' ? parseFloat(occurrenceEdits.base_rate) : occurrenceEdits.base_rate,\n              additional_animal_rate: occurrenceEdits.additional_animal_rate === '' ? 0 : typeof occurrenceEdits.additional_animal_rate === 'string' ? parseFloat(occurrenceEdits.additional_animal_rate) : occurrenceEdits.additional_animal_rate || 0,\n              applies_after: parseInt(occurrenceEdits.applies_after || 1),\n              holiday_rate: occurrenceEdits.holiday_rate === '' ? 0 : typeof occurrenceEdits.holiday_rate === 'string' ? parseFloat(occurrenceEdits.holiday_rate) : occurrenceEdits.holiday_rate || 0,\n              additional_rates: cleanOccurrenceEdits.additional_rates\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA54321 - Sending all occurrences to API:', occurrencesForApi);\n      \n      const response = await updateBookingDraftRates(\n        bookingId,\n        occurrencesForApi\n      );\n      \n      if (response.draft_data) {\n        if (onRatesUpdate) onRatesUpdate(response.draft_data);\n        \n        // Reset all edit state\n        setEditingOccurrenceId(null);\n        setOccurrenceEdits({});\n        \n        // If we're in edit mode for a single occurrence booking, exit that mode too\n        if (bookingData.occurrences.length === 1) {\n          setIsEditMode(false);\n        }\n        \n        // Also remove any expanded rates and cancel any rate addition in progress\n        setExpandedRates(new Set());\n        setIsAddingRate(false);\n        setIsAddingRateForOccurrence(null);\n      }\n    } catch (err) {\n      debugLog('MBA54321 - Error saving occurrence rates:', err);\n      setError('Failed to update rates. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleAddRateForOccurrence = (occurrenceId) => {\n    if (isAddingRateForOccurrence === occurrenceId) {\n      setIsAddingRateForOccurrence(null);\n    } else {\n      setIsAddingRateForOccurrence(occurrenceId);\n    }\n    setNewOccurrenceRate({ name: '', amount: '', description: '' });\n  };\n\n  const saveNewRateForOccurrence = async (occurrence) => {\n    if (!newOccurrenceRate.name || (!newOccurrenceRate.amount && newOccurrenceRate.amount !== '')) return;\n    \n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create updated occurrence edits with the new rate\n      const updatedOccurrenceEdits = { ...occurrenceEdits };\n      \n      if (!updatedOccurrenceEdits.additional_rates) {\n        updatedOccurrenceEdits.additional_rates = [];\n      }\n      \n      updatedOccurrenceEdits.additional_rates.push({\n        name: newOccurrenceRate.name,\n        title: newOccurrenceRate.name, // Add title for consistency\n        amount: newOccurrenceRate.amount === '' ? 0 : typeof newOccurrenceRate.amount === 'string' ? parseFloat(newOccurrenceRate.amount) : newOccurrenceRate.amount,\n        description: newOccurrenceRate.description || `Additional rate`\n      });\n      \n      // Update state\n      setOccurrenceEdits(updatedOccurrenceEdits);\n      \n      // Call API to save the new rate\n      const occurrencesForApi = bookingData.occurrences.map(occ => {\n        // For the occurrence being edited, update its rates with the new rate\n        if (occ.occurrence_id === occurrence.occurrence_id) {\n          return {\n            occurrence_id: occurrence.occurrence_id,\n            rates: {\n              base_rate: parseFloat(updatedOccurrenceEdits.base_rate),\n              additional_animal_rate: parseFloat(updatedOccurrenceEdits.additional_animal_rate || 0),\n              applies_after: parseInt(updatedOccurrenceEdits.applies_after || 1),\n              holiday_rate: parseFloat(updatedOccurrenceEdits.holiday_rate || 0),\n              additional_rates: updatedOccurrenceEdits.additional_rates.map(rate => ({\n                title: rate.name,\n                amount: parseFloat(rate.amount),\n                description: rate.description || ''\n              }))\n            }\n          };\n        }\n        // For other occurrences, keep them as they are\n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n              title: rate.name || rate.title,\n              amount: parseFloat(rate.amount),\n              description: rate.description || ''\n            }))\n          }\n        };\n      });\n      \n      debugLog('MBA54321 - Sending all occurrences with new rate to API:', occurrencesForApi);\n      \n      const response = await updateBookingDraftRates(\n        bookingId,\n        occurrencesForApi\n      );\n      \n      debugLog('MBA54321 - New rate added to occurrence API response:', response);\n      \n      if (response.draft_data) {\n        if (onRatesUpdate) onRatesUpdate(response.draft_data);\n      }\n      \n      // Close add rate form\n      setIsAddingRateForOccurrence(null);\n      setNewOccurrenceRate({ name: '', amount: '', description: '' });\n      \n    } catch (err) {\n      debugLog('MBA66777 Error adding new rate for occurrence:', err);\n      setError('Failed to add new rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const deleteRateForOccurrence = async (occurrence, rateIndex) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      // Create updated occurrence edits with the rate removed\n      const updatedOccurrenceEdits = { ...occurrenceEdits };\n      \n      if (updatedOccurrenceEdits.additional_rates && updatedOccurrenceEdits.additional_rates.length > rateIndex) {\n        // Remove the rate at the specified index\n        updatedOccurrenceEdits.additional_rates.splice(rateIndex, 1);\n        \n        // Update state\n        setOccurrenceEdits(updatedOccurrenceEdits);\n        \n        // Call API to save the updated rates\n        const occurrencesForApi = bookingData.occurrences.map(occ => {\n          // For the occurrence being edited, update its rates with the rate removed\n          if (occ.occurrence_id === occurrence.occurrence_id) {\n            return {\n              occurrence_id: occurrence.occurrence_id,\n              rates: {\n                base_rate: parseFloat(updatedOccurrenceEdits.base_rate),\n                additional_animal_rate: parseFloat(updatedOccurrenceEdits.additional_animal_rate || 0),\n                applies_after: parseInt(updatedOccurrenceEdits.applies_after || 1),\n                holiday_rate: parseFloat(updatedOccurrenceEdits.holiday_rate || 0),\n                additional_rates: updatedOccurrenceEdits.additional_rates.map(rate => ({\n                  title: rate.name,\n                  amount: parseFloat(rate.amount),\n                  description: rate.description || ''\n                }))\n              }\n            };\n          }\n          // For other occurrences, keep them as they are\n          return {\n            occurrence_id: occ.occurrence_id,\n            rates: {\n              base_rate: parseFloat(occ.rates.base_rate),\n              additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n              applies_after: parseInt(occ.rates.applies_after || 1),\n              holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n              additional_rates: (occ.rates.additional_rates || []).map(rate => ({\n                title: rate.name || rate.title,\n                amount: parseFloat(rate.amount),\n                description: rate.description || ''\n              }))\n            }\n          };\n        });\n        \n        debugLog('MBA54321 - Sending all occurrences with rate deleted to API:', occurrencesForApi);\n        \n        const response = await updateBookingDraftRates(\n          bookingId,\n          occurrencesForApi\n        );\n        \n        debugLog('MBA54321 - Rate deleted from occurrence API response:', response);\n        \n        if (response.draft_data) {\n          if (onRatesUpdate) onRatesUpdate(response.draft_data);\n        }\n      }\n    } catch (err) {\n      debugLog('MBA66777 Error deleting rate for occurrence:', err);\n      setError('Failed to delete rate. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const toggleServiceAdditionalRate = async (serviceRate, isEnabled) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      \n      debugLog('MBA77999 Toggling service additional rate:', { \n        title: serviceRate.title, \n        isEnabled, \n        occurrencesCount: bookingData.occurrences.length \n      });\n      \n      // Update the toggle state\n      setServiceAdditionalRatesEnabled(prev => ({\n        ...prev,\n        [serviceRate.title]: isEnabled\n      }));\n      \n      // Create occurrences array for API - apply the rate to all occurrences if enabled\n      const occurrencesForApi = bookingData.occurrences.map(occ => {\n        const currentAdditionalRates = [...(occ.rates.additional_rates || [])];\n        \n        if (isEnabled) {\n          // Add the rate if it's not already present\n          const rateExists = currentAdditionalRates.some(rate => \n            (rate.title || rate.name) === serviceRate.title\n          );\n          \n                     if (!rateExists) {\n             currentAdditionalRates.push({\n               title: serviceRate.title,\n               amount: parseFloat(serviceRate.amount || serviceRate.rate || 0),\n               description: serviceRate.description || 'Additional rate'\n             });\n           }\n        } else {\n          // Remove the rate if it exists\n          const filteredRates = currentAdditionalRates.filter(rate => \n            (rate.title || rate.name) !== serviceRate.title\n          );\n          currentAdditionalRates.length = 0;\n          currentAdditionalRates.push(...filteredRates);\n        }\n        \n        return {\n          occurrence_id: occ.occurrence_id,\n          rates: {\n            base_rate: parseFloat(occ.rates.base_rate),\n            additional_animal_rate: parseFloat(occ.rates.additional_animal_rate || 0),\n            applies_after: parseInt(occ.rates.applies_after || 1),\n            holiday_rate: parseFloat(occ.rates.holiday_rate || 0),\n            additional_rates: currentAdditionalRates\n          }\n        };\n      });\n      \n      debugLog('MBA77999 Sending updated occurrences to API:', occurrencesForApi);\n      \n      // Call the API to update rates for all occurrences\n      const response = await updateBookingDraftRates(\n        bookingId, \n        occurrencesForApi\n      );\n      \n      debugLog('MBA77999 Service rate toggle API response:', response);\n      \n      // Update the local state with the response\n      if (response.draft_data) {\n        if (onRatesUpdate) {\n          onRatesUpdate(response.draft_data);\n        }\n      }\n      \n    } catch (err) {\n      debugLog('MBA77999 Error toggling service additional rate:', err);\n      setError('Failed to update rates. Please try again.');\n      \n      // Revert the toggle state on error\n      setServiceAdditionalRatesEnabled(prev => ({\n        ...prev,\n        [serviceRate.title]: !isEnabled\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Helper function to get the correct value for an additional rate field based on edit state\n  const getAdditionalRateValue = (occurrence, index, field) => {\n    // If we're editing this occurrence, get value from occurrenceEdits\n    if (editingOccurrenceId === occurrence.occurrence_id && occurrenceEdits.additional_rates) {\n      const value = occurrenceEdits.additional_rates[index]?.[field];\n      // For numeric fields like 'amount', 0 is a valid value\n      if (field === 'amount' && value === 0) return '';\n      return value || '';\n    }\n    \n    // If we're in edit mode (for single occurrence bookings), get from editedRates\n    if (isEditMode && editedRates?.additional_rates) {\n      const value = editedRates.additional_rates[index]?.[field];\n      // For numeric fields like 'amount', 0 is a valid value\n      if (field === 'amount' && value === 0) return '';\n      return value || '';\n    }\n    \n    // Otherwise get from the rate directly\n    const rates = occurrence.rates?.additional_rates || [];\n    const rate = rates[index] || {};\n    const value = field === 'name' ? (rate.name || rate.title) : rate[field];\n    \n    // For numeric fields like 'amount', 0 is a valid value\n    if (field === 'amount' && value === 0) return '';\n    return value || '';\n  };\n\n  const renderServiceAdditionalRates = () => {\n    debugLog('MBA2394jv340 renderServiceAdditionalRates called');\n    debugLog('MBA2394jv340 bookingData:', bookingData);\n    debugLog('MBA2394jv340 bookingData.service:', bookingData?.service);\n    debugLog('MBA2394jv340 service.is_overnight:', bookingData?.service?.is_overnight);\n    debugLog('MBA2394jv340 occurrences length:', bookingData?.occurrences?.length);\n    \n    // Only show for non-overnight services with multiple dates\n    if (!bookingData?.service) {\n      debugLog('MBA2394jv340 No service found, returning null');\n      return null;\n    }\n    \n    if (bookingData.service.is_overnight === true) {\n      debugLog('MBA2394jv340 Service is overnight, returning null');\n      return null;\n    }\n    \n    if (!bookingData?.occurrences) {\n      debugLog('MBA2394jv340 No occurrences found, returning null');\n      return null;\n    }\n    \n    if (bookingData.occurrences.length <= 1) {\n      debugLog('MBA2394jv340 Only one or no occurrences, returning null');\n      return null;\n    }\n\n    // Use the stored available rates from state\n    const filteredRates = availableAdditionalRates;\n    debugLog('MBA2394jv340 Using stored available rates:', filteredRates);\n    \n    if (filteredRates.length === 0) {\n      debugLog('MBA2394jv340 No stored rates found, returning null');\n      return null;\n    }\n\n    debugLog('MBA2394jv340 Rendering service additional rates section with', filteredRates.length, 'rates');\n\n    return (\n      <View style={styles.section}>\n        <View style={styles.sectionHeaderContainer}>\n          <Text style={styles.sectionHeader}>Additional Rates</Text>\n        </View>\n        <View style={[styles.card, { paddingTop: 16 }]}>\n          <Text style={styles.additionalRatesDescription}>\n            Toggle additional rates to apply or remove them from all {bookingData.occurrences.length} dates in this booking:\n          </Text>\n          \n          {filteredRates.map((serviceRate, index) => {\n            const isEnabled = serviceAdditionalRatesEnabled[serviceRate.title] || false;\n            \n            return (\n              <View key={index} style={styles.serviceRateItem}>\n                <TouchableOpacity \n                  style={styles.serviceRateCheckbox}\n                  onPress={() => toggleServiceAdditionalRate(serviceRate, !isEnabled)}\n                  disabled={isLoading}\n                >\n                  <View style={[styles.checkbox, isEnabled && styles.checkboxChecked]}>\n                    {isEnabled && (\n                      <MaterialCommunityIcons name=\"check\" size={16} color=\"white\" />\n                    )}\n                  </View>\n                  \n                  <View style={styles.serviceRateInfo}>\n                    <Text style={styles.serviceRateTitle}>{serviceRate.title}</Text>\n                    <Text style={styles.serviceRateAmount}>\n                      {formatCurrency(serviceRate.amount || serviceRate.rate)}\n                    </Text>\n                    {serviceRate.description && (\n                      <Text style={styles.serviceRateDescription}>{serviceRate.description}</Text>\n                    )}\n                  </View>\n                </TouchableOpacity>\n              </View>\n            );\n          })}\n        </View>\n      </View>\n    );\n  };\n\n  const renderBookingBreakdown = () => {\n    debugLog('MBAio3htg5uohg: Rendering booking breakdown with data:', bookingData?.occurrences?.[0]);\n    const occurrences = bookingData?.occurrences;\n    if (!occurrences || occurrences.length === 0) return null;\n\n    // Get the user's timezone from context\n    const { timeSettings } = useContext(AuthContext);\n    const userTimezone = timeSettings?.timezone || 'US/Mountain';\n    debugLog('MBAio3htg5uohg: userTimezone: ', userTimezone);\n\n    // Check if we're dealing with multiple individual dates\n    // Updated logic to properly handle midnight end times\n    const isMultipleDates = occurrences.length > 1 || \n      // Consider a booking with 00:00 end time as a multiple date booking even if\n      // there's only one occurrence and end_date is different from start_date\n      (occurrences.length === 1 && \n       ((occurrences[0].end_date !== occurrences[0].start_date && occurrences[0].end_time === \"00:00\") ||\n        occurrences[0].start_date === occurrences[0].end_date));\n    \n    debugLog('MBAio3htg5uohg: isMultipleDates detection:', { \n      isMultipleDates, \n      count: occurrences.length,\n      firstOccurrence: occurrences[0] ? {\n        start_date: occurrences[0].start_date,\n        end_date: occurrences[0].end_date,\n        end_time: occurrences[0].end_time\n      } : null\n    });\n\n    if (isMultipleDates) {\n      return (\n        <View style={[styles.section, { marginTop: showEditControls ? 24 : 0 }]}>\n          <View style={styles.sectionHeaderContainer}>\n            <Text style={styles.sectionHeader}>Booking Breakdown</Text>\n          </View>\n          <View style={[styles.card, { paddingTop: 16 }]}>\n            {occurrences.map((occurrence, index) => {\n              // Ensure we have a valid unit_of_time - check in multiple places\n              const unitOfTime = \n                (occurrence.unit_of_time) || \n                (occurrence.rates && occurrence.rates.unit_of_time) || \n                'Per Visit';\n                \n              // Ensure multiple is properly formatted as a number\n              const multiple = parseFloat(occurrence.multiple) || 1;\n              \n              // Log each occurrence for debugging\n              debugLog('MBAio3htg5uohg: Processing occurrence in UI:', {\n                id: occurrence.occurrence_id,\n                unit_of_time: unitOfTime,\n                multiple: multiple,\n                calculated_cost: occurrence.calculated_cost\n              });\n              \n              return (\n                <View key={occurrence.occurrence_id} style={styles.multipleDatesContainer}>\n                  <View style={styles.dateHeader}>\n                    <View style={styles.dateTextContainer}>\n                      <Text style={styles.dateText}>\n                        {formatDateTimeRangeFromUTC({\n                          startDate: occurrence.start_date,\n                          startTime: occurrence.start_time,\n                          endDate: occurrence.end_date,\n                          endTime: occurrence.end_time,\n                          userTimezone: userTimezone,\n                          includeTimes: true,\n                          includeTimezone: true\n                        })}\n                      </Text>\n                    </View>\n                    <Text style={styles.occurrenceCost}>\n                      {formatCurrency(occurrence.calculated_cost)}\n                    </Text>\n                    {/* Edit/Cancel Button - moved here, only one icon */}\n                    {editingOccurrenceId === occurrence.occurrence_id ? (\n                      <TouchableOpacity onPress={handleCancelEdit}>\n                        <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                      </TouchableOpacity>\n                    ) : (\n                      showEditControls && (\n                        <TouchableOpacity onPress={() => handleEditOccurrence(occurrence)}>\n                          <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.mainColors.main} />\n                        </TouchableOpacity>\n                      )\n                    )}\n                  </View>\n\n                  {/* Collapsible Rates Section */}\n                  <TouchableOpacity \n                    style={styles.ratesToggleButton}\n                    onPress={() => {\n                      const newExpandedRates = new Set(expandedRates);\n                      if (newExpandedRates.has(occurrence.occurrence_id)) {\n                        newExpandedRates.delete(occurrence.occurrence_id);\n                      } else {\n                        newExpandedRates.add(occurrence.occurrence_id);\n                      }\n                      setExpandedRates(newExpandedRates);\n                    }}\n                  >\n                    <Text style={styles.ratesToggleText}>\n                      {expandedRates.has(occurrence.occurrence_id) ? 'Hide Rates' : 'Show Rates'}\n                    </Text>\n                    <MaterialCommunityIcons \n                      name={expandedRates.has(occurrence.occurrence_id) ? \"chevron-up\" : \"chevron-down\"} \n                      size={20} \n                      color={theme.colors.mainColors.main} \n                    />\n                  </TouchableOpacity>\n\n                  {expandedRates.has(occurrence.occurrence_id) && (\n                    <View style={styles.ratesBreakdown}>\n                      {/* Base Rate */}\n                      <View style={styles.rateItem}>\n                        {editingOccurrenceId === occurrence.occurrence_id ? (\n                          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                            <Text style={styles.rateLabel}>Base Rate ({unitOfTime})</Text>\n                            <TextInput\n                              style={{ \n                                width: 80, \n                                borderWidth: 1,\n                                borderColor: theme.colors.border,\n                                borderRadius: 4,\n                                padding: 8\n                              }}\n                              keyboardType=\"decimal-pad\"\n                              value={occurrenceEdits.base_rate?.toString() || ''}\n                              onChangeText={v => handleOccurrenceInputChange('base_rate', v)}\n                            />\n                          </View>\n                        ) : (\n                          <View>\n                            <Text style={styles.rateLabel}>Base Rate</Text>\n                            <Text style={styles.breakdownCalculation}>\n                              {formatCurrency(occurrence.rates.base_rate)} ({unitOfTime}) × {multiple} = {formatCurrency(occurrence.base_total)}\n                            </Text>\n                          </View>\n                        )}\n                        {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                          <Text style={styles.rateAmount}>{formatCurrency(occurrence.base_total)}</Text>\n                        )}\n                      </View>\n\n                      {/* Additional Animal Rate */}\n                      {occurrence.rates?.additional_animal_rate && parseFloat(occurrence.rates.additional_animal_rate) > 0 && occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0) && (\n                        <View style={styles.rateItem}>\n                          {editingOccurrenceId === occurrence.occurrence_id ? (\n                            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                              <Text style={styles.rateLabel}>\n                                Additional Pet Rate (after {occurrence.rates.applies_after} {occurrence.rates.applies_after !== 1 ? 'pets' : 'pet'})\n                              </Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={occurrenceEdits.additional_animal_rate?.toString() || ''}\n                                onChangeText={v => handleOccurrenceInputChange('additional_animal_rate', v)}\n                              />\n                            </View>\n                          ) : (\n                            <Text style={styles.rateLabel}>\n                              Additional Pet Rate (after {occurrence.rates.applies_after} {occurrence.rates.applies_after !== 1 ? 'pets' : 'pet'})\n                            </Text>\n                          )}\n                          {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                            <Text style={styles.rateAmount}>{formatCurrency(occurrence.rates.additional_animal_rate)}</Text>\n                          )}\n                        </View>\n                      )}\n\n                      {/* Holiday Rate - only show if there are actually holiday days */}\n                      {occurrence.rates?.holiday_rate && parseFloat(occurrence.rates.holiday_rate) > 0 && \n                       (occurrence.rates?.holiday_days > 0 || !('holiday_days' in occurrence.rates)) && (\n                        <View style={styles.rateItem}>\n                          {editingOccurrenceId === occurrence.occurrence_id ? (\n                            <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between', width: '100%' }}>\n                              <Text style={styles.rateLabel}>Holiday Rate</Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={occurrenceEdits.holiday_rate?.toString() || ''}\n                                onChangeText={v => handleOccurrenceInputChange('holiday_rate', v)}\n                              />\n                            </View>\n                          ) : (\n                            <Text style={styles.rateLabel}>Holiday Rate</Text>\n                          )}\n                          {editingOccurrenceId === occurrence.occurrence_id ? null : (\n                            <Text style={styles.rateAmount}>{formatCurrency(occurrence.rates.holiday_rate)}</Text>\n                          )}\n                        </View>\n                      )}\n\n                      {/* Additional Rates */}\n                      {((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).length > 0 ? \n                        ((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).map((rate, index) => (\n                          <View key={index} style={styles.breakdownItem}>\n                            <View style={styles.breakdownLabelContainer}>\n                              {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                                width < 600 ? (\n                                  // Mobile layout - stacked with trash icon on the right\n                                  <View style={{ width: '100%' }}>\n                                    <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                                      {/* Debug log for rate name */}\n                                      {debugLog(`MBA66778 Rendering rate at index ${index}:`, {\n                                        isEditMode,\n                                        editingOccurrenceId: editingOccurrenceId,\n                                        occurrenceId: occurrence.occurrence_id,\n                                        rateName: rate.name || rate.title,\n                                        rateAmount: rate.amount,\n                                        occurrenceEditsRate: occurrenceEdits.additional_rates?.[index],\n                                        valueToShow: editingOccurrenceId === occurrence.occurrence_id ? \n                                          (occurrenceEdits.additional_rates && occurrenceEdits.additional_rates[index]?.amount?.toString()) || '0' : \n                                          rate.amount?.toString() || '0'\n                                      })}\n                                      <TextInput\n                                        style={[styles.nameInput, { flex: 1, marginRight: 8 }]}\n                                        value={getAdditionalRateValue(occurrence, index, 'name')}\n                                        onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                          handleAdditionalRateChange(index, 'name', value) : \n                                          updateAdditionalRate(index, 'name', value)}\n                                        placeholder=\"Rate Name\"\n                                      />\n                                      <TouchableOpacity \n                                        style={styles.deleteButton} \n                                        onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                          deleteRateForOccurrence(occurrence, index) : \n                                          deleteAdditionalRate(index)}\n                                      >\n                                        <MaterialCommunityIcons \n                                          name=\"trash-can-outline\" \n                                          size={22} \n                                          color={theme.colors.error} \n                                        />\n                                      </TouchableOpacity>\n                                    </View>\n                                    <View style={{ marginTop: 8 }}>\n                                      <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                                        <Text style={{ marginRight: 8 }}>Amount: $</Text>\n                                        <TextInput\n                                          style={{ \n                                            width: 80, \n                                            borderWidth: 1,\n                                            borderColor: theme.colors.border,\n                                            borderRadius: 4,\n                                            padding: 8\n                                          }}\n                                          keyboardType=\"decimal-pad\"\n                                          value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                                getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                          onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                            handleAdditionalRateChange(index, 'amount', value) : \n                                            updateAdditionalRate(index, 'amount', value)}\n                                        />\n                                      </View>\n                                    </View>\n                                  </View>\n                                ) : (\n                                  // Desktop layout - side by side\n                                  <View style={styles.editableAdditionalRateRow}>\n                                    <View style={styles.rateNameAmountRowWithDelete}>\n                                      <TextInput\n                                        style={styles.nameInput}\n                                        value={getAdditionalRateValue(occurrence, index, 'name')}\n                                        onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                          handleAdditionalRateChange(index, 'name', value) : \n                                          updateAdditionalRate(index, 'name', value)}\n                                        placeholder=\"Rate Name\"\n                                      />\n                                      <View style={styles.amountInputContainer}>\n                                        <Text style={styles.currencySymbol}>$</Text>\n                                        <TextInput\n                                          style={styles.rateInput}\n                                          keyboardType=\"decimal-pad\"\n                                          value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                                getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                          onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                            handleAdditionalRateChange(index, 'amount', value) : \n                                            updateAdditionalRate(index, 'amount', value)}\n                                        />\n                                      </View>\n                                    </View>\n                                    <TouchableOpacity \n                                      style={styles.deleteButton} \n                                      onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                        deleteRateForOccurrence(occurrence, index) : \n                                        deleteAdditionalRate(index)}\n                                    >\n                                      <MaterialCommunityIcons \n                                        name=\"trash-can-outline\" \n                                        size={22} \n                                        color={theme.colors.error} \n                                      />\n                                    </TouchableOpacity>\n                                  </View>\n                                )\n                              ) : (\n                                <>\n                                  <Text style={styles.breakdownLabel}>{rate.name || rate.title}</Text>\n                                  <Text style={styles.breakdownCalculation}>{rate.description || \"Additional Rate\"}</Text>\n                                </>\n                              )}\n                            </View>\n                            {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                              <Text style={styles.breakdownAmount}>+{formatCurrency(rate.amount)}</Text>\n                            )}\n                          </View>\n                        ))\n                      : null}\n                    </View>\n                  )}\n\n                  {/* Add New Rate Form for individual occurrence */}\n                  {isAddingRateForOccurrence === occurrence.occurrence_id && (\n                    <View>\n                      <View style={styles.addRateContainer}>\n                        <View style={styles.formDivider} />\n                        \n                        {width < 600 ? (\n                          // Mobile layout - stacked\n                          <View>\n                            <TextInput\n                              style={[styles.nameInput, { marginRight: 0, marginBottom: 12 }]}\n                              value={newOccurrenceRate.name}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, name: text }))}\n                              placeholder=\"Rate Name\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                            <View style={[styles.amountInputContainer, { marginBottom: 12 }]}>\n                              <Text style={styles.currencySymbol}>$</Text>\n                              <TextInput\n                                style={styles.rateInput}\n                                keyboardType=\"decimal-pad\"\n                                value={newOccurrenceRate.amount}\n                                onChangeText={handleNewOccurrenceRateAmountChange}\n                                placeholder=\"0.00\"\n                                placeholderTextColor={theme.colors.placeHolderText}\n                              />\n                            </View>\n                            <TextInput\n                              style={styles.descriptionInput}\n                              value={newOccurrenceRate.description}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, description: text }))}\n                              placeholder=\"Description (optional)\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                          </View>\n                        ) : (\n                          // Desktop layout - side by side\n                          <>\n                            <View style={styles.rateNameAmountRow}>\n                              <TextInput\n                                style={styles.nameInput}\n                                value={newOccurrenceRate.name}\n                                onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, name: text }))}\n                                placeholder=\"Rate Name\"\n                                placeholderTextColor={theme.colors.placeHolderText}\n                              />\n                              <View style={styles.amountInputContainer}>\n                                <Text style={styles.currencySymbol}>$</Text>\n                                <TextInput\n                                  style={styles.rateInput}\n                                  keyboardType=\"decimal-pad\"\n                                  value={newOccurrenceRate.amount}\n                                  onChangeText={handleNewOccurrenceRateAmountChange}\n                                  placeholder=\"0.00\"\n                                  placeholderTextColor={theme.colors.placeHolderText}\n                                />\n                              </View>\n                            </View>\n                            \n                            <TextInput\n                              style={styles.descriptionInput}\n                              value={newOccurrenceRate.description}\n                              onChangeText={(text) => setNewOccurrenceRate(prev => ({ ...prev, description: text }))}\n                              placeholder=\"Description (optional)\"\n                              placeholderTextColor={theme.colors.placeHolderText}\n                            />\n                          </>\n                        )}\n                        \n                        <View style={styles.formDivider} />\n                      </View>\n                      <View style={styles.buttonsContainer}>\n                        <TouchableOpacity style={styles.cancelButton} onPress={() => setIsAddingRateForOccurrence(null)}>\n                          <Text style={styles.cancelButtonText}>Cancel</Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity style={styles.saveButton} onPress={() => saveNewRateForOccurrence(occurrence)}>\n                          <Text style={styles.saveButtonText}>Save New Rate</Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  )}\n\n                  {/* Add Rate and Save buttons for edit mode for this occurrence */}\n                  {editingOccurrenceId === occurrence.occurrence_id && !isAddingRateForOccurrence && (\n                    <View style={styles.buttonsContainer}>\n                      <TouchableOpacity \n                        style={styles.cancelButton} \n                        onPress={() => toggleAddRateForOccurrence(occurrence.occurrence_id)}\n                      >\n                        <Text style={styles.cancelButtonText}>+ Add Rate</Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity \n                        style={styles.saveButton} \n                        onPress={() => handleSaveOccurrenceRates(occurrence)}\n                      >\n                        <Text style={styles.saveButtonText}>Save Changes</Text>\n                      </TouchableOpacity>\n                    </View>\n                  )}\n                </View>\n              );\n            })}\n          </View>\n        </View>\n      );\n    }\n   \n    // Rest of the function for non-multiple dates case\n    const occurrence = occurrences[0];\n    if (!occurrence) return null;\n\n    const formattedDateRange = formatDateTimeRangeFromUTC({\n      startDate: occurrence.start_date,\n      startTime: occurrence.start_time,\n      endDate: occurrence.end_date,\n      endTime: occurrence.end_time,\n      userTimezone: userTimezone,\n      includeTimes: true,\n      includeTimezone: true\n    });\n\n    debugLog('MBA54321 Formatted date range:', formattedDateRange);\n\n    // Initialize rates object if it doesn't exist\n    if (!occurrence.rates) {\n      debugLog('MBA54321 occurrence.rates is undefined, initializing with defaults');\n      occurrence.rates = {\n        base_rate: 0,\n        additional_animal_rate: 0,\n        applies_after: 1,\n        holiday_rate: 0,\n        holiday_days: 0,\n        additional_rates: []\n      };\n    }\n\n    return (\n      <View style={[styles.section, { marginTop: showEditControls ? 24 : 0 }]}>\n        <View style={styles.sectionHeaderContainer}>\n          <Text style={styles.sectionHeader}>Booking Breakdown</Text>\n        </View>\n        <View style={[styles.card, { paddingTop: 16 }]}>\n          <View style={styles.breakdownSection}>\n            <View style={styles.dateHeader}>\n              <View style={styles.dateTextContainer}>\n                <Text style={styles.dateText}>\n                  {formatDateTimeRangeFromUTC({\n                    startDate: occurrence.start_date,\n                    startTime: occurrence.start_time,\n                    endDate: occurrence.end_date,\n                    endTime: occurrence.end_time,\n                    userTimezone: userTimezone,\n                    includeTimes: true,\n                    includeTimezone: true\n                  })}\n                </Text>\n              </View>\n              <Text style={styles.occurrenceCost}>\n                {formatCurrency(occurrence.calculated_cost)}\n              </Text>\n              {/* Edit/Cancel Button - moved here, only one icon */}\n              {editingOccurrenceId === occurrence.occurrence_id ? (\n                <TouchableOpacity onPress={handleCancelEdit}>\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              ) : (\n                showEditControls && (\n                  <TouchableOpacity onPress={() => handleEditOccurrence(occurrence)}>\n                    <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.mainColors.main} />\n                  </TouchableOpacity>\n                )\n              )}\n            </View>\n            \n            {/* Base Rate */}\n            <View style={styles.breakdownItem}>\n              <View style={styles.breakdownLabelContainer}>\n                <View style={styles.rateNameAmountRow}>\n                  <Text style={styles.breakdownLabel}>\n                    Base Rate ({(occurrence.unit_of_time) || \n                              (occurrence.rates && occurrence.rates.unit_of_time) || \n                              'Per Visit'})\n                  </Text>\n                  {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                    <View style={styles.amountInputContainer}>\n                      <Text style={styles.currencySymbol}>$</Text>\n                      <TextInput\n                        style={styles.rateInput}\n                        keyboardType=\"decimal-pad\"\n                        value={editingOccurrenceId === occurrence.occurrence_id ? \n                          occurrenceEdits.base_rate?.toString() || '0' : \n                          editedRates?.base_rate?.toString() || '0'}\n                        onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                          v => handleOccurrenceInputChange('base_rate', v) : \n                          updateBaseRate}\n                      />\n                    </View>\n                  ) : null}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownCalculation}>\n                    {occurrence.multiple || 1} × {formatCurrency(occurrence.rates?.base_rate || 0)} = {formatCurrency(occurrence.base_total || occurrence.rates?.base_rate || 0)}\n                  </Text>\n                )}\n              </View>\n              {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                <Text style={styles.breakdownAmount}>{formatCurrency(occurrence.base_total || occurrence.rates?.base_rate || 0)}</Text>\n              )}\n            </View>\n            \n            {/* Additional Animal Rate */}\n            {occurrence.rates?.additional_animal_rate && occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0) ? (\n              <View style={styles.breakdownItem}>\n                <View style={styles.breakdownLabelContainer}>\n                  <View style={styles.rateNameAmountRow}>\n                    <Text style={styles.breakdownLabel}>\n                      Additional Pet Rate (after {occurrence.rates?.applies_after || 1} {occurrence.rates?.applies_after !== 1 ? 'pets' : 'pet'})\n                    </Text>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      <View style={styles.amountInputContainer}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={editingOccurrenceId === occurrence.occurrence_id ? \n                            occurrenceEdits.additional_animal_rate?.toString() || '0' : \n                            editedRates?.additional_animal_rate?.toString() || '0'}\n                          onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                            v => handleOccurrenceInputChange('additional_animal_rate', v) : \n                            updateAdditionalAnimalRate}\n                        />\n                        <Text style={styles.inputLabel}> / pet / {(occurrence.unit_of_time) || \n                                                                (occurrence.rates && occurrence.rates.unit_of_time) || \n                                                                'Per Visit'}</Text>\n                      </View>\n                    ) : null}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownCalculation}>\n                      ${occurrence.rates?.additional_animal_rate || 0} / pet / {(occurrence.unit_of_time) || \n                                                                              (occurrence.rates && occurrence.rates.unit_of_time) || \n                                                                              'Per Visit'}\n                    </Text>\n                  )}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownAmount}>\n                    {(occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0)) ? '+' : ''}\n                    {(occurrence.rates?.applies_after && occurrence.rates.applies_after < (bookingData.pets?.length || 0)) \n                      ? formatCurrency(occurrence.rates?.additional_animal_rate_total || occurrence.rates?.additional_animal_rate || 0) \n                      : 'NA'}\n                  </Text>\n                )}\n              </View>\n            ) : null}\n            \n            {/* Holiday Rate */}\n            {occurrence.rates?.holiday_rate && occurrence.rates?.holiday_days && occurrence.rates.holiday_days > 0 ? (\n              <View style={[styles.breakdownItem, { borderBottomWidth: (occurrence.rates?.additional_rates?.length > 0 || isAddingRate) ? 1 : 0 }]}>\n                <View style={styles.breakdownLabelContainer}>\n                  <View style={styles.rateNameAmountRow}>\n                    <Text style={styles.breakdownLabel}>\n                      Holiday Rate\n                    </Text>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      <View style={styles.amountInputContainer}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={editingOccurrenceId === occurrence.occurrence_id ? \n                            occurrenceEdits.holiday_rate?.toString() || '0' : \n                            editedRates?.holiday_rate?.toString() || '0'}\n                          onChangeText={editingOccurrenceId === occurrence.occurrence_id ? \n                            v => handleOccurrenceInputChange('holiday_rate', v) : \n                            updateHolidayRate}\n                        />\n                        <Text style={styles.inputLabel}> × {occurrence.rates?.holiday_days || 0} {occurrence.rates?.holiday_days !== 1 ? 'holidays' : 'holiday'}</Text>\n                      </View>\n                    ) : null}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownCalculation}>\n                      {formatCurrency(occurrence.rates?.holiday_rate || 0)} × {occurrence.rates?.holiday_days || 0} {occurrence.rates?.holiday_days !== 1 ? 'holidays' : 'holiday'}\n                    </Text>\n                  )}\n                </View>\n                {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                  <Text style={styles.breakdownAmount}>\n                    {occurrence.rates?.holiday_days ? '+' : ''}\n                    {occurrence.rates?.holiday_days ? formatCurrency(occurrence.rates?.holiday_rate_total || occurrence.rates?.holiday_rate || 0) : 'NA'}\n                  </Text>\n                )}\n              </View>\n            ) : null}\n            \n            {/* Additional Rates */}\n            {((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).length > 0 ? \n              ((isEditMode ? editedRates?.additional_rates : occurrence.rates?.additional_rates) || []).map((rate, index) => (\n                <View key={index} style={styles.breakdownItem}>\n                  <View style={styles.breakdownLabelContainer}>\n                    {isEditMode || editingOccurrenceId === occurrence.occurrence_id ? (\n                      width < 600 ? (\n                        // Mobile layout - stacked with trash icon on the right\n                        <View style={{ width: '100%' }}>\n                          <View style={{ flexDirection: 'row', alignItems: 'center', justifyContent: 'space-between' }}>\n                            {/* Debug log for rate name */}\n                            {debugLog(`MBA66778 Rendering rate at index ${index}:`, {\n                              isEditMode,\n                              editingOccurrenceId: editingOccurrenceId,\n                              occurrenceId: occurrence.occurrence_id,\n                              rateName: rate.name || rate.title,\n                              rateAmount: rate.amount,\n                              occurrenceEditsRate: occurrenceEdits.additional_rates?.[index],\n                              valueToShow: editingOccurrenceId === occurrence.occurrence_id ? \n                                (occurrenceEdits.additional_rates && occurrenceEdits.additional_rates[index]?.amount?.toString()) || '0' : \n                                rate.amount?.toString() || '0'\n                            })}\n                            <TextInput\n                              style={[styles.nameInput, { flex: 1, marginRight: 8 }]}\n                              value={getAdditionalRateValue(occurrence, index, 'name')}\n                              onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                handleAdditionalRateChange(index, 'name', value) : \n                                updateAdditionalRate(index, 'name', value)}\n                              placeholder=\"Rate Name\"\n                            />\n                            <TouchableOpacity \n                              style={styles.deleteButton} \n                              onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                                deleteRateForOccurrence(occurrence, index) : \n                                deleteAdditionalRate(index)}\n                            >\n                              <MaterialCommunityIcons \n                                name=\"trash-can-outline\" \n                                size={22} \n                                color={theme.colors.error} \n                              />\n                            </TouchableOpacity>\n                          </View>\n                          <View style={{ marginTop: 8 }}>\n                            <View style={{ flexDirection: 'row', alignItems: 'center' }}>\n                              <Text style={{ marginRight: 8 }}>Amount: $</Text>\n                              <TextInput\n                                style={{ \n                                  width: 80, \n                                  borderWidth: 1,\n                                  borderColor: theme.colors.border,\n                                  borderRadius: 4,\n                                  padding: 8\n                                }}\n                                keyboardType=\"decimal-pad\"\n                                value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                      getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                  handleAdditionalRateChange(index, 'amount', value) : \n                                  updateAdditionalRate(index, 'amount', value)}\n                              />\n                            </View>\n                          </View>\n                        </View>\n                      ) : (\n                        // Desktop layout - side by side\n                        <View style={styles.editableAdditionalRateRow}>\n                          <View style={styles.rateNameAmountRowWithDelete}>\n                            <TextInput\n                              style={styles.nameInput}\n                              value={getAdditionalRateValue(occurrence, index, 'name')}\n                              onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                handleAdditionalRateChange(index, 'name', value) : \n                                updateAdditionalRate(index, 'name', value)}\n                              placeholder=\"Rate Name\"\n                            />\n                            <View style={styles.amountInputContainer}>\n                              <Text style={styles.currencySymbol}>$</Text>\n                              <TextInput\n                                style={styles.rateInput}\n                                keyboardType=\"decimal-pad\"\n                                value={getAdditionalRateValue(occurrence, index, 'amount') === '' ? '' : \n                                      getAdditionalRateValue(occurrence, index, 'amount').toString()}\n                                onChangeText={(value) => editingOccurrenceId === occurrence.occurrence_id ? \n                                  handleAdditionalRateChange(index, 'amount', value) : \n                                  updateAdditionalRate(index, 'amount', value)}\n                              />\n                            </View>\n                          </View>\n                          <TouchableOpacity \n                            style={styles.deleteButton} \n                            onPress={() => editingOccurrenceId === occurrence.occurrence_id ? \n                              deleteRateForOccurrence(occurrence, index) : \n                              deleteAdditionalRate(index)}\n                          >\n                            <MaterialCommunityIcons \n                              name=\"trash-can-outline\" \n                              size={22} \n                              color={theme.colors.error} \n                            />\n                          </TouchableOpacity>\n                        </View>\n                      )\n                    ) : (\n                      <>\n                        <Text style={styles.breakdownLabel}>{rate.name || rate.title}</Text>\n                        <Text style={styles.breakdownCalculation}>{rate.description || \"Additional Rate\"}</Text>\n                      </>\n                    )}\n                  </View>\n                  {!isEditMode && editingOccurrenceId !== occurrence.occurrence_id && (\n                    <Text style={styles.breakdownAmount}>+{formatCurrency(rate.amount)}</Text>\n                  )}\n                </View>\n              ))\n            : null}\n            \n            {/* Add New Rate Form */}\n            {isAddingRate ? (\n              <View>\n                <View style={styles.addRateContainer}>\n                  <View style={styles.formDivider} />\n                  \n                  {width < 600 ? (\n                    // Mobile layout - stacked\n                    <View>\n                      <TextInput\n                        style={[styles.nameInput, { marginRight: 0, marginBottom: 12 }]}\n                        value={newRate.name}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                        placeholder=\"Rate Name\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                      <View style={[styles.amountInputContainer, { marginBottom: 12 }]}>\n                        <Text style={styles.currencySymbol}>$</Text>\n                        <TextInput\n                          style={styles.rateInput}\n                          keyboardType=\"decimal-pad\"\n                          value={newRate.amount}\n                          onChangeText={handleNewRateAmountChange}\n                          placeholder=\"0.00\"\n                          placeholderTextColor={theme.colors.placeHolderText}\n                        />\n                      </View>\n                      <TextInput\n                        style={styles.descriptionInput}\n                        value={newRate.description}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, description: text }))}\n                        placeholder=\"Description (optional)\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                    </View>\n                  ) : (\n                    // Desktop layout - side by side\n                    <>\n                      <View style={styles.rateNameAmountRow}>\n                        <TextInput\n                          style={styles.nameInput}\n                          value={newRate.name}\n                          onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                          placeholder=\"Rate Name\"\n                          placeholderTextColor={theme.colors.placeHolderText}\n                        />\n                        <View style={styles.amountInputContainer}>\n                          <Text style={styles.currencySymbol}>$</Text>\n                          <TextInput\n                            style={styles.rateInput}\n                            keyboardType=\"decimal-pad\"\n                            value={newRate.amount}\n                            onChangeText={handleNewRateAmountChange}\n                            placeholder=\"0.00\"\n                            placeholderTextColor={theme.colors.placeHolderText}\n                          />\n                        </View>\n                      </View>\n                      \n                      <TextInput\n                        style={styles.descriptionInput}\n                        value={newRate.description}\n                        onChangeText={(text) => setNewRate(prev => ({ ...prev, description: text }))}\n                        placeholder=\"Description (optional)\"\n                        placeholderTextColor={theme.colors.placeHolderText}\n                      />\n                    </>\n                  )}\n                  \n                  <View style={styles.formDivider} />\n                </View>\n                <View style={styles.buttonsContainer}>\n                  <TouchableOpacity style={styles.cancelButton} onPress={toggleAddRate}>\n                    <Text style={styles.cancelButtonText}>Cancel</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity style={styles.saveButton} onPress={saveNewRate}>\n                    <Text style={styles.saveButtonText}>Save New Rate</Text>\n                  </TouchableOpacity>\n                </View>\n              </View>\n            ) : null}\n            \n            {/* Add buttons for edit mode on single occurrence bookings */}\n            {isEditMode && !isAddingRate && (\n              <View style={styles.buttonsContainer}>\n                <TouchableOpacity style={styles.cancelButton} onPress={toggleAddRate}>\n                  <Text style={styles.cancelButtonText}>+ Add Rate</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.saveButton} onPress={saveRateChanges}>\n                  <Text style={styles.saveButtonText}>Save Changes</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const renderTotalAmount = () => {\n    debugLog('MBA54321 Rendering total amount with data:', bookingData?.cost_summary);\n    \n    // Create default cost summary in case it's missing\n    const defaultCostSummary = {\n      subtotal: 0,\n      client_platform_fee: 0,\n      pro_platform_fee: 0,\n      taxes: 0,\n      tax_state: '',\n      total_client_cost: 0,\n      total_sitter_payout: 0,\n      pro_subscription_plan: 0\n    };\n    \n    // Use the actual cost summary or our default\n    const costSummary = bookingData?.cost_summary || defaultCostSummary;\n\n    return (\n      <View style={styles.section}>\n        <Text style={styles.sectionHeader}>Cost Summary</Text>\n        <View style={[styles.card, { paddingTop: 16 }]}>\n          <View style={styles.subtotalRow}>\n            <Text style={styles.subtotalLabel}>Subtotal</Text>\n            <Text style={styles.subtotalAmount}>{formatCurrency(costSummary.subtotal)}</Text>\n          </View>\n          \n          {/* Platform Fee */}\n          <View style={styles.feeRow}>\n            <Text style={styles.feeLabel}>Service Fee</Text>\n            <Text style={styles.feeAmount}>{formatCurrency(costSummary.client_platform_fee)}</Text>\n          </View>\n          \n          {/* Taxes */}\n          <View style={styles.feeRow}>\n            <Text style={styles.feeLabel}>{costSummary.tax_state}{costSummary.tax_state ? ' - ' : ''}Taxes</Text>\n            <Text style={styles.feeAmount}>{formatCurrency(costSummary.taxes)}</Text>\n          </View>\n\n          {/* Total Owner Cost */}\n          <View style={[styles.totalAmountContainer, { paddingBottom: isProfessional ? 16 : 0, marginBottom: isProfessional ? 16 : 0 }]}>\n            <Text style={styles.totalLabel}>Total Owner Cost</Text>\n            <Text style={styles.totalAmount}>{formatCurrency(costSummary.total_client_cost)}</Text>\n          </View>\n\n          {/* Divider */}\n          {isProfessional ? <View style={styles.divider} /> : null}\n\n          {/* Professional Payout - Only show when isProfessional is true */}\n          {isProfessional ? (\n            <View style={styles.payoutContainer}>\n              <Text style={styles.payoutLabel}>Professional Payout</Text>\n              <Text style={styles.payoutAmount}>{formatCurrency(costSummary.total_sitter_payout)}</Text>\n              <Text style={styles.payoutBreakdown}>\n                (Subtotal {formatCurrency(costSummary.subtotal)} - Service Fee {formatCurrency(costSummary.pro_platform_fee)})\n              </Text>\n              {costSummary.pro_platform_fee === 0 ? (\n                <Text style={styles.badge}>{costSummary.pro_subscription_plan === 0 ? 'Free Tier - ' \n                  : costSummary.pro_subscription_plan === 1 ? 'Waitlist Tier - ' \n                  : costSummary.pro_subscription_plan === 2 ? 'Commission Tier - ' \n                  : costSummary.pro_subscription_plan === 3 ? 'Pro Subscription - ' \n                  : costSummary.pro_subscription_plan === 4 ? 'Pro Subscription - ' \n                  :  costSummary.pro_subscription_plan === 5 ? 'Client Subscription - ' \n                  : ''} Saved {formatCurrency(costSummary.subtotal * 0.15)}</Text>\n              ) : null}\n            </View>\n          ) : null}\n        </View>\n      </View>\n    );\n  };\n\n\n\n  const renderTermsCheckbox = () => {\n    // Determine if checkbox should be checked:\n    // - If client has previously agreed (currentTosStatus === true), show as checked\n    // - If client hasn't agreed yet (currentTosStatus === false), use local termsAgreed state  \n    // - If this is a new booking (currentTosStatus === undefined), use local termsAgreed state\n    const isChecked = currentTosStatus === true || (currentTosStatus !== true && termsAgreed);\n    const hasAgreedTos = currentTosStatus === true;\n    \n    // Debug checkbox state\n    debugLog('MBA54321: Checkbox state calculation:', {\n      currentTosStatus,\n      termsAgreed,\n      isChecked,\n      hasAgreedTos,\n      fromApprovalModal\n    });\n    \n    // If already agreed, show different text\n    if (hasAgreedTos) {\n      return (\n        <View style={styles.termsContainer}>\n          <View style={styles.checkboxContainer}>\n            <View style={[styles.checkbox, styles.checkboxChecked]}>\n              <MaterialCommunityIcons name=\"check\" size={16} color=\"white\" />\n            </View>\n            <Text style={styles.termsText}>\n              <Text style={styles.termsAgreedText}>TERMS AGREED</Text> -{' '}\n              <Text \n                style={styles.termsLink}\n                onPress={() => setShowTermsModal(true)}\n              >\n                view terms of service\n              </Text>\n            </Text>\n          </View>\n        </View>\n      );\n    }\n    \n    return (\n      <View style={styles.termsContainer}>\n        <TouchableOpacity \n          style={styles.checkboxContainer}\n          onPress={() => {\n            // Allow toggling if this is a new booking (undefined) or if client hasn't agreed yet (false)\n            if (currentTosStatus !== true) {\n              const newValue = !termsAgreed;\n              setTermsAgreed(newValue);\n              if (onTermsAgreed) {\n                onTermsAgreed(newValue);\n              }\n              // Notify parent of TOS agreement change\n              if (onTosAgreementChange) {\n                debugLog('MBA54321: Notifying parent of TOS agreement change:', {\n                  newValue,\n                  isProfessional,\n                  fromApprovalModal,\n                  currentTosStatus\n                });\n                onTosAgreementChange(newValue);\n              }\n            }\n          }}\n        >\n          <View style={[styles.checkbox, isChecked && styles.checkboxChecked]}>\n            {isChecked && (\n              <MaterialCommunityIcons name=\"check\" size={16} color=\"white\" />\n            )}\n          </View>\n          <Text style={styles.termsText}>\n            I agree to the{' '}\n            <Text \n              style={styles.termsLink}\n              onPress={() => setShowTermsModal(true)}\n            >\n              terms of service\n            </Text>\n            {' '}for this booking\n          </Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  debugLog('MBA2394jv340 ReviewAndRatesCard main render called');\n  \n  return (\n    <>\n      <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n        <ProfessionalAlert isProfessional={isProfessional} fromApprovalModal={fromApprovalModal} />\n        {renderServiceAdditionalRates()}\n        {renderBookingBreakdown()}\n        {renderTotalAmount()}\n        {renderTermsCheckbox()}\n        \n        {/* Support CrittrCove Button */}\n        <SupportButton \n          size=\"compact\"\n          showTitle={false}\n          style={{ marginTop: 16 }}\n        />\n      </ScrollView>\n      \n      <TermsOfServiceModal\n        visible={showTermsModal}\n        onClose={() => setShowTermsModal(false)}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  contentContainer: {\n    padding: 16,\n  },\n  section: {\n    marginTop: 24,\n  },\n  badge: {\n    fontSize: 12,\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: 'bold',\n    backgroundColor: theme.colors.mainColors.main,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    marginTop: 4,\n  },\n  sectionHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    fontFamily: theme.fonts.header.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  addRateText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  breakdownSection: {\n    width: '100%',\n  },\n  dateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  dateTextContainer: {\n    flex: 1,\n    marginRight: 8,\n  },\n  dateText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  breakdownLabelContainer: {\n    flex: 1,\n    marginRight: 16,\n  },\n  breakdownLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownCalculation: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  breakdownAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalItem: {\n    marginTop: 8,\n    paddingTop: 16,\n  },\n  // Fee and total styles\n  subtotalRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  subtotalLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  subtotalAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  feeRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 12,\n    paddingBottom: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  feeLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  feeAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmountContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n    paddingBottom: 16,\n  },\n  totalLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmount: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n  },\n  payoutContainer: {\n    alignItems: 'flex-end',\n  },\n  payoutLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  payoutAmount: {\n    fontSize: 18,\n    fontWeight: '700',\n    color: theme.colors.success,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 4,\n  },\n  payoutBreakdown: {\n    fontSize: 12,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 4,\n  },\n  // Input styles for editable fields\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  addRateContainer: {\n    padding: 16,\n    width: '100%',\n  },\n  rateNameAmountRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 12,\n  },\n  rateEditContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 8,\n  },\n  amountInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    minWidth: 120,\n    maxWidth: 150,\n  },\n  rateInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    minWidth: 100,\n    flex: 1,\n  },\n  currencySymbol: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginRight: 4,\n    marginLeft: 2,\n  },\n  inputLabel: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 4,\n  },\n  nameInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    flex: 1,\n    marginRight: 16,\n  },\n  descriptionInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    width: '100%',\n  },\n  saveButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderRadius: 4,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginTop: 0,\n    marginBottom: 0,\n    marginRight: 0,\n  },\n  saveButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  formDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginVertical: 12,\n    width: '100%',\n  },\n  editableAdditionalRateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    width: '100%',\n  },\n  rateNameAmountRowWithDelete: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  deleteButton: {\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    marginTop: 16,\n    marginBottom: 8,\n    marginRight: 16,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    marginRight: 12,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  multipleDatesContainer: {\n    marginBottom: 16,\n  },\n  occurrenceCost: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  ratesToggleButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n  },\n  ratesToggleText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  ratesBreakdown: {\n    padding: 16,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  rateLabel: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateAmount: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  rateDescription: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n  },\n  termsContainer: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    marginTop: 16,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  checkbox: {\n    width: 20,\n    height: 20,\n    borderWidth: 2,\n    borderColor: theme.colors.border,\n    borderRadius: 4,\n    marginRight: 8,\n  },\n  checkboxChecked: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  termsText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flex: 1,\n  },\n  termsLink: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textDecorationLine: 'underline',\n  },\n  termsAgreedText: {\n    fontSize: 14,\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: 'bold',\n  },\n  // Service Additional Rates Styles\n  additionalRatesDescription: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 16,\n    lineHeight: 20,\n  },\n  serviceRateItem: {\n    marginBottom: 12,\n  },\n  serviceRateCheckbox: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  serviceRateInfo: {\n    flex: 1,\n    marginLeft: 12,\n  },\n  serviceRateTitle: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 2,\n  },\n  serviceRateAmount: {\n    fontSize: 16,\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 2,\n  },\n  serviceRateDescription: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    lineHeight: 18,\n  },\n});\n\nexport default ReviewAndRatesCard; ","import React from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\n\nconst TosRequiredModal = ({ visible, onClose, actionType = 'booking' }) => {\n  const getModalContent = () => {\n    switch (actionType) {\n      case 'booking':\n        return {\n          title: 'Terms of Service Required',\n          message: 'You must agree to the terms of service before requesting a booking. Please scroll down and check the agreement box to continue.'\n        };\n      case 'approval':\n        return {\n          title: 'Terms of Service Required',\n          message: 'You must agree to the terms of service before approving this booking. Please scroll down and check the agreement box to continue.'\n        };\n      default:\n        return {\n          title: 'Terms of Service Required',\n          message: 'You must agree to the terms of service before continuing. Please scroll down and check the agreement box to continue.'\n        };\n    }\n  };\n\n  const content = getModalContent();\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n      transparent={true}\n    >\n      <View style={styles.termsModalOverlay}>\n        <View style={styles.termsModalContent}>\n          <View style={styles.termsModalHeader}>\n            <MaterialCommunityIcons name=\"alert-circle\" size={24} color={theme.colors.error} />\n            <Text style={styles.termsModalTitle}>{content.title}</Text>\n          </View>\n          <Text style={styles.termsModalText}>\n            {content.message}\n          </Text>\n          <TouchableOpacity\n            style={styles.termsModalButton}\n            onPress={onClose}\n          >\n            <Text style={styles.termsModalButtonText}>OK</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  termsModalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  termsModalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    padding: 24,\n    maxWidth: 400,\n    width: '100%',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  termsModalHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  termsModalTitle: {\n    fontSize: 18,\n    fontFamily: theme.fonts.header.fontFamily,\n    color: theme.colors.text,\n    marginLeft: 8,\n    flex: 1,\n  },\n  termsModalText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    lineHeight: 22,\n    marginBottom: 24,\n  },\n  termsModalButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    borderRadius: 8,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    alignItems: 'center',\n  },\n  termsModalButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n});\n\nexport default TosRequiredModal; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  SafeAreaView,\n  ActivityIndicator,\n  TextInput,\n  Dimensions,\n  Platform\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport ReviewAndRatesCard from './bookingComponents/ReviewAndRatesCard';\nimport TosRequiredModal from './modals/TosRequiredModal';\nimport { getBookingDetails, approveBooking, requestBookingChanges } from '../api/API';\nimport { capitalizeWords } from '../utils/formatStrings';\nimport ProfessionalAlert from './common/ProfessionalAlert';\n\nconst BookingApprovalModal = ({ \n  visible, \n  onClose, \n  bookingId,\n  onApproveSuccess,\n  onApproveError,\n  onRequestChangesSuccess,\n  onRequestChangesError,\n  initialData = null,\n  isProfessional = true,\n  modalTitle = \"Booking Approval Request\",\n  hideButtons = false,\n  isReadOnly = false\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n  \n  // Create a safe default initial data structure if initialData is null\n  const defaultInitialData = initialData || {\n    booking_id: bookingId,\n    service_type: 'Loading...',\n    pets: [],\n    occurrences: [],\n    cost_summary: {\n      subtotal: 0,\n      client_platform_fee: 0,\n      pro_platform_fee: 0,\n      taxes: 0,\n      tax_state: '',\n      total_client_cost: 0,\n      total_sitter_payout: 0,\n      pro_subscription_plan: 0\n    }\n  };\n  \n  const [bookingData, setBookingData] = useState(defaultInitialData);\n  const [loading, setLoading] = useState(false);\n  const [loadingText, setLoadingText] = useState(\"Loading booking details...\");\n  const [error, setError] = useState(null);\n  const [changeRequestMessage, setChangeRequestMessage] = useState('');\n  const [showChangeRequestInput, setShowChangeRequestInput] = useState(false);\n  const [userTosAgreed, setUserTosAgreed] = useState(false);\n  const [showTosRequiredModal, setShowTosRequiredModal] = useState(false);\n  \n  // Use a ref to store a cached copy of the booking data that won't be affected by re-renders\n  const bookingDataRef = useRef(defaultInitialData);\n  // Flag to track if data has been fully loaded\n  const dataLoadedRef = useRef(false);\n\n  useEffect(() => {\n    if (visible && bookingId) {\n      fetchBookingDetails();\n    }\n  }, [visible, bookingId]);\n\n  // Update modal title based on mode\n  const getModalTitle = () => {\n    // Debug log to help with modal title decisions\n    debugLog('MBA4321: Modal title decision factors:', {\n      isReadOnly,\n      modalTitle,\n      bookingId\n    });\n    \n    if (isReadOnly) {\n      return \"Booking Details\";\n    }\n    \n    // Keep the provided modal title\n    return modalTitle;\n  };\n\n  // Update bookingData when initialData changes\n  useEffect(() => {\n    if (initialData && !dataLoadedRef.current) {\n      debugLog('MBAio3htg5uohg: Updating bookingData from initialData');\n      setBookingData(initialData);\n      bookingDataRef.current = initialData;\n    }\n  }, [initialData]);\n\n  // Add this useEffect to detect when a websocket update or unread count changes might occur\n  // and protect the bookingData from being affected\n  useEffect(() => {\n    // This sets a regular interval to check if bookingData is still intact\n    const dataProtectionInterval = setInterval(() => {\n      if (visible && dataLoadedRef.current) {\n        // Check if booking data has been unexpectedly cleared\n        const hasNoData = !bookingData || \n                         !bookingData.occurrences || \n                         bookingData.occurrences.length === 0;\n                         \n        const hasRefData = bookingDataRef.current && \n                          bookingDataRef.current.occurrences && \n                          bookingDataRef.current.occurrences.length > 0;\n        \n        if (hasNoData && hasRefData) {\n          debugLog('MBAio3htg5uohg: Detected that bookingData was cleared unexpectedly, restoring from cache');\n          setBookingData({...bookingDataRef.current});\n        }\n      }\n    }, 1000); // Check every second\n    \n    return () => {\n      // Clean up interval on unmount\n      clearInterval(dataProtectionInterval);\n    };\n  }, [visible, bookingData]);\n\n  const fetchBookingDetails = async () => {\n    if (!bookingId) return;\n    \n    try {\n      setLoading(true);\n      setError(null);\n      setLoadingText(\"Loading booking details...\");\n      \n      debugLog('MBAio3htg5uohg: Fetching booking details for ID:', bookingId);\n      const response = await getBookingDetails(bookingId);\n      \n      debugLog('MBAio3htg5uohg: Booking details fetched:', response);\n      \n      // Ensure the response has the expected structure\n      const safeResponse = {\n        ...response,\n        occurrences: response.occurrences || [],\n        pets: response.pets || [],\n        cost_summary: response.cost_summary || {\n          subtotal: 0,\n          client_platform_fee: 0,\n          pro_platform_fee: 0,\n          taxes: 0,\n          tax_state: '',\n          total_client_cost: 0,\n          total_sitter_payout: 0,\n          pro_subscription_plan: 0\n        },\n        service_type: response.service_type || 'N/A'\n      };\n      \n      // Make sure we have at least one occurrence with required fields\n      if (safeResponse.occurrences.length === 0) {\n        safeResponse.occurrences = [{\n          occurrence_id: '0',\n          start_date: new Date().toISOString().split('T')[0],\n          end_date: new Date().toISOString().split('T')[0],\n          start_time: '09:00',\n          end_time: '17:00',\n          unit_of_time: 'visit',\n          multiple: 1,\n          base_total: 0,\n          rates: {\n            base_rate: 0,\n            additional_animal_rate: 0,\n            applies_after: 1,\n            holiday_rate: 0,\n            holiday_days: 0,\n            additional_rates: []\n          }\n        }];\n      } else {\n        // Ensure each occurrence has a rates object and that unit_of_time is preserved\n        safeResponse.occurrences = safeResponse.occurrences.map(occ => {\n          // Log detailed info about each occurrence for debugging\n          debugLog('MBAio3htg5uohg: Processing occurrence:', {\n            id: occ.occurrence_id,\n            unit_of_time: occ.unit_of_time,\n            multiple: occ.multiple\n          });\n          \n          return {\n            ...occ,\n            unit_of_time: occ.unit_of_time || 'visit',\n            multiple: parseFloat(occ.multiple) || 1,\n            base_total: occ.base_total || 0,\n            rates: occ.rates || {\n              base_rate: 0,\n              additional_animal_rate: 0,\n              applies_after: 1,\n              holiday_rate: 0,\n              holiday_days: 0,\n              additional_rates: []\n            }\n          };\n        });\n      }\n      \n      // Store the processed response both in state and ref\n      setBookingData(safeResponse);\n      bookingDataRef.current = safeResponse;\n      dataLoadedRef.current = true;\n      \n      debugLog('MBAio3htg5uohg: Booking data processed and stored');\n    } catch (err) {\n      debugLog('MBAio3htg5uohg: Error fetching booking details:', err);\n      setError('Failed to load booking details. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Add a safety effect that restores booking data from ref if it's cleared unexpectedly\n  useEffect(() => {\n    // Only run this check if we have actually loaded data before\n    if (dataLoadedRef.current) {\n      // Check if booking data was cleared but we have a cache in the ref\n      const hasNoData = !bookingData || !bookingData.occurrences || bookingData.occurrences.length === 0;\n      const hasRefData = bookingDataRef.current && bookingDataRef.current.occurrences && bookingDataRef.current.occurrences.length > 0;\n      \n      if (hasNoData && hasRefData) {\n        debugLog('MBAio3htg5uohg: Booking data was cleared unexpectedly, restoring from cache');\n        setBookingData(bookingDataRef.current);\n      }\n    }\n  }, [bookingData]);\n\n  const handleApprove = async () => {\n    // Check TOS agreement before proceeding\n    const existingTosAgreed = isProfessional ? bookingData?.pro_agreed_tos : bookingData?.client_agreed_tos;\n    const currentTosAgreed = existingTosAgreed || userTosAgreed;\n    \n    debugLog('MBA4321: TOS check for approval:', {\n      isProfessional,\n      existingTosAgreed,\n      userTosAgreed,\n      currentTosAgreed\n    });\n    \n    if (!currentTosAgreed) {\n      setShowTosRequiredModal(true);\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setLoadingText(\"Approving booking...\");\n      setError(null);\n      \n      // Determine TOS value to send based on user type and current status\n      let tosValueToSend = false;\n      if (!isProfessional && !bookingData?.client_agreed_tos && userTosAgreed) {\n        // Client approving, hasn't agreed before, and just agreed in this session\n        tosValueToSend = true;\n      }\n      \n      // Call approve booking with TOS agreement if needed\n      const response = await approveBooking(bookingId, tosValueToSend);\n      \n      if (onApproveSuccess) {\n        onApproveSuccess(response);\n      }\n      \n      onClose();\n    } catch (err) {\n      debugLog('MBA77788 Error approving booking:', err);\n      setError('Failed to approve booking. Please try again.');\n      \n      if (onApproveError) {\n        onApproveError(err.response?.data?.error || 'Failed to approve booking');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleShowChangeRequest = () => {\n    setShowChangeRequestInput(true);\n  };\n\n  const handleCancelChangeRequest = () => {\n    setShowChangeRequestInput(false);\n    setChangeRequestMessage('');\n  };\n\n  const handleSubmitChangeRequest = async () => {\n    if (!changeRequestMessage.trim()) {\n      setError('Please provide details about your requested changes.');\n      return;\n    }\n    \n    try {\n      setLoading(true);\n      setLoadingText(\"Submitting change request...\");\n      setError(null);\n      \n      const response = await requestBookingChanges(bookingId, changeRequestMessage);\n      \n      if (onRequestChangesSuccess) {\n        debugLog('MBA77788 Notifying parent of successful change request submission');\n        onRequestChangesSuccess(response);\n      }\n      \n      onClose();\n    } catch (err) {\n      debugLog('MBA77788 Error requesting booking changes:', err);\n      setError('Failed to submit change request. Please try again.');\n      \n      if (onRequestChangesError) {\n        onRequestChangesError(err.response?.data?.error || 'Failed to submit change request');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle modal close\n  const handleClose = () => {\n    setShowChangeRequestInput(false);\n    setChangeRequestMessage('');\n    onClose();\n  };\n\n  // Main content of the modal\n  const renderContent = () => {\n    if (loading) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>{loadingText}</Text>\n        </View>\n      );\n    }\n\n    if (error) {\n      return (\n        <View style={styles.errorContainer}>\n          <MaterialCommunityIcons name=\"alert-circle\" size={48} color={theme.colors.error} />\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity style={styles.retryButton} onPress={fetchBookingDetails}>\n            <Text style={styles.retryButtonText}>Retry</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n\n    if (!bookingData) {\n      return (\n        <View style={styles.emptyContainer}>\n          <Text style={styles.emptyText}>No booking data available</Text>\n        </View>\n      );\n    }\n\n    return (\n      <>\n        <ProfessionalAlert isProfessional={isProfessional} fromApprovalModal={false} />\n        <View style={[styles.section, { marginTop: 0 }]}>\n          <Text style={styles.sectionHeader}>Service & Pets</Text>\n          <View style={styles.card}>\n            <View style={styles.serviceContainer}>\n              <Text style={styles.serviceLabel}>Service:</Text>\n              <Text style={styles.serviceValue}>{bookingData.service_details?.service_type || 'N/A'}</Text>\n            </View>\n            \n            <View style={styles.serviceDivider} />\n            \n            <View style={styles.petsContainer}>\n              <Text style={styles.petsLabel}>Pets:</Text>\n              <View style={styles.petsList}>\n                {bookingData.pets && bookingData.pets.length > 0 ? (\n                  bookingData.pets.map((pet, index) => (\n                    <View key={index} style={styles.petItem}>\n                      <Text style={styles.petName}>{pet.name}</Text>\n                      <Text style={styles.petType}>{capitalizeWords(pet.species)} | {pet.breed}</Text>\n                    </View>\n                  ))\n                ) : (\n                  <Text style={styles.noPets}>No pets selected</Text>\n                )}\n              </View>\n            </View>\n          </View>\n        </View>\n        \n        {/* ReviewAndRatesCard for booking details */}\n        {bookingData && (\n          <ReviewAndRatesCard \n            bookingData={bookingData} \n            bookingId={bookingId}\n            onRatesUpdate={(updatedData) => setBookingData(updatedData)}\n            showEditControls={false}\n            isProfessional={isProfessional}\n            fromApprovalModal={true}\n            onTosAgreementChange={setUserTosAgreed}\n          />\n        )}\n      </>\n    );\n  };\n\n  // Render change request input\n  const renderChangeRequestInput = () => {\n    return (\n      <View style={styles.changeRequestContainer}>\n        <TextInput\n          style={styles.changeRequestInput}\n          placeholder=\"Enter details about your requested changes...\"\n          value={changeRequestMessage}\n          onChangeText={setChangeRequestMessage}\n          multiline={true}\n          numberOfLines={3}\n          placeholderTextColor={theme.colors.placeHolderText}\n        />\n        <View style={styles.buttonWrapper}>\n          <View style={styles.changeRequestButtons}>\n            <TouchableOpacity\n              style={styles.cancelRequestButton}\n              onPress={handleCancelChangeRequest}\n            >\n              <Text style={styles.cancelRequestButtonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.submitRequestButton}\n              onPress={handleSubmitChangeRequest}\n              disabled={!changeRequestMessage.trim()}\n            >\n              <Text style={styles.submitRequestButtonText}>Request Changes</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  // Footer with action buttons\n  const renderFooter = () => {\n    // Log the current state for debugging\n    debugLog('MBA4321: Footer render state:', {\n      hideButtons,\n      isReadOnly,\n      showChangeRequestInput,\n      isProfessional,\n      modalTitle\n    });\n    \n    // Don't render any footer if the buttons should be hidden\n    if (hideButtons) {\n      return null;\n    }\n    \n    // Read-only mode for confirmed bookings - just show a close button\n    if (isReadOnly) {\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n    \n    // Show change request input or default buttons\n    if (showChangeRequestInput) {\n      return null; // Don't render footer when change request input is shown\n    }\n    \n    if (isProfessional) {\n      // Professional only gets Close button\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      // For booking updates or regular approvals, show all action buttons\n      const isBookingUpdate = modalTitle === \"Booking Update\";\n      \n      // Client gets two or three buttons: Close, Approve, Request Changes\n      return (\n        <View style={styles.footerContainer}>\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={handleClose}\n          >\n            <Text style={styles.buttonText}>Close</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.button, styles.changeButton]}\n            onPress={handleShowChangeRequest}\n          >\n            <Text style={styles.buttonText}>Request Changes</Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.button, styles.approveButton]}\n            onPress={handleApprove}\n          >\n            <Text style={styles.approveText}>\n              {isBookingUpdate ? \"Approve Update\" : \"Approve\"}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"slide\"\n      onRequestClose={handleClose}\n    >\n      <SafeAreaView style={styles.safeArea}>\n        <View style={[\n          styles.container, \n          isDesktop ? styles.desktopContainer : {},\n          showChangeRequestInput ? styles.shortenedContainer : {}\n        ]}>\n          {/* Header with customizable title */}\n          <View style={styles.header}>\n            <Text style={styles.title}>{getModalTitle()}</Text>\n            <TouchableOpacity style={styles.closeButton} onPress={handleClose}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          {/* Content */}\n          {showChangeRequestInput ? (\n            // Render change request input as direct content\n            renderChangeRequestInput()\n          ) : (\n            // Render scrollable booking details\n            <ScrollView style={styles.scrollContainer} contentContainerStyle={styles.scrollContent}>\n              {renderContent()}\n            </ScrollView>\n          )}\n          \n          {/* Footer with action buttons - only shown when not in change request mode */}\n          {!showChangeRequestInput && renderFooter()}\n        </View>\n      </SafeAreaView>\n      \n      <TosRequiredModal\n        visible={showTosRequiredModal}\n        onClose={() => setShowTosRequiredModal(false)}\n        actionType=\"approval\"\n      />\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    margin: Platform.OS === 'web' ? 0 : 24,\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  desktopContainer: {\n    maxWidth: 800,\n    maxHeight: '90%',\n    alignSelf: 'center',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  scrollContainer: {\n    flex: 1,\n  },\n  scrollContent: {\n    padding: 16,\n    paddingBottom: 32,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  button: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  buttonText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  approveButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  approveText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  loadingText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  errorText: {\n    marginTop: 16,\n    fontSize: 16,\n    color: theme.colors.error,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    marginTop: 16,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n  },\n  retryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  // Service and Pets section styles\n  section: {\n    marginTop: 24,\n    marginHorizontal: 16,\n  },\n  sectionHeader: {\n    fontSize: 20,\n    // fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  serviceContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    alignItems: 'center',\n    paddingBottom: 16,\n  },\n  serviceDivider: {\n    height: 1,\n    backgroundColor: theme.colors.border,\n    marginBottom: 16,\n    width: '100%',\n  },\n  serviceLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    width: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceValue: {\n    fontSize: 16,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petsContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  petsLabel: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    width: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petsList: {\n    flex: 1,\n  },\n  petItem: {\n    marginBottom: 8,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petType: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noPets: {\n    fontSize: 16,\n    color: theme.colors.placeHolderText,\n    fontStyle: 'italic',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  // Change request styles\n  changeRequestContainer: {\n    padding: 16,\n  },\n  changeRequestInput: {\n    backgroundColor: theme.colors.background,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    minHeight: 120,\n    textAlignVertical: 'top',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 16,\n  },\n  buttonWrapper: {\n    alignItems: 'center',\n    width: '100%',\n  },\n  changeRequestButtons: {\n    flexDirection: 'row',\n    width: 300,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  cancelRequestButton: {\n    width: 140,\n    height: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border || '#E0E0E0',\n    borderRadius: 8,\n    backgroundColor: 'white',\n  },\n  cancelRequestButtonText: {\n    color: theme.colors.text || '#333333',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitRequestButton: {\n    width: 140,\n    height: 45,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.olive || '#707855',\n    borderRadius: 8,\n  },\n  submitRequestButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  changeButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  shortenedContainer: {\n    flex: 0,\n    backgroundColor: theme.colors.background,\n    margin: Platform.OS === 'web' ? 0 : 24,\n    borderRadius: 12,\n    overflow: 'hidden',\n    alignSelf: 'center',\n    width: '90%',\n    maxWidth: 500,\n    minHeight: 320,\n  },\n});\n\nexport default BookingApprovalModal; ","/**\n * Capitalizes the first letter of each word in a string, with all other letters lowercase\n * @param {string} str - The string to format\n * @returns {string} - Formatted string with first letter of each word capitalized\n * \n * Examples:\n * 1. \"DOG\" -> \"Dog\"\n * 2. \"HouSE CAt\" -> \"House Cat\"\n */\nexport const capitalizeWords = (str) => {\n  if (!str) return str;\n  \n  return str\n    .split(' ')\n    .map(word => \n      word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()\n    )\n    .join(' ');\n};\n","import React, { useContext, useState, useEffect, useCallback } from 'react';\nimport { View, ScrollView, StyleSheet, Platform, SafeAreaView, Dimensions, StatusBar, TouchableOpacity, Text } from 'react-native';\nimport { Card, Title, Paragraph, List, Button, useTheme, Appbar, ActivityIndicator, Avatar } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { useFocusEffect } from '@react-navigation/native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { API_BASE_URL } from '../config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { TutorialContext } from '../context/TutorialContext';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\nimport ProfessionalServiceCard from '../components/ProfessionalServiceCard';\nimport { getProfessionalServices, getProfessionalDashboard, getClientDashboard } from '../api/API';\nimport BookingCard from '../components/BookingCard';\nimport TutorialModal from '../components/TutorialModal';\nimport BookingApprovalModal from '../components/BookingApprovalModal';\n\nconst { width: screenWidth, height: screenHeight } = Dimensions.get('window');\n\nconst Dashboard = ({ navigation }) => {\n  const { colors } = useTheme();\n  const { signOut, firstName, is_prototype, screenWidth, is_DEBUG, isSignedIn, isCollapsed, userRole } = useContext(AuthContext);\n  const { \n    isVisible: isTutorialVisible,\n    currentStep,\n    totalSteps,\n    stepData,\n    handleNext,\n    handlePrevious,\n    handleSkip,\n    completeTutorial,\n  } = useContext(TutorialContext);\n  const [bookings, setBookings] = useState([]);\n  const [services, setServices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [activeFilter, setActiveFilter] = useState('upcoming');\n  const [onboardingProgress, setOnboardingProgress] = useState({\n    profile_complete: 0,\n    has_bank_account: false,\n    has_services: false,\n    subscription_plan: 0\n  });\n\n  // Add state for the BookingApprovalModal\n  const [bookingModalVisible, setBookingModalVisible] = useState(false);\n  const [selectedBookingId, setSelectedBookingId] = useState(null);\n\n  const isLargeScreen = screenWidth > 900;\n  const isMobile = screenWidth <= 900;\n  const isProfessional = userRole === 'professional';\n\n  // Filter bookings based on active filter\n  const filteredBookings = bookings.filter(booking => {\n    const now = new Date();\n    let bookingDate = null;\n    \n    // Ensure we have a valid date before parsing\n    if (booking.start_date) {\n      try {\n        bookingDate = new Date(booking.start_date);\n        // Check if date is valid\n        if (isNaN(bookingDate.getTime())) {\n          debugLog(\"MBA5677: Invalid booking date\", booking.start_date);\n          return false;\n        }\n      } catch (error) {\n        debugLog(\"MBA5677: Error parsing booking date\", { date: booking.start_date, error });\n        return false;\n      }\n    }\n    \n    debugLog(\"MBA5677: Filtering booking\", { \n      id: booking.booking_id || booking.id,\n      date: booking.start_date || booking.date,\n      parsedDate: bookingDate ? bookingDate.toISOString() : null,\n      now: now.toISOString(),\n      filter: activeFilter\n    });\n    \n    switch (activeFilter) {\n      case 'upcoming':\n        return bookingDate && bookingDate > now;\n      case 'active':\n        return bookingDate && bookingDate <= now && !booking.completed;\n      case 'past':\n        return bookingDate && bookingDate < now && booking.completed;\n      default:\n        return true;\n    }\n  });\n\n  // Limit bookings for owner view\n  const displayedBookings = !isProfessional ? filteredBookings.slice(0, 3) : filteredBookings;\n\n  // Dynamic styles based on screen size\n  const dynamicStyles = {\n    welcomeTitle: {\n      fontSize: isLargeScreen ? 32 : 24,\n      fontWeight: '600',\n      color: theme.colors.whiteText,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    bookingCount: {\n      fontSize: isLargeScreen ? 16 : 14,\n      color: theme.colors.whiteText,\n      fontFamily: theme.fonts.regular.fontFamily,\n      opacity: 0.8,\n      marginTop: 12,\n    },\n    statValue: {\n      fontSize: isLargeScreen ? 20 : 16,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    statLabel: {\n      fontSize: isLargeScreen ? 16 : 14,\n      color: theme.colors.textSecondary,\n      fontFamily: theme.fonts.regular.fontFamily,\n      marginTop: 4,\n    },\n    statChange: {\n      fontSize: isLargeScreen ? 14 : 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n      marginTop: 4,\n    },\n    sectionTitle: {\n      fontSize: isLargeScreen ? 20 : 18,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.header.fontFamily,\n      marginBottom: 16,\n      marginTop: 24,\n    },\n  };\n\n  const fetchDashboardData = async () => {\n    if (is_prototype) {\n      // Prototype data\n      const prototypeBookings = [\n        { id: '56782', owner: 'John Doe', pet: 'Max (Dog)', date: '2023-05-15', time: '14:00', status: 'upcoming' },\n        { id: '5678', owner: 'Jane Smith', pet: 'Whiskers (Cat)', date: '2023-05-17', time: '10:00', status: 'active' },\n      ];\n\n      const prototypeServices = [\n        {\n          service_name: \"Dog Walking\",\n          description: \"Professional dog walking service\",\n          unit_of_time: \"30 minutes\",\n          base_rate: 25,\n          additional_animal_rate: 10,\n          holiday_rate: 35,\n          additional_rates: []\n        },\n      ];\n\n      setBookings(prototypeBookings);\n      setServices(prototypeServices);\n      setOnboardingProgress({\n        profile_complete: 0.5,\n        has_bank_account: false,\n        has_services: true,\n        subscription_plan: 0\n      });\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      \n      // Use API.js functions which will be properly intercepted by AuthContext\n      const dashboardData = isProfessional \n        ? await getProfessionalDashboard()\n        : await getClientDashboard();\n\n      debugLog('MBA5677: Dashboard response data', dashboardData);\n      \n      // Log the structure of the first booking for debugging\n      if (dashboardData && dashboardData.upcoming_bookings && dashboardData.upcoming_bookings.length > 0) {\n        const firstBooking = dashboardData.upcoming_bookings[0];\n        debugLog('MBA5677: First booking complete structure', firstBooking);\n        \n        // Log all the keys in the booking object to see available fields\n        debugLog('MBA5677: First booking keys', Object.keys(firstBooking));\n        \n        // Explicitly check for client_name\n        debugLog('MBA5677: First booking client_name field', {\n          client_name: firstBooking.client_name,\n          owner_name: firstBooking.owner_name,\n          client_name_exists: 'client_name' in firstBooking\n        });\n      }\n\n      // Process the incoming bookings to ensure dates are properly formatted\n      const processedBookings = (dashboardData.upcoming_bookings || []).map(booking => {\n        debugLog('MBA5677: Processing booking', booking);\n        \n        // Make sure we have a valid booking object\n        if (!booking) {\n          debugLog('MBA5677: Null booking received');\n          return null;\n        }\n        \n        // Normalize date format if needed\n        let normalizedDate = booking.start_date;\n        if (normalizedDate && normalizedDate.includes(' ')) {\n          // Handle if the date includes time\n          normalizedDate = normalizedDate.split(' ')[0];\n        }\n        \n        // Return a properly formatted booking object with the client_name explicitly mapped\n        return {\n          ...booking,\n          start_date: normalizedDate, // Ensure date is in YYYY-MM-DD format\n          client_name: booking.client_name || booking.owner_name // Ensure client_name is set\n        };\n      }).filter(booking => booking !== null); // Remove any null bookings\n\n      debugLog('MBA5677: Processed bookings', processedBookings);\n      setBookings(processedBookings);\n      \n      setOnboardingProgress(dashboardData.onboarding_progress || {\n        profile_complete: 0,\n        has_bank_account: false,\n        has_services: false,\n        subscription_plan: 0\n      });\n\n      // Fetch services if professional\n      if (isProfessional) {\n        try {\n          const servicesData = await getProfessionalServices();\n          setServices(servicesData || []);\n        } catch (error) {\n          console.error('Error fetching professional services:', error);\n        }\n      }\n    } catch (error) {\n      // AuthContext will handle 401 errors and redirect to sign-in automatically\n      // We just need to handle other types of errors here\n      console.error('Error fetching dashboard data:', error);\n      \n      // Only handle non-auth errors (AuthContext handles 401s)\n      if (error.response?.status !== 401) {\n        // Handle other errors if needed\n        debugLog('MBA5677: Non-auth error in dashboard fetch:', error);\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchDashboardData();\n  }, [userRole, is_prototype]);\n\n  // Use useFocusEffect to reload data when screen comes into focus\n  useFocusEffect(\n    useCallback(() => {\n      debugLog('MBA5677: Dashboard screen focused, refreshing data');\n      fetchDashboardData();\n      return () => {\n        // Cleanup function when screen loses focus (if needed)\n      };\n    }, [userRole, is_prototype])\n  );\n\n  // Add useEffect to check for active bookings and select the active tab if there are any\n  useEffect(() => {\n    if (!isLoading && bookings.length > 0) {\n      const now = new Date();\n      \n      // Check if there are any active bookings (date <= now && !completed)\n      const hasActiveBookings = bookings.some(booking => {\n        try {\n          const bookingDate = booking.start_date ? new Date(booking.start_date) : null;\n          return bookingDate && bookingDate <= now && !booking.completed;\n        } catch (error) {\n          return false;\n        }\n      });\n      \n      debugLog(\"MBA5677: Checking for active bookings\", { \n        hasActiveBookings, \n        bookingsCount: bookings.length,\n        currentActiveFilter: activeFilter\n      });\n      \n      // If there are active bookings, set the active filter to 'active'\n      if (hasActiveBookings && activeFilter !== 'active') {\n        debugLog(\"MBA5677: Setting active filter to 'active' due to active bookings\");\n        setActiveFilter('active');\n      }\n    }\n  }, [bookings, isLoading]);\n\n  // TODO: Fetch owner requests from the backend\n  const ownerRequests = [\n    { id: '1', owner: 'Alice Johnson', pet: 'Fluffy (Rabbit)', date: '2023-05-20', time: '09:00' },\n    { id: '2', owner: 'Bob Williams', pet: 'Spike (Iguana)', date: '2023-05-22', time: '16:00' },\n  ];\n\n  const IconComponent = Platform.OS === 'web'\n    ? ({ name, ...props }) => <MaterialCommunityIcons name={name} {...props} />\n    : List.Icon;\n\n  const navigateToServiceManager = async () => {\n    if (is_DEBUG) {\n      console.log('Setting previousRoute to:', 'Dashboard');\n      console.log('Setting currentRoute to:', 'ServiceManager');\n    }\n    setTimeout(async () => {\n      await navigateToFrom(navigation, 'ServiceManager', 'Dashboard');\n    }, 100);\n  };\n\n  const renderHeader = () => {\n    if (isMobile) return null;\n    \n    return (\n      <View style={styles.headerContainer}>\n        <View style={styles.headerRight}>\n          {/* <TouchableOpacity style={styles.notificationButton}>\n            <MaterialCommunityIcons name=\"bell-outline\" size={24} color={theme.colors.text} />\n            <View style={styles.notificationBadge}>\n              <Text style={styles.notificationCount}>3</Text>\n            </View>\n          </TouchableOpacity> */}\n          <TouchableOpacity \n            style={styles.profileButton}\n            onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard')}\n          >\n            <Avatar.Image \n              size={40} \n              source={require('../../assets/default-profile.png')} \n            />\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const renderWelcomeSection = () => (\n    <View style={styles.welcomeSection}>\n      <View style={styles.welcomeContent}>\n        {Platform.OS === 'web' ? (\n          // Web version with CSS gradient\n          <View style={styles.welcomeCard}>\n            <View style={styles.welcomeHeader}>\n              <View style={styles.welcomeTextContainer}>\n                <Text style={dynamicStyles.welcomeTitle}>\n                  Welcome back{firstName ? ', ' + firstName : ''}! 👋\n                </Text>\n                <Text style={dynamicStyles.bookingCount}>\n                  You have {bookings.filter(b => !b.completed).length} active bookings today and {bookings.filter(b => new Date(b.start_date) > new Date()).length} upcoming appointments.\n                </Text>\n              </View>\n            </View>\n          </View>\n        ) : (\n          // Mobile version with LinearGradient\n          <LinearGradient\n            colors={['#6B6C53', '#86C5D9']}\n            start={{ x: 0, y: 0 }}\n            end={{ x: 1, y: 0 }}\n            style={[styles.welcomeCard, { backgroundImage: undefined }]}\n          >\n            <View style={styles.welcomeHeader}>\n              <View style={styles.welcomeTextContainer}>\n                <Text style={dynamicStyles.welcomeTitle}>\n                  Welcome back{firstName ? ', ' + firstName : ''}! 👋\n                </Text>\n                <Text style={dynamicStyles.bookingCount}>\n                  You have {bookings.filter(b => !b.completed).length} active bookings today and {bookings.filter(b => new Date(b.start_date) > new Date()).length} upcoming appointments.\n                </Text>\n              </View>\n            </View>\n          </LinearGradient>\n        )}\n      </View>\n    </View>\n  );\n\n  const renderOnboardingProgress = () => (\n    <View style={styles.statsContainer}>\n      <View style={styles.statsGrid}>\n        {isProfessional ? (\n          // Professional onboarding cards\n          <>\n            {/* Only show profile card if profile is not complete */}\n            {onboardingProgress.profile_complete < 1.0 && (\n              <TouchableOpacity \n                style={styles.statCard}\n                onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'profile_info' })}\n              >\n                <View style={styles.statHeader}>\n                  <View style={[styles.statIconContainer, { backgroundColor: '#F0F9E5' }]}>\n                    <MaterialCommunityIcons name=\"account-check\" size={24} color={theme.colors.primary} />\n                  </View>\n                  <Text style={[dynamicStyles.statChange, { color: onboardingProgress.profile_complete === 1 ? theme.colors.success : theme.colors.warning }]}>\n                    {Math.round(onboardingProgress.profile_complete * 100)}% Complete\n                  </Text>\n                </View>\n                <Text style={dynamicStyles.statValue}>Profile</Text>\n                <Text style={dynamicStyles.statLabel}>Add an address to get clients</Text>\n              </TouchableOpacity>\n            )}\n\n            {/* TODO: Add back after MVP \n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E7F3F8' }]}>\n                  <MaterialCommunityIcons name=\"bank\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_bank_account ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_bank_account ? 'Connected' : 'Not Connected'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Bank Account</Text>\n              <Text style={dynamicStyles.statLabel}>Connect your bank to receive payments</Text>\n            </TouchableOpacity> */}\n\n            {/* Only show services card if no services yet */}\n            {!onboardingProgress.has_services && (\n              <TouchableOpacity \n                style={styles.statCard}\n                onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard')}\n              >\n                <View style={styles.statHeader}>\n                  <View style={[styles.statIconContainer, { backgroundColor: '#FEF0DA' }]}>\n                    <MaterialCommunityIcons name=\"briefcase\" size={24} color={theme.colors.primary} />\n                  </View>\n                  <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_services ? theme.colors.success : theme.colors.warning }]}>\n                    {onboardingProgress.has_services ? 'Active' : 'No Services'}\n                  </Text>\n                </View>\n                <Text style={dynamicStyles.statValue}>Services</Text>\n                <Text style={dynamicStyles.statLabel}>Add services to start accepting bookings</Text>\n              </TouchableOpacity>\n            )}\n\n            {/* TODO: Add back after MVP \n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E1E2DB' }]}>\n                  <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.subscription_plan > 0 ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.subscription_plan === 0 ? 'Free Tier' : 'Premium'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Subscription</Text>\n              <Text style={dynamicStyles.statLabel}>Upgrade for more features</Text>\n            </TouchableOpacity> */}\n          </>\n        ) : (\n          // Owner onboarding cards\n          <>\n            {/* Only show profile card if profile is not complete */}\n            {onboardingProgress.profile_complete < 1.0 && (\n              <TouchableOpacity \n                style={styles.statCard}\n                onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'profile_info' })}\n              >\n                <View style={styles.statHeader}>\n                  <View style={[styles.statIconContainer, { backgroundColor: '#F0F9E5' }]}>\n                    <MaterialCommunityIcons name=\"account-check\" size={24} color={theme.colors.primary} />\n                  </View>\n                  <Text style={[dynamicStyles.statChange, { color: onboardingProgress.profile_complete === 1 ? theme.colors.success : theme.colors.warning }]}>\n                    {Math.round(onboardingProgress.profile_complete * 100)}% Complete\n                  </Text>\n                </View>\n                <Text style={dynamicStyles.statValue}>Profile</Text>\n                <Text style={dynamicStyles.statLabel}>Add an address to find professionals</Text>\n              </TouchableOpacity>\n            )}\n\n            {/* TODO: Add back after MVP \n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E7F3F8' }]}>\n                  <MaterialCommunityIcons name=\"credit-card\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_payment_method ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.has_payment_method ? 'Connected' : 'Not Connected'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Payment Method</Text>\n              <Text style={dynamicStyles.statLabel}>Add a payment method to book services</Text>\n            </TouchableOpacity> */}\n\n            {/* Only show pets card if no pets yet */}\n            {!onboardingProgress.has_pets && (\n              <TouchableOpacity \n                style={styles.statCard}\n                onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'pets_preferences' })}\n              >\n                <View style={styles.statHeader}>\n                  <View style={[styles.statIconContainer, { backgroundColor: '#FEF0DA' }]}>\n                    <MaterialCommunityIcons name=\"paw\" size={24} color={theme.colors.primary} />\n                  </View>\n                  <Text style={[dynamicStyles.statChange, { color: onboardingProgress.has_pets ? theme.colors.success : theme.colors.warning }]}>\n                    {onboardingProgress.has_pets ? 'Added' : 'No Pets'}\n                  </Text>\n                </View>\n                <Text style={dynamicStyles.statValue}>Pets</Text>\n                <Text style={dynamicStyles.statLabel}>Add your pets to book services</Text>\n              </TouchableOpacity>\n            )}\n\n            {/* TODO: Add back after MVP \n            <TouchableOpacity \n              style={styles.statCard}\n              onPress={() => navigateToFrom(navigation, 'MyProfile', 'Dashboard', { initialTab: 'settings_payments' })}\n            >\n              <View style={styles.statHeader}>\n                <View style={[styles.statIconContainer, { backgroundColor: '#E1E2DB' }]}>\n                  <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n                </View>\n                <Text style={[dynamicStyles.statChange, { color: onboardingProgress.subscription_plan > 0 ? theme.colors.success : theme.colors.warning }]}>\n                  {onboardingProgress.subscription_plan === 0 ? 'Free Tier' : 'Premium'}\n                </Text>\n              </View>\n              <Text style={dynamicStyles.statValue}>Subscription</Text>\n              <Text style={dynamicStyles.statLabel}>Upgrade for more features</Text>\n            </TouchableOpacity> */}\n          </>\n        )}\n      </View>\n    </View>\n  );\n\n  const renderBookingFilters = () => (\n    <View style={styles.filterContainer}>\n      <View style={styles.filterButtons}>\n        {['upcoming', 'active'].map((filter) => (\n          <TouchableOpacity\n            key={filter}\n            style={[\n              styles.filterButton,\n              activeFilter === filter && styles.activeFilterButton\n            ]}\n            onPress={() => setActiveFilter(filter)}\n          >\n            <Text style={[\n              styles.filterText,\n              activeFilter === filter && styles.activeFilterText\n            ]}>\n              {filter.charAt(0).toUpperCase() + filter.slice(1)}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      {/* TODO: UNCOMMONT THIS SECTION after mvp launch and implementation of mybookings screen\n      <TouchableOpacity\n        style={styles.viewAllButton}\n        onPress={() => navigateToFrom(navigation, 'MyBookings', 'Dashboard')}\n      >\n        <Text style={styles.viewAllText}>View All</Text>\n        <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n      </TouchableOpacity> */}\n    </View>\n  );\n\n  // Handle opening the booking modal\n  const handleViewBookingDetails = (bookingId) => {\n    setSelectedBookingId(bookingId);\n    setBookingModalVisible(true);\n    debugLog(\"MBA5677: Opening booking modal for ID:\", bookingId);\n  };\n\n  // Handle closing the booking modal\n  const handleCloseBookingModal = () => {\n    setBookingModalVisible(false);\n    setSelectedBookingId(null);\n  };\n\n  const renderBookings = () => (\n    <View style={styles.bookingsContainer}>\n      {isLoading ? (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"small\" color={colors.primary} />\n        </View>\n      ) : filteredBookings.length > 0 ? (\n        filteredBookings.map((booking) => {\n          debugLog('MBA5677: Rendering booking', { \n            id: is_prototype ? booking.id : booking.booking_id,\n            date: is_prototype ? booking.date : booking.start_date,\n            time: is_prototype ? booking.time : booking.start_time,\n            client_name: is_prototype ? booking.owner : booking.client_name,\n            professional_name: is_prototype ? booking.professional : booking.professional_name,\n            status: is_prototype ? booking.status : booking.status\n          });\n          \n          const bookingId = is_prototype ? booking.id : booking.booking_id;\n          \n          // Set name based on user role\n          let name;\n          if (isProfessional) {\n            name = is_prototype ? booking.owner : (booking.client_name || booking.owner_name || 'Client');\n            debugLog('MBA5677: Using client name', name);\n          } else {\n            name = is_prototype ? booking.professional : (booking.professional_name || 'Professional');\n            debugLog('MBA5677: Using professional name', name);\n          }\n          \n          return (\n            <BookingCard\n              key={bookingId}\n              booking={{\n                id: bookingId,\n                client_name: isProfessional ? name : null,\n                professional_name: !isProfessional ? name : null,\n                serviceName: is_prototype ? booking.service : booking.service_type,\n                date: is_prototype ? booking.date : booking.start_date,\n                time: is_prototype ? booking.time : booking.start_time,\n                status: is_prototype ? booking.status : booking.status,\n                pets: is_prototype ? [{ name: booking.pet }] : booking.pets\n              }}\n              type={isProfessional ? \"professional\" : \"client\"}\n              onViewDetails={() => handleViewBookingDetails(bookingId)}\n            />\n          );\n        })\n      ) : (\n        <View style={styles.emptyStateContainer}>\n          <MaterialCommunityIcons name=\"calendar\" size={48} color={theme.colors.textSecondary} />\n          <Text style={styles.emptyStateTitle}>No {activeFilter} bookings</Text>\n          <Text style={styles.emptyStateText}>\n            {isProfessional \n              ? 'Create services to start receiving bookings from owners.'\n              : 'Find professional services to book your first appointment.'}\n          </Text>\n          <TouchableOpacity\n            style={styles.createServiceButton}\n            onPress={() => navigateToFrom(navigation, \n              isProfessional ? 'ServiceManager' : 'SearchProfessionalsListing', \n              'Dashboard'\n            )}\n          >\n            <MaterialCommunityIcons \n              name={isProfessional ? \"plus\" : \"magnify\"} \n              size={20} \n              color={theme.colors.surface} \n            />\n            <Text style={styles.createServiceButtonText}>\n              {isProfessional ? 'Create Service' : 'Find Professionals'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderServiceCard = (service) => (\n    <View style={styles.serviceCard} key={service.id}>\n      <View style={styles.serviceContent}>\n        <View style={styles.serviceHeader}>\n          <Text \n            style={styles.serviceTitle}\n            numberOfLines={1}\n            ellipsizeMode=\"tail\"\n          >\n            {service.service_name}\n          </Text>\n          <Text style={styles.serviceRate}>${service.base_rate} {service.unit_of_time || 'Per Visit'}</Text>\n        </View>\n        <Text style={styles.serviceCategory}>{service.category || 'Exotic'}</Text>\n      </View>\n      <View style={styles.serviceFooter}>\n        {/* TODO: Implement this section after mvp */}\n        {/* <View style={styles.bookingsCount}>\n          <MaterialCommunityIcons name=\"calendar\" size={16} color={theme.colors.textSecondary} />\n          <Text style={styles.bookingsText}>{service.booking_count || 8} bookings</Text>\n        </View> */}\n        <TouchableOpacity \n          style={styles.viewButton}\n          onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard', { serviceId: service.id })}\n        >\n          <Text style={styles.viewButtonText}>View</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  const renderServices = () => {\n    if (!isProfessional) return null;\n\n    return (\n      <View style={styles.servicesContainer}>\n        <View style={styles.sectionHeader}>\n          <Text style={dynamicStyles.sectionTitle}>My Services</Text>\n          <TouchableOpacity\n            style={styles.viewAllButton}\n            onPress={() => navigateToFrom(navigation, 'ServiceManager', 'Dashboard')}\n          >\n            <Text style={styles.viewAllText}>View All</Text>\n            <MaterialCommunityIcons name=\"chevron-right\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.servicesGrid}>\n          {services.map(service => renderServiceCard(service))}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <ScrollView \n        style={[\n          styles.scrollView,\n          {\n            marginLeft: !isMobile && isSignedIn ? (isCollapsed ? 70 : 250) : 0,\n            marginTop: isMobile ? 60 : 0,\n          }\n        ]}\n        contentContainerStyle={[\n          styles.scrollViewContent,\n          {\n            maxWidth: 1200,\n            marginHorizontal: 'auto',\n            paddingTop: isMobile ? 24 : 0,\n          }\n        ]}\n      >\n        {/* TODO: Add back after mvp launch.{renderHeader()} */}\n        {renderWelcomeSection()}\n        {renderOnboardingProgress()}\n        {renderBookingFilters()}\n        {renderBookings()}\n        {renderServices()}\n      </ScrollView>\n      \n      {/* Custom BookingApprovalModal with modified title */}\n      <BookingApprovalModal\n        visible={bookingModalVisible}\n        onClose={handleCloseBookingModal}\n        bookingId={selectedBookingId}\n        isProfessional={isProfessional}\n        modalTitle=\"Review Details\" // Custom title for dashboard view\n        hideButtons={true} // Hide action buttons when viewed from dashboard\n      />\n      \n      {isTutorialVisible && stepData?.screen === 'Dashboard' && (\n        <TutorialModal\n          step={currentStep}\n          totalSteps={totalSteps}\n          title={stepData.title}\n          description={stepData.description}\n          position={stepData.position}\n          onNext={() => handleNext(navigation)}\n          onPrevious={handlePrevious}\n          onSkip={handleSkip}\n          onClose={completeTutorial}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: '#f5f5f5',\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n  },\n  scrollView: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  scrollViewContent: {\n    width: '100%',\n    paddingBottom: 40,\n  },\n  headerContainer: {\n    padding: 24,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight + 24 : 24,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n  },\n  notificationButton: {\n    position: 'relative',\n    padding: 8,\n  },\n  notificationBadge: {\n    position: 'absolute',\n    top: 4,\n    right: 4,\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  notificationCount: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  profileButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  welcomeSection: {\n    padding: 24,\n    // paddingTop: 0,\n  },\n  welcomeContent: {\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  welcomeCard: {\n    // backgroundColor: 'transparent',\n    backgroundImage: 'linear-gradient(to right, #6B6C53, #86C5D9)',\n    borderRadius: 12,\n    padding: 24,\n    marginBottom: 24,\n  },\n  welcomeHeader: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  welcomeTextContainer: {\n    flex: 1,\n    minWidth: 280,\n  },\n  statsContainer: {\n    padding: 24,\n    paddingTop: 0,\n    backgroundColor: '#f5f5f5',\n  },\n  statsGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(140px, 1fr))',\n    gap: 24,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  statCard: {\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    ...Platform.select({\n      ios: {\n        activeOpacity: 0.7,\n      },\n      android: {\n        android_ripple: {\n          color: 'rgba(0, 0, 0, 0.1)',\n        },\n      },\n    }),\n  },\n  statHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  statIconContainer: {\n    width: 48,\n    height: 48,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  bookingsContainer: {\n    padding: 24,\n    paddingTop: 0,\n    backgroundColor: '#f5f5f5',\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  bookingItem: {\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  bookingContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  bookingInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  bookingDetails: {\n    marginLeft: 12,\n  },\n  bookingTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  bookingTime: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  bookingStatus: {\n    alignItems: 'flex-end',\n  },\n  statusText: {\n    fontSize: 14,\n    fontWeight: '500',\n    marginBottom: 8,\n  },\n  progressBar: {\n    width: 100,\n    height: 4,\n    backgroundColor: theme.colors.border,\n    borderRadius: 2,\n    overflow: 'hidden',\n  },\n  progress: {\n    height: '100%',\n    backgroundColor: theme.colors.primary,\n  },\n  timeLeft: {\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n    marginTop: 4,\n  },\n  emptyStateContainer: {\n    padding: 40,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 24,\n  },\n  emptyStateTitle: {\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.text,\n    fontWeight: '600',\n    marginTop: 16,\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  emptyStateText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 24,\n  },\n  createServiceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#6B6C53',\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    gap: 8,\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n    paddingHorizontal: 24,\n    paddingVertical: 8,\n    borderRadius: 30,\n    // marginHorizontal: 24,\n  },\n  filterButtons: {\n    flexDirection: 'row',\n    backgroundColor: 'rgb(238, 241, 245)', //rgb(227, 229, 232)\n    padding: 4,\n    borderRadius: 5,\n    // gap: 4,\n  },\n  filterButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  activeFilterButton: {\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 3,\n    elevation: 2,\n  },\n  filterText: {\n    color: '#6B7280',\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  activeFilterText: {\n    color: '#111827',\n    fontWeight: '600',\n  },\n  viewAllButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n    paddingRight: 12,\n  },\n  viewAllText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  servicesContainer: {\n    padding: 24,\n    paddingTop: 0,\n    paddingBottom: 70,\n  },\n  sectionHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  servicesGrid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fill, minmax(300px, 1fr))',\n    gap: 16,\n  },\n  serviceCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 16,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 3,\n    elevation: 2,\n    justifyContent: 'space-between',\n  },\n  serviceContent: {\n    marginBottom: 20,\n  },\n  serviceHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 4,\n  },\n  serviceTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    maxWidth: '50%',\n  },\n  serviceCategory: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceFooter: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  bookingsCount: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  bookingsText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceRate: {\n    fontSize: 16,\n    color: '#6B6C53',\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  viewButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.05,\n    shadowRadius: 2,\n    elevation: 1,\n  },\n  viewButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default Dashboard;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, TextInput, StyleSheet, ScrollView, SafeAreaView, Platform, StatusBar, TouchableOpacity, ActivityIndicator, Alert, Image, useWindowDimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport * as ImagePicker from 'expo-image-picker';\nimport { AuthContext } from '../context/AuthContext';\nimport { navigateToFrom, handleBack } from '../components/Navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\n// TODO: mention to user initially we are doing a manual verification process, will implement automation later.\nconst BecomeProfessional = ({ navigation }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [selectedPets, setSelectedPets] = useState({\n    dog: false,\n    cat: false,\n    exotics: false,\n  });\n  const [about, setAbout] = useState('');\n  const [certifications, setCertifications] = useState([]);\n  const [insuranceProof, setInsuranceProof] = useState([]);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const initializeNavigation = async () => {\n      const currentRoute = Platform.OS === 'web' ? sessionStorage.getItem('currentRoute') : await AsyncStorage.getItem('currentRoute');\n      if (currentRoute !== 'BecomeProfessional') {\n        await navigateToFrom(navigation, 'BecomeProfessional', currentRoute);\n      } else {\n        if (is_DEBUG) {\n          console.log('Error, currentRoute is BecomeProfessional');\n        }\n      }\n    };\n    initializeNavigation();\n  }, []);\n\n  const handleBackPress = () => {\n    handleBack(navigation);\n  };\n\n  const togglePetSelection = (pet) => {\n    setSelectedPets({ ...selectedPets, [pet]: !selectedPets[pet] });\n  };\n\n  const pickCertification = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      const newCertification = {\n        uri: result.assets[0].uri,\n        base64: result.assets[0].base64,\n        name: result.assets[0].uri.split('/').pop()\n      };\n      setCertifications([...certifications, newCertification]);\n    }\n  };\n\n  const pickInsuranceProof = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      const newProof = {\n        uri: result.assets[0].uri,\n        base64: result.assets[0].base64,\n        name: result.assets[0].uri.split('/').pop()\n      };\n      setInsuranceProof([...insuranceProof, newProof]);\n    }\n  };\n\n  const removeCertification = (index) => {\n    setCertifications(certifications.filter((_, i) => i !== index));\n  };\n\n  const removeInsuranceProof = (index) => {\n    setInsuranceProof(insuranceProof.filter((_, i) => i !== index));\n  };\n\n  const handleSubmit = async () => {\n    setIsSubmitting(true);\n\n    \n      // Original submission logic for non-prototype mode\n      setTimeout(() => {\n        setIsSubmitting(false);\n        setSelectedPets({\n          dog: false,\n          cat: false,\n          exotics: false,\n        });\n        setAbout('');\n        setCertifications([]);\n        setInsuranceProof([]);\n        if (Platform.OS === 'web') {\n          window.confirm('Success: Your application has been submitted successfully!') && navigation.navigate('More');\n        } else {\n          Alert.alert('Success', 'Your application has been submitted successfully!', [\n            { text: 'OK', onPress: () => navigation.navigate('More', { screen: 'More', transition: 'slide' }) },\n          ]);\n        }\n      }, 2000);\n  };\n\n  const createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100vh',\n      overflow: 'hidden',\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n      transition: 'margin-left 0.3s ease',\n    },\n    container: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n    },\n    scrollContent: {\n      flexGrow: 1,\n      padding: screenWidth <= 900 ? 16 : 20,\n      width: screenWidth > 900 ? '60%' : '90%',\n      maxWidth: 800,\n      alignSelf: 'center',\n    },\n    header: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: 16,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.border,\n      display: screenWidth <= 900 ? 'flex' : 'none',\n    },\n    backButton: {\n      marginRight: 16,\n    },\n    headerText: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: theme.colors.primary,\n    },\n    title: {\n      fontSize: screenWidth <= 900 ? 24 : 32,\n      color: theme.colors.text,\n      textAlign: 'center',\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    label: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      marginBottom: screenWidth <= 900 ? 8 : 12,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    checkboxContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      justifyContent: screenWidth <= 900 ? 'space-between' : 'flex-start',\n      gap: screenWidth <= 900 ? 8 : 16,\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n    },\n    petButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: screenWidth <= 900 ? 8 : 12,\n      borderWidth: 1,\n      borderColor: theme.colors.primary,\n      borderRadius: 8,\n      backgroundColor: theme.colors.surface,\n      minWidth: screenWidth <= 900 ? '45%' : 150,\n    },\n    selectedPetButton: {\n      backgroundColor: theme.colors.primary,\n    },\n    petButtonText: {\n      marginLeft: 8,\n      color: theme.colors.primary,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedPetButtonText: {\n      color: theme.colors.surface,\n    },\n    textInput: {\n      borderColor: theme.colors.border,\n      borderWidth: 1,\n      borderRadius: 8,\n      padding: screenWidth <= 900 ? 12 : 16,\n      marginBottom: screenWidth <= 900 ? 16 : 24,\n      backgroundColor: theme.colors.inputBackground,\n      minHeight: 120,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    uploadButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: screenWidth <= 900 ? 12 : 16,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      borderStyle: 'dashed',\n      marginBottom: screenWidth <= 900 ? 12 : 16,\n    },\n    uploadText: {\n      marginLeft: 8,\n      color: theme.colors.text,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    uploadedFileContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.colors.surfaceVariant,\n      padding: screenWidth <= 900 ? 8 : 12,\n      borderRadius: 8,\n      marginBottom: 8,\n    },\n    uploadedFilePreview: {\n      width: 40,\n      height: 40,\n      borderRadius: 4,\n      marginRight: 8,\n    },\n    certificationText: {\n      flex: 1,\n      fontSize: theme.fontSizes.small,\n      color: theme.colors.text,\n      marginRight: 8,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    removeFileButton: {\n      padding: 4,\n    },\n    submitButton: {\n      backgroundColor: theme.colors.primary,\n      padding: screenWidth <= 900 ? 12 : 16,\n      borderRadius: 8,\n      alignItems: 'center',\n      marginTop: screenWidth <= 900 ? 20 : 32,\n    },\n    submitButtonDisabled: {\n      opacity: 0.6,\n    },\n    submitButtonText: {\n      color: theme.colors.surface,\n      fontSize: theme.fontSizes.medium,\n      fontWeight: 'bold',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    loadingIndicator: {\n      marginTop: 16,\n    },\n    formContainer: {\n      width: '100%',\n    },\n  });\n\n  return (\n    <View style={createStyles(screenWidth, isCollapsed).mainContainer}>\n      <SafeAreaView style={createStyles(screenWidth, isCollapsed).container}>\n        {isMobile && (\n          <View style={createStyles(screenWidth, isCollapsed).header}>\n            <TouchableOpacity onPress={handleBackPress} style={createStyles(screenWidth, isCollapsed).backButton}>\n              <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n            </TouchableOpacity>\n            <Text style={createStyles(screenWidth, isCollapsed).headerText}>Become a Professional</Text>\n          </View>\n        )}\n        \n        <ScrollView contentContainerStyle={createStyles(screenWidth, isCollapsed).scrollContent}>\n          <View style={createStyles(screenWidth, isCollapsed).formContainer}>\n            <Text style={createStyles(screenWidth, isCollapsed).title}>Become a Professional</Text>\n            \n            <Text style={createStyles(screenWidth, isCollapsed).label}>Select Pets You Can Sit:</Text>\n            <View style={createStyles(screenWidth, isCollapsed).checkboxContainer}>\n              {['dog', 'cat', 'exotics'].map((pet) => (\n                <TouchableOpacity\n                  key={pet}\n                  style={[\n                    createStyles(screenWidth, isCollapsed).petButton,\n                    selectedPets[pet] && createStyles(screenWidth, isCollapsed).selectedPetButton,\n                  ]}\n                  onPress={() => togglePetSelection(pet)}\n                >\n                  <MaterialCommunityIcons\n                    name={pet === 'exotics' ? 'turtle' : pet}\n                    size={24}\n                    color={selectedPets[pet] ? theme.colors.surface : theme.colors.primary}\n                  />\n                  <Text style={[\n                    createStyles(screenWidth, isCollapsed).petButtonText,\n                    selectedPets[pet] && createStyles(screenWidth, isCollapsed).selectedPetButtonText\n                  ]}>\n                    {pet.charAt(0).toUpperCase() + pet.slice(1)}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </View>\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>About You:</Text>\n            <TextInput\n              style={createStyles(screenWidth, isCollapsed).textInput}\n              multiline\n              numberOfLines={4}\n              placeholder=\"Write a little about yourself...\"\n              value={about}\n              onChangeText={setAbout}\n            />\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>Upload Certifications/Resume:</Text>\n            <TouchableOpacity style={createStyles(screenWidth, isCollapsed).uploadButton} onPress={pickCertification}>\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.text} />\n              <Text style={createStyles(screenWidth, isCollapsed).uploadText}>Upload Documents</Text>\n            </TouchableOpacity>\n            {certifications.map((cert, index) => (\n              <View key={index} style={createStyles(screenWidth, isCollapsed).uploadedFileContainer}>\n                <Image source={{ uri: cert.uri }} style={createStyles(screenWidth, isCollapsed).uploadedFilePreview} />\n                <Text style={createStyles(screenWidth, isCollapsed).certificationText} numberOfLines={1}>\n                  {cert.name}\n                </Text>\n                <TouchableOpacity \n                  style={createStyles(screenWidth, isCollapsed).removeFileButton}\n                  onPress={() => removeCertification(index)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            ))}\n\n            <Text style={createStyles(screenWidth, isCollapsed).label}>Upload Insurance Proof:</Text>\n            <TouchableOpacity style={createStyles(screenWidth, isCollapsed).uploadButton} onPress={pickInsuranceProof}>\n              <MaterialCommunityIcons name=\"file-upload\" size={24} color={theme.colors.text} />\n              <Text style={createStyles(screenWidth, isCollapsed).uploadText}>Upload Insurance</Text>\n            </TouchableOpacity>\n            {insuranceProof.map((proof, index) => (\n              <View key={index} style={createStyles(screenWidth, isCollapsed).uploadedFileContainer}>\n                <Image source={{ uri: proof.uri }} style={createStyles(screenWidth, isCollapsed).uploadedFilePreview} />\n                <Text style={createStyles(screenWidth, isCollapsed).certificationText} numberOfLines={1}>\n                  {proof.name}\n                </Text>\n                <TouchableOpacity \n                  style={createStyles(screenWidth, isCollapsed).removeFileButton}\n                  onPress={() => removeInsuranceProof(index)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n                </TouchableOpacity>\n              </View>\n            ))}\n\n            <TouchableOpacity \n              style={[\n                createStyles(screenWidth, isCollapsed).submitButton,\n                isSubmitting && createStyles(screenWidth, isCollapsed).submitButtonDisabled\n              ]} \n              onPress={handleSubmit} \n              disabled={isSubmitting}\n            >\n              <Text style={createStyles(screenWidth, isCollapsed).submitButtonText}>\n                {isSubmitting ? 'Submitting...' : 'Submit Application'}\n              </Text>\n            </TouchableOpacity>\n            \n            {isSubmitting && (\n              <ActivityIndicator \n                style={createStyles(screenWidth, isCollapsed).loadingIndicator} \n                size=\"small\" \n                color={theme.colors.primary} \n              />\n            )}\n          </View>\n        </ScrollView>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nexport default BecomeProfessional;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { View, StyleSheet, Alert, Platform, SafeAreaView, StatusBar } from 'react-native';\nimport { List, Divider, Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst MoreScreen = ({ navigation }) => {\n  const { isSignedIn, isApprovedProfessional, userRole, switchRole, signOut, screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const initializeRoutes = async () => {\n      try {\n        const initialRoute = isSignedIn \n          ? 'Dashboard'\n          : 'Home';\n\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('currentRoute', initialRoute);\n          sessionStorage.setItem('previousRoute', 'More');\n        } else {\n          await AsyncStorage.setItem('currentRoute', initialRoute);\n          await AsyncStorage.setItem('previousRoute', 'More');\n        }\n      } catch (error) {\n        console.error('Error initializing routes:', error);\n      }\n    };\n\n    initializeRoutes();\n  }, [isSignedIn, userRole]);\n\n  const handleNavigation = async (route, tab) => {\n    try {\n      await navigateToFrom(navigation, route, 'More', tab);\n    } catch (error) {\n      console.error('Error handling navigation:', error);\n      navigation.navigate(route);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await signOut();\n      // Clear navigation history on logout\n      if (Platform.OS === 'web') {\n        sessionStorage.removeItem('currentRoute');\n        sessionStorage.removeItem('previousRoute');\n      } else {\n        await AsyncStorage.multiRemove(['currentRoute', 'previousRoute']);\n      }\n      Alert.alert('Logged Out', 'You have been successfully logged out.');\n      navigation.navigate('Home');\n    } catch (error) {\n      console.error('Logout failed', error);\n      Alert.alert('Logout Failed', 'An error occurred while logging out.');\n    }\n  };\n\n  const handleSwitchRole = async () => {\n    if (isApprovedProfessional) {\n      const newRole = userRole === 'professional' ? 'petOwner' : 'professional';\n      \n      await switchRole();\n      \n      // Store new route before navigating\n      const newRoute = 'Dashboard';\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('currentRoute', newRoute);\n      } else {\n        await AsyncStorage.setItem('currentRoute', newRoute);\n      }\n      \n      // Add a small delay to ensure state is updated before navigation\n      setTimeout(() => {\n        navigation.navigate(newRoute);\n      }, 0);\n    } else {\n      Alert.alert('Not Approved', 'You are not approved as a professional yet.');\n      handleNavigation('BecomeProfessional', 'Overview');\n    }\n  };\n\n  const menuItems = {\n    notSignedIn: [\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n    ],\n    petOwner: [\n      { title: 'Profile', icon: 'account', route: 'MyProfile' },\n      { title: 'My Bookings', icon: 'calendar-clock', route: 'MyBookings' },\n      { title: 'Payment Methods', icon: 'credit-card', route: 'PaymentMethods' },\n      { title: 'Become a Professional', icon: 'account-tie', route: 'BecomeProfessional' },\n      { title: 'Settings', icon: 'cog', route: 'Settings' },\n      { title: 'Blog', icon: 'post', route: 'Blog' },\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n      { title: 'Contact Us', icon: 'email', route: 'ContactUs' },\n    ],\n    professional: [\n      { title: 'Profile', icon: 'account', route: 'MyProfile' },\n      { title: 'My Services', icon: 'briefcase-outline', route: 'ServiceManager' },\n      { title: 'My Bookings', icon: 'calendar-clock', route: 'MyBookings' },\n      { title: 'Payment Methods', icon: 'credit-card', route: 'PaymentMethods' },\n      { title: 'Settings', icon: 'cog', route: 'Settings' },\n      { title: 'Blog', icon: 'post', route: 'Blog' },\n      { title: 'Privacy Policy', icon: 'shield-account', route: 'PrivacyPolicy' },\n      { title: 'Terms of Service', icon: 'file-document', route: 'TermsOfService' },\n      { title: 'Contact Us', icon: 'email', route: 'ContactUs' },\n    ],\n  };\n\n  const renderMenuItems = () => {\n    let items;\n    if (!isSignedIn) {\n      items = menuItems.notSignedIn;\n    } else if (userRole === 'professional') {\n      items = menuItems.professional;\n    } else {\n      items = menuItems.petOwner;\n    }\n\n    return items.map((item, index) => (\n      <React.Fragment key={index}>\n        <List.Item\n          title={item.title}\n          titleStyle={styles.listItemTitle}\n          left={props => \n            Platform.OS === 'web' \n              ? <MaterialCommunityIcons \n                  name={item.icon} \n                  size={screenWidth <= 900 ? 20 : 24} \n                  color={theme.colors.primary} \n                />\n              : <List.Icon {...props} icon={item.icon} />\n          }\n          onPress={() => handleNavigation(item.route, item.tab)}\n          style={[\n            styles.webListItem,\n            { paddingHorizontal: screenWidth <= 900 ? 8 : 16 }\n          ]}\n        />\n        {index < items.length - 1 && <Divider />}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          <View style={styles.webContent}>\n            <List.Section style={styles.listSection}>\n              {renderMenuItems()}\n            </List.Section>\n            {isSignedIn && (\n              <View style={styles.buttonContainer}>\n                <Button \n                  mode=\"contained\" \n                  onPress={handleLogout} \n                  style={[styles.logoutButton]}\n                  labelStyle={styles.buttonText}\n                >\n                  Log Out\n                </Button>\n              </View>\n            )}\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  webContent: {\n    width: '100%',\n    maxWidth: screenWidth > 900 ? 800 : 600,\n    alignSelf: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n    paddingTop: screenWidth <= 900 ? 80 : 16,\n  },\n  listSection: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 16,\n  },\n  webListItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingVertical: screenWidth <= 900 ? 8 : 12,\n  },\n  listItemTitle: {\n    fontSize: screenWidth <= 900 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  buttonContainer: {\n    marginBottom: 16,\n  },\n  switchRoleButton: {\n    borderColor: theme.colors.primary,\n  },\n  logoutButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  }\n});\n\nexport default MoreScreen;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\n\nconst UnavailableTimeSlot = ({ startTime, endTime, reason, onPress, onRemove }) => {\n  const [showAllServices, setShowAllServices] = useState(false);\n  \n  const isAllDay = startTime === '00:00' && endTime === '24:00';\n\n  const formatTime = (time) => {\n    if (isAllDay) {\n      return 'All Day';\n    }\n    \n    if (typeof time === 'string') {\n      try {\n        const date = parse(time, 'HH:mm', new Date());\n        return format(date, 'h:mm a');\n      } catch (error) {\n        console.warn(`Invalid time format: ${time}`);\n        return 'Invalid Time';\n      }\n    } else if (time instanceof Date) {\n      return format(time, 'h:mm a');\n    } else {\n      console.warn(`Invalid time format: ${time}`);\n      return 'Invalid Time';\n    }\n  };\n\n  const formatServicesDisplay = () => {\n    const services = reason?.replace('Unavailable for: ', '').split(', ') || [];\n    \n    if (services.length === 0) return 'No services specified';\n    if (services.length === 10) return 'All Services';\n    return `${services.length} ${services.length === 1 ? 'Service' : 'Services'}`;\n  };\n\n  return (\n    <>\n      <View style={styles.container}>\n        <TouchableOpacity \n          style={styles.removeButton} \n          onPress={onRemove}\n        >\n          <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.error} />\n        </TouchableOpacity>\n        \n        <View style={styles.contentContainer}>\n          <Text style={styles.time}>\n            {isAllDay ? 'All Day' : `${formatTime(startTime)} - ${formatTime(endTime)}`}\n          </Text>\n          <View style={styles.serviceContainer}>\n            <Text style={styles.reason}>{formatServicesDisplay()}</Text>\n            {reason && (\n              <TouchableOpacity \n                onPress={() => setShowAllServices(true)}\n                style={styles.seeMoreButton}\n              >\n                <Text style={styles.seeMoreText}>See All</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n      </View>\n\n      <Modal\n        visible={showAllServices}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowAllServices(false)}\n      >\n        <TouchableOpacity \n          style={styles.modalOverlay}\n          activeOpacity={1}\n          onPress={() => setShowAllServices(false)}\n        >\n          <View style={styles.modalContent}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Unavailable Services</Text>\n              <TouchableOpacity onPress={() => setShowAllServices(false)}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n            <Text style={styles.modalTime}>\n              {formatTime(startTime)} - {formatTime(endTime)}\n            </Text>\n            {reason?.replace('Unavailable for: ', '').split(', ').map((service, index) => (\n              <Text key={index} style={styles.serviceItem}>• {service}</Text>\n            ))}\n          </View>\n        </TouchableOpacity>\n      </Modal>\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n    backgroundColor: theme.colors.lightGrey,\n    borderRadius: 5,\n    marginBottom: 5,\n  },\n  removeButton: {\n    padding: 5,\n    marginRight: 5,\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  time: {\n    fontSize: theme.fontSizes.small,\n    fontWeight: 'bold',\n    flex: 1,\n  },\n  serviceContainer: {\n    flex: 2,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  reason: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n    marginRight: 8,\n  },\n  seeMoreButton: {\n    padding: 4,\n    borderRadius: 4,\n    backgroundColor: theme.colors.primary,\n  },\n  seeMoreText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.small,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    width: '80%',\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  modalTime: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 12,\n  },\n  serviceItem: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    paddingVertical: 4,\n  },\n});\n\nexport default UnavailableTimeSlot;\n","// First, create a new BookingCard component\n// src/components/BookingCard.js\n\nimport React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { format, parse } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\n\nconst AvailabilityBookingCard = ({ booking, onPress, onEdit }) => {\n  const navigation = useNavigation();\n  const formatTime = (time) => {\n    try {\n      const date = parse(time, 'HH:mm', new Date());\n      return format(date, 'h:mm a');\n    } catch (error) {\n      console.warn(`Invalid time format: ${time}`);\n      return 'Invalid Time';\n    }\n  };\n\n  const handlePress = () => {\n    if (onPress) {\n      onPress(booking);\n    }\n  };\n\n  return (\n    <TouchableOpacity \n      style={styles.card} \n      onPress={handlePress}\n    >\n      <View style={styles.cardContent}>\n        <View style={styles.timeContainer}>\n          <MaterialCommunityIcons name=\"clock-outline\" size={20} color={theme.colors.primary} />\n          <Text style={styles.timeText}>\n            {formatTime(booking.startTime)} - {formatTime(booking.endTime)}\n          </Text>\n        </View>\n        <Text style={styles.ownerName}>Booked with {booking.owner_name}</Text>\n      </View>\n      <TouchableOpacity \n        style={styles.editButton} \n        onPress={handlePress}\n      >\n        <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n      </TouchableOpacity>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  cardContent: {\n    flex: 1,\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  timeText: {\n    marginLeft: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  ownerName: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  editButton: {\n    padding: 8,\n  },\n});\n\nexport default AvailabilityBookingCard;","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\n\nconst TimePicker = ({ \n  label, \n  value, \n  onChange, \n  fullWidth = false, \n  containerStyle,\n  error,\n  disabled = false \n}) => {\n  const [showPicker, setShowPicker] = React.useState(false);\n  const { screenWidth } = useContext(AuthContext);\n  const showClockIcon = screenWidth > 400;\n\n  const handleChange = (event, selectedDate) => {\n    setShowPicker(Platform.OS === 'ios');\n    if (selectedDate) {\n      onChange(selectedDate);\n    }\n  };\n\n  const showTimepicker = () => {\n    setShowPicker(true);\n  };\n\n  if (Platform.OS === 'web') {\n    // Add browser detection for Chrome\n    const isChrome = typeof navigator !== 'undefined' && /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n    // Create style element using React.createElement to avoid JSX parsing on mobile\n    const styleElement = React.createElement('style', {}, `\n      input[type=\"time\"]::-webkit-calendar-picker-indicator {\n        display: ${showClockIcon && isChrome ? 'block' : 'none'};\n      }\n      input[type=\"time\"]::-webkit-inner-spin-button,\n      input[type=\"time\"]::-webkit-clear-button {\n        display: none;\n      }\n    `);\n\n    // Create input element using React.createElement\n    const inputElement = React.createElement('input', {\n      type: 'time',\n      value: value.toTimeString().slice(0, 5),\n      onChange: (e) => onChange(new Date(`2000-01-01T${e.target.value}`)),\n      style: {\n        ...styles.webInput,\n        paddingRight: '12px',\n      },\n      disabled: disabled\n    });\n\n    const handleIconPress = () => {\n      if (!disabled && typeof document !== 'undefined') {\n        const input = document.querySelector('input[type=\"time\"]');\n        if (input && typeof input.showPicker === 'function') {\n          input.showPicker();\n        }\n      }\n    };\n\n    return (\n      <View style={[styles.container, fullWidth && styles.fullWidth, containerStyle]}>\n        {label && <Text style={[styles.label, error && styles.errorText]}>{label}</Text>}\n        <View style={[\n          styles.webInputContainer,\n          !fullWidth && styles.compactTimeButton,\n          error && styles.errorBorder,\n          disabled && styles.disabled\n        ]}>\n          {styleElement}\n          {inputElement}\n          {showClockIcon && !isChrome && (\n            <MaterialCommunityIcons \n              name=\"clock-outline\" \n              size={24} \n              color={disabled ? theme.colors.placeholder : theme.colors.text}\n              style={styles.webIcon}\n              onPress={disabled ? null : handleIconPress}\n            />\n          )}\n        </View>\n        {error && <Text style={styles.errorMessage}>{error}</Text>}\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, fullWidth && styles.fullWidth, containerStyle]}>\n      {label && <Text style={[styles.label, error && styles.errorText]}>{label}</Text>}\n      <TouchableOpacity \n        onPress={showTimepicker}\n        style={[\n          styles.timeButton, \n          !fullWidth && styles.compactTimeButton,\n          error && styles.errorBorder,\n          disabled && styles.disabled\n        ]}\n        disabled={disabled}\n      >\n        <Text style={[styles.timeText, disabled && styles.disabledText]}>\n          {value.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n        </Text>\n        {showClockIcon && (\n          <MaterialCommunityIcons \n            name=\"clock-outline\" \n            size={24} \n            color={disabled ? theme.colors.placeholder : theme.colors.text} \n          />\n        )}\n      </TouchableOpacity>\n      {error && <Text style={styles.errorMessage}>{error}</Text>}\n      {showPicker && (\n        <DateTimePicker\n          value={value}\n          mode=\"time\"\n          is24Hour={true}\n          display=\"default\"\n          onChange={handleChange}\n          disabled={disabled}\n        />\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // marginVertical: 8,\n    // marginBottom: 8,\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  label: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n    fontWeight: '500',\n  },\n  timeButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 8,\n    backgroundColor: theme.colors.background,\n    minHeight: 20,\n  },\n  compactTimeButton: {\n    width: 150,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  webInputContainer: {\n    position: 'relative',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    backgroundColor: theme.colors.background,\n    overflow: 'hidden',\n    height: 40,\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  webInput: {\n    // padding: '8px 36px 8px 12px',\n    fontSize: theme.fontSizes.medium,\n    marginLeft: 12,\n    width: '90%',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    backgroundColor: 'transparent',\n    color: theme.colors.text,\n  },\n  webIcon: {\n    position: 'absolute',\n    right: 12,\n    cursor: 'pointer',\n    pointerEvents: 'auto',\n  },\n  errorBorder: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  disabled: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  disabledText: {\n    color: theme.colors.placeholder,\n  },\n});\n\nexport default TimePicker;\n\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, Switch, Platform, Dimensions, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\nimport UnavailableTimeSlot from './UnavailableTimeSlot';\nimport { format, parse } from 'date-fns';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SERVICE_TYPES, ALL_SERVICES } from '../data/mockData';\nimport AvailabilityBookingCard from './AvailabilityBookingCard';\nimport { useNavigation } from '@react-navigation/native';\nimport TimePicker from './TimePicker';\n\nconst { width, height: SCREEN_HEIGHT } = Dimensions.get('window');\nconst modalWidth = Platform.OS === 'web' ? width * 0.4 : width * 0.9;\n\nconst AddAvailabilityModal = ({ isVisible: propIsVisible, onClose, onSave, selectedDates, currentAvailability, bookings, onRemoveTimeSlot }) => {\n  const [isVisible, setIsVisible] = useState(propIsVisible);\n  const [isAllDay, setIsAllDay] = useState(false);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [showStartTimePicker, setShowStartTimePicker] = useState(false);\n  const [showEndTimePicker, setShowEndTimePicker] = useState(false);\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [modalWidth, setModalWidth] = useState(getModalWidth());\n  const [activeView, setActiveView] = useState('bookings');\n  const [editingBooking, setEditingBooking] = useState(null);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    setIsVisible(propIsVisible);\n  }, [propIsVisible]);\n\n  function getModalWidth() {\n    const { width } = Dimensions.get('window');\n    return width < 600 ? width * 0.9 : width * 0.4;\n  }\n\n  useEffect(() => {\n    const updateWidth = () => {\n      setModalWidth(getModalWidth());\n    };\n\n    const dimensionsHandler = Dimensions.addEventListener('change', updateWidth);\n\n    return () => {\n      dimensionsHandler.remove();\n    };\n  }, []);\n\n  const isTimeSlotUnavailable = () => {\n    if (!startTime || !endTime || isAllDay) return false;\n    \n    return selectedDates.some(date => {\n      const existingTimes = currentAvailability[date]?.unavailableTimes || [];\n      return existingTimes.some(time => {\n        const [existingStartHour, existingStartMin] = time.startTime.split(':').map(Number);\n        const [existingEndHour, existingEndMin] = time.endTime.split(':').map(Number);\n        const newStartStr = format(startTime, 'HH:mm');\n        const newEndStr = format(endTime, 'HH:mm');\n        const [newStartHour, newStartMin] = newStartStr.split(':').map(Number);\n        const [newEndHour, newEndMin] = newEndStr.split(':').map(Number);\n        \n        return newStartHour === existingStartHour && \n               newStartMin === existingStartMin && \n               newEndHour === existingEndHour && \n               newEndMin === existingEndMin;\n      });\n    });\n  };\n\n  const handleMarkUnavailable = () => {\n    if (selectedServices.length === 0 || isTimeSlotUnavailable()) return;\n    \n    const services = selectedServices.includes(ALL_SERVICES) \n      ? SERVICE_TYPES.filter(service => service !== ALL_SERVICES) \n      : selectedServices;\n\n    onSave({\n      dates: selectedDates,\n      isAllDay,\n      startTime: isAllDay ? null : format(startTime, 'HH:mm'),\n      endTime: isAllDay ? null : format(endTime, 'HH:mm'),\n      isUnavailable: true,\n      serviceTypes: services,\n      reason: `Unavailable for: ${services.join(', ')}`,\n    });\n  };\n\n  const handleMarkAvailable = () => {\n    if (selectedServices.length === 0 || !isTimeSlotUnavailable()) return;\n\n    const newStartStr = format(startTime, 'HH:mm');\n    const newEndStr = format(endTime, 'HH:mm');\n\n    const updatedAvailability = {};\n    \n    selectedDates.forEach(selectedDate => {\n      if (currentAvailability[selectedDate]?.unavailableTimes) {\n        const currentTimes = currentAvailability[selectedDate].unavailableTimes;\n        const filteredTimes = currentTimes.filter(time => \n          time.startTime !== newStartStr || time.endTime !== newEndStr\n        );\n\n        updatedAvailability[selectedDate] = {\n          ...currentAvailability[selectedDate],\n          unavailableTimes: filteredTimes\n        };\n      }\n    });\n\n    onRemoveTimeSlot(selectedDates[0], { startTime: newStartStr, endTime: newEndStr }, updatedAvailability, selectedDates);\n  };\n\n  const handleRemoveTimeSlot = (date, timeSlot) => {\n    if (selectedDates.length === 1) {\n      onRemoveTimeSlot(date, timeSlot);\n      return;\n    }\n\n    const updatedAvailability = {};\n    \n    selectedDates.forEach(selectedDate => {\n      if (currentAvailability[selectedDate]?.unavailableTimes) {\n        const currentTimes = currentAvailability[selectedDate].unavailableTimes;\n        const filteredTimes = currentTimes.filter(time => \n          time.startTime !== timeSlot.startTime || time.endTime !== timeSlot.endTime\n        );\n\n        updatedAvailability[selectedDate] = {\n          ...currentAvailability[selectedDate],\n          unavailableTimes: filteredTimes\n        };\n      }\n    });\n\n    onRemoveTimeSlot(date, timeSlot, updatedAvailability, selectedDates);\n  };\n\n  const renderUnavailableTimes = () => {\n    if (selectedDates.length === 0) return null;\n\n    const date = selectedDates[0];\n    const unavailableTimes = currentAvailability[date]?.unavailableTimes || [];\n\n    if (unavailableTimes.length === 0) return null;\n\n    return (\n      <View style={styles.unavailableTimesContainer}>\n        <Text style={styles.sectionTitle}>Unavailable Times:</Text>\n        <ScrollView>\n          {unavailableTimes.map((time, index) => (\n            <UnavailableTimeSlot\n              key={index}\n              startTime={time.startTime}\n              endTime={time.endTime}\n              reason={time.reason}\n              onRemove={() => handleRemoveTimeSlot(date, time)}\n            />\n          ))}\n        </ScrollView>\n      </View>\n    );\n  };\n\nconst renderTimePicker = () => (\n  <>\n    <View style={styles.timePickerContainer}>\n      <Text>Start Time:</Text>\n      <TimePicker\n        value={startTime}\n        onChange={setStartTime}\n        showPicker={showStartTimePicker}\n        setShowPicker={setShowStartTimePicker}\n        fullWidth\n      />\n    </View>\n    <View style={styles.timePickerContainer}>\n      <Text>End Time:</Text>\n      <TimePicker\n        value={endTime}\n        onChange={setEndTime}\n        showPicker={showEndTimePicker}\n        setShowPicker={setShowEndTimePicker}\n        fullWidth\n      />\n    </View>\n  </>\n);\n\nconst formatSelectedDates = () => {\n  if (!selectedDates || selectedDates.length === 0) return '';\n  \n  const startDate = selectedDates[0];\n  const endDate = selectedDates[selectedDates.length - 1];\n  \n  if (startDate === endDate) {\n    return startDate;\n  }\n  \n  return `${startDate} - ${endDate}`;\n};\n\nconst handleEditBooking = async (booking) => {\n  setEditingBooking(booking);\n  // Implement your booking edit logic here\n  try {\n    const response = await updateBooking({\n      ...booking,\n      // Add your updated booking data\n    });\n    \n    if (response.success) {\n      // Update local state\n      // Implement your state update logic\n    }\n  } catch (error) {\n    console.error('Failed to update booking:', error);\n  }\n};\n\nconst renderToggleButtons = () => (\n  <View style={styles.toggleContainer}>\n    <TouchableOpacity\n      style={[\n        styles.toggleButton,\n        activeView === 'unavailable' && styles.activeToggle\n      ]}\n      onPress={() => setActiveView('unavailable')}\n    >\n      <Text style={[\n        styles.toggleText,\n        activeView === 'unavailable' && styles.activeToggleText\n      ]}>\n        Unavailable Times\n      </Text>\n    </TouchableOpacity>\n    <TouchableOpacity\n      style={[\n        styles.toggleButton,\n        activeView === 'bookings' && styles.activeToggle\n      ]}\n      onPress={() => setActiveView('bookings')}\n    >\n      <Text style={[\n        styles.toggleText,\n        activeView === 'bookings' && styles.activeToggleText\n      ]}>\n        Bookings\n      </Text>\n    </TouchableOpacity>\n  </View>\n);\n\nconst renderBookings = () => {\n  const dateBookings = selectedDates.reduce((acc, date) => {\n    if (bookings[date]) {\n      acc.push(...bookings[date].map(booking => ({\n        ...booking,\n        date\n      })));\n    }\n    return acc;\n  }, []);\n\n  if (dateBookings.length === 0) {\n    return (\n      <View style={styles.emptyState}>\n        <MaterialCommunityIcons \n          name=\"calendar-blank\" \n          size={48} \n          color={theme.colors.textSecondary} \n        />\n        <Text style={styles.emptyStateText}>No bookings for selected dates</Text>\n      </View>\n    );\n  }\n\n  const handleBookingPress = (booking) => {\n    onClose();\n    \n    // Navigate after a short delay\n    setTimeout(() => {\n      navigation.navigate('BookingDetails', { bookingId: booking.id });\n    }, 300);\n  };\n\n  return (\n    <View style={styles.bookingsContainer}>\n      <ScrollView \n        style={styles.bookingsList}\n        nestedScrollEnabled={true}\n      >\n        {dateBookings.map((booking, index) => (\n          <AvailabilityBookingCard\n            key={index}\n            booking={booking}\n            onPress={() => handleBookingPress(booking)}\n            onEdit={() => handleBookingPress(booking)}\n          />\n        ))}\n      </ScrollView>\n    </View>\n  );\n};\n\n  return (\n    <Modal\n      visible={isVisible}\n      animationType=\"slide\"\n      transparent={true}\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={[styles.modalContent, { width: modalWidth }]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>\n              {selectedDates.length > 1 ? 'Edit Multiple Days' : 'Edit Availability'}\n            </Text>\n            <TouchableOpacity \n              style={styles.closeButton} \n              onPress={onClose}\n            >\n              <MaterialCommunityIcons \n                name=\"close\" \n                size={24} \n                color={theme.colors.text} \n              />\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.selectedDatesText}>\n            Selected Dates: {formatSelectedDates()}\n          </Text>\n\n          {renderToggleButtons()}\n          \n          <ScrollView \n            style={styles.contentScrollView}\n            nestedScrollEnabled={true}\n          >\n            {activeView === 'unavailable' ? (\n              <View style={styles.unavailableTimesWrapper}>\n                {renderUnavailableTimes()}\n              </View>\n            ) : (\n              <View style={styles.bookingsWrapper}>\n                {renderBookings()}\n              </View>\n            )}\n\n            <View style={styles.availabilityControls}>\n              <View style={styles.inputWrapper}>\n                <Text style={styles.inputLabel}>Service Type(s) *</Text>\n                <TouchableOpacity\n                  style={[\n                    styles.input,\n                    styles.customDropdown,\n                    selectedServices.length === 0 && styles.inputError\n                  ]}\n                  onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n                >\n                  <Text style={{\n                    color: selectedServices.length > 0 ? theme.colors.text : theme.colors.placeHolderText\n                  }}>\n                    {selectedServices.length > 0 \n                      ? selectedServices.includes(ALL_SERVICES)\n                        ? \"All Services\"\n                        : selectedServices.length > 1\n                          ? `${selectedServices.length} services selected`\n                          : selectedServices[0]\n                      : \"Select service type(s)\"\n                    }\n                  </Text>\n                  <MaterialCommunityIcons \n                    name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n                    size={24} \n                    color={theme.colors.primary} \n                  />\n                </TouchableOpacity>\n                \n                {showServiceDropdown && (\n                  <View style={styles.dropdownContainer}>\n                    <ScrollView style={styles.dropdownScroll}>\n                      {SERVICE_TYPES.map((service) => (\n                        <TouchableOpacity\n                          key={service}\n                          style={styles.dropdownItem}\n                          onPress={() => {\n                            if (service === ALL_SERVICES) {\n                              setSelectedServices(\n                                selectedServices.includes(ALL_SERVICES) \n                                  ? [] \n                                  : [ALL_SERVICES]\n                              );\n                            } else {\n                              setSelectedServices(prev => {\n                                // Remove \"All Services\" if it was selected\n                                const withoutAll = prev.filter(s => s !== ALL_SERVICES);\n                                \n                                if (prev.includes(service)) {\n                                  return withoutAll.filter(s => s !== service);\n                                } else {\n                                  return [...withoutAll, service];\n                                }\n                              });\n                            }\n                          }}\n                        >\n                          <View style={styles.dropdownItemContent}>\n                            <Text style={[\n                              styles.dropdownText,\n                              selectedServices.includes(service) && styles.selectedOption\n                            ]}>\n                              {service}\n                            </Text>\n                            {selectedServices.includes(service) && (\n                              <MaterialCommunityIcons \n                                name=\"check\" \n                                size={20} \n                                color={theme.colors.primary} \n                              />\n                            )}\n                          </View>\n                        </TouchableOpacity>\n                      ))}\n                    </ScrollView>\n                  </View>\n                )}\n              </View>\n\n              <View style={styles.switchContainer}>\n                <Text>All Day</Text>\n                <Switch value={isAllDay} onValueChange={setIsAllDay} />\n              </View>\n\n              {!isAllDay && renderTimePicker()}\n\n              <View style={styles.buttonContainer}>\n                <TouchableOpacity\n                  style={[\n                    styles.availabilityButton,\n                    styles.availableButton,\n                    (selectedServices.length === 0 || !isTimeSlotUnavailable()) && styles.disabledButton\n                  ]}\n                  onPress={handleMarkAvailable}\n                  disabled={selectedServices.length === 0 || !isTimeSlotUnavailable()}\n                >\n                  <Text style={styles.availabilityButtonText}>\n                    Mark Available\n                  </Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                  style={[\n                    styles.availabilityButton,\n                    styles.unavailableButton,\n                    (selectedServices.length === 0 || isTimeSlotUnavailable()) && styles.disabledButton\n                  ]}\n                  onPress={handleMarkUnavailable}\n                  disabled={selectedServices.length === 0 || isTimeSlotUnavailable()}\n                >\n                  <Text style={styles.availabilityButtonText}>\n                    Mark Unavailable\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </ScrollView>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    padding: 22,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 17,\n    maxHeight: SCREEN_HEIGHT * 0.7,\n    zIndex: 1,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 15,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n  },\n  closeButton: {\n    padding: 5,\n  },\n  switchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n    zIndex: 1,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginTop: 20,\n    gap: 10,\n  },\n  availabilityButton: {\n    padding: 10,\n    borderRadius: 5,\n    flex: 1,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.danger,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  availabilityButtonText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n  },\n  timePickerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n    zIndex: 1,\n  },\n  webTimePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  unavailableTimesContainer: {\n    marginTop: 20,\n    maxHeight: 200,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    marginBottom: 10,\n  },\n  inputWrapper: {\n    position: 'relative',\n    width: '100%',\n    marginBottom: 15,\n    zIndex: 2,\n  },\n  \n  inputLabel: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 5,\n    fontWeight: '500',\n  },\n  \n  input: {\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: theme.colors.inputBackground,\n  },\n  \n  customDropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 40,\n  },\n  \n  dropdownContainer: {\n    position: 'absolute',\n    top: '95%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    marginTop: 2,\n    maxHeight: 160,\n    zIndex: 1000,\n    elevation: 5,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  \n  dropdownScroll: {\n    maxHeight: 160,\n  },\n  \n  dropdownItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    height: 40,\n  },\n  \n  dropdownText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.medium,\n  },\n  \n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  \n  inputError: {\n    borderColor: theme.colors.danger,\n  },\n  \n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingRight: 10,\n  },\n  toggleContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    padding: 4,\n  },\n  toggleButton: {\n    flex: 1,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    margin: 2,\n  },\n  activeToggle: {\n    backgroundColor: theme.colors.primary,\n  },\n  toggleText: {\n    textAlign: 'center',\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  activeToggleText: {\n    color: theme.colors.whiteText,\n    fontWeight: '500',\n  },\n  bookingsList: {\n    maxHeight: 300,\n  },\n  emptyState: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 32,\n  },\n  emptyStateText: {\n    marginTop: 16,\n    color: theme.colors.textSecondary,\n    fontSize: theme.fontSizes.medium,\n    textAlign: 'center',\n  },\n  contentScrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  availabilityControls: {\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    width: '100%',\n  },\n  bookingsContainer: {\n    maxHeight: 200,\n    marginBottom: 16,\n  },\n  unavailableTimesWrapper: {\n    maxHeight: 200,\n    marginBottom: 16,\n  },\n  bookingsWrapper: {\n    marginBottom: 16,\n  },\n  selectedDatesText: {\n    marginVertical: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n});\n\nexport default AddAvailabilityModal;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, Platform } from 'react-native';\nimport { theme } from '../../styles/theme';\n\nconst DatetimePicker = ({ \n  format = [\n    [\"months\", \"days\", \"years\"],\n    [\"hours\", \"minutes\", \"am/pm\"]\n  ],\n  value,\n  onChange,\n  disabled = false,\n  isInModal = false,\n  error = false\n}) => {\n  const [selectedValues, setSelectedValues] = useState({\n    months: '',\n    days: '',\n    years: '',\n    hours: '',\n    minutes: '',\n    ampm: 'AM'\n  });\n\n  // Only render on web platform\n  if (Platform.OS !== 'web') {\n    return null;\n  }\n\n  const handleSelectChange = (type, value) => {\n    if (disabled) return;\n    \n    const newValues = { ...selectedValues, [type]: value };\n    setSelectedValues(newValues);\n    \n    if (onChange) {\n      // Convert to date object and call onChange\n      const date = convertToDate(newValues);\n      onChange(date);\n    }\n  };\n\n  const convertToDate = (values) => {\n    const { months, days, years, hours, minutes, ampm } = values;\n    if (!months || !days || !years) return null;\n    \n    let hour = parseInt(hours || '12');\n    if (ampm === 'PM' && hour !== 12) hour += 12;\n    if (ampm === 'AM' && hour === 12) hour = 0;\n    \n    return new Date(\n      parseInt(years),\n      parseInt(months) - 1,\n      parseInt(days),\n      hour,\n      parseInt(minutes || '0')\n    );\n  };\n\n  const renderSelect = (type) => {\n    let options = [];\n    switch (type) {\n      case 'months':\n        options = Array.from({ length: 12 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: new Date(2000, i).toLocaleString('default', { month: 'long' })\n        }));\n        break;\n      case 'days':\n        options = Array.from({ length: 31 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: (i + 1).toString()\n        }));\n        break;\n      case 'years':\n        const currentYear = new Date().getFullYear();\n        options = Array.from({ length: 100 }, (_, i) => ({\n          value: (currentYear - 50 + i).toString(),\n          label: (currentYear - 50 + i).toString()\n        }));\n        break;\n      case 'hours':\n        options = Array.from({ length: 12 }, (_, i) => ({\n          value: (i + 1).toString(),\n          label: (i + 1).toString()\n        }));\n        break;\n      case 'minutes':\n        options = Array.from({ length: 60 }, (_, i) => ({\n          value: i.toString().padStart(2, '0'),\n          label: i.toString().padStart(2, '0')\n        }));\n        break;\n      case 'am/pm':\n        options = [\n          { value: 'AM', label: 'AM' },\n          { value: 'PM', label: 'PM' }\n        ];\n        break;\n    }\n\n    const handleChange = (e) => {\n      if (isInModal && Platform.OS === 'web') {\n        e.stopPropagation();\n      }\n      handleSelectChange(type === 'am/pm' ? 'ampm' : type, e.target.value);\n    };\n\n    const selectStyle = {\n      ...styles.select,\n      ...(error ? styles.errorSelect : {}),\n      ...(type === 'months' ? styles.monthSelect : {}),\n      ...(type === 'years' ? styles.yearSelect : {}),\n      ...(type === 'days' ? styles.daySelect : {})\n    };\n\n    return (\n      React.createElement('select', {\n        value: selectedValues[type === 'am/pm' ? 'ampm' : type],\n        onChange: handleChange,\n        style: selectStyle,\n        disabled: disabled\n      }, [\n        React.createElement('option', { \n          key: 'default', \n          value: '' \n        }, type.charAt(0).toUpperCase() + type.slice(1)),\n        ...options.map(option => \n          React.createElement('option', {\n            key: option.value,\n            value: option.value\n          }, option.label)\n        )\n      ])\n    );\n  };\n\n  return (\n    <View style={styles.container}>\n      {format.map((row, rowIndex) => (\n        <View key={rowIndex} style={styles.row}>\n          {row.map((type, index) => (\n            <View key={type} style={styles.selectContainer}>\n              {renderSelect(type)}\n            </View>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n  },\n  row: {\n    flexDirection: 'row',\n    marginBottom: 8,\n    gap: 8,\n  },\n  selectContainer: {\n    flex: 1,\n  },\n  select: {\n    width: '100%',\n    padding: 8,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    appearance: 'none',\n    WebkitAppearance: 'none',\n    MozAppearance: 'none',\n    paddingRight: 8,\n    cursor: 'pointer',\n  },\n  monthSelect: {\n    flex: 1.5,\n  },\n  daySelect: {\n    flex: 0.8,\n  },\n  yearSelect: {\n    flex: 1.2,\n  },\n  errorSelect: {\n    borderColor: theme.colors.danger,\n  }\n});\n\nexport { DatetimePicker }; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, Switch, ScrollView, Platform, Dimensions, Animated } from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { theme } from '../styles/theme';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { AuthContext } from '../context/AuthContext';\nimport { DatetimePicker } from './ui/datetime-picker';\n\nconst { width } = Dimensions.get('window');\nconst modalWidth = Platform.OS === 'web' ? width * 0.4 : width * 0.9;\n\nconst ALL_DAYS = \"All Days\";\nconst DAYS_OF_WEEK = [\n  ALL_DAYS,\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday'\n];\n\nconst DefaultSettingsModal = ({ isVisible, onClose, onSave, defaultSettings }) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [selectedDays, setSelectedDays] = useState([]);\n  const [settings, setSettings] = useState(defaultSettings || {\n    Monday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Tuesday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Wednesday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Thursday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Friday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Saturday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Sunday: { isAllDay: false, startTime: '09:00', endTime: '17:00', endDate: null },\n  });\n\n  const [showTimePicker, setShowTimePicker] = useState({ visible: false, type: '', value: '' });\n  const [showDatePicker, setShowDatePicker] = useState(false);\n  const [isCurrentlyUnavailable, setIsCurrentlyUnavailable] = useState(false);\n  const [showDayDropdown, setShowDayDropdown] = useState(false);\n  const [validationError, setValidationError] = useState(\"Please select day(s) first\");\n\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(600)).current;\n\n  const handleClose = () => {\n    // Animate out\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnim, {\n        toValue: 600,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(() => {\n      // Call onClose after animations complete\n      onClose();\n    });\n  };\n\n  useEffect(() => {\n    if (isVisible) {\n      // Fade in the background overlay\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n\n      // Slide up the modal content\n      Animated.spring(slideAnim, {\n        toValue: 0,\n        tension: 50,\n        friction: 8,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [isVisible]);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const dropdownButton = document.getElementById('dropdown-button');\n      const dropdownContainer = document.getElementById('dropdown-container');\n      \n      // If click is not on the button and not inside the dropdown, close it\n      if (showDayDropdown && \n          dropdownContainer && \n          !dropdownContainer.contains(event.target) &&\n          !dropdownButton.contains(event.target)) {\n        setShowDayDropdown(false);\n      }\n    };\n\n    if (Platform.OS === 'web') {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [showDayDropdown]);\n\n  const handleSave = () => {\n    onSave({\n      ...settings,\n      [selectedDays[0]]: {\n        ...settings[selectedDays[0]],\n        isUnavailable: !isCurrentlyUnavailable\n      }\n    });\n  };\n\n  const updateDaySettings = (day, newSettings) => {\n    setSettings(prevSettings => ({\n      ...prevSettings,\n      [day]: { ...prevSettings[day], ...newSettings }\n    }));\n  };\n\n  const handleDaySelection = (day) => {\n    setSelectedDays(current => {\n      if (day === ALL_DAYS) {\n        return current.includes(ALL_DAYS) \n          ? [] \n          : DAYS_OF_WEEK.filter(d => d !== ALL_DAYS);\n      }\n      \n      const withoutAll = current.filter(d => d !== ALL_DAYS);\n      if (withoutAll.includes(day)) {\n        return withoutAll.filter(d => d !== day);\n      } else {\n        if (withoutAll.length + 1 === DAYS_OF_WEEK.length - 1) {\n          return DAYS_OF_WEEK.filter(d => d !== ALL_DAYS);\n        } else {\n          return [...withoutAll, day];\n        }\n      }\n    });\n  };\n\n  const handleAvailabilityChange = (makeAvailable) => {\n    console.log(\"Selected days:\", selectedDays);\n    if (selectedDays.length === 0) return;\n\n    const daysToUpdate = selectedDays.includes(ALL_DAYS) \n      ? DAYS_OF_WEEK.filter(day => day !== ALL_DAYS)\n      : selectedDays;\n    \n    console.log(\"Days to update:\", daysToUpdate);\n    console.log(\"Current settings:\", settings);\n    console.log(\"Making available:\", makeAvailable);\n\n    const newSettings = { ...settings };\n    daysToUpdate.forEach(day => {\n      console.log(`Updating ${day}`);\n      newSettings[day] = {\n        ...settings[day],\n        isUnavailable: !makeAvailable,\n        startTime: settings[selectedDays[0]].startTime,\n        endTime: settings[selectedDays[0]].endTime,\n        isAllDay: settings[selectedDays[0]].isAllDay,\n        endDate: settings[selectedDays[0]].endDate\n      };\n    });\n    \n    console.log(\"New settings:\", newSettings);\n    setSettings(newSettings);\n    onSave(newSettings);\n    setIsCurrentlyUnavailable(!makeAvailable);\n  };\n\n  // Update validation error whenever selected days changes\n  useEffect(() => {\n    if (selectedDays.length === 0) {\n      setValidationError(\"Please select day(s) first\");\n    } else {\n      setValidationError(\"\");\n    }\n  }, [selectedDays]);\n\n  const renderTimePicker = (type, value, onChange) => {\n      return (\n      <TimePicker\n        value={new Date(`2000-01-01T${value}`)}\n        onChange={(selectedTime) => {\n          const timeString = selectedTime.toTimeString().slice(0, 5);\n          onChange(timeString);\n        }}\n        fullWidth={false}\n        disabled={selectedDays.length === 0}\n        error={validationError}\n      />\n    );\n  };\n\n  const renderEndDatePicker = () => {\n    // Guard against no selected days\n    if (!selectedDays || selectedDays.length === 0) {\n      return (\n        <View style={styles.datePickerWrapper}>\n          <View \n            style={[styles.datePickerContainer]} \n            onClick={(e) => e.stopPropagation()}\n            onMouseDown={(e) => e.stopPropagation()}\n          >\n            <DatetimePicker\n              format={[[\"months\", \"days\", \"years\"]]}\n              disabled={true}\n              isInModal={true}\n              error={true}\n            />\n          </View>\n          <Text style={styles.validationErrorText}>{validationError}</Text>\n        </View>\n      );\n    }\n\n    const daySettings = settings[selectedDays[0]];\n    \n    return (\n      <View style={styles.datePickerWrapper}>\n        <View \n          style={styles.datePickerContainer}\n          onClick={(e) => e.stopPropagation()}\n          onMouseDown={(e) => e.stopPropagation()}\n        >\n          <DatetimePicker\n            format={[[\"months\", \"days\", \"years\"]]}\n            value={daySettings.endDate ? new Date(daySettings.endDate) : null}\n            onChange={(date) => updateDaySettings(selectedDays[0], { endDate: date.toISOString().split('T')[0] })}\n            disabled={false}\n            isInModal={true}\n            error={false}\n          />\n        </View>\n      </View>\n    );\n  };\n\n  const renderDaySettings = () => {\n    const daySettings = settings[selectedDays[0]] || {\n      isAllDay: false,\n      startTime: '09:00',\n      endTime: '17:00',\n      endDate: null\n    };\n    \n    return (\n      <View style={styles.daySettingsContainer}>\n        <View style={styles.settingRow}>\n          <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>All Day:</Text>\n          <Switch\n            value={daySettings.isAllDay}\n            onValueChange={(value) => {\n              if (selectedDays.length === 0) return;\n              const newSettings = { ...settings };\n              selectedDays.forEach(day => {\n                newSettings[day] = {\n                  ...newSettings[day],\n                  isAllDay: value\n                };\n              });\n              setSettings(newSettings);\n            }}\n            disabled={selectedDays.length === 0}\n          />\n        </View>\n        {!daySettings.isAllDay && (\n          <>\n            <View style={styles.settingRow}>\n              <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>Start Time:</Text>\n              <View style={styles.timePickerContainer}>\n                {renderTimePicker(\n                  'startTime',\n                  daySettings.startTime,\n                  (newTime) => {\n                    if (selectedDays.length === 0) return;\n                    const newSettings = { ...settings };\n                    selectedDays.forEach(day => {\n                      newSettings[day] = {\n                        ...newSettings[day],\n                        startTime: newTime\n                      };\n                    });\n                    setSettings(newSettings);\n                  }\n                )}\n              </View>\n            </View>\n            <View style={styles.settingRow}>\n              <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>End Time:</Text>\n              <View style={styles.timePickerContainer}>\n                {renderTimePicker(\n                  'endTime',\n                  daySettings.endTime,\n                  (newTime) => {\n                    if (selectedDays.length === 0) return;\n                    const newSettings = { ...settings };\n                    selectedDays.forEach(day => {\n                      newSettings[day] = {\n                        ...newSettings[day],\n                        endTime: newTime\n                      };\n                    });\n                    setSettings(newSettings);\n                  }\n                )}\n              </View>\n            </View>\n          </>\n        )}\n        <View style={styles.settingRow}>\n          <Text style={selectedDays.length === 0 ? styles.disabledText : styles.enabledText}>End Date:</Text>\n          <View pointerEvents={selectedDays.length === 0 ? 'none' : 'auto'}>\n            {renderEndDatePicker()}\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  const checkCurrentAvailability = (days, settings) => {\n    if (!days || days.length === 0) return false;\n    \n    return days.some(day => settings[day]?.isUnavailable);\n  };\n\n  useEffect(() => {\n    if (selectedDays.length > 0) {\n      const isUnavailable = checkCurrentAvailability(selectedDays, settings);\n      setIsCurrentlyUnavailable(isUnavailable);\n    } else {\n      setIsCurrentlyUnavailable(false);\n    }\n  }, [selectedDays, settings]);\n\n  const renderDaySelector = () => (\n    <View style={styles.inputWrapper}>\n      <Text style={styles.inputLabel}>Day(s) *</Text>\n      <TouchableOpacity\n        id=\"dropdown-button\"\n        style={[\n          styles.input,\n          styles.customDropdown,\n          selectedDays.length === 0 && styles.inputError\n        ]}\n        onPress={() => setShowDayDropdown(!showDayDropdown)}\n      >\n        <Text style={{\n          color: selectedDays.length > 0 ? theme.colors.text : theme.colors.placeHolderText\n        }}>\n          {selectedDays.length === 0 \n            ? 'Select Days' \n            : selectedDays.includes(ALL_DAYS)\n              ? 'All Days'\n              : selectedDays.length > 2\n                ? `${selectedDays.length} Days Selected`\n                : selectedDays.join(', ')}\n        </Text>\n        <MaterialCommunityIcons \n          name={showDayDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={24} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n      \n      {showDayDropdown && (\n        <View \n          id=\"dropdown-container\"\n          style={styles.dropdownContainer}\n        >\n          <ScrollView style={styles.dropdownScroll}>\n            {DAYS_OF_WEEK.map((day) => (\n              <TouchableOpacity\n                key={day}\n                style={styles.dropdownItem}\n                onPress={() => handleDaySelection(day)}\n              >\n                <View style={styles.dropdownItemContent}>\n                  <Text style={[\n                    styles.dropdownText,\n                    selectedDays.includes(day) && styles.selectedOption\n                  ]}>\n                    {day}\n                  </Text>\n                  {selectedDays.includes(day) && (\n                    <MaterialCommunityIcons \n                      name=\"check\" \n                      size={20} \n                      color={theme.colors.primary} \n                    />\n                  )}\n                </View>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  return (\n    <Modal\n      visible={isVisible}\n      transparent={true}\n      onRequestClose={handleClose}\n    >\n      <Animated.View style={[\n        styles.modalContainer,\n        {\n          opacity: fadeAnim,\n        }\n      ]}>\n        <Animated.View style={[\n          styles.modalContent,\n          {\n            width: screenWidth < 600 ? '90%' : 600,\n            transform: [{ translateY: slideAnim }]\n          }\n        ]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Default Settings</Text>\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          {renderDaySelector()}\n          {renderDaySettings()}\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.availableButton]}\n              onPress={() => handleAvailabilityChange(true)}\n              disabled={selectedDays.length === 0}\n            >\n              <Text style={styles.buttonText}>Mark Available</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, styles.unavailableButton]}\n              onPress={() => handleAvailabilityChange(false)}\n              disabled={selectedDays.length === 0}\n            >\n              <Text style={styles.buttonText}>Mark Unavailable</Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    padding: 22,\n    borderRadius: 17,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  settingContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 10,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  dayContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n    marginVertical: 5,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 12,\n    marginTop: 20,\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    marginBottom: 15,\n  },\n  tab: {\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  selectedTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedTabText: {\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  daySettingsContainer: {\n    marginBottom: 15,\n  },\n  settingRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    gap: 12,\n  },\n  webTimePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  webDatePicker: {\n    padding: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n  },\n  inputWrapper: {\n    position: 'relative',\n    width: '100%',\n    marginBottom: 15,\n    zIndex: 2,\n  },\n  inputLabel: {\n    marginBottom: 5,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    padding: 10,\n    backgroundColor: theme.colors.surface,\n  },\n  customDropdown: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 5,\n    maxHeight: 200,\n    zIndex: 1000,\n  },\n  dropdownScroll: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputError: {\n    borderColor: theme.colors.danger,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  disabledText: {\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  enabledText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timePickerContainer: {\n    flex: 1,\n    maxWidth: 150,\n  },\n  datePickerContainer: {\n    flex: 1,\n    maxWidth: 200,\n  },\n  datePickerWrapper: {\n    width: '100%',\n  },\n  validationErrorText: {\n    color: theme.colors.danger,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default DefaultSettingsModal;\n","import React, { useState, useRef, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Platform, Switch, Animated } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\nimport TimePicker from './TimePicker';\nimport { SERVICE_TYPES, ALL_SERVICES } from '../data/mockData';\nimport { AuthContext } from '../context/AuthContext';\n\nconst AvailabilityBottomSheet = ({ \n  selectedDates, \n  currentAvailability,\n  onClose,\n  onViewUnavailableTimes,\n  onSave,\n  onMinimize\n}) => {\n  const { screenWidth } = useContext(AuthContext);\n  const [startTime, setStartTime] = useState(new Date());\n  const [endTime, setEndTime] = useState(new Date());\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [isAllDay, setIsAllDay] = useState(false);\n  const [error, setError] = useState(null);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const animatedHeight = useRef(new Animated.Value(1)).current;\n  const animatedOpacity = useRef(new Animated.Value(1)).current;\n  const slideAnimation = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    // Start the entrance animation when the component mounts\n    Animated.spring(slideAnimation, {\n      toValue: 1,\n      useNativeDriver: true,\n      tension: 50,\n      friction: 8\n    }).start();\n  }, []);\n\n  const getAvailabilityStatus = () => {\n    if (!selectedDates || selectedDates.length === 0) return 'Unknown';\n\n    const date = selectedDates[0];\n    const dateAvailability = currentAvailability[date];\n\n    if (!dateAvailability) return 'Available';\n    if (!dateAvailability.isAvailable) return 'Unavailable';\n    if (dateAvailability.unavailableTimes?.length > 0) return 'Partially Available';\n    return 'Available';\n  };\n\n  const getStatusColor = () => {\n    const status = getAvailabilityStatus();\n    switch (status) {\n      case 'Available':\n        return theme.colors.success;\n      case 'Partially Available':\n        return theme.colors.warning;\n      case 'Unavailable':\n        return theme.colors.error;\n      default:\n        return theme.colors.text;\n    }\n  };\n\n  const formatDateRange = () => {\n    if (!selectedDates || selectedDates.length === 0) return '';\n    \n    if (selectedDates.length === 1) {\n      return format(parse(selectedDates[0], 'yyyy-MM-dd', new Date()), 'MMM dd, yyyy');\n    }\n\n    return `${format(parse(selectedDates[0], 'yyyy-MM-dd', new Date()), 'MMM dd')} - ${format(parse(selectedDates[selectedDates.length - 1], 'yyyy-MM-dd', new Date()), 'MMM dd, yyyy')}`;\n  };\n\n  const validateAndSave = (isAvailable) => {\n    if (selectedServices.length === 0) {\n      setError('Please select at least one service type');\n      return;\n    }\n    setError(null);\n    onSave({ \n      startTime: isAllDay ? '00:00' : format(startTime, 'HH:mm'),\n      endTime: isAllDay ? '24:00' : format(endTime, 'HH:mm'),\n      services: selectedServices,\n      isAvailable,\n      isAllDay\n    });\n  };\n\n  const toggleMinimized = () => {\n    const toValue = isMinimized ? 1 : 0;\n    \n    // Call onMinimize first to start the background fade\n    const newMinimizedState = !isMinimized;\n    onMinimize?.(newMinimizedState);\n    \n    // Then start our animations\n    Animated.parallel([\n      Animated.timing(animatedHeight, {\n        toValue,\n        duration: 300,\n        useNativeDriver: false\n      }),\n      Animated.timing(animatedOpacity, {\n        toValue,\n        duration: 300,\n        useNativeDriver: false\n      })\n    ]).start(() => {\n      setIsMinimized(newMinimizedState);\n    });\n  };\n\n  const handleClose = () => {\n    // Animate the slide down\n    Animated.timing(slideAnimation, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: true\n    }).start(() => {\n      // Call the onClose prop after animation completes\n      onClose();\n    });\n  };\n\n  const maxHeight = isAllDay ? 364 : 445; // Adjust this value based on your content\n  const minHeight = 96;\n\n  const containerHeight = animatedHeight.interpolate({\n    inputRange: [0, 1],\n    outputRange: [minHeight, maxHeight]\n  });\n\n  const renderHandle = () => {\n    if (Platform.OS === 'web') {\n      return (\n        <TouchableOpacity \n          onPress={toggleMinimized}\n          style={styles.handleContainer}\n        >\n          <MaterialCommunityIcons \n            name={isMinimized ? \"chevron-up\" : \"chevron-down\"}\n            size={24}\n            color={theme.colors.text}\n          />\n        </TouchableOpacity>\n      );\n    }\n\n    return (\n      <TouchableOpacity \n        onPress={toggleMinimized}\n        style={styles.handleContainer}\n      >\n        <View style={styles.handle} />\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.overlay,\n      { pointerEvents: isMinimized ? 'box-none' : 'auto' } // Allow clicks through when minimized\n    ]}>\n      <Animated.View \n        style={[\n          styles.container,\n          { \n            height: containerHeight,\n            transform: [{\n              translateY: slideAnimation.interpolate({\n                inputRange: [0, 1],\n                outputRange: [600, 0]\n              })\n            }]\n          }\n        ]}\n      >\n        {renderHandle()}\n        \n        <View style={[styles.header, isMinimized && styles.headerMinimized]}>\n          {!isMinimized && (\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          )}\n          <View style={styles.headerCenter}>\n            <Text style={styles.dateText}>{formatDateRange()}</Text>\n            <Text style={[styles.statusText, { color: getStatusColor() }]}>\n              {getAvailabilityStatus()}\n            </Text>\n          </View>\n          {!isMinimized && (\n            <Animated.View style={{ opacity: animatedOpacity }}>\n              <TouchableOpacity \n                style={styles.actionButton}\n                onPress={onViewUnavailableTimes}\n              >\n                <MaterialCommunityIcons \n                  name=\"clock-outline\" \n                  size={24} \n                  color={theme.colors.primary} \n                />\n                <Text style={styles.actionButtonText}>\n                  {'Unavailable\\nTimes'}\n                </Text>\n              </TouchableOpacity>\n            </Animated.View>\n          )}\n        </View>\n\n        <Animated.View \n          style={[\n            styles.content,\n            { opacity: animatedOpacity,\n             }\n          ]}\n        >\n          <View style={styles.serviceSection}>\n            <Text style={[styles.label, { textAlign: 'center' }]}>Change Availability for Services</Text>\n            <TouchableOpacity\n              style={[styles.serviceSelector, error && selectedServices.length <= 0 && styles.serviceSelectorError]}\n              onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n            >\n              <Text style={styles.serviceSelectorText}>\n                {selectedServices.length > 0 \n                  ? selectedServices.includes(ALL_SERVICES)\n                    ? \"All Services\"\n                    : selectedServices.length > 1\n                      ? `${selectedServices.length} services selected`\n                      : selectedServices[0]\n                  : \"Select one or more service types\"\n                }\n              </Text>\n              <MaterialCommunityIcons \n                name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            {error && selectedServices.length <= 0 && !showServiceDropdown && <Text style={styles.errorText}>{error}</Text>}\n\n            {showServiceDropdown && (\n              <View style={styles.dropdownContainer}>\n                <ScrollView style={styles.dropdownScroll}>\n                  {SERVICE_TYPES.map((service) => (\n                    <TouchableOpacity\n                      key={service}\n                      style={styles.dropdownItem}\n                      onPress={() => {\n                        if (service === ALL_SERVICES) {\n                          setSelectedServices(\n                            selectedServices.includes(ALL_SERVICES) \n                              ? [] \n                              : [ALL_SERVICES]\n                          );\n                        } else {\n                          setSelectedServices(prev => {\n                            const withoutAll = prev.filter(s => s !== ALL_SERVICES);\n                            if (prev.includes(service)) {\n                              return withoutAll.filter(s => s !== service);\n                            } else {\n                              return [...withoutAll, service];\n                            }\n                          });\n                        }\n                      }}\n                    >\n                      <View style={styles.dropdownItemContent}>\n                        <Text style={[\n                          styles.dropdownText,\n                          selectedServices.includes(service) && styles.selectedOption\n                        ]}>\n                          {service}\n                        </Text>\n                        {selectedServices.includes(service) && (\n                          <MaterialCommunityIcons \n                            name=\"check\" \n                            size={20} \n                            color={theme.colors.primary} \n                          />\n                        )}\n                      </View>\n                    </TouchableOpacity>\n                  ))}\n                </ScrollView>\n              </View>\n            )}\n          </View>\n\n          <View style={styles.timeToggleContainer}>\n            <Text style={[styles.label, { marginBottom: 0 }]}>Time Selection</Text>\n            <View style={styles.customToggle}>\n              <TouchableOpacity \n                style={[\n                  styles.toggleButton,\n                  isAllDay ? styles.toggleButtonActive : styles.toggleButtonInactive\n                ]}\n                onPress={() => setIsAllDay(true)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  isAllDay && styles.toggleButtonTextActive\n                ]}>All Day</Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={[\n                  styles.toggleButton,\n                  !isAllDay ? styles.toggleButtonActive : styles.toggleButtonInactive\n                ]}\n                onPress={() => setIsAllDay(false)}\n              >\n                <Text style={[\n                  styles.toggleButtonText,\n                  !isAllDay && styles.toggleButtonTextActive\n                ]}>Custom Hours</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          {!isAllDay && (\n            <View style={styles.timeSection}>\n              <View style={styles.timeContainer}>\n                <Text style={[styles.label, { marginBottom: 0 }]}>Start Time</Text>\n                <TimePicker\n                  value={startTime}\n                  onChange={setStartTime}\n                  fullWidth\n                />\n              </View>\n              <View style={styles.timeContainer}>\n                <Text style={[styles.label, { marginBottom: 0 }]}>End Time</Text>\n                <TimePicker\n                  value={endTime}\n                  onChange={setEndTime}\n                  fullWidth\n                />\n              </View>\n            </View>\n          )}\n\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity\n              style={[styles.button, styles.availableButton]}\n              onPress={() => validateAndSave(true)}\n            >\n              <Text style={styles.buttonText}>Mark Available</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.button, styles.unavailableButton]}\n              onPress={() => validateAndSave(false)}\n            >\n              <Text style={styles.buttonText}>Mark Unavailable</Text>\n            </TouchableOpacity>\n          </View>\n        </Animated.View>\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    width: '100%',\n    pointerEvents: 'box-none', // This allows clicks to pass through to elements behind\n  },\n  container: {\n    backgroundColor: theme.colors.surface,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n    paddingBottom: Platform.OS === 'ios' ? 40 : 16,\n    maxWidth: 600,\n    width: '100%',\n    alignSelf: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: -2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  handleContainer: {\n    width: '100%',\n    height: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 4,\n  },\n  handle: {\n    width: 40,\n    height: 4,\n    backgroundColor: theme.colors.border,\n    borderRadius: 2,\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    paddingRight: 8,\n    marginTop: 4, // Add a small margin to separate from the chevron\n  },\n  headerMinimized: {\n    marginBottom: 8,\n    paddingBottom: 12, // Add padding at the bottom when minimized\n    justifyContent: 'space-between',\n  },\n  headerCenter: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  closeButton: {\n    width: 60,\n    height: 40,\n    // marginBottom: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  statusText: {\n    fontSize: theme.fontSizes.medium,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButton: {\n    width: 60,\n    alignItems: 'center',\n  },\n  actionButtonText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.primary,\n    marginTop: 4,\n    textAlign: 'center',\n    lineHeight: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  content: {\n    gap: 12,\n  },\n  timeToggleContainer: {\n    // marginBottom: 8,\n  },\n  customToggle: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 4,\n    // marginTop: 8,\n    gap: 8,\n  },\n  toggleButton: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  toggleButtonActive: {\n    backgroundColor: theme.colors.primary,\n    borderColor: theme.colors.primary,\n  },\n  toggleButtonInactive: {\n    backgroundColor: 'transparent',\n  },\n  toggleButtonText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  toggleButtonTextActive: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  timeSection: {\n    flexDirection: 'row',\n    gap: 16,\n  },\n  timeContainer: {\n    flex: 1,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceSection: {\n    position: 'relative',\n    zIndex: 1,\n  },\n  serviceSelector: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.background,\n  },\n  serviceSelectorText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    maxHeight: 200,\n    zIndex: 1000,\n  },\n  dropdownScroll: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    gap: 12,\n    // marginTop: 12,\n  },\n  button: {\n    flex: 1,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  availableButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  unavailableButton: {\n    backgroundColor: theme.colors.error,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceSelectorError: {\n    borderColor: theme.colors.error,\n    borderWidth: 1,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default AvailabilityBottomSheet; ","import React, { useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, Modal, TouchableOpacity, ScrollView, Animated } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { format, parse } from 'date-fns';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst UnavailableTimesModal = ({ \n  visible, \n  onClose, \n  selectedDates,\n  currentAvailability,\n  onRemoveTimeSlot,\n  bookings\n}) => {\n  const navigation = useNavigation();\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n  const slideAnim = useRef(new Animated.Value(600)).current;\n\n  useEffect(() => {\n    if (visible) {\n      // Fade in the background overlay\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n\n      // Slide up the modal content\n      Animated.spring(slideAnim, {\n        toValue: 0,\n        tension: 50,\n        friction: 8,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible]);\n\n  const handleClose = () => {\n    // Animate out\n    Animated.parallel([\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnim, {\n        toValue: 600,\n        duration: 300,\n        useNativeDriver: true,\n      })\n    ]).start(() => {\n      // Call onClose after animations complete\n      onClose();\n    });\n  };\n\n  const formatTime = (time) => {\n    const [hours, minutes] = time.split(':');\n    const date = new Date();\n    date.setHours(parseInt(hours), parseInt(minutes));\n    return format(date, 'h:mm a');\n  };\n\n  const handleBookingPress = async (bookingId) => {\n    onClose(); // Close the modal first\n    await navigateToFrom(navigation, 'BookingDetails', 'AvailabilitySettings', { bookingId });\n  };\n\n  const getUnavailableTimes = () => {\n    if (!selectedDates || selectedDates.length === 0) return [];\n\n    const allTimes = [];\n    const processedTimes = new Set(); // Track processed time slots\n\n    selectedDates.forEach(date => {\n      const dateBookings = bookings[date] || [];\n      const dateAvailability = currentAvailability[date];\n\n      // Add bookings first\n      dateBookings.forEach(booking => {\n        const timeKey = `${date}-${booking.startTime}-${booking.endTime}`;\n        if (!processedTimes.has(timeKey)) {\n          allTimes.push({\n            date,\n            startTime: booking.startTime,\n            endTime: booking.endTime,\n            reason: `${booking.service_type}\\nBooked with ${booking.owner_name}`,\n            isBooking: true,\n            ownerId: booking.ownerId\n          });\n          processedTimes.add(timeKey);\n        }\n      });\n\n      // Add personal unavailable times, excluding any that overlap with bookings\n      if (dateAvailability?.unavailableTimes) {\n        dateAvailability.unavailableTimes\n          .filter(time => !time.ownerId) // Only include non-booking unavailable times\n          .forEach(time => {\n            const timeKey = `${date}-${time.startTime}-${time.endTime}`;\n            if (!processedTimes.has(timeKey)) {\n              allTimes.push({\n                date,\n                startTime: time.startTime,\n                endTime: time.endTime,\n                reason: time.reason,\n                isBooking: false\n              });\n              processedTimes.add(timeKey);\n            }\n          });\n      }\n    });\n\n    // Sort by date and then by start time\n    return allTimes.sort((a, b) => {\n      if (a.date !== b.date) return a.date.localeCompare(b.date);\n      return a.startTime.localeCompare(b.startTime);\n    });\n  };\n\n  const renderActionButton = (item) => {\n    if (item.isBooking) {\n      return (\n        <TouchableOpacity\n          style={styles.bookingButton}\n          onPress={() => handleBookingPress(item.ownerId)}\n        >\n          <MaterialCommunityIcons name=\"arrow-right\" size={24} color={theme.colors.primary} />\n        </TouchableOpacity>\n      );\n    }\n    \n    return (\n      <TouchableOpacity\n        style={styles.removeButton}\n        onPress={() => onRemoveTimeSlot(item.date, item)}\n      >\n        <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.error} />\n      </TouchableOpacity>\n    );\n  };\n\n  const renderTimeSlot = (item, index) => {\n    const formattedDate = format(parse(item.date, 'yyyy-MM-dd', new Date()), 'MMM d, yyyy');\n    const formattedStartTime = formatTime(item.startTime);\n    const formattedEndTime = formatTime(item.endTime);\n\n    return (\n      <View key={index} style={styles.timeSlotContainer}>\n        <View style={styles.dateHeader}>\n          <Text style={styles.dateText}>{formattedDate}</Text>\n        </View>\n        <View style={[\n          styles.timeSlotContent,\n          item.isBooking && styles.bookingContent\n        ]}>\n          <View style={styles.timeAndReason}>\n            <Text style={styles.timeText}>\n              {formattedStartTime} - {formattedEndTime}\n            </Text>\n            <Text style={styles.reasonText}>\n              {item.reason}\n            </Text>\n          </View>\n          {renderActionButton(item)}\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      onRequestClose={handleClose}\n    >\n      <Animated.View style={[\n        styles.modalContainer,\n        {\n          opacity: fadeAnim,\n        }\n      ]}>\n        <Animated.View style={[\n          styles.modalContent,\n          {\n            transform: [{ translateY: slideAnim }]\n          }\n        ]}>\n          <View style={styles.modalHeader}>\n            <Text style={styles.modalTitle}>Unavailable Times</Text>\n            <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n          \n          <ScrollView style={styles.timesList}>\n            {getUnavailableTimes().map((item, index) => renderTimeSlot(item, index))}\n            {getUnavailableTimes().length === 0 && (\n              <Text style={styles.emptyText}>No unavailable times for selected date(s)</Text>\n            )}\n          </ScrollView>\n        </Animated.View>\n      </Animated.View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 5,\n  },\n  timesList: {\n    maxHeight: '90%',\n  },\n  timeSlotContainer: {\n    marginBottom: 15,\n  },\n  dateHeader: {\n    marginBottom: 8,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  timeSlotContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    backgroundColor: theme.colors.background,\n    padding: 12,\n    borderRadius: 8,\n  },\n  bookingContent: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 2,\n  },\n  timeAndReason: {\n    flex: 1,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reasonText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  removeButton: {\n    padding: 5,\n    marginLeft: 10,\n  },\n  bookingButton: {\n    padding: 5,\n    marginLeft: 10,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    width: 34,\n    height: 34,\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 2,\n  },\n  emptyText: {\n    textAlign: 'center',\n    color: theme.colors.textSecondary,\n    fontSize: theme.fontSizes.medium,\n    marginTop: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default UnavailableTimesModal; ","import React, { useState, useEffect, useRef, useContext } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, ScrollView, Platform, StatusBar, Dimensions, ActivityIndicator, Animated } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { Calendar } from 'react-native-calendars';\nimport moment from 'moment';\nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport AddAvailabilityModal from '../components/AddAvailabilityModal';\nimport DefaultSettingsModal from '../components/DefaultSettingsModal';\nimport { format, parse } from 'date-fns';\nimport { SERVICE_TYPES, fetchAvailabilityData, ALL_SERVICES } from '../data/mockData';\nimport AvailabilityBottomSheet from '../components/AvailabilityBottomSheet';\nimport UnavailableTimesModal from '../components/UnavailableTimesModal';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\n\nconst daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconst AvailabilitySettings = () => {\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n  const [markedDates, setMarkedDates] = useState({});\n  const [selectedDates, setSelectedDates] = useState([]);\n  const [isAddModalVisible, setIsAddModalVisible] = useState(false);\n  const [isSettingsModalVisible, setIsSettingsModalVisible] = useState(false);\n  const [defaultAvailability, setDefaultAvailability] = useState('available');\n  const [currentAvailability, setCurrentAvailability] = useState({});\n  const [bookings, setBookings] = useState({});\n  const [defaultSettings, setDefaultSettings] = useState({\n    Monday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Tuesday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Wednesday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Thursday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Friday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Saturday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n    Sunday: { isAllDay: false, isUnavailable: false, startTime: '09:00', endTime: '17:00', endDate: null },\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showBottomSheet, setShowBottomSheet] = useState(false);\n  const [showUnavailableTimesModal, setShowUnavailableTimesModal] = useState(false);\n  const [isClosing, setIsClosing] = useState(false);\n  const [isBottomSheetMinimized, setIsBottomSheetMinimized] = useState(false);\n  const navigation = useNavigation();\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const loadAvailabilityData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchAvailabilityData();\n        updateMarkedDates(data.availableDates, data.unavailableDates, data.bookings);\n        \n        const combinedAvailability = {};\n        Object.keys(data.availableDates).forEach(date => {\n          combinedAvailability[date] = { \n            isAvailable: true,\n            unavailableTimes: [] // Initialize empty array for partially unavailable times\n          };\n        });\n        Object.keys(data.unavailableDates).forEach(date => {\n          combinedAvailability[date] = { \n            isAvailable: false,\n            unavailableTimes: [{\n              startTime: data.unavailableDates[date].startTime,\n              endTime: data.unavailableDates[date].endTime,\n              reason: ' Personal Time'\n            }]\n          };\n        });\n        Object.keys(data.bookings).forEach(date => {\n          if (!combinedAvailability[date]) {\n            combinedAvailability[date] = { \n              isAvailable: true,\n              unavailableTimes: []\n            };\n          }\n          combinedAvailability[date].unavailableTimes = [\n            ...combinedAvailability[date].unavailableTimes,\n            ...data.bookings[date].map(booking => ({\n              startTime: booking.startTime,\n              endTime: booking.endTime,\n              reason: ` Booked with ${booking.owner_name}`,\n              ownerId: booking.ownerId // Assuming each booking has a ownerId\n            }))\n          ];\n        });\n        setCurrentAvailability(combinedAvailability);\n        setBookings(data.bookings);\n      } catch (err) {\n        setError('Failed to load availability data');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadAvailabilityData();\n  }, []);\n\n  const updateMarkedDates = (availableDates, unavailableDates, bookings) => {\n    const newMarkedDates = {};\n\n    // Helper function to check if all services are selected for a time slot\n    const hasAllServices = (reason) => {\n      if (!reason) return false;\n      const services = reason.replace('Unavailable for: ', '').split(', ');\n      return services.length === (SERVICE_TYPES.length - 1);\n    };\n\n    Object.entries(unavailableDates).forEach(([date, time]) => {\n      const isFullDay = time.startTime === '00:00' && time.endTime === '24:00';\n      const allServicesSelected = hasAllServices(time.reason);\n      \n      newMarkedDates[date] = {\n        customStyles: {\n          container: { \n            backgroundColor: isFullDay && allServicesSelected ? 'lightgrey' : theme.colors.calendarColor,\n            width: 35,\n            height: 35,\n            borderRadius: 17.5,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          text: { color: 'white' }\n        }\n      };\n    });\n\n    Object.entries(availableDates).forEach(([date, time]) => {\n      if (!newMarkedDates[date]) {\n        newMarkedDates[date] = {\n          customStyles: {\n            container: { \n              backgroundColor: 'white',\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'black' }\n          }\n        };\n      }\n    });\n\n    Object.entries(bookings).forEach(([date, bookingList]) => {\n      const isFullDay = bookingList.some(booking => \n        booking.startTime === '00:00' && booking.endTime === '24:00'\n      );\n      newMarkedDates[date] = { \n        marked: true,\n        dotColor: theme.colors.primary,\n        customStyles: {\n          container: { \n            backgroundColor: isFullDay ? theme.colors.primary : theme.colors.calendarColorYellowBrown,\n            width: 35,\n            height: 35,\n            borderRadius: 17.5,\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          text: { color: 'white' }\n        }\n      };\n    });\n\n    setMarkedDates(newMarkedDates);\n  };\n\n  const toggleBottomSheet = (show) => {\n    if (show) {\n      setIsClosing(false);\n      setShowBottomSheet(true);\n      Animated.timing(fadeAnim, {\n        toValue: 0.5,\n        duration: 300,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      setIsClosing(true);\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: true,\n      }).start(() => {\n        setShowBottomSheet(false);\n        setIsClosing(false);\n      });\n    }\n  };\n\n  const handleBottomSheetMinimize = (minimized) => {\n    setIsBottomSheetMinimized(minimized);\n    Animated.timing(fadeAnim, {\n      toValue: minimized ? 0 : 0.5,\n      duration: 300,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  const onDayPress = (day) => {\n    const { dateString } = day;\n    const selectedDate = new Date(dateString);\n    selectedDate.setDate(selectedDate.getDate() + 1); // Adjust for timezone offset\n    selectedDate.setHours(0, 0, 0, 0);\n  \n    if (selectedDates.length === 0) {\n      setSelectedDates([dateString]);\n      toggleBottomSheet(true);\n    } else if (selectedDates.length >= 1) {\n      const firstDate = new Date(selectedDates[0]);\n      firstDate.setDate(firstDate.getDate() + 1); // Adjust for timezone offset\n      firstDate.setHours(0, 0, 0, 0);    \n\n      if (selectedDate.getTime() === firstDate.getTime()) {\n        return;\n      }\n\n      if (selectedDate < firstDate) {\n        setSelectedDates([dateString]);\n        toggleBottomSheet(true);\n        return;\n      }\n\n      const range = [];\n      const currentDate = new Date(firstDate);\n      const endDate = new Date(selectedDate);\n\n      while (currentDate <= endDate) {\n        range.push(format(currentDate, 'yyyy-MM-dd'));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n    \n      setSelectedDates(range);\n    }\n  };\n\n  const handleAddAvailability = (availabilityData) => {\n    const newMarkedDates = { ...markedDates };\n    const newCurrentAvailability = { ...currentAvailability };\n\n    availabilityData.dates.forEach(date => {\n      const allServicesSelected = availabilityData.serviceTypes.includes(ALL_SERVICES) || \n                                 availabilityData.serviceTypes.length === SERVICE_TYPES.length - 1;\n\n      if (!availabilityData.isAvailable) {\n        newCurrentAvailability[date] = {\n          isAvailable: false,\n          unavailableTimes: [{\n            startTime: availabilityData.startTime,\n            endTime: availabilityData.endTime,\n            reason: availabilityData.reason\n          }]\n        };\n\n        newMarkedDates[date] = {\n          customStyles: {\n            container: {\n              backgroundColor: availabilityData.isAllDay && allServicesSelected ? 'lightgrey' : theme.colors.calendarColor,\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'white' }\n          }\n        };\n      } else {\n        newCurrentAvailability[date] = {\n          isAvailable: true,\n          unavailableTimes: []\n        };\n        newMarkedDates[date] = {\n          customStyles: {\n            container: { \n              backgroundColor: 'white',\n              width: 35,\n              height: 35,\n              borderRadius: 17.5,\n              alignItems: 'center',\n              justifyContent: 'center'\n            },\n            text: { color: 'black' }\n          }\n        };\n      }\n    });\n\n    setMarkedDates(newMarkedDates);\n    setCurrentAvailability(newCurrentAvailability);\n    setIsAddModalVisible(false);\n    setSelectedDates([]);\n  };\n\n  const applyDefaultSettingsToCalendar = (settings) => {\n    const newMarkedDates = { ...markedDates };\n    const newCurrentAvailability = { ...currentAvailability };\n    \n    const today = new Date();\n    const oneYearFromNow = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());\n\n    const daysMapping = {\n      'Sunday': 0,\n      'Monday': 1,\n      'Tuesday': 2,\n      'Wednesday': 3,\n      'Thursday': 4,\n      'Friday': 5,\n      'Saturday': 6\n    };\n\n    Object.entries(settings).forEach(([day, daySettings]) => {\n      let currentDate = new Date(Date.UTC(today.getFullYear(), today.getMonth(), today.getDate()));\n      const targetDayNumber = daysMapping[day];\n      \n      while (currentDate <= (daySettings.endDate ? new Date(daySettings.endDate) : oneYearFromNow)) {\n        const currentDayNumber = currentDate.getUTCDay();\n        const dateString = currentDate.toISOString().split('T')[0];\n        \n        if (currentDayNumber === targetDayNumber) {\n          if (daySettings.isUnavailable) {\n            if (daySettings.isAllDay) {\n              newMarkedDates[dateString] = {\n                customStyles: {\n                  container: { backgroundColor: 'lightgrey' },\n                  text: { color: 'white' }\n                }\n              };\n              newCurrentAvailability[dateString] = {\n                isAvailable: false,\n                unavailableTimes: [{ startTime: '00:00', endTime: '24:00', reason: 'Default Setting' }]\n              };\n            } else {\n              newMarkedDates[dateString] = {\n                customStyles: {\n                  container: { backgroundColor: theme.colors.calendarColor },\n                  text: { color: 'white' }\n                }\n              };\n              newCurrentAvailability[dateString] = {\n                isAvailable: true,\n                unavailableTimes: [{\n                  startTime: daySettings.startTime,\n                  endTime: daySettings.endTime,\n                  reason: 'Default Setting'\n                }]\n              };\n            }\n          } else {\n            // Reset to available\n            delete newMarkedDates[dateString];\n            delete newCurrentAvailability[dateString];\n          }\n        }\n        currentDate.setUTCDate(currentDate.getUTCDate() + 1);\n      }\n    });\n\n    setMarkedDates(newMarkedDates);\n    setCurrentAvailability(newCurrentAvailability);\n  };\n\n  //TODO: implement this in future for making owners on bookings clickable\n  // const handleOwnerPress = (ownerId) => {\n  //   // Navigate to the owner history page\n  //   // You'll need to implement this navigation logic\n  //   console.log(`Navigating to owner history for owner ID: ${ownerId}`);\n  // };\n\n  const IconComponent = Platform.OS === 'web' ? MaterialCommunityIcons : Icon;\n\n  const renderArrow = (direction) => {\n    let iconName;\n    if (Platform.OS === 'web') {\n      iconName = direction === 'left' ? 'chevron-left' : 'chevron-right';\n    } else {\n      iconName = direction === 'left' ? 'chevron-back' : 'chevron-forward';\n    }\n    return (\n      <IconComponent \n        name={iconName} \n        size={24} \n        color={theme.colors.primary}\n      />\n    );\n  };\n\n  const handleDefaultSettingsSave = (newSettings) => {\n    console.log(\"Before updating defaultSettings:\", defaultSettings);\n    console.log(\"New settings to be applied:\", newSettings);\n    setDefaultSettings(newSettings);\n    \n    // Add a setTimeout to check the state after update\n    setTimeout(() => {\n      console.log(\"After updating defaultSettings:\", defaultSettings);\n    }, 0);\n    \n    // Call applyDefaultSettingsToCalendar to update the calendar view\n    applyDefaultSettingsToCalendar(newSettings);\n    setIsSettingsModalVisible(false);\n  };\n\n  const handleSaveAvailability = (data) => {\n    const { startTime, endTime, services, isAvailable } = data;\n    const isAllDay = startTime === '00:00' && endTime === '24:00';\n    handleAddAvailability({\n      dates: selectedDates,\n      isAllDay,\n      startTime,\n      endTime,\n      isUnavailable: !isAvailable,\n      serviceTypes: services,\n      reason: `Unavailable for: ${services.join(', ')}`,\n    });\n    toggleBottomSheet(false);\n    setSelectedDates([]);\n  };\n\n  // TODO: make this actually remove the timeslot on the backend\n  const handleRemoveTimeSlot = (date, timeSlot, updatedAvailability, selectedDates) => {\n    if (updatedAvailability && selectedDates) {\n      // Handle multiple dates\n      setCurrentAvailability(prev => ({\n        ...prev,\n        ...updatedAvailability\n      }));\n\n      // Update marked dates for multiple dates\n      const newMarkedDates = { ...markedDates };\n      selectedDates.forEach(date => {\n        if (updatedAvailability[date]?.unavailableTimes.length === 0) {\n          newMarkedDates[date] = {\n            customStyles: {\n              container: { backgroundColor: 'white' },\n              text: { color: 'black' }\n            }\n          };\n        }\n      });\n      setMarkedDates(newMarkedDates);\n    } else {\n      // Handle single date (existing functionality)\n      setCurrentAvailability(prev => {\n        const currentDateAvailability = prev[date];\n        if (!currentDateAvailability) return prev;\n\n        const filteredTimes = currentDateAvailability.unavailableTimes.filter(\n          time => !(time.startTime === timeSlot.startTime && time.endTime === timeSlot.endTime)\n        );\n\n        // Update marked dates for single date\n        const newMarkedDates = { ...markedDates };\n        if (filteredTimes.length === 0) {\n          newMarkedDates[date] = {\n            customStyles: {\n              container: { backgroundColor: 'white' },\n              text: { color: 'black' }\n            }\n          };\n          setMarkedDates(newMarkedDates);\n        }\n\n        return {\n          ...prev,\n          [date]: {\n            ...currentDateAvailability,\n            unavailableTimes: filteredTimes\n          }\n        };\n      });\n    }\n  };\n\n  const handleViewBookings = () => {\n    if (selectedDates.length > 0) {\n      navigation.navigate('MyBookings', {\n        selectedDates,\n        initialTab: 'Upcoming'\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>Loading availability...</Text>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  if (error) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{error}</Text>\n          <TouchableOpacity \n            style={styles.retryButton}\n            onPress={() => {\n              setError(null);\n              loadAvailabilityData();\n            }}\n          >\n            <Text style={styles.retryButtonText}>Retry</Text>\n          </TouchableOpacity>\n        </View>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <View style={createStyles(screenWidth, isCollapsed).mainContainer}>\n      <View style={createStyles(screenWidth, isCollapsed).container}>\n        <ScrollView \n          style={createStyles(screenWidth, isCollapsed).scrollView}\n          contentContainerStyle={createStyles(screenWidth, isCollapsed).scrollContent}\n          showsVerticalScrollIndicator={false}\n        >\n          <View style={createStyles(screenWidth, isCollapsed).centeredContainer}>\n            <View style={createStyles(screenWidth, isCollapsed).header}>\n              <Text style={createStyles(screenWidth, isCollapsed).title}>Availability Settings</Text>\n              <TouchableOpacity \n                style={createStyles(screenWidth, isCollapsed).defaultSettingsButton}\n                onPress={() => setIsSettingsModalVisible(true)}\n              >\n                <Text style={createStyles(screenWidth, isCollapsed).defaultSettingsText}>Default Settings</Text>\n                <IconComponent \n                  name={Platform.OS === 'web' ? 'cog' : 'settings-outline'} \n                  size={24} \n                  color={theme.colors.text} \n                />\n              </TouchableOpacity>\n            </View>\n\n            <Calendar\n              style={[createStyles(screenWidth, isCollapsed).calendar, { width: screenWidth <= 900 ? '100%' : 'auto' }]}\n              markedDates={markedDates}\n              onDayPress={onDayPress}\n              theme={{\n                backgroundColor: 'transparent',\n                calendarBackground: 'transparent',\n                textSectionTitleColor: theme.colors.text,\n                selectedDayBackgroundColor: theme.colors.primary,\n                selectedDayTextColor: '#ffffff',\n                todayTextColor: theme.colors.primary,\n                dayTextColor: theme.colors.text,\n                textDisabledColor: '#d9e1e8',\n                dotColor: theme.colors.primary,\n                monthTextColor: theme.colors.text,\n                arrowColor: theme.colors.primary,\n                indicatorColor: theme.colors.primary,\n              }}\n            />\n\n            <View style={createStyles(screenWidth, isCollapsed).colorKeyContainer}>\n              <Text style={createStyles(screenWidth, isCollapsed).colorKeyTitle}>Color Key</Text>\n              <View style={createStyles(screenWidth, isCollapsed).colorKeyItem}>\n                <View style={[createStyles(screenWidth, isCollapsed).colorBox, { backgroundColor: theme.colors.calendarColor }]} />\n                <Text style={createStyles(screenWidth, isCollapsed).colorKeyText}>Unavailable</Text>\n              </View>\n              <View style={createStyles(screenWidth, isCollapsed).colorKeyItem}>\n                <View style={[createStyles(screenWidth, isCollapsed).colorBox, { backgroundColor: theme.colors.calendarColorYellowBrown }]} />\n                <Text style={createStyles(screenWidth, isCollapsed).colorKeyText}>Partially Available</Text>\n              </View>\n            </View>\n          </View>\n        </ScrollView>\n\n        <TouchableOpacity \n          style={createStyles(screenWidth, isCollapsed).addButton}\n          onPress={() => setIsAddModalVisible(true)}\n        >\n          <Icon name=\"add\" size={24} color={theme.colors.whiteText} />\n        </TouchableOpacity>\n      </View>\n\n      {isAddModalVisible && (\n        <AddAvailabilityModal\n          visible={isAddModalVisible}\n          onClose={() => setIsAddModalVisible(false)}\n          onSave={handleAddAvailability}\n          selectedDate={selectedDates.length > 0 ? selectedDates[0] : null}\n        />\n      )}\n\n      {isSettingsModalVisible && (\n        <DefaultSettingsModal\n          isVisible={isSettingsModalVisible}\n          onClose={() => setIsSettingsModalVisible(false)}\n          onSave={handleDefaultSettingsSave}\n          defaultSettings={defaultSettings}\n        />\n      )}\n\n      {(showBottomSheet || isClosing) && (\n        <>\n          <Animated.View \n            style={[\n              styles.overlay,\n              {\n                opacity: fadeAnim,\n                backgroundColor: 'black',\n                pointerEvents: isBottomSheetMinimized ? 'none' : 'auto'\n              }\n            ]} \n          />\n          <View style={[\n            styles.bottomSheetContainer,\n            { pointerEvents: 'box-none' }\n          ]}>\n            <AvailabilityBottomSheet\n              selectedDates={selectedDates}\n              currentAvailability={currentAvailability}\n              onClose={() => {\n                toggleBottomSheet(false);\n                setSelectedDates([]);\n              }}\n              onViewUnavailableTimes={() => {\n                setShowUnavailableTimesModal(true);\n              }}\n              onSave={handleSaveAvailability}\n              onViewBookings={handleViewBookings}\n              onMinimize={handleBottomSheetMinimize}\n            />\n          </View>\n        </>\n      )}\n\n      <UnavailableTimesModal\n        visible={showUnavailableTimesModal}\n        onClose={() => setShowUnavailableTimesModal(false)}\n        selectedDates={selectedDates}\n        currentAvailability={currentAvailability}\n        onRemoveTimeSlot={handleRemoveTimeSlot}\n        bookings={bookings}\n      />\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n  },\n  bottomSheetOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  centeredContainer: {\n    maxWidth: screenWidth > 900 ? 1000 : '100%',\n    width: '100%',\n    alignSelf: 'center',\n    flex: 1,\n    padding: screenWidth <= 900 ? 10 : 20,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n    flexWrap: screenWidth <= 600 ? 'wrap' : 'nowrap',\n    gap: screenWidth <= 600 ? 10 : 0,\n  },\n  title: {\n    fontSize: screenWidth <= 600 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    width: screenWidth <= 600 ? '100%' : 'auto',\n  },\n  addButton: {\n    position: 'absolute',\n    right: 20,\n    bottom: 20,\n    width: 56,\n    height: 56,\n    borderRadius: 28,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  defaultSettingsButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  defaultSettingsText: {\n    marginRight: 8,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  colorKeyContainer: {\n    marginTop: 20,\n    padding: screenWidth <= 600 ? 15 : 10,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    elevation: 2,\n    flexDirection: screenWidth <= 600 ? 'column' : 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  colorKeyTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  colorKeyItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: screenWidth <= 600 ? 2 : 5,\n    flex: screenWidth <= 600 ? 0 : 1,\n  },\n  colorBox: {\n    width: 20,\n    height: 20,\n    borderRadius: 3,\n    marginRight: 10,\n  },\n  colorKeyText: {\n    fontSize: 14,\n    color: 'black',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 10,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 5,\n  },\n  retryButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  overlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'black',\n  },\n  bottomSheetContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    paddingBottom: 20,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n});\n\nexport default AvailabilitySettings;\n","import React from 'react';\nimport { View, StyleSheet, ScrollView, Platform, SafeAreaView, StatusBar } from 'react-native';\nimport { Card, Title, Paragraph, List, Button, useTheme } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst OwnerHistory = ({ route, navigation }) => {\n  const { ownerId } = route.params;\n  const { colors } = useTheme();\n\n  // Mock data - replace with actual data from your backend\n  const ownerData = {\n    id: ownerId,\n    name: 'John Doe',\n    email: 'john.doe@example.com',\n    phone: '(123) 456-7890',\n    contracts: [\n      { id: '1', date: '2023-05-01', status: 'Completed' },\n      { id: '2', date: '2023-04-15', status: 'Pending' },\n    ],\n    invoices: [\n      { id: '1', date: '2023-05-02', amount: '$100', status: 'Paid' },\n      { id: '2', date: '2023-04-16', amount: '$75', status: 'Unpaid' },\n    ],\n    upcomingBookings: [\n      { id: '1', date: '2023-06-01', service: 'Dog Walking' },\n      { id: '2', date: '2023-06-15', service: 'Cat Sitting' },\n    ],\n  };\n\n  const Content = () => (\n    <ScrollView style={styles.scrollView} contentContainerStyle={styles.scrollViewContent}>\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>{ownerData.name}</Title>\n          <Paragraph>Email: {ownerData.email}</Paragraph>\n          <Paragraph>Phone: {ownerData.phone}</Paragraph>\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Upcoming Bookings</Title>\n          {ownerData.upcomingBookings.map(booking => (\n            <List.Item\n              key={booking.id}\n              title={`Booking ${booking.id}`}\n              description={`Date: ${booking.date} - Service: ${booking.service}`}\n              left={props => <List.Icon {...props} icon=\"calendar\" />}\n            />\n          ))}\n        </Card.Content>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Contracts</Title>\n          {ownerData.contracts.map(contract => (\n            <List.Item\n              key={contract.id}\n              title={`Contract ${contract.id}`}\n              description={`Date: ${contract.date} - Status: ${contract.status}`}\n              left={props => <List.Icon {...props} icon=\"file-document-outline\" />}\n            />\n          ))}\n        </Card.Content>\n        <Card.Actions>\n          <Button onPress={() => navigateToFrom(navigation, 'Contracts', 'OwnerHistory', { ownerId })}>View All Contracts</Button>\n        </Card.Actions>\n      </Card>\n\n      <Card style={styles.card}>\n        <Card.Content>\n          <Title>Invoices</Title>\n          {ownerData.invoices.map(invoice => (\n            <List.Item\n              key={invoice.id}\n              title={`Invoice ${invoice.id}`}\n              description={`Date: ${invoice.date} - Amount: ${invoice.amount} - Status: ${invoice.status}`}\n              left={props => <List.Icon {...props} icon=\"file-document-outline\" />}\n            />\n          ))}\n        </Card.Content>\n        <Card.Actions>\n          <Button onPress={() => navigateToFrom(navigation, 'Invoices', 'OwnerHistory', { ownerId })}>View All Invoices</Button>\n        </Card.Actions>\n      </Card>\n\n      <View style={styles.messageButtonContainer}>\n        <Button \n          mode=\"contained\" \n          onPress={() => navigateToFrom(navigation, 'MessageHistory', 'OwnerHistory', { ownerId })}\n          style={styles.messageButton}\n        >\n          View Messages\n        </Button>\n      </View>\n    </ScrollView>\n  );\n\n  if (Platform.OS === 'ios') {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Content />\n      </SafeAreaView>\n    );\n  } else if (Platform.OS === 'android') {\n    return (\n      <View style={[styles.container, styles.androidContainer]}>\n        <Content />\n      </View>\n    );\n  } else {\n    return (\n      <View style={styles.container}>\n        <Content />\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  androidContainer: {\n    paddingTop: StatusBar.currentHeight,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    padding: 16,\n    paddingBottom: Platform.OS === 'web' ? 16 : 90, // Extra padding for iOS and Android\n  },\n  card: {\n    marginBottom: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  messageButtonContainer: {\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n    marginTop: 16,\n  },\n  messageButton: {\n    width: '100%',\n  },\n});\n\nexport default OwnerHistory;\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TextInput, Pressable, ScrollView, Animated, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { AuthContext } from '../context/AuthContext';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst DateTimePicker = ({\n  value,\n  onChange,\n  error,\n  disabled = false,\n  containerStyle,\n  isMilitary = true,\n  onPickerStateChange\n}) => {\n  const { is_DEBUG, screenWidth } = useContext(AuthContext);\n  const [inputs, setInputs] = useState({\n    month: '',\n    day: '',\n    year: '',\n    hours: '',\n    minutes: '',\n    period: isMilitary ? null : 'AM'\n  });\n  const [showCalendar, setShowCalendar] = useState(false);\n  const [showTimeSelector, setShowTimeSelector] = useState(false);\n  const containerRef = useRef(null);\n  const fadeAnim = useRef(new Animated.Value(0)).current;\n\n  const animatePickerVisibility = (show) => {\n    Animated.timing(fadeAnim, {\n      toValue: show ? 1 : 0,\n      duration: 200,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  useEffect(() => {\n    animatePickerVisibility(showCalendar || showTimeSelector);\n  }, [showCalendar, showTimeSelector]);\n\n  useEffect(() => {\n    if (value instanceof Date && !isNaN(value)) {\n      if (is_DEBUG) {\n        console.log('MBA1234 Received date value:', value.toISOString());\n      }\n      \n      const hours24 = value.getHours();\n      const hours12 = hours24 % 12 || 12;\n      const period = isMilitary ? null : (hours24 >= 12 ? 'PM' : 'AM');\n      \n      if (is_DEBUG) {\n        console.log('MBA1234 Time format detection:', {\n          hours24,\n          hours12,\n          period,\n          isMilitary\n        });\n      }\n      \n      setInputs({\n        month: String(value.getMonth() + 1).padStart(2, '0'),\n        day: String(value.getDate()).padStart(2, '0'),\n        year: String(value.getFullYear()),\n        hours: isMilitary ? String(hours24).padStart(2, '0') : String(hours12).padStart(2, '0'),\n        minutes: String(value.getMinutes()).padStart(2, '0'),\n        period\n      });\n    }\n  }, [value, isMilitary]);\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA5678 DateTimePicker picker states:', {\n        showCalendar,\n        showTimeSelector,\n        isPickerActive: showCalendar || showTimeSelector\n      });\n    }\n    onPickerStateChange?.(showCalendar || showTimeSelector);\n  }, [showCalendar, showTimeSelector]);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (containerRef.current && !containerRef.current.contains(event.target)) {\n        if (is_DEBUG) {\n          console.log('MBA5678 Click outside - closing pickers');\n        }\n        setShowCalendar(false);\n        setShowTimeSelector(false);\n      }\n    };\n\n    // Only add document listeners on web platform\n    if (Platform.OS === 'web' && typeof document !== 'undefined') {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => document.removeEventListener('mousedown', handleClickOutside);\n    }\n    \n    // On mobile platforms, we'll handle click outside via Modal components\n    // which have built-in touch dismissal functionality\n  }, []);\n\n  const formatTwoDigitInput = (input, field, currentValue) => {\n    // Remove any non-numeric characters\n    const numbers = input.replace(/[^0-9]/g, '');\n    \n    if (is_DEBUG) {\n      console.log('MBA1234 Formatting input:', {\n        field,\n        input,\n        numbers,\n        currentValue\n      });\n    }\n\n    // Handle backspace (empty input)\n    if (numbers.length === 0) {\n      return '00';\n    }\n\n    // If we only have one digit\n    if (numbers.length === 1) {\n      return `0${numbers}`;\n    }\n\n    // If we have two digits\n    if (numbers.length >= 2) {\n      const firstDigit = parseInt(numbers[0], 10);\n      const secondDigit = parseInt(numbers[1], 10);\n      \n      if (field === 'month') {\n        if (firstDigit > 1 || (firstDigit === 1 && secondDigit > 2)) {\n          return '12';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'day') {\n        if (firstDigit > 3 || (firstDigit === 3 && secondDigit > 1)) {\n          return '31';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'hours') {\n        if (!currentValue.period) {\n          // 24-hour format\n          if (firstDigit > 2 || (firstDigit === 2 && secondDigit > 3)) {\n            return '23';\n          }\n        } else {\n          // 12-hour format\n          if (firstDigit > 1 || (firstDigit === 1 && secondDigit > 2)) {\n            return '12';\n          }\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n      \n      if (field === 'minutes') {\n        if (firstDigit > 5) {\n          return '59';\n        }\n        return `${firstDigit}${secondDigit}`;\n      }\n    }\n    \n    return numbers.slice(0, 2);\n  };\n\n  const formatYearInput = (input) => {\n    const numbers = input.replace(/[^0-9]/g, '');\n    if (numbers.length === 0) return '0000';\n    return numbers.padStart(4, '0').slice(0, 4);\n  };\n\n  const handleInputChange = (field, value) => {\n    let formattedValue = value;\n\n    if (is_DEBUG) {\n      console.log('MBA1234 Input change:', {\n        field,\n        value,\n        currentInputs: inputs\n      });\n    }\n\n    switch (field) {\n      case 'month':\n        formattedValue = formatTwoDigitInput(value, 'month', inputs);\n        break;\n      case 'day':\n        formattedValue = formatTwoDigitInput(value, 'day', inputs);\n        break;\n      case 'year':\n        formattedValue = formatYearInput(value);\n        break;\n      case 'hours':\n        formattedValue = formatTwoDigitInput(value, 'hours', inputs);\n        break;\n      case 'minutes':\n        formattedValue = formatTwoDigitInput(value, 'minutes', inputs);\n        break;\n      case 'period':\n        formattedValue = value;\n        break;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA1234 Formatted value:', {\n        field,\n        formattedValue\n      });\n    }\n\n    const newInputs = { ...inputs, [field]: formattedValue };\n    setInputs(newInputs);\n\n    // Only create new date if we have all required fields\n    if (newInputs.month && newInputs.day && newInputs.year && \n        newInputs.hours && newInputs.minutes) {\n      createNewDate(newInputs);\n    }\n  };\n\n  const createNewDate = (currentInputs) => {\n    try {\n      let hours = parseInt(currentInputs.hours, 10);\n      if (currentInputs.period) {\n        // Only convert hours if we're using AM/PM\n        if (currentInputs.period === 'PM' && hours !== 12) {\n          hours += 12;\n        } else if (currentInputs.period === 'AM' && hours === 12) {\n          hours = 0;\n        }\n      }\n\n      const newDate = new Date(\n        parseInt(currentInputs.year, 10),\n        parseInt(currentInputs.month, 10) - 1,\n        parseInt(currentInputs.day, 10),\n        hours,\n        parseInt(currentInputs.minutes, 10)\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Created new date:', {\n          inputs: currentInputs,\n          newDate: newDate.toISOString()\n        });\n      }\n\n      if (!isNaN(newDate.getTime())) {\n        onChange(newDate);\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA1234 Error creating date:', error);\n      }\n    }\n  };\n\n  const handleDatePress = () => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Date press - toggling calendar');\n    }\n    setShowCalendar(prev => !prev);\n    setShowTimeSelector(false);\n  };\n\n  const handleTimePress = () => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Time press - toggling time selector');\n    }\n    setShowTimeSelector(prev => !prev);\n    setShowCalendar(false);\n  };\n\n  const handleDaySelect = (day) => {\n    handleInputChange('day', String(day));\n    setShowCalendar(false);\n  };\n\n  if (is_DEBUG) {\n    console.log('MBA1234 Current state:', {\n      inputs,\n      isMilitary\n    });\n  }\n\n  return (\n    <View style={[styles.container, containerStyle]} ref={containerRef}>\n      <View style={[\n        styles.dateTimeContainer,\n        error && styles.errorBorder,\n        disabled && styles.disabled\n      ]}>\n        {/* Date Inputs */}\n        <Pressable \n          style={styles.dateInputGroup}\n          onPress={() => !disabled && handleDatePress()}\n        >\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.month}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('month', text)}\n            placeholder=\"MM\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>/</Text>\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.day}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('day', text)}\n            placeholder=\"DD\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>/</Text>\n          <TextInput\n            style={styles.yearInput}\n            value={inputs.year}\n            maxLength={4}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('year', text)}\n            placeholder=\"YYYY\"\n            editable={!disabled}\n          />\n          {screenWidth > 410 && (\n            <MaterialCommunityIcons \n              name=\"calendar\" \n              size={20} \n              color={theme.colors.text} \n              style={styles.icon} \n            />\n          )}\n        </Pressable>\n        \n        <Text style={styles.divider}>|</Text>\n        \n        {/* Time Inputs */}\n        <Pressable \n          style={styles.timeInputGroup}\n          onPress={() => !disabled && handleTimePress()}\n        >\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.hours}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('hours', text)}\n            placeholder=\"HH\"\n            editable={!disabled}\n          />\n          <Text style={styles.separator}>:</Text>\n          <TextInput\n            style={styles.numberInput}\n            value={inputs.minutes}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            onChangeText={(text) => handleInputChange('minutes', text)}\n            placeholder=\"MM\"\n            editable={!disabled}\n          />\n          \n          {/* AM/PM Toggle - only show if not military time */}\n          {!isMilitary && (\n            <Pressable\n              style={styles.periodButton}\n              onPress={() => !disabled && handleInputChange('period', inputs.period)}\n              disabled={disabled}\n            >\n              <Text style={styles.periodText}>{inputs.period}</Text>\n            </Pressable>\n          )}\n          {screenWidth > 410 && (\n            <MaterialCommunityIcons \n              name=\"clock-outline\" \n              size={20} \n              color={theme.colors.text} \n              style={styles.icon} \n            />\n          )}\n        </Pressable>\n      </View>\n\n      <Animated.View style={[\n        styles.pickerContainer,\n        { opacity: fadeAnim },\n        { display: (showCalendar || showTimeSelector) ? 'flex' : 'none' }\n      ]}>\n        {showCalendar && !disabled && (\n          <View style={styles.calendar}>\n            <View style={styles.calendarHeader}>\n              <Text style={styles.calendarHeaderText}>\n                {value.toLocaleString('default', { month: 'long' })} {value.getFullYear()}\n              </Text>\n            </View>\n            <View style={styles.calendarWeekDays}>\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n                <Text key={day} style={styles.calendarWeekDay}>{day}</Text>\n              ))}\n            </View>\n            {/* Calendar grid */}\n            {Array.from({ length: 6 }).map((_, weekIndex) => (\n              <View key={`week-${weekIndex}`} style={styles.calendarWeek}>\n                {Array.from({ length: 7 }).map((__, dayIndex) => {\n                  const dayNumber = weekIndex * 7 + dayIndex - value.getDay() + 1;\n                  const isCurrentMonth = dayNumber > 0 && dayNumber <= new Date(value.getFullYear(), value.getMonth() + 1, 0).getDate();\n                  const isSelected = parseInt(inputs.day) === dayNumber;\n                  \n                  return (\n                    <Pressable\n                      key={`day-${dayIndex}`}\n                      style={[\n                        styles.calendarDay,\n                        isSelected && styles.selectedDay,\n                        !isCurrentMonth && styles.disabledDay\n                      ]}\n                      onPress={() => isCurrentMonth && handleDaySelect(dayNumber)}\n                    >\n                      {isCurrentMonth && (\n                        <Text style={[\n                          styles.calendarDayText,\n                          isSelected && styles.selectedDayText\n                        ]}>\n                          {dayNumber}\n                        </Text>\n                      )}\n                    </Pressable>\n                  );\n                })}\n              </View>\n            ))}\n          </View>\n        )}\n\n        {showTimeSelector && !disabled && (\n          <View style={styles.timeSelector}>\n            <View style={styles.timeSelectorColumn}>\n              <Text style={styles.timeSelectorLabel}>Hour</Text>\n              <ScrollView style={styles.timeSelectorScroll}>\n                {Array.from({ length: isMilitary ? 24 : 12 }, (_, i) => (\n                  <Pressable\n                    key={i}\n                    style={[\n                      styles.timeSelectorItem,\n                      parseInt(inputs.hours) === (isMilitary ? i : i + 1) && styles.selectedTime\n                    ]}\n                    onPress={() => {\n                      handleInputChange('hours', String(isMilitary ? i : i + 1).padStart(2, '0'));\n                    }}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      parseInt(inputs.hours) === (isMilitary ? i : i + 1) && styles.selectedTimeText\n                    ]}>\n                      {String(isMilitary ? i : i + 1).padStart(2, '0')}\n                    </Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n\n            <View style={styles.timeSelectorColumn}>\n              <Text style={styles.timeSelectorLabel}>Minute</Text>\n              <ScrollView style={styles.timeSelectorScroll}>\n                {Array.from({ length: 60 }, (_, i) => (\n                  <Pressable\n                    key={i}\n                    style={[\n                      styles.timeSelectorItem,\n                      parseInt(inputs.minutes) === i && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('minutes', String(i).padStart(2, '0'))}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      parseInt(inputs.minutes) === i && styles.selectedTimeText\n                    ]}>\n                      {String(i).padStart(2, '0')}\n                    </Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n\n            {!isMilitary && (\n              <View style={styles.timeSelectorColumn}>\n                <Text style={styles.timeSelectorLabel}>Period</Text>\n                <View style={styles.periodContainer}>\n                  <Pressable\n                    style={[\n                      styles.timeSelectorItem,\n                      inputs.period === 'AM' && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('period', 'AM')}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      inputs.period === 'AM' && styles.selectedTimeText\n                    ]}>\n                      AM\n                    </Text>\n                  </Pressable>\n                  <Pressable\n                    style={[\n                      styles.timeSelectorItem,\n                      inputs.period === 'PM' && styles.selectedTime\n                    ]}\n                    onPress={() => handleInputChange('period', 'PM')}\n                  >\n                    <Text style={[\n                      styles.timeSelectorText,\n                      inputs.period === 'PM' && styles.selectedTimeText\n                    ]}>\n                      PM\n                    </Text>\n                  </Pressable>\n                </View>\n              </View>\n            )}\n          </View>\n        )}\n      </Animated.View>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'relative',\n  },\n  dateTimeContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    paddingHorizontal: 12,\n    height: 40,\n    width: '100%',\n    justifyContent: 'space-between',\n  },\n  dateInputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 4,\n  },\n  timeInputGroup: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 4,\n  },\n  numberInput: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    width: 24,\n    textAlign: 'center',\n    padding: 0,\n  },\n  yearInput: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    width: 42,\n    textAlign: 'center',\n    padding: 0,\n  },\n  separator: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginHorizontal: 2,\n  },\n  divider: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.border,\n    marginHorizontal: 8,\n  },\n  periodButton: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    marginLeft: 8,\n  },\n  periodText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n  },\n  errorBorder: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  disabled: {\n    backgroundColor: theme.colors.disabled,\n    opacity: 0.7,\n  },\n  icon: {\n    marginLeft: 8,\n  },\n  pickerContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    zIndex: 1000,\n  },\n  calendar: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginTop: 4,\n    padding: 12,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  calendarHeader: {\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  calendarHeaderText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  calendarWeekDays: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 8,\n  },\n  calendarWeekDay: {\n    width: 36,\n    textAlign: 'center',\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.placeholder,\n  },\n  calendarWeek: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 4,\n  },\n  calendarDay: {\n    width: 36,\n    height: 36,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 18,\n  },\n  calendarDayText: {\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedDay: {\n    backgroundColor: theme.colors.primary,\n  },\n  selectedDayText: {\n    color: theme.colors.surface,\n  },\n  timeSelector: {\n    flexDirection: 'row',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginTop: 4,\n    padding: 12,\n    gap: 12,\n    elevation: 5,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  timeSelectorColumn: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  timeSelectorLabel: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.placeholder,\n    marginBottom: 8,\n  },\n  timeSelectorScroll: {\n    height: 200,\n    width: '100%',\n  },\n  timeSelectorItem: {\n    padding: 12,\n    alignItems: 'center',\n    borderRadius: 4,\n    width: '100%',\n  },\n  timeSelectorText: {\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedTime: {\n    backgroundColor: theme.colors.primary,\n  },\n  selectedTimeText: {\n    color: theme.colors.surface,\n  },\n  periodContainer: {\n    width: '100%',\n  },\n  disabledDay: {\n    opacity: 0.3,\n  },\n});\n\nexport default DateTimePicker; ","import React, { useState, useEffect, useContext, useRef, useCallback } from 'react';\nimport { View, Text, Modal, TextInput, TouchableOpacity, StyleSheet, ScrollView, Picker, ActivityIndicator, Platform, Animated, Alert } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport DateTimePicker from './DateTimePicker';\nimport { AuthContext } from '../context/AuthContext'\nimport { format, parse } from 'date-fns';\nimport { TIME_OPTIONS } from '../data/mockData';\nimport { validateDateTimeRange } from '../utils/dateTimeValidation';\nimport { Button } from 'react-native-paper';\nimport { API_BASE_URL } from '../config/config';\nimport ConfirmationModal from './ConfirmationModal';\nimport { getStorage } from '../context/AuthContext';\nimport { debounce } from 'lodash';\nimport { calculateOccurrenceCost } from '../data/calculations';\n\nconst ANIMAL_COUNT_OPTIONS = ['1', '2', '3', '4', '5'];\n\nconst WebScrollStyles = `\n  .modal-scroll-container {\n    max-height: 60vh;\n    overflow-y: scroll !important;\n    padding-right: 16px;\n    display: block;\n    position: relative;\n    scrollbar-width: auto;\n    scrollbar-color: rgba(0, 0, 0, 0.5) rgba(0, 0, 0, 0.1);\n  }\n\n  .modal-scroll-container::-webkit-scrollbar {\n    width: 10px;\n    background-color: #F5F5F5;\n    display: block;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-track {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.1);\n    border: 1px solid #ccc;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n    background: rgba(0, 0, 0, 0.5);\n    border: 1px solid #aaa;\n  }\n\n  .modal-scroll-container::-webkit-scrollbar-thumb:hover {\n    background: rgba(0, 0, 0, 0.7);\n  }\n`;\n\nconst ScrollableContent = ({ children }) => {\n  if (Platform.OS === 'web') {\n    return (\n      <>\n        <style>{WebScrollStyles}</style>\n        <div className=\"modal-scroll-container\">\n          {children}\n        </div>\n      </>\n    );\n  }\n  \n  return (\n    <ScrollView showsVerticalScrollIndicator={true} persistentScrollbar={true}>\n      {children}\n    </ScrollView>\n  );\n};\n\nconst AddOccurrenceModal = ({ \n  visible, \n  onClose, \n  onAdd, \n  defaultRates, \n  hideRates = false,\n  initialOccurrence = null,\n  isEditing = false,\n  modalTitle = 'Add New Occurrence',\n  isFromRequestBooking = false,\n  booking\n}) => {\n  const { is_DEBUG, screenWidth, timeSettings } = useContext(AuthContext);\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\n  const [isAnyPickerActive, setIsAnyPickerActive] = useState(false);\n  const heightAnim = useRef(new Animated.Value(0)).current;\n  const [validationError, setValidationError] = useState(null);\n  const initialValues = useRef(null);\n  const [isCalculatingCost, setIsCalculatingCost] = useState(false);\n\n  const parseInitialDates = (initialOccurrence) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Parsing initial occurrence:', initialOccurrence);\n      console.log('MBA1234 Time settings:', timeSettings);\n    }\n\n    if (!initialOccurrence) {\n      const now = new Date();\n      const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000);\n      return {\n        startDateTime: now,\n        endDateTime: oneHourLater,\n        isMilitary: timeSettings.use_military_time\n      };\n    }\n\n    try {\n      const { startDate, startTime, endDate, endTime } = initialOccurrence;\n      \n      // Use the user's time format preference from settings \n      const isMilitary = timeSettings.use_military_time;\n      \n      if (is_DEBUG) {\n        console.log('MBA1234 Time format detection:', {\n          startTime,\n          endTime,\n          isMilitary,\n          timeSettings\n        });\n      }\n\n      // Parse the date and time strings based on format\n      let startDateTime, endDateTime;\n      \n      if (isMilitary) {\n        startDateTime = parse(\n          `${startDate} ${startTime}`,\n          'yyyy-MM-dd HH:mm',\n          new Date()\n        );\n        endDateTime = parse(\n          `${endDate} ${endTime}`,\n          'yyyy-MM-dd HH:mm',\n          new Date()\n        );\n      } else {\n        startDateTime = parse(\n          `${startDate} ${startTime}`,\n          'yyyy-MM-dd hh:mm aa',\n          new Date()\n        );\n        endDateTime = parse(\n          `${endDate} ${endTime}`,\n          'yyyy-MM-dd hh:mm aa',\n          new Date()\n        );\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Parsed dates:', {\n          startDateTime: startDateTime.toISOString(),\n          endDateTime: endDateTime.toISOString(),\n          isMilitary\n        });\n      }\n\n      return {\n        startDateTime,\n        endDateTime,\n        isMilitary\n      };\n    } catch (error) {\n      console.error('MBA1234 Error parsing dates:', error);\n      const now = new Date();\n      const oneHourLater = new Date(now.getTime() + 60 * 60 * 1000);\n      return {\n        startDateTime: now,\n        endDateTime: oneHourLater,\n        isMilitary: timeSettings.use_military_time\n      };\n    }\n  };\n\n  const initialDates = parseInitialDates(initialOccurrence);\n  \n  if (is_DEBUG) {\n    console.log('MBA565656 AddOccurrenceModal initializing with:', {\n      defaultRates,\n      initialOccurrence,\n      initialDates\n    });\n  }\n\n  const [occurrence, setOccurrence] = useState(() => {\n    const initialState = {\n      startDateTime: initialDates.startDateTime,\n      endDateTime: initialDates.endDateTime,\n      isMilitary: timeSettings.use_military_time,\n      rates: {\n        baseRate: '0',\n        additionalAnimalRate: '0',\n        appliesAfterAnimals: '1',\n        holidayRate: '0',\n        unit_of_time: 'Per Visit',\n        additionalRates: []\n      },\n      calculatedCost: '0'\n    };\n\n    // If we have an initial occurrence, use its rates\n    if (initialOccurrence?.rates) {\n      initialState.rates = initialOccurrence.rates;\n      initialState.calculatedCost = initialOccurrence.calculatedCost || '0';\n    }\n    // Otherwise if we have default rates, use those\n    else if (defaultRates) {\n      initialState.rates = {\n        baseRate: defaultRates.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates.applies_after?.toString() || '1',\n        holidayRate: defaultRates.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      };\n      initialState.calculatedCost = defaultRates.calculated_cost?.toString() || '0';\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA565656 Initial state calculated:', initialState);\n    }\n\n    return initialState;\n  });\n\n  const [unit_of_time, setUnitOfTime] = useState(\n    initialOccurrence?.rates?.unit_of_time || \n    defaultRates?.unit_of_time || \n    'Per Visit'\n  );\n\n  // Clear validation error and set initial values when modal becomes visible\n  useEffect(() => {\n    if (visible) {\n      setValidationError(null);\n      // Store initial values when modal opens, including dates\n      initialValues.current = {\n        baseRate: occurrence.rates.baseRate,\n        additionalAnimalRate: occurrence.rates.additionalAnimalRate,\n        holidayRate: occurrence.rates.holidayRate,\n        unit_of_time: occurrence.rates.unit_of_time,\n        additionalRates: [...occurrence.rates.additionalRates],\n        startDateTime: new Date(occurrence.startDateTime),\n        endDateTime: new Date(occurrence.endDateTime)\n      };\n      if (is_DEBUG) {\n        console.log('MBA565656 Setting initial values:', initialValues.current);\n      }\n    }\n  }, [visible]); // Only depend on visible prop\n\n  const handlePickerStateChange = (isActive) => {\n    setIsAnyPickerActive(isActive);\n    if (is_DEBUG) {\n      console.log('MBA5678 Picker state changed:', {\n        isActive,\n        isFromRequestBooking,\n        currentModalHeight: isActive && isFromRequestBooking ? '65vh' : '80%'\n      });\n    }\n\n    // Animate to new height\n    Animated.timing(heightAnim, {\n      toValue: isActive && isFromRequestBooking ? 1 : 0,\n      duration: 300,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA5678 Modal state:', {\n        isFromRequestBooking,\n        isAnyPickerActive,\n        visible\n      });\n    }\n  }, [isFromRequestBooking, isAnyPickerActive, visible]);\n\n  // Add effect to update rates when defaultRates changes\n  useEffect(() => {\n    if (!initialOccurrence && defaultRates) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Updating rates from defaultRates:', {\n          defaultRates,\n          currentRates: occurrence.rates\n        });\n      }\n\n      const newRates = {\n        baseRate: defaultRates.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates.applies_after?.toString() || '1',\n        holidayRate: defaultRates.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      };\n\n      if (is_DEBUG) {\n        console.log('MBA565656 Setting new rates:', newRates);\n        console.log('MBA565656 Setting calculated cost:', defaultRates.calculated_cost);\n      }\n\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          rates: newRates,\n          calculatedCost: defaultRates.calculated_cost?.toString() || '0'\n        };\n        if (is_DEBUG) {\n          console.log('MBA565656 Updated occurrence state:', updated);\n        }\n        return updated;\n      });\n      \n      setUnitOfTime(defaultRates.unit_of_time || 'Per Visit');\n    }\n  }, [defaultRates, initialOccurrence]);\n\n  // Replace the debounced API call with frontend calculation\n  const debouncedCalculateCosts = useCallback(\n    debounce((occurrenceData) => {\n      if (!booking?.booking_id) return;\n\n      try {\n        setIsCalculatingCost(true);\n        \n        // Calculate cost using frontend function\n        const result = calculateOccurrenceCost(occurrenceData, booking.pets?.length || 0);\n\n        if (is_DEBUG) {\n          console.log('MBA565656 Cost calculation result:', result);\n        }\n\n        setOccurrence(prev => ({\n          ...prev,\n          calculatedCost: result.total_cost.toFixed(2)\n        }));\n      } catch (error) {\n        if (is_DEBUG) {\n          console.error('MBA565656 Error calculating costs:', error);\n        }\n      } finally {\n        setIsCalculatingCost(false);\n      }\n    }, 500),\n    [booking?.booking_id, booking?.pets?.length]\n  );\n\n  // Update the cost calculation effect\n  useEffect(() => {\n    // Only calculate costs if:\n    // 1. Modal is visible\n    // 2. We have initial values set\n    // 3. Have a valid booking ID\n    // 4. User has made actual changes to the form\n    if (visible && initialValues.current && booking?.booking_id) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Checking for changes:', {\n          current: {\n            rates: occurrence.rates,\n            startDateTime: occurrence.startDateTime.toISOString(),\n            endDateTime: occurrence.endDateTime.toISOString()\n          },\n          initial: {\n            rates: initialValues.current,\n            startDateTime: initialValues.current.startDateTime.toISOString(),\n            endDateTime: initialValues.current.endDateTime.toISOString()\n          }\n        });\n      }\n\n      // Track if any changes were made that require recalculation\n      const timeDiffs = {\n        start: Math.abs(occurrence.startDateTime.getTime() - initialValues.current.startDateTime.getTime()),\n        end: Math.abs(occurrence.endDateTime.getTime() - initialValues.current.endDateTime.getTime())\n      };\n\n      const rateChanges = {\n        baseRate: occurrence.rates.baseRate !== initialValues.current.baseRate,\n        additionalAnimalRate: occurrence.rates.additionalAnimalRate !== initialValues.current.additionalAnimalRate,\n        holidayRate: occurrence.rates.holidayRate !== initialValues.current.holidayRate,\n        unit_of_time: occurrence.rates.unit_of_time !== initialValues.current.unit_of_time,\n        additionalRatesLength: occurrence.rates.additionalRates.length !== initialValues.current.additionalRates.length\n      };\n\n      const hasChanges = \n        rateChanges.baseRate ||\n        rateChanges.additionalAnimalRate ||\n        rateChanges.holidayRate ||\n        rateChanges.unit_of_time ||\n        rateChanges.additionalRatesLength ||\n        timeDiffs.start >= 1000 ||\n        timeDiffs.end >= 1000;\n\n      if (is_DEBUG) {\n        console.log('MBA565656 Change detection details:', {\n          timeDiffs,\n          rateChanges,\n          hasChanges\n        });\n      }\n\n      if (hasChanges) {\n        if (is_DEBUG) {\n          console.log('MBA565656 Changes detected, calculating costs:', {\n            current: {\n              rates: occurrence.rates,\n              startDateTime: occurrence.startDateTime.toISOString(),\n              endDateTime: occurrence.endDateTime.toISOString()\n            },\n            initial: {\n              rates: initialValues.current,\n              startDateTime: initialValues.current.startDateTime.toISOString(),\n              endDateTime: initialValues.current.endDateTime.toISOString()\n            },\n            timeDiffs,\n            rateChanges\n          });\n        }\n\n        const occurrenceData = {\n          start_date: format(occurrence.startDateTime, 'yyyy-MM-dd'),\n          end_date: format(occurrence.endDateTime, 'yyyy-MM-dd'),\n          start_time: format(occurrence.startDateTime, 'HH:mm'),\n          end_time: format(occurrence.endDateTime, 'HH:mm'),\n          rates: {\n            base_rate: occurrence.rates.baseRate,\n            additional_animal_rate: occurrence.rates.additionalAnimalRate,\n            applies_after: occurrence.rates.appliesAfterAnimals,\n            holiday_rate: occurrence.rates.holidayRate,\n            unit_of_time: occurrence.rates.unit_of_time,\n            additional_rates: occurrence.rates.additionalRates\n          }\n        };\n\n        if (is_DEBUG) {\n          console.log('MBA565656 Calling debouncedCalculateCosts with:', occurrenceData);\n        }\n\n        debouncedCalculateCosts(occurrenceData);\n      } else {\n        if (is_DEBUG) {\n          console.log('MBA565656 No changes detected, skipping calculation');\n        }\n      }\n    } else {\n      if (is_DEBUG) {\n        console.log('MBA565656 Skipping cost calculation:', {\n          visible,\n          hasInitialValues: !!initialValues.current,\n          hasBookingId: !!booking?.booking_id\n        });\n      }\n    }\n\n    // Cleanup function\n    return () => {\n      debouncedCalculateCosts.cancel();\n    };\n  }, [\n    visible,\n    occurrence.startDateTime,\n    occurrence.endDateTime,\n    occurrence.rates.baseRate,\n    occurrence.rates.additionalAnimalRate,\n    occurrence.rates.appliesAfterAnimals,\n    occurrence.rates.holidayRate,\n    occurrence.rates.unit_of_time,\n    occurrence.rates.additionalRates,\n    debouncedCalculateCosts,\n    booking?.booking_id\n  ]);\n\n  // Add effect to update unit_of_time when rates change\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA565656 Rates changed:', occurrence.rates);\n    }\n    setUnitOfTime(occurrence.rates.unit_of_time);\n  }, [occurrence.rates]);\n\n  // Add effect to log when modal becomes visible\n  useEffect(() => {\n    if (visible) {\n      if (is_DEBUG) {\n        console.log('MBA565656 Modal became visible:', {\n          defaultRates,\n          initialOccurrence,\n          currentRates: occurrence.rates\n        });\n      }\n    }\n  }, [visible]);\n\n  // Add effect to update military time preference when timeSettings changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA4321 Time settings changed:', timeSettings);\n    }\n    setOccurrence(prev => ({\n      ...prev,\n      isMilitary: timeSettings.use_military_time\n    }));\n  }, [timeSettings]);\n\n  // Add effect to update dates when initialOccurrence changes\n  useEffect(() => {\n    if (initialOccurrence) {\n      if (is_DEBUG) {\n        console.log('MBA4321 Initial occurrence rates:', initialOccurrence.rates);\n        console.log('MBA4321 Initial unit_of_time:', initialOccurrence.rates?.unit_of_time);\n      }\n      const dates = parseInitialDates(initialOccurrence);\n      // Use unit_of_time directly from the rates object without any transformation\n      const unit_of_time = initialOccurrence.rates?.unit_of_time;\n      if (is_DEBUG) {\n        console.log('MBA4321 Setting unit_of_time to:', unit_of_time);\n      }\n      setOccurrence(prev => ({\n        ...prev,\n        startDateTime: dates.startDateTime,\n        endDateTime: dates.endDateTime,\n        isMilitary: dates.isMilitary,\n        rates: {\n          ...initialOccurrence.rates,\n          unit_of_time: unit_of_time\n        }\n      }));\n      setUnitOfTime(unit_of_time);\n    }\n  }, [initialOccurrence]);\n\n  const handleStartDateTimeChange = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Start datetime changed:', {\n        newDate: date?.toISOString(),\n        currentInitialValues: initialValues.current,\n        currentOccurrence: {\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        }\n      });\n    }\n    if (date && !isNaN(date.getTime())) {\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          startDateTime: date\n        };\n        if (is_DEBUG) {\n          console.log('MBA1234 Updated occurrence:', {\n            startDateTime: updated.startDateTime.toISOString(),\n            endDateTime: updated.endDateTime.toISOString()\n          });\n        }\n        return updated;\n      });\n    }\n  };\n\n  const handleEndDateTimeChange = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 End datetime changed:', {\n        newDate: date?.toISOString(),\n        currentInitialValues: initialValues.current,\n        currentOccurrence: {\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        }\n      });\n    }\n    if (date && !isNaN(date.getTime())) {\n      setOccurrence(prev => {\n        const updated = {\n          ...prev,\n          endDateTime: date\n        };\n        if (is_DEBUG) {\n          console.log('MBA1234 Updated occurrence:', {\n            startDateTime: updated.startDateTime.toISOString(),\n            endDateTime: updated.endDateTime.toISOString()\n          });\n        }\n        return updated;\n      });\n    }\n  };\n\n  const handleAdd = async () => {\n    try {\n      // Format dates in UTC for backend\n      const startDate = format(occurrence.startDateTime, 'yyyy-MM-dd');\n      const startTime = format(occurrence.startDateTime, 'HH:mm');\n      const endDate = format(occurrence.endDateTime, 'yyyy-MM-dd');\n      const endTime = format(occurrence.endDateTime, 'HH:mm');\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Adding occurrence:', {\n          startDate,\n          startTime,\n          endDate,\n          endTime,\n          startDateTime: occurrence.startDateTime.toISOString(),\n          endDateTime: occurrence.endDateTime.toISOString()\n        });\n      }\n\n      const response = await onAdd({\n        startDate,\n        startTime,\n        endDate,\n        endTime,\n        rates: occurrence.rates\n      });\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Response from onAdd:', response);\n      }\n\n      if (response?.status === 'success') {\n        if (is_DEBUG) {\n          console.log('MBA1234 Successfully added/updated occurrence');\n        }\n        resetForm();\n        onClose();\n        // Show success message using Alert\n        Alert.alert('Success', response.message);\n      } else {\n        // Show error message but don't close modal\n        setValidationError(response?.message || 'Failed to add event');\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA1234 Error adding occurrence:', error);\n      }\n      setValidationError(error.message || 'An unexpected error occurred');\n    }\n  };\n\n  const [showAddRate, setShowAddRate] = useState(false);\n  const [newRate, setNewRate] = useState({ name: '', amount: '' });\n  \n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Initial occurrence:', initialOccurrence);\n      console.log('MBA1234 Unit of time set to:', unit_of_time);\n    }\n  }, [unit_of_time, initialOccurrence]);\n\n  // Update occurrence when unit_of_time changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA4321 Unit of time changed:', {\n        newUnitOfTime: unit_of_time,\n        occurrenceRatesUnitOfTime: occurrence.rates.unit_of_time\n      });\n    }\n    setOccurrence(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        unit_of_time: unit_of_time\n      }\n    }));\n  }, [unit_of_time]);\n\n  const handleDeleteRate = (index) => {\n    setOccurrence(prev => ({\n      ...prev,\n      rates: {\n        ...prev.rates,\n        additionalRates: prev.rates.additionalRates.filter((_, i) => i !== index)\n      }\n    }));\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleSubmit = () => {\n    // Validate the date/time range\n    const validation = validateDateTimeRange(\n      format(occurrence.startDateTime, 'yyyy-MM-dd'),\n      format(occurrence.endDateTime, 'yyyy-MM-dd'),\n      format(occurrence.startDateTime, 'HH:mm'),\n      format(occurrence.endDateTime, 'HH:mm')\n    );\n\n    if (!validation.isValid) {\n      setValidationError(validation.error);\n      return;\n    }\n\n    setValidationError(null);\n    handleAdd();\n  };\n\n  const resetForm = () => {\n    setOccurrence({\n      startDateTime: new Date(),\n      endDateTime: new Date(new Date().setHours(new Date().getHours() + 1)),\n      isMilitary: timeSettings.use_military_time,\n      rates: {\n        baseRate: defaultRates?.base_rate?.toString() || '0',\n        additionalAnimalRate: defaultRates?.additional_animal_rate?.toString() || '0',\n        appliesAfterAnimals: defaultRates?.applies_after?.toString() || '1',\n        holidayRate: defaultRates?.holiday_rate?.toString() || '0',\n        unit_of_time: defaultRates?.unit_of_time || 'Per Visit',\n        additionalRates: defaultRates?.additional_rates?.map(rate => ({\n          name: rate.title,\n          description: rate.description || '',\n          amount: rate.amount\n        })) || []\n      },\n      calculatedCost: '0'\n    });\n    setUnitOfTime(defaultRates?.unit_of_time || 'Per Visit');\n    setShowAddRate(false);\n    setNewRate({ name: '', amount: '' });\n  };\n\n  const renderPickerItems = (options) => {\n    return options.map((option) => (\n      <Picker.Item \n        key={option} \n        label={option} \n        value={option}\n        style={styles.pickerItem}\n      />\n    ));\n  };\n\n  const handleDeleteClick = () => {\n    setShowDeleteConfirmation(true);\n  };\n\n  const handleDeleteConfirm = () => {\n    setShowDeleteConfirmation(false);\n    handleClose();\n  };\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        onRequestClose={handleClose}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <View style={styles.modalContainer}>\n          <Animated.View style={[\n            styles.modalContent,\n            isFromRequestBooking ? {\n              maxHeight: undefined,\n              height: heightAnim.interpolate({\n                inputRange: [0, 1],\n                outputRange: ['325px', '650px']\n              }),\n              transform: [{\n                translateY: heightAnim.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0, -40]\n                })\n              }]\n            } : {\n              maxHeight: '80%'\n            }\n          ]}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>{modalTitle}</Text>\n              <TouchableOpacity onPress={handleClose}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n\n            <ScrollView \n              style={styles.scrollView}\n              contentContainerStyle={[\n                styles.scrollViewContent,\n                isFromRequestBooking && isAnyPickerActive && { paddingBottom: 300 }\n              ]}\n            >\n              <View style={[styles.section, { zIndex: 10 }]}>\n                <Text style={styles.label}>Start Date & Time</Text>\n                <DateTimePicker\n                  value={occurrence.startDateTime}\n                  onChange={handleStartDateTimeChange}\n                  error={validationError?.startDateTime}\n                  isMilitary={occurrence.isMilitary}\n                  onPickerStateChange={handlePickerStateChange}\n                />\n              </View>\n\n              <View style={[styles.section, { zIndex: 9 }]}>\n                <Text style={styles.label}>End Date & Time</Text>\n                <DateTimePicker\n                  value={occurrence.endDateTime}\n                  onChange={handleEndDateTimeChange}\n                  error={validationError?.endDateTime}\n                  isMilitary={occurrence.isMilitary}\n                  onPickerStateChange={handlePickerStateChange}\n                />\n              </View>\n\n              {!hideRates && (\n                <>\n                  <View style={[styles.section, { zIndex: 8 }]}>\n                    <Text style={styles.label}>Base Rate</Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.baseRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              baseRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                      <View style={styles.timeUnitInput}>\n                        <Text style={styles.label}>Per</Text>\n                        <Picker\n                          selectedValue={unit_of_time}\n                          onValueChange={(itemValue) => {\n                            if (is_DEBUG) {\n                              console.log('MBA4321 Picker value changed to:', itemValue);\n                            }\n                            setUnitOfTime(itemValue);\n                            setOccurrence(prev => ({\n                              ...prev,\n                              rates: {\n                                ...prev.rates,\n                                unit_of_time: itemValue\n                              }\n                            }));\n                          }}\n                          style={styles.picker}\n                        >\n                          {renderPickerItems(TIME_OPTIONS)}\n                        </Picker>\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 7 }]}>\n                    <Text style={styles.label}>\n                      {screenWidth < 375 \n                        ? `+${occurrence.rates.appliesAfterAnimals} Pet Rate`\n                        : 'Additional Pet Rate'\n                      }\n                    </Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.additionalAnimalRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              additionalAnimalRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                      <View style={styles.timeUnitInput}>\n                        <Text style={styles.label}>Applies After</Text>\n                        <Picker\n                          selectedValue={occurrence.rates.appliesAfterAnimals}\n                          onValueChange={(itemValue) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              appliesAfterAnimals: itemValue\n                            }\n                          }))}\n                          style={styles.picker}\n                        >\n                          {ANIMAL_COUNT_OPTIONS.map((option) => (\n                            <Picker.Item key={option} label={`${option} animal${option === '1' ? '' : 's'}`} value={option} />\n                          ))}\n                        </Picker>\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 6 }]}>\n                    <Text style={styles.label}>Holiday Rate</Text>\n                    <View style={styles.rateContainer}>\n                      <View style={styles.baseRateInput}>\n                        <TextInput\n                          style={styles.input}\n                          value={occurrence.rates.holidayRate.toString()}\n                          onChangeText={(text) => setOccurrence(prev => ({\n                            ...prev,\n                            rates: {\n                              ...prev.rates,\n                              holidayRate: text.replace(/[^0-9.]/g, '')\n                            }\n                          }))}\n                          keyboardType=\"decimal-pad\"\n                          placeholder=\"0.00\"\n                        />\n                      </View>\n                    </View>\n                  </View>\n\n                  <View style={[styles.section, { zIndex: 5 }]}>\n                    <Text style={styles.label}>Additional Rates</Text>\n                    {occurrence.rates.additionalRates.map((rate, index) => (\n                      <View key={index} style={[styles.rateRow, {marginBottom: 10}]}>\n                        <TextInput\n                          style={[styles.input, styles.rateInput]}\n                          value={rate.name}\n                          editable={false}\n                        />\n                        <View style={[styles.rateAmountContainer]}>\n                          <TextInput\n                            style={[styles.input, styles.rateAmountInput]}\n                            value={rate.amount.toString()}\n                            editable={false}\n                          />\n                        </View>\n                        <TouchableOpacity onPress={() => handleDeleteRate(index)}>\n                          <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.error} />\n                        </TouchableOpacity>\n                      </View>\n                    ))}\n\n                    {showAddRate ? (\n                      <>\n                        <View style={styles.rateLabelContainer}>\n                          <Text style={styles.rateTitleLabel}>Rate Title</Text>\n                          <Text style={styles.rateAmountLabel}>Rate Amount</Text>\n                        </View>\n                        <View style={styles.rateRow}>\n                          <TextInput\n                            style={[styles.input, styles.rateInput]}\n                            value={newRate.name}\n                            onChangeText={(text) => setNewRate(prev => ({ ...prev, name: text }))}\n                            placeholder=\"Rate Title\"\n                          />\n                          <View style={[styles.rateAmountContainer]}>\n                            <TextInput\n                              style={[styles.input, styles.rateAmountInput]}\n                              value={newRate.amount}\n                              onChangeText={(text) => setNewRate(prev => ({ \n                                ...prev, \n                                amount: text.replace(/[^0-9.]/g, '') \n                              }))}\n                              keyboardType=\"decimal-pad\"\n                              placeholder=\"0.00\"\n                            />\n                          </View>\n                          <TouchableOpacity onPress={() => handleAddRate()}>\n                            <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />\n                          </TouchableOpacity>\n                        </View>\n                      </>\n                    ) : (\n                      <TouchableOpacity \n                        style={styles.addRateButton}\n                        onPress={() => setShowAddRate(true)}\n                      >\n                        <Text style={styles.addRateButtonText}>Add custom rate</Text>\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                \n\n                  <View style={styles.totalSection}>\n                    <Text style={styles.totalLabel}>Total:</Text>\n                    {isCalculatingCost ? (\n                      <View style={styles.loadingContainer}>\n                        <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n                      </View>\n                    ) : (\n                      <Text style={styles.totalAmount}>${parseFloat(occurrence.calculatedCost).toFixed(2)}</Text>\n                    )}\n                  </View>\n\n                </>\n              )}\n            </ScrollView>\n\n            <View style={styles.buttonContainer}>\n              <Button \n                mode=\"outlined\" \n                onPress={handleDeleteClick}\n                style={[styles.button, { borderColor: theme.colors.error }]}\n                textColor={theme.colors.error}\n              >\n                Delete\n              </Button>\n              <Button \n                mode=\"contained\" \n                onPress={handleSubmit}\n                style={styles.button}\n              >\n                {isEditing ? 'Save Changes' : 'Add'}\n              </Button>\n            </View>\n            {validationError && (\n              <Text style={styles.errorMessage}>{validationError}</Text>\n            )}\n          </Animated.View>\n        </View>\n      </Modal>\n\n      <ConfirmationModal\n        visible={showDeleteConfirmation}\n        onClose={() => setShowDeleteConfirmation(false)}\n        onConfirm={handleDeleteConfirm}\n        actionText=\"delete this occurrence\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 20,\n    width: '95%',\n    maxWidth: 500,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  section: {\n    position: 'relative',\n    marginBottom: 16,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginBottom: 2,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  inputContainer: {\n    position: 'relative',\n    zIndex: 200, // Higher than modal content\n    marginBottom: 16,\n  },\n  dollarSign: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginRight: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 8,\n    backgroundColor: theme.colors.background,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 16,\n  },\n  button: {\n    flex: 1,\n    paddingVertical: 6,\n  },\n  rateSection: {\n    // marginBottom: 10,\n  },\n  rateContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'space-between',\n    gap: 12,\n  },\n  baseRateInput: {\n    flex: 1,\n  },\n  timeUnitInput: {\n    flex: 1,\n    marginTop: -32,\n  },\n  picker: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    height: 39,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  totalLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  totalAmount: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 8,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n    marginBottom: 10,\n    width: '100%',\n    flexWrap: 'nowrap',\n  },\n  rateInput: {\n    flex: 2,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    height: 39,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    minWidth: 0,\n  },\n  rateAmountContainer: {\n    flex: 1,\n    minWidth: 0,\n  },\n  rateAmountInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    height: 39,\n    padding: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    width: '100%',\n  },\n  addRateButton: {\n    padding: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  addRateButtonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateLabelContainer: {\n    flexDirection: 'row',\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  rateTitleLabel: {\n    flex: 2,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  rateAmountLabel: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginLeft: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n    fontSize: 14,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginTop: 8,\n  },\n  loadingContainer: {\n    minWidth: 80,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n});\n\nexport default AddOccurrenceModal;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, Modal, ScrollView, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { Button, Text, TextInput } from 'react-native-paper';\nimport { theme } from '../styles/theme';\nimport DatePicker from './DatePicker';\nimport TimePicker from './TimePicker';\nimport AddOccurrenceModal from './AddOccurrenceModal';\nimport { format } from 'date-fns';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { SERVICE_TYPE_SUGGESTIONS, mockPets } from '../data/mockData';\nimport ConfirmationModal from './ConfirmationModal';\nimport { validateDateTimeRange } from '../utils/dateTimeValidation';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { getStorage, AuthContext } from '../context/AuthContext';\n\nconst RequestBookingModal = ({ visible, onClose, onSubmit, conversationId }) => {\n  const [selectedService, setSelectedService] = useState('');\n  const { is_DEBUG } = useContext(AuthContext);\n  const [selectedPets, setSelectedPets] = useState([]);\n  const [showServiceDropdown, setShowServiceDropdown] = useState(false);\n  const [showPetDropdown, setShowPetDropdown] = useState(false);\n  const [showAddOccurrenceModal, setShowAddOccurrenceModal] = useState(false);\n  const [occurrences, setOccurrences] = useState([]);\n  const [selectedOccurrence, setSelectedOccurrence] = useState(null);\n  const [confirmationModal, setConfirmationModal] = useState({\n    visible: false,\n    actionText: '',\n    onConfirm: null,\n    isLoading: false\n  });\n  const [occurrenceErrors, setOccurrenceErrors] = useState({});\n  const [services, setServices] = useState([]);\n  const [pets, setPets] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (visible && conversationId) {\n      fetchPreRequestData();\n    } else if (!visible) {\n      // Reset states when modal is closed\n      setIsLoading(false);\n      setError(null);\n    }\n  }, [visible, conversationId]);\n\n  const fetchPreRequestData = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      if (is_DEBUG) {\n        console.log('Fetching prerequest data for conversation:', conversationId);\n      }\n      \n      const token = await getStorage('userToken');\n      const response = await axios.get(\n        `${API_BASE_URL}/api/messages/v1/prerequest_booking/${conversationId}/`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      if (is_DEBUG) {\n        console.log('Prerequest data response:', response.data);\n      }\n      \n      setServices(response.data.services);\n      setPets(response.data.pets);\n      if (is_DEBUG) {\n        console.log('Updated services:', response.data.services);\n        console.log('Updated pets:', response.data.pets);\n      }\n    } catch (err) {\n      if (is_DEBUG) {\n        console.error('Error fetching pre-request data:', err.response || err);\n      }\n      setError('Failed to load booking data. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetForm = () => {\n    setSelectedService('');\n    setSelectedPets([]);\n    setOccurrences([]);\n    setSelectedOccurrence(null);\n    setIsLoading(false);\n    setError(null);\n  };\n\n  const validateOccurrences = (occs) => {\n    const errors = {};\n    let isValid = true;\n\n    occs.forEach((occ, index) => {\n      const validation = validateDateTimeRange(\n        occ.startDate,\n        occ.endDate,\n        occ.startTime,\n        occ.endTime\n      );\n\n      if (!validation.isValid) {\n        errors[index] = validation.error;\n        isValid = false;\n      }\n    });\n\n    setOccurrenceErrors(errors);\n    return isValid;\n  };\n\n  const handleSubmit = () => {\n    if (occurrences.length === 0) return;\n\n    // Validate all occurrences before submitting\n    if (!validateOccurrences(occurrences)) {\n      return;\n    }\n\n    // Get the selected service object\n    const selectedServiceObj = services.find(s => s.service_name === selectedService);\n    if (!selectedServiceObj) {\n      setError('Please select a valid service');\n      return;\n    }\n\n    const bookingData = {\n      conversation_id: conversationId,\n      service_type: selectedServiceObj.service_id,\n      pets: selectedPets,\n      occurrences: occurrences.map(occ => ({\n        start_date: occ.startDate,\n        end_date: occ.endDate || occ.startDate,\n        start_time: occ.startTime,\n        end_time: occ.endTime\n      }))\n    };\n\n    if (is_DEBUG) {\n      console.log('Sending booking data:', JSON.stringify(bookingData, null, 2));\n    }\n\n    setIsLoading(true);\n    setError(null);\n    \n    onSubmit(bookingData)\n      .then(() => {\n        resetForm();\n        onClose();\n      })\n      .catch(err => {\n        const errorMessage = err.response?.data?.error || 'Failed to create booking request';\n        setError(errorMessage);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  };\n\n  const handleDeleteOccurrence = async (occurrenceToDelete) => {\n    setConfirmationModal(prev => ({ ...prev, isLoading: true }));\n    \n    try {\n      setOccurrences(prev => prev.filter(occ => \n        occ.startDate !== occurrenceToDelete.startDate || \n        occ.startTime !== occurrenceToDelete.startTime\n      ));\n    } finally {\n      setConfirmationModal({ \n        visible: false, \n        actionText: '', \n        onConfirm: null, \n        isLoading: false \n      });\n    }\n  };\n\n  const confirmDeleteOccurrence = (occurrence) => {\n    setConfirmationModal({\n      visible: true,\n      actionText: 'delete this occurrence',\n      onConfirm: () => handleDeleteOccurrence(occurrence),\n      isLoading: false\n    });\n  };\n\n  const handleClose = () => {\n    resetForm();\n    onClose();\n  };\n\n  const handleOpenOccurrenceModal = () => {\n    setShowServiceDropdown(false);\n    setShowPetDropdown(false);\n    setShowAddOccurrenceModal(true);\n  };\n\n  const handleOccurrenceUpdate = (newOccurrence) => {\n    const { startDate, endDate, startTime, endTime } = newOccurrence;\n    \n    // Validate the new occurrence\n    const validation = validateDateTimeRange(startDate, endDate, startTime, endTime);\n    \n    if (!validation.isValid) {\n      // Show error in the AddOccurrenceModal\n      // You'll need to add error handling in the AddOccurrenceModal component\n      return false;\n    }\n\n    if (selectedOccurrence) {\n      setOccurrences(prev => prev.map(occ => \n        occ === selectedOccurrence ? \n        { startDate, endDate, startTime, endTime } : \n        occ\n      ));\n    } else {\n      setOccurrences(prev => [...prev, { startDate, endDate, startTime, endTime }]);\n    }\n    setSelectedOccurrence(null);\n    setShowAddOccurrenceModal(false);\n    return true;\n  };\n\n  const renderServiceDropdown = () => (\n    <View style={styles.dropdownContainer}>\n      <TouchableOpacity\n        style={styles.dropdownInput}\n        onPress={() => setShowServiceDropdown(!showServiceDropdown)}\n      >\n        <Text>{selectedService || 'Select Service Type'}</Text>\n        <MaterialCommunityIcons \n          name={showServiceDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={24} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n\n      {showServiceDropdown && (\n        <View style={styles.dropdownList}>\n          <ScrollView nestedScrollEnabled={true}>\n            {services.map((service) => (\n              <TouchableOpacity\n                key={service.service_id}\n                style={styles.dropdownItem}\n                onPress={() => {\n                  setSelectedService(service.service_name);\n                  setShowServiceDropdown(false);\n                }}\n              >\n                <Text style={[\n                  styles.dropdownText,\n                  selectedService === service.service_name && styles.selectedOption\n                ]}>\n                  {service.service_name}\n                </Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderPetSelector = () => (\n    <View style={{ zIndex: 2 }}>\n      {selectedPets.map((petId) => {\n        const pet = pets.find(p => p.pet_id === petId);\n        return (\n          <View key={petId} style={styles.petItem}>\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petDetails}>{pet.pet_type} • {pet.breed}</Text>\n            </View>\n            <TouchableOpacity\n              onPress={() => setSelectedPets(prev => prev.filter(id => id !== petId))}\n            >\n              <MaterialCommunityIcons \n                name=\"close\" \n                size={24} \n                color={theme.colors.error} \n              />\n            </TouchableOpacity>\n          </View>\n        );\n      })}\n      \n      <TouchableOpacity\n        style={styles.addPetButton}\n        onPress={() => setShowPetDropdown(!showPetDropdown)}\n      >\n        <MaterialCommunityIcons \n          name={showPetDropdown ? \"chevron-up\" : \"chevron-down\"} \n          size={20} \n          color={theme.colors.primary} \n        />\n        <Text style={styles.addPetText}>\n          {selectedPets.length === 0 ? 'Select Pets' : 'Add Pet'}\n        </Text>\n      </TouchableOpacity>\n      \n      {showPetDropdown && (\n        <View style={styles.dropdownList}>\n          <ScrollView nestedScrollEnabled={true} style={styles.petDropdown}>\n            {pets\n              .filter(pet => !selectedPets.includes(pet.pet_id))\n              .map((pet) => (\n                <TouchableOpacity\n                  key={pet.pet_id}\n                  style={styles.dropdownItem}\n                  onPress={() => {\n                    setSelectedPets(prev => [...prev, pet.pet_id]);\n                    setShowPetDropdown(false);\n                  }}\n                >\n                  <View>\n                    <Text style={styles.dropdownPetName}>{pet.name}</Text>\n                    <Text style={styles.dropdownPetDetails}>\n                      {pet.pet_type} • {pet.breed}\n                    </Text>\n                  </View>\n                </TouchableOpacity>\n              ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n\n  const renderOccurrenceCard = (occ, index) => (\n    <View key={index}>\n      <TouchableOpacity \n        style={[\n          styles.occurrenceCard,\n          occurrenceErrors[index] && styles.occurrenceCardError\n        ]}\n      >\n        <View style={styles.occurrenceDetails}>\n          <Text style={styles.dateText}>\n            {occ.endDate && occ.startDate !== occ.endDate ? \n              `${occ.startDate} - ${occ.endDate}` :\n              occ.startDate\n            }\n          </Text>\n          <Text style={styles.timeText}>\n            {`${occ.startTime} - ${occ.endTime}`}\n          </Text>\n          {occurrenceErrors[index] && (\n            <Text style={styles.errorText}>{occurrenceErrors[index]}</Text>\n          )}\n        </View>\n        <View style={styles.occurrenceActions}>\n          <TouchableOpacity \n            style={styles.actionButton}\n            onPress={() => confirmDeleteOccurrence(occ)}\n          >\n            <MaterialCommunityIcons name=\"trash-can-outline\" size={20} color={theme.colors.error} />\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.actionButton}\n            onPress={() => {\n              setSelectedOccurrence(occ);\n              handleOpenOccurrenceModal();\n            }}\n          >\n            <MaterialCommunityIcons name=\"pencil\" size={20} color={theme.colors.primary} />\n          </TouchableOpacity>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n\n  return (\n    <Modal\n      visible={visible}\n      onRequestClose={handleClose}\n      animationType=\"slide\"\n      transparent={true}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalTitle}>Request Booking</Text>\n          \n          {isLoading ? (\n            <View style={styles.loadingContainer}>\n              <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              <Text>Loading booking data...</Text>\n            </View>\n          ) : error ? (\n            <View style={styles.errorContainer}>\n              <Text style={styles.errorText}>{error}</Text>\n              <Button mode=\"contained\" onPress={fetchPreRequestData}>\n                Retry\n              </Button>\n            </View>\n          ) : (\n            <ScrollView style={styles.scrollView}>\n              {/* Service Selection */}\n              <Text style={styles.label}>Select Service</Text>\n              {renderServiceDropdown()}\n\n              {/* Pet Selection */}\n              <Text style={styles.label}>Select Pets</Text>\n              {renderPetSelector()}\n\n              {/* Date & Time Selection */}\n              <Text style={styles.label}>Select Date & Time</Text>\n              {occurrences.map((occ, index) => renderOccurrenceCard(occ, index))}\n\n              <TouchableOpacity\n                style={styles.addOccurrenceButton}\n                onPress={() => {\n                  setSelectedOccurrence(null);\n                  handleOpenOccurrenceModal();\n                }}\n              >\n                <MaterialCommunityIcons name=\"plus\" size={24} color={theme.colors.primary} />\n                <Text style={styles.addOccurrenceText}>Add Date & Time</Text>\n              </TouchableOpacity>\n            </ScrollView>\n          )}\n\n          <View style={styles.buttonContainer}>\n            <Button mode=\"outlined\" onPress={handleClose} style={styles.button}>\n              Cancel\n            </Button>\n            <Button \n              mode=\"contained\" \n              onPress={handleSubmit}\n              style={styles.button}\n              disabled={!selectedService || selectedPets.length === 0 || occurrences.length === 0 || isLoading}\n            >\n              Submit\n            </Button>\n          </View>\n        </View>\n      </View>\n\n      <AddOccurrenceModal\n        visible={showAddOccurrenceModal}\n        onClose={() => setShowAddOccurrenceModal(false)}\n        onAdd={handleOccurrenceUpdate}\n        hideRates={true}\n        initialOccurrence={selectedOccurrence}\n        modalTitle={selectedOccurrence ? 'Edit Occurrence' : 'Add New Occurrence'}\n        isFromRequestBooking={true}\n      />\n\n      <ConfirmationModal\n        visible={confirmationModal.visible}\n        actionText={confirmationModal.actionText}\n        onClose={() => {\n          if (!confirmationModal.isLoading) {\n            setConfirmationModal({ \n              visible: false, \n              actionText: '', \n              onConfirm: null, \n              isLoading: false \n            });\n          }\n        }}\n        onConfirm={confirmationModal.onConfirm}\n        isLoading={confirmationModal.isLoading}\n      />\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 500,\n    maxHeight: '80%',\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  scrollView: {\n    maxHeight: '70%',\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginTop: 15,\n    marginBottom: 10,\n  },\n  serviceOptions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  serviceButton: {\n    marginBottom: 10,\n  },\n  petOptions: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 10,\n  },\n  petButton: {\n    marginBottom: 10,\n  },\n  dateContainer: {\n    gap: 10,\n  },\n  timeContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    gap: 10,\n  },\n  button: {\n    flex: 1,\n  },\n  timePickerWrapper: {\n    flex: 1,\n  },\n  dropdownContainer: {\n    position: 'relative',\n    marginBottom: 20,\n    zIndex: 3,\n  },\n  dropdownInput: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n  },\n  dropdownList: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    maxHeight: 200,\n    zIndex: 1000,\n    elevation: 5,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownText: {\n    color: theme.colors.text,\n  },\n  selectedOption: {\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  petItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petName: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  petDetails: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n  },\n  addPetButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginTop: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    justifyContent: 'center',\n  },\n  addPetText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n  occurrenceCard: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  occurrenceDetails: {\n    flex: 1,\n  },\n  dateText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  timeText: {\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.placeholder,\n  },\n  addOccurrenceButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    borderRadius: 8,\n    marginTop: 12,\n  },\n  addOccurrenceText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n  },\n  occurrenceActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 10,\n  },\n  actionButton: {\n    padding: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.error,\n    borderRadius: 4,\n  },\n  bookingRequestCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    margin: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  bookingRequestHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    gap: 8,\n  },\n  bookingRequestTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  bookingRequestDetails: {\n    gap: 8,\n  },\n  detailLabel: {\n    fontSize: theme.fontSizes.smallMedium,\n    fontWeight: '500',\n    color: theme.colors.placeholder,\n  },\n  detailText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n  },\n  acceptButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  acceptButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n  },\n  occurrenceCardError: {\n    borderColor: theme.colors.error,\n  },\n  errorText: {\n    color: theme.colors.error,\n    fontSize: theme.fontSizes.small,\n    marginTop: 4,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n});\n\nexport default RequestBookingModal; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  ActivityIndicator,\n  Image,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext } from '../../context/AuthContext';\nimport { API_BASE_URL, getMediaUrl } from '../../config/config';\nimport { getBookingAvailableServices, getBookingAvailablePets } from '../../api/API';\nimport axios from 'axios';\nimport { navigateToFrom } from '../Navigation';\n\nconst ServiceAndPetsCard = ({ \n  bookingId, \n  onServiceSelect, \n  onPetSelect, \n  selectedService, \n  selectedPets,\n  isLoading,\n  error,\n  onNext,\n  currentBookingId,\n  navigation,\n  onClose\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  const [availableServices, setAvailableServices] = useState([]);\n  const [availablePets, setAvailablePets] = useState([]);\n  const [isLoadingServices, setIsLoadingServices] = useState(false);\n  const [isLoadingPets, setIsLoadingPets] = useState(false);\n  const [serviceError, setServiceError] = useState(null);\n  const [petsError, setPetsError] = useState(null);\n\n  useEffect(() => {\n    if (bookingId) {\n      fetchAvailableServices();\n      fetchAvailablePets();\n    }\n  }, [bookingId]);\n\n  const fetchAvailableServices = async () => {\n    try {\n      setIsLoadingServices(true);\n      setServiceError(null);\n      const response = await getBookingAvailableServices(bookingId);\n      if (is_DEBUG) {\n        console.log('MBA12345 Available services response:', response);\n      }\n      setAvailableServices(response.services);\n      \n      // If there's a selected service in the response and no service is currently selected,\n      // automatically select it\n      if (response.selected_service_id && !selectedService) {\n        const serviceToSelect = response.services.find(s => s.service_id === response.selected_service_id);\n        if (serviceToSelect) {\n          onServiceSelect({\n            ...serviceToSelect,\n            isOvernightForced: serviceToSelect.is_overnight\n          });\n        }\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA12345 Error fetching services:', error);\n      }\n      setServiceError('Failed to load available services');\n    } finally {\n      setIsLoadingServices(false);\n    }\n  };\n\n  const fetchAvailablePets = async () => {\n    try {\n      setIsLoadingPets(true);\n      setPetsError(null);\n      const response = await getBookingAvailablePets(bookingId);\n      if (is_DEBUG) {\n        console.log('MBA12345 Available pets response:', response);\n      }\n      setAvailablePets(response.pets);\n      \n      // If there are selected pets in the response and no pets are currently selected,\n      // automatically select them\n      if (response.selected_pet_ids && response.selected_pet_ids.length > 0 && selectedPets.length === 0) {\n        const petsToSelect = response.pets.filter(p => response.selected_pet_ids.includes(p.pet_id));\n        petsToSelect.forEach(pet => onPetSelect(pet));\n      }\n    } catch (error) {\n      if (is_DEBUG) {\n        console.error('MBA12345 Error fetching pets:', error);\n      }\n      setPetsError('Failed to load available pets');\n    } finally {\n      setIsLoadingPets(false);\n    }\n  };\n\n  // TODO: change to animal type based icons\n  const getServiceIcon = (serviceName) => {\n    switch (serviceName.toLowerCase()) {\n      case 'dog walking':\n        return 'paw';\n      case 'house sitting':\n        return 'home';\n      case 'drop-in visits':\n        return 'food-variant';\n      case 'boarding':\n        return 'home-city';\n      default:\n        return 'paw';\n    }\n  };\n\n  const renderServiceCard = (service) => {\n    const isSelected = selectedService?.service_id === service.service_id;\n    \n    return (\n      <TouchableOpacity\n        key={service.service_id}\n        style={[\n          styles.serviceCard,\n          isSelected && styles.selectedServiceCard\n        ]}\n        onPress={() => onServiceSelect({\n          ...service,\n          isOvernightForced: service.is_overnight\n        })}\n      >\n        {/* TODO: change to animal type based icons */}\n        <MaterialCommunityIcons \n          name={getServiceIcon(service.service_name)}\n          size={24}\n          color={isSelected ? theme.colors.mainColors.main : theme.colors.text}\n        />\n        <Text style={[\n          styles.serviceText,\n          isSelected && styles.selectedServiceText\n        ]}>\n          {service.service_name}\n        </Text>\n        {isSelected && (\n          <MaterialCommunityIcons \n            name=\"check\" \n            size={24} \n            color={theme.colors.mainColors.main}\n            style={styles.serviceCheckIcon}\n          />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  const renderPetCard = (pet) => {\n    const isSelected = selectedPets.some(selectedPet => selectedPet.pet_id === pet.pet_id);\n    \n    return (\n      <TouchableOpacity\n        key={pet.pet_id}\n        style={[\n          styles.petCard,\n          isSelected && styles.selectedPetCard\n        ]}\n        onPress={() => onPetSelect(pet)}\n      >\n        <View style={styles.petImageContainer}>\n          {pet.profile_photo ? (\n            <Image \n              source={{ uri: getMediaUrl(pet.profile_photo) }} \n              style={styles.petImage}\n              defaultSource={require('../../../assets/default-pet-image.png')}\n            />\n          ) : (\n            <View style={styles.defaultPetImage}>\n              <MaterialCommunityIcons \n                name=\"paw\" \n                size={24} \n                color={theme.colors.placeHolderText}\n              />\n            </View>\n          )}\n        </View>\n        <View style={styles.petInfo}>\n          <Text style={styles.petName}>{pet.name.toLowerCase().charAt(0).toUpperCase() + pet.name.toLowerCase().slice(1)}</Text>\n          <Text style={styles.petDetails}>\n            {pet.species ? pet.species.toLowerCase().charAt(0).toUpperCase() + pet.species.toLowerCase().slice(1) : 'No species'} • {pet.breed ? pet.breed.toLowerCase().charAt(0).toUpperCase() + pet.breed.toLowerCase().slice(1) : 'No breed'}\n          </Text>\n        </View>\n        {isSelected && (\n          <MaterialCommunityIcons \n            name=\"check\" \n            size={24} \n            color={theme.colors.mainColors.main}\n            style={styles.checkIcon}\n          />\n        )}\n      </TouchableOpacity>\n    );\n  };\n\n  const renderSelectedItems = () => {\n    if (!selectedService && selectedPets.length === 0) return null;\n\n    return (\n      <View style={styles.selectedItemsContainer}>\n        <Text style={styles.selectedItemsTitle}>Selected Service & Pets:</Text>\n        <View style={styles.selectedItemsContent}>\n          {selectedService && (\n            <TouchableOpacity \n              style={styles.selectedTag}\n              onPress={() => onServiceSelect(null)}\n            >\n              <Text style={styles.selectedTagText}>{selectedService.service_name}</Text>\n              <MaterialCommunityIcons name=\"close\" size={16} color={theme.colors.mainColors.main} />\n            </TouchableOpacity>\n          )}\n          {selectedPets.map(pet => (\n            <TouchableOpacity \n              key={pet.pet_id}\n              style={styles.selectedTag}\n              onPress={() => onPetSelect(pet)}\n            >\n              <Text style={styles.selectedTagText}>{pet.name}</Text>\n              <MaterialCommunityIcons name=\"close\" size={16} color={theme.colors.mainColors.main} />\n            </TouchableOpacity>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const handleNext = async () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleNext:', {\n        selectedService,\n        selectedPets,\n        currentBookingId\n      });\n    }\n\n    if (!selectedService || selectedPets.length === 0) {\n      Alert.alert('Error', 'Please select both a service and at least one pet before proceeding.');\n      return;\n    }\n\n    try {\n      // Update the draft with selected service and pets\n      const response = await axios.patch(\n        `${API_BASE_URL}/api/booking_drafts/v1/${currentBookingId}/update/`,\n        {\n          service_id: selectedService.service_id,\n          pet_ids: selectedPets.map(pet => pet.pet_id)\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA98765 Draft update response:', response.data);\n      }\n\n      // If successful, proceed to next step\n      onNext();\n    } catch (error) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Error updating draft:', error);\n      }\n      Alert.alert('Error', 'Failed to update booking draft. Please try again.');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.mainColors.main} />\n      </View>\n    );\n  }\n\n  if (error) {\n    return (\n      <View style={styles.errorContainer}>\n        <Text style={styles.errorText}>{error}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Select Service</Text>\n        {serviceError ? (\n          <Text style={styles.errorText}>{serviceError}</Text>\n        ) : isLoadingServices ? (\n          <ActivityIndicator size=\"small\" color={theme.colors.mainColors.main} />\n        ) : availableServices.length > 0 ? (\n          <View style={styles.servicesGrid}>\n            {availableServices.map(service => renderServiceCard(service))}\n          </View>\n        ) : (\n          <View style={styles.noServicesContainer}>\n            <Text style={styles.errorText}>No services available. Please add services to create a booking.</Text>\n            <TouchableOpacity \n              style={styles.createServiceButton} \n              onPress={() => {\n                onClose();\n                navigateToFrom(navigation, 'ServiceManager', 'MessageHistory');\n              }}\n            >\n              <Text style={styles.createServiceButtonText}>Create Services</Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n\n      <View style={styles.section}>\n        <Text style={styles.sectionTitle}>Select Pets</Text>\n        {petsError ? (\n          <Text style={styles.errorText}>{petsError}</Text>\n        ) : isLoadingPets ? (\n          <ActivityIndicator size=\"small\" color={theme.colors.mainColors.main} />\n        ) : (\n          availablePets.length > 0 ? (\n            <View style={styles.petsContainer}>\n              {availablePets.map(pet => renderPetCard(pet))}\n            </View>\n          ) : (\n            <Text style={styles.errorText}>Please instruct client to add pets to their account so you can create a booking for their pets.</Text>\n          )\n        )}\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  section: {\n    padding: 16,\n  },\n  sectionTitle: {\n    fontSize: Platform.OS === 'web' ? 18 : 14,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 16,\n    color: theme.colors.text,\n  },\n  servicesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n    justifyContent: 'flex-start',\n    width: '100%',\n  },\n  serviceCard: {\n    width: '31%',\n    minWidth: 100,\n    maxWidth: 150,\n    aspectRatio: 1.2,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginBottom: 8,\n  },\n  selectedServiceCard: {\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderColor: theme.colors.mainColors.main,\n  },\n  serviceText: {\n    marginTop: 8,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    width: '100%',\n  },\n  selectedServiceText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  petsContainer: {\n    gap: 12,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-start',\n  },\n  petCard: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    width: Platform.OS === 'web' ? 'calc(50% - 6px)' : '100%',\n    minWidth: Platform.OS === 'web' ? 250 : 'auto',\n    maxWidth: Platform.OS === 'web' ? 400 : '100%',\n  },\n  selectedPetCard: {\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderColor: theme.colors.mainColors.main,\n  },\n  petImageContainer: {\n    marginRight: 12,\n  },\n  petImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n  },\n  defaultPetImage: {\n    width: 48,\n    height: 48,\n    borderRadius: 24,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petInfo: {\n    flex: 1,\n  },\n  petName: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 4,\n    color: theme.colors.text,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  checkIcon: {\n    marginLeft: 12,\n  },\n  selectedItemsContainer: {\n    backgroundColor: 'rgba(0, 0, 0, 0.03)',\n    padding: 16,\n    borderRadius: 8,\n  },\n  selectedItemsTitle: {\n    fontSize: Platform.OS === 'web' ? 14 : 10,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 16,\n    color: theme.colors.text,\n  },\n  selectedItemsContent: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n  },\n  selectedTag: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: `${theme.colors.mainColors.main}10`,\n    borderRadius: 20,\n    paddingVertical: 6,\n    paddingHorizontal: 12,\n    gap: 8,\n  },\n  selectedTagText: {\n    color: theme.colors.mainColors.main,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceCheckIcon: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n  },\n  createServiceButton: {\n    backgroundColor: theme.colors.mainColors.main,\n    padding: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ServiceAndPetsCard; ","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ScrollView,\n  Dimensions,\n  Modal,\n  Platform,\n  Image,\n  Animated,\n} from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\n\nconst DateSelectionCard = ({ \n  selectedDates = [], \n  onDateSelect,\n  bookingType = 'one-time', // 'one-time' or 'recurring'\n  dateRangeType = 'date-range', // 'date-range' or 'multiple-days'\n  initialDateRange = null,\n  isOvernightForced = false,\n}) => {\n  const { is_DEBUG, screenWidth } = useContext(AuthContext);\n  const isDesktop = screenWidth > 768;\n  const [currentMonth, setCurrentMonth] = useState(new Date());\n  const [selectedDatesList, setSelectedDatesList] = useState(selectedDates);\n  const [selectedBookingType, setSelectedBookingType] = useState(isOvernightForced ? 'one-time' : bookingType);\n  const [selectedDateRangeType, setSelectedDateRangeType] = useState('date-range');\n  const [rangeStartDate, setRangeStartDate] = useState(initialDateRange ? initialDateRange.startDate : null);\n  const [selectedDaysOfWeek, setSelectedDaysOfWeek] = useState([1, 3]); // Default to M,W\n  const [selectedFrequency, setSelectedFrequency] = useState('weekly'); // 'weekly', 'bi-weekly', 'monthly'\n  const [dateRangeEnd, setDateRangeEnd] = useState(initialDateRange ? initialDateRange.endDate : null);\n  const [showRecurringCalendar, setShowRecurringCalendar] = useState(false);\n  const [recurringStartDate, setRecurringStartDate] = useState(new Date());\n  const [recurringEndDate, setRecurringEndDate] = useState(() => {\n    const date = new Date();\n    date.setMonth(date.getMonth() + 1);\n    return date;\n  });\n  const [isSelectingStartDate, setIsSelectingStartDate] = useState(true);\n  const [showRecurringPreview, setShowRecurringPreview] = useState(false);\n  const [showRecurringDropdownCalendar, setShowRecurringDropdownCalendar] = useState(false);\n  const [tempRangeStart, setTempRangeStart] = useState(null);\n  const [tempRangeEnd, setTempRangeEnd] = useState(null);\n  const [datesFromRange, setDatesFromRange] = useState(false);\n  const [lastRangeSelection, setLastRangeSelection] = useState(null);\n\n  useEffect(() => {\n    debugLog('MBA54321 DateSelectionCard initialized with dates:', selectedDates);\n    debugLog('MBA54321 Current booking type:', bookingType);\n    debugLog('MBA54321 Current date range type:', dateRangeType);\n    debugLog('MBA54321 Initial date range:', initialDateRange);\n    debugLog('MBA54321 isOvernightForced:', isOvernightForced);\n    \n    // Set the booking type and date range type from props\n    setSelectedBookingType(isOvernightForced ? 'one-time' : bookingType);\n    \n    // For overnight services, ALWAYS force date-range selection type\n    // For non-overnight services, ALWAYS force multiple-days selection type\n    if (isOvernightForced) {\n      setSelectedDateRangeType('date-range');\n    } else {\n      // TODO: [NON-OVERNIGHT Date Range Feature] This is for date ranges for non-overnight services, uncomment after MVP launch\n      // // Check if the dates are non-consecutive to enforce multiple-days mode\n      // if (selectedDates && selectedDates.length > 1) {\n      //   const datesArray = selectedDates.map(dateItem => {\n      //     if (dateItem instanceof Date) {\n      //       return dateItem;\n      //     } else if (typeof dateItem === 'object' && dateItem.date) {\n      //       return new Date(dateItem.date);\n      //     } else {\n      //       return new Date(dateItem);\n      //     }\n      //   }).sort((a, b) => a - b);\n        \n      //   // Check if dates are consecutive\n      //   let areConsecutive = true;\n      //   for (let i = 1; i < datesArray.length; i++) {\n      //     const prevDate = new Date(datesArray[i-1]);\n      //     const currDate = new Date(datesArray[i]);\n      //     prevDate.setDate(prevDate.getDate() + 1);\n          \n      //     if (prevDate.getTime() !== currDate.getTime()) {\n      //       areConsecutive = false;\n      //       break;\n      //     }\n      //   }\n        \n      //   // Set appropriate date range type\n      //   if (!areConsecutive) {\n      setSelectedDateRangeType('multiple-days');\n      // TODO: [NON-OVERNIGHT Date Range Feature] This is for date ranges for non-overnight services, uncomment after MVP launch\n      //     debugLog('MBA54321 Non-consecutive dates detected, enforcing multiple-days mode');\n      //   } else {\n      //     setSelectedDateRangeType(dateRangeType);\n      //   }\n      // } else {\n      //   setSelectedDateRangeType(dateRangeType);\n      // }\n    }\n    \n    // Handle dates from draft that might be in a different format\n    if (selectedDates && selectedDates.length > 0) {\n      // Check if the dates are already Date objects or if they're objects with a date property\n      const datesArray = selectedDates.map(dateItem => {\n        if (dateItem instanceof Date) {\n          return dateItem; // Already a Date object\n        } else if (typeof dateItem === 'object' && dateItem.date) {\n          // It's a date object with a date property (from draft data)\n          // Format is typically { date: '2023-05-01', startTime: '09:00', endTime: '17:00' }\n          return new Date(dateItem.date);\n        } else {\n          // Unknown format, try to parse as date\n          return new Date(dateItem);\n        }\n      });\n      \n      setSelectedDatesList(datesArray);\n      \n      // If in date-range mode and dates are consecutive, set the range start and end dates\n      const areConsecutiveDates = checkIfConsecutiveDates(datesArray);\n      \n      if ((dateRangeType === 'date-range' || isOvernightForced) && datesArray.length > 0 && areConsecutiveDates) {\n        // Sort dates to get min and max\n        const sortedDates = [...datesArray].sort((a, b) => a - b);\n        setRangeStartDate(sortedDates[0]);\n        setDateRangeEnd(sortedDates[sortedDates.length - 1]);\n        setDatesFromRange(true);\n      } else if (datesArray.length > 0) {\n        // For non-consecutive dates, we'll stay in multiple-days mode\n        setDatesFromRange(false);\n      }\n      \n      // Notify parent component that we have valid dates\n      if (onDateSelect) {\n        // TODO: [NON-OVERNIGHT Date Range Feature] Add this back to the conditional below instead of just multiple days\n        // (!areConsecutiveDates ? 'multiple-days' : dateRangeType),\n        const dateData = {\n          type: bookingType,\n          dates: datesArray,\n          rangeType: isOvernightForced ? 'date-range' : 'multiple-days',\n          isValid: true\n        };\n        \n        // Add range data if in date-range mode and dates are consecutive\n        if ((dateRangeType === 'date-range' || isOvernightForced) && \n            datesArray.length > 0 && \n            areConsecutiveDates) {\n          const sortedDates = [...datesArray].sort((a, b) => a - b);\n          dateData.startDate = sortedDates[0];\n          dateData.endDate = sortedDates[sortedDates.length - 1];\n        }\n        \n        onDateSelect(dateData);\n      }\n    }\n  }, []);\n\n  // Helper function to check if an array of dates contains only consecutive dates\n  const checkIfConsecutiveDates = (datesArray) => {\n    if (!datesArray || datesArray.length <= 1) return true;\n    \n    // Sort the dates\n    const sortedDates = [...datesArray].sort((a, b) => a - b);\n    \n    // Check if each date is exactly one day after the previous\n    for (let i = 1; i < sortedDates.length; i++) {\n      const prevDate = new Date(sortedDates[i-1]);\n      const currDate = new Date(sortedDates[i]);\n      prevDate.setDate(prevDate.getDate() + 1);\n      \n      if (prevDate.getTime() !== currDate.getTime()) {\n        debugLog('MBA54321 Non-consecutive dates found:', {\n          prev: sortedDates[i-1].toISOString().split('T')[0],\n          current: sortedDates[i].toISOString().split('T')[0]\n        });\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // Initialize date range if provided separately via initialDateRange\n  useEffect(() => {\n    if (initialDateRange && initialDateRange.startDate && initialDateRange.endDate && !datesFromRange) {\n      // Check if we already have selectedDatesList populated\n      // If so, we need to determine if these are non-consecutive dates\n      if (selectedDatesList.length > 0 && !checkIfConsecutiveDates(selectedDatesList)) {\n        debugLog('MBA54321 Non-consecutive dates already loaded, not converting to range');\n        \n        // We already have non-consecutive dates, don't override with a range\n        if (onDateSelect) {\n          onDateSelect({\n            type: bookingType,\n            dates: selectedDatesList,\n            rangeType: 'multiple-days',\n            isValid: selectedDatesList.length > 0\n          });\n        }\n        return;\n      }\n      \n      const dateRange = [];\n      const currentDate = new Date(initialDateRange.startDate);\n      const endDate = new Date(initialDateRange.endDate);\n      \n      while (currentDate <= endDate) {\n        dateRange.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      \n      setSelectedDatesList(dateRange);\n      setRangeStartDate(new Date(initialDateRange.startDate));\n      setDateRangeEnd(new Date(initialDateRange.endDate));\n      setDatesFromRange(true);\n\n      if (onDateSelect) {\n        onDateSelect({\n          type: bookingType,\n          dates: dateRange,\n          rangeType: 'date-range',\n          startDate: new Date(initialDateRange.startDate),\n          endDate: new Date(initialDateRange.endDate),\n          isValid: true\n        });\n      }\n    }\n  }, [initialDateRange, datesFromRange]);\n\n  const handleBookingTypeSelect = (type) => {\n    if (isOvernightForced) return; // Prevent booking type changes for overnight services\n    \n    if (is_DEBUG) {\n      console.log('MBA54321 Booking type selected:', type);\n    }\n    setSelectedBookingType(type);\n    // Clear selected dates when changing booking type\n    setSelectedDatesList([]);\n    setRangeStartDate(null);\n    setDateRangeEnd(null);\n    setDatesFromRange(false);\n  };\n\n  const handleDateRangeTypeSelect = (type) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Date range type selected:', type);\n      console.log('MBA54321 Current range data:', {\n        rangeStartDate,\n        dateRangeEnd,\n        selectedDatesList: selectedDatesList.length\n      });\n    }\n    \n    // Check if we're switching to date-range with non-consecutive dates\n    if (type === 'date-range' && selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      debugLog('MBA54321 Cannot switch to date-range with existing non-consecutive dates');\n      // The UI will handle this by clearing dates first, so we don't need additional handling here\n      return;\n    }\n    \n    setSelectedDateRangeType(type);\n    \n    if (type === 'date-range' && lastRangeSelection) {\n      // Only restore the last range selection when switching to date-range\n      // if those dates were actually consecutive\n      if (checkIfConsecutiveDates(lastRangeSelection.dates)) {\n        setRangeStartDate(lastRangeSelection.startDate);\n        setDateRangeEnd(lastRangeSelection.endDate);\n        setSelectedDatesList(lastRangeSelection.dates);\n        setDatesFromRange(true);\n        \n        if (onDateSelect) {\n          onDateSelect({\n            type: 'one-time',\n            dates: lastRangeSelection.dates,\n            rangeType: 'date-range',\n            startDate: lastRangeSelection.startDate,\n            endDate: lastRangeSelection.endDate,\n            isValid: true\n          });\n        }\n      } else {\n        // Current dates are not consecutive - keep in multiple-days mode and show warning\n        debugLog('MBA54321 Cannot switch to date-range with non-consecutive dates');\n        \n        // Revert the UI selection\n        setTimeout(() => {\n          setSelectedDateRangeType('multiple-days');\n        }, 100);\n        \n        // Keep the existing dates in multiple-days mode\n        if (onDateSelect) {\n          onDateSelect({\n            type: 'one-time',\n            dates: selectedDatesList,\n            rangeType: 'multiple-days',\n            isValid: selectedDatesList.length > 0\n          });\n        }\n      }\n    } else if (type === 'multiple-days') {\n      // Store the current range selection before switching to multiple-days\n      if (rangeStartDate && dateRangeEnd) {\n        setLastRangeSelection({\n          startDate: rangeStartDate,\n          endDate: dateRangeEnd,\n          dates: selectedDatesList\n        });\n      }\n      \n      // Keep the selected dates when switching to multiple-days\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: selectedDatesList,\n          rangeType: 'multiple-days',\n          isValid: selectedDatesList.length > 0\n        });\n      }\n    }\n  };\n\n  const handleDayOfWeekSelect = (dayIndex) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Day of week toggled:', dayIndex);\n    }\n    \n    setSelectedDaysOfWeek(prev => {\n      if (prev.includes(dayIndex)) {\n        return prev.filter(day => day !== dayIndex);\n      } else {\n        return [...prev, dayIndex];\n      }\n    });\n  };\n\n  const handleFrequencySelect = (frequency) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Frequency selected:', frequency);\n    }\n    setSelectedFrequency(frequency);\n  };\n\n  const goToPreviousMonth = () => {\n    const prevMonth = new Date(currentMonth);\n    prevMonth.setMonth(prevMonth.getMonth() - 1);\n    setCurrentMonth(prevMonth);\n  };\n\n  const goToNextMonth = () => {\n    const nextMonth = new Date(currentMonth);\n    nextMonth.setMonth(nextMonth.getMonth() + 1);\n    setCurrentMonth(nextMonth);\n  };\n\n  const isDateSelected = (date) => {\n    return selectedDatesList.some(selectedDate => {\n      // Ensure selectedDate is a proper Date object\n      if (!(selectedDate instanceof Date)) {\n        // Try to convert selectedDate to a Date if it's not already one\n        if (typeof selectedDate === 'string') {\n          selectedDate = new Date(selectedDate);\n        } else if (selectedDate && typeof selectedDate.date === 'string') {\n          selectedDate = new Date(selectedDate.date);\n        } else {\n          // Return false if we can't convert to a Date\n          return false;\n        }\n      }\n      \n      // Now safe to call Date methods\n      return selectedDate.getDate() === date.getDate() && \n             selectedDate.getMonth() === date.getMonth() && \n             selectedDate.getFullYear() === date.getFullYear();\n    });\n  };\n\n  const isDateInRange = (date) => {\n    if (!rangeStartDate || !dateRangeEnd) return false;\n    \n    return date >= rangeStartDate && date <= dateRangeEnd;\n  };\n\n  const handleDateSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Date selected:', date);\n    }\n\n    if (isOvernightForced || selectedDateRangeType === 'date-range') {\n      handleDateRangeSelection(date);\n    } else {\n      // Multiple days selection\n      toggleDateSelection(date);\n    }\n  };\n\n  const handleDateRangeSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b handleDateRangeSelection - date:', date);\n      console.log('MBA19ynkiy34b handleDateRangeSelection - current state:', {\n        rangeStartDate,\n        dateRangeEnd,\n        selectedDatesList: selectedDatesList.length\n      });\n    }\n\n    // If we have non-consecutive dates but we're in date-range mode,\n    // we should clear them first\n    if (selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      debugLog('MBA19ynkiy34b handleDateRangeSelection - clearing non-consecutive dates for date range');\n      setSelectedDatesList([date]);\n      setRangeStartDate(date);\n      setDateRangeEnd(null);\n      setDatesFromRange(false);\n      \n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n      return;\n    }\n\n    // First check if we already have non-consecutive dates selected\n    if (selectedDatesList.length > 1 && !checkIfConsecutiveDates(selectedDatesList)) {\n      // We have non-consecutive dates, so we should be in multiple-days mode\n      if (selectedDateRangeType !== 'multiple-days') {\n        debugLog('MBA19ynkiy34b Non-consecutive dates exist, forcing multiple-days mode');\n        setSelectedDateRangeType('multiple-days');\n      }\n      \n      // Handle the date click as a toggle in multiple-days mode\n      toggleDateSelection(date);\n      return;\n    }\n\n    if (!rangeStartDate) {\n      setRangeStartDate(date);\n      setSelectedDatesList([date]);\n      setDateRangeEnd(null);\n      setLastRangeSelection(null); // Clear last range when starting new selection\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - first date selected');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n    } else if (!dateRangeEnd) {\n      let startDate = new Date(rangeStartDate);\n      let endDate = new Date(date);\n      \n      if (date < rangeStartDate) {\n        startDate = new Date(date);\n        endDate = new Date(rangeStartDate);\n      }\n      \n      setDateRangeEnd(endDate);\n      \n      const dateRange = [];\n      const currentDate = new Date(startDate);\n      \n      while (currentDate <= endDate) {\n        dateRange.push(new Date(currentDate));\n        currentDate.setDate(currentDate.getDate() + 1);\n      }\n      \n      setSelectedDatesList(dateRange);\n      // Store the new range selection\n      setLastRangeSelection({\n        startDate: startDate,\n        endDate: endDate,\n        dates: dateRange\n      });\n\n      if (onDateSelect) {\n        const data = {\n          type: 'one-time',\n          dates: dateRange,\n          rangeType: 'date-range',\n          startDate: startDate,\n          endDate: endDate,\n          isValid: true\n        };\n        if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - complete range selected, sending data:', data);\n        onDateSelect(data);\n      }\n    } else {\n      setRangeStartDate(date);\n      setSelectedDatesList([date]);\n      setDateRangeEnd(null);\n      setLastRangeSelection(null); // Clear last range when starting new selection\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleDateRangeSelection - resetting selection');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'one-time',\n          dates: [date],\n          rangeType: 'date-range',\n          startDate: date,\n          isValid: false\n        });\n      }\n    }\n  };\n\n  const toggleDateSelection = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b toggleDateSelection - date:', date);\n      console.log('MBA19ynkiy34b toggleDateSelection - current selected dates:', selectedDatesList.length);\n    }\n\n    const isAlreadySelected = isDateSelected(date);\n    let newSelectedDates;\n    \n    if (isAlreadySelected) {\n      newSelectedDates = selectedDatesList.filter(selectedDate => {\n        // Ensure selectedDate is a proper Date object\n        if (!(selectedDate instanceof Date)) {\n          // Try to convert to date if needed\n          if (typeof selectedDate === 'string') {\n            selectedDate = new Date(selectedDate);\n          } else if (selectedDate && typeof selectedDate.date === 'string') {\n            selectedDate = new Date(selectedDate.date);\n          } else {\n            // Can't compare, so keep this entry\n            return true;\n          }\n        }\n        \n        return !(selectedDate.getDate() === date.getDate() && \n                 selectedDate.getMonth() === date.getMonth() && \n                 selectedDate.getFullYear() === date.getFullYear());\n      });\n    } else {\n      newSelectedDates = [...selectedDatesList, date].sort((a, b) => a - b);\n    }\n    \n    setSelectedDatesList(newSelectedDates);\n\n    if (onDateSelect) {\n      const data = {\n        type: 'one-time',\n        dates: newSelectedDates,\n        rangeType: 'multiple-days',\n        isValid: newSelectedDates.length > 0\n      };\n      if (is_DEBUG) {\n        console.log('MBA19ynkiy34b toggleDateSelection - sending data:', data);\n        console.log('MBA19ynkiy34b toggleDateSelection - newSelectedDates length:', newSelectedDates.length);\n      }\n      onDateSelect(data);\n    }\n  };\n\n  const handleRecurringDateSelect = (date) => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b handleRecurringDateSelect - date:', date);\n      console.log('MBA19ynkiy34b handleRecurringDateSelect - current state:', {\n        tempRangeStart,\n        selectedDaysOfWeek: selectedDaysOfWeek.length,\n        frequency: selectedFrequency\n      });\n    }\n    \n    if (!tempRangeStart) {\n      setTempRangeStart(date);\n      setRecurringStartDate(date);\n      if (is_DEBUG) console.log('MBA19ynkiy34b handleRecurringDateSelect - first date selected');\n      if (onDateSelect) {\n        onDateSelect({\n          type: 'recurring',\n          startDate: date,\n          daysOfWeek: selectedDaysOfWeek,\n          frequency: selectedFrequency,\n          isValid: false\n        });\n      }\n    } else {\n      let startDate = tempRangeStart;\n      let endDate = date;\n      \n      if (date < tempRangeStart) {\n        startDate = date;\n        endDate = tempRangeStart;\n      }\n      \n      setRecurringStartDate(startDate);\n      setRecurringEndDate(endDate);\n      setTempRangeStart(null);\n      setTempRangeEnd(null);\n      setShowRecurringDropdownCalendar(false);\n\n      if (onDateSelect) {\n        const data = {\n          type: 'recurring',\n          daysOfWeek: selectedDaysOfWeek,\n          frequency: selectedFrequency,\n          startDate: startDate,\n          endDate: endDate,\n          isValid: selectedDaysOfWeek.length > 0\n        };\n        if (is_DEBUG) {\n          console.log('MBA19ynkiy34b handleRecurringDateSelect - complete selection, sending data:', data);\n          console.log('MBA19ynkiy34b handleRecurringDateSelect - selectedDaysOfWeek:', selectedDaysOfWeek);\n        }\n        onDateSelect(data);\n      }\n    }\n  };\n\n  const isDateInTempRange = (date) => {\n    if (!tempRangeStart || !date) return false;\n    // Only highlight the tempRangeStart date if no end date is selected yet\n    if (!tempRangeEnd) {\n      return date.getTime() === tempRangeStart.getTime();\n    }\n    // Otherwise highlight the range between start and end\n    return date >= tempRangeStart && date <= tempRangeEnd;\n  };\n\n  const openRecurringCalendar = (isStart) => {\n    setIsSelectingStartDate(isStart);\n    setShowRecurringCalendar(true);\n  };\n\n  const isDateSelectable = (date) => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    \n    // Allow selection of dates from previous month that are visible\n    if (date.getMonth() < currentMonth.getMonth()) {\n      return date.getMonth() === ((currentMonth.getMonth() - 1 + 12) % 12) &&\n             date >= today;\n    }\n    \n    // Allow selection of dates from next month that are visible\n    if (date.getMonth() > currentMonth.getMonth()) {\n      return date.getMonth() === ((currentMonth.getMonth() + 1) % 12) &&\n             date >= today;\n    }\n    \n    return date >= today;\n  };\n\n  const getSelectedDaysText = () => {\n    const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    const selectedDays = selectedDaysOfWeek.map(dayIndex => dayNames[dayIndex]);\n    \n    if (selectedDays.length === 0) return 'No days selected';\n    \n    let daysText = '';\n    if (selectedDays.length === 1) {\n      daysText = selectedDays[0];\n    } else if (selectedDays.length === 2) {\n      daysText = `${selectedDays[0]} and ${selectedDays[1]}`;\n    } else {\n      const lastDay = selectedDays.pop();\n      daysText = `${selectedDays.join(', ')}, and ${lastDay}`;\n    }\n\n    switch (selectedFrequency) {\n      case 'bi-weekly':\n        return `every other ${daysText}`;\n      case 'monthly':\n        const weekNum = getWeekOfMonth(recurringStartDate);\n        return `the ${weekNum} ${daysText} of each month`;\n      default:\n        return `every ${daysText}`;\n    }\n  };\n\n  const getWeekOfMonth = (date) => {\n    const week = Math.ceil((date.getDate() + (date.getDay() === 0 ? 6 : date.getDay() - 1)) / 7);\n    const suffixes = ['first', 'second', 'third', 'fourth', 'last'];\n    return suffixes[Math.min(week - 1, 4)];\n  };\n\n  const renderCalendar = () => {\n    const monthStart = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);\n    const monthEnd = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);\n    const startDate = new Date(monthStart);\n    const endDate = new Date(monthEnd);\n    \n    startDate.setDate(startDate.getDate() - startDate.getDay());\n    endDate.setDate(endDate.getDate() + (6 - endDate.getDay()));\n    \n    const weeks = [];\n    let days = [];\n    let day = new Date(startDate);\n    \n    while (day <= endDate) {\n      for (let i = 0; i < 7; i++) {\n        days.push(new Date(day));\n        day.setDate(day.getDate() + 1);\n      }\n      weeks.push(days);\n      days = [];\n    }\n\n    const monthName = currentMonth.toLocaleString('default', { month: 'long' });\n    const year = currentMonth.getFullYear();\n\n    return (\n      <View style={styles.calendarContainer}>\n        <View style={styles.calendarHeader}>\n          <TouchableOpacity onPress={goToPreviousMonth} style={styles.calendarNavButton}>\n            <Text style={styles.calendarNavButtonText}>{'<'}</Text>\n          </TouchableOpacity>\n          <Text style={styles.calendarTitle}>{`${monthName} ${year}`}</Text>\n          <TouchableOpacity onPress={goToNextMonth} style={styles.calendarNavButton}>\n            <Text style={styles.calendarNavButtonText}>{'>'}</Text>\n          </TouchableOpacity>\n        </View>\n        \n        <View style={styles.weekdaysContainer}>\n          {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\n            <Text key={`weekday-${index}`} style={styles.weekdayText}>{day}</Text>\n          ))}\n        </View>\n        \n        {weeks.map((week, weekIndex) => (\n          <View key={`week-${weekIndex}`} style={styles.weekRow}>\n            {week.map((date, dateIndex) => {\n              const isSelectable = isDateSelectable(date);\n              const isSelected = isDateSelected(date);\n              const isInRange = selectedDateRangeType === 'date-range' && isDateInRange(date);\n              const isInTempRange = showRecurringDropdownCalendar && isDateInTempRange(date);\n              \n              return (\n                <TouchableOpacity\n                  key={`date-${weekIndex}-${dateIndex}`}\n                  style={[\n                    styles.dateCell,\n                    !isSelectable && styles.otherMonthDate,\n                    isSelected && styles.selectedDate,\n                    isInRange && styles.dateInRange,\n                    isInTempRange && styles.dateInRange,\n                  ]}\n                  onPress={() => isSelectable && (showRecurringDropdownCalendar ? handleRecurringDateSelect(date) : handleDateSelection(date))}\n                  disabled={!isSelectable}\n                >\n                  <Text style={[\n                    styles.dateText,\n                    !isSelectable && styles.otherMonthDateText,\n                    (isSelected || isInRange || isInTempRange) && styles.selectedDateText,\n                  ]}>\n                    {date.getDate()}\n                  </Text>\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const formatSelectedDate = (date) => {\n    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    const month = monthNames[date.getMonth()];\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${month} ${day}, ${year}`;\n  };\n\n  const clearDateRange = () => {\n    if (is_DEBUG) {\n      console.log('MBA54321 Clearing date range');\n    }\n    \n    setSelectedDatesList([]);\n    setRangeStartDate(null);\n    setDateRangeEnd(null);\n    setDatesFromRange(false);\n    setLastRangeSelection(null);\n\n    if (onDateSelect) {\n      onDateSelect({\n        type: 'one-time',\n        dates: [],\n        rangeType: selectedDateRangeType,\n        startDate: null,\n        endDate: null,\n        isValid: false\n      });\n    }\n  };\n\n  const renderSelectedDates = () => {\n    if (selectedDatesList.length === 0) {\n      return null;\n    }\n\n    // If we have a date range and we're in date-range mode\n    if (selectedDateRangeType === 'date-range' && (dateRangeEnd || (datesFromRange && initialDateRange))) {\n      const startDate = rangeStartDate || initialDateRange?.startDate || selectedDatesList[0];\n      const endDate = dateRangeEnd || initialDateRange?.endDate || selectedDatesList[selectedDatesList.length - 1];\n      \n      return (\n        <View style={styles.selectedDatesContainer}>\n          <Text style={styles.selectedDatesTitle}>Selected Range:</Text>\n          <View style={styles.dateRangeChip}>\n            <Text style={styles.dateRangeText}>\n              From {formatSelectedDate(startDate)} to {formatSelectedDate(endDate)}\n            </Text>\n            <TouchableOpacity \n              onPress={clearDateRange}\n              style={styles.removeRangeButton}\n            >\n              <Text style={styles.removeButtonText}>×</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      );\n    }\n\n    // For multiple days selection or when in multiple-days mode\n    return (\n      <View style={styles.selectedDatesContainer}>\n        <Text style={styles.selectedDatesTitle}>Selected Dates:</Text>\n        <View style={styles.selectedDatesList}>\n          {selectedDatesList.map((date, index) => (\n            <View key={`selected-date-${index}`} style={styles.selectedDateChip}>\n              <Text style={styles.selectedDateChipText}>{formatSelectedDate(date)}</Text>\n              <TouchableOpacity \n                onPress={() => toggleDateSelection(date)}\n                style={styles.removeButton}\n              >\n                <Text style={styles.removeButtonText}>×</Text>\n              </TouchableOpacity>\n            </View>\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const renderRecurringDropdownCalendar = () => {\n    if (!showRecurringDropdownCalendar) return null;\n\n    return (\n      <View style={styles.dropdownCalendar}>\n        <View style={styles.dropdownCalendarContent}>\n          {renderCalendar()}\n          <TouchableOpacity\n            style={styles.dropdownCloseButton}\n            onPress={() => {\n              setShowRecurringDropdownCalendar(false);\n              setTempRangeStart(null);\n              setTempRangeEnd(null);\n            }}\n          >\n            <Text style={styles.dropdownCloseButtonText}>Cancel</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const renderDateRangeSection = () => {\n    return (\n      <View style={styles.dateRangeSection}>\n        <View style={styles.dateRangeRow}>\n          <TouchableOpacity \n            style={styles.dateRangeColumn}\n            onPress={() => setShowRecurringDropdownCalendar(true)}\n          >\n            <Text style={styles.dateRangeLabel}>From</Text>\n            <Text style={styles.dateRangeValue}>\n              {formatSelectedDate(recurringStartDate)}\n            </Text>\n          </TouchableOpacity>\n          <TouchableOpacity \n            style={styles.dateRangeColumn}\n            onPress={() => setShowRecurringDropdownCalendar(true)}\n          >\n            <Text style={styles.dateRangeLabel}>To</Text>\n            <Text style={styles.dateRangeValue}>\n              {formatSelectedDate(recurringEndDate)}\n            </Text>\n          </TouchableOpacity>\n        </View>\n        {renderRecurringDropdownCalendar()}\n      </View>\n    );\n  };\n\n  const renderRecurringOptions = () => {\n    if (selectedBookingType !== 'recurring') return null;\n\n    return (\n      <View style={styles.recurringOptionsContainer}>\n        <Text style={styles.sectionTitle}>Repeat on</Text>\n        <View style={styles.daysOfWeekContainer}>\n          {['M', 'T', 'W', 'T', 'F', 'S', 'S'].map((day, index) => {\n            // Adjust index to match JavaScript day of week (0=Sun, 1=Mon, etc.)\n            const dayIndex = index === 6 ? 0 : index + 1;\n            const isSelected = selectedDaysOfWeek.includes(dayIndex);\n            \n            return (\n              <TouchableOpacity\n                key={`day-${index}`}\n                style={[\n                  styles.dayOfWeekButton,\n                  isSelected && styles.selectedDayOfWeekButton\n                ]}\n                onPress={() => handleDayOfWeekSelect(dayIndex)}\n              >\n                <Text style={[\n                  styles.dayOfWeekText,\n                  isSelected && styles.selectedDayOfWeekText\n                ]}>{day}</Text>\n              </TouchableOpacity>\n            );\n          })}\n        </View>\n\n        {renderDateRangeSection()}\n\n        <Text style={styles.sectionTitle}>Frequency</Text>\n        <View style={styles.frequencyContainer}>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'weekly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('weekly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'weekly' && styles.selectedFrequencyText\n            ]}>Weekly</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'bi-weekly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('bi-weekly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'bi-weekly' && styles.selectedFrequencyText\n            ]}>Bi-weekly</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={[\n              styles.frequencyButton,\n              selectedFrequency === 'monthly' && styles.selectedFrequencyButton\n            ]}\n            onPress={() => handleFrequencySelect('monthly')}\n          >\n            <Text style={[\n              styles.frequencyText,\n              selectedFrequency === 'monthly' && styles.selectedFrequencyText\n            ]}>Monthly</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.recurrencePatternContainer}>\n          <Text style={styles.recurrencePatternTitle}>Recurrence Pattern:</Text>\n          <Text style={styles.recurrencePatternText}>\n            {getSelectedDaysText()}\n          </Text>\n          <Text style={styles.recurrencePatternText}>\n            From {formatSelectedDate(recurringStartDate)} to {formatSelectedDate(recurringEndDate)}\n          </Text>\n          <TouchableOpacity\n            style={styles.previewButton}\n            onPress={() => setShowRecurringPreview(true)}\n          >\n            <Text style={styles.previewButtonText}>View on Calendar</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  };\n\n  const RecurringCalendarPreview = () => {\n    const [previewMonth, setPreviewMonth] = useState(new Date(recurringStartDate));\n    \n    const getRecurringDates = () => {\n      if (!recurringStartDate || !recurringEndDate || selectedDaysOfWeek.length === 0) {\n        return new Set();\n      }\n\n      const dates = new Set();\n      const current = new Date(recurringStartDate);\n      const end = new Date(recurringEndDate);\n      \n      while (current <= end) {\n        if (selectedDaysOfWeek.includes(current.getDay())) {\n          if (selectedFrequency === 'weekly') {\n            dates.add(new Date(current).getTime());\n          } else if (selectedFrequency === 'bi-weekly') {\n            const weeks = Math.floor((current - recurringStartDate) / (7 * 24 * 60 * 60 * 1000));\n            if (weeks % 2 === 0) {\n              dates.add(new Date(current).getTime());\n            }\n          } else if (selectedFrequency === 'monthly') {\n            const startWeek = getWeekOfMonth(recurringStartDate);\n            const currentWeek = getWeekOfMonth(current);\n            if (startWeek === currentWeek) {\n              dates.add(new Date(current).getTime());\n            }\n          }\n        }\n        current.setDate(current.getDate() + 1);\n      }\n      return dates;\n    };\n\n    const goToPreviousMonth = () => {\n      const prevMonth = new Date(previewMonth);\n      prevMonth.setMonth(prevMonth.getMonth() - 1);\n      setPreviewMonth(prevMonth);\n    };\n\n    const goToNextMonth = () => {\n      const nextMonth = new Date(previewMonth);\n      nextMonth.setMonth(nextMonth.getMonth() + 1);\n      setPreviewMonth(nextMonth);\n    };\n\n    const renderPreviewCalendar = () => {\n      const monthStart = new Date(previewMonth.getFullYear(), previewMonth.getMonth(), 1);\n      const monthEnd = new Date(previewMonth.getFullYear(), previewMonth.getMonth() + 1, 0);\n      const startDate = new Date(monthStart);\n      const endDate = new Date(monthEnd);\n      \n      startDate.setDate(startDate.getDate() - startDate.getDay());\n      endDate.setDate(endDate.getDate() + (6 - endDate.getDay()));\n      \n      const weeks = [];\n      let days = [];\n      let day = new Date(startDate);\n      const recurringDates = getRecurringDates();\n      \n      while (day <= endDate) {\n        for (let i = 0; i < 7; i++) {\n          days.push(new Date(day));\n          day.setDate(day.getDate() + 1);\n        }\n        weeks.push(days);\n        days = [];\n      }\n\n      const monthName = previewMonth.toLocaleString('default', { month: 'long' });\n      const year = previewMonth.getFullYear();\n\n      return (\n        <View style={styles.previewCalendarContainer}>\n          <View style={styles.calendarHeader}>\n            <TouchableOpacity onPress={goToPreviousMonth} style={styles.calendarNavButton}>\n              <Text style={styles.calendarNavButtonText}>{'<'}</Text>\n            </TouchableOpacity>\n            <Text style={styles.calendarTitle}>{`${monthName} ${year}`}</Text>\n            <TouchableOpacity onPress={goToNextMonth} style={styles.calendarNavButton}>\n              <Text style={styles.calendarNavButtonText}>{'>'}</Text>\n            </TouchableOpacity>\n          </View>\n          \n          <View style={styles.weekdaysContainer}>\n            {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map((day, index) => (\n              <Text key={`weekday-${index}`} style={styles.weekdayText}>{day}</Text>\n            ))}\n          </View>\n          \n          {weeks.map((week, weekIndex) => (\n            <View key={`week-${weekIndex}`} style={styles.weekRow}>\n              {week.map((date, dateIndex) => {\n                const isCurrentMonth = date.getMonth() === previewMonth.getMonth();\n                const isRecurring = recurringDates.has(date.getTime());\n                \n                return (\n                  <View\n                    key={`date-${weekIndex}-${dateIndex}`}\n                    style={[\n                      styles.previewDateCell,\n                      !isCurrentMonth && styles.otherMonthDate,\n                      isRecurring && styles.recurringDate,\n                    ]}\n                  >\n                    <Text style={[\n                      styles.dateText,\n                      !isCurrentMonth && styles.otherMonthDateText,\n                      isRecurring && styles.recurringDateText,\n                    ]}>\n                      {date.getDate()}\n                    </Text>\n                  </View>\n                );\n              })}\n            </View>\n          ))}\n        </View>\n      );\n    };\n\n    return (\n      <Modal\n        visible={showRecurringPreview}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={() => setShowRecurringPreview(false)}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContent, styles.previewModalContent]}>\n            <Text style={styles.modalTitle}>Recurring Dates Preview</Text>\n            {renderPreviewCalendar()}\n            <TouchableOpacity\n              style={styles.modalCloseButton}\n              onPress={() => setShowRecurringPreview(false)}\n            >\n              <Text style={styles.modalCloseButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    );\n  };\n\n  // Remove the useEffect for date validation since we're handling it directly in the handlers\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA19ynkiy34b Component mounted with:', {\n        selectedDates,\n        bookingType,\n        dateRangeType\n      });\n    }\n  }, []);\n\n  return (\n    <ScrollView style={styles.container}>\n      {/* TODO: Add back recurring options once implemented after MVP */}\n      {isOvernightForced || selectedBookingType === 'one-time' ? (\n        <View style={styles.oneTimeOptionsContainer}>\n          <Text style={[styles.dateSelectionTitle, { fontSize: screenWidth > 768 ? 24 : 18 }]}>\n            {isOvernightForced \n              ? \"Select a date range\" \n              : \"Select one or more dates\"}\n          </Text>\n          \n          {renderCalendar()}\n          {renderSelectedDates()}\n        </View>\n      ) : renderRecurringOptions()}\n      \n      <RecurringCalendarPreview />\n    </ScrollView>\n  );\n};\n\nconst { width, height } = Dimensions.get('window');\nconst maxCalendarHeight = height * 0.4;\nconst isDesktopView = width > 480;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    padding: 12,\n    minHeight: isDesktopView ? 600 : 'auto',\n  },\n  bookingTypeContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  bookingTypeButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedBookingTypeButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  bookingTypeText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n  },\n  selectedBookingTypeText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  dateRangeTypeContainer: {\n    flexDirection: 'row',\n    marginBottom: 12,\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  dateRangeTypeButton: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedDateRangeTypeButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dateRangeTypeText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n  },\n  selectedDateRangeTypeText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  calendarContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 12,\n    maxHeight: isDesktopView ? (width > 700 ? 600 : 500) : maxCalendarHeight,\n    overflow: 'visible',\n    minHeight: isDesktopView ? (width > 700 ? 500 : 400) : 350,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  calendarHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  calendarTitle: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  calendarNavButton: {\n    padding: 6,\n  },\n  calendarNavButtonText: {\n    fontSize: 18,\n    color: theme.colors.text,\n  },\n  weekdaysContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: isDesktopView ? 8 : 4,\n    paddingHorizontal: 4,\n  },\n  weekdayText: {\n    flex: 1,\n    textAlign: 'center',\n    fontSize: 12,\n    color: theme.colors.text,\n    opacity: 0.7,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  weekRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: isDesktopView ? 12 : 4,\n    minHeight: isDesktopView ? (width > 700 ? 70 : 50) : 40,\n    flex: 1,\n    paddingHorizontal: 4,\n  },\n  dateCell: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    padding: isDesktopView ? 4 : 2,\n    minHeight: isDesktopView ? (width > 700 ? 60 : 40) : 'auto',\n  },\n  dateText: {\n    fontSize: isDesktopView ? (width > 700 ? 16 : 14) : 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  otherMonthDate: {\n    opacity: 0.3,\n  },\n  otherMonthDateText: {\n    color: theme.colors.placeHolderText,\n  },\n  selectedDate: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dateInRange: {\n    backgroundColor: `${theme.colors.mainColors.main}80`, // 50% opacity\n  },\n  selectedDateText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  selectedDatesContainer: {\n    marginTop: 12,\n  },\n  selectedDatesTitle: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 6,\n    color: theme.colors.text,\n  },\n  selectedDatesList: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 6,\n  },\n  selectedDateChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 6,\n    paddingLeft: 10,\n    paddingRight: 6,\n    marginRight: 6,\n    marginBottom: 6,\n  },\n  selectedDateChipText: {\n    color: theme.colors.mainColors.main,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: 12,\n    marginRight: 2,\n  },\n  removeButton: {\n    marginLeft: 4,\n    padding: 2,\n  },\n  removeButtonText: {\n    fontSize: 16,\n    color: theme.colors.mainColors.main,\n    fontWeight: 'bold',\n  },\n  dateRangeText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 8,\n  },\n  recurringOptionsContainer: {\n    marginTop: 8,\n  },\n  sectionTitle: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  daysOfWeekContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  dayOfWeekButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n  },\n  selectedDayOfWeekButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  dayOfWeekText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedDayOfWeekText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  dateRangeSection: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n  },\n  dateRangeRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  dateRangeColumn: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    padding: 8,\n    borderRadius: 8,\n    // borderWidth: 1,\n    // borderColor: theme.colors.modernBorder,\n  },\n  dateRangeLabel: {\n    fontSize: 14,\n    color: theme.colors.text,\n    opacity: 0.7,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dateRangeValue: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  frequencyContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  frequencyButton: {\n    flex: 1,\n    paddingVertical: 10,\n    paddingHorizontal: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#e8e8e8', // Light gray for inactive buttons\n    borderRadius: 8,\n    marginRight: 8,\n  },\n  selectedFrequencyButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  frequencyText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  selectedFrequencyText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  recurrencePatternContainer: {\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 16,\n  },\n  recurrencePatternTitle: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 4,\n    color: theme.colors.text,\n  },\n  recurrencePatternText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginBottom: 2,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 16,\n    width: '90%',\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 16,\n    textAlign: 'center',\n    color: theme.colors.text,\n  },\n  modalCloseButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 8,\n  },\n  modalCloseButtonText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  previewButton: {\n    marginTop: 8,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    backgroundColor: theme.colors.mainColors.main,\n    borderRadius: 8,\n    alignSelf: 'flex-start',\n  },\n  previewButtonText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  previewModalContent: {\n    maxHeight: '80%',\n  },\n  previewCalendarContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 12,\n    marginVertical: 16,\n  },\n  recurringDate: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  recurringDateText: {\n    color: theme.colors.surface,\n    fontWeight: '600',\n  },\n  previewDateCell: {\n    flex: 1,\n    aspectRatio: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    padding: 2,\n  },\n  dateRangeChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 8,\n    paddingLeft: 12,\n    paddingRight: 8,\n  },\n  removeRangeButton: {\n    marginLeft: 8,\n    padding: 4,\n  },\n  selectedDateChip: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundContrast,\n    borderRadius: 16,\n    paddingVertical: 6,\n    paddingLeft: 10,\n    paddingRight: 6,\n    marginRight: 6,\n    marginBottom: 6,\n  },\n  removeButton: {\n    marginLeft: 4,\n    padding: 2,\n  },\n  removeButtonText: {\n    fontSize: 16,\n    color: theme.colors.mainColors.main,\n    fontWeight: 'bold',\n  },\n  oneTimeOptionsContainer: {\n    marginTop: 8,\n  },\n  dateSelectionTitle: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 16,\n    paddingHorizontal: 4,\n  },\n});\n\nexport default DateSelectionCard; ","import React, { useState, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Alert } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { debugLog } from '../../context/AuthContext';\n\nconst HOURS = Array.from({ length: 12 }, (_, i) => i === 0 ? 12 : i);\nconst MINUTES = Array.from({ length: 60 }, (_, i) => i).filter(m => m % 5 === 0);\nconst PERIODS = ['AM', 'PM'];\n\nconst TimePickerDropdown = ({\n  initialTime,\n  onTimeSelect,\n  isOpen,\n  onClose,\n  label = 'Time',\n  uniqueId = 'default',\n  showInlinePicker = false\n}) => {\n  // Create references for scrolling to right position\n  const hourScrollRef = useRef(null);\n  const minuteScrollRef = useRef(null);\n  const periodScrollRef = useRef(null);\n  \n  // Need to deep copy initialTime to prevent reference issues\n  const initTime = JSON.parse(JSON.stringify(initialTime || { hours: 9, minutes: 0 }));\n  \n  // Convert 24h to 12h format for UI\n  const init12Hour = () => {\n    const hours24 = initTime.hours;\n    \n    // Find the closest 5-minute interval\n    const minute = Math.round(initTime.minutes / 5) * 5;\n    \n    return {\n      hour: hours24 % 12 === 0 ? 12 : hours24 % 12,\n      minute: minute >= 60 ? 0 : minute, // Handle case where rounding gives 60\n      period: hours24 >= 12 ? 'PM' : 'AM'\n    };\n  };\n  \n  // State for the selected time\n  const [selectedTime, setSelectedTime] = useState(init12Hour());\n  \n  // Keep track of the last confirmed time\n  const [lastConfirmedTime, setLastConfirmedTime] = useState(init12Hour());\n  \n  // Add error state\n  const [timeError, setTimeError] = useState(null);\n  \n  // Reset the selected time when the initial time changes\n  useEffect(() => {\n    if (initialTime) {\n      const newTime = init12Hour();\n      setSelectedTime(newTime);\n      setLastConfirmedTime(newTime);\n      setTimeError(null);\n    }\n  }, [initialTime?.hours, initialTime?.minutes]);\n  \n  // Clear error after 5 seconds\n  useEffect(() => {\n    if (timeError) {\n      const timer = setTimeout(() => {\n        setTimeError(null);\n      }, 5000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [timeError]);\n  \n  // Scroll to the right positions when the picker is opened\n  useEffect(() => {\n    if (isOpen) {\n      setTimeout(() => {\n        scrollToSelections();\n      }, 50);\n    }\n  }, [isOpen, selectedTime]);\n\n  // Function to handle hour selection\n  const handleHourSelect = (hour) => {\n    setSelectedTime(prev => ({ ...prev, hour }));\n    setTimeError(null);\n  };\n\n  // Function to handle minute selection\n  const handleMinuteSelect = (minute) => {\n    setSelectedTime(prev => ({ ...prev, minute }));\n    setTimeError(null);\n  };\n\n  // Function to handle AM/PM selection\n  const handlePeriodSelect = (period) => {\n    setSelectedTime(prev => ({ ...prev, period }));\n    setTimeError(null);\n  };\n\n  // Convert 12h time to 24h and call the onTimeSelect callback\n  const triggerTimeChange = (time12h) => {\n    const { hour, minute, period } = time12h;\n    \n    // Convert to 24-hour format\n    let hours24 = hour;\n    if (period === 'PM' && hour !== 12) hours24 += 12;\n    if (period === 'AM' && hour === 12) hours24 = 0;\n    \n    const newTime = {\n      hours: hours24,\n      minutes: minute\n    };\n    \n    debugLog(`MBAoi9uv43d: TimePickerDropdown selected time (${uniqueId}):`, {\n      time12h, \n      time24h: newTime\n    });\n    \n    // Update the last confirmed time\n    setLastConfirmedTime(time12h);\n    \n    // Pass the new time up to the parent component\n    const isValid = onTimeSelect(newTime);\n    \n    // If time validation failed (parent returned false), show an error\n    if (isValid === false) {\n      // Show error alert\n      Alert.alert(\n        \"Invalid Time Selection\", \n        uniqueId.includes('start') ? \n          \"Start time cannot be later than end time.\" :\n          \"End time cannot be earlier than start time.\",\n        [{ text: \"OK\" }]\n      );\n      \n      // Set error message for visual indicator\n      setTimeError(uniqueId.includes('start') ? \n        \"Start time cannot be later than end time.\" :\n        \"End time cannot be earlier than start time.\"\n      );\n      \n      return false;\n    }\n    \n    // Only close the picker if validation passed\n    onClose();\n    return true;\n  };\n\n  // Handle confirm button press\n  const handleConfirm = () => {\n    triggerTimeChange(selectedTime);\n  };\n  \n  // Handle cancel button press\n  const handleCancel = () => {\n    // Reset the selected time to the last confirmed time\n    setSelectedTime(lastConfirmedTime);\n    setTimeError(null);\n    onClose();\n  };\n\n  // Scroll to the selected values\n  const scrollToSelections = () => {\n    if (hourScrollRef.current) {\n      const hourIndex = HOURS.indexOf(selectedTime.hour);\n      const hourOffset = hourIndex * 40;\n      hourScrollRef.current.scrollTo({ y: Math.max(0, hourOffset - 40), animated: true });\n    }\n    \n    if (minuteScrollRef.current) {\n      const minuteIndex = MINUTES.indexOf(selectedTime.minute);\n      const minuteOffset = minuteIndex * 40;\n      minuteScrollRef.current.scrollTo({ y: Math.max(0, minuteOffset - 40), animated: true });\n    }\n    \n    if (periodScrollRef.current) {\n      const periodIndex = PERIODS.indexOf(selectedTime.period);\n      const periodOffset = periodIndex * 40;\n      periodScrollRef.current.scrollTo({ y: Math.max(0, periodOffset - 20), animated: true });\n    }\n  };\n\n  // Format the time for display\n  const formatTimeDisplay = (hour, minute, period) => {\n    return `${hour}:${minute.toString().padStart(2, '0')} ${period}`;\n  };\n\n  // Render the dropdown content\n  const renderDropdownContent = () => (\n    <View>\n      <View style={styles.dropdownContent}>\n        {/* Hours */}\n        <ScrollView \n          ref={hourScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {HOURS.map((hour) => (\n            <TouchableOpacity\n              key={`hour-${hour}`}\n              style={[\n                styles.option,\n                selectedTime.hour === hour && styles.selectedOption\n              ]}\n              onPress={() => handleHourSelect(hour)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.hour === hour && styles.selectedOptionText\n              ]}>\n                {hour}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        \n        {/* Minutes */}\n        <ScrollView \n          ref={minuteScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {MINUTES.map((minute) => (\n            <TouchableOpacity\n              key={`minute-${minute}`}\n              style={[\n                styles.option,\n                selectedTime.minute === minute && styles.selectedOption\n              ]}\n              onPress={() => handleMinuteSelect(minute)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.minute === minute && styles.selectedOptionText\n              ]}>\n                {minute.toString().padStart(2, '0')}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n        \n        {/* AM/PM */}\n        <ScrollView \n          ref={periodScrollRef} \n          style={styles.column}\n          showsVerticalScrollIndicator={false}\n        >\n          {PERIODS.map((period) => (\n            <TouchableOpacity\n              key={`period-${period}`}\n              style={[\n                styles.option,\n                selectedTime.period === period && styles.selectedOption\n              ]}\n              onPress={() => handlePeriodSelect(period)}\n            >\n              <Text style={[\n                styles.optionText,\n                selectedTime.period === period && styles.selectedOptionText\n              ]}>\n                {period}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </ScrollView>\n      </View>\n      \n      {/* Error message */}\n      {timeError && (\n        <View style={styles.errorContainer}>\n          <MaterialIcons name=\"error\" size={16} color={theme.colors.error || '#D32F2F'} />\n          <Text style={styles.errorText}>{timeError}</Text>\n        </View>\n      )}\n      \n      {/* Buttons row */}\n      <View style={styles.buttonRow}>\n        <TouchableOpacity \n          style={[styles.button, styles.cancelButton]}\n          onPress={handleCancel}\n        >\n          <Text style={styles.cancelButtonText}>Cancel</Text>\n        </TouchableOpacity>\n        <TouchableOpacity \n          style={[styles.button, styles.confirmButton]}\n          onPress={handleConfirm}\n        >\n          <Text style={styles.confirmButtonText}>Confirm</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n\n  // For inline mode (shown directly in the UI)\n  if (showInlinePicker) {\n    return (\n      <View style={styles.inlineContainer}>\n        {label && <Text style={styles.label}>{label}</Text>}\n        {renderDropdownContent()}\n      </View>\n    );\n  }\n\n  // For dropdown mode (shown when button is clicked)\n  return (\n    <>\n      <TouchableOpacity\n        style={styles.timeDisplay}\n        onPress={isOpen ? onClose : () => {}}\n      >\n        <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n        <Text style={styles.timeText}>\n          {formatTimeDisplay(selectedTime.hour, selectedTime.minute, selectedTime.period)}\n        </Text>\n        <MaterialIcons \n          name={isOpen ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n          size={20} \n          color={theme.colors.text} \n        />\n      </TouchableOpacity>\n      \n      {isOpen && (\n        <View style={styles.dropdownContainer}>\n          {renderDropdownContent()}\n        </View>\n      )}\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  timeDisplay: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    marginVertical: 5,\n  },\n  timeText: {\n    flex: 1,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.medium,\n    marginLeft: 8,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    marginTop: 4,\n    zIndex: 1000,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  inlineContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 4,\n  },\n  label: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.small,\n    marginBottom: 8,\n  },\n  dropdownContent: {\n    flexDirection: 'row',\n    padding: 4,\n  },\n  column: {\n    flex: 1,\n    height: 160,\n  },\n  option: {\n    padding: 8,\n    alignItems: 'center',\n    height: 40,\n    justifyContent: 'center',\n  },\n  selectedOption: {\n    backgroundColor: `${theme.colors.mainColors.main}20`,\n    borderRadius: 4,\n  },\n  optionText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.medium,\n  },\n  selectedOptionText: {\n    color: theme.colors.mainColors.main,\n    fontWeight: '600',\n  },\n  buttonRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n    paddingHorizontal: 4,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    flex: 1,\n    marginHorizontal: 4,\n    alignItems: 'center',\n  },\n  confirmButton: {\n    backgroundColor: theme.colors.mainColors.main,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.modernBorder,\n  },\n  confirmButtonText: {\n    color: 'white',\n    fontFamily: theme.fonts.medium.fontFamily,\n    fontSize: theme.fontSizes.small,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontSize: theme.fontSizes.small,\n  },\n  errorContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#FFEBEE',\n    padding: 8,\n    marginHorizontal: 4,\n    marginTop: 4,\n    borderRadius: 4,\n  },\n  errorText: {\n    color: theme.colors.error || '#D32F2F',\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 4,\n    flex: 1,\n  }\n});\n\nexport default TimePickerDropdown; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, TouchableWithoutFeedback, Modal } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport TimePickerDropdown from './TimePickerDropdown';\n\nconst NewTimeRangeSelector = ({\n  title,\n  onTimeSelect,\n  initialTimes = {},\n  is_overnight = false,\n  uniqueId = 'default',\n  dateRange = null,\n  selectedDates = [],\n  isIndividualDaySelector = false,\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Create local state with deep copies to prevent reference issues\n  const [times, setTimes] = useState(() => {\n    const defaultTimes = {\n      startTime: { hours: 9, minutes: 0 },\n      endTime: { hours: 17, minutes: 0 },\n      isOvernightForced: initialTimes?.isOvernightForced || is_overnight || false\n    };\n    \n    // Deep copy initialTimes if provided\n    if (initialTimes) {\n      return {\n        startTime: initialTimes.startTime ? JSON.parse(JSON.stringify(initialTimes.startTime)) : defaultTimes.startTime,\n        endTime: initialTimes.endTime ? JSON.parse(JSON.stringify(initialTimes.endTime)) : defaultTimes.endTime,\n        isOvernightForced: initialTimes.isOvernightForced || is_overnight || false\n      };\n    }\n    \n    return defaultTimes;\n  });\n  \n  // Track which time picker is currently open\n  const [activeTimePicker, setActiveTimePicker] = useState(null);\n  \n  // Update times when initialTimes prop changes\n  useEffect(() => {\n    if (!initialTimes) return;\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) initialTimes update:`, initialTimes);\n    \n    // Create deep copies of the times\n    const updatedTimes = {\n      startTime: initialTimes.startTime ? JSON.parse(JSON.stringify(initialTimes.startTime)) : times.startTime,\n      endTime: initialTimes.endTime ? JSON.parse(JSON.stringify(initialTimes.endTime)) : times.endTime,\n      isOvernightForced: initialTimes.isOvernightForced || is_overnight || times.isOvernightForced\n    };\n    \n    setTimes(updatedTimes);\n  }, [\n    initialTimes?.startTime?.hours, \n    initialTimes?.startTime?.minutes, \n    initialTimes?.endTime?.hours, \n    initialTimes?.endTime?.minutes,\n    initialTimes?.isOvernightForced,\n    is_overnight\n  ]);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = () => {\n      if (activeTimePicker) {\n        setActiveTimePicker(null);\n      }\n    };\n\n    return () => {\n      // Clean up listeners\n    };\n  }, [activeTimePicker]);\n  \n  // Handle start time change\n  const handleStartTimeChange = (newTime) => {\n    // Validate that start time is not after end time\n    // End time could be 00:00 (midnight) which is treated as end of day\n    // So we need a special check for that case\n    const isEndTimeMidnight = times.endTime.hours === 0 && times.endTime.minutes === 0;\n    const startTotalMinutes = (newTime.hours * 60) + newTime.minutes;\n    const endTotalMinutes = (times.endTime.hours * 60) + times.endTime.minutes;\n    \n    // Check if the time combination is valid\n    // Allow if end time is midnight (special case) or if start time is before end time\n    if (!(isEndTimeMidnight || startTotalMinutes < endTotalMinutes)) {\n      debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) invalid start time - would be after end time:`, {\n        attemptedStart: newTime,\n        currentEnd: times.endTime,\n        startMinutes: startTotalMinutes,\n        endMinutes: endTotalMinutes\n      });\n      \n      // Return false to trigger error handling in TimePickerDropdown\n      return false;\n    }\n    \n    // Time is valid, proceed with the update\n    const newTimes = {\n      ...times,\n      startTime: JSON.parse(JSON.stringify(newTime))\n    };\n    \n    setTimes(newTimes);\n    onTimeSelect(newTimes);\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) startTime changed:`, {\n      newTime,\n      updatedTimes: newTimes\n    });\n    \n    return true;\n  };\n  \n  // Handle end time change\n  const handleEndTimeChange = (newTime) => {\n    // Special case: if new end time is midnight (00:00), always allow it\n    const isNewEndTimeMidnight = newTime.hours === 0 && newTime.minutes === 0;\n    \n    // For all other times, validate that end time is after start time\n    const startTotalMinutes = (times.startTime.hours * 60) + times.startTime.minutes;\n    const endTotalMinutes = (newTime.hours * 60) + newTime.minutes;\n    \n    // Check if the time combination is valid\n    // Allow if end time is midnight (special case) or if end time is after start time\n    if (!(isNewEndTimeMidnight || endTotalMinutes > startTotalMinutes)) {\n      debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) invalid end time - would be before start time:`, {\n        currentStart: times.startTime,\n        attemptedEnd: newTime,\n        startMinutes: startTotalMinutes,\n        endMinutes: endTotalMinutes\n      });\n      \n      // Return false to trigger error handling in TimePickerDropdown\n      return false;\n    }\n    \n    // Time is valid, proceed with the update\n    const newTimes = {\n      ...times,\n      endTime: JSON.parse(JSON.stringify(newTime))\n    };\n    \n    setTimes(newTimes);\n    onTimeSelect(newTimes);\n    \n    debugLog(`MBAoi9uv43d: NewTimeRangeSelector (${uniqueId}) endTime changed:`, {\n      newTime,\n      updatedTimes: newTimes\n    });\n    \n    return true;\n  };\n  \n  // Format time for display (12-hour format)\n  const formatTimeDisplay = (time) => {\n    if (!time) return '';\n    \n    // Ensure time object has valid hours and minutes\n    const hours = typeof time.hours === 'number' ? time.hours : 0;\n    const minutes = typeof time.minutes === 'number' ? time.minutes : 0;\n    \n    // Validate ranges\n    const validHours = Math.max(0, Math.min(23, hours));\n    const validMinutes = Math.max(0, Math.min(59, minutes));\n    \n    const period = validHours >= 12 ? 'PM' : 'AM';\n    const hours12 = validHours % 12 === 0 ? 12 : validHours % 12;\n    \n    return `${hours12}:${validMinutes.toString().padStart(2, '0')} ${period}`;\n  };\n  \n  // Format a date for display\n  const formatDate = (date) => {\n    if (!date) return '';\n    \n    try {\n      const dateObj = new Date(date);\n      return dateObj.toLocaleDateString('en-US', { \n        month: 'short', \n        day: 'numeric', \n        year: 'numeric' \n      });\n    } catch (error) {\n      debugLog(`MBAoi9uv43d: Error formatting date: ${error.message}`);\n      return '';\n    }\n  };\n  \n  // Calculate duration between start and end times\n  const calculateDuration = () => {\n    const { isOvernightForced } = times;\n    \n    // If overnight service and we have date range or selected dates, calculate nights from date range\n    if ((isOvernightForced || is_overnight) && (dateRange || (selectedDates && selectedDates.length > 0))) {\n      let startDate, endDate;\n      \n      if (dateRange && dateRange.startDate && dateRange.endDate) {\n        // If we have a date range, use it\n        startDate = new Date(dateRange.startDate);\n        endDate = new Date(dateRange.endDate);\n      } else if (selectedDates && selectedDates.length >= 2) {\n        // If we have selected dates array, use first and last date\n        // Sort dates to ensure correct order\n        const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n        startDate = new Date(sortedDates[0]);\n        endDate = new Date(sortedDates[sortedDates.length - 1]);\n      } else if (selectedDates && selectedDates.length === 1) {\n        // If only one date selected, it's same day\n        return \"Same day\";\n      } else {\n        // Fallback if no date information\n        return \"1 night\";\n      }\n      \n      // Calculate nights between dates\n      const diffTime = Math.abs(endDate - startDate);\n      \n      // For date ranges, use correct date math (without time component)\n      // This ensures dates like May 14-16 (3 days) result in 2 nights, not 1 night\n      let diffDays;\n      \n      // Normalize dates to remove time component\n      const normalizedStartDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate());\n      const normalizedEndDate = new Date(endDate.getFullYear(), endDate.getMonth(), endDate.getDate());\n      \n      // Calculate the actual number of calendar days between the dates (inclusive)\n      diffDays = Math.round(Math.abs(normalizedEndDate - normalizedStartDate) / (1000 * 60 * 60 * 24)) + 1;\n      \n      // The number of nights is always one less than the number of days\n      const nights = diffDays > 1 ? diffDays - 1 : 0;\n      \n      if (nights === 0) {\n        return \"Same day\";\n      } else if (nights === 1) {\n        return \"1 night\";\n      } else {\n        return `${nights} nights`;\n      }\n    }\n    \n    // For regular (non-overnight) services or when no date range is available\n    const { startTime, endTime } = times;\n    \n    // Convert times to minutes\n    const startMinutes = (startTime.hours * 60) + startTime.minutes;\n    let endMinutes = (endTime.hours * 60) + endTime.minutes;\n    \n    // Special case: midnight (00:00) as end time is treated as end of day\n    if (endTime.hours === 0 && endTime.minutes === 0) {\n      endMinutes = 24 * 60; // End of day\n    }\n    \n    // Calculate duration in minutes\n    let durationMinutes = endMinutes - startMinutes;\n    \n    // If end time is earlier than start time and not midnight, add 24 hours\n    if (durationMinutes < 0 && !(endTime.hours === 0 && endTime.minutes === 0)) {\n      durationMinutes += 24 * 60;\n    }\n    \n    // Convert to hours and minutes\n    const hours = Math.floor(durationMinutes / 60);\n    const minutes = durationMinutes % 60;\n    \n    // Format the duration string\n    let durationStr = '';\n    if (hours > 0) {\n      durationStr += `${hours} hour${hours !== 1 ? 's' : ''}`;\n    }\n    if (minutes > 0) {\n      if (durationStr.length > 0) durationStr += ' ';\n      durationStr += `${minutes} minute${minutes !== 1 ? 's' : ''}`;\n    }\n    \n    return durationStr || '0 minutes';\n  };\n  \n  // Get start date for display\n  const getStartDate = () => {\n    if (dateRange && dateRange.startDate) {\n      return dateRange.startDate;\n    } else if (selectedDates && selectedDates.length > 0) {\n      const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n      return sortedDates[0];\n    }\n    return null;\n  };\n  \n  // Get end date for display\n  const getEndDate = () => {\n    if (dateRange && dateRange.endDate) {\n      return dateRange.endDate;\n    } else if (selectedDates && selectedDates.length > 0) {\n      const sortedDates = [...selectedDates].sort((a, b) => new Date(a) - new Date(b));\n      return sortedDates[sortedDates.length - 1];\n    }\n    return null;\n  };\n  \n  const startDate = getStartDate();\n  const endDate = getEndDate();\n  \n  return (\n    <View style={styles.container}>\n      {title && <Text style={styles.title}>{title}</Text>}\n      \n      {/* Time selection UI with dates */}\n      <View style={styles.timeSelectionContainer}>\n        {/* Start time picker with date */}\n        <View style={styles.timePickerContainer}>\n          {startDate && (isIndividualDaySelector || times.isOvernightForced || is_overnight) ? (\n            <Text style={styles.dateLabel}>{formatDate(startDate)}</Text>\n          ) : (\n            <Text style={styles.dateLabel}>Applies to all individual days</Text>\n          )}\n          <Text style={styles.timeLabel}>Start Time</Text>\n          <TouchableOpacity\n            style={styles.timeButton}\n            onPress={() => setActiveTimePicker(activeTimePicker === 'start' ? null : 'start')}\n          >\n            <View style={styles.timeButtonContent}>\n              <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n              <Text style={styles.timeText}>\n                {formatTimeDisplay(times.startTime)}\n              </Text>\n              <MaterialIcons \n                name={activeTimePicker === 'start' ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n                size={20} \n                color={theme.colors.text} \n              />\n            </View>\n          </TouchableOpacity>\n        </View>\n        \n        {/* End time picker with date */}\n        <View style={styles.timePickerContainer}>\n          {endDate && (isIndividualDaySelector || times.isOvernightForced || is_overnight) ? (\n            <Text style={styles.dateLabel}>{formatDate(endDate)}</Text>\n          ) : (\n            <Text style={styles.dateLabel}>Applies to all individual days</Text>\n          )}\n          <Text style={styles.timeLabel}>End Time</Text>\n          <TouchableOpacity\n            style={styles.timeButton}\n            onPress={() => setActiveTimePicker(activeTimePicker === 'end' ? null : 'end')}\n          >\n            <View style={styles.timeButtonContent}>\n              <MaterialIcons name=\"access-time\" size={18} color={theme.colors.mainColors.main} />\n              <Text style={styles.timeText}>\n                {formatTimeDisplay(times.endTime)}\n              </Text>\n              <MaterialIcons \n                name={activeTimePicker === 'end' ? \"keyboard-arrow-up\" : \"keyboard-arrow-down\"} \n                size={20} \n                color={theme.colors.text} \n              />\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n      \n      {/* Duration display */}\n      <View style={styles.durationContainer}>\n        <MaterialIcons name=\"timelapse\" size={18} color={theme.colors.mainColors.main} />\n        <Text style={styles.durationText}>Duration: {calculateDuration()}</Text>\n      </View>\n      \n      {/* Modal for handling outside click to close the dropdowns */}\n      {activeTimePicker && (\n        <Modal\n          transparent={true}\n          animationType=\"none\"\n          visible={!!activeTimePicker}\n          onRequestClose={() => setActiveTimePicker(null)}\n        >\n          <TouchableWithoutFeedback onPress={() => setActiveTimePicker(null)}>\n            <View style={styles.modalOverlay}>\n              <TouchableWithoutFeedback>\n                <View style={[\n                  styles.modalContent,\n                  activeTimePicker === 'start' ? styles.startModalContent : styles.endModalContent\n                ]}>\n                  <TimePickerDropdown\n                    initialTime={activeTimePicker === 'start' ? times.startTime : times.endTime}\n                    onTimeSelect={activeTimePicker === 'start' ? handleStartTimeChange : handleEndTimeChange}\n                    isOpen={true}\n                    onClose={() => setActiveTimePicker(null)}\n                    uniqueId={`${uniqueId}-${activeTimePicker}`}\n                    showInlinePicker={true}\n                  />\n                </View>\n              </TouchableWithoutFeedback>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  title: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 16,\n  },\n  timeSelectionContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 16,\n  },\n  timePickerContainer: {\n    flex: 1,\n    marginHorizontal: 4,\n    position: 'relative',\n    zIndex: 10,\n  },\n  dateLabel: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.textSecondary,\n    marginBottom: 4,\n  },\n  timeLabel: {\n    fontSize: theme.fontSizes.smallMedium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  timeButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  timeButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n  },\n  timeText: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginLeft: 8,\n  },\n  durationContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n    padding: 12,\n    backgroundColor: theme.colors.bgColorModern,\n    borderRadius: 8,\n  },\n  durationText: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginLeft: 8,\n  },\n  // Modal styling for outside click handling\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.2)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    width: '80%',\n    padding: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  startModalContent: {\n    alignSelf: 'flex-start',\n    marginLeft: '10%',\n  },\n  endModalContent: {\n    alignSelf: 'flex-end',\n    marginRight: '10%',\n  }\n});\n\nexport default NewTimeRangeSelector; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { theme } from '../../styles/theme';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport NewTimeRangeSelector from './NewTimeRangeSelector';\n\nconst DayTimeSelector = ({\n  date,\n  initialTimes = {},\n  onTimeChange,\n  is_overnight = false\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Format the date for display\n  const formatDate = (date) => {\n    if (!date) return '';\n    \n    // Create a copy to prevent timezone issues\n    const dateObj = new Date(date);\n    const options = { weekday: 'short', month: 'short', day: 'numeric' };\n    return dateObj.toLocaleDateString('en-US', options);\n  };\n  \n  // Generate a unique ID for this date's time selector\n  const generateUniqueId = () => {\n    if (!date) return 'day-unknown';\n    \n    try {\n      // If date is a Date object, convert to ISO string and extract date part\n      if (date instanceof Date) {\n        return `day-${date.toISOString().split('T')[0]}`;\n      }\n      \n      // If date is already in YYYY-MM-DD format\n      if (typeof date === 'string' && date.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n        return `day-${date}`;\n      }\n      \n      // If date is in another format, try to convert it\n      const parsedDate = new Date(date);\n      if (!isNaN(parsedDate.getTime())) {\n        return `day-${parsedDate.toISOString().split('T')[0]}`;\n      }\n      \n      // Fallback\n      return `day-unknown-${Date.now()}`;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error generating unique ID for date:', error);\n      return `day-unknown-${Date.now()}`;\n    }\n  };\n  \n  // Generate a stable date key for API\n  const generateDateKey = () => {\n    if (!date) return null;\n    \n    try {\n      // If date is a Date object, convert to YYYY-MM-DD\n      if (date instanceof Date) {\n        return date.toISOString().split('T')[0];\n      }\n      \n      // If date is already in YYYY-MM-DD format\n      if (typeof date === 'string' && date.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n        return date;\n      }\n      \n      // If date is in another format, try to convert it\n      const parsedDate = new Date(date);\n      if (!isNaN(parsedDate.getTime())) {\n        return parsedDate.toISOString().split('T')[0];\n      }\n      \n      // Couldn't parse date\n      debugLog('MBAoi9uv43d: Could not parse date:', date);\n      return null;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error generating date key:', error);\n      return null;\n    }\n  };\n  \n  // Generate stable IDs\n  const uniqueId = generateUniqueId();\n  const dateKey = generateDateKey();\n  \n  // Handle time selection from the time range selector\n  const handleTimeSelect = (timesData) => {\n    if (!dateKey) {\n      debugLog('MBAoi9uv43d: Cannot handle time selection - invalid date key');\n      return;\n    }\n    \n    // Create a completely new times object to avoid reference issues\n    const newTimes = JSON.parse(JSON.stringify(timesData));\n    \n    debugLog(`MBAoi9uv43d: DayTimeSelector (${uniqueId}) time changed:`, {\n      dateKey,\n      timesData: newTimes\n    });\n    \n    // Pass the time data up to the parent component\n    onTimeChange(newTimes, dateKey);\n  };\n  \n  return (\n    <View style={styles.container}>\n      <Text style={styles.dateLabel}>{formatDate(date)}</Text>\n      \n      <NewTimeRangeSelector\n        onTimeSelect={handleTimeSelect}\n        initialTimes={initialTimes}\n        is_overnight={is_overnight}\n        uniqueId={uniqueId}\n        selectedDates={[date]}\n        isIndividualDaySelector={true}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.modernBorder,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    overflow: 'visible',\n  },\n  dateLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.medium.fontFamily,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.bgColorModern,\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  }\n});\n\nexport default DayTimeSelector; ","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, TouchableWithoutFeedback } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport NewTimeRangeSelector from './NewTimeRangeSelector';\nimport { AuthContext, debugLog } from '../../context/AuthContext';\nimport DayTimeSelector from './DayTimeSelector';\nimport { formatDateOnly, getUTCTimeString } from '../../utils/time_utils';\n\n// Helper function to parse time values from various formats\nconst parseTimeValue = (timeValue) => {\n  if (!timeValue) return null;\n  \n  // Handle string format 'HH:MM'\n  if (typeof timeValue === 'string' && timeValue.includes(':')) {\n    const [hours, minutes] = timeValue.split(':').map(part => parseInt(part, 10));\n    return { hours, minutes };\n  }\n  \n  // Handle object format directly\n  if (typeof timeValue === 'object' && timeValue !== null) {\n    // If it has hours/minutes properties directly\n    if (timeValue.hours !== undefined || timeValue.minutes !== undefined) {\n      return {\n        hours: timeValue.hours || 0,\n        minutes: timeValue.minutes || 0\n      };\n    }\n  }\n  \n  // Default fallback\n  return null;\n};\n\nconst TimeSelectionCard = ({ \n  onTimeSelect,\n  initialTimes = {},\n  dateRange = null,\n  selectedService = null,\n  isOvernightForced = false\n}) => {\n  const { is_DEBUG } = useContext(AuthContext);\n  \n  // Initialize showIndividualDays based on initialTimes.hasIndividualTimes\n  const [showIndividualDays, setShowIndividualDays] = useState(() => {\n    // For overnight services, never show individual days\n    if (selectedService?.is_overnight || isOvernightForced) {\n      return false;\n    }\n    \n    const shouldShowIndividual = initialTimes && initialTimes.hasIndividualTimes === true;\n    debugLog('MBAoi9uv43d: Initial showIndividualDays value:', shouldShowIndividual);\n    return shouldShowIndividual;\n  });\n  \n  const [individualTimeRanges, setIndividualTimeRanges] = useState({});\n  const [times, setTimes] = useState(() => {\n    // Safely initialize with default values if initialTimes is not properly formatted\n    try {\n      if (!initialTimes || typeof initialTimes !== 'object') {\n        debugLog('MBAoi9uv43d: Invalid initialTimes, using defaults:', initialTimes);\n        return {\n          startTime: { hours: 9, minutes: 0 },\n          endTime: { hours: 17, minutes: 0 },\n          isOvernightForced: false\n        };\n      }\n      return initialTimes;\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error initializing times:', error);\n      return {\n        startTime: { hours: 9, minutes: 0 },\n        endTime: { hours: 17, minutes: 0 },\n        isOvernightForced: false\n      };\n    }\n  });\n  \n  // Use a ref to track if this is the initial render\n  const isInitialRender = useRef(true);\n  \n  useEffect(() => {\n    debugLog('MBAoi9uv43d: TimeSelectionCard received initialTimes:', initialTimes);\n    \n    // Safely initialize with default values if initialTimes is not properly formatted\n    try {\n      if (!initialTimes || typeof initialTimes !== 'object') {\n        const defaultTimes = {\n          startTime: { hours: 9, minutes: 0 },\n          endTime: { hours: 17, minutes: 0 },\n          isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n        };\n        debugLog('MBAoi9uv43d: Using default times:', defaultTimes);\n        setTimes(defaultTimes);\n        setShowIndividualDays(false);\n        return;\n      }\n      \n      // Extract the hasIndividualTimes flag early\n      const hasIndividualTimesFlag = initialTimes.hasIndividualTimes === true;\n      debugLog('MBAoi9uv43d: hasIndividualTimes flag is', hasIndividualTimesFlag);\n      \n      // Only set the showIndividualDays based on initialTimes on the initial render\n      // This prevents it from overriding user's toggle action\n      if (isInitialRender.current) {\n        debugLog('MBAoi9uv43d: Initial render - setting showIndividualDays to', hasIndividualTimesFlag);\n        setShowIndividualDays(hasIndividualTimesFlag);\n        isInitialRender.current = false;\n      } else {\n        debugLog('MBAoi9uv43d: Not initial render - preserving showIndividualDays state');\n      }\n      \n      // Get formatted start time\n      const startTimeValue = parseTimeValue(initialTimes.startTime);\n      const endTimeValue = parseTimeValue(initialTimes.endTime);\n      \n      const formattedTimes = {\n        startTime: startTimeValue || { hours: 9, minutes: 0 },\n        endTime: endTimeValue || { hours: 17, minutes: 0 },\n        // CRITICAL FIX: prioritize selectedService.is_overnight over previous state\n        isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n      };\n      \n      debugLog('MBAoi9uv43d: CRITICAL FIX - Setting formatted times:', {\n        formattedTimes,\n        selectedServiceIsOvernight: selectedService?.is_overnight,\n        isOvernightForcedProp: isOvernightForced,\n        initialTimesIsOvernightForced: initialTimes.isOvernightForced,\n        message: 'isOvernightForced now prioritizes current service over previous state'\n      });\n      setTimes(formattedTimes);\n      \n      // Check if initialTimes already has individual times or if we have dates from draft\n      const hasDatesInDraft = initialTimes && Object.keys(initialTimes).some(key => key.match(/^\\d{4}-\\d{2}-\\d{2}$/));\n      \n      debugLog('MBAoi9uv43d: Time selection setup:', { \n        hasDatesInDraft,\n        hasIndividualTimesFlag,\n        hasDateRange: !!(dateRange && dateRange.startDate && dateRange.endDate),\n        hasDates: !!(initialTimes && initialTimes.dates && initialTimes.dates.length > 0)\n      });\n      \n      // Initialize individual time ranges if we have a date range or dates in draft\n      if ((dateRange && dateRange.startDate && dateRange.endDate) || hasDatesInDraft) {\n        const newTimeRanges = {};\n        \n        // If we have a dateRange, populate default times for all dates in the range\n        if (dateRange && dateRange.startDate && dateRange.endDate) {\n          const startDate = new Date(dateRange.startDate);\n          const endDate = new Date(dateRange.endDate);\n          \n          // Set default times for each date in the range\n          const current = new Date(startDate);\n          while (current <= endDate) {\n            const dateKey = current.toISOString().split('T')[0];\n            newTimeRanges[dateKey] = JSON.parse(JSON.stringify(formattedTimes));\n            current.setDate(current.getDate() + 1);\n          }\n        }\n        \n        // Also populate time ranges from multiple days selection if available\n        if (initialTimes.dates && initialTimes.dates.length > 0 && !dateRange) {\n          debugLog('MBAoi9uv43d: Creating time ranges from multiple days selection');\n          initialTimes.dates.forEach(dateObj => {\n            // Handle different date formats\n            let date;\n            if (typeof dateObj === 'string') {\n              date = new Date(dateObj);\n            } else if (dateObj && dateObj.date) {\n              date = new Date(dateObj.date);\n            } else {\n              date = new Date(dateObj);\n            }\n            \n            const dateKey = date.toISOString().split('T')[0];\n            if (!newTimeRanges[dateKey]) {\n              newTimeRanges[dateKey] = JSON.parse(JSON.stringify(formattedTimes));\n            }\n          });\n        }\n        \n        // Check if initialTimes has individual times for specific days\n        if (hasIndividualTimesFlag || hasDatesInDraft) {\n          Object.keys(initialTimes).forEach(key => {\n            // Check if the key is a date (format YYYY-MM-DD)\n            if (key.match(/^\\d{4}-\\d{2}-\\d{2}$/) && initialTimes[key]) {\n              const dayTime = initialTimes[key];\n              const parsedStartTime = parseTimeValue(dayTime.startTime);\n              const parsedEndTime = parseTimeValue(dayTime.endTime);\n              \n              if (parsedStartTime || parsedEndTime) {\n                newTimeRanges[key] = {\n                  startTime: parsedStartTime || { hours: 9, minutes: 0 },\n                  endTime: parsedEndTime || { hours: 17, minutes: 0 },\n                  // CRITICAL FIX: prioritize current service over previous state\n                  isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n                };\n              }\n            }\n          });\n        }\n        \n        // Also handle individualTimeRanges format from initialTimes\n        if (initialTimes.individualTimeRanges) {\n          Object.keys(initialTimes.individualTimeRanges).forEach(dateKey => {\n            if (dateKey.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n              const dayTime = initialTimes.individualTimeRanges[dateKey];\n              const parsedStartTime = parseTimeValue(dayTime.startTime);\n              const parsedEndTime = parseTimeValue(dayTime.endTime);\n              \n              if (parsedStartTime || parsedEndTime) {\n                newTimeRanges[dateKey] = {\n                  startTime: parsedStartTime || { hours: 9, minutes: 0 },\n                  endTime: parsedEndTime || { hours: 17, minutes: 0 },\n                  // CRITICAL FIX: prioritize current service over previous state\n                  isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n                };\n              }\n            }\n          });\n        }\n        \n        debugLog('MBAoi9uv43d: Setting individual time ranges:', newTimeRanges);\n        setIndividualTimeRanges(newTimeRanges);\n      }\n    } catch (error) {\n      debugLog('MBAoi9uv43d: Error processing initialTimes:', error);\n      // Set default times on error\n      setTimes({\n        startTime: { hours: 9, minutes: 0 },\n        endTime: { hours: 17, minutes: 0 },\n        isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n      });\n    }\n  }, [initialTimes, dateRange, selectedService]);\n  \n  const handleDefaultTimeSelect = (newTimes) => {\n    debugLog('MBAoi9uv43d: handleDefaultTimeSelect called with:', newTimes);\n    \n    // Create a new deep copy to avoid reference issues\n    const updatedTimes = JSON.parse(JSON.stringify(newTimes));\n    \n    // Update our local state\n    setTimes(updatedTimes);\n    \n    // If showing individual days, update each day's times\n    if (showIndividualDays) {\n      const updatedRanges = {};\n      \n      // Create deep copies for each date\n      Object.keys(individualTimeRanges).forEach(date => {\n        updatedRanges[date] = {\n          startTime: updatedTimes.startTime,\n          endTime: updatedTimes.endTime,\n          isOvernightForced: updatedTimes.isOvernightForced\n        };\n      });\n      \n      setIndividualTimeRanges(updatedRanges);\n      \n      // Send full object with individual day data\n      onTimeSelect({\n        ...updatedTimes,\n        ...updatedRanges,\n        hasIndividualTimes: true\n      });\n    } else {\n      // Just send the default times\n      onTimeSelect({\n        ...updatedTimes,\n        hasIndividualTimes: false\n      });\n    }\n  };\n\n  const handleIndividualDayTimeSelect = (timesData, dateKey) => {\n    debugLog('MBAoi9uv43d: Individual day time selection for card:', { dateKey, timesData });\n    \n    if (!dateKey) {\n      debugLog('MBAoi9uv43d: No dateKey provided, returning');\n      return;\n    }\n\n    // Create a completely fresh object for the updated ranges with no shared references\n    const updatedRanges = JSON.parse(JSON.stringify(individualTimeRanges));\n    \n    // Now set the new time data for this date key\n    updatedRanges[dateKey] = JSON.parse(JSON.stringify(timesData));\n    \n    debugLog('MBAoi9uv43d: TimeSelectionCard updating only date:', dateKey);\n    debugLog('MBAoi9uv43d: Current individualTimeRanges keys:', Object.keys(individualTimeRanges));\n    debugLog('MBAoi9uv43d: New updatedRanges keys:', Object.keys(updatedRanges));\n    \n    // Update local state with completely new object to break all references\n    setIndividualTimeRanges(updatedRanges);\n    \n    // Format time strings for API\n    const formattedRanges = {};\n    Object.keys(updatedRanges).forEach(date => {\n      const timeData = updatedRanges[date];\n      formattedRanges[date] = {\n        startTime: `${String(timeData.startTime.hours).padStart(2, '0')}:${String(timeData.startTime.minutes).padStart(2, '0')}`,\n        endTime: `${String(timeData.endTime.hours).padStart(2, '0')}:${String(timeData.endTime.minutes).padStart(2, '0')}`,\n        isOvernightForced: !!timeData.isOvernightForced\n      };\n    });\n    \n    // Create a completely new data object for the parent component\n    const updatedData = {\n      startTime: JSON.parse(JSON.stringify(times.startTime)),\n      endTime: JSON.parse(JSON.stringify(times.endTime)),\n      isOvernightForced: times.isOvernightForced,\n      hasIndividualTimes: true,\n      dates: initialTimes.dates ? [...initialTimes.dates] : [],\n      individualTimeRanges: formattedRanges\n    };\n    \n    // Add the specific date data\n    updatedData[dateKey] = formattedRanges[dateKey];\n    \n    debugLog('MBAoi9uv43d: TimeSelectionCard sending updated data to parent');\n    onTimeSelect(updatedData);\n  };\n\n  const handleToggleIndividualDays = () => {\n    debugLog('MBAoi9uv43d: TOGGLE button pressed');\n    debugLog('MBAoi9uv43d: Current showIndividualDays state:', showIndividualDays);\n    \n    if (showIndividualDays) {\n      // Currently showing individual days, switching to default time range\n      debugLog('MBAoi9uv43d: Switching FROM individual days TO default time range');\n      \n      // First, update the UI state\n      setShowIndividualDays(false);\n      \n      // Then send updated data to parent with hasIndividualTimes=false\n      // Include ONLY the essential time data, no date keys\n      const updatedData = {\n        startTime: times.startTime,\n        endTime: times.endTime,\n        isOvernightForced: times.isOvernightForced,\n        hasIndividualTimes: false,\n        // Keep the dates array for reference but don't include individual time ranges\n        dates: initialTimes.dates || []\n      };\n      \n      debugLog('MBAoi9uv43d: Sending default time data to parent:', updatedData);\n      onTimeSelect(updatedData);\n    } else {\n      // Currently showing default time range, switching to individual days\n      debugLog('MBAoi9uv43d: Switching FROM default time range TO individual days');\n      \n      // First update the UI state\n      setShowIndividualDays(true);\n      \n      // Create individual time ranges\n      let newTimeRanges = {};\n      \n      // Check if we have multiple individual dates from the booking data\n      const hasMultipleDays = initialTimes && initialTimes.dates && initialTimes.dates.length > 0;\n      \n      if (hasMultipleDays) {\n        // Get dates from initialTimes.dates for multiple-days selection\n        debugLog('MBAoi9uv43d: Creating time ranges for multiple individual dates');\n        \n        initialTimes.dates.forEach(dateObj => {\n          // Handle different date formats\n          let date;\n          if (typeof dateObj === 'string') {\n            date = new Date(dateObj);\n          } else if (dateObj && dateObj.date) {\n            date = new Date(dateObj.date);\n          } else {\n            date = new Date(dateObj);\n          }\n          \n          const dateKey = date.toISOString().split('T')[0];\n          \n          // Use current times values as default\n          newTimeRanges[dateKey] = {\n            startTime: JSON.parse(JSON.stringify(times.startTime)),\n            endTime: JSON.parse(JSON.stringify(times.endTime)),\n            isOvernightForced: times.isOvernightForced\n          };\n        });\n      } else if (dateRange && dateRange.startDate && dateRange.endDate) {\n        // Create ranges from dateRange\n        debugLog('MBAoi9uv43d: Creating time ranges from dateRange');\n        \n        const startDate = new Date(dateRange.startDate);\n        const endDate = new Date(dateRange.endDate);\n        const current = new Date(startDate);\n        \n        while (current <= endDate) {\n          const dateKey = current.toISOString().split('T')[0];\n          \n          // Use current times values as default, with deep copy\n          newTimeRanges[dateKey] = {\n            startTime: JSON.parse(JSON.stringify(times.startTime)),\n            endTime: JSON.parse(JSON.stringify(times.endTime)),\n            isOvernightForced: times.isOvernightForced\n          };\n          \n          // Move to next day\n          current.setDate(current.getDate() + 1);\n        }\n      } else if (Object.keys(individualTimeRanges).length > 0) {\n        // Use existing time ranges if we already have them\n        newTimeRanges = JSON.parse(JSON.stringify(individualTimeRanges));\n      }\n      \n      debugLog('MBAoi9uv43d: Setting individual time ranges:', newTimeRanges);\n      setIndividualTimeRanges(newTimeRanges);\n      \n      // Send full object with individual day data\n      onTimeSelect({\n        ...times,\n        ...newTimeRanges,\n        hasIndividualTimes: true\n      });\n    }\n  };\n\n  // Utility to get dates from dateRange or initialTimes\n  const getDates = () => {\n    let dates = [];\n    \n    // Check if we have multiple individual dates from the booking data\n    const hasMultipleDays = initialTimes && initialTimes.dates && initialTimes.dates.length > 0;\n    \n    if (hasMultipleDays) {\n      // Get dates from the initialTimes.dates for multiple-days selection\n      debugLog('MBAoi9uv43d: Using multiple individual dates from initialTimes:', initialTimes.dates);\n      dates = initialTimes.dates.map(dateObj => {\n        // Handle different date formats (string or object with date property)\n        if (typeof dateObj === 'string') {\n          return new Date(dateObj);\n        } else if (dateObj && dateObj.date) {\n          return new Date(dateObj.date);\n        } else {\n          return new Date(dateObj);\n        }\n      });\n    } else if (dateRange && dateRange.startDate && dateRange.endDate) {\n      // Generate array of dates between start and end for date range\n      debugLog('MBAoi9uv43d: Generating dates from dateRange:', dateRange);\n      const startDate = new Date(dateRange.startDate);\n      const endDate = new Date(dateRange.endDate);\n      const current = new Date(startDate);\n      \n      while (current <= endDate) {\n        dates.push(new Date(current));\n        current.setDate(current.getDate() + 1);\n      }\n    }\n    \n    return dates;\n  };\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.card}>\n        {/* Only show default time range selector when not showing individual days */}\n        {!showIndividualDays && (\n          <NewTimeRangeSelector\n            onTimeSelect={handleDefaultTimeSelect}\n            initialTimes={times}\n            is_overnight={selectedService?.is_overnight || times.isOvernightForced || isOvernightForced || false}\n            uniqueId=\"default-time-range\"\n            dateRange={dateRange}\n            selectedDates={initialTimes.dates || []}\n          />\n        )}\n\n        {/* Only show customize button if not an overnight service */}\n        {!selectedService?.is_overnight && !isOvernightForced && (\n          <View style={styles.customizeButtonContainer}>\n            <TouchableOpacity \n              style={styles.customizeButton}\n              onPress={handleToggleIndividualDays}\n              activeOpacity={0.7}\n            >\n              <MaterialIcons name=\"schedule\" size={20} color={theme.colors.mainColors.main} />\n              <Text style={styles.customizeButtonText}>\n                {showIndividualDays ? 'Set Default Time Range' : 'Customize Individual Day Schedules'}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n\n        {/* Only show individual day schedules if not an overnight service and the toggle is on */}\n        {showIndividualDays && !selectedService?.is_overnight && !isOvernightForced && (\n          <View style={styles.individualDaysContainer}>\n            <Text style={styles.sectionHeader}>Individual Day Schedules</Text>\n            <ScrollView>\n              {getDates().map((date, index) => {\n                const dateKey = date.toISOString().split('T')[0];\n                \n                // Get existing time data for this date or use default with deep copying\n                let timeData;\n                \n                // Check if we have a specific time range for this date in initialTimes\n                if (initialTimes && initialTimes[dateKey]) {\n                  const parsedStartTime = parseTimeValue(initialTimes[dateKey].startTime);\n                  const parsedEndTime = parseTimeValue(initialTimes[dateKey].endTime);\n                  \n                  timeData = {\n                    startTime: parsedStartTime || JSON.parse(JSON.stringify(times.startTime)),\n                    endTime: parsedEndTime || JSON.parse(JSON.stringify(times.endTime)),\n                    // CRITICAL FIX: prioritize current service over previous state\n                    isOvernightForced: selectedService?.is_overnight || isOvernightForced || false\n                  };\n                  \n                  debugLog(`MBAoi9uv43d: Found specific time data for date ${dateKey} in initialTimes`);\n                } \n                // Otherwise check individualTimeRanges which is our local state\n                else if (individualTimeRanges && individualTimeRanges[dateKey]) {\n                  timeData = JSON.parse(JSON.stringify(individualTimeRanges[dateKey]));\n                  debugLog(`MBAoi9uv43d: Using time from individualTimeRanges for date ${dateKey}`);\n                } \n                // If nothing found, use default times\n                else {\n                  timeData = { \n                    startTime: JSON.parse(JSON.stringify(times.startTime)),\n                    endTime: JSON.parse(JSON.stringify(times.endTime)),\n                    isOvernightForced: times.isOvernightForced\n                  };\n                  debugLog(`MBAoi9uv43d: Using default times for date ${dateKey}`);\n                }\n                \n                return (\n                  <DayTimeSelector\n                    key={`day-${dateKey}`}\n                    date={date}\n                    initialTimes={timeData}\n                    onTimeChange={handleIndividualDayTimeSelect}\n                    is_overnight={selectedService?.is_overnight || false}\n                  />\n                );\n              })}\n            </ScrollView>\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n  },\n  card: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n  },\n  customizeButtonContainer: {\n    marginBottom: 24,\n    paddingHorizontal: 16,\n  },\n  customizeButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 8,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.mainColors.main,\n  },\n  customizeButtonText: {\n    color: theme.colors.mainColors.main,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  individualDaysContainer: {\n    gap: 12,\n    marginBottom: 16,\n  },\n  sectionHeader: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 12,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default TimeSelectionCard; ","import React, { useState, useContext, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n  SafeAreaView,\n  Platform,\n  ScrollView,\n  Dimensions,\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport ServiceAndPetsCard from './bookingComponents/ServiceAndPetsCard';\nimport DateSelectionCard from './bookingComponents/DateSelectionCard';\nimport TimeSelectionCard from './bookingComponents/TimeSelectionCard';\nimport ReviewAndRatesCard from './bookingComponents/ReviewAndRatesCard';\nimport StepProgressIndicator from './common/StepProgressIndicator';\nimport TosRequiredModal from './modals/TosRequiredModal';\nimport { updateBookingDraftPetsAndServices, \n         updateBookingDraftTimeAndDate, \n         updateBookingDraftMultipleDays,\n         updateBookingDraftRecurring,\n         createBookingFromDraft,\n         getBookingDraftDatesAndTimes\n} from '../api/API';\nimport { convertToUTC, formatDateForAPI, formatTimeForAPI, parseOccurrencesForBookingSteps } from '../utils/time_utils';\n\nconst STEPS = {\n  SERVICES_AND_PETS: {\n    id: 0,\n    name: 'Services & Pets'\n  },\n  DATE_SELECTION: {\n    id: 1,\n    name: 'Date Selection'\n  },\n  TIME_SELECTION: {\n    id: 2,\n    name: 'Time Selection'\n  },\n  REVIEW_AND_RATES: {\n    id: 3,\n    name: 'Review & Rates'\n  }\n};\n\nconst BookingStepModal = ({ \n  visible, \n  onClose,\n  bookingId,\n  onComplete,\n  initialData = {},\n  navigation\n}) => {\n  const { is_DEBUG, screenWidth, timeSettings } = useContext(AuthContext);\n  const isSmallScreen = screenWidth < 600;\n  const isDesktop = screenWidth > 768;\n  const [currentStep, setCurrentStep] = useState(STEPS.SERVICES_AND_PETS.id);\n  const [bookingData, setBookingData] = useState({\n    service: initialData.service || null,\n    pets: initialData.pets || [],\n    dates: initialData.dates || [],\n    bookingType: initialData.bookingType || 'one-time',\n    dateRangeType: initialData.dateRangeType || 'date-range',\n    times: initialData.times || {\n      startTime: '09:00',  // Default start time\n      endTime: '17:00',    // Default end time\n      isOvernightForced: false,\n      hasIndividualTimes: false  // Default to false\n    },\n    rates: initialData.rates || {},\n    dateSelectionData: null,\n    dateRange: null,\n    hasFetchedDates: false, // Track whether dates have been fetched\n  });\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [termsAgreed, setTermsAgreed] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n\n  // Add effect to log initial data\n  useEffect(() => {\n    debugLog('MBA12345 Initial data received:', initialData);\n    debugLog('MBA12345 Initial booking data state:', bookingData);\n  }, [initialData]);\n\n  // New effect to fetch draft dates and times\n  useEffect(() => {\n    const fetchDraftDatesAndTimes = async () => {\n      if (!bookingId || !visible) return;\n      \n      // Only fetch if we haven't already loaded dates, or if they're empty\n      if (bookingData.hasFetchedDates) {\n        debugLog('MBA2j3kbr9hve4: Skipping fetch as hasFetchedDates is true');\n        return;\n      }\n      \n      try {\n        setIsLoading(true);\n        setError(null);\n        \n        debugLog('MBA2j3kbr9hve4: Fetching draft dates and times for booking ID:', bookingId);\n        const response = await getBookingDraftDatesAndTimes(bookingId);\n        debugLog('MBA2j3kbr9hve4: Received draft dates and times:', response);\n        \n        if (response) {\n          // Use our utility function to parse occurrences correctly with user's timezone\n          const userTimezone = timeSettings?.timezone || 'US/Mountain';\n          debugLog('MBA2j3kbr9hve4: Using timezone for parsing occurrences:', {\n            userTimezone,\n            timeSettings,\n            fallbackUsed: !timeSettings?.timezone\n          });\n          const parsedData = parseOccurrencesForBookingSteps(response.occurrences || [], userTimezone);\n          \n          debugLog('MBA2j3kbr9hve4: Parsed draft dates and times:', parsedData);\n          \n          // Check if this is an overnight service\n          // First check the service from the response \n          const serviceName = (response.service_details?.service_type || '').toLowerCase();\n          const isOvernightService = response.service_details?.is_overnight === true;\n          \n          debugLog('MBA2j3kbr9hve4: Is overnight service from response:', isOvernightService);\n          debugLog('MBA2j3kbr9hve4: Service name:', serviceName);\n          debugLog('MBA2j3kbr9hve4: Full service details from response:', response.service_details);\n\n          // Update bookingData with the service information to ensure we have the overnight status\n          let serviceData = null;\n          if (response.service_details) {\n            serviceData = {\n              ...response.service_details,\n              service_id: response.service_details.service_id,\n              service_name: response.service_details.service_type,\n              is_overnight: isOvernightService, // Using our improved overnight detection\n            };\n            debugLog('MBA2j3kbr9hve4: Setting service data with overnight status:', serviceData);\n          }\n          \n          // Check for occurrences to determine if this is an overnight booking\n          if (response.occurrences && response.occurrences.length > 0) {\n            // Check if we can determine if this is an overnight booking from the dates\n            const firstOcc = response.occurrences[0];\n            const lastOcc = response.occurrences[response.occurrences.length - 1];\n            \n            // If first and last occurrence have different dates, this might be an overnight range\n            if (firstOcc.start_date !== lastOcc.end_date) {\n              const startDate = new Date(firstOcc.start_date);\n              const endDate = new Date(lastOcc.end_date);\n              const daysDifference = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n              \n              // If the difference is 1+ days, it's likely an overnight booking\n              if (daysDifference >= 1) {\n                debugLog('MBA2j3kbr9hve4: DETECTED OVERNIGHT from date range:', {\n                  startDate: firstOcc.start_date,\n                  endDate: lastOcc.end_date,\n                  daysDifference\n                });\n                \n                // Force overnight mode\n                if (serviceData) {\n                  serviceData.is_overnight = true;\n                }\n              }\n            }\n          }\n            \n          // Special check to handle a possible case where we have a multi-day date range\n          // with only start and end dates in individual occurrences (instead of all dates)\n          if (response.occurrences?.length === 2) {\n            try {\n              const occ1Date = new Date(response.occurrences[0].start_date);\n              const occ2Date = new Date(response.occurrences[1].start_date);\n              \n              // Check if they are more than 1 day apart\n              const daysBetween = Math.abs(Math.round((occ2Date - occ1Date) / (1000 * 60 * 60 * 24)));\n              \n              if (daysBetween > 1) {\n                debugLog('MBA2j3kbr9hve4: DETECTED POTENTIAL OVERNIGHT from date distance:', {\n                  date1: response.occurrences[0].start_date,\n                  date2: response.occurrences[1].start_date,\n                  daysBetween\n                });\n                \n                // Force overnight mode if we have more than 1 day between occurrences\n                if (serviceData) {\n                  serviceData.is_overnight = true;\n                }\n              }\n            } catch (err) {\n              debugLog('MBA2j3kbr9hve4: Error checking occ dates:', err);\n            }\n          }\n            \n          // Ensure we set a correct dateRangeType\n          // If we have detected an overnight service, force 'date-range' mode\n          let dateRangeType = response.date_range_type || 'date-range';\n          if (isOvernightService || (serviceData && serviceData.is_overnight)) {\n            dateRangeType = 'date-range';\n            debugLog('MBA2j3kbr9hve4: Forcing date-range type for overnight service');\n          } \n          // Otherwise, if we have non-consecutive dates, force multiple-days mode\n          else if (parsedData.dates && parsedData.dates.length > 1 && !parsedData.dateRange) {\n            dateRangeType = 'multiple-days';\n            debugLog('MBA2j3kbr9hve4: Non-consecutive dates detected, forcing multiple-days mode');\n          }\n            \n          // Determine final overnight status\n          const isOvernightForced = isOvernightService || (serviceData && serviceData.is_overnight);\n          \n          debugLog('MBA2j3kbr9hve4: Final overnight determination:', {\n            initialCheck: isOvernightService,\n            afterOccurrenceChecks: serviceData?.is_overnight,\n            finalIsOvernightForced: isOvernightForced\n          });\n          \n          setBookingData(prev => ({\n            ...prev,\n            dates: parsedData.dates || [],\n            dateRange: parsedData.dateRange,\n            times: {\n              ...(parsedData.defaultTimes || {}),\n              ...parsedData.individualTimes,\n              individualTimeRanges: parsedData.individualTimes || {},\n              allTimesAreTheSame: parsedData.allTimesAreTheSame,\n              hasIndividualTimes: !parsedData.allTimesAreTheSame,\n              isOvernightForced: isOvernightForced\n            },\n            dateRangeType: dateRangeType,\n            bookingType: response.booking_type || prev.bookingType || 'one-time',\n            hasFetchedDates: true, // Flag to prevent refetching\n            // Update service information with overnight status\n            service: serviceData || prev.service\n          }));\n        }\n      } catch (error) {\n        debugLog('MBA2j3kbr9hve4: Error fetching draft dates and times:', error);\n        // Only show an error if we're not already on step 1 (service selection)\n        // This prevents showing an error when we're editing an existing booking\n        // that might not have dates/times yet\n        if (currentStep > STEPS.SERVICES_AND_PETS.id) {\n          setError('Failed to load booking details. Please try again.');\n        } else {\n          // Log the error but don't show it to the user on the first step\n          debugLog('MBA2j3kbr9hve4: Suppressing error on first step:', error.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    fetchDraftDatesAndTimes();\n  }, [bookingId, visible, currentStep, bookingData.hasFetchedDates]);\n\n  // Effect to ensure dateRangeType is always 'date-range' for overnight services\n  useEffect(() => {\n    // CRITICAL FIX: Only check the service itself, not previous times state\n    if (bookingData.service?.is_overnight) {\n      debugLog('MBA2j3kbr9hve4: Detected overnight service, ensuring dateRangeType is date-range');\n      \n      // If we have an overnight service but dateRangeType is not date-range, update it\n      if (bookingData.dateRangeType !== 'date-range') {\n        debugLog('MBA2j3kbr9hve4: Updating dateRangeType from', bookingData.dateRangeType, 'to date-range');\n        \n        setBookingData(prev => ({\n          ...prev,\n          dateRangeType: 'date-range'\n        }));\n      }\n    }\n  }, [bookingData.service?.is_overnight]); // CRITICAL FIX: Only depend on service.is_overnight\n\n  const handleServiceSelect = (service) => {\n    debugLog('MBA12345 Selected service:', service);\n    \n    // Check if the service has an overnight property or name contains overnight-related terms\n    const serviceName = (service?.service_name || '').toLowerCase();\n    \n    // Determine if this is an overnight service from the is_overnight flag or name\n    const isOvernight = service?.is_overnight === true;\n    \n    debugLog('MBA2j3kbr9hve4: Service overnight status:', {\n      isOvernight,\n      serviceData: service,\n      serviceName\n    });\n    \n    setBookingData(prev => {\n      // CRITICAL FIX: Reset times state to clean defaults when service changes\n      // This prevents carrying over stale isOvernightForced values\n      const cleanDefaultTimes = {\n        startTime: '09:00',\n        endTime: '17:00',\n        isOvernightForced: isOvernight, // Only set based on current service\n        hasIndividualTimes: isOvernight ? false : (prev.times?.hasIndividualTimes || false) // Reset individual times for overnight\n      };\n      \n      debugLog('MBA2j3kbr9hve4: CRITICAL FIX - Reset times with clean defaults:', {\n        previousTimes: prev.times,\n        newCleanTimes: cleanDefaultTimes,\n        serviceIsOvernight: isOvernight\n      });\n      \n      // Also update the service object to ensure is_overnight is set correctly\n      const updatedService = {\n        ...service,\n        is_overnight: isOvernight\n      };\n      \n      return {\n        ...prev,\n        service: updatedService,\n        // CRITICAL FIX: Use clean default times to prevent stale state\n        times: cleanDefaultTimes,\n        // Force date-range selection mode for overnight services\n        dateRangeType: isOvernight ? 'date-range' : prev.dateRangeType\n      };\n    });\n  };\n\n  const handlePetSelect = (pet) => {\n    debugLog('MBA12345 Selected/deselected pet:', pet);\n    \n    const updatedPets = bookingData.pets.find(p => p.pet_id === pet.pet_id)\n      ? bookingData.pets.filter(p => p.pet_id !== pet.pet_id)\n      : [...bookingData.pets, pet];\n\n    setBookingData(prev => ({\n      ...prev,\n      pets: updatedPets\n    }));\n  };\n\n  const handleDateSelect = (dateData) => {\n    debugLog('MBA12345 Selected dates:', dateData);\n    debugLog('MBA2j3kbr9hve4: CRITICAL handleDateSelect rangeType:', {\n      rangeType: dateData.rangeType,\n      currentDateRangeType: bookingData.dateRangeType,\n      isServiceOvernight: bookingData.service?.is_overnight,\n      isTimesOvernightForced: bookingData.times?.isOvernightForced\n    });\n    \n    setBookingData(prev => {\n      // Preserve date range when switching to multiple-days\n      let newDateRange = prev.dateRange;\n      \n      // Update date range based on the selection type\n      if (dateData.rangeType === 'date-range' && dateData.startDate && dateData.endDate) {\n        newDateRange = {\n          startDate: dateData.startDate,\n          endDate: dateData.endDate\n        };\n      } else if (dateData.rangeType === 'multiple-days') {\n        // Keep the existing date range when in multiple-days mode\n        newDateRange = prev.dateRange;\n      } else if (!dateData.dates || dateData.dates.length === 0) {\n        // Clear date range if all dates are cleared\n        newDateRange = null;\n      }\n\n      return {\n        ...prev,\n        dates: dateData.dates || [],\n        dateSelectionData: dateData,\n        dateRange: newDateRange,\n        dateRangeType: dateData.rangeType || prev.dateRangeType\n      };\n    });\n  };\n\n  const handleBookingTypeChange = (bookingType) => {\n    debugLog('MBA12345 Booking type changed:', bookingType);\n    setBookingData(prev => ({\n      ...prev,\n      bookingType,\n      // Clear dates when changing booking type\n      dates: []\n    }));\n  };\n\n  const handleDateRangeTypeChange = (dateRangeType) => {\n    debugLog('MBA12345 Date range type changed:', dateRangeType);\n    setBookingData(prev => ({\n      ...prev,\n      dateRangeType\n    }));\n  };\n\n  const handleTimeSelect = (timeData) => {\n    debugLog('MBAoi1h34ghnvo: TimeSelectionCard sent time data:', timeData);\n\n    // CRITICAL FIX: Determine overnight status from current service, not timeData\n    const hasServiceOvernight = bookingData.service?.is_overnight === true;\n    \n    debugLog('MBAoi1h34ghnvo: CRITICAL FIX - Overnight status determination:', {\n      hasServiceOvernight,\n      timeDataIsOvernightForced: timeData.isOvernightForced,\n      message: 'Using service.is_overnight as source of truth'\n    });\n    \n    setBookingData(prev => {\n      // Check if we have individual day times\n      if (timeData.hasIndividualTimes) {\n        debugLog('MBAoi1h34ghnvo: Processing individual times');\n        \n        // Create a new times object that preserves all individual time changes\n        const individualTimes = {\n          ...prev.times,\n          hasIndividualTimes: true,\n          isOvernightForced: hasServiceOvernight, // CRITICAL FIX: Use service overnight status\n          dates: timeData.dates || prev.times.dates || [],\n          // Preserve the raw individualTimeRanges\n          individualTimeRanges: timeData.individualTimeRanges || {}\n        };\n\n        // Add all date-specific time changes\n        Object.keys(timeData).forEach(key => {\n          if (key.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n            debugLog('MBAoi1h34ghnvo: Processing date key:', key, timeData[key]);\n            // Ensure we preserve the exact time data for each date\n            individualTimes[key] = {\n              startTime: timeData[key].startTime,\n              endTime: timeData[key].endTime,\n              isOvernightForced: timeData[key].isOvernightForced\n            };\n          }\n        });\n          \n        debugLog('MBAoi1h34ghnvo: Final individual times object:', individualTimes);\n        \n        return {\n          ...prev,\n          times: individualTimes\n        };\n      } else {\n        debugLog('MBAoi1h34ghnvo: Using default time range mode');\n        \n        // Create a new times object that preserves any existing values\n        const updatedTimes = {\n          ...prev.times,\n          startTime: timeData.startTime ? `${String(timeData.startTime.hours).padStart(2, '0')}:${String(timeData.startTime.minutes || 0).padStart(2, '0')}` : prev.times.startTime,\n          endTime: timeData.endTime ? `${String(timeData.endTime.hours).padStart(2, '0')}:${String(timeData.endTime.minutes || 0).padStart(2, '0')}` : prev.times.endTime,\n          isOvernightForced: hasServiceOvernight, // CRITICAL FIX: Use service overnight status\n          hasIndividualTimes: false,\n          dates: timeData.dates || prev.times.dates || []\n        };\n\n        debugLog('MBAoi1h34ghnvo: Updated default times:', updatedTimes);\n\n        return {\n          ...prev,\n          times: updatedTimes\n        };\n      }\n    });\n  };\n\n  const canProceedToNextStep = () => {\n    switch (currentStep) {\n      case STEPS.SERVICES_AND_PETS.id:\n        return bookingData.service && bookingData.pets.length > 0;\n      case STEPS.DATE_SELECTION.id:\n        // Check if we have valid dates, either from:\n        // 1. dateSelectionData that's been validated\n        // 2. dates array with entries\n        // 3. a valid dateRange with both startDate and endDate\n\n        // First check if dateSelectionData exists and is valid\n        if (bookingData.dateSelectionData && bookingData.dateSelectionData.isValid) {\n          return true;\n        }\n        \n        // Check if we have any dates in the array\n        if (bookingData.dates && bookingData.dates.length > 0) {\n          return true;\n        }\n        \n        // Check if we have a valid date range\n        if (bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate) {\n          return true;\n        }\n        \n        // No valid date configuration found\n        return false;\n      case STEPS.TIME_SELECTION.id:\n        // Always allow proceeding from time selection since we have default times\n        return true;\n      case STEPS.REVIEW_AND_RATES.id:\n        return true;\n      // Add validation for other steps as they are implemented\n      default:\n        return false;\n    }\n  };\n\n  const handleNext = async () => {\n    if (!canProceedToNextStep()) {\n      setError('Please complete all required fields before proceeding');\n      return;\n    }\n\n    setError(null);\n    \n    // Log what's happening when advancing to the next step\n    debugLog('MBA2j3kbr9hve4: Moving to next step:', {\n      currentStep,\n      nextStep: currentStep + 1,\n      hasValidDates: bookingData.dates && bookingData.dates.length > 0,\n      hasValidDateRange: bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate,\n      hasValidDateSelectionData: bookingData.dateSelectionData && bookingData.dateSelectionData.isValid,\n      dateRangeType: bookingData.dateRangeType,\n      bookingType: bookingData.bookingType\n    });\n    \n    if (currentStep < STEPS.REVIEW_AND_RATES.id) {\n      // If we're on the first step, update the draft with selected service and pets\n      if (currentStep === STEPS.SERVICES_AND_PETS.id) {\n        try {\n          debugLog('MBA2j3kbr9hve4: Updating booking draft with service and pets');\n          await updateBookingDraftPetsAndServices(bookingId, {\n            service_id: bookingData.service?.service_id,\n            pets: bookingData.pets\n          });\n          debugLog('MBA2j3kbr9hve4: Successfully updated booking draft with service and pets');\n          \n          // Reset hasFetchedDates to force fetching dates and times when moving to the dates step\n          setBookingData(prev => ({\n            ...prev,\n            hasFetchedDates: false\n          }));\n        } catch (error) {\n          debugLog('MBA2j3kbr9hve4: Error updating booking draft:', error);\n          setError('Failed to save service and pet selections');\n          return;\n        }\n      }\n      \n      // Handle time selection calculations before proceeding\n      if (currentStep === STEPS.TIME_SELECTION.id) {\n        try {\n          debugLog('MBA5asdt3f4321 Original booking data:', bookingData);\n\n          // Direct fix - if the service is overnight, always use the updateBookingDraftTimeAndDate endpoint\n          // regardless of the dateRangeType that might have been previously set\n          const isServiceOvernightFlag = bookingData.service?.is_overnight === true;\n          const isTimeOvernightFlag = bookingData.times?.isOvernightForced === true;\n          const isAnyOvernightFlag = isServiceOvernightFlag || isTimeOvernightFlag;\n          \n          debugLog('MBA5asdt3f4321 DIRECT OVERNIGHT CHECK AT START:', {\n            isServiceOvernightFlag,\n            isTimeOvernightFlag,\n            isAnyOvernightFlag,\n            dateRangeType: bookingData.dateRangeType\n          });\n          \n          // If any overnight flag is set, we'll bypass all the other checks and directly use the overnight endpoint\n          if (isAnyOvernightFlag && bookingData.dateRange) {\n            // Force overnight mode\n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Forcing overnight mode for any overnight service');\n            \n            const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n            const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n            const startTime = formatTimeForAPI(bookingData.times.startTime);\n            const endTime = formatTimeForAPI(bookingData.times.endTime);\n            \n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Using time-and-date endpoint with dates:', {\n              startDate,\n              endDate,\n              startTime,\n              endTime\n            });\n            \n            // Get user's timezone from context\n            const userTz = timeSettings?.timezone || 'US/Mountain';\n            debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion:', userTz);\n            \n            // Convert local times to UTC before sending to backend\n            const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n              startDate,\n              startTime,\n              userTz\n            );\n\n            const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n              endDate,\n              endTime,\n              userTz\n            );\n\n            // Call the API with UTC times and dates\n            const response = await updateBookingDraftTimeAndDate(\n              bookingId,\n              utcStartDate,\n              utcEndDate,\n              utcStartTime,\n              utcEndTime\n            );\n            \n            debugLog('MBA53212co2v3nvoub5 DIRECT OVERRIDE: Response from updateBookingDraftTimeAndDate:', response);\n            \n            // Update booking data with the response's draft_data\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data,\n                // Ensure we maintain overnight settings\n                times: {\n                  ...(response.draft_data.times || prev.times),\n                  isOvernightForced: true\n                },\n                service: {\n                  ...(response.draft_data.service || prev.service),\n                  is_overnight: true\n                },\n                // Force dateRangeType to date-range for overnight services\n                dateRangeType: 'date-range'\n              }));\n            }\n            \n            // Skip the rest of the checks - we've already made the API call\n            setCurrentStep(prev => prev + 1);\n            return;\n          }\n          \n          if (bookingData.dateRangeType === 'date-range') {\n            // Check if this is a non-overnight service with date range\n            const isServiceOvernight = bookingData.service?.is_overnight === true;\n            // Check time overnight status - but don't count 00:00 end time as overnight by itself\n            const isTimeOvernight = bookingData.times?.isOvernightForced === true && \n                                   !(bookingData.times.endTime === '00:00' && !isServiceOvernight);\n            \n            // Check if the date range spans multiple days - if it does, treat it as overnight\n            let isMultiDayRange = false;\n            if (bookingData.dateRange && bookingData.dateRange.startDate && bookingData.dateRange.endDate) {\n              try {\n                const startDate = new Date(bookingData.dateRange.startDate);\n                const endDate = new Date(bookingData.dateRange.endDate);\n                const daysDifference = Math.ceil((endDate - startDate) / (1000 * 60 * 60 * 24));\n                \n                // If more than 1 day difference, consider it multi-day\n                if (daysDifference > 1) {\n                  isMultiDayRange = true;\n                  debugLog('MBA53212co2v3nvoub5 DETECTED multi-day date range:', {\n                    startDate: bookingData.dateRange.startDate,\n                    endDate: bookingData.dateRange.endDate,\n                    daysDifference\n                  });\n                }\n              } catch (err) {\n                debugLog('MBA53212co2v3nvoub5 Error checking date range:', err);\n              }\n            }\n            \n            debugLog('MBA53212co2v3nvoub5 CRITICAL FIX - Checking overnight status:', {\n              dateRangeType: bookingData.dateRangeType,\n              serviceIsOvernight: isServiceOvernight,\n              timesIsOvernightForced: bookingData.times?.isOvernightForced,\n              endTime: bookingData.times?.endTime,\n              endTimeIsMidnight: bookingData.times?.endTime === '00:00',\n              // Special check for midnight end time\n              isMidnightEndTimeButNotForced: bookingData.times?.endTime === '00:00' && !isServiceOvernight,\n              isTimeOvernight: isTimeOvernight,\n              isMultiDayRange: isMultiDayRange,\n              willTreatAsOvernight: isServiceOvernight || isTimeOvernight,\n              message: 'Multi-day ranges no longer automatically force overnight mode',\n              service: bookingData.service,\n              times: bookingData.times\n            });\n            \n            // CRITICAL FIX: Only truly overnight services should be treated as overnight\n            // Multi-day date ranges for non-overnight services should NOT force overnight mode\n            if (isServiceOvernight || isTimeOvernight) {\n              // Only force overnight flag if the service itself is actually overnight\n              const updatedBookingData = {\n                ...bookingData,\n                service: {\n                  ...bookingData.service,\n                  is_overnight: isServiceOvernight || isTimeOvernight\n                },\n                times: {\n                  ...bookingData.times,\n                  isOvernightForced: isServiceOvernight || isTimeOvernight\n                }\n              };\n              \n              // Update state with the overnight mode for truly overnight services\n              setBookingData(updatedBookingData);\n              \n              // This is a truly overnight service with a date range, so we should call updateBookingDraftTimeAndDate\n              debugLog('MBA53212co2v3nvoub5 Using overnight endpoint for truly overnight service');\n              \n              const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n              const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n              const startTime = formatTimeForAPI(bookingData.times.startTime);\n              const endTime = formatTimeForAPI(bookingData.times.endTime);\n              \n              // Get user's timezone from context\n              const userTz = timeSettings?.timezone || 'US/Mountain';\n              debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion:', userTz);\n              \n              // Convert local times to UTC before sending to backend\n              const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                startDate,\n                startTime,\n                userTz\n              );\n\n              const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDate,\n                endTime,\n                userTz\n              );\n\n              // Call the API with UTC times and dates\n              const response = await updateBookingDraftTimeAndDate(\n                bookingId,\n                utcStartDate,\n                utcEndDate,\n                utcStartTime,\n                utcEndTime\n              );\n              \n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftTimeAndDate (overnight override):', response);\n              \n              // Update booking data with the response's draft_data\n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data,\n                  // CRITICAL FIX: Only maintain overnight settings if service is actually overnight\n                  times: {\n                    ...(response.draft_data.times || prev.times),\n                    isOvernightForced: isServiceOvernight || isTimeOvernight\n                  },\n                  service: {\n                    ...(response.draft_data.service || prev.service),\n                    is_overnight: isServiceOvernight || isTimeOvernight\n                  }\n                }));\n              }\n              \n              // Skip the rest of the checks since we've already made the API call\n              setCurrentStep(prev => prev + 1);\n              return;\n            }\n            \n            // CRITICAL FIX: Multi-day date ranges for non-overnight services should use multiple days endpoint\n            const isNonOvernightDateRange = \n              bookingData.dateRangeType === 'date-range' && \n              !isServiceOvernight &&\n              !isTimeOvernight;\n\n            debugLog('MBA53212co2v3nvoub5 CRITICAL FIX - Decision:', {\n              isNonOvernightDateRange: isNonOvernightDateRange,\n              isMultiDayRange: isMultiDayRange,\n              willUseEndpoint: isNonOvernightDateRange ? 'updateBookingDraftMultipleDays' : 'updateBookingDraftTimeAndDate',\n              message: 'Multi-day ranges for non-overnight services now use multiple days endpoint'\n            });\n\n            if (isNonOvernightDateRange) {\n              // CRITICAL FIX: For non-overnight date range services (including multi-day), create individual days\n              debugLog('MBA53212co2v3nvoub5 CRITICAL FIX - Handling non-overnight date range as individual occurrences:', {\n                isMultiDay: isMultiDayRange,\n                message: 'Multi-day ranges for non-overnight services handled correctly'\n              });\n              \n              // Create dates array from date range\n              const startDate = new Date(bookingData.dateRange.startDate);\n              const endDate = new Date(bookingData.dateRange.endDate);\n              const dates = [];\n              \n              // Generate all dates in the range\n              const currentDate = new Date(startDate);\n              while (currentDate <= endDate) {\n                dates.push(new Date(currentDate));\n                currentDate.setDate(currentDate.getDate() + 1);\n              }\n              \n              debugLog('MBA53212co2v3nvoub5 Generated dates from range:', dates.map(d => d.toISOString().split('T')[0]));\n              debugLog('MBA53212co2v3nvoub5 Time settings:', bookingData.times);\n              \n              // Format dates and determine times for each day\n              const formattedDates = dates.map(date => {\n                const dateKey = date.toISOString().split('T')[0];\n                debugLog('MBA53212co2v3nvoub5 Processing date:', dateKey);\n                \n                let dayTimes = bookingData.times;\n                \n                // If there are individual time settings for this day, use those\n                if (bookingData.times[dateKey] && bookingData.times.hasIndividualTimes) {\n                  dayTimes = bookingData.times[dateKey];\n                  debugLog('MBA53212co2v3nvoub5 Using individual times for date:', dateKey, dayTimes);\n                } else {\n                  debugLog('MBA53212co2v3nvoub5 Using default times for date:', dateKey, dayTimes);\n                }\n                \n                // Format the start time\n                let startTime;\n                if (typeof dayTimes.startTime === 'string') {\n                  startTime = dayTimes.startTime;\n                } else if (dayTimes.startTime?.hours !== undefined) {\n                  startTime = `${String(dayTimes.startTime.hours).padStart(2, '0')}:${String(dayTimes.startTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                  // Default time if missing\n                  startTime = '09:00';\n                }\n                \n                // Format the end time\n                let endTime;\n                if (typeof dayTimes.endTime === 'string') {\n                  endTime = dayTimes.endTime;\n                } else if (dayTimes.endTime?.hours !== undefined) {\n                  endTime = `${String(dayTimes.endTime.hours).padStart(2, '0')}:${String(dayTimes.endTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                  // Default time if missing\n                  endTime = '17:00';\n                }\n                \n                debugLog('MBA53212co2v3nvoub5 Formatted times for date:', dateKey, { startTime, endTime });\n                \n                // Format the date\n                const formattedDate = formatDateForAPI(date);\n                debugLog('MBA53212co2v3nvoub5 Formatted date:', formattedDate);\n                \n                // Determine if the end time might cross to the next day\n                // Check if end time is midnight or earlier than start time, indicating day boundary crossing\n                const needsNextDayDate = endTime === '00:00' || \n                                        (parseInt(endTime.split(':')[0], 10) < parseInt(startTime.split(':')[0], 10)) ||\n                                        (parseInt(endTime.split(':')[0], 10) === parseInt(startTime.split(':')[0], 10) && \n                                         parseInt(endTime.split(':')[1], 10) < parseInt(startTime.split(':')[1], 10));\n                \n                // Calculate end date - either same day or next day\n                const endDateObj = needsNextDayDate \n                  ? new Date(date.getTime() + 24*60*60*1000) // Next day if crossing midnight\n                  : new Date(date);\n                  \n                const formattedEndDate = formatDateForAPI(endDateObj);\n                \n                debugLog('MBA53212co2v3nvoub5 End date calculation:', {\n                  needsNextDayDate,\n                  startTime,\n                  endTime,\n                  originalDate: formattedDate,\n                  calculatedEndDate: formattedEndDate\n                });\n                \n                // IMPORTANT: Crossing midnight or having a different end date due to 00:00 end time\n                // should NOT force overnight mode - that should only be based on the service type\n                // We're just calculating the correct end date for API payload\n                \n                // Get user's timezone from context\n                const userTz = timeSettings?.timezone || 'US/Mountain';\n                debugLog('MBA53212co2v3nvoub5 Using user timezone for UTC conversion in map function:', userTz);\n                \n                // Convert local times to UTC for start time and date\n                const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                  formattedDate,\n                  startTime,\n                  userTz\n                );\n                \n                // Convert end time to UTC with potentially different end date\n                const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                  formattedEndDate,\n                  endTime,\n                  userTz\n                );\n                \n                debugLog('MBA53212co2v3nvoub5 Converted UTC times:', { \n                  utcStartDate, \n                  utcStartTime, \n                  utcEndDate, \n                  utcEndTime,\n                  isDifferentDates: utcStartDate !== utcEndDate\n                });\n                \n                // Return structured data with separate start and end dates\n                return {\n                  date: utcStartDate,\n                  startTime: utcStartTime,\n                  endDate: utcEndDate,  // Always include endDate\n                  endTime: utcEndTime\n                };\n              });\n              \n              debugLog('MBA53212co2v3nvoub5 - Converted UTC dates:', formattedDates);\n              \n              // Call the API for multiple individual days (even though they're from a date range)\n              const response = await updateBookingDraftMultipleDays(\n                bookingId,\n                {\n                  dates: formattedDates,\n                  times: {} // Empty times object since times are already included in each date\n                },\n                timeSettings\n              );\n              \n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftMultipleDays:', response);\n              \n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data\n                }));\n              }\n            } else {\n              // Handle date range selection for overnight services (existing logic)\n              const startDate = formatDateForAPI(bookingData.dateRange.startDate);\n              const endDate = formatDateForAPI(bookingData.dateRange.endDate);\n              const startTime = formatTimeForAPI(bookingData.times.startTime);\n              const endTime = formatTimeForAPI(bookingData.times.endTime);\n\n              debugLog('MBA53212co2v3nvoub5 Using update-time-and-date endpoint for OVERNIGHT service with dates:', {\n                startDate,\n                endDate,\n                startTime,\n                endTime,\n                service: {\n                  id: bookingData.service?.service_id,\n                  name: bookingData.service?.service_name,\n                  is_overnight: bookingData.service?.is_overnight\n                },\n                times: {\n                  isOvernightForced: bookingData.times?.isOvernightForced\n                }\n              });\n\n              // Convert local times to UTC before sending to backend\n              const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                startDate,\n                startTime,\n                userTz\n              );\n\n              const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDate,\n                endTime,\n                userTz\n              );\n\n              debugLog('MBA53212co2v3nvoub5 UTC dates and times:', {\n                utcStartDate,\n                utcStartTime,\n                utcEndDate,\n                utcEndTime\n              });\n\n              // Call the API with UTC times and dates\n              const response = await updateBookingDraftTimeAndDate(\n                bookingId,\n                utcStartDate,\n                utcEndDate,\n                utcStartTime,\n                utcEndTime\n              );\n\n              debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftTimeAndDate:', response);\n\n              // Update booking data with the response's draft_data\n              if (response?.draft_data) {\n                setBookingData(prev => ({\n                  ...prev,\n                  ...response.draft_data\n                }));\n              } else {\n                debugLog('MBA53212co2v3nvoub5 No draft_data in response:', response);\n              }\n            }\n          } else if (bookingData.dateRangeType === 'multiple-days') {\n            // Handle multiple individual days\n            debugLog('MBA53212co2v3nvoub5 Multiple days selection:', {\n              dates: bookingData.dates,\n              times: bookingData.times\n            });\n\n            // Call the API for multiple individual days\n            const response = await updateBookingDraftMultipleDays(\n              bookingId,\n              {\n                dates: bookingData.dates,\n                times: bookingData.times\n              },\n              timeSettings\n            );\n\n            debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftMultipleDays:', response);\n\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data\n              }));\n            }\n          } else if (bookingData.bookingType === 'recurring') {\n            // Handle recurring dates\n            debugLog('MBA53212co2v3nvoub5 Recurring dates selection:', {\n              startDate: bookingData.recurringStartDate,\n              endDate: bookingData.recurringEndDate,\n              daysOfWeek: bookingData.selectedDaysOfWeek,\n              frequency: bookingData.selectedFrequency,\n              times: bookingData.times\n            });\n\n            // Call the API for recurring dates\n            const response = await updateBookingDraftRecurring(\n              bookingId,\n              {\n                startDate: bookingData.recurringStartDate,\n                endDate: bookingData.recurringEndDate,\n                daysOfWeek: bookingData.selectedDaysOfWeek,\n                frequency: bookingData.selectedFrequency,\n                startTime: bookingData.times.startTime,\n                endTime: bookingData.times.endTime\n              }\n            );\n\n            debugLog('MBA53212co2v3nvoub5 Received response from updateBookingDraftRecurring:', response);\n\n            if (response?.draft_data) {\n              setBookingData(prev => ({\n                ...prev,\n                ...response.draft_data\n              }));\n            }\n          }\n        } catch (error) {\n          debugLog('MBA53212co2v3nvoub5 Error calculating booking totals:', error);\n          debugLog('MBA53212co2v3nvoub5 Error stack:', error.stack);\n          debugLog('MBA53212co2v3nvoub5 Error details:', {\n            message: error.message,\n            name: error.name,\n            response: error.response?.data\n          });\n          setError('Failed to calculate booking totals');\n          return;\n        }\n      }\n\n      setCurrentStep(prev => prev + 1);\n    } else {\n      // We're on the final step (REVIEW_AND_RATES), so create the booking\n      // First check if terms have been agreed to\n      if (!termsAgreed) {\n        setShowTermsModal(true);\n        return;\n      }\n      \n      try {\n        setError(null);\n        \n        // Check if we have a conversation ID from the booking data\n        if (!bookingData.conversation_id) {\n          setError('Missing conversation information');\n          return;\n        }\n        \n        debugLog('MBA66777 Creating booking from draft with conversation ID:', bookingData.conversation_id);\n        \n        // Call the API to create a booking from the draft\n        const response = await createBookingFromDraft(bookingData.conversation_id, termsAgreed);\n        \n        debugLog('MBA66777 Booking created successfully:', response);\n        \n        // Create a booking message from the response data\n        // The booking data is in the message object of the response\n        const bookingMessageData = response.message || {};\n        const bookingId = response.booking_id;\n        \n        const bookingMessage = {\n          id: Date.now().toString(), // Temporary ID for UI purposes\n          type_of_message: 'send_approved_message',\n          metadata: {\n            booking_id: bookingId,\n            service_type: bookingMessageData.service_type || bookingData.service?.service_name,\n            occurrences: bookingMessageData.occurrences || [],\n            cost_summary: bookingMessageData.cost_summary || {\n              total_client_cost: bookingMessageData.occurrences?.[0]?.cost_summary?.total_client_cost,\n              total_sitter_payout: bookingMessageData.occurrences?.[0]?.cost_summary?.total_sitter_payout\n            }\n          },\n          content: 'Approval Request',\n          sent_by_other_user: false,\n          timestamp: new Date().toISOString()\n        };\n        \n        // Close the modal and pass the new booking data to the parent component\n        onComplete({\n          ...bookingData,\n          booking_id: bookingId,\n          status: 'Pending Client Approval',\n          message: bookingMessage // Include the new message to be added to the message list\n        });\n        \n        // Reset the modal to step 1 with initial state\n        // This ensures next time it's opened, it starts fresh\n        resetModal();\n        \n      } catch (error) {\n        debugLog('MBA66777 Error creating booking:', error);\n        setError('Failed to create booking. Please try again.');\n        \n        // Still try to close the modal in case the booking was actually created\n        // The backend handles duplicate bookings, so it's safe to let the user try again if needed\n        setTimeout(() => {\n          // Short timeout to let the user see the error\n          onComplete({\n            ...bookingData,\n            error: true,\n            errorMessage: error.message\n          });\n        }, 3000);\n      }\n    }\n  };\n\n  const handleBack = () => {\n    if (currentStep > STEPS.SERVICES_AND_PETS.id) {\n      setCurrentStep(prev => prev - 1);\n    } else {\n      // We're on the first step, so close the modal\n      handleClose();\n    }\n  };\n\n  const renderCurrentStep = () => {\n    switch (currentStep) {\n      case STEPS.SERVICES_AND_PETS.id:\n        return (\n          <ServiceAndPetsCard\n            bookingId={bookingId}\n            onServiceSelect={handleServiceSelect}\n            onPetSelect={handlePetSelect}\n            selectedService={bookingData.service}\n            selectedPets={bookingData.pets}\n            navigation={navigation}\n            onClose={onClose}\n          />\n        );\n      case STEPS.DATE_SELECTION.id:\n        debugLog('MBA2j3kbr9hve4: Rendering date selection with:', { \n          dates: bookingData.dates, \n          dateRange: bookingData.dateRange,\n          bookingType: bookingData.bookingType,\n          dateRangeType: bookingData.dateRangeType,\n          hasFetchedDates: bookingData.hasFetchedDates\n        });\n        \n        const dateSelectionIsOvernightMode = bookingData.service?.is_overnight || false;\n        \n        debugLog('MBA2j3kbr9hve4: Date selection overnight status:', {\n          serviceIsOvernight: bookingData.service?.is_overnight,\n          timesIsOvernightForced: bookingData.times?.isOvernightForced,\n          combinedMode: dateSelectionIsOvernightMode\n        });\n        \n        return (\n          <DateSelectionCard\n            selectedDates={bookingData.dates || []}\n            onDateSelect={handleDateSelect}\n            bookingType={bookingData.bookingType || 'one-time'}\n            dateRangeType={bookingData.dateRangeType || 'date-range'}\n            initialDateRange={bookingData.dateRange || null}\n            isOvernightForced={dateSelectionIsOvernightMode}\n          />\n        );\n      case STEPS.TIME_SELECTION.id:\n        // Check if we have valid dates to display\n        if (!bookingData.dates || bookingData.dates.length === 0) {\n          return (\n            <View style={styles.errorContainer}>\n              <Text style={styles.errorText}>Please select dates first</Text>\n            </View>\n          );\n        }\n        \n        // Log current service and times state BEFORE preparing initialTimes \n        debugLog('MBA66777: CURRENT STATE Before rendering time selection:', { \n          service: {\n            id: bookingData.service?.service_id,\n            name: bookingData.service?.service_name,\n            is_overnight: bookingData.service?.is_overnight\n          },\n          times: {\n            isOvernightForced: bookingData.times?.isOvernightForced,\n            hasIndividualTimes: bookingData.times?.hasIndividualTimes\n          },\n          dateRange: bookingData.dateRange,\n          dateRangeType: bookingData.dateRangeType\n        });\n        \n        // Determine if overnight mode based ONLY on current service, not previous state\n        const currentServiceIsOvernight = bookingData.service?.is_overnight || false;\n        \n        debugLog('MBA66777: CRITICAL FIX - Overnight mode calculation:', {\n          serviceIsOvernight: bookingData.service?.is_overnight,\n          previousTimesIsOvernightForced: bookingData.times?.isOvernightForced,\n          calculatedCurrentServiceIsOvernight: currentServiceIsOvernight,\n          message: 'isOvernightForced now based ONLY on current service, not previous state'\n        });\n        \n        // Prepare initialTimes object with all necessary data\n        const initialTimes = {\n          ...bookingData.times,\n          // Always include dates for multiple-days selection\n          dates: bookingData.dates || [],\n          // Include occurrences if available\n          occurrences: bookingData.occurrences || [],\n          // Ensure hasIndividualTimes is preserved from bookingData.times, but reset if overnight service\n          hasIndividualTimes: currentServiceIsOvernight ? false : (bookingData.times?.hasIndividualTimes || false),\n          // CRITICAL FIX: isOvernightForced should ONLY depend on current service, not previous state\n          isOvernightForced: currentServiceIsOvernight\n        };\n        \n        const isOvernightMode = currentServiceIsOvernight;\n        \n        debugLog('MBA66777: Passing initialTimes to TimeSelectionCard:', {\n          hasIndividualTimes: initialTimes.hasIndividualTimes,\n          dateCount: initialTimes.dates?.length || 0,\n          isOvernightService: bookingData.service?.is_overnight,\n          isOvernightForced: bookingData.times?.isOvernightForced,\n          combinedOvernight: isOvernightMode\n        });\n        \n        return (\n          <TimeSelectionCard\n            onTimeSelect={handleTimeSelect}\n            initialTimes={initialTimes}\n            dateRange={bookingData.dateRange}\n            selectedService={{\n              ...bookingData.service,\n              is_overnight: isOvernightMode\n            }}\n            isOvernightForced={isOvernightMode}\n          />\n        );\n      case STEPS.REVIEW_AND_RATES.id:\n        return (\n          <ReviewAndRatesCard\n            bookingData={bookingData}\n            bookingId={bookingId}\n            onRatesUpdate={(updatedData) => {\n              debugLog('MBA2j3kbr9hve4: Rates updated:', updatedData);\n              setBookingData(prev => ({\n                ...prev,\n                occurrences: updatedData.occurrences,\n                cost_summary: updatedData.cost_summary\n              }));\n            }}\n            onTermsAgreed={setTermsAgreed}\n            onTosAgreementChange={setTermsAgreed}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  // Function to reset the modal state\n  const resetModal = () => {\n    debugLog('MBA2j3kbr9hve4: Resetting booking step modal state');\n    setCurrentStep(STEPS.SERVICES_AND_PETS.id);\n    setBookingData({\n      service: initialData.service || null,\n      pets: initialData.pets || [],\n      dates: initialData.dates || [],\n      bookingType: initialData.bookingType || 'one-time',\n      dateRangeType: initialData.dateRangeType || 'date-range',\n      times: initialData.times || {\n        startTime: '09:00',\n        endTime: '17:00',\n        isOvernightForced: false,\n        hasIndividualTimes: false\n      },\n      rates: initialData.rates || {},\n      dateSelectionData: null,\n      dateRange: null,\n      hasFetchedDates: false, // Reset the fetch flag to ensure dates are refetched\n    });\n    setError(null);\n    setIsLoading(false);\n    setTermsAgreed(false);\n    setShowTermsModal(false);\n  };\n\n  // Function to handle cancellation of the modal\n  const handleClose = () => {\n    debugLog('MBA66777: Closing booking step modal and resetting state');\n    // Reset the modal state\n    resetModal();\n    // Call the onClose function passed as a prop\n    onClose();\n  };\n\n  // Add cleanup effect to ensure clean state when unmounting\n  useEffect(() => {\n    return () => {\n      debugLog('MBA2j3kbr9hve4: BookingStepModal unmounting, cleaning up state');\n      // This is a cleanup function that will run when the component unmounts\n      // We don't need to do anything here, just logging for debugging\n    };\n  }, []);\n\n  const formatDatesForAPI = (dateState) => {\n    if (!dateState || !dateState.dates || dateState.dates.length === 0) {\n      return { dates: [] };\n    }\n\n    // Format the dates for the API using the proper UTC conversion\n    const formattedDates = dateState.dates.map(date => {\n      const dateString = date.toISOString().split('T')[0];\n      \n      // Get time data for this specific date or fall back to default\n      let timeData = dateState.times;\n      \n      // Check if we have individual day schedules\n      if (dateState.times.hasIndividualTimes && dateState.times[dateString]) {\n        timeData = dateState.times[dateString];\n      }\n      \n      // Format start and end times\n      const formattedStartTime = formatTimeObj(timeData.startTime);\n      const formattedEndTime = formatTimeObj(timeData.endTime);\n      \n      // Handle midnight (00:00) as end of current day, not start of next day\n      // This ensures proper duration calculation and prevents negative durations\n      let endDate = dateString;\n      const isMidnightEnd = formattedEndTime === \"00:00\";\n      const isTimeBeforeStart = compareTimesAsMinutes(timeData.endTime, timeData.startTime) < 0;\n      \n      // If end time is midnight (00:00) or earlier than start time, use the next day as the end date\n      if (isMidnightEnd || isTimeBeforeStart) {\n        // Calculate the next day\n        const nextDay = new Date(date);\n        nextDay.setDate(nextDay.getDate() + 1);\n        endDate = nextDay.toISOString().split('T')[0];\n        \n        debugLog(\"MBA8810: Using next day for end date due to midnight/early morning end time:\", {\n          date: dateString,\n          startTime: formattedStartTime,\n          endTime: formattedEndTime,\n          endDate: endDate,\n          isMidnightEnd,\n          isTimeBeforeStart\n        });\n      }\n      \n      return {\n        date: dateString,\n        start_time: formattedStartTime,\n        end_time: formattedEndTime,\n        end_date: endDate, // Always include end_date for proper backend processing\n        is_overnight: timeData.isOvernightForced || dateState.service?.is_overnight || false\n      };\n    });\n\n    return { dates: formattedDates };\n  };\n\n  const formatTimeObj = (timeObj) => {\n    const hours = timeObj.hours.toString().padStart(2, '0');\n    const minutes = timeObj.minutes.toString().padStart(2, '0');\n    return `${hours}:${minutes}`;\n  };\n  \n  // Helper to compare two time objects by converting to minutes\n  const compareTimesAsMinutes = (time1, time2) => {\n    const time1Minutes = (time1.hours * 60) + time1.minutes;\n    const time2Minutes = (time2.hours * 60) + time2.minutes;\n    return time1Minutes - time2Minutes;\n  };\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        animationType=\"fade\"\n        onRequestClose={handleClose}\n        transparent={true}\n      >\n        <View style={styles.modalOverlay}>\n          <SafeAreaView style={styles.modalContent}>\n            <View style={styles.stepIndicatorContainer}>\n              <StepProgressIndicator\n                steps={Object.values(STEPS).map(step => step.name)}\n                currentStep={currentStep}\n              />\n            </View>\n            <ScrollView style={styles.scrollContent} contentContainerStyle={styles.scrollContentContainer}>\n              <View style={styles.content}>\n                {isLoading ? (\n                  <View style={styles.loadingContainer}>\n                    <Text style={styles.loadingText}>Loading booking information...</Text>\n                  </View>\n                ) : (\n                  renderCurrentStep()\n                )}\n              </View>\n              {error && (\n                <Text style={styles.errorText}>{error}</Text>\n              )}\n            </ScrollView>\n            <View style={styles.footer}>\n              {currentStep === STEPS.SERVICES_AND_PETS.id ? (\n                // Step 1: [Cancel] [Next]\n                <>\n                  <TouchableOpacity\n                    style={styles.cancelButton}\n                    onPress={handleClose}\n                  >\n                    <Text style={styles.cancelButtonText}>Cancel</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={[\n                      styles.nextButton,\n                      (!canProceedToNextStep() || isLoading) && styles.disabledButton\n                    ]}\n                    onPress={handleNext}\n                    disabled={!canProceedToNextStep() || isLoading}\n                  >\n                    <Text style={[\n                      styles.nextButtonText,\n                      (!canProceedToNextStep() || isLoading) && styles.disabledButtonText\n                    ]}>\n                      Next\n                    </Text>\n                  </TouchableOpacity>\n                </>\n              ) : (\n                // Steps 2-4: [Back] [Cancel][Next/Confirm]\n                <>\n                  <TouchableOpacity\n                    style={[styles.backButton, isSmallScreen && styles.smallScreenButton]}\n                    onPress={handleBack}\n                  >\n                    <Text style={styles.backButtonText}>Back</Text>\n                  </TouchableOpacity>\n                  <View style={styles.spacer} />\n                  <TouchableOpacity\n                    style={[styles.cancelButtonSmall, isSmallScreen && styles.smallScreenButton]}\n                    onPress={handleClose}\n                  >\n                    <Text style={styles.cancelButtonText}>Cancel</Text>\n                  </TouchableOpacity>\n                  <View style={isSmallScreen ? styles.smallMargin : null} />\n                  <TouchableOpacity\n                    style={[\n                      styles.nextButtonSmall, \n                      isSmallScreen && styles.smallScreenButton,\n                      (!canProceedToNextStep() || isLoading) && styles.disabledButton\n                    ]}\n                    onPress={handleNext}\n                    disabled={!canProceedToNextStep() || isLoading}\n                  >\n                    {currentStep === STEPS.REVIEW_AND_RATES.id && isSmallScreen ? (\n                      <View style={styles.confirmButtonColumn}>\n                        <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                          Request\n                        </Text>\n                        <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                          Booking\n                        </Text>\n                      </View>\n                    ) : (\n                      <Text style={[styles.nextButtonText, (!canProceedToNextStep() || isLoading) && styles.disabledButtonText]}>\n                        {currentStep === STEPS.REVIEW_AND_RATES.id ? 'Request Booking' : 'Next'}\n                      </Text>\n                    )}\n                  </TouchableOpacity>\n                </>\n              )}\n            </View>\n          </SafeAreaView>\n        </View>\n      </Modal>\n\n      {/* Terms of Service Modal */}\n      <TosRequiredModal\n        visible={showTermsModal}\n        onClose={() => setShowTermsModal(false)}\n        actionType=\"booking\"\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n  },\n  modalContent: {\n    width: '95%',\n    maxWidth: Platform.OS === 'web' ? 600 : '100%',\n    maxHeight: '90%',\n    backgroundColor: theme.colors.background,\n    borderRadius: 12,\n    overflow: 'hidden',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  stepIndicatorContainer: {\n    width: '100%',\n    paddingVertical: 12,\n    backgroundColor: theme.colors.background,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.modernBorder,\n  },\n  scrollContent: {\n    flex: 1,\n  },\n  scrollContentContainer: {\n    flexGrow: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  footer: {\n    flexDirection: 'row',\n    padding: 16,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.modernBorder,\n  },\n  spacer: {\n    width: 16,\n    flexGrow: 1,\n  },\n  smallMargin: {\n    width: 8,\n  },\n  backButton: {\n    minWidth: 100,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  smallScreenButton: {\n    minWidth: 80,\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n  },\n  backButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  cancelButton: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonSmall: {\n    minWidth: 100,\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  nextButton: {\n    flex: 1,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  nextButtonSmall: {\n    minWidth: 100,\n    backgroundColor: theme.colors.mainColors.main,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.placeHolderText,\n  },\n  nextButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  disabledButtonText: {\n    color: theme.colors.surface,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  loadingText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stepContent: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  divider: {\n    height: 1,\n    backgroundColor: theme.colors.modernBorder,\n    marginVertical: 16,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n  },\n  confirmButtonColumn: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n});\n\nexport default BookingStepModal; ","import React, { useContext, useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { approveBooking, markBookingCompleted } from '../api/API';\nimport { formatDateTimeRangeFromUTC, convertTo24Hour } from '../utils/time_utils';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport moment from 'moment-timezone';\nimport BookingApprovalModal from './BookingApprovalModal';\nimport Toast from './Toast';\n\n// A simplified version of checkDSTChange that only relies on moment-timezone\nconst checkDSTChange = (startDate, startTime, endDate, endTime, timezone) => {\n  try {\n    // Create UTC moments for start and end time\n    const startMoment = moment.utc(`${startDate}T${startTime}:00Z`).tz(timezone);\n    const endMoment = moment.utc(`${endDate}T${endTime}:00Z`).tz(timezone);\n    \n    // Check if the offset from UTC (in minutes) is different\n    return startMoment.utcOffset() !== endMoment.utcOffset();\n  } catch (error) {\n    debugLog('MBA9876DST Error checking DST change:', error);\n    return false;\n  }\n};\n\nconst BookingMessageCard = ({ \n  type,  // 'request', 'approval', 'request_changes', or 'booking_confirmed'\n  displayType, // Optional override for the display title (e.g., 'booking_update')\n  data,\n  isFromMe,\n  onPress,\n  isProfessional,\n  onApproveSuccess,\n  onApproveError,\n  onEditDraft,\n  bookingStatus, // Added to know if booking is confirmed\n  hasChangeRequest, // Boolean to indicate if this approval has a pending change request\n  isNewestMessage = false, // Flag to indicate if this is the newest message for this booking\n  messageCreatedAt, // Timestamp of when the message was created\n  hasNewerApprovalRequests = false, // Flag to indicate if this booking_confirmed message has newer approval requests\n  isAfterConfirmation = false, // Flag to indicate if this approval message comes after a booking confirmation\n  onMarkCompletedSuccess, // Callback when booking is marked as completed successfully\n  onMarkCompletedError, // Callback when marking booking as completed fails\n  isBookingCompleted = false // Flag to indicate if the booking has been completed\n}) => {\n  const { timeSettings } = useContext(AuthContext);\n  const userTimezone = timeSettings?.timezone || 'US/Mountain';\n  const [approvalModalVisible, setApprovalModalVisible] = useState(false);\n  const [safeInitialData, setSafeInitialData] = useState(null);\n  const [showAllDates, setShowAllDates] = useState(false); // New state for expanded/collapsed dates\n  const [isMarkingCompleted, setIsMarkingCompleted] = useState(false); // State for marking completed process\n  const [toastVisible, setToastVisible] = useState(false); // State for toast visibility\n  const [toastMessage, setToastMessage] = useState(''); // State for toast message\n  const [toastType, setToastType] = useState('error'); // State for toast type\n  \n  // Create safe data on component load\n  useEffect(() => {\n    // Ensure we have basic rate data for the initial load\n    const preparedData = {\n      ...data,\n      occurrences: data.occurrences?.map(occ => ({\n        ...occ,\n        rates: occ.rates || {\n          base_rate: 0,\n          additional_animal_rate: 0,\n          applies_after: 1,\n          holiday_rate: 0,\n          holiday_days: 0,\n          additional_rates: []\n        }\n      }))\n    };\n    setSafeInitialData(preparedData);\n  }, [data]);\n\n  const isConfirmed = bookingStatus === 'Confirmed';\n  const isChangeRequest = type === 'request_changes';\n  const isBookingConfirmed = type === 'booking_confirmed';\n  const shouldShowAsApproval = type === 'approval' || isChangeRequest;\n  \n  // Special flag for change requests that are for a confirmed booking\n  const isChangeRequestForConfirmedBooking = isChangeRequest && isConfirmed;\n  \n  // Determine if we should show the overlay based on message type and recency\n  // - Show \"Booking Completed\" if the booking is completed\n  // - Show \"Booking Confirmed\" on all earlier messages for confirmed bookings EXCEPT\n  //   for approval messages that come after a booking confirmation\n  // - Show \"Changes Requested\" on approval messages if there's a change request AND this isn't the newest message\n  // - Show \"Booking Updated\" on change request messages if they're not the newest message and there's a newer approval\n  // - Show \"Booking Updated\" on the booking_confirmed message if there's a newer approval request \n  //   for the same booking ID (NOT on the approval request itself)\n  // - Show \"Booking Updated\" on booking update messages if they have newer request changes\n  const shouldShowOverlay = \n    // Show \"Booking Completed\" if the booking is completed\n    isBookingCompleted ||\n    // Show \"Booking Confirmed\" on earlier messages, but NOT on approval messages that come after a confirmation\n    // AND not on request_changes messages that are the newest message\n    (isConfirmed && !isBookingConfirmed && type !== 'approval' && !isAfterConfirmation && !(isChangeRequest && isNewestMessage)) || \n    // Show \"Changes Requested\" on approval messages with pending changes that aren't newest\n    (type === 'approval' && hasChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on change request messages that aren't newest\n    (isChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on booking_confirmed messages with newer approval requests\n    (isBookingConfirmed && hasNewerApprovalRequests) ||\n    // Show \"Booking Updated\" on booking update messages (displayType === 'booking_update') with newer request changes\n    (displayType === 'booking_update' && hasChangeRequest && !isNewestMessage) ||\n    // Show \"Booking Updated\" on approval messages that come after confirmation but aren't the newest message\n    (type === 'approval' && isAfterConfirmation && !isNewestMessage);\n  \n  // What overlay text to show\n  const getOverlayText = () => {\n    // For completed bookings, show \"Booking Completed\"\n    if (isBookingCompleted) return 'Booking Completed';\n    \n    // For booking_confirmed messages with newer approval requests, show \"Booking Updated\"\n    if (isBookingConfirmed && hasNewerApprovalRequests) return 'Booking Updated';\n    \n    // For booking update messages with newer request changes, show \"Booking Updated\"\n    if (displayType === 'booking_update' && hasChangeRequest && !isNewestMessage) return 'Booking Updated';\n    \n    // For approval messages that come after a confirmation but aren't newest, show \"Booking Updated\"\n    if (type === 'approval' && isAfterConfirmation && !isNewestMessage) return 'Booking Updated';\n    \n    // For approval messages that come after a confirmation and are newest, don't show an overlay\n    if (type === 'approval' && isAfterConfirmation && isNewestMessage) return '';\n    \n    // For request changes messages that are the newest, don't show an overlay\n    if (isChangeRequest && isNewestMessage) return '';\n    \n    // For other messages when booking is confirmed, show \"Booking Confirmed\"\n    if (isConfirmed && !isBookingConfirmed && !isAfterConfirmation && !(isChangeRequest && isNewestMessage)) return 'Booking Confirmed';\n    \n    // For approval messages with change requests that aren't newest\n    if (type === 'approval' && hasChangeRequest && !isNewestMessage) {\n      return 'Changes Requested';\n    }\n    \n    // For change request messages that aren't newest\n    if (isChangeRequest && !isNewestMessage) {\n      return 'Booking Updated';\n    }\n    \n    return '';\n  };\n  \n  const overlayText = getOverlayText();\n  \n  // Log message state for debugging\n  debugLog('MBA4321: Message state for booking', data.booking_id, {\n    type,\n    displayType,\n    isFromMe,\n    isProfessional,\n    bookingStatus,\n    hasChangeRequest,\n    isNewestMessage,\n    isAfterConfirmation,\n    hasNewerApprovalRequests,\n    shouldShowOverlay,\n    overlayText,\n    messageCreatedAt: messageCreatedAt || 'N/A',\n    // Add detailed logic checks to help debug overlay decisions\n    overlayLogicChecks: {\n      isConfirmedButNotConfirmationMessage: isConfirmed && !isBookingConfirmed,\n      isChangeRequestAndNewestMessage: isChangeRequest && isNewestMessage,\n      isApprovalWithChangeRequest: type === 'approval' && hasChangeRequest && !isNewestMessage,\n      isBookingConfirmedWithNewerApprovals: isBookingConfirmed && hasNewerApprovalRequests\n    }\n  });\n\n  const getIcon = () => {\n    switch (type) {\n      case 'request':\n        return 'calendar-plus';\n      case 'approval':\n        return 'calendar-check';\n      case 'request_changes':\n        return 'calendar-edit';\n      case 'booking_confirmed':\n        return 'check-circle-outline';\n      default:\n        return 'calendar';\n    }\n  };\n\n  const getTitle = () => {\n    // If a display type is provided, use it to override the title\n    if (displayType === 'booking_update') {\n      return 'Booking Update';\n    }\n    \n    // For change requests that come after a booking update, adjust the display\n    if (type === 'request_changes' && isAfterConfirmation) {\n      return 'Update Change Request';\n    }\n    \n    switch (type) {\n      case 'request':\n        return 'Booking Request';\n      case 'approval':\n        return 'Approval Request';\n      case 'request_changes':\n        return 'Request Changes';\n      case 'booking_confirmed':\n        return 'Booking Confirmed';\n      default:\n        return 'Booking';\n    }\n  };\n\n  const getCardStyle = () => {\n    const baseStyle = [\n      styles.card,\n      isFromMe ? styles.sentCard : styles.receivedCard\n    ];\n\n    if (shouldShowAsApproval) {\n      baseStyle.push(styles.approvalCard);\n    }\n    \n    if (isBookingConfirmed) {\n      baseStyle.push(styles.confirmedCard);\n    }\n\n    return baseStyle;\n  };\n\n  const getHeaderStyle = () => {\n    if (isBookingConfirmed) {\n      return [styles.header, styles.confirmedHeader];\n    }\n    \n    return [\n      styles.header,\n      shouldShowAsApproval ? styles.approvalHeader : styles.requestHeader\n    ];\n  };\n\n  const handleApprove = async () => {\n    try {\n      const response = await approveBooking(data.booking_id);\n      \n      // Call the success callback if provided\n      if (onApproveSuccess) {\n        onApproveSuccess(response);\n      }\n    } catch (error) {\n      console.error('Error approving booking from message card:', error);\n      // Call the error callback if provided\n      if (onApproveError) {\n        onApproveError(error.response?.data?.error || 'Failed to approve booking');\n      }\n    }\n  };\n\n  const handleOpenApprovalModal = () => {\n    // Process initial data for any message type\n    if (!safeInitialData) {\n      // If safeInitialData isn't ready yet, create it now\n      const tempData = {\n        ...data,\n        occurrences: data.occurrences?.map(occ => ({\n          ...occ,\n          rates: occ.rates || {\n            base_rate: 0,\n            additional_animal_rate: 0,\n            applies_after: 1,\n            holiday_rate: 0,\n            holiday_days: 0,\n            additional_rates: []\n          }\n        })) || []\n      };\n      setSafeInitialData(tempData);\n    }\n    \n    debugLog('MBA9876 Opening approval modal with booking ID:', data.booking_id);\n    setApprovalModalVisible(true);\n  };\n\n  const handleApprovalSuccess = (response) => {\n    if (onApproveSuccess) {\n      onApproveSuccess(response);\n    }\n  };\n\n  const handleApprovalError = (error) => {\n    if (onApproveError) {\n      onApproveError(error);\n    }\n  };\n\n  const handleRequestChangesSuccess = (response) => {\n    debugLog('MBA9999 Change request submitted successfully:', response);\n    // Pass along the response to the parent component\n    if (onApproveSuccess) {\n      onApproveSuccess(response);\n    }\n  };\n\n  const handleRequestChangesError = (error) => {\n    debugLog('MBA9999 Error submitting change request:', error);\n    // Pass along the error to the parent component\n    if (onApproveError) {\n      onApproveError(error);\n    }\n  };\n\n  // Format a date/time range for an occurrence using the time_utils function\n  const formatOccurrenceDateRange = (occ) => {\n    // Check if we have direct UTC dates and times\n    if (occ.start_date && occ.end_date && occ.start_time && occ.end_time) {\n      // Format the date range\n      const formattedRange = formatDateTimeRangeFromUTC({\n        startDate: occ.start_date,\n        startTime: occ.start_time,\n        endDate: occ.end_date,\n        endTime: occ.end_time,\n        userTimezone: userTimezone,\n        includeTimes: true,\n        includeTimezone: true\n      });\n      \n      // Check for DST change between start and end times\n      const hasDSTChange = checkDSTChange(\n        occ.start_date,\n        occ.start_time,\n        occ.end_date,\n        occ.end_time,\n        userTimezone\n      );\n      \n      // Add DST change message if needed\n      if (hasDSTChange && !occ.dst_message) {\n        debugLog('MBA9876DST Detected DST change for occurrence:', {\n          start: `${occ.start_date} ${occ.start_time}`,\n          end: `${occ.end_date} ${occ.end_time}`,\n          timezone: userTimezone\n        });\n        \n        // Add DST message to the occurrence\n        occ.dst_message = \"Elapsed time may be different than expected due to Daylight Savings Time.\";\n      }\n      \n      return formattedRange;\n    }\n    \n    // Fallback to pre-formatted dates if available\n    if (occ.formatted_start && occ.formatted_end) {\n      return `${occ.formatted_start} to ${occ.formatted_end}`;\n    }\n    \n    // Last resort fallback\n    return 'Date information unavailable';\n  };\n\n  // Calculate duration for the occurrence if not provided\n  const getOccurrenceDuration = (occ) => {\n    if (occ.duration) {\n      return occ.duration;\n    }\n    \n    // Try to calculate the duration if we have the necessary data\n    if (occ.start_date && occ.end_date && occ.start_time && occ.end_time) {\n      try {\n        // Create moment objects for start and end times\n        const startMoment = moment.utc(`${occ.start_date}T${occ.start_time}:00Z`);\n        const endMoment = moment.utc(`${occ.end_date}T${occ.end_time}:00Z`);\n        \n        // Calculate the difference in hours and days\n        const hoursDiff = endMoment.diff(startMoment, 'hours');\n        const daysDiff = endMoment.diff(startMoment, 'days');\n        \n        // Format the duration nicely\n        if (daysDiff > 0) {\n          return `${daysDiff} ${daysDiff === 1 ? 'day' : 'days'}, ${hoursDiff % 24} ${hoursDiff % 24 === 1 ? 'hour' : 'hours'}`;\n        } else {\n          return `${hoursDiff} ${hoursDiff === 1 ? 'hour' : 'hours'}`;\n        }\n      } catch (error) {\n        debugLog('MBA9876DST Error calculating duration:', error);\n      }\n    }\n    \n    return 'N/A';\n  };\n\n  // Get the cost value based on user type (professional vs client)\n  const getCostValue = () => {\n    // First check if the cost_summary object exists\n    if (data.cost_summary) {\n      if (isProfessional) {\n        // Display pro payout for professionals\n        const amount = data.cost_summary.total_sitter_payout || '0.00';\n        return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n      } else {\n        // Display client cost for clients\n        const amount = data.cost_summary.total_client_cost || '0.00';\n        return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n      }\n    }\n    \n    // Fallback to direct properties (for backward compatibility)\n    if (isProfessional) {\n      const amount = data.total_sitter_payout || '0.00';\n      return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n    } else {\n      const amount = data.total_owner_cost || '0.00';\n      return typeof amount === 'number' ? amount.toFixed(2) : parseFloat(amount).toFixed(2);\n    }\n  };\n\n  // Function to toggle dates expansion\n  const toggleDatesExpansion = () => {\n    setShowAllDates(!showAllDates);\n  };\n\n  // Handle marking booking as completed\n  const handleMarkCompleted = async () => {\n    try {\n      setIsMarkingCompleted(true);\n      debugLog('MBA8675309: Marking booking as completed:', data.booking_id);\n      \n      const response = await markBookingCompleted(data.booking_id);\n      \n      debugLog('MBA8675309: Booking marked as completed successfully:', response);\n      \n      // Call the success callback if provided\n      if (onMarkCompletedSuccess) {\n        onMarkCompletedSuccess(response);\n      }\n    } catch (error) {\n      debugLog('MBA8675309: Error marking booking as completed:', error);\n      \n      // Extract error message from response\n      let errorMessage = 'Failed to mark booking as completed';\n      if (error.response?.data?.error) {\n        errorMessage = error.response.data.error;\n      }\n      \n      // Show toast with error message\n      setToastMessage(errorMessage);\n      setToastType('error');\n      setToastVisible(true);\n      \n      // Call the error callback if provided\n      if (onMarkCompletedError) {\n        onMarkCompletedError(error);\n      }\n    } finally {\n      setIsMarkingCompleted(false);\n    }\n  };\n\n  // Determine if we need to show the \"Show More\" button\n  const occurrences = data.occurrences || [];\n  const hasMoreDates = occurrences.length > 3;\n  \n  // Get visible occurrences based on expanded state\n  const visibleOccurrences = showAllDates ? occurrences : occurrences.slice(0, 3);\n  \n  // Count how many more dates are hidden\n  const hiddenDatesCount = Math.max(0, occurrences.length - 3);\n\n  return (\n    <View style={getCardStyle()}>\n      {/* Green bar on left or right side based on sender */}\n      {shouldShowAsApproval && (\n        <View style={[\n          styles.colorBar, \n          isFromMe ? styles.colorBarLeft : styles.colorBarRight\n        ]} />\n      )}\n      \n      {/* Green border for confirmation message */}\n      {isBookingConfirmed && (\n        <View style={styles.confirmationBorder} />\n      )}\n      \n      <View style={styles.cardContent}>\n        <View style={getHeaderStyle()}>\n          <MaterialCommunityIcons \n            name={getIcon()} \n            size={24} \n            color={isChangeRequest ? theme.colors.warning : \n                   isBookingConfirmed ? theme.colors.success : theme.colors.primary}\n          />\n          <Text style={[\n            styles.title,\n            isChangeRequest ? styles.changeRequestTitle : \n            isBookingConfirmed ? styles.confirmedTitle :\n            shouldShowAsApproval ? styles.approvalTitle : styles.requestTitle\n          ]}>\n            {getTitle()}\n          </Text>\n        </View>\n\n        <View style={styles.content}>\n          {/* Booking confirmation message specific content */}\n          {isBookingConfirmed ? (\n            <>\n              {/* Card content is clickable to view details */}\n              <TouchableOpacity \n                style={styles.confirmationContainerClickable}\n                onPress={handleOpenApprovalModal}\n                activeOpacity={0.7}\n              >\n                <View style={styles.confirmationContainer}>\n                  <Text style={styles.confirmationText}>\n                    This booking has been confirmed and is ready to go!\n                  </Text>\n                </View>\n                \n                <View style={styles.infoSection}>\n                  <View style={styles.row}>\n                    <Text style={styles.label}>Booking ID:</Text>\n                    <Text style={styles.value}>{data.booking_id || 'N/A'}</Text>\n                  </View>\n                  \n                  <View style={styles.row}>\n                    <Text style={styles.label}>Service:</Text>\n                    <Text style={styles.value}>{data.service_type || 'N/A'}</Text>\n                  </View>\n\n                  <View style={styles.row}>\n                    <Text style={styles.label}>{isProfessional ? 'Your Payout:' : 'Total Cost:'}</Text>\n                    <Text style={styles.value}>\n                      ${isProfessional ? \n                        (data.cost_summary?.total_sitter_payout || '0.00') : \n                        (data.cost_summary?.total_client_cost || '0.00')}\n                    </Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n              \n              {/* Buttons are separate from the clickable card content */}\n              <View style={[styles.buttonContainer, isProfessional ? { flexDirection: 'column', gap: 8 } : {}]}>\n                {/* View Details button - always enabled */}\n                <TouchableOpacity\n                  style={[styles.detailsButton, { flex: 1 }]}\n                  onPress={handleOpenApprovalModal}\n                >\n                  <Text style={styles.detailsButtonText}>View Details</Text>\n                </TouchableOpacity>\n                \n                {/* Edit Details button for professionals - disabled if booking is completed */}\n                {isProfessional && onEditDraft && (\n                  <TouchableOpacity \n                    style={[\n                      styles.editButton, \n                      { flex: 1 }\n                    ]}\n                    onPress={onEditDraft}\n                    disabled={isBookingCompleted}\n                  >\n                    <Text style={[\n                      styles.editButtonText\n                    ]}>\n                      Edit Details\n                    </Text>\n                  </TouchableOpacity>\n                )}\n                \n                {/* Mark as Completed button for professionals - disabled if booking is completed */}\n                {isProfessional && isBookingConfirmed && isConfirmed && (\n                  <TouchableOpacity \n                    style={[\n                      styles.completeButton, \n                      { flex: 1 },\n                      isMarkingCompleted ? styles.disabledButton : {}\n                    ]}\n                    onPress={handleMarkCompleted}\n                    disabled={isBookingCompleted || isMarkingCompleted}\n                  >\n                    <Text style={[\n                      styles.completeButtonText,\n                      isMarkingCompleted ? styles.disabledButtonText : {}\n                    ]}>\n                      {isMarkingCompleted ? 'Marking...' : 'Mark as Completed'}\n                    </Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </>\n          ) : (\n            /* Original content for other message types */\n            <>\n              <View style={styles.infoSection}>\n                <View style={styles.row}>\n                  <Text style={styles.label}>Booking ID:</Text>\n                  <Text style={styles.value}>{data.booking_id || 'N/A'}</Text>\n                </View>\n                <View style={styles.row}>\n                  <Text style={styles.label}>Service:</Text>\n                  <Text style={styles.value}>{data.service_type || 'N/A'}</Text>\n                </View>\n\n                <View style={styles.row}>\n                  <Text style={styles.label}>{isProfessional ? 'Your Payout:' : 'Total Cost:'}</Text>\n                  <Text style={styles.value}>\n                    ${getCostValue()}\n                  </Text>\n                </View>\n              </View>\n\n              <View style={styles.datesSection}>\n                {type !== 'request_changes' ? (\n                  <View style={styles.datesSectionHeader}>\n                    <Text style={styles.label}>Dates:</Text>\n                    {hasMoreDates && (\n                      <Text style={styles.datesCount}>({occurrences.length} total)</Text>\n                    )}\n                  </View>\n                ) : (\n                  null\n                )}\n                {visibleOccurrences.map((occ, index) => {\n                  const isLastVisibleItem = index === visibleOccurrences.length - 1;\n                  const showBottomBorder = !(!showAllDates && isLastVisibleItem && hasMoreDates);\n                  \n                  return (\n                    <View \n                      key={index} \n                      style={[\n                        styles.occurrenceContainer,\n                        showBottomBorder ? null : { borderBottomWidth: 0 }\n                      ]}\n                    >\n                      <View style={styles.occurrenceItem}>\n                        <Text style={styles.dateTimeText}>\n                          {formatOccurrenceDateRange(occ)}\n                        </Text>\n                        <Text style={styles.durationText}>\n                          Event Duration: {getOccurrenceDuration(occ)} ({occ.timezone || userTimezone.split('/')[1] || userTimezone})\n                        </Text>\n                        {occ.dst_message ? (\n                          <Text style={styles.dstMessage}>\n                            {occ.dst_message}\n                          </Text>\n                        ) : null}\n                      </View>\n                    </View>\n                  );\n                })}\n\n                {/* Show more/less dates button */}\n                {hasMoreDates && (\n                  <TouchableOpacity \n                    style={styles.showMoreButton} \n                    onPress={toggleDatesExpansion}\n                  >\n                    <Text style={styles.showMoreText}>\n                      {showAllDates ? \"Show Fewer Dates\" : `Show ${hiddenDatesCount} More Date${hiddenDatesCount !== 1 ? 's' : ''}`}\n                    </Text>\n                    <MaterialCommunityIcons \n                      name={showAllDates ? \"chevron-up\" : \"chevron-down\"} \n                      size={18} \n                      color={theme.colors.primary} \n                    />\n                  </TouchableOpacity>\n                )}\n              </View>\n\n              {isChangeRequest && (\n                <View style={styles.changeMessageContainer}>\n                  <Text style={styles.changeMessageLabel}>Change Request Message:</Text>\n                  <Text style={styles.changeMessageText}>{data.content || 'No details provided'}</Text>\n                </View>\n              )}\n\n              <View style={styles.buttonContainer}>\n                {/* Review Details button - visible to both users */}\n                <TouchableOpacity \n                  style={[\n                    styles.detailsButton,\n                    // Only disable the button if it's a regular message with the Booking Confirmed overlay\n                    // Don't disable for isAfterConfirmation messages (booking updates) or displayType === 'booking_update'\n                    (isConfirmed && !isBookingConfirmed && !isAfterConfirmation && displayType !== 'booking_update') && styles.disabledButton\n                  ]}\n                  onPress={handleOpenApprovalModal}\n                  disabled={isConfirmed && !isBookingConfirmed && !isAfterConfirmation && displayType !== 'booking_update'}\n                >\n                  <Text style={styles.detailsButtonText}>\n                    {isBookingConfirmed ? \"View Details\" : \"Review Details\"}\n                  </Text>\n                </TouchableOpacity>\n                \n                {/* Approve button - only visible to clients for approval requests */}\n                {type === 'approval' && !isProfessional && !isConfirmed && !hasChangeRequest && (\n                  <TouchableOpacity \n                    style={styles.approveButton}\n                    onPress={handleApprove}\n                  >\n                    <Text style={styles.approveButtonText}>Approve</Text>\n                  </TouchableOpacity>\n                )}\n                \n                {/* Edit button - visible to pros for booking requests */}\n                {type === 'request' && isProfessional && onEditDraft && !isConfirmed && (\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={onEditDraft}\n                  >\n                    <Text style={styles.editButtonText}>Edit Draft</Text>\n                  </TouchableOpacity>\n                )}\n                \n                {/* Edit Details button - visible to pros for change requests */}\n                {isChangeRequest && isProfessional && onEditDraft && (\n                  <TouchableOpacity \n                    style={styles.editButton}\n                    onPress={onEditDraft}\n                  >\n                    <Text style={styles.editButtonText}>Edit Details</Text>\n                  </TouchableOpacity>\n                )}\n              </View>\n            </>\n          )}\n        </View>\n      </View>\n\n      {/* Status Overlay - shown on confirmed bookings or approval messages with changes requested */}\n      {shouldShowOverlay && (\n        <View style={styles.statusOverlay}>\n          <Text style={styles.statusText}>\n            {overlayText}\n          </Text>\n        </View>\n      )}\n\n      {/* Approval Modal */}\n      <BookingApprovalModal\n        visible={approvalModalVisible}\n        onClose={() => setApprovalModalVisible(false)}\n        bookingId={data.booking_id}\n        onApproveSuccess={handleApprovalSuccess}\n        onApproveError={handleApprovalError}\n        onRequestChangesSuccess={handleRequestChangesSuccess}\n        onRequestChangesError={handleRequestChangesError}\n        initialData={safeInitialData}\n        isProfessional={isProfessional}\n        // Only set read-only mode for confirmed messages that aren't booking updates\n        isReadOnly={(isConfirmed || isBookingConfirmed) && displayType !== 'booking_update' && !isAfterConfirmation}\n        // Only hide buttons for confirmed messages that aren't booking updates\n        hideButtons={(isConfirmed || isBookingConfirmed) && displayType !== 'booking_update' && !isAfterConfirmation}\n        modalTitle={\n          displayType === 'booking_update' ? \"Booking Update\" :\n          isAfterConfirmation ? \"Booking Update\" :\n          isBookingConfirmed || isConfirmed ? \"Booking Details\" : \n          \"Booking Approval Request\"\n        }\n      />\n\n      {/* Toast component for error messages */}\n      <Toast \n        visible={toastVisible}\n        message={toastMessage}\n        type={toastType}\n        onDismiss={() => setToastVisible(false)}\n        duration={7000}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 0, // Removed padding here as it's now on cardContent\n    margin: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    maxWidth: '80%',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    overflow: 'hidden', // To ensure the green bar doesn't overflow\n    position: 'relative', // To position the green bar\n  },\n  sentCard: {\n    alignSelf: 'flex-end',\n    marginLeft: '20%',\n  },\n  receivedCard: {\n    alignSelf: 'flex-start',\n    marginRight: '20%',\n  },\n  approvalCard: {\n    borderColor: theme.colors.border, // Changed to regular border color\n    borderWidth: 1,\n  },\n  confirmedCard: {\n    borderColor: theme.colors.success,\n    borderWidth: 2,\n  },\n  colorBar: {\n    width: 4, // Width of the green vertical bar\n    backgroundColor: theme.colors.primary, // Green color\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n  colorBarLeft: {\n    left: 0,\n  },\n  colorBarRight: {\n    right: 0,\n  },\n  cardContent: {\n    padding: 12, // Moved padding here from card\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    gap: 8,\n  },\n  requestHeader: {\n    borderBottomColor: theme.colors.border + '40',\n  },\n  approvalHeader: {\n    borderBottomColor: theme.colors.border + '40',\n  },\n  confirmedHeader: {\n    borderBottomColor: theme.colors.success,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  requestTitle: {\n    color: theme.colors.primary,\n  },\n  approvalTitle: {\n    color: theme.colors.primary, // Keep the approval request text the same color\n  },\n  changeRequestTitle: {\n    color: theme.colors.warning, // Orange color for change requests\n  },\n  content: {\n    gap: 8,\n  },\n  infoSection: {\n    gap: 4,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border + '40',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n    minWidth: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  value: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  datesSection: {\n    gap: 4,\n  },\n  datesSectionHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  datesCount: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  occurrenceContainer: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border + '40',\n    paddingBottom: 8,\n    marginBottom: 4,\n  },\n  occurrenceItem: {\n    gap: 2,\n    marginLeft: 4,\n  },\n  dateTimeText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontStyle: 'italic', // Italicized date text\n  },\n  durationText: {\n    fontSize: 14,\n    color: theme.colors.placeHolderText, // Changed to placeholder text color\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dstMessage: {\n    fontSize: 12,\n    color: theme.colors.error,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8,\n    gap: 8,\n  },\n  detailsButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary, // Changed to primary color\n  },\n  detailsButtonText: {\n    color: 'white', // Changed text color to white for better contrast\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  approveButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  approveButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  editButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  editButtonText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    backgroundColor: theme.colors.border,\n    opacity: 0.6,\n  },\n  disabledButtonText: {\n    color: theme.colors.placeHolderText,\n  },\n  statusOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.4)',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n  },\n  statusText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    padding: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.6)',\n    borderRadius: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  changeMessageContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 8,\n    marginTop: 4,\n    marginBottom: 4,\n    borderLeftWidth: 3,\n    borderLeftColor: theme.colors.warning,\n  },\n  changeMessageLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  changeMessageText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    // fontStyle: 'italic',\n  },\n  showMoreButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 8,\n    marginTop: 8,\n    marginBottom: 4,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.primary + '40',\n    paddingHorizontal: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 1,\n    elevation: 1,\n  },\n  showMoreText: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    marginRight: 5,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  confirmationContainerClickable: {\n    flex: 1,\n    width: '100%',\n    borderRadius: 8,\n  },\n  confirmationContainer: {\n    backgroundColor: theme.colors.success + '15', // Light green background\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n  },\n  confirmationText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  confirmedTitle: {\n    color: theme.colors.success,\n  },\n  confirmationBorder: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    height: 4,\n    backgroundColor: theme.colors.success,\n  },\n  completeButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 8,\n    alignItems: 'center',\n    backgroundColor: theme.colors.success,\n    borderWidth: 1,\n    borderColor: theme.colors.success,\n  },\n  completeButtonText: {\n    color: 'black',\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default BookingMessageCard; ","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { Modal, Portal, Button } from 'react-native-paper';\nimport { theme } from '../styles/theme';\n\nconst DraftConfirmationModal = ({ visible, onClose, onContinueExisting, onCreateNew }) => {\n  return (\n    <Portal>\n      <Modal\n        visible={visible}\n        onDismiss={onClose}\n        contentContainerStyle={styles.modalContainer}\n      >\n        <View style={styles.content}>\n          <Text style={styles.title}>Existing Draft Found</Text>\n          <Text style={styles.description}>\n            Would you like to continue with the existing draft or start a new one?\n          </Text>\n          <View style={styles.buttonContainer}>\n            <Button\n              mode=\"outlined\"\n              onPress={onCreateNew}\n              style={styles.button}\n              textColor={theme.colors.error}\n            >\n              Create New\n            </Button>\n            <Button\n              mode=\"contained\"\n              onPress={onContinueExisting}\n              style={styles.button}\n            >\n              Continue Existing\n            </Button>\n          </View>\n        </View>\n      </Modal>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    padding: 20,\n    margin: 20,\n    borderRadius: 8,\n    maxWidth: 500,\n    alignSelf: 'center',\n  },\n  content: {\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 24,\n    textAlign: 'center',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    gap: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n\nexport default DraftConfirmationModal; ","import { useEffect, useCallback, useState, useRef } from 'react';\nimport websocketManager from '../utils/websocket';\nimport { getStorage, debugLog } from '../context/AuthContext';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\n\n/**\n * Custom hook to use WebSocket in React components\n * @param {string} messageType - Type of messages to subscribe to\n * @param {function} callback - Callback to handle received messages\n * @param {object} options - Additional options\n * @returns {object} WebSocket state and methods\n */\nconst useWebSocket = (messageType, callback, options = {}) => {\n  const { disabled = false, handlerId = Math.random().toString(36).substr(2, 9) } = options;\n  const [isConnected, setIsConnected] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const statusUpdateTimeRef = useRef(Date.now());\n  const handlerRegisteredRef = useRef(false);\n  const failedAttemptsRef = useRef(0);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    if (disabled) return;\n\n    debugLog(`MBA3210: useWebSocket hook initializing for ${messageType}, handler ${handlerId}`);\n    let unregisterHandlers = [];\n    \n    const initialize = async () => {\n      try {\n        const token = await getStorage('userToken');\n        if (!token) {\n          debugLog('MBA3210: No token available for WebSocket connection');\n          return;\n        }\n        \n        // Initialize WebSocket connection\n        websocketManager.init(token);\n        \n        // Register handlers\n        if (messageType && !handlerRegisteredRef.current) {\n          // Register for specific message type\n          const unregister = websocketManager.registerHandler(\n            messageType, \n            callback, \n            `${handlerId}-${messageType}`\n          );\n          unregisterHandlers.push(unregister);\n          handlerRegisteredRef.current = true;\n          debugLog(`MBA3210: Registered handler for ${messageType}`);\n        }\n        \n        // Always register for connection status updates\n        const unregisterConn = websocketManager.registerHandler(\n          'connection',\n          (data) => {\n            const prevStatus = connectionStatus;\n            const prevConnected = isConnected;\n            statusUpdateTimeRef.current = Date.now();\n            \n            if (data.status === 'connected') {\n              debugLog('MBA3210: Setting connection status to connected');\n              setIsConnected(true);\n              setConnectionStatus('connected');\n              failedAttemptsRef.current = 0; // Reset failed attempts counter\n            } else {\n              debugLog('MBA3210: Setting connection status to disconnected');\n              setIsConnected(false);\n              setConnectionStatus('disconnected');\n            }\n            \n            debugLog(`MBA3210: Connection status changed in hook: ${prevStatus} -> ${data.status}`);\n            debugLog(`MBA3210: isConnected changed in hook: ${prevConnected} -> ${data.status === 'connected'}`);\n          },\n          `${handlerId}-connection`\n        );\n        unregisterHandlers.push(unregisterConn);\n        debugLog(`MBA3210: Registered connection status handler`);\n        \n        // Always register for user status updates (needed across components for online indicators)\n        const unregisterUserStatus = websocketManager.registerHandler(\n          'user_status_update',\n          (data) => {\n            // Call the callback if we're listening for user_status_update messages,\n            // or if the callback is meant to handle all message types\n            if (messageType === 'user_status_update' || messageType === '*') {\n              callback(data);\n            }\n            \n            debugLog(`MBA3210: Received user status update for user ${data.user_id}: ${data.is_online ? 'online' : 'offline'}`);\n          },\n          `${handlerId}-user_status_update`\n        );\n        unregisterHandlers.push(unregisterUserStatus);\n        debugLog(`MBA3210: Registered user status update handler`);\n        \n        // Check initial socket state\n        if (websocketManager.isConnected) {\n          debugLog('MBA3210: WebSocket manager reports connected on init, updating state');\n          setIsConnected(true);\n          setConnectionStatus('connected');\n        }\n        \n      } catch (error) {\n        debugLog(`MBA3210: Error initializing WebSocket in hook: ${error.message}`);\n      }\n    };\n    \n    initialize();\n    \n    // Check connection every second for the first 5 seconds\n    const initialConnectionCheck = setInterval(() => {\n      if (websocketManager.isConnected) {\n        debugLog('MBA3210: Initial connection check: WebSocket is connected');\n        setIsConnected(true);\n        setConnectionStatus('connected');\n        clearInterval(initialConnectionCheck);\n      } else {\n        debugLog('MBA3210: Initial connection check: WebSocket not connected yet');\n      }\n    }, 1000);\n    \n    // Clear the interval after 5 seconds if it hasn't been cleared already\n    const initialCheckTimeout = setTimeout(() => {\n      clearInterval(initialConnectionCheck);\n    }, 5000);\n    \n    // Cleanup handlers on unmount\n    return () => {\n      debugLog(`MBA3210: useWebSocket hook cleaning up for ${messageType}, handler ${handlerId}`);\n      unregisterHandlers.forEach(unregister => unregister());\n      clearInterval(initialConnectionCheck);\n      clearTimeout(initialCheckTimeout);\n      \n      handlerRegisteredRef.current = false;\n      \n      // We no longer disconnect WebSocket on unmount\n      // This allows the connection to persist when navigating between screens\n    };\n  }, [disabled, messageType, callback, handlerId]);\n  \n  // Add periodic check for connection status\n  useEffect(() => {\n    if (disabled) return;\n    \n    const checkStatus = setInterval(() => {\n      const now = Date.now();\n      const lastUpdate = statusUpdateTimeRef.current;\n      const secondsSinceUpdate = (now - lastUpdate) / 1000;\n      \n      // If it's been more than 30 seconds since we got a status update, check connection manually\n      if (secondsSinceUpdate > 30) {\n        debugLog(`MBA3210: [MY CONNECTION] No updates on MY OWN connection in ${secondsSinceUpdate.toFixed(0)} seconds, verifying status`);\n        \n        // Check actual connection state from the WebSocket manager\n        const actuallyConnected = websocketManager.isConnected;\n        \n        if (actuallyConnected !== isConnected) {\n          debugLog(`MBA3210: [MY CONNECTION] State mismatch detected - WebSocket manager: ${actuallyConnected}, hook state: ${isConnected}`);\n          \n          // Update our state to match reality\n          setIsConnected(actuallyConnected);\n          setConnectionStatus(actuallyConnected ? 'connected' : 'disconnected');\n        }\n        \n        // Try to send heartbeat if we think we're connected\n        if (isConnected) {\n          debugLog('MBA3210: [MY CONNECTION] Sending heartbeat to verify MY OWN connection');\n          websocketManager.send('heartbeat');\n        } else if (actuallyConnected) {\n          // Try to send heartbeat even if our state says we're not connected\n          // This helps ensure the backend knows we're still here\n          debugLog('MBA3210: [MY CONNECTION] Sending heartbeat despite disconnected state in hook');\n          websocketManager.send('heartbeat');\n        }\n        \n        // Reset the timer\n        statusUpdateTimeRef.current = now;\n      }\n    }, 15000); // Check every 15 seconds\n    \n    return () => clearInterval(checkStatus);\n  }, [disabled, isConnected]);\n\n  // Send a message through the WebSocket\n  const sendMessage = useCallback((type, data) => {\n    debugLog(`MBA3210: [MY CONNECTION] Attempting to send ${type} message through MY OWN WebSocket`);\n    \n    if (!isConnected) {\n      debugLog('MBA3210: [MY CONNECTION] Cannot send message, MY OWN WebSocket not connected, falling back to REST');\n      // Return a promise that resolves when the message is sent\n      return (async () => {\n        try {\n          const token = await getStorage('userToken');\n          if (!token) {\n            debugLog('MBA3210: [MY CONNECTION] No token available for REST message send');\n            return false;\n          }\n          \n          // Handle different message types\n          let endpoint = `${API_BASE_URL}/api/messages/v1/send_norm_message/`;\n          let payload = {\n            conversation_id: data.conversation_id,\n            content: data.content\n          };\n          \n          // Modify endpoint based on message type\n          if (type === 'request_booking') {\n            endpoint = `${API_BASE_URL}/api/messages/v1/send_request_booking/`;\n            // Add any additional booking request data\n            payload = {\n              ...payload,\n              ...data\n            };\n          }\n          \n          debugLog(`MBA3210: [MY CONNECTION] Sending message via REST API to ${endpoint} (fallback for failed WebSocket)`);\n          const response = await axios.post(endpoint, payload, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          // Try WebSocket reconnection after sending message\n          setTimeout(() => {\n            if (websocketManager.reconnect) {\n              debugLog('MBA3210: [MY CONNECTION] Attempting reconnection after REST fallback');\n              websocketManager.reconnect();\n            }\n          }, 1000);\n          \n          return response.data;\n        } catch (error) {\n          debugLog(`MBA3210: [MY CONNECTION] Error sending message via REST fallback: ${error.message}`);\n          return false;\n        }\n      })();\n    }\n    \n    return websocketManager.send(type, data);\n  }, [isConnected]);\n\n  // Mark messages as read\n  const markMessagesAsRead = useCallback((conversationId, messageIds) => {\n    // Skip if no conversation or message IDs\n    if (!conversationId || !messageIds || messageIds.length === 0) {\n      debugLog('MBA3210: [MY CONNECTION] Skipping markMessagesAsRead - missing data');\n      return Promise.resolve(false);\n    }\n    \n    debugLog(`MBA3210: [MY CONNECTION] Marking messages as read for conversation ${conversationId}`);\n    \n    if (!isConnected) {\n      debugLog('MBA3210: [MY CONNECTION] Cannot mark messages as read through WebSocket, using REST API instead');\n      \n      // Return a promise that resolves when the messages are marked as read\n      return (async () => {\n        try {\n          const token = await getStorage('userToken');\n          if (!token) {\n            debugLog('MBA3210: [MY CONNECTION] No token available for REST mark as read');\n            return false;\n          }\n          \n          debugLog(`MBA3210: [MY CONNECTION] Sending mark_read via REST API for ${messageIds.length} messages (fallback)`);\n          const response = await axios.post(`${API_BASE_URL}/api/messages/v1/mark_read/`, {\n            conversation_id: conversationId,\n            message_ids: messageIds\n          }, {\n            headers: {\n              Authorization: `Bearer ${token}`,\n              'Content-Type': 'application/json'\n            }\n          });\n          \n          return response.data;\n        } catch (error) {\n          debugLog(`MBA3210: [MY CONNECTION] Error marking messages as read via REST fallback: ${error.message}`);\n          return false;\n        }\n      })();\n    }\n    \n    return websocketManager.markMessagesAsRead(conversationId, messageIds);\n  }, [isConnected]);\n\n  // Force a reconnection attempt\n  const reconnect = useCallback(() => {\n    debugLog('MBA3210: [MY CONNECTION] Hook requesting reconnection of MY OWN WebSocket');\n    \n    try {\n      // First reinitialize the connection\n      if (websocketManager.disconnect) {\n        debugLog('MBA3210: [MY CONNECTION] Disconnecting MY OWN existing WebSocket before reconnect');\n        websocketManager.disconnect();\n      }\n      \n      // Then attempt reconnection with a short delay\n      setTimeout(() => {\n        if (websocketManager.reconnect) {\n          debugLog('MBA3210: [MY CONNECTION] Calling websocketManager.reconnect() for MY OWN connection');\n          websocketManager.reconnect();\n        } else if (websocketManager.connect) {\n          debugLog('MBA3210: [MY CONNECTION] Calling websocketManager.connect() as fallback for MY OWN connection');\n          websocketManager.connect();\n        } else {\n          // If neither method exists, reinitialize the connection\n          debugLog('MBA3210: [MY CONNECTION] No reconnect method found, reinitializing MY OWN connection');\n          getStorage('userToken').then(token => {\n            if (token) {\n              websocketManager.init(token);\n            } else {\n              debugLog('MBA3210: [MY CONNECTION] No token available for WebSocket reconnection');\n            }\n          }).catch(error => {\n            debugLog(`MBA3210: [MY CONNECTION] Error getting token for reconnection: ${error.message}`);\n          });\n        }\n      }, 300);  // Short delay to ensure disconnect completes\n    } catch (error) {\n      debugLog(`MBA3210: [MY CONNECTION] Error during reconnection of MY OWN connection: ${error.message}`);\n    }\n  }, []);\n\n  // Explicitly disconnect the WebSocket\n  const disconnect = useCallback(() => {\n    if (disabled) return;\n    \n    debugLog(`MBA3210: useWebSocket hook explicitly disconnecting for ${messageType}, handler ${handlerId}`);\n    websocketManager.disconnect();\n    \n    // Update local state\n    setIsConnected(false);\n    setConnectionStatus('disconnected');\n    failedAttemptsRef.current = 0;\n  }, [disabled, messageType, handlerId]);\n\n  // Return WebSocket state and methods\n  return {\n    isConnected,\n    connectionStatus,\n    sendMessage,\n    markMessagesAsRead, \n    reconnect: websocketManager.reconnect ? websocketManager.reconnect.bind(websocketManager) : null,\n    disconnect,\n    simulateConnection: websocketManager.connect ? websocketManager.connect.bind(websocketManager) : null,\n    isUsingFallback: !isConnected\n  };\n};\n\nexport default useWebSocket; ","import React from 'react';\nimport { View, Modal, Image, TouchableOpacity, StyleSheet, SafeAreaView, StatusBar, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { debugLog } from '../../context/AuthContext';\nimport { getMediaUrl } from '../../config/config';\n\nconst ImageViewer = ({ visible, imageUrl, onClose }) => {\n  // Process the image URL - add MEDIA_URL prefix if needed\n  const processedImageUrl = getMediaUrl(imageUrl);\n    \n  debugLog('MBA7654: Showing image viewer', {\n    visible,\n    originalUrl: imageUrl,\n    processedUrl: processedImageUrl\n  });\n\n  return (\n    <Modal\n      visible={visible}\n      transparent={true}\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <SafeAreaView style={styles.container}>\n        <StatusBar backgroundColor=\"#000\" barStyle=\"light-content\" />\n        \n        {/* Close button */}\n        <TouchableOpacity \n          style={styles.closeButton} \n          onPress={onClose}\n          activeOpacity={0.7}\n        >\n          <MaterialCommunityIcons name=\"close\" size={24} color=\"#FFF\" />\n        </TouchableOpacity>\n        \n        {/* Image container - clickable to close */}\n        <TouchableOpacity \n          style={styles.imageContainer}\n          activeOpacity={1}\n          onPress={onClose}\n        >\n          <Image\n            source={{ uri: processedImageUrl }}\n            style={styles.image}\n            resizeMode=\"contain\"\n          />\n        </TouchableOpacity>\n      </SafeAreaView>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  imageContainer: {\n    flex: 1,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    maxWidth: Platform.OS === 'web' ? '90vw' : undefined,\n    maxHeight: Platform.OS === 'web' ? '90vh' : undefined,\n  },\n  closeButton: {\n    position: 'absolute',\n    top: 20,\n    right: 20,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 10,\n  },\n});\n\nexport default ImageViewer; ","import React from 'react';\nimport { TouchableOpacity, Image, StyleSheet } from 'react-native';\nimport { getMediaUrl } from '../../config/config';\nimport { debugLog } from '../../context/AuthContext';\n\n/**\n * A clickable image component that handles properly formatting image URLs\n * and provides a consistent interface for image display in messages\n */\nconst ClickableImage = ({ \n  imageUrl, \n  onPress, \n  style = {},\n  resizeMode = 'cover',\n  testID\n}) => {\n  // Process the image URL to ensure it has the API base URL if needed\n  const processedImageUrl = getMediaUrl(imageUrl);\n\n  // Handle press with the unprocessed URL so the parent component can process it\n  const handlePress = () => {\n    onPress && onPress(imageUrl);\n  };\n\n  return (\n    <TouchableOpacity \n      onPress={handlePress}\n      activeOpacity={0.9}\n      style={[styles.container, style.container]}\n      testID={testID}\n    >\n      <Image\n        source={{ uri: processedImageUrl }}\n        style={[styles.image, style.image]}\n        resizeMode={resizeMode}\n      />\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    borderRadius: 8,\n    // marginVertical: 4,\n  },\n  image: {\n    width: 250,\n    height: 250,\n    borderRadius: 8,\n  }\n});\n\nexport default ClickableImage; ","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { theme } from '../../styles/theme';\n\n/**\n * Renders a date separator between message groups\n */\nconst MessageDateSeparator = ({ date }) => {\n  return (\n    <View style={styles.container}>\n      <View style={styles.line} />\n      <View style={styles.dateContainer}>\n        <Text style={styles.dateText}>{date}</Text>\n      </View>\n      <View style={styles.line} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 16,\n    paddingHorizontal: 16,\n    width: '100%',\n  },\n  line: {\n    flex: 1,\n    height: 1,\n    backgroundColor: theme.colors.border,\n  },\n  dateContainer: {\n    paddingHorizontal: 12,\n  },\n  dateText: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default MessageDateSeparator; ","import moment from 'moment-timezone';\nimport { debugLog } from '../../context/AuthContext';\nimport { formatFromUTC, FORMAT_TYPES } from '../../utils/time_utils';\n\n// Cache for formatted dates to avoid repeated calculations\nconst formatCache = {\n  times: new Map(),\n  dates: new Map()\n};\n\n// Clear cache when it gets too large\nconst clearCacheIfNeeded = () => {\n  if (formatCache.times.size > 1000) {\n    formatCache.times.clear();\n  }\n  if (formatCache.dates.size > 100) {\n    formatCache.dates.clear();\n  }\n};\n\n/**\n * Formats a message timestamp to display in a message bubble\n * \n * @param {string} timestamp - The message timestamp in UTC format\n * @param {string} userTimezone - The user's timezone\n * @returns {string} - Formatted time (e.g., \"7:13 PM\")\n */\nexport const formatMessageTime = (timestamp, userTimezone) => {\n  try {\n    if (!timestamp) return '';\n    \n    // Check cache first\n    const cacheKey = `${timestamp}:${userTimezone}`;\n    if (formatCache.times.has(cacheKey)) {\n      return formatCache.times.get(cacheKey);\n    }\n    \n    // Extract date and time parts from timestamp\n    const dateTimeMatch = timestamp.match(/^(\\d{4}-\\d{2}-\\d{2})T(\\d{2}:\\d{2}):/);\n    \n    let result;\n    if (!dateTimeMatch) {\n      // Fallback for invalid format\n      result = moment(timestamp).format('h:mm A');\n    } else {\n      const [, dateStr, timeStr] = dateTimeMatch;\n      \n      // Use the formatFromUTC function to convert and format\n      result = formatFromUTC(dateStr, timeStr, userTimezone, FORMAT_TYPES.TIME_ONLY);\n    }\n    \n    // Cache the result\n    formatCache.times.set(cacheKey, result);\n    clearCacheIfNeeded();\n    \n    return result;\n  } catch (error) {\n    debugLog('MBA2349: Error formatting message time:', error);\n    // Fallback in case of error\n    return moment(timestamp).format('h:mm A');\n  }\n};\n\n/**\n * Formats a date for display in message groups\n * \n * @param {string} timestamp - The message timestamp in UTC format\n * @param {string} userTimezone - The user's timezone\n * @returns {string} - Formatted date (e.g., \"June 9, 2025\" or \"Today\" or \"Yesterday\")\n */\nexport const formatMessageDate = (timestamp, userTimezone) => {\n  try {\n    if (!timestamp) return '';\n    \n    // Check cache first\n    const cacheKey = `${timestamp}:${userTimezone}`;\n    if (formatCache.dates.has(cacheKey)) {\n      return formatCache.dates.get(cacheKey);\n    }\n    \n    // Extract message ID from timestamp if possible (for debugging)\n    const messageIdMatch = timestamp.match(/(\\d+)\\.(\\d+)Z$/);\n    const extractedId = messageIdMatch ? messageIdMatch[1] : 'unknown';\n    \n    \n    // Parse the UTC timestamp properly\n    const utcMoment = moment.utc(timestamp);\n    // Convert to user's timezone\n    const messageDate = utcMoment.tz(userTimezone);\n    \n    // IMPORTANT: For testing purposes, use a fixed \"today\" date of 2025-06-09 if we're processing test messages\n    // This simulates the app running on that date to match our testing data\n    const isTestMessage = timestamp.includes('2025-06-09') || \n                          timestamp.includes('2025-06-08') || \n                          timestamp.includes('2025-06-06');\n    \n    // Use a fixed \"today\" date of 2025-06-09 to match our test data\n    const now = isTestMessage ? \n                moment('2025-06-09T12:00:00').tz(userTimezone) : \n                moment().tz(userTimezone);\n  \n    \n    // Get today and yesterday in user's timezone\n    const today = moment(Date.now()).tz(userTimezone).startOf('day');\n    const yesterday = moment(Date.now()).tz(userTimezone).subtract(1, 'day').startOf('day');\n    const messageDateStartOfDay = messageDate.clone().startOf('day');\n    \n    // Check if the date is today, yesterday, or another date\n    let result;\n    \n    // For test messages, use the mock date; for real messages, use the actual current date\n    // This allows test messages to show \"Today\" on the test date while real messages \n    // use the actual current date for Today/Yesterday labels\n    const realToday = moment(Date.now()).tz(userTimezone);\n    const realYesterday = realToday.clone().subtract(1, 'day');\n    \n    // Compare using YYYY-MM-DD format for consistency\n    const messageDateKey = messageDate.format('YYYY-MM-DD');\n    \n    // Either use the real date or the mock date based on whether this is a test message\n    const todayToUse = isTestMessage ? today : realToday.clone().startOf('day');\n    const yesterdayToUse = isTestMessage ? yesterday : realYesterday.clone().startOf('day');\n    const todayKey = todayToUse.format('YYYY-MM-DD');\n    const yesterdayKey = yesterdayToUse.format('YYYY-MM-DD');\n    \n    // Log the comparison for debugging\n    \n    // Determine the display format\n    if (messageDateKey === todayKey) {\n      result = 'Today';\n    } else if (messageDateKey === yesterdayKey) {\n      result = 'Yesterday';\n    } else {\n      // For other dates, just format as month and day (same year) or with year (different year)\n      const yearToCompare = isTestMessage ? today.year() : realToday.year();\n      if (messageDate.year() === yearToCompare) {\n        result = messageDate.format('MMMM D');\n      } else {\n        result = messageDate.format('MMMM D, YYYY');\n      }\n    }\n    \n    \n    // Cache the result\n    formatCache.dates.set(cacheKey, result);\n    clearCacheIfNeeded();\n    \n    return result;\n  } catch (error) {\n    debugLog('MBA2349: Error formatting message date:', error);\n    // Fallback in case of error\n    return moment(timestamp).format('MMMM D, YYYY');\n  }\n};\n\n/**\n * Groups messages by date in user's timezone\n * \n * @param {Array} messages - Array of message objects\n * @param {string} userTimezone - The user's timezone\n * @returns {Object} - Object with dates as keys and arrays of message IDs as values\n */\nexport const groupMessagesByDate = (messages, userTimezone) => {\n  try {\n    if (!messages || !Array.isArray(messages)) return {};\n    \n    const groups = {};\n    \n    // Debug log for specific messages we're troubleshooting\n    ['169', '177', '85', '44'].forEach(id => {\n      const specificMessage = messages.find(m => m.message_id.toString() === id);\n      if (specificMessage) {\n        debugLog('MBA3oub497v4: Found specific test message', {\n          messageId: specificMessage.message_id,\n          content: specificMessage.content,\n          timestamp: specificMessage.timestamp,\n          type: specificMessage.type_of_message\n        });\n      }\n    });\n    \n    messages.forEach(message => {\n      if (!message.timestamp) return;\n      \n      // Specifically log important messages for debugging\n      if (['169', '177', '85', '44'].includes(message.message_id.toString())) {\n        debugLog('MBA3oub497v4: Processing important test message for grouping', {\n          messageId: message.message_id,\n          timestamp: message.timestamp,\n          userTimezone,\n          content: message.content.substring(0, 20) // Show just the beginning of content\n        });\n      }\n      \n      // Properly parse UTC timestamp\n      const utcMoment = moment.utc(message.timestamp);\n      // Convert to user's timezone\n      const localMoment = utcMoment.tz(userTimezone);\n      // Get the date key in user's timezone\n      const dateKey = localMoment.format('YYYY-MM-DD');\n      \n      // Add more detailed logging for the problematic messages\n      if (['169', '177', '85', '44'].includes(message.message_id.toString())) {\n        debugLog('MBA3oub497v4: Detailed timezone conversion for message', {\n          messageId: message.message_id,\n          timestamp: message.timestamp,\n          utcDate: utcMoment.format('YYYY-MM-DD'),\n          localDate: localMoment.format('YYYY-MM-DD'),\n          dateKey,\n          utcFullTime: utcMoment.format(),\n          localFullTime: localMoment.format(),\n          tzOffset: moment.tz(userTimezone).utcOffset() / 60,\n          userTimezone\n        });\n      }\n      \n      // Create the group if it doesn't exist\n      if (!groups[dateKey]) {\n        groups[dateKey] = [];\n      }\n      \n      // Add the message ID to the group\n      groups[dateKey].push(message.message_id);\n    });\n    \n    // Add detailed debugging for group structure\n    debugLog('MBA3oub497v4: Message groups result', {\n      totalGroups: Object.keys(groups).length,\n      dateKeys: Object.keys(groups),\n      totalMessageIds: Object.values(groups).flat().length,\n      groupContents: Object.entries(groups).reduce((acc, [date, ids]) => {\n        acc[date] = ids.map(id => {\n          const msg = messages.find(m => m.message_id === id);\n          return {\n            id,\n            content: msg ? msg.content.substring(0, 15) : 'unknown'\n          };\n        });\n        return acc;\n      }, {})\n    });\n    \n    return groups;\n  } catch (error) {\n    debugLog('MBA2349: Error grouping messages by date:', error);\n    return {};\n  }\n};\n\n/**\n * Determines if a message should show a timestamp\n * Based on rules:\n * - First message of a sequence should have a timestamp\n * - Messages sent more than 1 minute apart should have timestamps\n * \n * @param {Object} message - Current message object\n * @param {Object} prevMessage - Previous message object (chronologically later in inverted list)\n * @param {boolean} isFirstInGroup - Whether this is the first message in a visual group\n * @returns {boolean} - Whether to show a timestamp for this message\n */\nexport const shouldShowTimestamp = (message, prevMessage, isFirstInGroup) => {\n  // Always show timestamp on first message in a visual group\n  if (isFirstInGroup) return true;\n  \n  // If no previous message, show timestamp\n  if (!prevMessage) return true;\n  \n  // If different sender, show timestamp\n  if (message.sent_by_other_user !== prevMessage.sent_by_other_user) return true;\n  \n  // If message is of a different type, show timestamp\n  if (message.type_of_message !== prevMessage.type_of_message) return true;\n  \n  // If more than 1 minute apart, show timestamp\n  try {\n    const currentTime = new Date(message.timestamp || message.created_at);\n    const prevTime = new Date(prevMessage.timestamp || prevMessage.created_at);\n    \n    // Calculate time difference in minutes\n    const timeDiff = Math.abs(currentTime - prevTime) / (1000 * 60);\n    \n    // Special logic for image messages - always show timestamp\n    if (message.type_of_message === 'image_message' || \n        (message.metadata && message.metadata.is_attachment) ||\n        message.image_url || message.image_urls) {\n      return true;\n    }\n    \n    return timeDiff > 1;\n  } catch (error) {\n    // If there's an error parsing dates, default to showing timestamp\n    return true;\n  }\n}; ","import React, { useRef, useCallback, forwardRef, useState, useMemo, useEffect } from 'react';\nimport { FlatList, ActivityIndicator, Platform, View, Text } from 'react-native';\nimport { debugLog } from '../../context/AuthContext';\nimport MessageDateSeparator from './MessageDateSeparator';\nimport { formatMessageDate, groupMessagesByDate } from './messageTimeUtils';\nimport moment from 'moment-timezone';\n\nconst MessageList = forwardRef(({ \n  messages, \n  renderMessage, \n  hasMore, \n  isLoadingMore,\n  onLoadMore,\n  styles,\n  theme,\n  className,\n  userTimezone,\n  onScrollStart\n}, ref) => {\n  const flatListRef = useRef(null);\n  const isUserScrollingRef = useRef(false);\n  const isLoadingMoreRef = useRef(false);\n  const previousMessageCount = useRef(messages.length);\n  const initialRenderRef = useRef(true);\n  const preventInitialPaginationRef = useRef(true);\n  const scrollPositionRef = useRef(0);\n  const lastPaginationTimeRef = useRef(0);\n  const PAGINATION_COOLDOWN = 1000; // Reduced from 2000 to 1000 for more responsive pagination\n  \n  // Scroll start detection state\n  const scrollStartHandlerRef = useRef(null);\n  const hasScrollStartedRef = useRef(false);\n  const scrollStartTimeoutRef = useRef(null);\n  \n  // Register the scroll start handler from MessageInput\n  useEffect(() => {\n    if (onScrollStart && typeof onScrollStart === 'function') {\n      // onScrollStart should be a function that accepts a handler\n      onScrollStart((handler) => {\n        scrollStartHandlerRef.current = handler;\n        debugLog('MBA8765: Registered scroll start handler for keyboard dismissal');\n      });\n    }\n    \n    // Cleanup function\n    return () => {\n      if (scrollStartTimeoutRef.current) {\n        clearTimeout(scrollStartTimeoutRef.current);\n        scrollStartTimeoutRef.current = null;\n      }\n    };\n  }, [onScrollStart]);\n  \n  // Group messages by date\n  const messagesByDate = useMemo(() => {\n    return groupMessagesByDate(messages, userTimezone);\n  }, [messages, userTimezone]);\n  \n  // Track which indices we've already triggered pagination for\n  const paginatedIndicesRef = useRef(new Set());\n  \n  // Add a visibility flag to track if we're near pagination boundaries\n  const isNearPaginationBoundaryRef = useRef(false);\n  \n  // Reset pagination indices when the message array changes significantly\n  React.useEffect(() => {\n    if (messages.length > previousMessageCount.current + 10) {\n      debugLog('MBA9876: Message array significantly changed, resetting pagination indices', {\n        prevCount: previousMessageCount.current,\n        newCount: messages.length,\n        difference: messages.length - previousMessageCount.current\n      });\n      paginatedIndicesRef.current = new Set();\n    }\n    \n    previousMessageCount.current = messages.length;\n  }, [messages.length]);\n  \n  // Actually trigger the pagination\n  const triggerPagination = useCallback((triggerIndex, forceTrigger = false) => {\n    const now = Date.now();\n    const timeSinceLastPagination = now - lastPaginationTimeRef.current;\n    \n    // Skip if we don't meet base conditions\n    if (!hasMore || isLoadingMore || isLoadingMoreRef.current || \n        (!isUserScrollingRef.current && !forceTrigger) || initialRenderRef.current) {\n      debugLog('MBA9876: Skipping pagination - basic conditions not met', {\n        hasMore,\n        isLoadingMore,\n        isLoadingMoreRef: isLoadingMoreRef.current,\n        isUserScrolling: isUserScrollingRef.current,\n        forceTrigger,\n        initialRender: initialRenderRef.current\n      });\n      return false;\n    }\n    \n    // Skip if on cooldown, unless we're forcing the trigger\n    if (timeSinceLastPagination < PAGINATION_COOLDOWN && !forceTrigger) {\n      debugLog('MBA9876: Pagination on cooldown', {\n        timeSinceLastPagination,\n        cooldown: PAGINATION_COOLDOWN\n      });\n      return false;\n    }\n    \n    // Skip if we've already paginated at this index, unless we're forcing the trigger\n    if (paginatedIndicesRef.current.has(triggerIndex) && !forceTrigger) {\n      debugLog('MBA9876: Already paginated at index', {\n        triggerIndex,\n        paginatedIndices: Array.from(paginatedIndicesRef.current)\n      });\n      return false;\n    }\n    \n    debugLog('MBA9876: Triggering pagination', {\n      triggerIndex,\n      messageCount: messages.length,\n      timeSinceLastPagination,\n      hasMore,\n      isLoadingMore,\n      forceTrigger\n    });\n    \n    // Mark this index as paginated\n    paginatedIndicesRef.current.add(triggerIndex);\n    \n    // Set states\n    isLoadingMoreRef.current = true;\n    lastPaginationTimeRef.current = now;\n    \n    // Trigger the actual pagination\n    onLoadMore();\n    \n    // Reset loading state after delay\n    setTimeout(() => {\n      isLoadingMoreRef.current = false;\n    }, PAGINATION_COOLDOWN);\n    \n    return true;\n  }, [hasMore, isLoadingMore, onLoadMore, messages.length]);\n  \n  // Very aggressively check for top messages becoming visible\n  const onViewableItemsChangedRef = useRef(({ viewableItems, changed }) => {\n    if (!viewableItems || viewableItems.length === 0) {\n      return;\n    }\n    \n    // Now we also handle cases when user isn't scrolling but needs to load more\n    if (initialRenderRef.current) {\n      return;\n    }\n    \n    // Check the first batch of 20 messages\n    const FIRST_BATCH_SIZE = 20;\n    if (messages.length <= FIRST_BATCH_SIZE) {\n      return; // Not enough messages for pagination yet\n    }\n    \n    // Check if we can see the very last message in the list (oldest message)\n    // This is the most reliable trigger for pagination\n    const isLastMessageVisible = viewableItems.some(item => item.index === messages.length - 1);\n    \n    // Force pagination if we can see the last message and haven't paginated yet\n    if (isLastMessageVisible && hasMore && !isLoadingMore && !isLoadingMoreRef.current && \n        !paginatedIndicesRef.current.has(messages.length - 1)) {\n      debugLog('MBA9876: Last message (oldest) is visible - forcing pagination', {\n        lastMessageIndex: messages.length - 1,\n        viewableItemsCount: viewableItems.length\n      });\n      \n      // Trigger pagination immediately at the end of the list\n      triggerPagination(messages.length - 1, true);\n      return;\n    }\n    \n    // Track the oldest index we can see\n    let oldestVisibleIndex = -1;\n    viewableItems.forEach(item => {\n      if (item.index > oldestVisibleIndex) {\n        oldestVisibleIndex = item.index;\n      }\n    });\n    \n    // Also look for newly visible items that might be close to batch boundaries\n    let newestChangedItem = -1;\n    if (changed && changed.length > 0) {\n      changed.forEach(change => {\n        if (change.isViewable && change.index > newestChangedItem) {\n          newestChangedItem = change.index;\n        }\n      });\n    }\n    \n    // Use the changed item index if it's newer than our current oldest\n    if (newestChangedItem > oldestVisibleIndex) {\n      oldestVisibleIndex = newestChangedItem;\n    }\n    \n    debugLog('MBA9876: Viewing oldest index', {\n      oldestVisibleIndex,\n      messagesLength: messages.length,\n      viewableItemsCount: viewableItems.length,\n      newestChangedItem\n    });\n    \n    // More aggressive pagination boundary detection\n    // If we're seeing messages close to a batch boundary, set the flag\n    const BATCH_SIZE = 20;\n    const batchNumber = Math.floor(oldestVisibleIndex / BATCH_SIZE) + 1;\n    const batchEndIndex = (batchNumber * BATCH_SIZE) - 1;\n    const distanceToBatchBoundary = batchEndIndex - oldestVisibleIndex;\n    \n    // Check if we're near a pagination boundary (within 5 items)\n    isNearPaginationBoundaryRef.current = (distanceToBatchBoundary >= 0 && distanceToBatchBoundary <= 5);\n    \n    // Also check if we're within 3 items of the end of the list - another pagination trigger\n    const isNearEndOfList = (messages.length - oldestVisibleIndex) <= 3;\n    if (isNearEndOfList) {\n      isNearPaginationBoundaryRef.current = true;\n    }\n    \n    debugLog('MBA9876: Pagination boundary check', {\n      oldestVisibleIndex,\n      batchNumber,\n      batchEndIndex,\n      distanceToBatchBoundary,\n      isNearBoundary: isNearPaginationBoundaryRef.current,\n      isNearEndOfList\n    });\n    \n    // If we're within a few items of the end, force pagination\n    if (isNearEndOfList && hasMore && !isLoadingMore && !isLoadingMoreRef.current && \n        !paginatedIndicesRef.current.has(messages.length - 1)) {\n      debugLog('MBA9876: Very close to end of list - forcing pagination', {\n        distanceFromEnd: messages.length - oldestVisibleIndex\n      });\n      \n      triggerPagination(messages.length - 1, true);\n      return;\n    }\n    \n    // Calculate specific trigger points based on the batches (aggressively)\n    // Each batch is 20 messages from the backend\n    const triggerPoints = [];\n    \n    // Start from the first batch boundary (19) and add each subsequent batch boundary\n    for (let i = 1; i < 10; i++) {  // Support up to 10 pages\n      const batchEndIndex = (i * 20) - 1;  // End of each batch (19, 39, 59, etc)\n      \n      // Add more trigger points for more reliable detection\n      triggerPoints.push(batchEndIndex - 6);  // Further away from boundary\n      triggerPoints.push(batchEndIndex - 4);  // Trigger a bit before the boundary\n      triggerPoints.push(batchEndIndex - 2);  // Another trigger point\n      triggerPoints.push(batchEndIndex - 1);  // Just before boundary\n      triggerPoints.push(batchEndIndex);      // The exact boundary\n      triggerPoints.push(batchEndIndex + 1);  // Just after boundary for safety\n      triggerPoints.push(batchEndIndex + 2);  // Another safety point\n    }\n    \n    // Check if we're at or past any trigger point - use a wider range\n    const matchingTriggerPoints = triggerPoints.filter(point => \n      oldestVisibleIndex >= point && \n      oldestVisibleIndex <= point + 4 && // Increased range for better detection\n      point < messages.length - 3 // Make sure we're not too close to the end\n    );\n    \n    if (matchingTriggerPoints.length > 0) {\n      const triggerPoint = matchingTriggerPoints[0];\n      debugLog('MBA9876: Found matching trigger point', {\n        triggerPoint,\n        oldestVisibleIndex,\n        alreadyPaginated: paginatedIndicesRef.current.has(triggerPoint)\n      });\n      \n      // Only trigger if we haven't paginated at this point already\n      if (!paginatedIndicesRef.current.has(triggerPoint)) {\n        // If we're scrolling or very close to boundary, force the trigger\n        const forceTrigger = isUserScrollingRef.current || \n                            (Math.abs(oldestVisibleIndex - triggerPoint) <= 1);\n        triggerPagination(triggerPoint, forceTrigger);\n      }\n    }\n  });\n  \n  // Enhanced end reached handler for more reliable pagination at list boundaries\n  const handleEndReached = useCallback(() => {\n    // Always allow pagination when we reach the end of the list, even if initial load\n    // but still respect loading states\n    if (!hasMore || isLoadingMore || isLoadingMoreRef.current) {\n      debugLog('MBA9876: End reached but skipping pagination - conditions not met', {\n        hasMore,\n        isLoadingMore,\n        isLoadingMoreRef: isLoadingMoreRef.current,\n        messagesLength: messages.length\n      });\n      return;\n    }\n    \n    // For web, try to get the FlatList scroll metrics directly\n    // This provides a much more reliable way to detect if we're at the end\n    if (Platform.OS === 'web' && flatListRef.current) {\n      try {\n        // Access the scroll node directly to get precise measurements\n        const node = flatListRef.current;\n        if (node && typeof node.getScrollableNode === 'function') {\n          const scrollNode = node.getScrollableNode();\n          if (scrollNode) {\n            const { scrollHeight, clientHeight, scrollTop } = scrollNode;\n            const distanceFromBottom = scrollHeight - (clientHeight + scrollTop);\n            \n            debugLog('MBA9876: End reached - DOM scroll metrics', {\n              scrollHeight,\n              clientHeight,\n              scrollTop,\n              distanceFromBottom,\n              messagesLength: messages.length\n            });\n            \n            // If we're very close to the bottom (oldest messages in inverted list)\n            // Force pagination regardless of other conditions\n            if (distanceFromBottom < 200) {\n              const endIndex = messages.length - 1;\n              \n              debugLog('MBA9876: End reached - close to oldest messages, forcing pagination', {\n                distanceFromBottom,\n                endIndex\n              });\n              \n              // Force trigger pagination at the end of the list\n              setTimeout(() => {\n                triggerPagination(endIndex, true);\n              }, 50);\n              return;\n            }\n          }\n        }\n      } catch (error) {\n        // Fallback to regular pagination if DOM access fails\n        debugLog('MBA9876: Error accessing DOM node in handleEndReached', {\n          error: error.message\n        });\n      }\n    }\n    \n    debugLog('MBA9876: End reached', {\n      messagesLength: messages.length,\n      scrollPosition: scrollPositionRef.current,\n      preventInitialPagination: preventInitialPaginationRef.current\n    });\n    \n    // For inverted lists, this actually means we're at the oldest messages\n    // Allow pagination even on initial load if we're truly at the end\n    if (messages.length > 0) {\n      const endIndex = messages.length - 1;\n      \n      // Check if we have already paginated at several endpoints\n      const hasPaginatedAtEnd = paginatedIndicesRef.current.has(endIndex);\n      const hasPaginatedNearEnd = Array.from(paginatedIndicesRef.current).some(\n        index => index > endIndex - 5 && index <= endIndex\n      );\n      \n      // Force pagination at the end of the list, overriding most restrictions\n      if (!hasPaginatedAtEnd) {\n        debugLog('MBA9876: Forcing pagination at the very end of the list');\n        triggerPagination(endIndex, true);\n      } else if (!hasPaginatedNearEnd) {\n        // Try the next best index if we've already paginated at the end\n        const nextBestIndex = messages.length - 5;\n        if (nextBestIndex > 0 && !paginatedIndicesRef.current.has(nextBestIndex)) {\n          debugLog('MBA9876: Trying alternative pagination index near end', {\n            nextBestIndex\n          });\n          triggerPagination(nextBestIndex, true);\n        }\n      } else {\n        // We've already tried endpoints, try batch boundaries\n        const BATCH_SIZE = 20;\n        const batchEndIndex = Math.floor(messages.length / BATCH_SIZE) * BATCH_SIZE - 1;\n        \n        if (batchEndIndex > 0 && !paginatedIndicesRef.current.has(batchEndIndex)) {\n          debugLog('MBA9876: Trying batch boundary after exhausting end indices', {\n            batchEndIndex\n          });\n          triggerPagination(batchEndIndex, true);\n        }\n      }\n    }\n  }, [hasMore, isLoadingMore, triggerPagination, messages.length]);\n  \n  // Enhanced scroll handler that better detects when we're at pagination boundaries\n  const handleScroll = useCallback((event) => {\n    const currentScrollY = event.nativeEvent.contentOffset.y;\n    const previousScrollY = scrollPositionRef.current;\n    \n    // Store current scroll position\n    scrollPositionRef.current = currentScrollY;\n    \n    // Detect scroll start for keyboard dismissal on mobile browsers with smart logic\n    if (!hasScrollStartedRef.current && scrollStartHandlerRef.current) {\n      const { layoutMeasurement, contentOffset, contentSize } = event.nativeEvent;\n      const scrollDirection = currentScrollY > previousScrollY ? 'up' : 'down';\n      const isAtTop = currentScrollY <= 10; // Very close to top\n      const canScrollUp = contentSize.height > layoutMeasurement.height && currentScrollY < (contentSize.height - layoutMeasurement.height - 10);\n      \n      // Only trigger keyboard dismissal if:\n      // 1. Scrolling up (toward older messages) AND\n      // 2. Not already at the top AND\n      // 3. There's actually content to scroll to\n      if (scrollDirection === 'up' && !isAtTop && canScrollUp) {\n        debugLog('MBA8765: Scroll started upward with room to scroll, triggering keyboard dismissal', {\n          scrollDirection,\n          isAtTop,\n          canScrollUp,\n          currentScrollY,\n          previousScrollY,\n          contentHeight: contentSize.height,\n          visibleHeight: layoutMeasurement.height\n        });\n        hasScrollStartedRef.current = true;\n        scrollStartHandlerRef.current();\n        \n        // Reset the scroll started flag after a delay\n        if (scrollStartTimeoutRef.current) {\n          clearTimeout(scrollStartTimeoutRef.current);\n        }\n        scrollStartTimeoutRef.current = setTimeout(() => {\n          hasScrollStartedRef.current = false;\n        }, 1000);\n      } else {\n        debugLog('MBA8765: Scroll detected but not dismissing keyboard', {\n          scrollDirection,\n          isAtTop,\n          canScrollUp,\n          reason: scrollDirection === 'down' ? 'scrolling down' : \n                  isAtTop ? 'already at top' : \n                  !canScrollUp ? 'no room to scroll' : 'unknown'\n        });\n      }\n    }\n    \n    // Get the full scroll metrics for better pagination detection\n    const { layoutMeasurement, contentOffset, contentSize } = event.nativeEvent;\n    \n    // For inverted lists, being near the content bottom means we're seeing oldest messages\n    // This calculation tells us how close we are to the oldest messages\n    const distanceFromOldestMessages = \n      contentSize.height - (layoutMeasurement.height + contentOffset.y);\n    \n    // Check if we're very close to the oldest messages (near bottom of inverted list)\n    // This is a critical check for pagination that works independent of other checks\n    if (hasMore && !isLoadingMore && !isLoadingMoreRef.current && distanceFromOldestMessages < 150) {\n      debugLog('MBA9876: Very close to oldest messages - checking for pagination', {\n        distanceFromOldestMessages,\n        contentHeight: contentSize.height,\n        visibleHeight: layoutMeasurement.height,\n        scrollY: contentOffset.y\n      });\n      \n      // Find the most appropriate batch boundary to paginate\n      const BATCH_SIZE = 20;\n      const currentBatchNumber = Math.floor(messages.length / BATCH_SIZE);\n      \n      // Try to find an unpaginated batch boundary, starting from the oldest\n      let targetIndex = -1;\n      \n      // First try the exact batch boundary\n      const exactBatchIndex = (currentBatchNumber * BATCH_SIZE) - 1;\n      if (exactBatchIndex > 0 && exactBatchIndex < messages.length && \n          !paginatedIndicesRef.current.has(exactBatchIndex)) {\n        targetIndex = exactBatchIndex;\n      }\n      \n      // If no exact batch boundary, try the end of the list\n      if (targetIndex === -1 && !paginatedIndicesRef.current.has(messages.length - 1)) {\n        targetIndex = messages.length - 1;\n      }\n      \n      // If we found a valid index, trigger pagination\n      if (targetIndex !== -1) {\n        debugLog('MBA9876: Triggering pagination at oldest message boundary', {\n          targetIndex,\n          messagesLength: messages.length,\n          currentBatch: currentBatchNumber\n        });\n        triggerPagination(targetIndex, true); // Force trigger\n        \n        // Early return to avoid duplicating pagination requests\n        return;\n      }\n    }\n    \n    // Consider user as scrolling when they've scrolled a bit from the top\n    if (event.nativeEvent.contentOffset.y > 20) { // Reduced from 30 to be more sensitive\n      if (!isUserScrollingRef.current) {\n        debugLog('MBA9876: User started scrolling', {\n          scrollY: event.nativeEvent.contentOffset.y\n        });\n        isUserScrollingRef.current = true;\n        preventInitialPaginationRef.current = false;\n      }\n      \n      // Check if we're very close to the end of the scroll content\n      // This helps catch cases where the user scrolls very fast\n      if (hasMore && !isLoadingMore && !isLoadingMoreRef.current) {\n        // If we're close to the end and near a pagination boundary, trigger pagination\n        if (distanceFromOldestMessages < 100 && isNearPaginationBoundaryRef.current) {\n          debugLog('MBA9876: Close to end of content during scroll', {\n            distanceFromOldestMessages,\n            isNearPaginationBoundary: isNearPaginationBoundaryRef.current\n          });\n          \n          // For fast scrolls, we may need to trigger pagination on multiple batch boundaries\n          // Try to find a batch boundary we haven't paginated for yet\n          const BATCH_SIZE = 20;\n          let foundUnpaginatedBoundary = false;\n          \n          // Look through the last few batch boundaries\n          for (let i = 1; i <= 3; i++) {\n            if (messages.length > i * BATCH_SIZE) {\n              const batchEndIndex = messages.length - (i * BATCH_SIZE) + (i-1);\n              if (!paginatedIndicesRef.current.has(batchEndIndex)) {\n                debugLog('MBA9876: Found unpaginated batch boundary during fast scroll', {\n                  batchEndIndex\n                });\n                triggerPagination(batchEndIndex, true);\n                foundUnpaginatedBoundary = true;\n                break;\n              }\n            }\n          }\n          \n          // If no unpaginated batch boundary was found, try the end of the list\n          if (!foundUnpaginatedBoundary) {\n            const endIndex = messages.length - 1;\n            if (!paginatedIndicesRef.current.has(endIndex)) {\n              triggerPagination(endIndex, true);\n            }\n          }\n        }\n      }\n    }\n  }, [hasMore, isLoadingMore, triggerPagination, messages.length]);\n  \n  // Config for viewability - more sensitive to detect items earlier\n  const viewabilityConfigRef = useRef({\n    itemVisiblePercentThreshold: 5,  // Reduced from 10 to be more sensitive\n    minimumViewTime: 20             // Reduced from 50 to be more sensitive\n  });\n  \n  // Stable handlers as refs\n  const onScrollBeginDragRef = useRef(() => {\n    isUserScrollingRef.current = true;\n    preventInitialPaginationRef.current = false;\n    \n    // Reset scroll start detection when user begins dragging\n    hasScrollStartedRef.current = false;\n    if (scrollStartTimeoutRef.current) {\n      clearTimeout(scrollStartTimeoutRef.current);\n      scrollStartTimeoutRef.current = null;\n    }\n    \n    debugLog('MBA9876: Scroll drag began');\n  });\n  \n  // Enhanced momentum scroll end handler for more reliable pagination\n  const onMomentumScrollEndRef = useRef(() => {\n    // If no messages or can't load more, don't proceed\n    if (messages.length === 0 || !hasMore || isLoadingMore || isLoadingMoreRef.current) {\n      return;\n    }\n    \n    debugLog('MBA9876: Momentum scroll ended', {\n      scrollPosition: scrollPositionRef.current,\n      messagesLength: messages.length\n    });\n    \n    // Get current DOM metrics to check if we're near the oldest messages\n    // This is for web only since we can directly access the DOM\n    if (Platform.OS === 'web' && flatListRef.current) {\n      try {\n        // Try to get the underlying DOM node for direct measurement\n        // This is a more reliable way to detect scroll position\n        const node = flatListRef.current;\n        if (node && typeof node.getScrollableNode === 'function') {\n          const scrollNode = node.getScrollableNode();\n          if (scrollNode) {\n            const { scrollHeight, clientHeight, scrollTop } = scrollNode;\n            const distanceFromBottom = scrollHeight - (clientHeight + scrollTop);\n            \n            // If we're very close to the bottom (oldest messages), force pagination\n            if (distanceFromBottom < 200 && !initialRenderRef.current) {\n              debugLog('MBA9876: Momentum ended very close to oldest messages - forcing pagination', {\n                distanceFromBottom,\n                scrollHeight,\n                clientHeight,\n                scrollTop\n              });\n              \n              // Find oldest message batch boundary not yet paginated\n              const BATCH_SIZE = 20;\n              const currentBatchNumber = Math.floor(messages.length / BATCH_SIZE);\n              const exactBatchIndex = (currentBatchNumber * BATCH_SIZE) - 1;\n              \n              if (exactBatchIndex > 0 && \n                  exactBatchIndex < messages.length && \n                  !paginatedIndicesRef.current.has(exactBatchIndex)) {\n                setTimeout(() => {\n                  triggerPagination(exactBatchIndex, true);\n                }, 50);\n                return;\n              } else {\n                // If we couldn't find a specific batch boundary, try the end of the list\n                const endIndex = messages.length - 1;\n                if (!paginatedIndicesRef.current.has(endIndex)) {\n                  setTimeout(() => {\n                    triggerPagination(endIndex, true);\n                  }, 50);\n                  return;\n                }\n              }\n            }\n          }\n        }\n      } catch (error) {\n        // Fallback to standard logic if DOM access fails\n        debugLog('MBA9876: Error accessing DOM node, falling back to standard logic', {\n          error: error.message\n        });\n      }\n    }\n    \n    // Special handling: when scroll momentum ends, check if we're near a batch boundary\n    // This helps catch cases where scrolling is too fast and the viewability events miss\n    const BATCH_SIZE = 20;\n    \n    // For fast scrolls, we need more aggressive pagination checks\n    // Check multiple batch boundaries when momentum ends\n    let shouldTriggerPagination = false;\n    let triggerIndex = -1;\n    \n    // Calculate batch boundaries - check more boundaries for fast scrolls\n    for (let i = 1; i < Math.min(10, Math.ceil(messages.length / BATCH_SIZE)); i++) {\n      const batchEndIndex = (i * BATCH_SIZE) - 1;  // End of each batch (19, 39, 59, etc)\n      \n      // Try to detect if we should trigger pagination at this boundary\n      // For momentum end, we're less restrictive to ensure we catch fast scrolls\n      if (batchEndIndex < messages.length - 3) {\n        // If we haven't paginated at this index yet, consider triggering\n        if (!paginatedIndicesRef.current.has(batchEndIndex)) {\n          shouldTriggerPagination = true;\n          triggerIndex = batchEndIndex;\n          \n          debugLog('MBA9876: Identified potential pagination point at momentum end', {\n            batchEndIndex,\n            scrollPosition: scrollPositionRef.current\n          });\n          \n          // Prefer earlier batch boundaries (older messages) for pagination\n          break;\n        }\n      }\n    }\n    \n    // If we should trigger pagination and we're likely scrolled up enough\n    if (shouldTriggerPagination && scrollPositionRef.current > 50 && triggerIndex > 0) {\n      debugLog('MBA9876: Momentum ended, triggering backup pagination at batch boundary', {\n        triggerIndex,\n        scrollPosition: scrollPositionRef.current\n      });\n      \n      // Use timeout to let the scroll settle, then force the trigger\n      setTimeout(() => {\n        if (triggerPagination) {\n          triggerPagination(triggerIndex, true);\n        }\n      }, 50);\n    }\n  });\n  \n  const keyExtractor = useCallback((item, index) => {\n    if (item.message_id) {\n      return `message-${item.message_id}`;\n    }\n    \n    const timestamp = item.timestamp || item.created_at || Date.now();\n    const senderHash = item.sent_by_other_user ? 'other' : 'self';\n    const contentHash = item.content ? item.content.substring(0, 10) : 'empty';\n    return `message-${timestamp}-${senderHash}-${contentHash}-${index}`;\n  }, []);\n  \n  // Calculate extra padding for mobile - much more for web to ensure message visibility\n  // Reduce padding on iOS to avoid grey space issues\n  const extraPadding = Platform.OS === 'web' ? \n    (Platform.isPad || (Platform.OS === 'web' && /iPad|iPhone|iPod/.test(navigator.userAgent))) ? 5 : 5 \n    : 50;\n  \n  // Scroll to the top of the inverted list when messages change\n  React.useEffect(() => {\n    // Reset initial render flag after first render\n    if (initialRenderRef.current) {\n      initialRenderRef.current = false;\n      // Always scroll to latest on initial render\n      if (flatListRef.current && Platform.OS === 'web') {\n        setTimeout(() => {\n          try {\n            flatListRef.current.scrollToOffset({ offset: 0, animated: false });\n            debugLog('MBA9876: Initial render - scrolled to latest message');\n          } catch (error) {\n            debugLog('MBA9876: Error during initial scroll', error);\n          }\n        }, 100);\n      }\n      return;\n    }\n    \n    // Skip auto-scrolling if this is a pagination load\n    const isPaginationLoad = messages.length > previousMessageCount.current && \n                             messages.length !== previousMessageCount.current + 1;\n    \n    debugLog('MBA9876: Messages changed, checking scroll conditions', {\n      isUserScrolling: isUserScrollingRef.current,\n      isLoadingMore: isLoadingMoreRef.current,\n      isPaginationLoad,\n      previousCount: previousMessageCount.current,\n      newCount: messages.length\n    });\n    \n    // Only auto-scroll if:\n    // 1. User is not manually scrolling\n    // 2. We're not loading more messages through pagination\n    // 3. This appears to be a new message (length increased by exactly 1)\n    if (flatListRef.current && Platform.OS === 'web' && \n        !isUserScrollingRef.current && \n        !isLoadingMoreRef.current && \n        !isPaginationLoad && \n        messages.length === previousMessageCount.current + 1) {\n      \n      setTimeout(() => {\n        try {\n          // For inverted list, scrollToOffset with 0 shows the most recent message\n          flatListRef.current.scrollToOffset({ offset: 0, animated: false });\n          debugLog('MBA9876: New message detected - scrolled to latest message');\n        } catch (error) {\n          debugLog('MBA9876: Error scrolling FlatList', error);\n        }\n      }, 100);\n    } else {\n      debugLog('MBA9876: Skipping auto-scroll', {\n        reason: isUserScrollingRef.current ? 'user scrolling' : \n                isLoadingMoreRef.current ? 'loading more messages' : \n                isPaginationLoad ? 'pagination in progress' : \n                'not a new message'\n      });\n    }\n  }, [messages]);\n  \n  // Reset the scrolling flag when appropriate\n  React.useEffect(() => {\n    // If a single new message was added (not pagination), reset the user scrolling flag\n    // This allows auto-scroll to work for new messages after the user has been idle\n    if (messages.length === previousMessageCount.current + 1 && \n        !isLoadingMoreRef.current) {\n      \n      debugLog('MBA9876: Single new message detected, resetting scroll flags');\n      isUserScrollingRef.current = false;\n    }\n  }, [messages.length]);\n  \n  // iOS keyboard-specific fix for gray space\n  React.useEffect(() => {\n    if (Platform.OS === 'web') {\n      const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n      \n      if (isIOS) {\n        debugLog('MBA9876: Setting up iOS-specific keyboard fixes');\n        \n        // Create iOS-specific styles\n        const styleTag = document.createElement('style');\n        styleTag.id = 'ios-keyboard-fixes';\n        styleTag.innerHTML = `\n          /* iOS keyboard fixes */\n          body.ios-keyboard-open {\n            position: fixed;\n            width: 100%;\n            height: 100%;\n            overflow: hidden;\n          }\n          \n          .message-input-container.ios-keyboard-open {\n            position: absolute !important;\n            bottom: 0 !important;\n            left: 0 !important;\n            right: 0 !important;\n            background-color: white !important;\n            z-index: 100 !important;\n          }\n          \n          .message-container.ios-keyboard-open {\n            height: calc(100% - 60px) !important;\n            margin-bottom: 60px !important;\n            overflow-y: auto !important;\n          }\n          \n          .messagesContainer {\n            -webkit-overflow-scrolling: touch !important;\n          }\n        `;\n        document.head.appendChild(styleTag);\n        \n        // Function to handle keyboard showing\n        const handleFocusIn = (e) => {\n          if (e.target && (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA')) {\n            debugLog('MBA9876: iOS input focused');\n            \n            // Add classes for keyboard open state\n            document.body.classList.add('ios-keyboard-open');\n            \n            const inputContainer = document.querySelector('.message-input-container');\n            if (inputContainer) {\n              inputContainer.classList.add('ios-keyboard-open');\n            }\n            \n            const messageContainer = document.querySelector('.message-container');\n            if (messageContainer) {\n              messageContainer.classList.add('ios-keyboard-open');\n            }\n            \n            // Scroll the input into view\n            setTimeout(() => {\n              if (e.target) {\n                e.target.scrollIntoView(false);\n              }\n            }, 300);\n          }\n        };\n        \n        // Function to handle keyboard hiding\n        const handleFocusOut = (e) => {\n          // Only handle if we're not focusing on another input element\n          if (!e.relatedTarget || (e.relatedTarget.tagName !== 'INPUT' && e.relatedTarget.tagName !== 'TEXTAREA')) {\n            debugLog('MBA9876: iOS input blurred');\n            \n            // Remove classes for keyboard open state\n            document.body.classList.remove('ios-keyboard-open');\n            \n            const inputContainer = document.querySelector('.message-input-container');\n            if (inputContainer) {\n              inputContainer.classList.remove('ios-keyboard-open');\n            }\n            \n            const messageContainer = document.querySelector('.message-container');\n            if (messageContainer) {\n              messageContainer.classList.remove('ios-keyboard-open');\n            }\n            \n            // Fix scroll position\n            window.scrollTo(0, 0);\n          }\n        };\n        \n        // Add event listeners\n        document.addEventListener('focusin', handleFocusIn);\n        document.addEventListener('focusout', handleFocusOut);\n        \n        // Handle page visibility changes (helps with background/foreground transitions)\n        document.addEventListener('visibilitychange', () => {\n          if (document.visibilityState === 'visible') {\n            // When page becomes visible again, reset any keyboard-related classes\n            document.body.classList.remove('ios-keyboard-open');\n            \n            const inputContainer = document.querySelector('.message-input-container');\n            if (inputContainer) {\n              inputContainer.classList.remove('ios-keyboard-open');\n            }\n            \n            const messageContainer = document.querySelector('.message-container');\n            if (messageContainer) {\n              messageContainer.classList.remove('ios-keyboard-open');\n            }\n            \n            // Force scroll to top\n            window.scrollTo(0, 0);\n          }\n        });\n        \n        return () => {\n          // Clean up\n          document.removeEventListener('focusin', handleFocusIn);\n          document.removeEventListener('focusout', handleFocusOut);\n          \n          const styleElement = document.getElementById('ios-keyboard-fixes');\n          if (styleElement) {\n            styleElement.remove();\n          }\n        };\n      }\n    }\n  }, []);\n  \n  // Expose the scrollToTop method to parent components if needed\n  React.useImperativeHandle(ref, () => ({\n    scrollToTop: () => {\n      if (flatListRef.current) {\n        flatListRef.current.scrollToOffset({ offset: 0, animated: true });\n      }\n    }\n  }), []);\n  \n  // Create message groups by date\n  const messageGroups = useMemo(() => {\n    const groups = groupMessagesByDate(messages, userTimezone);\n    return groups;\n  }, [messages, userTimezone]);\n\n  // Function to get the date key from a timestamp\n  const getDateKey = useCallback((timestamp) => {\n    if (!timestamp) return null;\n    try {\n      // Properly parse the UTC timestamp first\n      const utcMoment = moment.utc(timestamp);\n      // Then convert to user's timezone\n      const localMoment = utcMoment.tz(userTimezone);\n      // Format as YYYY-MM-DD for date key\n      const dateKey = localMoment.format('YYYY-MM-DD');\n      \n      \n      return dateKey;\n    } catch (error) {\n      debugLog('MBA2349fh04h: Error getting date key', { error: error.message, timestamp });\n      return null;\n    }\n  }, [userTimezone]);\n\n  // Function to determine if a message should show a date separator\n  const shouldShowDateSeparator = useCallback((item, index) => {\n    if (!item || !item.timestamp) {\n      return false;\n    }\n    \n    // For the oldest message (last in array, top of visual list), always show date\n    if (index === messages.length - 1) {\n      return true;\n    }\n    \n    // Get the date key for current message with proper UTC to local conversion\n    const currentDateKey = getDateKey(item.timestamp);\n    if (!currentDateKey) return false;\n    \n    // For other messages, we need to check if the NEXT message (older in inverted list)\n    // has a different date - this is what determines if we need a separator\n    if (index < messages.length - 1) {\n      const nextMessage = messages[index + 1];\n      if (!nextMessage || !nextMessage.timestamp) return false;\n      \n      // Get the next message's date key with proper UTC to local conversion\n      const nextDateKey = getDateKey(nextMessage.timestamp);\n      if (!nextDateKey) return false;\n      \n      // Add detailed debug logging for important test messages\n      if (['169', '177', '85', '44'].includes(item.message_id?.toString()) || \n          ['169', '177', '85', '44'].includes(nextMessage.message_id?.toString())) {\n        // Parse the UTC timestamps properly\n        const currentUtcMoment = moment.utc(item.timestamp);\n        const nextUtcMoment = moment.utc(nextMessage.timestamp);\n        // Convert to user's timezone\n        const currentLocalMoment = currentUtcMoment.tz(userTimezone);\n        const nextLocalMoment = nextUtcMoment.tz(userTimezone);\n        \n        debugLog('MBA3oub497v4: Comparing date keys for date separator', {\n          currentId: item.message_id,\n          currentContent: item.content?.substring(0, 15),\n          nextId: nextMessage.message_id,\n          nextContent: nextMessage.content?.substring(0, 15),\n          currentTimestamp: item.timestamp,\n          nextTimestamp: nextMessage.timestamp,\n          currentUtcDate: currentUtcMoment.format('YYYY-MM-DD'),\n          currentLocalDate: currentLocalMoment.format('YYYY-MM-DD'),\n          nextUtcDate: nextUtcMoment.format('YYYY-MM-DD'),\n          nextLocalDate: nextLocalMoment.format('YYYY-MM-DD'),\n          currentDateKey,\n          nextDateKey,\n          shouldShowSeparator: currentDateKey !== nextDateKey\n        });\n      }\n      \n      // Only show date separator when the date actually changes between messages\n      // In an inverted list, the next message is the older one\n      return currentDateKey !== nextDateKey;\n    }\n    \n    return false;\n  }, [messages, getDateKey, userTimezone]);\n\n  // Enhanced renderItem function that adds date separators\n  const renderItemWithDateSeparator = useCallback(({ item, index }) => {\n    const isOldestMessage = index === messages.length - 1;\n    \n    // Debug message timestamps with proper timezone conversion\n    if (['169', '177', '85', '44'].includes(item.message_id?.toString())) {\n      // Parse the UTC timestamp properly\n      const utcMoment = moment.utc(item.timestamp);\n      // Convert to user's timezone\n      const localMoment = utcMoment.tz(userTimezone);\n      \n      debugLog('MBA3oub497v4: Message render with proper timezone', {\n        messageId: item.message_id,\n        content: item.content?.substring(0, 15),\n        timestamp: item.timestamp,\n        utcDate: utcMoment.format('YYYY-MM-DD'),\n        localDate: localMoment.format('YYYY-MM-DD'),\n        localTime: localMoment.format('h:mm A'),\n        userTimezone\n      });\n    }\n    \n    // Check if this message needs a date separator\n    const needsDateSeparator = shouldShowDateSeparator(item, index);\n    let formattedDate = null;\n    \n    if (needsDateSeparator && item.timestamp) {\n      // Parse the UTC timestamp properly\n      const utcMoment = moment.utc(item.timestamp);\n      // Convert to user's timezone\n      const localMoment = utcMoment.tz(userTimezone);\n      \n      // Add special debug for important messages\n      if (['169', '177', '85', '44'].includes(item.message_id?.toString())) {\n        debugLog('MBA3oub497v4: Formatting date for important message', {\n          messageId: item.message_id,\n          content: item.content?.substring(0, 15),\n          timestamp: item.timestamp,\n          utcDate: utcMoment.format('YYYY-MM-DD'),\n          localDate: localMoment.format('YYYY-MM-DD'),\n          needsDateSeparator\n        });\n      }\n      \n      // Get the properly formatted date for display\n      formattedDate = formatMessageDate(item.timestamp, userTimezone);\n      \n      // For the important test messages, add extra logging of the formatted date\n      if (['169', '177', '85', '44'].includes(item.message_id?.toString())) {\n        debugLog('MBA3oub497v4: Formatted date for display', {\n          messageId: item.message_id,\n          content: item.content?.substring(0, 15),\n          formattedDate,\n          timestamp: item.timestamp,\n          localDate: localMoment.format('YYYY-MM-DD')\n        });\n      }\n      \n      // Double-check the \"Today\" label accuracy with proper timezone conversion\n      if (formattedDate === 'Today') {\n        // Check if this is a test message (from 2025) or a real message\n        const isTestMessage = item.timestamp && (\n          item.timestamp.includes('2025-06-09') || \n          item.timestamp.includes('2025-06-08') || \n          item.timestamp.includes('2025-06-06')\n        );\n        \n        // Use appropriate date for comparison - fixed date for test messages, real date for others\n        const actualToday = isTestMessage \n          ? moment('2025-06-09').tz(userTimezone) \n          : moment().tz(userTimezone);\n        \n        const todayKey = actualToday.format('YYYY-MM-DD');\n        const messageKey = getDateKey(item.timestamp);\n        \n        // Compare the dates to ensure Today is shown correctly\n        debugLog('MBA3oub497v4: Today label check', {\n          messageId: item.message_id,\n          messageKey,\n          todayKey,\n          isTestMessage,\n          isActuallyToday: messageKey === todayKey,\n          formattedDate\n        });\n        \n        // If the message is not actually from the appropriate today, use the proper date format\n        if (messageKey !== todayKey) {\n          formattedDate = localMoment.format('MMMM D, YYYY');\n          \n          debugLog('MBA3oub497v4: Corrected Today label', {\n            messageId: item.message_id,\n            formattedDate,\n            messageKey,\n            todayKey,\n            isTestMessage,\n            timestamp: item.timestamp,\n            userTimezone\n          });\n        }\n      }\n    }\n    \n    // Render the message content\n    const renderedMessage = renderMessage({ item, index });\n    \n    // For special message types, add final date verification\n    if (item.type_of_message === 'send_approved_message') {\n      debugLog('MBA3oub497v4: Final date display for approval request', {\n        messageId: item.message_id,\n        needsDateSeparator,\n        formattedDate,\n        isOldestMessage\n      });\n    }\n    \n    // For hidden messages that don't render content\n    if (!renderedMessage) {\n      return needsDateSeparator && formattedDate ? (\n        <View>\n          <MessageDateSeparator date={formattedDate} />\n        </View>\n      ) : null;\n    }\n    \n    // For all messages with date separators\n    if (needsDateSeparator) {\n      // Extra debug logging for specific test messages\n      if (['169', '177', '85', '44'].includes(item.message_id?.toString())) {\n        debugLog('MBA3oub497v4: Rendering message with date separator', {\n          messageId: item.message_id,\n          content: item.content?.substring(0, 15),\n          formattedDate,\n          isOldestMessage,\n          needsDateSeparator,\n          userTimezone\n        });\n      }\n      \n      if (isOldestMessage) {\n        // For oldest message, date goes ABOVE\n        return (\n          <View>\n            {formattedDate && <MessageDateSeparator date={formattedDate} />}\n            {renderedMessage}\n          </View>\n        );\n      } else {\n        // For messages that start a new date, date goes ABOVE\n        return (\n          <View>\n            {formattedDate && <MessageDateSeparator date={formattedDate} />}\n            {renderedMessage}\n          </View>\n        );\n      }\n    } else {\n      // For messages without date separators, just render the message\n      if (['169', '177', '85', '44'].includes(item.message_id?.toString())) {\n        debugLog('MBA3oub497v4: Rendering message without date separator', {\n          messageId: item.message_id,\n          content: item.content?.substring(0, 15),\n          needsDateSeparator,\n          userTimezone\n        });\n      }\n      \n      return (\n        <View>\n          {renderedMessage}\n        </View>\n      );\n    }\n  }, [renderMessage, shouldShowDateSeparator, userTimezone, getDateKey, messages.length]);\n\n  return (\n    <FlatList\n      ref={flatListRef}\n      data={messages}\n      renderItem={renderItemWithDateSeparator}\n      keyExtractor={keyExtractor}\n      style={[styles.messageList, { minHeight: '100%' }]}\n      onEndReached={handleEndReached}\n      onEndReachedThreshold={0.5} // Increased to 0.5 to trigger pagination earlier\n      scrollEventThrottle={8} // More frequent scroll events for better detection\n      onScroll={handleScroll}\n      onViewableItemsChanged={onViewableItemsChangedRef.current}\n      viewabilityConfig={viewabilityConfigRef.current}\n      onScrollBeginDrag={onScrollBeginDragRef.current}\n      onMomentumScrollEnd={onMomentumScrollEndRef.current}\n      inverted={true}\n      maintainVisibleContentPosition={{\n        minIndexForVisible: 0,\n        autoscrollToTopThreshold: 10\n      }}\n      contentContainerStyle={{\n        flexGrow: 1,\n        justifyContent: 'flex-end',\n        paddingTop: extraPadding, // Much larger padding for web\n      }}\n      ListFooterComponent={isLoadingMore && (\n        <ActivityIndicator \n          size=\"small\" \n          color={theme.colors.primary}\n          style={styles.loadingMore}\n        />\n      )}\n      initialNumToRender={20}\n      maxToRenderPerBatch={10}\n      windowSize={15}\n      removeClippedSubviews={false}\n      className={className || \"message-list-component\"}\n    />\n  );\n});\n\nexport default MessageList; ","import React from 'react';\nimport { View, Image } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport { getMediaUrl } from '../../config/config';\n\n/**\n * ProfilePhoto component for displaying user profile pictures consistently\n * \n * @param {Object} props - Component props\n * @param {string} props.profilePicture - URL of the profile picture\n * @param {Object} props.style - Style object to override default styles\n * @param {number} props.size - Size of the profile photo (defaults to 40)\n * @param {string} props.fallbackIconName - Name of the MaterialCommunityIcons icon to use as fallback (defaults to \"account\")\n * @param {number} props.fallbackIconSize - Size of the fallback icon (defaults to 24)\n * @param {string} props.testID - Test ID for testing (optional)\n */\nconst ProfilePhoto = ({ \n  profilePicture, \n  style = {}, \n  size = 40, \n  fallbackIconName = \"account\",\n  fallbackIconSize = 24,\n  testID\n}) => {\n  // Calculate styles based on size\n  const containerStyle = {\n    width: size,\n    height: size,\n    borderRadius: size / 2,\n    ...style\n  };\n  \n  // If profile picture is provided, render it\n  if (profilePicture) {\n    return (\n      <Image\n        source={{ uri: getMediaUrl(profilePicture) }}\n        style={containerStyle}\n        testID={testID}\n      />\n    );\n  }\n  \n  // Otherwise render fallback icon\n  return (\n    <View style={{\n      ...containerStyle,\n      backgroundColor: theme.colors.background,\n      justifyContent: 'center',\n      alignItems: 'center',\n    }}\n    testID={testID || 'profile-photo-fallback'}\n    >\n      <MaterialCommunityIcons \n        name={fallbackIconName} \n        size={fallbackIconSize} \n        color={theme.colors.primary} \n      />\n    </View>\n  );\n};\n\nexport default ProfilePhoto; ","import React, { useEffect } from 'react';\nimport { View, Text, TouchableOpacity, TextInput } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { debugLog } from '../../context/AuthContext';\nimport { theme } from '../../styles/theme';\nimport ProfilePhoto from './ProfilePhoto';\n\nconst ConversationList = ({\n  conversations,\n  selectedConversation,\n  onSelectConversation,\n  searchQuery,\n  onSearchChange,\n  styles,\n  CURRENT_USER_ID,\n  getConversationUnreadCount,\n  markConversationAsRead\n}) => {\n  // Add logging on initial render to check what props we're receiving\n  useEffect(() => {\n    debugLog('MBA2o3uihf48hv: ConversationList component mounted', {\n      conversationsCount: conversations?.length || 0,\n      selectedConversation,\n      hasGetConversationUnreadCount: !!getConversationUnreadCount,\n      hasMarkConversationAsRead: !!markConversationAsRead\n    });\n\n    // Log unread counts for each conversation\n    if (getConversationUnreadCount && conversations?.length > 0) {\n      const conversationUnreadCounts = conversations.map(conv => ({\n        conversationId: conv.conversation_id,\n        unreadCount: getConversationUnreadCount(String(conv.conversation_id))\n      }));\n      \n      debugLog('MBA2o3uihf48hv: Current conversation unread counts', {\n        conversationUnreadCounts\n      });\n    }\n  }, [conversations, selectedConversation, getConversationUnreadCount, markConversationAsRead]);\n\n  return (\n    <View style={styles.conversationListContainer}>\n      <View style={styles.searchContainer}>\n        <View style={styles.searchInputContainer}>\n          <MaterialCommunityIcons \n            name=\"magnify\" \n            size={20} \n            color={theme.colors.placeholder}\n            style={styles.searchIcon}\n          />\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search conversations...\"\n            placeholderTextColor={theme.colors.placeholder}\n            value={searchQuery}\n            onChangeText={onSearchChange}\n          />\n          {searchQuery.length > 0 && (\n            <TouchableOpacity \n              style={styles.clearButton}\n              onPress={() => onSearchChange('')}\n            >\n              <MaterialCommunityIcons \n                name=\"close-circle\" \n                size={16} \n                color={theme.colors.placeholder}\n              />\n            </TouchableOpacity>\n          )}\n        </View>\n      </View>\n\n      {conversations.map((conv) => {\n        const otherParticipantName = conv.participant1_id === CURRENT_USER_ID ? \n          conv.participant2_name : conv.participant1_name;\n        \n        const isSelected = String(conv.conversation_id) === String(selectedConversation);\n        const unreadCount = getConversationUnreadCount ? \n          getConversationUnreadCount(String(conv.conversation_id)) : 0;\n        \n        // Log details about each conversation's unread state for debugging\n        if (unreadCount > 0) {\n          debugLog(`MBA2o3uihf48hv: Conversation ${conv.conversation_id} has ${unreadCount} unread messages`, {\n            conversationId: conv.conversation_id,\n            unreadCount,\n            isSelected,\n            convUnreadFlag: conv.unread,\n            name: otherParticipantName\n          });\n        }\n        \n        return (\n          <TouchableOpacity\n            key={conv.conversation_id}\n            style={[\n              styles.conversationItem,\n              isSelected && styles.selectedConversation\n            ]}\n            onPress={() => {\n              debugLog(`MBA2o3uihf48hv: Conversation ${conv.conversation_id} clicked`, {\n                previouslySelected: isSelected,\n                unreadCount,\n                willCallMarkAsRead: markConversationAsRead && unreadCount > 0\n              });\n              \n              // Set the selected conversation in the global variable immediately\n              if (typeof window !== 'undefined') {\n                window.selectedConversationId = conv.conversation_id;\n              }\n              \n              // First mark as read if needed, before changing selection\n              if (markConversationAsRead && unreadCount > 0) {\n                debugLog(`MBA2o3uihf48hv: Marking conversation ${conv.conversation_id} as read when clicked`, {\n                  unreadCount\n                });\n                \n                try {\n                  // Call markConversationAsRead first to clear notifications\n                  markConversationAsRead(conv.conversation_id);\n                  \n                  // Send explicit command to parent to reset message refs\n                  debugLog(`MBA2o3uihf48hv: Forcing message state reset for conversation`, {\n                    conversationId: conv.conversation_id,\n                    hasUnread: unreadCount > 0\n                  });\n                  \n                  // Use a custom data attribute to tell MessageHistory to force refresh\n                  onSelectConversation(conv.conversation_id, { forceRefresh: true });\n                } catch (error) {\n                  debugLog(`MBA2o3uihf48hv: Error marking conversation as read`, {\n                    error: error.message\n                  });\n                  // Still select the conversation even if marking as read fails\n                  onSelectConversation(conv.conversation_id, { forceRefresh: true });\n                }\n              } else {\n                // If no unread messages, just update selection\n                // Still pass forceRefresh: true to ensure messages are loaded\n                onSelectConversation(conv.conversation_id, { forceRefresh: true });\n              }\n            }}\n          >\n            <ProfilePhoto \n              profilePicture={conv.profile_picture}\n              style={styles.conversationProfilePhoto}\n            />\n            \n            <View style={styles.conversationContent}>\n              <View style={styles.conversationHeader}>\n                <View style={{ flexDirection: 'row', alignItems: 'center', flex: 1 }}>\n                  <Text style={styles.conversationName}>\n                    {otherParticipantName || conv.name || conv.other_user_name || 'Unknown'}\n                  </Text>\n                </View>\n                \n                <Text style={styles.conversationTime}>\n                  {new Date(conv.last_message_time).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}\n                </Text>\n              </View>\n              \n              <View style={styles.conversationLastMessageContainer}>\n                <Text \n                  style={[\n                    styles.conversationLastMessage,\n                    isSelected && styles.activeConversationText,\n                    (conv.unread || unreadCount > 0) && !isSelected && styles.unreadMessage\n                  ]} \n                  numberOfLines={1}\n                >\n                  {conv.last_message}\n                </Text>\n                \n                {/* Make sure unread indicator is shown when unreadCount > 0 */}\n                {unreadCount > 0 && !isSelected && (\n                  <View style={styles.unreadBadge}>\n                    <Text style={styles.unreadBadgeText}>{unreadCount}</Text>\n                  </View>\n                )}\n              </View>\n              \n              {conv.bookingStatus && (\n                <View style={[\n                  styles.bookingStatusContainer,\n                  styles[`booking${conv.bookingStatus}Status`] || styles.bookingPendingStatus\n                ]}>\n                  <Text style={styles.bookingStatus}>\n                    {conv.bookingStatus}\n                  </Text>\n                </View>\n              )}\n            </View>\n          </TouchableOpacity>\n        );\n      })}\n    </View>\n  );\n};\n\nexport default ConversationList; ","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { View, TextInput, TouchableOpacity, Text, Platform, Image, ActivityIndicator, Alert, ScrollView } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport * as ImagePicker from 'expo-image-picker';\nimport { uploadAndSendImageMessage } from '../../api/API';\nimport { debugLog } from '../../context/AuthContext';\nimport { validateMessage, sanitizeInput } from '../../validation/validation';\n\nconst MessageInput = React.forwardRef(({ \n  onSendMessage, \n  onShowDropdown,\n  showDropdown,\n  styles,\n  screenWidth,\n  selectedConversation,\n  onScrollStart // New prop to handle scroll start events\n}, ref) => {\n  const [messageContent, setMessageContent] = useState('');\n  const [selectedImages, setSelectedImages] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const textInputRef = useRef(null);\n  const defaultHeight = 40; // Define constant for default height\n\n  // Function to dismiss keyboard - can be called from parent\n  const dismissKeyboard = useCallback(() => {\n    if (Platform.OS === 'web') {\n      // On web, blur the active element if it's an input\n      if (document.activeElement && \n          (document.activeElement.tagName === 'INPUT' || \n           document.activeElement.tagName === 'TEXTAREA')) {\n        debugLog('MBA8765: Dismissing keyboard by blurring active element');\n        document.activeElement.blur();\n      }\n      \n      // Also blur our specific input ref if it exists\n      if (textInputRef.current) {\n        textInputRef.current.blur();\n      }\n    } else {\n      // On native platforms, blur the ref\n      if (textInputRef.current) {\n        textInputRef.current.blur();\n      }\n    }\n  }, []);\n\n  // Handle scroll start event to dismiss keyboard on mobile browsers with delay\n  useEffect(() => {\n    if (onScrollStart && Platform.OS === 'web') {\n      let scrollTimeout = null;\n      \n      // Set up the scroll start handler with delay\n      const handleScrollStart = () => {\n        // Only dismiss keyboard on mobile browsers (viewport width <= 900)\n        if (screenWidth <= 900) {\n          // Clear any existing timeout\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          \n          // Add a small delay before dismissing keyboard\n          scrollTimeout = setTimeout(() => {\n            debugLog('MBA8765: Scroll started on mobile browser, dismissing keyboard after delay');\n            dismissKeyboard();\n          }, 100);\n        }\n      };\n\n      // Call the onScrollStart prop with our handler\n      onScrollStart(handleScrollStart);\n      \n      // Cleanup timeout on unmount\n      return () => {\n        if (scrollTimeout) {\n          clearTimeout(scrollTimeout);\n        }\n      };\n    }\n  }, [onScrollStart, screenWidth, dismissKeyboard]);\n\n  // Expose dismissKeyboard function to parent component\n  React.useImperativeHandle(ref, () => ({\n    dismissKeyboard\n  }), [dismissKeyboard]);\n\n  const resetInputHeight = useCallback(() => {\n    if (Platform.OS === 'web' && textInputRef.current) {\n      textInputRef.current.style.height = 'auto';\n      textInputRef.current.style.height = `${defaultHeight}px`; // Reset to default height\n    }\n  }, []);\n\n  // Set initial height when component mounts\n  useEffect(() => {\n    if (Platform.OS === 'web' && textInputRef.current) {\n      textInputRef.current.style.height = `${defaultHeight}px`;\n    }\n  }, []);\n\n  // Function to handle image selection\n  const pickImage = useCallback(async () => {\n    try {\n      // Close the dropdown\n      onShowDropdown(false);\n      \n      // Request permissions\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          debugLog('MBA5678: Permission to access media library was denied');\n          return;\n        }\n      }\n      \n      // Launch image picker with allowsMultipleSelection enabled\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false, // Disable editing to support multiple selection\n        aspect: [4, 3],\n        quality: 0.8,\n        base64: Platform.OS === 'web',\n        allowsMultipleSelection: true, // Enable multiple image selection\n      });\n      \n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        debugLog('MBA5678: Images selected:', {\n          count: result.assets.length,\n          details: result.assets.map(asset => ({\n            uri: asset.uri,\n            type: asset.type,\n            fileName: asset.fileName,\n            fileSize: asset.fileSize\n          }))\n        });\n        \n        // Add the selected images to our existing array\n        setSelectedImages(prevImages => [...prevImages, ...result.assets]);\n      }\n    } catch (error) {\n      debugLog('MBA5678: Error picking images:', error);\n    }\n  }, [onShowDropdown]);\n  \n  // This function is no longer needed as we're using the direct uploadAndSendImageMessage\n  // Keeping as a reference\n  /*\n  const uploadImages = useCallback(async (images, conversationId) => {\n    if (!images || !images.length || !conversationId) return [];\n    \n    try {\n      setIsUploading(true);\n      \n      const uploadPromises = images.map(async (image) => {\n        let imageData;\n        if (Platform.OS === 'web') {\n          // For web, use the base64 data directly\n          imageData = image.base64 ? `data:image/jpeg;base64,${image.base64}` : image.uri;\n        } else {\n          // For native, use the file URI\n          imageData = {\n            uri: image.uri,\n            type: 'image/jpeg',\n            name: image.fileName || 'photo.jpg'\n          };\n        }\n        \n        // Upload the image to the server\n        const response = await uploadMessageImage(conversationId, imageData);\n        \n        debugLog('MBA5678: Image uploaded successfully:', response);\n        \n        return response.message_id;\n      });\n      \n      // Wait for all uploads to complete\n      const messageIds = await Promise.all(uploadPromises);\n      \n      debugLog('MBA5678: All images uploaded successfully:', messageIds);\n      \n      setIsUploading(false);\n      return messageIds;\n    } catch (error) {\n      setIsUploading(false);\n      debugLog('MBA5678: Error uploading images:', error);\n      return [];\n    }\n  }, []);\n  */\n  \n  // Function to clear all selected images\n  const clearAllImages = useCallback(() => {\n    setSelectedImages([]);\n  }, []);\n\n  // Function to remove a single image\n  const removeImage = useCallback((index) => {\n    setSelectedImages(prevImages => prevImages.filter((_, i) => i !== index));\n  }, []);\n\n  const handleSend = useCallback(async () => {\n    try {\n      // Only continue if we have images or text to send\n      if (selectedImages.length === 0 && !messageContent.trim()) {\n        return;\n      }\n      \n      // Validate and sanitize message content if there's text\n      let validatedMessage = '';\n      if (messageContent.trim()) {\n        const validation = validateMessage(messageContent, { \n          maxLength: 5000, \n          allowEmpty: selectedImages.length > 0 // Allow empty if we have images\n        });\n        \n        if (!validation.isValid) {\n          debugLog('MBA5511: Message validation failed:', validation.message);\n          Alert.alert('Invalid Message', validation.message);\n          return;\n        }\n        \n        validatedMessage = validation.sanitizedInput;\n        debugLog('MBA5511: Message validated and sanitized', {\n          original: messageContent,\n          sanitized: validatedMessage,\n          lengthDiff: messageContent.length - validatedMessage.length\n        });\n      }\n      \n      setIsUploading(true);\n      debugLog('MBA5511: Message sending started - showing loading indicator');\n      \n      // Send normal text message if there are no images\n      if (selectedImages.length === 0 && validatedMessage) {\n        await onSendMessage(validatedMessage, []);\n      } \n      // Send image message with or without caption\n      else if (selectedImages.length > 0 && selectedConversation) {\n        try {\n          // Check image sizes before attempting to upload\n          const totalSize = selectedImages.reduce((sum, img) => {\n            // For base64 images, estimate size\n            if (img.base64) {\n              // base64 size is roughly 4/3 of the raw data\n              return sum + (img.base64.length * 0.75);\n            }\n            // For files with size property\n            else if (img.size) {\n              return sum + img.size;\n            }\n            // Default estimation\n            return sum + 1000000; // Assume 1MB if unknown\n          }, 0);\n          \n          debugLog('MBA5511: Total estimated image size before compression:', {\n            totalSizeBytes: totalSize,\n            totalSizeMB: (totalSize / (1024 * 1024)).toFixed(2) + 'MB',\n            imageCount: selectedImages.length\n          });\n          \n          // Warn if total size is large\n          if (totalSize > 4 * 1024 * 1024) { // 4MB warning threshold\n            debugLog('MBA5511: Large image upload detected, compression will be applied');\n          }\n          \n          // Use the direct uploadAndSend function that handles everything in one call\n          // and returns a ready-to-display message object\n          const messageObject = await uploadAndSendImageMessage(\n            selectedConversation, \n            selectedImages, \n            validatedMessage // Use the validated and sanitized message\n          );\n          \n          // Add the message to the message list immediately\n          // Pass true as the fourth parameter to indicate this message is already sent\n          // and doesn't need another API call\n          onSendMessage(messageObject.content, [], messageObject, true);\n          \n          debugLog('MBA5511: Image message sent and added to UI:', {\n            messageId: messageObject.message_id,\n            imageCount: selectedImages.length,\n            hasCaption: !!validatedMessage,\n            captionText: validatedMessage,\n            messageObjectContent: messageObject.content\n          });\n        } catch (error) {\n          debugLog('MBA5511: Failed to send image message', error);\n          \n          // More descriptive error message based on the error\n          let errorMessage = 'Failed to upload images. Please try again.';\n          \n          if (error.message && error.message.includes('Network Error')) {\n            errorMessage = 'Network error occurred. Please check your connection and try again.';\n          }\n          \n          if (error.response) {\n            // Server responded with an error\n            if (error.response.status === 413) {\n              errorMessage = 'The image is too large to upload. Please select a smaller image or use fewer images.';\n            } else if (error.response.data && error.response.data.error) {\n              errorMessage = error.response.data.error;\n            }\n          }\n          \n          Alert.alert('Error', errorMessage);\n          setIsUploading(false);\n          return;\n        }\n      }\n      \n      // Reset all states\n      setMessageContent('');\n      setSelectedImages([]);\n      setIsUploading(false);\n      debugLog('MBA5511: Message sending complete - hiding loading indicator');\n      \n      if (textInputRef.current) {\n        textInputRef.current.clear();\n        resetInputHeight(); // Reset height after sending\n        \n        // Keep focus on the input after sending\n        setTimeout(() => {\n          if (textInputRef.current) {\n            debugLog('MBA9876: Refocusing input after send');\n            textInputRef.current.focus();\n          }\n        }, 0);\n      }\n    } catch (error) {\n      setIsUploading(false);\n      debugLog('MBA5511: Error in handleSend, loading indicator stopped:', error);\n    }\n  }, [messageContent, onSendMessage, resetInputHeight, selectedImages, selectedConversation]);\n\n  const adjustHeight = useCallback(() => {\n    if (Platform.OS === 'web' && textInputRef.current) {\n      // Only adjust height if content requires more space than default\n      // Add a 10px buffer to prevent premature expansion\n      const scrollHeight = textInputRef.current.scrollHeight;      \n      if (scrollHeight > defaultHeight + 10) {\n        const newHeight = Math.min(scrollHeight, 120);\n        textInputRef.current.style.height = `${newHeight}px`;\n      } else {\n        textInputRef.current.style.height = `${defaultHeight}px`;\n      }\n    }\n  }, []);\n\n  const handleChange = useCallback((text) => {\n    // Don't apply real-time sanitization during typing - this interferes with user experience\n    // Sanitization will happen at send time in handleSend function\n    \n    // Only block extremely dangerous content in real-time\n    const hasScriptTags = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi.test(text);\n    const hasSqlInjection = /\\b(SELECT|INSERT|UPDATE|DELETE|DROP|CREATE|ALTER|EXEC|UNION|SCRIPT|JAVASCRIPT|VBSCRIPT)\\b/gi.test(text);\n    \n    if (hasScriptTags || hasSqlInjection) {\n      debugLog('MBA5511: Dangerous content detected and blocked in real-time:', text);\n      return; // Don't update the input if it contains dangerous content\n    }\n    \n    // Allow normal typing with spaces, punctuation, etc.\n    setMessageContent(text);\n    if (Platform.OS === 'web') {\n      adjustHeight();\n    }\n  }, [adjustHeight]);\n\n  const handleKeyPress = useCallback((e) => {\n    if (Platform.OS === 'web' && e.nativeEvent.key === 'Enter' && !e.nativeEvent.shiftKey) {\n      e.preventDefault();\n      handleSend();\n    }\n  }, [handleSend]);\n\n  return (\n    <View style={styles.inputSection} className=\"message-input-container\">\n      <View style={styles.inputContainerOuter}>\n        {/* Selected images preview - ABOVE the input and buttons */}\n        {selectedImages.length > 0 && (\n          <View style={styles.selectedImagesWrapper}>\n            <ScrollView \n              horizontal={true} \n              style={styles.selectedImagesScrollView}\n              contentContainerStyle={styles.selectedImagesContainer}\n            >\n              {selectedImages.map((image, index) => (\n                <View key={`${image.uri}-${index}`} style={styles.selectedImageContainer}>\n                  <Image \n                    source={{ uri: image.uri }} \n                    style={styles.selectedImagePreview} \n                  />\n                  <TouchableOpacity \n                    style={styles.removeImageButton}\n                    onPress={() => removeImage(index)}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"close-circle\" \n                      size={20} \n                      color={theme.colors.error} \n                    />\n                  </TouchableOpacity>\n                </View>\n              ))}\n            </ScrollView>\n            {isUploading && (\n              <View style={styles.uploadingOverlay}>\n                <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n              </View>\n            )}\n          </View>\n        )}\n        \n        <View style={styles.inputContainer}>\n          <View style={styles.attachButtonContainer}>\n            <TouchableOpacity \n              style={styles.attachButton}\n              onPress={() => onShowDropdown(!showDropdown)}\n            >\n              <MaterialCommunityIcons \n                name={showDropdown ? \"close\" : \"plus\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            {showDropdown && (\n              <View style={styles.dropdownMenu}>\n                <TouchableOpacity \n                  style={styles.dropdownItem}\n                  onPress={pickImage}\n                >\n                  <MaterialCommunityIcons \n                    name=\"image\" \n                    size={20} \n                    color={theme.colors.primary} \n                  />\n                  <Text style={[styles.dropdownText, { color: theme.colors.text }]}>\n                    Add Images\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n                    </View>\n          \n          <View style={styles.inputInnerContainer}>\n            <TextInput\n              ref={textInputRef}\n              style={[\n                styles.textInput,\n                Platform.OS === 'web' && { \n                  maxHeight: 120,\n                  minHeight: defaultHeight,\n                  fontSize: 22 // Increased font size\n                }\n              ]}\n              placeholder={selectedImages.length > 0 ? \"Add a caption...\" : \"Type a Message...\"}\n              placeholderTextColor={theme.colors.placeholder}\n              value={messageContent}\n              onChangeText={handleChange}\n              multiline={true}\n              onKeyPress={Platform.OS === 'web' ? handleKeyPress : undefined}\n            />\n            \n            <TouchableOpacity \n              style={[\n                styles.sendButton,\n                messageContent.trim() || selectedImages.length > 0 ? \n                  {...styles.sendButtonActive, backgroundColor: theme.colors.primary} : \n                  styles.sendButtonInactive\n              ]}\n              onPress={handleSend}\n              disabled={!messageContent.trim() && selectedImages.length === 0 || isUploading}\n            >\n              {isUploading ? (\n                <ActivityIndicator \n                  size=\"small\" \n                  color={theme.colors.surfaceContrast || 'white'} \n                />\n              ) : (\n                <MaterialCommunityIcons \n                  name=\"send\" \n                  size={20} \n                  color={(messageContent.trim() || selectedImages.length > 0) ? (theme.colors.surfaceContrast || 'white') : theme.colors.surfaceContrast}\n                />\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n});\n\nexport default MessageInput; ","import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, Image, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../../styles/theme';\nimport ProfilePhoto from './ProfilePhoto';\n\nconst MessageHeader = ({\n  selectedConversationData,\n  hasDraft,\n  draftData,\n  onEditDraft,\n  onBackPress,\n  styles,\n  isMobile = false,\n  onCreateBooking,\n  onViewPets\n}) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef(null);\n  const buttonRef = useRef(null);\n  \n  // Only show dropdown button for professionals\n  const showDropdownButton = selectedConversationData?.is_professional;\n  \n  // Handle outside clicks to close dropdown\n  useEffect(() => {\n    if (Platform.OS === 'web' && showDropdown) {\n      const handleClickOutside = (event) => {\n        // Check if click is outside both the dropdown and the button that opens it\n        if (\n          dropdownRef.current && \n          !dropdownRef.current.contains(event.target) &&\n          buttonRef.current &&\n          !buttonRef.current.contains(event.target)\n        ) {\n          setShowDropdown(false);\n        }\n      };\n      \n      // Add event listener\n      document.addEventListener('mousedown', handleClickOutside);\n      \n      // Clean up\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [showDropdown]);\n  \n  if (isMobile) {\n    return (\n      <View style={[\n        styles.mobileHeader,\n        { backgroundColor: theme.colors.surfaceContrast }\n      ]}>\n        <View style={styles.mobileHeaderContent}>\n          <TouchableOpacity \n            style={styles.backArrow}\n            onPress={onBackPress}\n          >\n            <MaterialCommunityIcons \n              name=\"arrow-left\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n          \n          <View style={styles.mobileHeaderNameContainer}>\n            {/* Profile picture circle centered above the name */}\n            <View style={[styles.mobileProfilePhotoContainer, { alignSelf: 'center' }]}>\n              <ProfilePhoto \n                profilePicture={selectedConversationData?.profile_picture}\n                size={60}\n                fallbackIconSize={30}\n                style={styles.mobileProfilePhoto}\n              />\n            </View>\n            <Text style={[styles.mobileHeaderName, { textAlign: 'center', fontSize: 16 }]}>\n              {selectedConversationData?.name || selectedConversationData?.other_user_name}\n            </Text>\n          </View>\n          \n          {/* Add dropdown button for mobile */}\n          {showDropdownButton && (\n            <TouchableOpacity \n              ref={buttonRef}\n              style={[styles.backArrow, { right: 16, left: 'auto' }]}\n              onPress={() => setShowDropdown(!showDropdown)}\n            >\n              <MaterialCommunityIcons \n                name={showDropdown ? \"chevron-up\" : \"chevron-down\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n          )}\n          \n          {/* Add dropdown menu for mobile */}\n          {showDropdown && showDropdownButton && (\n            <View \n              ref={dropdownRef}\n              style={[styles.headerDropdownMenu, { top: '100%', width: '90%', alignSelf: 'center', right: 16 }]}\n            >\n              <TouchableOpacity \n                style={styles.headerDropdownItem}\n                onPress={() => {\n                  setShowDropdown(false);\n                  onCreateBooking && onCreateBooking();\n                }}\n              >\n                <MaterialCommunityIcons \n                  name=\"calendar-plus\" \n                  size={20} \n                  color={theme.colors.primary} \n                />\n                <Text style={styles.headerDropdownText}>\n                  Create Booking\n                </Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity \n                style={styles.headerDropdownItem}\n                onPress={() => {\n                  setShowDropdown(false);\n                  onViewPets && onViewPets();\n                }}\n              >\n                <MaterialCommunityIcons \n                  name=\"paw\" \n                  size={20} \n                  color={theme.colors.primary} \n                />\n                <Text style={styles.headerDropdownText}>\n                  View Profile\n                </Text>\n              </TouchableOpacity>\n              \n              {/* Add Edit Draft to dropdown */}\n              {hasDraft && draftData?.draft_id && (\n                <TouchableOpacity \n                  style={styles.headerDropdownItem}\n                  onPress={() => {\n                    setShowDropdown(false);\n                    onEditDraft && onEditDraft(draftData.draft_id);\n                  }}\n                >\n                  <MaterialCommunityIcons \n                    name=\"pencil\" \n                    size={20} \n                    color={theme.colors.primary} \n                  />\n                  <Text style={styles.headerDropdownText}>\n                    Edit Draft\n                  </Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          )}\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.messageHeader}>\n      <View style={styles.messageHeaderContent}>\n        <ProfilePhoto \n          profilePicture={selectedConversationData?.profile_picture} \n          style={styles.profilePhoto}\n        />\n        <Text style={styles.messageHeaderName}>\n          {selectedConversationData?.other_user_name}\n        </Text>\n        \n        {/* Add dropdown button for desktop */}\n        {showDropdownButton && (\n          <TouchableOpacity \n            ref={buttonRef}\n            style={{ marginLeft: 'auto' }}\n            onPress={() => setShowDropdown(!showDropdown)}\n          >\n            {/* <Text style={styles.headerDropdownButtonText}>Options</Text> */}\n            <MaterialCommunityIcons \n              name={showDropdown ? \"chevron-up\" : \"chevron-down\"} \n              size={20} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        )}\n        \n        {/* Add dropdown menu for desktop */}\n        {showDropdown && showDropdownButton && (\n          <View \n            ref={dropdownRef}\n            style={styles.headerDropdownMenu}\n          >\n            <TouchableOpacity \n              style={styles.headerDropdownItem}\n              onPress={() => {\n                setShowDropdown(false);\n                onCreateBooking && onCreateBooking();\n              }}\n            >\n              <MaterialCommunityIcons \n                name=\"calendar-plus\" \n                size={20} \n                color={theme.colors.primary} \n              />\n              <Text style={styles.headerDropdownText}>\n                Create Booking\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n              style={styles.headerDropdownItem}\n              onPress={() => {\n                setShowDropdown(false);\n                onViewPets && onViewPets();\n              }}\n            >\n              <MaterialCommunityIcons \n                name=\"paw\" \n                size={20} \n                color={theme.colors.primary} \n              />\n              <Text style={styles.headerDropdownText}>\n                View Profile\n              </Text>\n            </TouchableOpacity>\n            \n            {/* Add Edit Draft to dropdown */}\n            {hasDraft && draftData?.draft_id && (\n              <TouchableOpacity \n                style={styles.headerDropdownItem}\n                onPress={() => {\n                  setShowDropdown(false);\n                  onEditDraft && onEditDraft(draftData.draft_id);\n                }}\n              >\n                <MaterialCommunityIcons \n                  name=\"pencil\" \n                  size={20} \n                  color={theme.colors.primary} \n                />\n                <Text style={styles.headerDropdownText}>\n                  Edit Draft\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nexport default MessageHeader; ","import React from 'react';\nimport { View, Text, Modal, TouchableOpacity, ScrollView, StyleSheet, ActivityIndicator, Image } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { formatFromUTC } from '../utils/time_utils';\nimport { debugLog } from '../context/AuthContext';\nimport { getMediaUrl } from '../config/config';\n\nconst ReviewsModal = ({ visible, onClose, reviews, averageRating, reviewCount, userName, forProfessional }) => {\n  // Format date for display\n  const formatReviewDate = (dateString) => {\n    try {\n      return formatFromUTC(dateString);\n    } catch (error) {\n      debugLog('MBA6789', 'Error formatting review date:', error);\n      return dateString;\n    }\n  };\n\n  // Render stars based on rating\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <MaterialCommunityIcons\n          key={i}\n          name={i <= rating ? \"star\" : \"star-outline\"}\n          size={16}\n          color={theme.colors.warning}\n          style={styles.starIcon}\n        />\n      );\n    }\n    return <View style={styles.starsContainer}>{stars}</View>;\n  };\n\n  // Render profile picture or default icon\n  const renderProfilePicture = (profilePicture) => {\n    if (profilePicture) {\n      const imageUrl = getMediaUrl(profilePicture);\n      return (\n        <Image \n          source={{ uri: imageUrl }} \n          style={styles.profileImage} \n          resizeMode=\"cover\"\n        />\n      );\n    } else {\n      return (\n        <View style={styles.defaultProfileImage}>\n          <MaterialCommunityIcons \n            name=\"account\" \n            size={32} \n            color={theme.colors.surface} \n          />\n        </View>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      onRequestClose={onClose}\n      animationType=\"slide\"\n      transparent={true}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContainer}>\n          {/* Header */}\n          <View style={styles.header}>\n            <View style={styles.headerContent}>\n              <Text style={styles.headerTitle}>Reviews for {userName}</Text>\n              <View style={styles.ratingContainer}>\n                <MaterialCommunityIcons name=\"star\" size={20} color={theme.colors.warning} />\n                <Text style={styles.ratingText}>{averageRating.toFixed(2)}</Text>\n                <Text style={styles.reviewCountText}>({reviewCount} {reviewCount === 1 ? 'Review' : 'Reviews'})</Text>\n              </View>\n            </View>\n            <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n              <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n\n          {/* Reviews List */}\n          {reviews.length === 0 ? (\n            <View style={styles.emptyStateContainer}>\n              <MaterialCommunityIcons name=\"star-outline\" size={60} color={theme.colors.placeholder} />\n              <Text style={styles.emptyStateText}>No reviews yet</Text>\n            </View>\n          ) : (\n            <ScrollView style={styles.reviewsList} contentContainerStyle={styles.reviewsContent}>\n              {[...reviews].sort((a, b) => b.rating - a.rating).map((review) => (\n                <View key={review.id} style={styles.reviewCard}>\n                  <View style={styles.reviewUserInfo}>\n                    <View style={styles.profileContainer}>\n                      {renderProfilePicture(review.reviewer_profile_picture)}\n                    </View>\n                    <View style={styles.reviewUserDetails}>\n                      <View style={styles.nameAndStarsRow}>\n                        <Text style={styles.reviewerName}>{forProfessional ? review.client_name : review.professional_name || 'Anonymous'}</Text>\n                        {renderStars(review.rating)}\n                      </View>\n                      <View style={styles.serviceRow}>\n                        <MaterialCommunityIcons name=\"briefcase-outline\" size={14} color={theme.colors.textSecondary} style={styles.calendarIcon} />\n                        <Text style={styles.serviceName}>{review.service_name || 'No Service Found'}</Text>\n                        <Text style={styles.serviceName}>•</Text>\n                        <MaterialCommunityIcons name=\"calendar\" size={14} color={theme.colors.textSecondary} style={styles.calendarIcon} />\n                        <Text style={styles.serviceInfoText}>\n                          {review.last_occurrence_end_date || review.created_at}\n                        </Text>\n                      </View>\n                      <Text style={styles.reviewText}>{review.review_text || 'No comments provided.'}</Text>\n                    </View>\n                  </View>\n                </View>\n              ))}\n            </ScrollView>\n          )}\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 600,\n    maxHeight: '90%',\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerContent: {\n    flex: 1,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 8,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  ratingText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginLeft: 4,\n    marginRight: 8,\n  },\n  reviewCountText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  reviewsList: {\n    flex: 1,\n  },\n  reviewsContent: {\n    padding: 16,\n  },\n  reviewCard: {\n    padding: 16,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  reviewUserInfo: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  profileContainer: {\n    marginRight: 16,\n  },\n  profileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n  },\n  defaultProfileImage: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewUserDetails: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  nameAndStarsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  reviewerName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginRight: 8,\n  },\n  starsContainer: {\n    flexDirection: 'row',\n  },\n  starIcon: {\n    marginRight: 2,\n  },\n  serviceRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  serviceName: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 8,\n  },\n  calendarIcon: {\n    marginRight: 4,\n  },\n  serviceInfoText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  reviewText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    lineHeight: 20,\n    marginTop: 8,\n  },\n  emptyStateContainer: {\n    padding: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emptyStateText: {\n    fontSize: 16,\n    color: theme.colors.textSecondary,\n    marginTop: 16,\n  },\n});\n\nexport default ReviewsModal; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, Modal, TouchableOpacity, ScrollView, StyleSheet, ActivityIndicator, Dimensions, Alert, Image } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { getClientPets, getUserReviews } from '../api/API';\nimport { getMediaUrl } from '../config/config';\nimport { AuthContext, debugLog, is_professional } from '../context/AuthContext';\nimport ReviewsModal from './ReviewsModal';\n\nconst ClientPetsModal = ({ visible, onClose, conversation, otherUserName, onCreateBooking, otherUserProfilePhoto }) => {\n  const [pets, setPets] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [averageRating, setAverageRating] = useState(0);\n  const [reviewCount, setReviewCount] = useState(0);\n  const [selectedPet, setSelectedPet] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [mobileView, setMobileView] = useState('pets'); // 'pets' or 'details'\n  const [showReviewsModal, setShowReviewsModal] = useState(false);\n  const { userRole } = useContext(AuthContext);\n  \n  const { width: screenWidth } = Dimensions.get('window');\n  const isMobile = screenWidth <= 768;\n  const isSmallMobile = screenWidth <= 600;\n\n  useEffect(() => {\n    if (visible && conversation?.id) {\n      debugLog('MBA3456', 'ClientPetsModal became visible with conversation ID:', conversation.id);\n      fetchPets();\n      fetchReviews();\n    }\n  }, [visible, conversation?.id]);\n\n  const fetchPets = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      debugLog('MBA3456', 'Fetching pets for conversation:', conversation.id);\n      const petsData = await getClientPets(conversation.id);\n      debugLog('MBA3456', 'Successfully fetched pets:', petsData.length);\n      setPets(petsData);\n      if (petsData.length > 0) {\n        setSelectedPet(petsData[0]);\n      }\n    } catch (err) {\n      debugLog('MBA3456', 'Error fetching client pets:', err.response?.data || err.message);\n      setError('Failed to load pets');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const fetchReviews = async () => {\n    try {\n      debugLog('MBA387c439h', 'Fetching reviews for conversation:', conversation.id);\n      // We need to pass true if the current user is a professional, false if they're a client\n      const isProfessional = userRole === 'professional';\n      debugLog('MBA387c439h', 'Current user isProfessional:', isProfessional);\n      \n      const reviewsData = await getUserReviews(conversation.id, null, isProfessional);\n      debugLog('MBA387c439h', 'Successfully fetched reviews:', reviewsData);\n      setReviews(reviewsData.reviews || []);\n      setAverageRating(reviewsData.average_rating || 0);\n      setReviewCount(reviewsData.review_count || 0);\n    } catch (err) {\n      debugLog('MBA387c439h', 'Error fetching user reviews:', err.response?.data || err.message);\n      // Don't set error state here to avoid blocking pet display\n    }\n  };\n\n  const handleClose = () => {\n    setSelectedPet(null);\n    setPets([]);\n    setReviews([]);\n    setAverageRating(0);\n    setReviewCount(0);\n    setError(null);\n    setMobileView('pets');\n    onClose();\n  };\n\n  const handlePetSelect = (pet) => {\n    setSelectedPet(pet);\n    if (isMobile) {\n      setMobileView('details');\n    }\n  };\n\n  const handleBackToPets = () => {\n    setMobileView('pets');\n  };\n\n  const handleCreateBooking = () => {\n    // Close the modal\n    handleClose();\n    // Call the provided callback\n    onCreateBooking && onCreateBooking();\n  };\n\n  const handleOpenReviewsModal = () => {\n    setShowReviewsModal(true);\n  };\n\n  const handleCloseReviewsModal = () => {\n    setShowReviewsModal(false);\n  };\n\n  const renderPetDetails = (pet) => (\n    <>\n      <View style={styles.petImageContainer}>\n        {pet.profile_photo ? (\n          <Image source={{ uri: getMediaUrl(pet.profile_photo) }} style={styles.petImage} />\n        ) : (\n          <View style={styles.petImagePlaceholder}>\n            <MaterialCommunityIcons name=\"paw\" size={50} color={theme.colors.placeholder} />\n          </View>\n        )}\n      </View>\n      \n      {/* Basic Information - Always show this section */}\n      <View style={styles.detailsSection}>\n        <Text style={styles.sectionHeader}>Basic Information</Text>\n        \n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Type</Text>\n          <Text style={styles.detailText}>{pet.species.charAt(0).toUpperCase() + pet.species.slice(1).toLowerCase() || 'Not specified'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Breed</Text>\n          <Text style={styles.detailText}>{pet.breed.charAt(0).toUpperCase() + pet.breed.slice(1).toLowerCase() || 'Not specified'}</Text>\n        </View>\n\n        \n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Age</Text>\n          <Text style={styles.detailText}>{pet.age || 'Not specified'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Weight</Text>\n          <Text style={styles.detailText}>{pet.weight ? `${pet.weight} lbs` : 'Not specified'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Sex</Text>\n          <Text style={styles.detailText}>{pet.sex || 'Not specified'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Birthday</Text>\n          <Text style={styles.detailText}>\n            {pet.birthday ? new Date(pet.birthday).toLocaleDateString() : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Adoption Date</Text>\n          <Text style={styles.detailText}>\n            {pet.adoption_date ? new Date(pet.adoption_date).toLocaleDateString() : 'Not specified'}\n          </Text>\n        </View>\n\n      </View>\n\n      {/* Care Information - Always show this section */}\n      <View style={styles.detailsSection}>\n        <Text style={styles.sectionHeader}>Care Instructions</Text>\n        \n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Feeding Schedule</Text>\n          <Text style={styles.detailText}>{pet.feeding_schedule || 'Not provided'}</Text>\n        </View>\n\n        {/* Show potty break schedule for all pets, with \"Not applicable\" for non-dogs */}\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Potty Break Schedule</Text>\n          <Text style={styles.detailText}>\n            {pet.is_dog \n              ? (pet.potty_break_schedule || 'Not provided') \n              : 'Not applicable for this pet type'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Special Care Instructions</Text>\n          <Text style={styles.detailText}>{pet.special_care_instructions || 'None provided'}</Text>\n        </View>\n      </View>\n\n      {/* Behavioral Information - Always show this section */}\n      <View style={styles.detailsSection}>\n        <Text style={styles.sectionHeader}>Behavioral Information</Text>\n        \n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Energy Level</Text>\n          <Text style={styles.detailText}>{pet.energy_level || 'Not specified'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Can be Left Alone</Text>\n          <Text style={styles.detailText}>\n            {pet.can_be_left_alone === true ? 'Yes' : \n             pet.can_be_left_alone === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Friendly with Children</Text>\n          <Text style={styles.detailText}>\n            {pet.friendly_with_children === true ? 'Yes' : \n             pet.friendly_with_children === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Friendly with Cats</Text>\n          <Text style={styles.detailText}>\n            {pet.friendly_with_cats === true ? 'Yes' : \n             pet.friendly_with_cats === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Friendly with Dogs</Text>\n          <Text style={styles.detailText}>\n            {pet.friendly_with_dogs === true ? 'Yes' : \n             pet.friendly_with_dogs === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n      </View>\n\n      {/* Medical Information - Always show this section */}\n      <View style={styles.detailsSection}>\n        <Text style={styles.sectionHeader}>Medical Information</Text>\n        \n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Spayed/Neutered</Text>\n          <Text style={styles.detailText}>\n            {pet.spayed_neutered === true ? 'Yes' : \n             pet.spayed_neutered === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>House Trained</Text>\n          <Text style={styles.detailText}>\n            {pet.house_trained === true ? 'Yes' : \n             pet.house_trained === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Microchipped</Text>\n          <Text style={styles.detailText}>\n            {pet.microchipped === true ? 'Yes' : \n             pet.microchipped === false ? 'No' : 'Not specified'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Medications</Text>\n          <Text style={styles.detailText}>\n            {pet.medications || 'No medications listed'}\n          </Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Medication Notes</Text>\n          <Text style={styles.detailText}>{pet.medication_notes || 'None provided'}</Text>\n        </View>\n      </View>\n\n      {/* Veterinary Information - Always show this section */}\n      <View style={styles.detailsSection}>\n        <Text style={styles.sectionHeader}>Veterinary Information</Text>\n        \n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Veterinarian</Text>\n          <Text style={styles.detailText}>{pet.vet_name || 'Not provided'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Vet Phone</Text>\n          <Text style={styles.detailText}>{pet.vet_phone || 'Not provided'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Vet Address</Text>\n          <Text style={styles.detailText}>{pet.vet_address || 'Not provided'}</Text>\n        </View>\n\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Insurance Provider</Text>\n          <Text style={styles.detailText}>{pet.insurance_provider || 'Not provided'}</Text>\n        </View>\n      </View>\n    </>\n  );\n\n  const renderEmptyState = () => (\n    <View style={styles.emptyStateContainer}>\n      <MaterialCommunityIcons name=\"paw\" size={60} color={theme.colors.placeholder} />\n      <Text style={styles.emptyStateTitle}>No Pets Found</Text>\n      <Text style={styles.emptyStateText}>\n        This client doesn't have any pets registered yet. They will need to add pets to create a booking.\n      </Text>\n    </View>\n  );\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        onRequestClose={handleClose}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContainer, isSmallMobile && styles.modalContainerSmallMobile]}>\n            {/* Header */}\n            <View style={styles.header}>\n              <View style={styles.headerLeft}>\n                {otherUserProfilePhoto ? (\n                  <Image source={{ uri: getMediaUrl(otherUserProfilePhoto) }} style={styles.clientProfilePhoto} />\n                ) : (\n                  <View style={styles.clientProfilePhotoPlaceholder}>\n                    <MaterialCommunityIcons name=\"account\" size={24} color={theme.colors.placeholder} />\n                  </View>\n                )}\n                <View style={styles.headerTextContainer}>\n                  <Text style={styles.clientName}>{otherUserName || 'Client'}</Text>\n                  <View style={styles.clientSubtitleContainer}>\n                    {reviewCount > 0 ? (\n                      <TouchableOpacity \n                        style={styles.reviewBadge}\n                        onPress={handleOpenReviewsModal}\n                      >\n                        <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.warning} />\n                        <Text style={styles.reviewBadgeText}>{averageRating} • {reviewCount} {reviewCount === 1 ? 'Review' : 'Reviews'}</Text>\n                      </TouchableOpacity>\n                    ) : (\n                      <Text style={styles.reviewBadgeText}>No reviews yet</Text>\n                    )}\n                  </View>\n                </View>\n              </View>\n              <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n                <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n              </TouchableOpacity>\n            </View>\n\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                <Text style={styles.loadingText}>Loading pets...</Text>\n              </View>\n            ) : error ? (\n              <View style={styles.errorContainer}>\n                <Text style={styles.errorText}>{error}</Text>\n                <TouchableOpacity style={styles.retryButton} onPress={fetchPets}>\n                  <Text style={styles.retryText}>Retry</Text>\n                </TouchableOpacity>\n              </View>\n            ) : pets.length === 0 ? (\n              renderEmptyState()\n            ) : (\n              <View style={[styles.content, isMobile && styles.contentMobile]}>\n                {/* Mobile: Pets List View */}\n                {isMobile && mobileView === 'pets' && (\n                  <View style={styles.mobilePetsView}>\n                    <Text style={styles.sectionTitle}>Pets</Text>\n                    <ScrollView style={styles.petsScrollView}>\n                      {pets.map((pet) => (\n                        <TouchableOpacity\n                          key={pet.pet_id}\n                          style={styles.mobilePetItem}\n                          onPress={() => handlePetSelect(pet)}\n                        >\n                          <View style={styles.mobilePetContent}>\n                            <View style={styles.petListImageContainer}>\n                              {pet.profile_photo ? (\n                                <Image source={{ uri: getMediaUrl(pet.profile_photo) }} style={styles.petListImage} />\n                              ) : (\n                                <View style={styles.petListImagePlaceholder}>\n                                  <MaterialCommunityIcons name=\"paw\" size={16} color={theme.colors.placeholder} />\n                                </View>\n                              )}\n                            </View>\n                            <View style={styles.petTextContainer}>\n                              <Text style={styles.mobilePetName}>\n                                {pet.name.charAt(0).toUpperCase() + pet.name.slice(1).toLowerCase()}\n                              </Text>\n                              <Text style={styles.mobilePetType}>\n                                {pet.species.charAt(0).toUpperCase() + pet.species.slice(1).toLowerCase()}\n                              </Text>\n                            </View>\n                          </View>\n                          <MaterialCommunityIcons \n                            name=\"chevron-right\" \n                            size={24} \n                            color={theme.colors.textSecondary} \n                          />\n                        </TouchableOpacity>\n                      ))}\n                    </ScrollView>\n                  </View>\n                )}\n\n                {/* Mobile: Pet Details View */}\n                {isMobile && mobileView === 'details' && selectedPet && (\n                  <View style={styles.mobileDetailsView}>\n                    <View style={styles.mobileDetailsHeader}>\n                      <TouchableOpacity \n                        style={styles.backButton}\n                        onPress={handleBackToPets}\n                      >\n                        <MaterialCommunityIcons \n                          name=\"arrow-left\" \n                          size={24} \n                          color={theme.colors.primary} \n                        />\n                      </TouchableOpacity>\n                      <Text style={styles.mobileDetailsTitle}>{selectedPet.name.charAt(0).toUpperCase() + selectedPet.name.slice(1).toLowerCase()}</Text>\n                    </View>\n                    <ScrollView style={styles.mobileDetailsScrollView}>\n                      {renderPetDetails(selectedPet)}\n                    </ScrollView>\n                  </View>\n                )}\n\n                {/* Desktop: Two-panel layout */}\n                {!isMobile && (\n                  <>\n                    {/* Pets List (Left Side) */}\n                    <View style={styles.petsList}>\n                      <Text style={styles.sectionTitle}>Pets</Text>\n                      <ScrollView style={styles.petsScrollView}>\n                        {pets.map((pet) => (\n                          <TouchableOpacity\n                            key={pet.pet_id}\n                            style={[\n                              styles.petItem,\n                              selectedPet?.pet_id === pet.pet_id && styles.petItemSelected\n                            ]}\n                            onPress={() => handlePetSelect(pet)}\n                          >\n                            <View style={styles.petItemContent}>\n                              <View style={styles.petListImageContainer}>\n                                {pet.profile_photo ? (\n                                  <Image source={{ uri: getMediaUrl(pet.profile_photo) }} style={styles.petListImage} />\n                                ) : (\n                                  <View style={styles.petListImagePlaceholder}>\n                                    <MaterialCommunityIcons name=\"paw\" size={16} color={theme.colors.placeholder} />\n                                  </View>\n                                )}\n                              </View>\n                              <View style={styles.petTextContainer}>\n                                <Text style={[\n                                  styles.petName,\n                                  selectedPet?.pet_id === pet.pet_id && styles.petNameSelected\n                                ]}>\n                                  {pet.name.charAt(0).toUpperCase() + pet.name.slice(1).toLowerCase()}\n                                </Text>\n                                <Text style={[\n                                  styles.petType,\n                                  selectedPet?.pet_id === pet.pet_id && styles.petTypeSelected\n                                ]}>\n                                  {pet.species.charAt(0).toUpperCase() + pet.species.slice(1).toLowerCase()}\n                                </Text>\n                              </View>\n                            </View>\n                          </TouchableOpacity>\n                        ))}\n                      </ScrollView>\n                    </View>\n\n                    {/* Pet Details (Right Side) */}\n                    <View style={styles.petDetails}>\n                      {selectedPet ? (\n                        <ScrollView style={styles.detailsScrollView}>\n                          <Text style={styles.detailsTitle}>{selectedPet.name.charAt(0).toUpperCase() + selectedPet.name.slice(1).toLowerCase()}</Text>\n                          {renderPetDetails(selectedPet)}\n                        </ScrollView>\n                      ) : (\n                        <View style={styles.noSelectionContainer}>\n                          <Text style={styles.noSelectionText}>Select a pet to view details</Text>\n                        </View>\n                      )}\n                    </View>\n                  </>\n                )}\n              </View>\n            )}\n\n            {/* Create Booking Button */}\n            {!loading && !error && (\n              <View style={styles.footer}>\n                <TouchableOpacity \n                  style={styles.createBookingButton}\n                  onPress={handleCreateBooking}\n                >\n                  <Text style={styles.createBookingButtonText}>Create Booking</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </View>\n      </Modal>\n      \n      {/* Reviews Modal - Outside the main modal to prevent nesting issues */}\n      <ReviewsModal\n        visible={showReviewsModal}\n        onClose={handleCloseReviewsModal}\n        reviews={reviews}\n        averageRating={averageRating}\n        reviewCount={reviewCount}\n        userName={otherUserName}\n        forProfessional={false}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  petListImageContainer: {\n    marginRight: 12,\n  },\n  petListImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n  },\n  petListImagePlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petItemContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  petTextContainer: {\n    flex: 1,\n  },\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 800,\n    maxHeight: '80%',\n    overflow: 'hidden',\n  },\n  modalContainerSmallMobile: {\n    width: 'calc(100% - 10px)',\n    height: 'calc(100% - 10px)',\n    maxWidth: 'none',\n    maxHeight: 'none',\n    borderRadius: 8,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerLeft: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTextContainer: {\n    flex: 1,\n  },\n  clientProfilePhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 15,\n  },\n  clientProfilePhotoPlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginRight: 15,\n  },\n  clientName: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  clientSubtitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginTop: 4,\n  },\n  clientSubtitle: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  reviewBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n    paddingVertical: 2,\n    borderRadius: 12,\n  },\n  reviewBadgeText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  closeButton: {\n    padding: 8,\n  },\n  loadingContainer: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    color: theme.colors.textSecondary,\n  },\n  errorContainer: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n  },\n  retryText: {\n    color: theme.colors.whiteText,\n    fontWeight: '500',\n  },\n  content: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  contentMobile: {\n    flexDirection: 'column',\n  },\n  // Mobile styles\n  mobilePetsView: {\n    flex: 1,\n    padding: 20,\n  },\n  mobilePetItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  mobilePetContent: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  mobilePetName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  mobilePetType: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  mobileDetailsView: {\n    flex: 1,\n  },\n  mobileDetailsHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  backButton: {\n    padding: 8,\n    marginRight: 12,\n  },\n  mobileDetailsTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n  },\n  mobileDetailsScrollView: {\n    flex: 1,\n    padding: 20,\n  },\n  // Desktop styles\n  petsList: {\n    width: '40%',\n    borderRightWidth: 1,\n    borderRightColor: theme.colors.border,\n    padding: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  petsScrollView: {\n    flex: 1,\n  },\n  petItem: {\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  petItemSelected: {\n    backgroundColor: theme.colors.primary,\n    borderColor: theme.colors.primary,\n  },\n  petName: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  petNameSelected: {\n    color: theme.colors.whiteText,\n  },\n  petType: {\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n  },\n  petTypeSelected: {\n    color: theme.colors.whiteText,\n  },\n  petDetails: {\n    flex: 1,\n    padding: 20,\n  },\n  detailsScrollView: {\n    flex: 1,\n  },\n  detailsTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  detailSection: {\n    marginBottom: 20,\n  },\n  detailLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    lineHeight: 20,\n  },\n  detailsSection: {\n    marginBottom: 24,\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n    paddingBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border + '40', // 40% opacity\n  },\n  petImageContainer: {\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  petImage: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n  },\n  petImagePlaceholder: {\n    width: 150,\n    height: 150,\n    borderRadius: 75,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  noSelectionContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noSelectionText: {\n    color: theme.colors.textSecondary,\n    fontSize: 16,\n  },\n  footer: {\n    padding: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  createBookingButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  createBookingButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  emptyStateContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 30,\n  },\n  emptyStateTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  emptyStateText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    textAlign: 'center',\n    lineHeight: 20,\n  },\n  reviewSection: {\n    marginBottom: 20,\n  },\n  reviewSummary: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 8,\n  },\n  ratingText: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  reviewCountText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  reviewsScrollView: {\n    flex: 1,\n  },\n  reviewCard: {\n    padding: 12,\n    borderRadius: 8,\n    marginRight: 8,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  reviewHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  reviewerName: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n  },\n  reviewRating: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n  reviewText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  reviewDate: {\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n  },\n});\n\nexport default ClientPetsModal; ","import React from 'react';\nimport { View, Text } from 'react-native';\nimport { formatMessageTime } from './messageTimeUtils';\n\n/**\n * Component to display a message timestamp\n * \n * @param {Object} props - Component props\n * @param {Object} props.message - Message object with timestamp\n * @param {boolean} props.isFromMe - Whether message is from current user\n * @param {Object} props.styles - Styles object from MessageHistory\n * @param {string} props.userTimezone - User's timezone\n * @param {boolean} props.show - Whether to show the timestamp\n */\nconst MessageTimestamp = ({ message, isFromMe, styles, userTimezone, show }) => {\n  if (!show || !message || !message.timestamp) return null;\n  \n  const formattedTime = formatMessageTime(message.timestamp, userTimezone);\n  \n  return (\n    <View style={[\n      styles.messageTimestampContainer,\n      isFromMe ? styles.sentMessageTimestamp : styles.receivedMessageTimestamp,\n      // Add compact style for image messages\n      message.type_of_message === 'image_message' || \n      message.image_url || \n      message.image_urls || \n      (message.metadata && message.metadata.image_urls) ? \n        { marginBottom: 0, marginTop: 20 } : null\n    ]}>\n      <Text style={styles.messageTimestampText}>{formattedTime}</Text>\n    </View>\n  );\n};\n\nexport default MessageTimestamp; ","import React, { useState } from 'react';\nimport { \n  View, \n  Text, \n  Modal, \n  StyleSheet, \n  TouchableOpacity, \n  TextInput,\n  TouchableWithoutFeedback,\n  Keyboard,\n  Platform,\n  KeyboardAvoidingView\n} from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { debugLog } from '../context/AuthContext';\nimport Toast from './Toast';\n\nconst ReviewModal = ({ \n  visible, \n  onClose, \n  isProfessional,\n  bookingId,\n  onSubmitReview\n}) => {\n  const [rating, setRating] = useState(0);\n  const [reviewText, setReviewText] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [toast, setToast] = useState({\n    visible: false,\n    message: '',\n    type: 'success'\n  });\n\n  // Reset state when modal opens\n  React.useEffect(() => {\n    if (visible) {\n      setRating(0);\n      setReviewText('');\n      setIsSubmitting(false);\n      setToast({ visible: false, message: '', type: 'success' });\n    }\n  }, [visible]);\n\n  const handleSubmitReview = async () => {\n    if (rating === 0) {\n      // Show toast for rating required\n      setToast({\n        visible: true,\n        message: 'Please select a star rating',\n        type: 'error'\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      if (onSubmitReview) {\n        await onSubmitReview({\n          bookingId,\n          rating,\n          reviewText,\n          isProfessional\n        });\n      }\n      \n      // Show success toast and close modal immediately\n      setToast({\n        visible: true,\n        message: 'Review submitted successfully!',\n        type: 'success'\n      });\n      \n      // Close modal immediately\n      onClose();\n    } catch (error) {\n      debugLog('MBA8675309: Error submitting review:', error);\n      setToast({\n        visible: true,\n        message: 'Failed to submit review. Please try again.',\n        type: 'error'\n      });\n      setIsSubmitting(false);\n    }\n  };\n\n  const renderStars = () => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <TouchableOpacity\n          key={i}\n          onPress={() => setRating(i)}\n          style={styles.starContainer}\n        >\n          <MaterialCommunityIcons\n            name={i <= rating ? 'star' : 'star-outline'}\n            size={40}\n            color={i <= rating ? '#FFD700' : theme.colors.border}\n          />\n        </TouchableOpacity>\n      );\n    }\n    return stars;\n  };\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        transparent={true}\n        animationType=\"fade\"\n        onRequestClose={onClose}\n      >\n        <KeyboardAvoidingView \n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n          style={{ flex: 1 }}\n        >\n          <TouchableOpacity \n            activeOpacity={1}\n            style={styles.modalOverlay}\n            onPress={() => {\n              Keyboard.dismiss();\n              onClose();\n            }}\n          >\n            <TouchableOpacity \n              activeOpacity={1}\n              style={styles.modalContainer}\n              onPress={(e) => {\n                // Prevent touch events from bubbling to parent\n                e.stopPropagation();\n              }}\n            >\n              {/* Header with close button */}\n              <View style={styles.header}>\n                <Text style={styles.headerText}>\n                  {isProfessional ? 'Please Review Your Client' : 'Please Rate Your Experience'}\n                </Text>\n                <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              \n              {/* Star Rating */}\n              <View style={styles.ratingContainer}>\n                <Text style={styles.ratingLabel}>Your Rating</Text>\n                <View style={styles.starsRow}>\n                  {renderStars()}\n                </View>\n              </View>\n              \n              {/* Review Text */}\n              <View style={styles.reviewTextContainer}>\n                <Text style={styles.reviewTextLabel}>Your Review</Text>\n                <TextInput\n                  style={styles.reviewTextInput}\n                  placeholder=\"Write your review here...\"\n                  placeholderTextColor={theme.colors.placeHolderText}\n                  multiline={true}\n                  numberOfLines={Platform.OS === 'ios' ? null : 4}\n                  minHeight={Platform.OS === 'ios' ? 80 : null}\n                  textAlignVertical=\"top\"\n                  value={reviewText}\n                  onChangeText={setReviewText}\n                />\n              </View>\n              \n              {/* Notice */}\n              <View style={styles.noticeContainer}>\n                <Text style={styles.noticeText}>\n                  Note: Your review won't be visible until the other user posts their review or 14 days after the booking.\n                </Text>\n              </View>\n              \n              {/* Action Buttons */}\n              <View style={styles.actionButtons}>\n                <TouchableOpacity \n                  style={styles.cancelButton} \n                  onPress={onClose}\n                  disabled={isSubmitting}\n                >\n                  <Text style={styles.cancelButtonText}>Cancel</Text>\n                </TouchableOpacity>\n                \n                <TouchableOpacity \n                  style={[\n                    styles.submitButton,\n                    (rating === 0 || isSubmitting) ? styles.disabledButton : {}\n                  ]} \n                  onPress={handleSubmitReview}\n                  disabled={rating === 0 || isSubmitting}\n                >\n                  <Text style={styles.submitButtonText}>\n                    {isSubmitting ? 'Posting...' : 'Post Review'}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </TouchableOpacity>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </Modal>\n      \n      {/* Toast notification */}\n      <Toast\n        visible={toast.visible}\n        message={toast.message}\n        type={toast.type}\n        onDismiss={() => setToast({ ...toast, visible: false })}\n        duration={3000}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n  },\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '100%',\n    maxWidth: 500,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20,\n    paddingBottom: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 5,\n  },\n  ratingContainer: {\n    marginBottom: 20,\n  },\n  ratingLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  starsRow: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  starContainer: {\n    padding: 5,\n  },\n  reviewTextContainer: {\n    marginBottom: 20,\n  },\n  reviewTextLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 10,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewTextInput: {\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    padding: 10,\n    fontSize: 16,\n    color: theme.colors.text,\n    backgroundColor: theme.colors.background,\n    fontFamily: theme.fonts.regular.fontFamily,\n    minHeight: 100,\n  },\n  noticeContainer: {\n    backgroundColor: theme.colors.error + '15',\n    borderRadius: 8,\n    padding: 10,\n    marginBottom: 20,\n    borderLeftWidth: 3,\n    borderLeftColor: theme.colors.error,\n  },\n  noticeText: {\n    fontSize: 14,\n    color: theme.colors.error,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  actionButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  cancelButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n  },\n  submitButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n});\n\nexport default ReviewModal; ","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { debugLog } from '../context/AuthContext';\nimport BookingApprovalModal from './BookingApprovalModal';\nimport ReviewModal from './ReviewModal';\nimport { submitBookingReview } from '../api/API';\n\n/**\n * A card component for review requests that spans the full width of the message list\n */\nconst ReviewRequestCard = ({ \n  data, \n  isProfessional,\n  onPress\n}) => {\n  // Log the data for debugging\n  debugLog('MBA8675309: ReviewRequestCard data:', data);\n  \n  // State for the approval modal\n  const [approvalModalVisible, setApprovalModalVisible] = useState(false);\n  const [safeInitialData, setSafeInitialData] = useState(null);\n  \n  // State for the review modal\n  const [reviewModalVisible, setReviewModalVisible] = useState(false);\n\n  // Determine the message content based on the user role\n  const getReviewMessage = () => {\n    if (isProfessional) {\n      return \"Please review your client\";\n    } else {\n      return \"Please review your experience\";\n    }\n  };\n  \n  // Handle opening the approval modal\n  const handleOpenApprovalModal = () => {\n    // Ensure we have basic data for the modal\n    const preparedData = {\n      ...data,\n      occurrences: data.occurrences?.map(occ => ({\n        ...occ,\n        rates: occ.rates || {\n          base_rate: 0,\n          additional_animal_rate: 0,\n          applies_after: 1,\n          holiday_rate: 0,\n          holiday_days: 0,\n          additional_rates: []\n        }\n      })) || []\n    };\n    setSafeInitialData(preparedData);\n    setApprovalModalVisible(true);\n  };\n  \n  // Handle opening the review modal\n  const handleOpenReviewModal = () => {\n    setReviewModalVisible(true);\n  };\n  \n  // Handle submitting a review\n  const handleSubmitReview = async (reviewData) => {\n    try {\n      const response = await submitBookingReview(reviewData);\n      debugLog('MBA8675309: Review submitted successfully:', response);\n\n      \n      // If there's a callback from the parent component\n      if (onPress) {\n        onPress('reviewSubmitted', response);\n      }\n      \n      return response;\n    } catch (error) {\n      debugLog('MBA8675309: Error submitting review:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {/* Booking Completed Banner */}\n      <View style={styles.completedBanner}>\n        <MaterialCommunityIcons \n          name=\"check-circle\" \n          size={24} \n          color={theme.colors.success} \n        />\n        <Text style={styles.completedText}>Booking Completed</Text>\n      </View>\n      \n      {/* Review Request Card */}\n      <View style={styles.card}>\n        <View style={styles.header}>\n          <MaterialCommunityIcons \n            name=\"star-outline\" \n            size={24} \n            color={theme.colors.primary} \n          />\n          <Text style={styles.title}>{getReviewMessage()}</Text>\n        </View>\n        \n        <View style={styles.content}>\n          <View style={styles.infoSection}>\n            <View style={styles.row}>\n              <Text style={styles.label}>Booking ID:</Text>\n              <Text style={styles.value}>{data.booking_id || 'N/A'}</Text>\n            </View>\n            \n            <View style={styles.row}>\n              <Text style={styles.label}>Service:</Text>\n              <Text style={styles.value}>{data.service_type || 'N/A'}</Text>\n            </View>\n          </View>\n          \n          <View style={styles.buttonContainer}>\n            <TouchableOpacity \n              style={styles.detailsButton}\n              onPress={handleOpenApprovalModal}\n            >\n              <Text style={styles.detailsButtonText}>View Booking Details</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity \n              style={styles.reviewButton}\n              onPress={handleOpenReviewModal}\n            >\n              <Text style={styles.reviewButtonText}>Leave a Review</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n      \n      {/* Approval Modal */}\n      <BookingApprovalModal\n        visible={approvalModalVisible}\n        onClose={() => setApprovalModalVisible(false)}\n        bookingId={data.booking_id}\n        initialData={safeInitialData}\n        isProfessional={isProfessional}\n        isReadOnly={true}  // Always read-only for completed bookings\n        hideButtons={true}  // Hide approval buttons\n        modalTitle=\"Booking Details\"\n      />\n      \n      {/* Review Modal */}\n      <ReviewModal\n        visible={reviewModalVisible}\n        onClose={() => setReviewModalVisible(false)}\n        isProfessional={isProfessional}\n        bookingId={data.booking_id}\n        onSubmitReview={handleSubmitReview}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    paddingHorizontal: 16,\n    marginVertical: 8,\n  },\n  completedBanner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.success + '15', // Light green background\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.success,\n    gap: 8,\n  },\n  completedText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.success,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    overflow: 'hidden',\n  },\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    gap: 8,\n  },\n  title: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  content: {\n    padding: 16,\n  },\n  infoSection: {\n    marginBottom: 16,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  label: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n    minWidth: 80,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  value: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    gap: 10,\n    marginTop: 10,\n  },\n  detailsButton: {\n    flex: 1,\n    backgroundColor: '#6b705c', // Olive green color to match the screenshot\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  detailsButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewButton: {\n    flex: 1,\n    backgroundColor: '#6b705c', // Olive green color to match the screenshot\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  reviewButtonText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ReviewRequestCard; ","import React, { useState, useCallback, useRef, useEffect, useContext, useMemo, useLayoutEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, StatusBar, Text, TouchableOpacity, Dimensions, Alert, ActivityIndicator, Image, TextInput, BackHandler } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useTheme, Button } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, getStorage, setStorage, debugLog } from '../context/AuthContext';\nimport RequestBookingModal from '../components/RequestBookingModal';\nimport BookingStepModal from '../components/BookingStepModal';\nimport { CURRENT_USER_ID } from '../data/mockData';\nimport { useNavigation } from '@react-navigation/native';\nimport { API_BASE_URL } from '../config/config';\nimport axios from 'axios';\nimport BookingMessageCard from '../components/BookingMessageCard';\nimport { formatOccurrenceFromUTC } from '../utils/time_utils';\nimport DraftConfirmationModal from '../components/DraftConfirmationModal';\nimport useWebSocket from '../hooks/useWebSocket';\nimport MessageNotificationContext from '../context/MessageNotificationContext';\nimport { getConversationMessages, createDraftFromBooking, getConversations, sendDebugLog } from '../api/API';\nimport { navigateToFrom } from '../components/Navigation';\nimport { applyViewportFix } from '../utils/viewport-fix';\nimport ImageViewer from '../components/Messages/ImageViewer';\nimport { useImageViewer } from '../components/Messages/useImageViewer';\nimport ClickableImage from '../components/Messages/ClickableImage';\n\n// Import our new components\nimport MessageList from '../components/Messages/MessageList';\nimport ConversationList from '../components/Messages/ConversationList';\nimport MessageInput from '../components/Messages/MessageInput';\nimport MessageHeader from '../components/Messages/MessageHeader';\nimport { useMessageLogic } from '../components/Messages/useMessageLogic';\nimport { createMessageStyles } from '../components/Messages/styles';\nimport ClientPetsModal from '../components/ClientPetsModal';\nimport { formatMessageTime, shouldShowTimestamp } from '../components/Messages/messageTimeUtils';\nimport MessageTimestamp from '../components/Messages/MessageTimestamp';\nimport ReviewRequestCard from '../components/ReviewRequestCard';\n\nconst MessageHistory = ({ navigation, route }) => {\n  // IMPORTANT: React hooks rules require that hooks are called in the same order\n  // on every render. Never put hooks inside conditional blocks or early returns.\n  // Always declare all hooks at the top level of the component.\n  \n  const { colors } = useTheme();\n  const { screenWidth, isCollapsed, isSignedIn, loading } = useContext(AuthContext);\n  const styles = createMessageStyles(screenWidth, isCollapsed);\n  \n  // Helper function to safely get initial width\n  const getInitialWidth = () => {\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      return window.innerWidth;\n    }\n    return screenWidth; // Fall back to context screenWidth\n  };\n  \n  // Add loading states\n  const [isLoadingConversations, setIsLoadingConversations] = useState(true);\n  const [isLoadingMessages, setIsLoadingMessages] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSearchFocused, setIsSearchFocused] = useState(false);\n  \n  const [selectedConversation, setSelectedConversation] = useState(null);\n  const [selectedConversationData, setSelectedConversationData] = useState(null);\n  \n  // Add image viewer state\n  const { \n    isImageViewerVisible, \n    selectedImageUrl, \n    handleImagePress, \n    closeImageViewer \n  } = useImageViewer();\n  \n  // Move these state declarations before the useEffect that uses them\n  const [messages, setMessages] = useState([]);\n  const [isSending, setIsSending] = useState(false);\n  const [showRequestModal, setShowRequestModal] = useState(false);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const { is_DEBUG, is_prototype, isApprovedProfessional, userRole, timeSettings } = useContext(AuthContext);\n  const [conversations, setConversations] = useState([]);\n  const [filteredConversations, setFilteredConversations] = useState([]);\n  \n  // Track whether we're intentionally deselecting\n  const isIntentionallyDeselecting = useRef(false);\n  \n  // Add state for keyboard visibility\n  const [isKeyboardVisible, setIsKeyboardVisible] = useState(false);\n  const keyboardHeightRef = useRef(0);\n  \n  // All other state declarations\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const prevScreenWidthRef = useRef(screenWidth);\n  const hasLoadedInitialDataRef = useRef(false);\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const initialLoadRef = useRef(true);\n  const [showBookingStepModal, setShowBookingStepModal] = useState(false);\n  const [currentBookingId, setCurrentBookingId] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [hasDraft, setHasDraft] = useState(false);\n  const [draftData, setDraftData] = useState(null);\n  const [showDraftConfirmModal, setShowDraftConfirmModal] = useState(false);\n  const [wsConnectionStatus, setWsConnectionStatus] = useState('disconnected');\n  const { resetNotifications, updateRoute, markConversationAsRead, getConversationUnreadCount } = useContext(MessageNotificationContext);\n  const [showClientPetsModal, setShowClientPetsModal] = useState(false);\n\n  // Add a ref to track if we're handling route params\n  const isHandlingRouteParamsRef = useRef(false);\n\n  // Add a ref to track if messages have been fetched for the current conversation\n  const hasLoadedMessagesRef = useRef(false);\n\n  // Add a ref to track if we need to open booking creation\n  const shouldOpenBookingCreationRef = useRef(false);\n  \n  // Add a ref for the markMessagesAsRead function that will come from the useWebSocket hook\n  const markMessagesAsReadRef = useRef(null);\n\n  // Add a ref to track the last viewed conversation to avoid redundant API calls\n  const lastViewedConversationRef = useRef(null);\n\n  // Add these refs at the top level of the component, near other ref declarations\n  const isLoadingMoreRef = useRef(false);\n  const processedPagesRef = useRef(new Set());\n  const messageIdsRef = useRef(new Set());\n\n  // Add viewport height detection for mobile browsers - using ref instead of state\n  const actualViewportHeightRef = useRef(null);\n  const inputContainerHeightRef = useRef(0);\n  const isAndroidChromeRef = useRef(false);\n  \n  // No viewport fix needed, we're using pure flexbox\n\n  // Add a ref to track if conversations fetch is already in progress\n  const isFetchingConversationsRef = useRef(false);\n\n  // Add a ref to track if messages fetch is already in progress for specific conversations\n  const isFetchingMessagesRef = useRef(new Set());\n  \n  // Ref to store the keyboard dismissal handler from MessageInput\n  const keyboardDismissHandlerRef = useRef(null);\n\n  // Add re-render tracking - MOVED HERE after all state declarations\n  const renderCountRef = useRef(0);\n  renderCountRef.current++;\n  \n  debugLog('MBA9876: [COMPONENT] MessageHistory render #' + renderCountRef.current, {\n    timestamp: Date.now(),\n    selectedConversation,\n    isSignedIn,\n    loading,\n    screenWidth,\n    routeParams: route.params\n  });\n\n  // Add code to attach keyboard detection event for better handling in MessageHistory component root\n  useEffect(() => {\n    if (Platform.OS === 'web' && isAndroidChromeRef.current) {\n      // Setup a global keyboard visibility tracker\n      const detectKeyboard = () => {\n        // Use visualViewport API to detect keyboard\n        if (window.visualViewport) {\n          const keyboardHeight = window.innerHeight - window.visualViewport.height;\n          const keyboardVisible = keyboardHeight > 100;\n          \n          // Log keyboard visibility changes\n          debugLog('MBA9876: [KEYBOARD] Global keyboard visibility check', {\n            keyboardHeight,\n            keyboardVisible,\n            visualViewportHeight: window.visualViewport.height,\n            innerHeight: window.innerHeight\n          });\n          \n          // Apply CSS classes to document for keyboard visibility\n          if (keyboardVisible) {\n            document.documentElement.classList.add('keyboard-visible');\n            // Force bottom positioning for input container\n            setTimeout(() => {\n              window.scrollTo(0, document.body.scrollHeight);\n            }, 50);\n          } else {\n            document.documentElement.classList.remove('keyboard-visible');\n          }\n        }\n      };\n      \n      // Add visualViewport event listener\n      if (window.visualViewport) {\n        window.visualViewport.addEventListener('resize', detectKeyboard);\n        \n        // Run initial detection\n        detectKeyboard();\n        \n        return () => {\n          window.visualViewport.removeEventListener('resize', detectKeyboard);\n          document.documentElement.classList.remove('keyboard-visible');\n        };\n      }\n    }\n  }, []);\n\n  // Simple cleanup on sign out\n  useEffect(() => {\n    if (!isSignedIn) {\n      debugLog('MBA9999: User signed out, resetting MessageHistory state');\n      setConversations([]);\n      setMessages([]);\n      setSelectedConversation(null);\n      setSelectedConversationData(null);\n      setHasDraft(false);\n      setDraftData(null);\n      hasLoadedMessagesRef.current = false;\n      lastViewedConversationRef.current = null;\n      processedPagesRef.current.clear();\n      messageIdsRef.current.clear();\n      initialLoadRef.current = true;\n      setIsInitialLoad(true);\n      \n      // Clear fetch tracking refs\n      isFetchingConversationsRef.current = false;\n      isFetchingMessagesRef.current.clear();\n    }\n  }, [isSignedIn]);\n  \n  // Handle role changes by refreshing conversations and clearing selection\n  useEffect(() => {\n    if (isSignedIn) {\n      debugLog('MBA9999: User role changed, refreshing conversations', { userRole });\n      \n      // Clear the current selection\n      setSelectedConversation(null);\n      setSelectedConversationData(null);\n      setMessages([]);\n      hasLoadedMessagesRef.current = false;\n      lastViewedConversationRef.current = null;\n      \n      debugLog('MBA24u45vn: Refetching conversations for the new role');\n      // Refetch conversations for the new role\n      fetchConversations();\n    }\n  }, [userRole, isSignedIn]);\n\n  useEffect(() => {\n    debugLog('MBA9876: [VIEWPORT] useEffect running', {\n      timestamp: Date.now(),\n      screenWidth,\n      isWebMobile: Platform.OS === 'web' && screenWidth <= 900\n    });\n    \n    if (Platform.OS === 'web' && screenWidth <= 900) {\n      // Detect Android Chrome once at initialization\n      if (typeof navigator !== 'undefined') {\n        isAndroidChromeRef.current = /Chrome/i.test(navigator.userAgent) && \n                                     /Android/i.test(navigator.userAgent);\n        \n        debugLog('MBA9876: [BROWSER] Browser detection', {\n          userAgent: navigator.userAgent,\n          isAndroidChrome: isAndroidChromeRef.current\n        });\n\n        // Add mobile-only CSS for Android Chrome\n        if (isAndroidChromeRef.current) {\n          // Create a style tag for our Android Chrome specific CSS\n          const styleTag = document.createElement('style');\n          styleTag.id = 'android-chrome-fixes';\n          styleTag.innerHTML = `\n            /* Android Chrome keyboard fixes */\n            body.keyboard-open {\n              height: 100% !important;\n              overflow: hidden !important;\n              position: fixed !important;\n              width: 100% !important;\n            }\n            \n            .message-input-container {\n              background-color: white;\n            }\n            \n            .message-input-container.keyboard-open {\n              position: fixed !important;\n              bottom: 0 !important;\n              left: 0 !important;\n              right: 0 !important;\n              z-index: 1000 !important;\n              margin-bottom: 0 !important;\n              padding-bottom: 0 !important;\n              transform: translateZ(0) !important;\n            }\n            \n            .message-container.keyboard-open {\n              padding-bottom: 60px !important;\n              height: calc(100vh - 60px) !important;\n              overflow-y: auto !important;\n            }\n            \n            textarea:focus {\n              /* Prevent browser from zooming on focus */\n              font-size: 16px !important;\n            }\n          `;\n          document.head.appendChild(styleTag);\n          \n          // Clean up the style tag when component unmounts\n          return () => {\n            const existingStyle = document.getElementById('android-chrome-fixes');\n            if (existingStyle) {\n              existingStyle.remove();\n            }\n          };\n        }\n      }\n    \n      const updateViewportHeight = () => {\n        // Get the actual viewport height (works better than 100vh on mobile)\n        const vh = window.innerHeight * 0.01;\n        document.documentElement.style.setProperty('--vh', `${vh}px`);\n        const newHeight = window.innerHeight;\n        \n        debugLog('MBA9876: [VIEWPORT] updateViewportHeight called', {\n          timestamp: Date.now(),\n          newHeight,\n          previousHeight: actualViewportHeightRef.current,\n          vh,\n          currentActiveElement: document.activeElement?.tagName\n        });\n        \n        actualViewportHeightRef.current = newHeight;\n      };\n\n      // Mobile keyboard handling - completely revised approach\n      const handleResize = () => {\n        debugLog('MBA9876: [VIEWPORT] handleResize called', {\n          timestamp: Date.now(),\n          innerHeight: window.innerHeight,\n          activeElement: document.activeElement?.tagName,\n          visualViewport: window.visualViewport?.height,\n          documentHeight: document.documentElement.clientHeight,\n          screenHeight: window.screen.height\n        });\n        \n        updateViewportHeight();\n        \n        // Use visualViewport API if available (better for Android Chrome)\n        if (window.visualViewport) {\n          // For Android Chrome, calculate keyboard height differently\n          let keyboardHeight;\n          \n          if (isAndroidChromeRef.current) {\n            // For Android Chrome, use the difference between window.innerHeight and visualViewport.height\n            // This is more reliable than using screen.height on Android\n            keyboardHeight = window.innerHeight - window.visualViewport.height;\n            \n            // On some Android devices, we need to account for URL bar\n            if (document.documentElement.clientHeight > window.innerHeight) {\n              // Adjust for URL bar height\n              const urlBarHeight = document.documentElement.clientHeight - window.innerHeight;\n              keyboardHeight = Math.max(0, keyboardHeight - urlBarHeight);\n            }\n          } else {\n            // For other browsers, use the original calculation\n            keyboardHeight = window.screen.height - window.visualViewport.height;\n          }\n          \n          // Only consider keyboard open if height is significant\n          keyboardHeightRef.current = keyboardHeight > 100 ? keyboardHeight : 0;\n          \n          debugLog('MBA9876: [KEYBOARD] Detected keyboard height:', {\n            keyboardHeight: keyboardHeightRef.current,\n            screenHeight: window.screen.height,\n            visualViewportHeight: window.visualViewport.height,\n            innerHeight: window.innerHeight,\n            clientHeight: document.documentElement.clientHeight,\n            isKeyboardOpen: keyboardHeight > 100,\n            isAndroidChrome: isAndroidChromeRef.current\n          });\n          \n          // Apply direct style to input container if we have a keyboard\n          const inputContainer = document.querySelector('.message-input-container');\n          if (inputContainer) {\n            if (keyboardHeight > 100) {\n              // Keyboard is open - stick input to keyboard\n              inputContainer.style.position = 'fixed';\n              inputContainer.style.bottom = '0px';\n              inputContainer.style.left = '0px';\n              inputContainer.style.right = '0px';\n              inputContainer.style.zIndex = '1000';\n              \n              // Explicitly prevent any margin that might create space\n              inputContainer.style.marginBottom = '0px';\n              \n              // Force the browser to recalculate layout\n              inputContainer.style.transform = 'translateZ(0)';\n              \n              // Save the height for message container calculations\n              inputContainerHeightRef.current = inputContainer.offsetHeight;\n              \n              // Adjust the message container to make room for fixed input\n              const messageContainer = document.querySelector('.message-container');\n              if (messageContainer) {\n                messageContainer.style.paddingBottom = `${inputContainerHeightRef.current}px`;\n              }\n              \n              // For Android Chrome, we need additional handling\n              if (isAndroidChromeRef.current) {\n                // Prevent entire page from scrolling\n                document.body.style.overflow = 'hidden';\n                document.documentElement.style.overflow = 'hidden';\n                \n                // Add a small delay to ensure proper positioning after keyboard is fully visible\n                setTimeout(() => {\n                  // For Chrome on Android, we need to force the input into view\n                  if (document.activeElement && document.activeElement.tagName === 'TEXTAREA') {\n                    // Scroll to bottom of page to ensure input is visible\n                    window.scrollTo(0, document.body.scrollHeight);\n                    \n                    // If input is still not visible enough, scroll it into view\n                    const inputRect = document.activeElement.getBoundingClientRect();\n                    const viewportHeight = window.visualViewport.height;\n                    \n                    if (inputRect.bottom > viewportHeight) {\n                      document.activeElement.scrollIntoView(false);\n                    }\n                    \n                    debugLog('MBA9876: [KEYBOARD] Android Chrome positioning adjustment', {\n                      inputBottom: inputRect.bottom,\n                      viewportHeight: viewportHeight,\n                      needsExtraScroll: inputRect.bottom > viewportHeight\n                    });\n                  }\n                }, 100);\n              }\n              \n              debugLog('MBA9876: [KEYBOARD] Fixed input to bottom with keyboard open', {\n                inputHeight: inputContainerHeightRef.current,\n                browser: navigator.userAgent\n              });\n            } else {\n              // Keyboard is closed - reset positioning\n              inputContainer.style.position = '';\n              inputContainer.style.bottom = '';\n              inputContainer.style.left = '';\n              inputContainer.style.right = '';\n              inputContainer.style.zIndex = '';\n              inputContainer.style.marginBottom = '';\n              inputContainer.style.transform = '';\n              \n              // Reset message container padding\n              const messageContainer = document.querySelector('.message-container');\n              if (messageContainer) {\n                messageContainer.style.paddingBottom = '';\n              }\n              \n              // Reset body overflow for Android Chrome\n              if (isAndroidChromeRef.current) {\n                document.body.style.overflow = '';\n                document.documentElement.style.overflow = '';\n              }\n              \n              debugLog('MBA9876: [KEYBOARD] Reset input positioning with keyboard closed');\n            }\n          }\n        }\n        \n        // Fix for mobile Chrome keyboard issues\n        if (document.activeElement && document.activeElement.tagName === 'TEXTAREA') {\n          debugLog('MBA9876: [VIEWPORT] Found active textarea, scheduling scroll', {\n            timestamp: Date.now()\n          });\n          \n          // Small delay to allow keyboard to settle\n          setTimeout(() => {\n            debugLog('MBA9876: [VIEWPORT] Executing scrollIntoView', {\n              timestamp: Date.now(),\n              stillActive: document.activeElement?.tagName === 'TEXTAREA'\n            });\n            \n            if (document.activeElement && document.activeElement.tagName === 'TEXTAREA') {\n              // For Android Chrome, use a different scrolling approach\n              if (isAndroidChromeRef.current) {\n                window.scrollTo(0, document.body.scrollHeight);\n              } else {\n                document.activeElement.scrollIntoView({ \n                  behavior: 'smooth', \n                  block: 'center' \n                });\n              }\n            }\n          }, 100);\n        }\n      };\n\n      updateViewportHeight();\n      \n      // Use visualViewport API for more accurate keyboard detection on Android\n      if (window.visualViewport) {\n        window.visualViewport.addEventListener('resize', handleResize);\n        window.visualViewport.addEventListener('scroll', handleResize);\n      } else {\n        // Fallback to window resize events\n        window.addEventListener('resize', handleResize);\n      }\n      \n      window.addEventListener('orientationchange', updateViewportHeight);\n      \n      // Android Chrome gray space fix\n      const handleFocusOut = () => {\n        debugLog('MBA9876: [VIEWPORT] handleFocusOut called - fixing gray space', {\n          timestamp: Date.now()\n        });\n        \n        // Fix gray space on Android Chrome when keyboard closes\n        setTimeout(() => {\n          window.scrollTo(0, 0);\n          \n          // Reset any fixed positioning on input\n          const inputContainer = document.querySelector('.message-input-container');\n          if (inputContainer) {\n            inputContainer.style.position = '';\n            inputContainer.style.bottom = '';\n            \n            // Reset message container padding\n            const messageContainer = document.querySelector('.message-container');\n            if (messageContainer) {\n              messageContainer.style.paddingBottom = '';\n            }\n          }\n          \n          debugLog('MBA9876: [VIEWPORT] Gray space fix - scrolled to top');\n        }, 150);\n      };\n      \n      window.addEventListener('focusout', handleFocusOut);\n\n      return () => {\n        if (window.visualViewport) {\n          window.visualViewport.removeEventListener('resize', handleResize);\n          window.visualViewport.removeEventListener('scroll', handleResize);\n        } else {\n          window.removeEventListener('resize', handleResize);\n        }\n        window.removeEventListener('orientationchange', updateViewportHeight);\n        window.removeEventListener('focusout', handleFocusOut);\n      };\n    }\n  }, [screenWidth]);\n\n  // Outside the renderMessage callback, add a function to group messages by booking ID\n  const groupMessagesByBookingId = (messages) => {\n    const bookingMessages = {};\n    \n    // First pass: collect messages by booking ID\n    messages.forEach(message => {\n      if (message.metadata && message.metadata.booking_id) {\n        const bookingId = message.metadata.booking_id;\n        if (!bookingMessages[bookingId]) {\n          bookingMessages[bookingId] = [];\n        }\n        bookingMessages[bookingId].push({\n          messageId: message.message_id,\n          type: message.type_of_message,\n          timestamp: new Date(message.created_at || message.timestamp),\n          message: message\n        });\n      }\n    });\n    \n    // Second pass: sort messages by timestamp (newest first)\n    Object.keys(bookingMessages).forEach(bookingId => {\n      bookingMessages[bookingId].sort((a, b) => b.timestamp - a.timestamp);\n    });\n    \n    return bookingMessages;\n  };\n\n  // WebSocket message handler defined as a memoized callback\n  const handleWebSocketMessage = useCallback((data) => {\n    debugLog('MBA9876: WebSocket message received:', {\n      type: data.type,\n      conversationId: data.conversation_id,\n      messageId: data.message_id,\n      selectedConversation,\n      currentMessageCount: messages.length\n    });\n    \n    try {\n      // Validate message data\n      if (!data || (!data.message_id && !data.conversation_id && !data.type)) {\n        debugLog('MBA2349f87g9qbh2nfv9cg: Invalid message data received');\n        return;\n      }\n      \n      // Handle user status updates\n      if (data.type === 'user_status_update' && data.user_id) {\n        debugLog('MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Received online status update for user ID:', data.user_id);\n        \n        // Normalize the user_id to string for comparison\n        const statusUserId = String(data.user_id);\n        const isOnline = !!data.is_online;\n        \n        debugLog(`MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Processing status change for user ${statusUserId}, online=${isOnline}`);\n        \n        // Update the conversations list with the new online status\n        setConversations(prevConversations => {\n          // Log the current conversations for debugging\n          debugLog(`MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Checking ${prevConversations.length} conversations for user ${statusUserId}`);\n          \n          // Apply the update\n          const updatedConversations = prevConversations.map(conv => {\n            // Normalize participant IDs to strings for comparison\n            const participant1Id = conv.participant1_id ? String(conv.participant1_id) : '';\n            const participant2Id = conv.participant2_id ? String(conv.participant2_id) : '';\n            \n            // Check if this conversation involves the user whose status changed\n            const matchesUser = (statusUserId === participant1Id || statusUserId === participant2Id);\n            \n            if (matchesUser) {\n              debugLog(`MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Found match in conversation ${conv.conversation_id}, setting other_participant_online=${isOnline}`);\n              \n              // Update this conversation with the new online status\n              return {\n                ...conv,\n                other_participant_online: isOnline\n              };\n            }\n            return conv;\n          });\n          \n          // Check if any conversations were updated\n          const updatedCount = updatedConversations.filter(\n            (conv, i) => conv.other_participant_online !== prevConversations[i].other_participant_online\n          ).length;\n          \n          debugLog(`MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Updated ${updatedCount} conversations with new status for user ${statusUserId}`);\n          \n          return updatedConversations;\n        });\n        \n        // Also update the selected conversation if it's affected\n        if (selectedConversationData) {\n          // Normalize participant IDs to strings\n          const selectedParticipant1Id = selectedConversationData.participant1_id \n            ? String(selectedConversationData.participant1_id) \n            : '';\n          const selectedParticipant2Id = selectedConversationData.participant2_id \n            ? String(selectedConversationData.participant2_id) \n            : '';\n          \n          // Check if selected conversation involves this user\n          if (statusUserId === selectedParticipant1Id || statusUserId === selectedParticipant2Id) {\n            debugLog(`MBA2349f87g9qbh2nfv9cg: [OTHER USER STATUS] Updating selected conversation with online status: ${isOnline} for user ${statusUserId}`);\n            \n            setSelectedConversationData(prev => ({\n              ...prev,\n              other_participant_online: isOnline\n            }));\n          }\n        }\n        \n        return;\n      }\n      \n      // If this message is for our current conversation\n      if (selectedConversation && data.conversation_id && \n          String(data.conversation_id) === String(selectedConversation)) {\n        \n        debugLog('MBA2349f87g9qbh2nfv9cg: Message is for current conversation, adding to list');\n        \n        // Add the new message to the list (at the beginning since FlatList is inverted)\n        setMessages(prevMessages => {\n          debugLog('MBA2349f87g9qbh2nfv9cg: Before adding WebSocket message:', {\n            currentMessageCount: prevMessages.length,\n            newMessageId: data.message_id,\n            newMessageContent: data.content?.substring(0, 50)\n          });\n          \n          // Check if message already exists to avoid duplicates - be more thorough\n          const messageExists = prevMessages.some(msg => {\n            // Check by ID if available (most reliable)\n            if (msg.message_id && data.message_id && \n                String(msg.message_id) === String(data.message_id)) {\n              debugLog('MBA2349f87g9qbh2nfv9cg: Duplicate detected by ID');\n              return true;\n            }\n            \n            // Also check for messages with the same content, timestamp and sender\n            // to catch duplicates that might have different/temporary IDs\n            if (msg.content === data.content && \n                msg.sent_by_other_user === data.sent_by_other_user) {\n              \n              // If the timestamp exists, compare with some tolerance\n              if (msg.timestamp && data.timestamp) {\n                const timeDiff = Math.abs(\n                  new Date(msg.timestamp).getTime() - \n                  new Date(data.timestamp).getTime()\n                );\n                \n                // 5 seconds tolerance (messages sent close to each other)\n                if (timeDiff < 5000) {\n                  debugLog('MBA2349f87g9qbh2nfv9cg: Duplicate detected by content+timestamp');\n                  return true;\n                }\n              } else {\n                // If no timestamp, just assume it's the same message\n                debugLog('MBA2349f87g9qbh2nfv9cg: Duplicate detected by content+sender');\n                return true;\n              }\n            }\n            \n            // Check for optimistic messages that match\n            if (msg._isOptimistic && \n                msg.content === data.content && \n                !data.sent_by_other_user) {\n              debugLog('MBA2349f87g9qbh2nfv9cg: Found matching optimistic message, replacing');\n              return true;\n            }\n            \n            return false;\n          });\n          \n          if (messageExists) {\n            debugLog('MBA2349f87g9qbh2nfv9cg: Message already exists in the list, skipping');\n            \n            // For optimistic messages that now have a real ID, update them\n            if (data.message_id) {\n              const updatedMessages = prevMessages.map(msg => {\n                if (msg._isOptimistic && \n                    msg.content === data.content && \n                    !data.sent_by_other_user) {\n                  // Replace the optimistic message with the real one\n                  return { ...data, _wasOptimistic: true };\n                }\n                return msg;\n              });\n              \n              debugLog('MBA2349f87g9qbh2nfv9cg: Updated optimistic message with real data');\n              return updatedMessages;\n            }\n            \n            return prevMessages;\n          }\n          \n          debugLog('MBA2349f87g9qbh2nfv9cg: Adding new message to list:', {\n            messageId: data.message_id,\n            messageLength: prevMessages.length,\n            newMessageLength: prevMessages.length + 1\n          });\n          \n          const updatedMessages = [data, ...prevMessages];\n          \n          debugLog('MBA2349f87g9qbh2nfv9cg: Messages array updated via WebSocket:', {\n            oldLength: prevMessages.length,\n            newLength: updatedMessages.length,\n            addedMessageId: data.message_id\n          });\n          \n          return updatedMessages;\n        });\n        \n        // Mark the message as read if we're viewing this conversation\n        if (data.message_id && markMessagesAsReadRef.current && data.sent_by_other_user) {\n          debugLog('MBA2349f87g9qbh2nfv9cg: Marking message as read:', data.message_id);\n          markMessagesAsReadRef.current(selectedConversation, [data.message_id]);\n        }\n      } else if (data.conversation_id) {\n        // Update the conversation list for unread messages in other conversations\n        debugLog('MBA2349f87g9qbh2nfv9cg: Message is for another conversation, updating conversation list');\n        setConversations(prevConversations => \n          prevConversations.map(conv => \n            String(conv.conversation_id) === String(data.conversation_id)\n              ? {\n                  ...conv,\n                  last_message: data.content,\n                  last_message_time: data.timestamp,\n                  unread: true\n                }\n              : conv\n          )\n        );\n      }\n    } catch (error) {\n      debugLog('MBA2349f87g9qbh2nfv9cg: Error handling WebSocket message:', error);\n    }\n  }, [selectedConversation]);\n\n  // Initialize WebSocket with the message handler\n  const { isConnected, connectionStatus, markMessagesAsRead, reconnect, disconnect, simulateConnection, isUsingFallback } = useWebSocket(\n    'message', \n    handleWebSocketMessage,\n    { handlerId: 'message-history' }\n  );\n  \n  // Update our ref when markMessagesAsRead changes\n  useEffect(() => {\n    markMessagesAsReadRef.current = markMessagesAsRead;\n  }, [markMessagesAsRead]);\n  \n\n  // Add a function to manually force reconnection\n  const handleForceReconnect = useCallback(() => {\n    debugLog('MBA2349f87g9qbh2nfv9cg: [CONNECTION] User manually requested WebSocket reconnection');\n    if (typeof reconnect === 'function') {\n      reconnect();\n    }\n  }, [reconnect, selectedConversationData]);\n  \n  // Add a function to simulate connection for testing\n  // const handleSimulateConnection = useCallback(() => {\n  //   debugLog('MBA2349f87g9qbh2nfv9cg: User requested simulated connection');\n  //   if (typeof simulateConnection === 'function') {\n  //     simulateConnection();\n  //   }\n  // }, [simulateConnection]);\n  \n  // Update connection status UI and log more detailed information\n  useEffect(() => {\n    setWsConnectionStatus(connectionStatus);\n    \n    // Add more debug logs to check actual WebSocket readyState\n    if (window && window.WebSocket) {\n      debugLog(`MBA3456: [MY CONNECTION] WebSocket connection status changed to ${connectionStatus}`, {\n        isConnected,\n        isUsingFallback,\n        userRole\n      });\n    }\n    \n    // Only log status changes but don't trigger fetches here - that's handled in the mount effect\n    if ((connectionStatus === 'connected' && isConnected) || isUsingFallback) {\n      debugLog('MBA3456: [MY CONNECTION] Connection fully verified as connected or using fallback', {\n        userRole,\n        selectedConversation: selectedConversation ? `ID: ${selectedConversation}` : 'none'\n      });\n    } else {\n      debugLog('MBA3456: [MY CONNECTION] Connection not fully verified, status and state mismatch', {\n        connectionStatus,\n        isConnected,\n        userRole\n      });\n    }\n  }, [connectionStatus, isConnected, isUsingFallback, userRole]);\n  \n  // Force reconnection on component mount to ensure connection\n  useEffect(() => {\n    // Short delay to allow other initializations to complete\n    const timer = setTimeout(() => {\n      debugLog('MBA2349f87g9qbh2nfv9cg: [MY CONNECTION] Forcing reconnection on component mount');\n      if (typeof reconnect === 'function') {\n        reconnect();\n      }\n    }, 1000);\n    \n    return () => clearTimeout(timer);\n  }, [reconnect]);\n  \n    // Add a ref to track if initialization is in progress\n  const isInitializingRef = useRef(false);\n  \n  // Add a ref to track the last window width to detect resize events\n  const lastWindowWidthRef = useRef(typeof window !== 'undefined' ? window.innerWidth : 0);\n  \n  // Track the last execution time to avoid excessive initialization\n  const lastInitTimeRef = useRef(0);\n  \n  // Keep track of the currently selected conversation to preserve during resizes\n  const lastSelectedConversationRef = useRef(null);\n  \n  // Effect to preserve selected conversation during resizes\n  useEffect(() => {\n    // Store current selection when it changes\n    if (selectedConversation) {\n      lastSelectedConversationRef.current = {\n        conversationId: selectedConversation,\n        conversationData: selectedConversationData\n      };\n    }\n  }, [selectedConversation, selectedConversationData]);\n  \n  // MAIN INITIALIZATION - Keep only one, safer initialization effect  \n  useEffect(() => {\n    // Check if this is likely a resize event\n    const currentWindowWidth = typeof window !== 'undefined' ? window.innerWidth : 0;\n    const isResizeEvent = lastWindowWidthRef.current !== 0 && \n                          lastWindowWidthRef.current !== currentWindowWidth;\n    \n    // Update the window width reference for next time\n    if (typeof window !== 'undefined') {\n      lastWindowWidthRef.current = window.innerWidth;\n    }\n    \n    // For resize events, just ensure we preserve the selected conversation\n    if (isResizeEvent) {\n      debugLog('MBA24u45vn', 'Detected resize event, preserving conversation', {\n        oldWidth: lastWindowWidthRef.current,\n        newWidth: currentWindowWidth,\n        hasSelectedConversation: !!selectedConversation,\n        hasStoredConversation: !!lastSelectedConversationRef.current\n      });\n      \n      // If we've lost our selected conversation but have one stored, restore it\n      if (!selectedConversation && lastSelectedConversationRef.current?.conversationId) {\n        debugLog('MBA24u45vn', 'Restoring conversation after resize', {\n          conversationId: lastSelectedConversationRef.current.conversationId\n        });\n        \n        // Set the flag to indicate this is a resize-triggered selection change\n        if (typeof isResizeTriggeredSelectionRef !== 'undefined') {\n          isResizeTriggeredSelectionRef.current = true;\n          debugLog('MBA24u45vn', 'Marked selection as resize-triggered to prevent redundant fetches');\n        }\n        \n        setSelectedConversation(lastSelectedConversationRef.current.conversationId);\n        if (lastSelectedConversationRef.current.conversationData) {\n          setSelectedConversationData(lastSelectedConversationRef.current.conversationData);\n        }\n      }\n      \n      // Skip full initialization for resize events\n      return;\n    }\n    \n    // Prevent running multiple initializations in a short time period\n    const now = Date.now();\n    const minTimeBetweenInits = 1000; // 1 second minimum between initializations\n    \n    if (now - lastInitTimeRef.current < minTimeBetweenInits) {\n      debugLog('MBA24u45vn', 'Initialization throttled - too frequent', {\n        timeSinceLastInit: now - lastInitTimeRef.current,\n        minRequiredTime: minTimeBetweenInits\n      });\n      return;\n    }\n    \n    // Only run if not signed in (cleaning up) or first time signed in (initializing)\n    if (!isSignedIn || loading) {\n      debugLog('MBA1111 MessageHistory: User not signed in, skipping initialization');\n      return;\n    }\n\n    // More robust check: Allow initialization only if we truly need it\n    // Either first time (initialLoadRef.current = true) OR user just signed in but has no conversations\n    const isFirstTime = initialLoadRef.current;\n    const hasNoConversationsAfterSignIn = !initialLoadRef.current && conversations.length === 0;\n    const needsInitialization = isFirstTime || hasNoConversationsAfterSignIn;\n    \n    // Skip if we're already initialized\n    if (!needsInitialization) {\n      return;\n    }\n    \n    // Skip if initialization is already in progress\n    if (isInitializingRef.current) {\n      debugLog('MBA24u45vn', 'Initialization already in progress, skipping duplicate call');\n      return;\n    }\n    \n    // Update the last initialization time\n    lastInitTimeRef.current = now;\n\n    debugLog('MBA1111 MessageHistory: Starting initialization for signed in user');\n    \n    const initializeData = async () => {\n      // Mark initialization as in progress\n      isInitializingRef.current = true;\n    try {\n      // Mark as initialized IMMEDIATELY to prevent race conditions\n      initialLoadRef.current = false;\n      \n      // Add debug logging for route params in initializeData\n      if (route.params?.conversationId) {\n        debugLog('MBA24u45vn', 'Processing route params in initializeData', {\n          conversationId: route.params.conversationId,\n          otherUserName: route.params.otherUserName,\n          currentTime: Date.now()\n        });\n      }\n      \n      // Only reset states if we don't already have conversations loaded\n      if (conversations.length === 0) {\n        setConversations([]);\n        setMessages([]);\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n        setIsLoadingConversations(true);\n        setIsLoadingMessages(false);\n        setCurrentPage(1);\n        setHasMore(true);\n        lastViewedConversationRef.current = null;\n      }\n\n                // Handle URL parameters on web\n        if (Platform.OS === 'web') {\n          const currentUrl = new URL(window.location.href);\n          \n          // Check for selectedConversation parameter (this is the main one we care about for reloads)\n          const rawSelectedConversationId = currentUrl.searchParams.get('selectedConversation');\n          const selectedConversationId = (rawSelectedConversationId && rawSelectedConversationId !== 'null') \n                                         ? rawSelectedConversationId : null;\n          \n          // Also check conversationId for compatibility\n          const rawUrlConversationId = currentUrl.searchParams.get('conversationId');\n          const urlConversationId = (rawUrlConversationId && rawUrlConversationId !== 'null') \n                                    ? rawUrlConversationId : null;\n          \n          // Use selectedConversation first, then fall back to conversationId\n          const conversationToLoad = selectedConversationId || urlConversationId;\n          \n          debugLog('MBA24u45vn', 'Checking URL parameters on initialization', {\n            url: window.location.href,\n            rawSelectedConversationId,\n            selectedConversationId,\n            rawUrlConversationId,\n            urlConversationId,\n            conversationToLoad,\n            hasSelectedConversation: !!selectedConversation,\n            timestamp: Date.now()\n          });\n          \n                     // If we have a valid conversation ID from URL, process it (don't clear URL params yet)\n           if (conversationToLoad) {\n             debugLog('MBA24u45vn', 'Processing valid conversation ID from URL', {\n               conversationId: conversationToLoad,\n               source: selectedConversationId ? 'selectedConversation' : 'conversationId',\n               timestamp: Date.now()\n             });\n             \n             debugLog('MBA24u45vn: Fetching conversations for URL conversation ID');\n             \n             // Fetch conversations and wait for the result\n             const conversationsData = await fetchConversations();\n             \n             // Make sure we have data before proceeding\n             if (conversationsData && Array.isArray(conversationsData) && conversationsData.length > 0) {\n               // Find the conversation in the data\n               const conversation = conversationsData.find(c => c.conversation_id === conversationToLoad);\n               \n               if (conversation) {\n                 debugLog('MBA24u45vn', 'Found conversation from URL in data', {\n                   conversation_id: conversation.conversation_id,\n                   other_user_name: conversation.other_user_name,\n                   has_profile_pic: !!conversation.profile_picture\n                 });\n                 \n                 // Set the selected conversation\n                 setSelectedConversation(conversationToLoad);\n                 setSelectedConversationData(conversation);\n                 \n                 // Set global variable for Navigation component\n                 if (typeof window !== 'undefined') {\n                   window.selectedConversationId = conversationToLoad;\n                 }\n                 \n                 // Update URL to maintain selectedConversation parameter, but clean up other params\n                 const cleanUrl = new URL(window.location.href);\n                 const paramsToKeep = ['selectedConversation'];\n                 const paramsToRemove = [...cleanUrl.searchParams.keys()].filter(key => !paramsToKeep.includes(key));\n                 \n                 paramsToRemove.forEach(key => {\n                   cleanUrl.searchParams.delete(key);\n                 });\n                 \n                 // Ensure selectedConversation is set correctly\n                 cleanUrl.searchParams.set('selectedConversation', conversationToLoad);\n                 \n                 window.history.replaceState({}, '', cleanUrl.toString());\n                 debugLog('MBA24u45vn', 'Updated URL to preserve selectedConversation', {\n                   newUrl: cleanUrl.toString()\n                 });\n                 \n                 // Fetch messages for this conversation\n                 fetchMessages(conversationToLoad);\n                 \n                 return;\n               } else {\n                 debugLog('MBA24u45vn', 'Conversation from URL NOT found in conversations data', {\n                   conversationId: conversationToLoad,\n                   conversationsCount: conversationsData.length,\n                   availableIds: conversationsData.map(c => c.conversation_id)\n                 });\n                 \n                 // Clear invalid conversation parameters only if we have conversation data but conversation not found\n                 const cleanUrl = new URL(window.location.href);\n                 cleanUrl.searchParams.delete('selectedConversation');\n                 cleanUrl.searchParams.delete('conversationId');\n                 window.history.replaceState({}, '', cleanUrl.toString());\n                 debugLog('MBA24u45vn', 'Cleared invalid conversation parameters from URL');\n               }\n             } else {\n               debugLog('MBA24u45vn', 'No conversations data available yet, keeping URL parameters', {\n                 conversationId: conversationToLoad,\n                 conversationsData: conversationsData ? 'empty array' : 'null/undefined'\n               });\n               \n               // Don't clear URL parameters if we don't have conversation data yet\n               // Let the normal initialization proceed and handle this later\n               // Set the conversation ID anyway in case the data loads later\n               setSelectedConversation(conversationToLoad);\n               \n               // Set global variable for Navigation component\n               if (typeof window !== 'undefined') {\n                 window.selectedConversationId = conversationToLoad;\n               }\n               \n               // Clean up other URL parameters but keep selectedConversation\n               const cleanUrl = new URL(window.location.href);\n               const paramsToKeep = ['selectedConversation'];\n               const paramsToRemove = [...cleanUrl.searchParams.keys()].filter(key => !paramsToKeep.includes(key));\n               \n               paramsToRemove.forEach(key => {\n                 cleanUrl.searchParams.delete(key);\n               });\n               \n               window.history.replaceState({}, '', cleanUrl.toString());\n               debugLog('MBA24u45vn', 'Cleaned up other URL parameters but preserved selectedConversation');\n               \n               return;\n             }\n           } else {\n             // No valid conversation parameters, clean up URL\n             const cleanUrl = new URL(window.location.href);\n             const hasAnyParams = cleanUrl.searchParams.toString().length > 0;\n             \n             if (hasAnyParams) {\n               // Only clear params if we're not coming from another screen with valid params\n               const isNavigatingFromOtherScreen = urlConversationId || rawUrlConversationId;\n               \n               if (!isNavigatingFromOtherScreen) {\n                 [...cleanUrl.searchParams.keys()].forEach(key => {\n                   cleanUrl.searchParams.delete(key);\n                 });\n                 \n                 window.history.replaceState({}, '', cleanUrl.toString());\n                 debugLog('MBA24u45vn', 'Cleared all URL parameters - no valid conversation found');\n               }\n             }\n           }\n        }\n\n        // If we have route params on initial load, handle them here\n        if (route.params?.conversationId) {\n          isHandlingRouteParamsRef.current = true;\n          \n          // Check if we should open booking creation (coming from Connections)\n          if (route.params.isProfessional === true) {\n            shouldOpenBookingCreationRef.current = true;\n            debugLog('MBA9999: Will open booking creation after data loads');\n          }\n          \n          debugLog('MBA24u45vn: Fetching conversations from initializeData in route.params?.conversationId');\n          const conversationsData = await fetchConversations();\n          setSelectedConversation(route.params.conversationId);\n          \n          navigation.setParams({ \n            messageId: null, \n            conversationId: null,\n            otherUserName: null,\n            isProfessional: null,\n            clientId: null\n          });\n          return;\n        }\n\n        // Normal initialization - fetch conversations once\n        debugLog('MBA24u45vn About to fetch conversations for normal initialization');\n        const conversationsData = await fetchConversations();\n        \n        // Filter conversations by role\n        const filteredByRole = conversationsData.filter(conv => {\n          if (userRole === 'professional') {\n            return conv.is_professional === true;\n          } else if (userRole === 'petOwner') {\n            return conv.is_professional === false;\n          }\n          return true;\n        });\n        \n        if (Platform.OS === 'web' && screenWidth > 900 && filteredByRole.length > 0) {\n          // Sort conversations by last message time to find the most recent\n          const sortedConversations = [...filteredByRole].sort((a, b) => {\n            const timeA = a.last_message_time ? new Date(a.last_message_time).getTime() : 0;\n            const timeB = b.last_message_time ? new Date(b.last_message_time).getTime() : 0;\n            return timeB - timeA; // Sort descending (newest first)\n          });\n          \n          debugLog('MBA3456: Auto-selecting most recent conversation on initialization', {\n            conversation_id: sortedConversations[0].conversation_id,\n            role: userRole\n          });\n          \n          setSelectedConversation(sortedConversations[0].conversation_id);\n          setSelectedConversationData(sortedConversations[0]);\n        }\n      } catch (error) {\n        console.error('Error in initialization:', error);\n        // Reset initialization flag on error so it can be retried\n        initialLoadRef.current = true;\n      } finally {\n        setIsInitialLoad(false);\n        isHandlingRouteParamsRef.current = false;\n        // Reset initialization in progress flag\n        isInitializingRef.current = false;\n      }\n    };\n\n    initializeData();\n\n    return () => {\n      debugLog('MBA9999: Component unmounting - cleaning up');\n      \n      // Reset everything for future component mount\n      setConversations([]);\n      setMessages([]);\n      setSelectedConversation(null);\n      setSelectedConversationData(null);\n      initialLoadRef.current = true;\n      setIsInitialLoad(true);\n      isHandlingRouteParamsRef.current = false;\n      hasLoadedMessagesRef.current = false;\n      shouldOpenBookingCreationRef.current = false;\n      lastViewedConversationRef.current = null;\n      \n      // Clear fetch tracking refs\n      isFetchingConversationsRef.current = false;\n      isFetchingMessagesRef.current.clear();\n      \n      // Clear the global selected conversation tracking and URL params\n      if (typeof window !== 'undefined') {\n        window.selectedConversationId = null;\n        \n        // Clear URL params\n        const currentUrl = new URL(window.location.href);\n        if (currentUrl.searchParams.has('selectedConversation') || currentUrl.searchParams.has('conversationId')) {\n          currentUrl.searchParams.delete('selectedConversation');\n          currentUrl.searchParams.delete('conversationId');\n          window.history.replaceState({}, '', currentUrl.toString());\n          debugLog('MBA4477: Cleared URL params on component unmount');\n        }\n      }\n      \n      // Clear navigation params\n      if (navigation && navigation.setParams) {\n        navigation.setParams({ selectedConversation: undefined });\n        debugLog('MBA4477: Cleared navigation params on component unmount');\n      }\n    };\n  }, [isSignedIn, loading, userRole, screenWidth]); // Added userRole, screenWidth to dependencies\n  \n  // Effect to trigger booking creation once conversation data is loaded\n  useEffect(() => {\n    // Only run if we should open booking creation, have conversation data, and messages are loaded\n    if (shouldOpenBookingCreationRef.current && selectedConversationData && hasLoadedMessagesRef.current && isSignedIn) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Conversation data and messages loaded, triggering booking creation', {\n          conversationId: selectedConversationData.conversation_id,\n          isProfessional: selectedConversationData.is_professional,\n          hasDraft: hasDraft,\n          draftData: draftData ? 'exists' : 'none'\n        });\n      }\n      \n      // Reset the flag to prevent re-triggering\n      shouldOpenBookingCreationRef.current = false;\n      \n      // Add a small delay to ensure everything is properly loaded\n      setTimeout(() => {\n        handleCreateBooking();\n      }, 300);\n    }\n  }, [selectedConversationData, hasLoadedMessagesRef.current, hasDraft, draftData, isSignedIn]);\n\n  // Ref to track the last time we fetched conversations\n  const lastConversationFetchTimeRef = useRef(0);\n  \n  // Ref to track if a resize event triggered this selection change\n  const isResizeTriggeredSelectionRef = useRef(false);\n  \n  // Effect to update selected conversation data when conversations are loaded\n  useEffect(() => {\n    if (!selectedConversation || !isSignedIn) {\n      debugLog('MBA98765 Skipping conversation data update - no conversation or not signed in');\n      return;\n    }\n\n    // If this is a resize-triggered selection change, don't trigger another fetch\n    if (isResizeTriggeredSelectionRef.current) {\n      debugLog('MBA24u45vn: Skipping fetch for resize-triggered selection change', {\n        conversationId: selectedConversation\n      });\n      isResizeTriggeredSelectionRef.current = false;\n    }\n\n    const conversation = conversations.find(c => c.conversation_id === selectedConversation);\n    if (conversation) {\n      debugLog('MBA98765 Updating selected conversation data:', {\n        conversation_id: conversation.conversation_id,\n        is_professional: conversation.is_professional,\n        other_user_name: conversation.other_user_name\n      });\n      setSelectedConversationData(conversation);\n    } else {\n      debugLog('MBA98765 Selected conversation not found in conversations list');\n      \n      // Throttle fetch operations on conversation change\n      const now = Date.now();\n      const minTimeBetweenFetches = 1000; // 1 second minimum between fetches\n      \n      if (now - lastConversationFetchTimeRef.current < minTimeBetweenFetches) {\n        debugLog('MBA24u45vn: Throttled conversation fetch - too frequent', {\n          timeSinceLastFetch: now - lastConversationFetchTimeRef.current,\n          conversationId: selectedConversation\n        });\n        return;\n      }\n      \n      // Update the last fetch time\n      lastConversationFetchTimeRef.current = now;\n      \n      // If we have a selected conversation but it's not in the list,\n      // we should fetch conversations again\n      debugLog('MBA24u45vn: Fetching conversations from useEffect in selectedConversation');\n      fetchConversations();\n    }\n  }, [selectedConversation, conversations, isSignedIn]);\n\n  // Effect to fetch messages when conversation is selected\n  useEffect(() => {\n    if (!selectedConversation || !isSignedIn) {\n      debugLog('MBA98765 Skipping message fetch - no conversation selected or not signed in');\n      return;\n    }\n\n    // Only fetch if we haven't loaded messages for this conversation yet\n    if (!hasLoadedMessagesRef.current || lastViewedConversationRef.current !== selectedConversation) {\n      debugLog('MBA98765 Fetching messages for conversation:', selectedConversation);\n      fetchMessages(selectedConversation, 1);\n      hasLoadedMessagesRef.current = true;\n      lastViewedConversationRef.current = selectedConversation;\n    }\n  }, [selectedConversation, isSignedIn]);\n\n  // Modify existing screen width effect to be safer\n  useEffect(() => {\n    if (!isSignedIn) return; // Don't do anything if not signed in\n    \n    // Only track width changes for actual threshold crossings\n    const prevWidth = prevScreenWidthRef.current;\n    const hasWidthCrossedThreshold = \n      (prevWidth <= 900 && screenWidth > 900) || \n      (prevWidth > 900 && screenWidth <= 900);\n\n    // Skip the effect if we haven't crossed the threshold\n    if (!hasWidthCrossedThreshold) {\n      // Still update the reference for next check\n      prevScreenWidthRef.current = screenWidth;\n      return;\n    }\n\n    if (is_DEBUG) {\n      console.log('MBA98765 Screen width threshold crossed:', {\n        prev: prevWidth,\n        current: screenWidth,\n        crossedFrom: prevWidth <= 900 ? 'mobile' : 'desktop',\n        crossedTo: screenWidth <= 900 ? 'mobile' : 'desktop'\n      });\n    }\n\n    // Update reference\n    prevScreenWidthRef.current = screenWidth;\n\n    // Only auto-select a conversation when crossing from mobile to desktop\n    if (prevWidth <= 900 && screenWidth > 900 && conversations.length > 0 && !selectedConversation) {\n      if (is_DEBUG) {\n        console.log('MBA98765 Auto-selecting first conversation when crossing to desktop');\n      }\n      setSelectedConversation(conversations[0].conversation_id);\n    }\n  }, [screenWidth, isSignedIn]);\n\n  // Add a ref outside of any effect to track previous screen width\n  const prevFilterScreenWidthRef = useRef(getInitialWidth());\n  \n  // Add effect to filter conversations based on user role\n  useEffect(() => {\n    if (!conversations || conversations.length === 0) return;\n    \n    const isDesktopView = screenWidth > 900;\n    const wasPreviouslyDesktopView = prevFilterScreenWidthRef.current > 900;\n    \n    // Only log when there's an actual change to filter (not on every resize)\n    const shouldDetailLog = conversations.length < 20;  // Limit detailed logging for performance\n    \n    if (shouldDetailLog) {\n      debugLog('MBA3456: Filtering conversations by role', {\n        currentRole: userRole,\n        totalConversations: conversations.length,\n        screenWidth: screenWidth,\n        isDesktopView\n      });\n    }\n    \n    // Filter conversations based on the role from context\n    const filteredByRole = conversations.filter(conv => {\n      // For professional role, show only conversations where is_professional is true\n      if (userRole === 'professional') {\n        return conv.is_professional === true;\n      }\n      // For pet owner role, show only conversations where is_professional is false\n      else if (userRole === 'petOwner' || userRole === 'owner') {\n        return conv.is_professional === false;\n      }\n      // If no role specified, show all conversations (fallback)\n      return true;\n    });\n    \n    if (shouldDetailLog) {\n      debugLog('MBA3456: Filtered conversations result', {\n        originalCount: conversations.length,\n        filteredCount: filteredByRole.length,\n        currentRole: userRole\n      });\n    }\n    \n    // Update the filteredConversations state\n    setFilteredConversations(filteredByRole);\n    \n    // Only run auto-select logic when:\n    // 1. We're in desktop view\n    // 2. AND either we just crossed from mobile to desktop OR we need to select an initial conversation\n    const justCrossedToDesktop = isDesktopView && !wasPreviouslyDesktopView;\n    const needsInitialSelection = isDesktopView && !selectedConversation;\n    \n    if (Platform.OS === 'web' && (justCrossedToDesktop || needsInitialSelection)) {\n      // If we have filtered conversations, ensure one is selected\n      if (filteredByRole.length > 0) {\n        // Check if the currently selected conversation is in the filtered list\n        const isSelectedConversationInFiltered = selectedConversation && \n          filteredByRole.some(conv => conv.conversation_id === selectedConversation);\n        \n        if (!isSelectedConversationInFiltered) {\n          // Sort conversations by last message time to find the most recent\n          const sortedConversations = [...filteredByRole].sort((a, b) => {\n            const timeA = a.last_message_time ? new Date(a.last_message_time).getTime() : 0;\n            const timeB = b.last_message_time ? new Date(b.last_message_time).getTime() : 0;\n            return timeB - timeA; // Sort descending (newest first)\n          });\n          \n          // Select the most recent conversation\n          if (sortedConversations.length > 0) {\n            debugLog('MBA3456: Auto-selecting most recent conversation after role filter', {\n              conversation_id: sortedConversations[0].conversation_id,\n              justCrossedToDesktop,\n              needsInitialSelection\n            });\n            setSelectedConversation(sortedConversations[0].conversation_id);\n            setSelectedConversationData(sortedConversations[0]);\n          }\n        }\n      } else {\n        // No conversations for this role, clear selection\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n      }\n    }\n    \n    // Update the screenWidth reference for next comparison\n    prevFilterScreenWidthRef.current = screenWidth;\n    \n  }, [conversations, userRole, selectedConversation, screenWidth]);\n\n  // Update the existing useEffect for search query to work with the filtered conversations\n  useEffect(() => {\n    if (!conversations || conversations.length === 0) {\n      return;\n    }\n    \n    // First filter by role regardless of search query\n    const roleFiltered = conversations.filter(conv => {\n      if (userRole === 'professional') {\n        return conv.is_professional === true;\n      } else if (userRole === 'petOwner') {\n        return conv.is_professional === false;\n      }\n      return true; // fallback\n    });\n    \n    // Then apply search filter if needed\n    if (searchQuery.trim() === '') {\n      // No search query, just use the role-filtered list\n      setFilteredConversations(roleFiltered);\n    } else {\n      // Apply search filter on top of role filter\n      const lowercaseQuery = searchQuery.trim().toLowerCase();\n      const searchFiltered = roleFiltered.filter(conv => {\n        const matchesSearch = conv.other_user_name && \n          conv.other_user_name.toLowerCase().includes(lowercaseQuery);\n        return matchesSearch;\n      });\n      \n      setFilteredConversations(searchFiltered);\n      \n      debugLog('MBA3456: Search filtered conversations', {\n        roleFilteredCount: roleFiltered.length,\n        searchFilteredCount: searchFiltered.length,\n        searchQuery: searchQuery.trim()\n      });\n    }\n  }, [searchQuery, conversations, userRole]);\n\n  // Effect to validate preserved selectedConversation from URL once conversations are loaded\n  useEffect(() => {\n    // Only run this effect if:\n    // 1. We have conversations loaded\n    // 2. We have a selected conversation \n    // 3. We're signed in\n    // 4. We're on web platform\n    if (Platform.OS === 'web' && conversations.length > 0 && selectedConversation && isSignedIn) {\n      // Check if the current selectedConversation is actually in the loaded conversations\n      const conversationExists = conversations.find(c => c.conversation_id === selectedConversation);\n      \n      if (conversationExists) {\n        debugLog('MBA24u45vn', 'Validated preserved selectedConversation from URL', {\n          conversationId: selectedConversation,\n          conversationName: conversationExists.other_user_name,\n          isFound: true\n        });\n        \n        // Ensure the conversation data is set\n        if (!selectedConversationData) {\n          setSelectedConversationData(conversationExists);\n        }\n        \n        // Ensure messages are loaded for this conversation\n        if (!hasLoadedMessagesRef.current || lastViewedConversationRef.current !== selectedConversation) {\n          debugLog('MBA24u45vn', 'Loading messages for validated preserved conversation');\n          fetchMessages(selectedConversation, 1);\n          hasLoadedMessagesRef.current = true;\n          lastViewedConversationRef.current = selectedConversation;\n        }\n      } else {\n        debugLog('MBA24u45vn', 'Preserved selectedConversation not found in loaded conversations', {\n          conversationId: selectedConversation,\n          totalConversations: conversations.length,\n          availableIds: conversations.map(c => c.conversation_id)\n        });\n        \n        // Clear invalid conversation from URL and state\n        if (typeof window !== 'undefined') {\n          const currentUrl = new URL(window.location.href);\n          if (currentUrl.searchParams.has('selectedConversation')) {\n            currentUrl.searchParams.delete('selectedConversation');\n            window.history.replaceState({}, '', currentUrl.toString());\n            debugLog('MBA24u45vn', 'Cleared invalid selectedConversation from URL');\n          }\n          window.selectedConversationId = null;\n        }\n        \n        // Clear selected conversation state\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n      }\n    }\n  }, [conversations, selectedConversation, isSignedIn, selectedConversationData]);\n\n    // Fetch conversations \n  const fetchConversations = async () => {\n    // Get stack trace to see where this is being called from\n    const stackTrace = new Error().stack;\n    \n    // Get current state for debug logging\n    const currentRoute = navigation.getState()?.routes?.[navigation.getState()?.index];\n    const routeName = currentRoute?.name;\n    const screenParams = currentRoute?.params;\n    \n    debugLog('MBA24u45vn', 'fetchConversations called', {\n      stack: stackTrace.split('\\n')[2],\n      selectedConversation,\n      hasExistingConversations: conversations.length > 0,\n      routeName,\n      screenParams: JSON.stringify(screenParams),\n      routeParams: route.params ? JSON.stringify(route.params) : 'none',\n      timestamp: Date.now()\n    });\n\n    // Prevent duplicate fetches\n    if (isFetchingConversationsRef.current) {\n      debugLog('MBA24u45vn', 'Conversations fetch already in progress, skipping duplicate call', {\n        caller: stackTrace.split('\\n')[2],\n        currentlySelected: selectedConversation\n      });\n      return conversations; // Return existing conversations if available\n    }\n\n    try {\n      isFetchingConversationsRef.current = true;\n      setIsLoadingConversations(true);\n      debugLog('MBA24u45vn', 'Making API call to fetch conversations', {\n        userRole,\n        isSignedIn,\n        selectedConversation,\n        current_url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n        caller: stackTrace.split('\\n')[2]\n      });\n      \n      const data = await getConversations();\n      \n      // Check if there's a new conversation from route params that we should look for\n      if (route.params?.conversationId) {\n        const newConversation = data.find(c => c.conversation_id === route.params.conversationId);\n        debugLog('MBA24u45vn', 'Checking for new conversation in API response', {\n          conversationId: route.params.conversationId,\n          found: !!newConversation,\n          total_conversations: data.length\n        });\n      }\n      \n      if (data && Array.isArray(data)) {\n        debugLog('MBA24u45vn', 'Conversations API response received', {\n          count: data.length,\n          userRole,\n          route_params: route.params ? JSON.stringify(route.params) : 'none',\n          current_url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n          conversations: data.map(c => ({\n            conversation_id: c.conversation_id,\n            is_professional: c.is_professional,\n            other_user_name: c.other_user_name,\n            has_profile_pic: !!c.profile_picture\n          }))\n        });\n        \n        // Check if route params contains a conversation ID we should be selecting\n        if (route.params?.conversationId) {\n          const matchingConversation = data.find(c => c.conversation_id === route.params.conversationId);\n          \n          if (matchingConversation) {\n            debugLog('MBA24u45vn', 'Found conversation in API response matching route params', {\n              conversation_id: matchingConversation.conversation_id,\n              other_user_name: matchingConversation.other_user_name,\n              has_profile_pic: !!matchingConversation.profile_picture,\n              is_selected: selectedConversation === matchingConversation.conversation_id\n            });\n          } else {\n            debugLog('MBA24u45vn', 'Conversation from route params NOT found in API response', {\n              conversation_id: route.params.conversationId,\n              total_conversations: data.length\n            });\n          }\n        }\n        \n        // Store the full list of conversations\n        setConversations(data);\n        \n        // Filter conversations by user role immediately\n        const filteredByRole = data.filter(conv => {\n          if (userRole === 'professional') {\n            return conv.is_professional === true;\n          } else if (userRole === 'petOwner' || userRole === 'owner') {\n            return conv.is_professional === false;\n          }\n          return true; // fallback\n        });\n        \n        debugLog('MBA3456: Filtered conversations by role:', {\n          originalCount: data.length,\n          filteredCount: filteredByRole.length,\n          userRole,\n          filteredConversations: filteredByRole.map(c => ({\n            id: c.conversation_id,\n            is_professional: c.is_professional,\n            name: c.other_user_name\n          }))\n        });\n        \n                  // Update filtered conversations with role-filtered data\n        setFilteredConversations(filteredByRole);\n        \n        // If we have a selected conversation, make sure it's still valid for the current role\n        if (selectedConversation) {\n          const conversation = filteredByRole.find(c => c.conversation_id === selectedConversation);\n          if (conversation) {\n            // Conversation is valid for current role, update data\n            setSelectedConversationData(conversation);\n          } else {\n            // Conversation is not valid for current role, clear selection\n            setSelectedConversation(null);\n            setSelectedConversationData(null);\n            debugLog('MBA3456: Clearing selected conversation - not valid for current role', {\n              selectedConversation,\n              userRole\n            });\n          }\n        }\n        \n        // Return the data for chaining\n        return data;\n      } else {\n        debugLog('MBA3456: Invalid conversations data structure:', data);\n        return [];\n      }\n    } catch (error) {\n      debugLog('MBA3456: Error fetching conversations:', error);\n      return [];\n    } finally {\n      setIsLoadingConversations(false);\n      isFetchingConversationsRef.current = false;\n    }\n  };\n\n  // Fetch messages \n  const fetchMessages = async (conversationId, page = 1) => {\n    if (!conversationId) {\n      debugLog('MBA24u45vn', 'No conversation ID provided for message fetch');\n      return;\n    }\n    \n    debugLog('MBA24u45vn', 'fetchMessages called', {\n      conversationId,\n      page,\n      stack: new Error().stack.split('\\n')[2],\n      routeParams: route.params ? JSON.stringify(route.params) : 'none',\n      url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n      selectedConversation,\n      hasConversationData: !!selectedConversationData,\n      timestamp: Date.now()\n    });\n\n    // First check if this conversation is valid for the current role\n    // Skip validation if we don't have any conversations yet - this could be a brand new conversation\n    if (conversations.length > 0) {\n      const isValidForRole = conversations.some(conv => {\n        const matchesId = conv.conversation_id === conversationId;\n        \n        let matchesRole = false;\n        if (userRole === 'professional') {\n          matchesRole = conv.is_professional === true;\n        } else if (userRole === 'petOwner' || userRole === 'owner') {\n          matchesRole = conv.is_professional === false;\n        }\n        \n        debugLog('MBA3456: Validating conversation for role', {\n          conversationId,\n          userRole,\n          conversation_is_professional: conv.is_professional,\n          matchesId,\n          matchesRole,\n          valid: matchesId && matchesRole\n        });\n        \n        return matchesId && matchesRole;\n      });\n      \n      if (!isValidForRole) {\n        debugLog('MBA3456: Attempted to fetch messages for conversation not valid for current role', {\n          conversationId,\n          userRole,\n          // This might be a new conversation, so we'll check if it's in route params\n          fromRouteParams: route.params?.conversationId === conversationId,\n          allConversations: conversations.map(c => ({\n            id: c.conversation_id,\n            is_professional: c.is_professional\n          }))\n        });\n        \n        // If this is coming from route params, it might be a new conversation\n        // We'll try to fetch messages anyway\n        if (route.params?.conversationId === conversationId) {\n          debugLog('MBA3456: Conversation from route params, attempting to fetch messages anyway');\n        } else {\n          // Clear messages and selection for invalid conversations\n          setMessages([]);\n          setSelectedConversation(null);\n          setSelectedConversationData(null);\n          return;\n        }\n      }\n    } else {\n      debugLog('MBA3456: No conversations in state yet, skipping role validation');\n    }\n\n    // Create a unique key for this fetch operation\n    const fetchKey = `${conversationId}-${page}`;\n    \n    // Prevent duplicate fetches for the same conversation and page\n    if (isFetchingMessagesRef.current.has(fetchKey)) {\n      debugLog('MBA98765 Messages fetch already in progress for conversation:', conversationId, 'page:', page, '- skipping duplicate call');\n      return;\n    }\n\n    try {\n      isFetchingMessagesRef.current.add(fetchKey);\n      debugLog('MBA98765 Fetching messages for conversation:', conversationId, 'page:', page);\n      \n      // Only clear messages for the first page (initial load)\n      // For pagination, we'll append the new messages\n      if (page === 1) {\n        setMessages([]);\n        setHasDraft(false);\n        setDraftData(null);\n        processedPagesRef.current.clear();\n        messageIdsRef.current.clear();\n        // Reset pagination state\n        setCurrentPage(1);\n        // Don't set hasMore to true here - wait for API response\n      }\n\n      // Set loading state\n      if (page > 1) {\n        setIsLoadingMore(true);\n        isLoadingMoreRef.current = true;\n      } else {\n        setIsLoadingMessages(true);\n      }\n\n      const data = await getConversationMessages(conversationId, page);\n      \n      // Check for auth issues in response\n      if (!data) {\n        debugLog('MBA1111 fetchMessages: No data returned, possible auth issue');\n        return;\n      }\n\n      if (data && Array.isArray(data.messages)) {\n        const newMessages = data.messages;\n        debugLog('MBA24u45vn', 'Messages API response received', {\n          conversationId,\n          page,\n          count: newMessages.length,\n          has_more: !!data.has_more,\n          has_draft: !!data.has_draft,\n          isPagination: page > 1,\n          url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n          timestamp: Date.now()\n        });\n\n        // Check for draft data in the response\n        if (data.has_draft) {\n          setHasDraft(true);\n          setDraftData(data.draft_data);\n          debugLog('MBA98765 Draft data found:', data.draft_data);\n        }\n\n        // For first page, just set the messages\n        // For pagination, append to existing messages\n        if (page === 1) {\n          setMessages(newMessages);\n        } else {\n          setMessages(prevMessages => {\n            // Track existing message IDs to avoid duplicates\n            const existingIds = new Set(prevMessages.map(m => m.message_id));\n            \n            // Filter out duplicates from new messages\n            const uniqueNewMessages = newMessages.filter(\n              msg => !existingIds.has(msg.message_id)\n            );\n            \n            // Create combined array with all unique messages\n            const combinedMessages = [...prevMessages, ...uniqueNewMessages];\n            \n            debugLog('MBA98765 Combined messages for pagination:', {\n              previous: prevMessages.length,\n              newUnique: uniqueNewMessages.length,\n              combined: combinedMessages.length\n            });\n            \n            return combinedMessages;\n          });\n        }\n\n        // Update pagination state\n        setHasMore(!!data.has_more);\n        setCurrentPage(page);\n        processedPagesRef.current.add(page);\n\n        // Track message IDs to avoid duplicates\n        newMessages.forEach(msg => {\n          if (msg.message_id) {\n            messageIdsRef.current.add(msg.message_id);\n          }\n        });\n\n        debugLog('MBA98765 Message fetch completed for conversation:', conversationId);\n      } else {\n        debugLog('MBA98765 Invalid message data structure:', data);\n      }\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n      debugLog('MBA98765 Error in fetchMessages:', error);\n    } finally {\n      // Reset loading states\n      setIsLoadingMore(false);\n      setIsLoadingMessages(false);\n      \n      // Add a small delay before resetting the loading ref to prevent immediate re-fetch\n      setTimeout(() => {\n        isLoadingMoreRef.current = false;\n      }, 500);\n      \n      isFetchingMessagesRef.current.delete(fetchKey);\n    }\n  };\n\n  // Function to send a message\n  const SendNormalMessage = async (messageContent, imageMessageIds = [], messageObject = null) => {\n    try {\n      debugLog('MBA2u3f89fbno4: [API] SendNormalMessage called', {\n        messageContentLength: messageContent?.length,\n        messageContentPreview: messageContent?.substring(0, 50),\n        selectedConversation,\n        hasSelectedConversation: !!selectedConversation,\n        selectedConversationType: typeof selectedConversation,\n        hasImageMessageIds: imageMessageIds && imageMessageIds.length > 0,\n        imageMessageIds,\n        imageCount: imageMessageIds?.length || 0,\n        hasMessageObject: !!messageObject,\n        isImageMessage: messageObject?.type_of_message === 'image_message',\n        currentMessageCount: messages.length,\n        timestamp: Date.now()\n      });\n\n      if (!selectedConversation) {\n        throw new Error('No conversation selected');\n      }\n\n      // If we have a pre-created message object from an image upload, use it directly\n      if (messageObject) {\n        debugLog('MBA5511: Using pre-created message object:', {\n          messageId: messageObject.message_id,\n          type: messageObject.type_of_message,\n          hasImageUrls: !!messageObject.image_urls && messageObject.image_urls.length > 0,\n          imageCount: messageObject.image_urls?.length || 0\n        });\n        \n        // Add new message to the beginning of the list since FlatList is inverted\n        setMessages(prevMessages => {\n          debugLog('MBA5511: Adding message object directly to list', {\n            beforeLength: prevMessages.length,\n            afterLength: prevMessages.length + 1,\n            newMessageId: messageObject.message_id\n          });\n          \n          return [messageObject, ...prevMessages];\n        });\n        \n        // Update conversation's last message\n        setConversations(prev => prev.map(conv => \n          conv.conversation_id === selectedConversation \n            ? {\n                ...conv,\n                last_message: messageObject.content || 'Image message',\n                last_message_time: messageObject.timestamp\n              }\n            : conv\n        ));\n        \n        return messageObject;\n      }\n\n      // Normal message flow (text only or with separate image IDs)\n      // Allow empty content if we have images\n      if ((!imageMessageIds || imageMessageIds.length === 0) && (!messageContent || !messageContent.trim())) {\n        throw new Error('Message content is empty and no images provided');\n      }\n      \n      // Log that we're sending either text or images or both\n      debugLog('MBA2u3f89fbno4: [API] Sending message with content and/or images', {\n        hasContent: !!messageContent && messageContent.trim().length > 0,\n        hasImages: imageMessageIds && imageMessageIds.length > 0,\n        imageCount: imageMessageIds?.length || 0\n      });\n      \n      const token = await getStorage('userToken');\n      \n      const requestData = {\n        conversation_id: selectedConversation,\n        content: messageContent ? messageContent.trim() : ''\n      };\n      \n      // Add the image message IDs if available\n      if (imageMessageIds && imageMessageIds.length > 0) {\n        requestData.image_message_ids = imageMessageIds;\n      }\n      \n      debugLog('MBA2u3f89fbno4: [API] About to send API request', {\n        requestData,\n        apiUrl: `${API_BASE_URL}/api/messages/v1/send_norm_message/`,\n        hasToken: !!token,\n        timestamp: Date.now()\n      });\n      \n      const response = await axios.post(`${API_BASE_URL}/api/messages/v1/send_norm_message/`, requestData, {\n        headers: { \n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n\n      debugLog('MBA2u3f89fbno4: [API] Message sent successfully', {\n        messageId: response.data.message_id,\n        timestamp: response.data.timestamp,\n        responseStatus: response.status,\n        responseData: response.data\n      });\n\n      // Add new message to the beginning of the list since FlatList is inverted\n      setMessages(prevMessages => {\n        debugLog('MBA2u3f89fbno4: [API] Adding sent message to list', {\n          beforeLength: prevMessages.length,\n          afterLength: prevMessages.length + 1,\n          newMessageId: response.data.message_id\n        });\n        \n        return [response.data, ...prevMessages];\n      });\n\n      // Update conversation's last message\n      setConversations(prev => prev.map(conv => \n        conv.conversation_id === selectedConversation \n          ? {\n              ...conv,\n              last_message: messageContent,\n              last_message_time: response.data.timestamp\n            }\n          : conv\n      ));\n\n      debugLog('MBA2u3f89fbno4: [API] SendNormalMessage completed successfully');\n      return response.data;\n    } catch (error) {\n      debugLog('MBA2u3f89fbno4: [API] Error in SendNormalMessage', {\n        errorMessage: error.message,\n        errorResponse: error.response?.data,\n        errorStatus: error.response?.status,\n        requestedConversationId: selectedConversation,\n        requestedMessageContent: messageContent?.substring(0, 50),\n        timestamp: Date.now()\n      });\n      \n      console.error('Error sending message:', error);\n      throw error;\n    }\n  };\n\n  // Update the handleCreateBooking function\n  const handleCreateBooking = async () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleCreateBooking:', {\n        selectedConversationData,\n        selectedConversation,\n        isProfessional: selectedConversationData?.is_professional,\n        hasDraft,\n        draftData\n      });\n    }\n    \n    if (!selectedConversationData) {\n      debugLog('MBA24u45vn: No conversation data found, Fetching conversations from handleCreateBooking');\n      await fetchConversations();\n      const updatedConversation = conversations.find(conv => conv.conversation_id === selectedConversation);\n      if (!updatedConversation) {\n        console.log('MBA98765 Still no conversation data after refresh');\n        return;\n      }\n      setSelectedConversationData(updatedConversation);\n      debugLog('MBA24u45vn: Conversation data found in handleCreateBooking', {\n        updatedConversation\n      });\n    }\n\n    // Check if current user is the professional by checking their role in the conversation\n    const isProfessional = selectedConversationData.is_professional === true;\n    \n    if (is_DEBUG) {\n      console.log('MBA98765 Is Professional?', isProfessional);\n    }\n\n    setShowDropdown(false); // Close dropdown first to prevent any UI issues\n\n    if (isProfessional) {\n      if (is_DEBUG) {\n        console.log('MBA98765 User is professional - checking for existing draft', { hasDraft, draftData });\n      }\n\n      if (hasDraft && draftData) {\n        // Show the draft confirmation modal\n        setShowDraftConfirmModal(true);\n      } else {\n        // No existing draft, create new one\n        await createNewDraft();\n      }\n    } else {\n      console.log('MBA98765 User is owner - showing request modal');\n      setShowRequestModal(true);\n    }\n  };\n\n  // Helper function to create a new draft\n  const createNewDraft = async () => {\n    try {\n      const token = await getStorage('userToken');\n      const response = await axios.post(\n        `${API_BASE_URL}/api/bookings/v1/create/`,\n        {\n          conversation_id: selectedConversation\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      if (is_DEBUG) {\n        console.log('MBA98765 Create draft response:', response.data);\n      }\n\n      // Refresh messages to update draft status\n      await fetchMessages(selectedConversation, 1);\n\n      // Open BookingStepModal with new draft\n      if (response.data.draft_id) {\n        setCurrentBookingId(response.data.draft_id);\n        setTimeout(() => {\n          setShowBookingStepModal(true);\n        }, 100);\n      }\n    } catch (error) {\n      console.error('Error creating draft:', error);\n      Alert.alert('Error', 'Unable to create draft. Please try again.');\n    }\n  };\n\n  // Add the handleContinueExisting function\n  const handleContinueExisting = () => {\n    if (is_DEBUG) {\n      console.log('MBA98765 handleContinueExisting:', {\n        draftData,\n        showDraftConfirmModal,\n        showBookingStepModal\n      });\n    }\n\n    setShowDraftConfirmModal(false);\n    \n    // Use draft_id instead of booking_id\n    if (draftData?.draft_id) {\n      setCurrentBookingId(draftData.draft_id);\n      // Add a small delay to ensure modal state is updated\n      setTimeout(() => {\n        if (is_DEBUG) {\n          console.log('MBA98765 Opening BookingStepModal with draft:', draftData.draft_id);\n        }\n        setShowBookingStepModal(true);\n      }, 100);\n    } else {\n      console.error('MBA98765 No draft_id found in draftData:', draftData);\n    }\n  };\n\n  // Add the handleCreateNew function\n  const handleCreateNew = async () => {\n    setShowDraftConfirmModal(false);\n    await createNewDraft();\n  };\n\n  // Update loadMoreMessages to check current state before loading\n  const loadMoreMessages = useCallback(() => {\n    debugLog('MBA2349f87g9qbh2nfv9cg: loadMoreMessages called', {\n      hasMore,\n      isLoadingMore,\n      isLoadingMoreRef: isLoadingMoreRef.current,\n      currentPage,\n      selectedConversation,\n      messagesLength: messages.length\n    });\n    \n    // Add a safety check to ensure we have a conversation selected\n    if (!selectedConversation) {\n      debugLog('MBA2349f87g9qbh2nfv9cg: No conversation selected, cannot load more messages');\n      return;\n    }\n    \n    // More reliable condition checking with better logging\n    const isAlreadyLoading = isLoadingMoreRef.current || isLoadingMore;\n    const nextPageAlreadyProcessed = processedPagesRef.current.has(currentPage + 1);\n    \n    // Only load more messages if:\n    // 1. There are more messages to load\n    // 2. We're not already loading (both state and ref)\n    // 3. We have a selected conversation\n    // 4. The next page hasn't already been processed\n    if (hasMore && \n        !isAlreadyLoading && \n        !nextPageAlreadyProcessed) {\n      \n      debugLog(`MBA2349f87g9qbh2nfv9cg: Starting pagination load for page ${currentPage + 1}`, {\n        hasMore,\n        isAlreadyLoading,\n        nextPageAlreadyProcessed,\n        currentPage\n      });\n      \n      // Set loading state before fetch to prevent multiple triggers\n      isLoadingMoreRef.current = true;\n      setIsLoadingMore(true);\n      \n      // Fetch the next page of messages\n      fetchMessages(selectedConversation, currentPage + 1);\n      \n      // Extra protection against rapid pagination requests\n      // This acts as a backup to prevent request spam\n      setTimeout(() => {\n        // Reset loading flags if they're still set after 5 seconds\n        // This helps recover from cases where the loadingMore state gets stuck\n        if (isLoadingMoreRef.current) {\n          debugLog('MBA2349f87g9qbh2nfv9cg: Resetting stuck loading state after timeout');\n          isLoadingMoreRef.current = false;\n          setIsLoadingMore(false);\n        }\n      }, 5000);\n      \n      return true;\n    } else {\n      debugLog('MBA2349f87g9qbh2nfv9cg: Not loading more messages - conditions not met', {\n        hasMore,\n        isLoadingMoreRefCurrent: isLoadingMoreRef.current,\n        isLoadingMore,\n        selectedConversation: !!selectedConversation,\n        nextPageProcessed: nextPageAlreadyProcessed,\n        reasonText: !hasMore ? 'no more messages' : \n                   isAlreadyLoading ? 'already loading messages' :\n                   nextPageAlreadyProcessed ? 'page already processed' : 'unknown'\n      });\n      return false;\n    }\n  }, [hasMore, currentPage, selectedConversation, messages.length, isLoadingMore]);\n\n  const renderMessage = useCallback(({ item, index }) => {\n    // Create a map to keep track of which bookings have change requests and latest message timestamps\n    const bookingMessages = groupMessagesByBookingId(messages);\n    \n    // Track bookings that have been confirmed\n    const confirmedBookingIds = messages\n      .filter(m => m.type_of_message === 'booking_confirmed')\n      .map(m => m.metadata?.booking_id)\n      .filter(Boolean);\n      \n    // Track bookings that have been completed\n    const completedBookingIds = messages\n      .filter(m => \n        (m.type_of_message === 'booking_confirmed' && m.metadata?.is_review_request) ||\n        (m.type_of_message === 'request_review')\n      )\n      .map(m => m.metadata?.booking_id)\n      .filter(Boolean);\n      \n    // Check if the current message's booking has been completed\n    const isBookingCompleted = item.metadata?.booking_id && \n      completedBookingIds.includes(item.metadata.booking_id);\n      \n    // Handle review request messages - check for both request_review and booking_confirmed with review metadata\n    if (item.type_of_message === 'request_review' || \n        (item.type_of_message === 'booking_confirmed' && \n         (item.metadata?.is_review_request || item.metadata?.client_review || item.metadata?.professional_review))) {\n      debugLog('MBA8675309: Rendering review request message:', {\n        messageId: item.message_id,\n        content: item.content,\n        metadata: item.metadata,\n        bookingId: item.metadata?.booking_id,\n        isProfessional: selectedConversationData?.is_professional,\n        sender: item.sender\n      });\n      \n      // For review request messages, we don't show a timestamp since it spans the full width\n      return (\n        <View style={styles.fullWidthMessage}>\n          <ReviewRequestCard\n            data={{\n              ...item.metadata,\n              booking_id: item.metadata?.booking_id,\n              service_type: item.metadata?.service_type,\n            }}\n            isProfessional={selectedConversationData?.is_professional}\n            onPress={(action) => {\n              // Only handle the leave review action since view details now opens the modal directly\n              if (action === 'leaveReview') {\n                // Handle review action\n                Alert.alert('Review', 'Review functionality will be implemented soon');\n              }\n            }}\n          />\n        </View>\n      );\n    }\n    \n    // Get previous message (newer in the timeline since the list is inverted)\n    const prevMessage = index < messages.length - 1 ? messages[index + 1] : null;\n    \n    // Check if we should show timestamp for this message\n    const showTimestamp = shouldShowTimestamp(item, prevMessage, index === 0);\n    \n    // Format the message time if we have a timestamp\n    const formattedTime = item.timestamp ? \n      formatMessageTime(item.timestamp, timeSettings?.timezone || 'America/Denver') : '';\n      \n    // Add extra debug logging for booking-related messages\n    if (item.type_of_message === 'send_approved_message' || \n        item.type_of_message === 'request_changes' || \n        item.type_of_message === 'initial_booking_request' ||\n        item.type_of_message === 'booking_confirmed') {\n      debugLog('MBA6677: Booking message timestamp details', {\n        messageId: item.message_id,\n        messageType: item.type_of_message,\n        timestamp: item.timestamp,\n        formattedTime,\n        timezone: timeSettings?.timezone || 'America/Denver'\n      });\n    }\n      \n    // Check if the message has images in various formats\n    const hasImages = item.image_urls && item.image_urls.length > 0;\n    // For backwards compatibility with older messages that might have a single image_url\n    const hasLegacyImage = !hasImages && item.image_url && item.image_url.length > 0;\n    // Check if this is an image_message type message\n    const isImageMessage = item.type_of_message === 'image_message';\n    // If it's an image message but we don't have any detected images yet, force hasLegacyImage to true\n    // This is needed for single image messages without a separate image_urls array\n    const forceHasImage = isImageMessage && !hasImages && !hasLegacyImage && item.image_url;\n    \n    // Find approval requests for already confirmed bookings\n    const bookingsWithUpdates = {};\n    \n    // For each confirmed booking, check if there are newer approval requests\n    confirmedBookingIds.forEach(bookingId => {\n      const messagesForBooking = messages.filter(m => \n        m.metadata?.booking_id === bookingId\n      ).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n      \n      // Find the confirmation message for this booking\n      const confirmationMessage = messagesForBooking.find(m => \n        m.type_of_message === 'booking_confirmed'\n      );\n      \n      // Find any newer approval request messages for this booking\n      if (confirmationMessage) {\n        const confirmationTime = new Date(confirmationMessage.timestamp);\n        const newerApprovalRequests = messagesForBooking.filter(m => \n          m.type_of_message === 'send_approved_message' && \n          new Date(m.timestamp) > confirmationTime\n        );\n        \n        // If we found newer approval requests, mark this booking as having updates\n        if (newerApprovalRequests.length > 0) {\n          bookingsWithUpdates[bookingId] = true;\n          debugLog('MBA6428: Detected booking update for confirmed booking:', {\n            bookingId,\n            confirmationTime,\n            newerApprovalRequests: newerApprovalRequests.map(m => m.message_id)\n          });\n        }\n      }\n    });\n    \n    const hasChangeRequest = item.metadata?.booking_id && \n      messages.some(m => \n        m.type_of_message === 'request_changes' && \n        m.metadata?.booking_id === item.metadata.booking_id\n      );\n    \n    // Determine if booking is confirmed\n    const bookingIsConfirmed = item.metadata?.booking_id && \n      confirmedBookingIds.includes(item.metadata.booking_id);\n      \n    // Check if this confirmed booking has newer approval requests\n    const hasNewerApprovalRequests = item.metadata?.booking_id && \n      bookingsWithUpdates[item.metadata.booking_id];\n    \n    // Determine if this is the newest message for this booking\n    let isNewestMessage = false;\n    let messageCreatedAt = new Date(item.created_at || item.timestamp);\n    \n    if (item.metadata?.booking_id && bookingMessages[item.metadata.booking_id]) {\n      const bookingMessagesList = bookingMessages[item.metadata.booking_id];\n      \n      // Check if this is the newest message for this booking\n      isNewestMessage = bookingMessagesList.length > 0 && \n        bookingMessagesList[0].messageId === item.message_id;\n      \n      debugLog(`MBA7321: Message ${item.message_id} for booking ${item.metadata.booking_id} isNewestMessage: ${isNewestMessage}`);\n    }\n\n    if (item.type_of_message === 'initial_booking_request' || item.type_of_message === 'send_approved_message') {\n      const isFromMe = !item.sent_by_other_user;\n\n      // Determine if this booking has an associated change request\n      const bookingId = item.metadata?.booking_id;\n      const hasAssociatedChangeRequest = bookingId && messages.some(m => \n        m.type_of_message === 'request_changes' && \n        m.metadata?.booking_id === bookingId\n      );\n\n      // Check if this is an approval request message\n      const isApprovalMessage = item.type_of_message === 'send_approved_message';\n      \n      // Get booking status from metadata\n      const bookingStatus = bookingIsConfirmed ? \"Confirmed\" : item.metadata?.booking_status;\n      \n      // For approval requests: determine if this is for an already confirmed booking\n      // by checking if there's a booking_confirmed message with an earlier timestamp\n      const isUpdateToConfirmedBooking = isApprovalMessage && bookingIsConfirmed && bookingId && \n        messages.some(m => \n          m.type_of_message === 'booking_confirmed' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        );\n      \n      // Check if there are newer request changes messages for this booking update\n      const hasNewerRequestChanges = isUpdateToConfirmedBooking && bookingId &&\n        messages.some(m =>\n          m.type_of_message === 'request_changes' &&\n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) > new Date(item.timestamp)\n        );\n      \n      // Log info if this is an update to a confirmed booking\n      if (isUpdateToConfirmedBooking) {\n        debugLog('MBA6428: Detected approval request for already confirmed booking:', {\n          messageId: item.message_id,\n          bookingId,\n          isApprovalMessage,\n          bookingIsConfirmed,\n          isUpdateToConfirmedBooking,\n          hasNewerRequestChanges\n        });\n      }\n      \n      // Check if the pro should be able to edit the draft\n      const showEditDraft = selectedConversationData?.is_professional && \n        (item.type_of_message === 'initial_booking_request' || \n         (item.type_of_message === 'send_approved_message' && hasAssociatedChangeRequest));\n\n      // This is for logging purposes\n      if (showEditDraft) {\n        debugLog('MBA6428: Showing edit draft button for message:', {\n          messageId: item.message_id,\n          bookingId: bookingId,\n          type: item.type_of_message\n        });\n      }\n\n      // Get total owner cost\n      let totalOwnerCost = '0.00';\n      try {\n        if (item.metadata.cost_summary && item.metadata.cost_summary.total_client_cost) {\n          totalOwnerCost = item.metadata.cost_summary.total_client_cost;\n        }\n      } catch (error) {\n        console.error('Error parsing total cost:', error);\n      }\n\n      return (\n        <View>\n          <MessageTimestamp \n            message={item}\n            isFromMe={isFromMe}\n            styles={styles}\n            userTimezone={timeSettings?.timezone || 'America/Denver'}\n            show={showTimestamp}\n          />\n          <BookingMessageCard\n            type={item.type_of_message === 'initial_booking_request' ? 'request' : 'approval'}\n            displayType={isUpdateToConfirmedBooking ? 'booking_update' : undefined}\n            data={{\n              ...item.metadata,\n              booking_id: item.metadata.booking_id,\n              service_type: item.metadata.service_type,\n              total_owner_cost: totalOwnerCost,\n              occurrences: item.metadata.occurrences || []\n            }}\n            isFromMe={isFromMe}\n            onPress={() => {\n              // Navigate to booking details if we have a booking_id\n              if (item.metadata.booking_id) {\n                navigation.navigate('BookingDetails', { \n                  bookingId: item.metadata.booking_id,\n                  from: 'MessageHistory'\n                });\n              }\n            }}\n            isProfessional={selectedConversationData?.is_professional}\n            onApproveSuccess={(response) => {\n              // Update the messages list to reflect the approval\n              // You would typically update the booking status here\n              if (response && response.status) {\n                Alert.alert('Success', 'Booking approved successfully');\n                // Refresh messages to update the UI\n                debugLog(`MBA2349f87g9qbh2nfv9cg: Refreshing messages after approval success`);\n                fetchMessages(selectedConversation, 1);\n              }\n            }}\n            onApproveError={(error) => {\n              Alert.alert('Error', error || 'Failed to approve booking');\n            }}\n            onEditDraft={showEditDraft ? () => {\n              debugLog('MBA6428: Edit Draft button clicked, calling handleEditDraft with bookingId:', bookingId);\n              handleEditDraft(bookingId);\n            } : undefined}\n            bookingStatus={bookingStatus}\n            hasChangeRequest={hasAssociatedChangeRequest || hasNewerRequestChanges}\n            isNewestMessage={isNewestMessage}\n            messageCreatedAt={messageCreatedAt}\n            isAfterConfirmation={isUpdateToConfirmedBooking}\n            isBookingCompleted={isBookingCompleted}\n          />\n        </View>\n      );\n    }\n\n    if (item.type_of_message === 'request_changes') {\n      const isFromMe = !item.sent_by_other_user;\n      \n      // Get booking details from metadata\n      const bookingId = item.metadata?.booking_id;\n      const serviceType = item.metadata?.service_type;\n      const bookingStatus = bookingIsConfirmed ? \"Confirmed\" : item.metadata?.booking_status;\n      \n      // For a request_changes message, it should be considered the newest if:\n      // 1. It's the most recent message for this booking (already calculated)\n      // 2. OR there are no newer approval requests for this booking after this request_changes message\n      let isNewestChangeRequest = isNewestMessage;\n      \n      if (!isNewestChangeRequest && item.type_of_message === 'request_changes' && bookingId) {\n        // Check if there are any newer approval messages\n        const hasNewerApprovalMessages = messages.some(m => \n          m.type_of_message === 'send_approved_message' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) > new Date(item.timestamp)\n        );\n        \n        // If there are no newer approval messages, this can be treated as the newest message\n        isNewestChangeRequest = !hasNewerApprovalMessages;\n        \n        debugLog('MBA4321: Checking if request_changes is effectively newest:', {\n          messageId: item.message_id,\n          originalIsNewest: isNewestMessage,\n          hasNewerApprovals: hasNewerApprovalMessages,\n          effectivelyNewest: isNewestChangeRequest\n        });\n      }\n      \n      // Check if this change request is related to a booking update\n      // (i.e., an approval that came after a booking confirmation)\n      const isRelatedToUpdate = bookingIsConfirmed && bookingId &&\n        messages.some(m => \n          (m.type_of_message === 'send_approved_message' || m.type_of_message === 'booking_confirmed') &&\n          m.metadata?.booking_id === bookingId\n        );\n      \n      // Log for debugging\n      debugLog('MBA4321: Rendering change request message:', {\n        bookingId,\n        isFromMe,\n        content: item.content,\n        metadata: item.metadata,\n        isNewestMessage,\n        isNewestChangeRequest,\n        isConfirmed: bookingIsConfirmed,\n        isRelatedToUpdate,\n        hasOlderBookingConfirmedMessage: messages.some(m => \n          m.type_of_message === 'booking_confirmed' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        ),\n        hasOlderApprovalMessage: messages.some(m => \n          m.type_of_message === 'send_approved_message' && \n          m.metadata?.booking_id === bookingId &&\n          new Date(m.timestamp) < new Date(item.timestamp)\n        )\n      });\n      \n      return (\n        <View>\n          <MessageTimestamp \n            message={item}\n            isFromMe={isFromMe}\n            styles={styles}\n            userTimezone={timeSettings?.timezone || 'America/Denver'}\n            show={showTimestamp}\n          />\n          <BookingMessageCard\n            type=\"request_changes\"\n            data={{\n              ...item.metadata,\n              booking_id: bookingId,\n              service_type: serviceType,\n              cost_summary: item.metadata?.cost_summary || {},\n              occurrences: item.metadata?.occurrences || [],\n              content: item.content // Include the message content for display\n            }}\n            isFromMe={isFromMe}\n            onPress={() => {\n              // Navigate to booking details if we have a booking_id\n              if (bookingId) {\n                navigation.navigate('BookingDetails', { \n                  bookingId: bookingId,\n                  from: 'MessageHistory'\n                });\n              }\n            }}\n            isProfessional={selectedConversationData?.is_professional}\n            onApproveSuccess={(response) => {\n              if (response && response.status) {\n                Alert.alert('Success', 'Changes handled successfully');\n                debugLog(`MBA2349f87g9qbh2nfv9cg: Refreshing messages after change approval`);\n                fetchMessages(selectedConversation, 1);\n              }\n            }}\n            onApproveError={(error) => {\n              Alert.alert('Error', error || 'Failed to process changes');\n            }}\n            onEditDraft={selectedConversationData?.is_professional ? () => {\n              handleEditDraft(bookingId);\n            } : undefined}\n            bookingStatus={bookingStatus}\n            hasChangeRequest={false} // Change requests don't have change requests themselves\n            isNewestMessage={isNewestChangeRequest} // Use enhanced newest message check\n            messageCreatedAt={messageCreatedAt}\n            isAfterConfirmation={isRelatedToUpdate} // Flag for change requests after an update\n            isBookingCompleted={isBookingCompleted}\n          />\n        </View>\n      );\n    }\n\n    // Handle booking confirmation messages\n    if (item.type_of_message === 'booking_confirmed') {\n      const isFromMe = !item.sent_by_other_user;\n      \n      // Get booking details from metadata\n      const bookingId = item.metadata?.booking_id;\n      const serviceType = item.metadata?.service_type;\n      \n      // Get cost info from metadata\n      let totalCost = '0.00';\n      let payout = '0.00';\n      try {\n        if (item.metadata.cost_summary) {\n          totalCost = item.metadata.cost_summary.total_client_cost || '0.00';\n          payout = item.metadata.cost_summary.total_sitter_payout || '0.00';\n        }\n      } catch (error) {\n        console.error('Error parsing cost data:', error);\n      }\n      \n      debugLog('MBA6428: Rendering booking confirmation message:', {\n        bookingId,\n        isFromMe,\n        metadata: item.metadata,\n        totalCost,\n        payout,\n        hasNewerApprovalRequests\n      });\n      \n      return (\n        <View>\n          <MessageTimestamp \n            message={item}\n            isFromMe={isFromMe}\n            styles={styles}\n            userTimezone={timeSettings?.timezone || 'America/Denver'}\n            show={showTimestamp}\n          />\n          <BookingMessageCard\n            type=\"booking_confirmed\"\n            data={{\n              booking_id: bookingId,\n              service_type: serviceType,\n              cost_summary: {\n                total_client_cost: totalCost,\n                total_sitter_payout: payout\n              }\n            }}\n            isFromMe={isFromMe}\n            onPress={() => {\n              // Navigate to booking details if we have a booking_id\n              if (bookingId) {\n                navigation.navigate('BookingDetails', { \n                  bookingId: bookingId,\n                  from: 'MessageHistory'\n                });\n              }\n            }}\n            isProfessional={selectedConversationData?.is_professional}\n            bookingStatus=\"Confirmed\"\n            isNewestMessage={isNewestMessage}\n            messageCreatedAt={messageCreatedAt}\n            onEditDraft={selectedConversationData?.is_professional ? () => {\n              debugLog('MBA6428: Edit Draft button clicked for confirmed booking with bookingId:', bookingId);\n              handleEditDraft(bookingId);\n            } : undefined}\n            hasNewerApprovalRequests={hasNewerApprovalRequests}\n            isBookingCompleted={isBookingCompleted}\n            onMarkCompletedSuccess={(response) => {\n              debugLog('MBA8675309: Booking marked as completed successfully:', response);\n              Alert.alert('Success', 'Booking marked as completed successfully');\n              // Refresh messages to update the UI\n              fetchMessages(selectedConversation, 1);\n            }}\n            onMarkCompletedError={(error) => {\n              debugLog('MBA8675309: Error marking booking as completed:', error);\n              Alert.alert('Error', error || 'Failed to mark booking as completed');\n            }}\n          />\n        </View>\n      );\n    }\n\n    // Check if this is an attachment message (temporary image container)\n    const isAttachmentMessage = item.metadata && item.metadata.is_attachment === true;\n    \n    // Skip rendering attachment messages - they should not be displayed directly\n    // They're only containers for images that get referenced in actual image messages\n    if (isAttachmentMessage) {\n      debugLog('MBA9999: Skipping attachment message (container only):', {\n        messageId: item.message_id,\n        hasImageUrl: !!item.image_url,\n        imageUrl: item.image_url,\n        type: item.type_of_message\n      });\n      return null;\n    }\n    \n    // Handle image messages or normal messages with images\n    if (isImageMessage || hasImages || hasLegacyImage || forceHasImage) {\n      const isFromMe = !item.sent_by_other_user;\n      \n      // For images, first render the caption (if exists) and then the images\n      debugLog('MBA4567: Rendering message with images and possibly caption:', {\n        messageId: item.message_id,\n        hasCaption: item.content && item.content.trim().length > 0,\n        captionText: item.content,\n        isFromMe\n      });\n      return (\n        <View>\n          <MessageTimestamp \n            message={item}\n            isFromMe={isFromMe}\n            styles={styles}\n            userTimezone={timeSettings?.timezone || 'America/Denver'}\n            show={showTimestamp}\n          />\n          \n          {/* Image Container */}\n          <View style={isFromMe ? styles.sentMessageContainer : styles.receivedMessageContainer}>\n            <View style={[\n              styles.messageCard, \n              // Don't use colored background for image messages\n              { backgroundColor: 'transparent', shadowColor: 'transparent' }\n            ]}>\n              <View style={styles.messageContent}>\n                {/* Handle images from image_urls in the message itself */}\n                {hasImages && (\n                  <View style={{\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    // marginVertical: 8,\n                    width: '100%',\n                  }}>\n                    {item.image_urls.map((imageUrl, index) => (\n                      <ClickableImage\n                        key={`${imageUrl}-${index}`}\n                        imageUrl={imageUrl}\n                        onPress={handleImagePress}\n                        style={{\n                          image: {\n                            width: 250,\n                            height: 250,\n                            borderRadius: 8,\n                            // marginVertical: 4,\n                          }\n                        }}\n                      />\n                    ))}\n                  </View>\n                )}\n                \n                {/* Handle images from metadata.image_urls */}\n                {!hasImages && item.metadata && item.metadata.image_urls && item.metadata.image_urls.length > 0 && (\n                  <View style={{\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginVertical: 8,\n                    width: '100%',\n                  }}>\n                    {item.metadata.image_urls.map((imageUrl, index) => (\n                      <ClickableImage\n                        key={`${imageUrl}-${index}`}\n                        imageUrl={imageUrl}\n                        onPress={handleImagePress}\n                        style={{\n                          image: {\n                            width: 250,\n                            height: 250,\n                            borderRadius: 8,\n                            marginVertical: 4,\n                          }\n                        }}\n                      />\n                    ))}\n                  </View>\n                )}\n                \n                {/* Handle single image directly attached to the message */}\n                {item.image && item.image.url && (\n                  <View style={{\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginVertical: 8,\n                    width: '100%',\n                  }}>\n                    <ClickableImage\n                      imageUrl={item.image.url}\n                      onPress={handleImagePress}\n                      style={{\n                        image: {\n                          width: 250,\n                          height: 250,\n                          borderRadius: 8,\n                          marginVertical: 4,\n                        }\n                      }}\n                    />\n                  </View>\n                )}\n                \n                {/* Handle legacy single image for backward compatibility */}\n                {(hasLegacyImage || forceHasImage) && (\n                  <View style={{\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginVertical: 8,\n                    width: '100%',\n                  }}>\n                    <ClickableImage\n                      imageUrl={item.image_url}\n                      onPress={handleImagePress}\n                      style={{\n                        image: {\n                          width: 250,\n                          height: 250,\n                          borderRadius: 8,\n                          marginVertical: 4,\n                        }\n                      }}\n                    />\n                  </View>\n                )}\n                \n                {/* Handle attachment messages with image_url */}\n                {isAttachmentMessage && item.image_url && (\n                  <View style={{\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    marginVertical: 8,\n                    width: '100%',\n                  }}>\n                    <ClickableImage\n                      imageUrl={item.image_url}\n                      onPress={handleImagePress}\n                      style={{\n                        image: {\n                          width: 250,\n                          height: 250,\n                          borderRadius: 8,\n                          marginVertical: 4,\n                        }\n                      }}\n                    />\n                  </View>\n                )}\n              </View>\n            </View>\n          </View>\n          \n          {/* Render caption AFTER the images if it exists */}\n          {item.content && item.content.trim().length > 0 && (\n            <View style={[\n              isFromMe ? styles.sentMessageContainer : styles.receivedMessageContainer\n            ]}>\n              <View style={[\n                styles.messageCard, \n                isFromMe ? styles.sentMessage : styles.receivedMessage\n              ]}>\n                <View style={styles.messageContent}>\n                  <Text style={[\n                    styles.messageText,\n                    isFromMe ? styles.sentMessageText : styles.receivedMessageText\n                  ]}>\n                    {item.content}\n                  </Text>\n                </View>\n              </View>\n            </View>\n          )}\n        </View>\n      );\n    }\n    \n    // Handle normal text messages\n    const isFromMe = !item.sent_by_other_user;\n    return (\n      <View>\n        <MessageTimestamp \n          message={item}\n          isFromMe={isFromMe}\n          styles={styles}\n          userTimezone={timeSettings?.timezone || 'America/Denver'}\n          show={showTimestamp}\n        />\n        <View style={isFromMe ? styles.sentMessageContainer : styles.receivedMessageContainer}>\n          <View style={[\n            styles.messageCard, \n            isFromMe ? styles.sentMessage : styles.receivedMessage\n          ]}>\n            <View style={styles.messageContent}>\n              <Text style={[\n                styles.messageText,\n                isFromMe ? styles.sentMessageText : styles.receivedMessageText\n              ]}>\n                {item.content}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n    );\n  }, [navigation, selectedConversationData, timeSettings, hasDraft, draftData, selectedConversation, fetchMessages, messages, handleImagePress]);\n\n  const handleBookingRequest = async (modalData) => {\n    try {\n      debugLog('MBA2349f87g9qbh2nfv9cg: handleBookingRequest called', {\n        conversationId: modalData.conversation_id,\n        currentMessageCount: messages.length\n      });\n      \n      const token = await getStorage('userToken');\n      \n      // First, create the booking request\n      const bookingRequestResponse = await axios.post(\n        `${API_BASE_URL}/api/bookings/v1/request_booking/`,\n        modalData,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      debugLog('MBA2349f87g9qbh2nfv9cg: Booking request created', {\n        bookingId: bookingRequestResponse.data.booking_id\n      });\n\n      // Then, send the booking request message with the booking ID\n      const messageResponse = await axios.post(\n        `${API_BASE_URL}/api/messages/v1/send_request_booking/`,\n        {\n          ...modalData,\n          booking_id: bookingRequestResponse.data.booking_id\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n\n      debugLog('MBA2349f87g9qbh2nfv9cg: Booking message sent', {\n        messageId: messageResponse.data.message_id,\n        bookingId: bookingRequestResponse.data.booking_id\n      });\n\n      // Add the new message to the messages list\n      setMessages(prevMessages => {\n        debugLog('MBA2349f87g9qbh2nfv9cg: Adding booking request message to list', {\n          beforeLength: prevMessages.length,\n          afterLength: prevMessages.length + 1,\n          messageId: messageResponse.data.message_id\n        });\n        \n        return [messageResponse.data, ...prevMessages];\n      });\n\n      setShowRequestModal(false);\n      debugLog('MBA2349f87g9qbh2nfv9cg: handleBookingRequest completed successfully');\n    } catch (error) {\n      debugLog('MBA2349f87g9qbh2nfv9cg: Error in handleBookingRequest:', error);\n      console.error('Error creating booking:', error);\n      Alert.alert(\n        'Error',\n        'Unable to create booking. Please try again.',\n        [{ text: 'OK' }]\n      );\n    }\n  };\n\n  // Add search functionality\n  const handleSearch = (text) => {\n    setSearchQuery(text);\n  };\n\n  // Add a useEffect to filter conversations when searchQuery changes\n  useEffect(() => {\n    if (!searchQuery) {\n      // When search is empty, show all conversations\n      setFilteredConversations(conversations);\n    } else {\n      // Filter conversations based on search text\n      const filtered = conversations.filter(conv => {\n        const otherParticipantName = conv.participant1_id === CURRENT_USER_ID ? \n          conv.participant2_name : conv.participant1_name;\n        const searchName = otherParticipantName || conv.name || conv.other_user_name || '';\n        \n        return searchName.toLowerCase().includes(searchQuery.toLowerCase()) ||\n              (conv.last_message && conv.last_message.toLowerCase().includes(searchQuery.toLowerCase()));\n      });\n      setFilteredConversations(filtered);\n    }\n    \n    debugLog('MBA5557: Filtering conversations based on search', { \n      searchQuery, \n      totalConversations: conversations.length,\n      filteredCount: filteredConversations.length \n    });\n  }, [searchQuery, conversations]);\n\n  // Conversation list component\n  const renderConversationList = () => {\n    // Final double check at render time\n    const renderedConversations = userRole === 'professional'\n      ? filteredConversations.filter(c => c.is_professional === true)\n      : userRole === 'petOwner' || userRole === 'owner'\n        ? filteredConversations.filter(c => c.is_professional === false) \n        : filteredConversations;\n    \n    // Add debug logging right at render time\n    debugLog('MBA24u45vn', 'Rendering conversation list', {\n      filteredConversationsCount: filteredConversations.length,\n      safeConversationsCount: renderedConversations.length,\n      conversationsCount: conversations.length,\n      currentRole: userRole,\n      selectedConversation,\n      url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n      routeParams: route.params ? JSON.stringify(route.params) : 'none',\n      timestamp: Date.now(),\n      filteredConversations: renderedConversations.map(c => ({\n        id: c.conversation_id,\n        is_professional: c.is_professional,\n        name: c.other_user_name,\n        has_profile_pic: !!c.profile_picture\n      }))\n    });\n    \n    return (\n      <ConversationList\n        conversations={renderedConversations}\n        selectedConversation={selectedConversation}\n              onSelectConversation={(convId) => {\n                  // Only log on initial selection, not re-selections\n        if (convId !== selectedConversation) {\n          debugLog('MBA24u45vn', 'Conversation selected from list', {\n            conversationId: convId,\n            previousConversation: selectedConversation,\n            url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n            timestamp: Date.now()\n          });\n          \n          // Fetch messages for this conversation\n          fetchMessages(convId);\n          \n          // Make sure to update navigation params directly to ensure Navigation component detects change\n          if (Platform.OS === 'web' && typeof window !== 'undefined') {\n            window.selectedConversationId = convId;\n            \n            // Update URL to include selectedConversation parameter (this is what we check on reload)\n            const currentUrl = new URL(window.location.href);\n            currentUrl.searchParams.set('selectedConversation', convId);\n            window.history.replaceState({}, '', currentUrl.toString());\n          }\n          \n          // Update navigation params directly\n          navigation.setParams({ selectedConversation: convId });\n        }\n        setSelectedConversation(convId);\n      }}\n        searchQuery={searchQuery}\n        onSearchChange={setSearchQuery}\n        styles={styles}\n        CURRENT_USER_ID={CURRENT_USER_ID}\n        getConversationUnreadCount={getConversationUnreadCount}\n        markConversationAsRead={markConversationAsRead}\n      />\n    );\n  };\n\n  // Update message header to include profile photo and edit draft button\n  const renderMessageHeader = () => (\n    <View style={styles.messageHeader}>\n      <MessageHeader\n        selectedConversationData={selectedConversationData}\n        hasDraft={hasDraft}\n        draftData={draftData}\n        onEditDraft={(draftId) => {\n          if (draftId) {\n            handleOpenExistingDraft(draftId);\n          }\n        }}\n        styles={styles}\n        onCreateBooking={handleCreateBooking}\n        onViewPets={handleViewPets}\n      />\n    </View>\n  );\n\n  // Update renderMessageSection to use simplified flexbox layout\n  const renderMessageSection = () => {\n    if (!selectedConversation) {\n      return null;\n    }\n\n    return (\n      <View style={styles.mainSection}>\n        {screenWidth > 900 && renderMessageHeader()}\n        {/* Messages */}\n        <View style={styles.messageSection} className=\"message-container\">\n          <View \n            style={styles.messagesContainer} \n            className=\"messagesContainer\"\n          >\n            {isLoadingMessages ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                <Text style={styles.loadingText}>Loading messages...</Text>\n              </View>\n            ) : messages.length === 0 ? (\n              <Text style={styles.emptyText}>\n                No messages yet, start the conversation!\n              </Text>\n            ) : (\n              <MessageList\n                messages={messages}\n                renderMessage={renderMessage}\n                hasMore={hasMore}\n                isLoadingMore={isLoadingMore}\n                onLoadMore={loadMoreMessages}\n                styles={styles}\n                theme={theme}\n                className=\"message-list-component\"\n                userTimezone={timeSettings?.timezone || 'America/Denver'}\n                onScrollStart={(handlerSetter) => {\n                  // MessageList will call this with a function that accepts the actual handler\n                  handlerSetter(() => {\n                    // This is the handler that will be called when scrolling starts\n                    if (keyboardDismissHandlerRef.current) {\n                      debugLog('MBA8765: Scroll detected, calling keyboard dismiss handler');\n                      keyboardDismissHandlerRef.current();\n                    }\n                  });\n                }}\n              />\n            )}\n          </View>\n        </View>\n\n        {/* Input Section - Simplified to use flexbox positioning */}\n        <MessageInput \n          onScrollStart={(handler) => {\n            // Store the keyboard dismiss handler from MessageInput\n            keyboardDismissHandlerRef.current = handler;\n            debugLog('MBA8765: Registered keyboard dismiss handler from MessageInput');\n          }}\n          onSendMessage={async (messageContent, imageMessageIds, messageObject, alreadySent) => {\n            try {\n              setIsSending(true);\n              \n              // If the message was already sent directly through uploadAndSendImageMessage\n              if (alreadySent && messageObject) {\n                debugLog('MBA5511: Message already sent directly:', {\n                  messageId: messageObject.message_id,\n                  messageType: messageObject.type_of_message\n                });\n                \n                // Add message to UI without making another API call\n                setMessages(prevMessages => [messageObject, ...prevMessages]);\n                \n                // Update conversation's last message\n                setConversations(prev => prev.map(conv => \n                  conv.conversation_id === selectedConversation \n                    ? {\n                        ...conv,\n                        last_message: messageObject.content || 'Image message',\n                        last_message_time: messageObject.timestamp\n                      }\n                    : conv\n                ));\n              } \n              // Otherwise, send normally through SendNormalMessage\n              else {\n                // Add the image message IDs to the request if available\n                if (imageMessageIds && imageMessageIds.length > 0) {\n                  debugLog('MBA5678: Sending message with images:', {\n                    messageContent,\n                    imageMessageIds,\n                    imageCount: imageMessageIds.length\n                  });\n                }\n                await SendNormalMessage(messageContent, imageMessageIds, messageObject);\n              }\n              \n              setIsSending(false);\n            } catch (error) {\n              debugLog('MBA5678: Error sending message:', error);\n              setIsSending(false);\n            }\n          }}\n          onShowDropdown={(show) => setShowDropdown(show)}\n          showDropdown={showDropdown}\n          styles={styles}\n          screenWidth={screenWidth}\n          selectedConversation={selectedConversation}\n        />\n      </View>\n    );\n  };\n\n  // Update the back button handler to better clear URL parameters\n  const handleBack = () => {\n    // Only log if there's actually a conversation selected\n    if (selectedConversation) {\n      debugLog('MBA24u45vn', 'Back button pressed', {\n        selectedConversation,\n        hasConversationData: !!selectedConversationData,\n        url: typeof window !== 'undefined' ? window.location.href : 'not-web',\n        timestamp: Date.now()\n      });\n    }\n    \n    // Set flag to indicate we're intentionally deselecting (to prevent URL param reloading)\n    isIntentionallyDeselecting.current = true;\n    \n    // First clear the URL parameter to prevent it from being re-read\n    navigation.setParams({ selectedConversation: undefined });\n    \n    // Also update URL directly to ensure Navigation component sees the change\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      const currentUrl = new URL(window.location.href);\n      currentUrl.searchParams.delete('selectedConversation');\n      currentUrl.searchParams.delete('conversationId'); // Also clear this for compatibility\n      window.history.replaceState({}, '', currentUrl.toString());\n      \n      // Clear global context variable used by Navigation\n      window.selectedConversationId = null;\n      \n      debugLog('MBA24u45vn', 'Cleared URL parameters in handleBack', {\n        oldValue: selectedConversation,\n        url_after: currentUrl.toString(),\n        timestamp: Date.now()\n      });\n    }\n    \n    // Clear the selected conversation state immediately\n    setSelectedConversation(null);\n    \n    // Clear conversation data and messages\n    setSelectedConversationData(null);\n    setMessages([]);\n    \n    // Fetch conversations to update the list after going back\n    debugLog('MBA24u45vn: Fetching conversations from handleBack');\n    fetchConversations();\n    \n    // Add a timeout to reset the flag as a safety mechanism\n    setTimeout(() => {\n      if (isIntentionallyDeselecting.current) {\n        isIntentionallyDeselecting.current = false;\n      }\n    }, 500);\n  };\n  \n  // Use static counter to reduce logging frequency\n  const renderMobileHeader = () => {\n    // We don't need to log mobile header rendering at all\n    // This function is called very frequently and doesn't need logging\n    \n    return (\n      <View style={[\n        styles.mobileHeader,\n        { \n          backgroundColor: theme.colors.surfaceContrast,  // Updated to use surfaceContrast\n          marginTop: selectedConversation && screenWidth <= 900 ? 0 : undefined\n        }\n      ]}>\n        <MessageHeader\n          selectedConversationData={selectedConversationData}\n          hasDraft={hasDraft}\n          draftData={draftData}\n          onEditDraft={(draftId) => {\n            if (draftId) {\n              handleOpenExistingDraft(draftId);\n            }\n          }}\n          onBackPress={handleBack} // Use our new handleBack function\n          styles={styles}\n          isMobile={true}\n          onCreateBooking={handleCreateBooking}\n          onViewPets={handleViewPets}\n        />\n      </View>\n    );\n  };\n\n  // Update renderEmptyState to remove prototype references\n  const renderEmptyState = () => (\n    <View style={{\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 20,\n    }}>\n      <MaterialCommunityIcons \n        name=\"message-text-outline\" \n        color={theme.colors.placeholder}\n        style={{ marginBottom: 16 }}\n      />\n      <Text style={{\n        fontSize: 20,\n        fontWeight: 'bold',\n        color: theme.colors.text,\n        marginBottom: 8,\n        textAlign: 'center'\n      }}>\n        No Messages Yet\n      </Text>\n      <Text style={{\n        fontSize: 16,\n        color: theme.colors.placeholder,\n        marginBottom: 24,\n        textAlign: 'center'\n      }}>\n        {userRole === 'professional' ? \n          'Create services to start getting bookings and messages from owners' :\n          'Search professionals to find services and start messaging'}\n      </Text>\n      <Button\n        mode=\"contained\"\n        onPress={() => navigateToFrom(navigation, userRole === 'professional' ? 'ServiceManager' : 'SearchProfessionalsListing', 'MessageHistory')}\n        style={{ borderRadius: 8 }}\n      >\n        {userRole === 'professional' ? 'Create Services' : 'Find Professionals'}\n      </Button>\n    </View>\n  );\n\n  const handleEditDraft = async (bookingId) => {\n    debugLog('MBA6428: handleEditDraft called with booking ID:', bookingId);\n    \n    if (!bookingId) {\n      debugLog('MBA6428: Error - No booking ID provided');\n      Alert.alert('Error', 'Missing booking information. Please try again.');\n      return;\n    }\n    \n    try {\n      setIsLoading(true);\n      debugLog('MBA6428: Calling createDraftFromBooking API with booking ID:', bookingId);\n      \n      // Call our new API function to create a draft from the booking\n      const response = await createDraftFromBooking(bookingId);\n      \n      // Check for error in response\n      if (response.error) {\n        debugLog('MBA6428: Error returned from createDraftFromBooking:', response);\n        Alert.alert('Error', response.message || 'Failed to create draft from booking. Please try again.');\n        return;\n      }\n      \n      if (response && response.draft_id) {\n        debugLog('MBA6428: Draft created successfully:', response);\n        \n        // Update local state with the new draft info\n        setHasDraft(true);\n        setDraftData(response.draft_data);\n        \n        // Use the returned draft_id for opening the booking step modal\n        setCurrentBookingId(response.draft_id);\n        \n        // Close any open modal and open the booking step modal\n        setShowDraftConfirmModal(false);\n        \n        // Add a small delay to ensure modal state is updated\n        setTimeout(() => {\n          debugLog('MBA6428: Opening BookingStepModal with draft:', response.draft_id);\n          setShowBookingStepModal(true);\n        }, 100);\n      } else {\n        debugLog('MBA6428: Error - Invalid response from createDraftFromBooking:', response);\n        Alert.alert('Error', 'Failed to create draft from booking. Please try again.');\n      }\n    } catch (error) {\n      debugLog('MBA6428: Error creating draft from booking:', error);\n      Alert.alert('Error', 'Failed to create draft from booking. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // New function for opening an existing draft directly\n  const handleOpenExistingDraft = (draftId) => {\n    debugLog('MBA6428: handleOpenExistingDraft called with draft ID:', draftId);\n    \n    if (!draftId) {\n      debugLog('MBA6428: Error - No draft ID provided');\n      Alert.alert('Error', 'Missing draft information. Please try again.');\n      return;\n    }\n    \n    try {\n      // Set the current booking ID to the provided draft ID\n      setCurrentBookingId(draftId);\n      \n      // Close any open modal and open the booking step modal\n      setShowDraftConfirmModal(false);\n      \n      // Add a small delay to ensure modal state is updated\n      setTimeout(() => {\n        debugLog('MBA6428: Opening BookingStepModal with existing draft:', draftId);\n        setShowBookingStepModal(true);\n      }, 100);\n    } catch (error) {\n      debugLog('MBA6428: Error opening booking modal with draft:', error);\n      Alert.alert('Error', 'Failed to open booking draft. Please try again.');\n    }\n  };\n\n  // Add polling for online status of the other participant\n  useEffect(() => {\n    if (!selectedConversationData || !selectedConversation) {\n      return; // No conversation selected, nothing to poll\n    }\n    \n    const otherUserName = selectedConversationData.other_user_name || 'Unknown user';\n    debugLog(`MBA3210: [OTHER USER STATUS] Setting up polling for \"${otherUserName}\" online status`);\n    \n    \n    return () => {\n      debugLog(`MBA3210: [OTHER USER STATUS] Cleaning up polling interval for \"${otherUserName}\"`);\n      // clearInterval(statusPollingInterval);\n    };\n  }, [selectedConversationData, selectedConversation]);\n\n  useEffect(() => {\n    // Clean up on component unmount\n    return () => {\n      debugLog('MBA3210: MessageHistory unmounting, cleaning up websocket references');\n      // No need to explicitly disconnect here - the hook will handle it\n    };\n  }, []);\n\n  // Replace the existing beforeunload effect that disconnects the WebSocket\n  useEffect(() => {\n    // When a user signs out or navigates away, make sure to disconnect\n    const handleBeforeUnload = () => {\n      debugLog('MBA3210: Page unloading, but keeping websocket alive for session restore');\n      // Deliberately NOT disconnecting websocket on page unload\n      // This was causing message loss when refreshing or switching tabs\n    };\n\n    if (typeof window !== 'undefined') {\n      window.addEventListener('beforeunload', handleBeforeUnload);\n    }\n\n    return () => {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      }\n    };\n  }, []);\n\n  // Add a useEffect to reset notifications when component mounts\n  useEffect(() => {\n    // Only reset notifications once when the component mounts\n    updateRoute && updateRoute('MessageHistory');\n    \n    // No need to reset all notifications, individual conversations will be marked as read when selected\n    \n    // Return cleanup function\n    return () => {\n      // If needed, add cleanup code here\n    };\n  }, []); // Empty dependency array to run only once on mount\n\n  // Add a useEffect to handle route updates and message notification resets when component mounts\n  useEffect(() => {\n    // Tell the notification context we're on the Messages screen\n    if (updateRoute) {\n      debugLog('MBA4321: Updating route in MessageNotificationContext to MessageHistory');\n      updateRoute('MessageHistory');\n      \n      // Important: DO NOT call resetNotifications() here\n      // That was causing all notifications to be cleared when opening MessageHistory\n      // Instead, we only mark the selected conversation as read when it's selected\n    }\n    \n    // Return cleanup function\n    return () => {\n      debugLog('MBA4321: Cleaning up message notification tracking for MessageHistory');\n    };\n  }, [updateRoute]);\n  \n  // Add an effect to mark the current conversation as read when selected\n  useEffect(() => {\n    if (selectedConversation && markConversationAsRead) {\n      debugLog(`MBA4321: Marking conversation ${selectedConversation} as read`);\n      markConversationAsRead(selectedConversation);\n    }\n  }, [selectedConversation, markConversationAsRead]);\n\n  // When component initializes, ensure we properly handle any route parameters\n  // that specify a conversation to open, but don't reset all notifications\n  useEffect(() => {\n    if (!initialLoadRef.current) return; // Skip if not initial load\n    \n    const initializeData = async () => {\n      try {\n        // Reset states\n        setConversations([]);\n        setMessages([]);\n        setSelectedConversation(null);\n        setSelectedConversationData(null);\n        setIsLoadingConversations(true);\n        setIsLoadingMessages(false);\n        setCurrentPage(1);\n        setHasMore(true);\n        lastViewedConversationRef.current = null;\n        \n        // Handle parameters first\n        let initialConversationId = null;\n        \n        // First check URL parameters on web\n        if (Platform.OS === 'web') {\n          const currentUrl = new URL(window.location.href);\n          \n          // Check both possible parameter names\n          let urlConversationId = currentUrl.searchParams.get('selectedConversation');\n          \n          // If not found, try the alternate parameter name\n          if (!urlConversationId) {\n            urlConversationId = currentUrl.searchParams.get('conversationId');\n          }\n          \n          if (urlConversationId) {\n            initialConversationId = urlConversationId;\n            debugLog(`MBA4321: Using conversation ID ${urlConversationId} from URL parameters`);\n            \n            // Clean up URL parameters to be consistent\n            currentUrl.searchParams.delete('conversationId');\n            currentUrl.searchParams.delete('selectedConversation');\n            \n            // Set to the standard parameter name\n            currentUrl.searchParams.set('selectedConversation', urlConversationId);\n            window.history.replaceState({}, '', currentUrl.toString());\n          }\n        }\n        \n        // Next check route params if no URL param was found\n        if (!initialConversationId && route.params?.conversationId) {\n          initialConversationId = route.params.conversationId;\n          debugLog(`MBA4321: Using conversation ID ${initialConversationId} from route parameters`);\n          \n          // Check if we should open booking creation (coming from Services)\n          if (route.params.isProfessional === true) {\n            shouldOpenBookingCreationRef.current = true;\n          }\n        }\n        \n        debugLog('MBA24u45vn: Fetching conversations from initializeData');\n        // Fetch conversations\n        const conversationsData = await fetchConversations();\n        \n        // Set initial selected conversation - either from params or first one\n        if (initialConversationId) {\n          setSelectedConversation(initialConversationId);\n          debugLog(`MBA4321: Setting initially selected conversation to ${initialConversationId}`);\n        } else if (Platform.OS === 'web' && screenWidth > 900 && conversationsData?.length > 0) {\n          setSelectedConversation(conversationsData[0].conversation_id);\n          debugLog(`MBA4321: Auto-selecting first conversation ${conversationsData[0].conversation_id} on desktop`);\n        }\n        \n        // Important: We DON'T mark all conversations as read here\n        // Only the selected conversation will be marked as read when it's selected\n      } catch (error) {\n        console.error('Error initializing MessageHistory:', error);\n      } finally {\n        initialLoadRef.current = false;\n        setIsInitialLoad(false);\n      }\n    };\n    \n    initializeData();\n    \n    return () => {\n      debugLog('MBA4321: Cleaning up MessageHistory component');\n      lastViewedConversationRef.current = null;\n      \n      // Clear the global selected conversation tracking\n      if (typeof window !== 'undefined') {\n        window.selectedConversationId = null;\n      }\n      \n      // IMPORTANT: We no longer disconnect the WebSocket here\n      // This allows the connection to persist when navigating away from this screen\n    };\n  }, []);\n  \n  // Handle web-specific URL parameters on page reload\n  useEffect(() => {\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      // When the page reloads, we need to clear the conversation parameters\n      if (window.performance) {\n        // This checks specifically for reload events (not initial page load)\n        const navigationEntry = window.performance.getEntriesByType('navigation')[0];\n        if (navigationEntry && navigationEntry.type === 'reload') {\n          debugLog('MBA3210: Page reload detected, clearing conversation parameters from URL');\n          \n          // Clear all possible URL parameters - handle both parameter names\n          const currentUrl = new URL(window.location.href);\n          \n          // Check for selectedConversation param\n          if (currentUrl.searchParams.has('selectedConversation')) {\n            currentUrl.searchParams.delete('selectedConversation');\n            debugLog('MBA3210: Removed selectedConversation parameter from URL');\n          }\n          \n          // Also check for conversationId param\n          if (currentUrl.searchParams.has('conversationId')) {\n            currentUrl.searchParams.delete('conversationId');\n            debugLog('MBA3210: Removed conversationId parameter from URL');\n          }\n          \n          // And check for isMobile param if needed\n          if (currentUrl.searchParams.has('isMobile')) {\n            currentUrl.searchParams.delete('isMobile');\n            debugLog('MBA3210: Removed isMobile parameter from URL');\n          }\n          \n          // Update the URL without refreshing the page\n          window.history.replaceState({}, '', currentUrl.toString());\n          debugLog('MBA3210: Updated URL:', currentUrl.toString());\n          \n          // Reset the selected conversation state\n          setSelectedConversation(null);\n          setSelectedConversationData(null);\n          \n          // Clear global tracking variable\n          window.selectedConversationId = null;\n          \n          // Update navigation params directly\n          if (navigation && navigation.setParams) {\n            navigation.setParams({ \n              selectedConversation: null,\n              conversationId: null,\n              isMobile: null\n            });\n          }\n        }\n      }\n      \n      // Keep the WebSocket alive on page unload\n      const handleBeforeUnload = () => {\n        debugLog('MBA3210: Page unloading, but keeping websocket alive for session restore');\n        // No longer disconnect WebSocket on page unload\n      };\n      \n      window.addEventListener('beforeunload', handleBeforeUnload);\n      \n      return () => {\n        window.removeEventListener('beforeunload', handleBeforeUnload);\n      };\n    }\n  }, [navigation]);\n\n  // Clear processed messages cache when switching conversations\n  useEffect(() => {\n    if (selectedConversation) {\n      debugLog('MBA2349f87g9qbh2nfv9cg: Clearing processed messages cache for new conversation', {\n        conversationId: selectedConversation,\n        previousCacheSize: processedPagesRef.current.size,\n        previousMessageIdsSize: messageIdsRef.current.size\n      });\n      \n      // Reset our tracking refs when switching conversations\n      processedPagesRef.current.clear();\n      messageIdsRef.current.clear();\n      isLoadingMoreRef.current = false;\n      \n      debugLog('MBA2349f87g9qbh2nfv9cg: Cache cleared for conversation switch', {\n        processedPagesSize: processedPagesRef.current.size,\n        messageIdsSize: messageIdsRef.current.size,\n        isLoadingMoreRef: isLoadingMoreRef.current\n      });\n    }\n  }, [selectedConversation]);\n\n  // Add state change tracking for debugging\n  useEffect(() => {\n    debugLog('MBA2u3f89fbno4: [STATE] selectedConversation changed', {\n      newValue: selectedConversation,\n      timestamp: Date.now()\n    });\n    \n    // Update URL params and navigation state when selectedConversation changes\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      // Update the URL with the selected conversation\n      const currentUrl = new URL(window.location.href);\n      \n      if (selectedConversation) {\n        // First clear any existing conversation parameters for consistency\n        if (currentUrl.searchParams.has('conversationId')) {\n          currentUrl.searchParams.delete('conversationId');\n        }\n        \n        // Set the selectedConversation parameter (match the parameter name used in the URL)\n        currentUrl.searchParams.set('selectedConversation', selectedConversation);\n        \n        // Store selectedConversation in global context for Navigation component\n        window.selectedConversationId = selectedConversation;\n        \n        debugLog('MBA4477: Updated URL with selectedConversation', {\n          selectedConversation,\n          newUrl: currentUrl.toString()\n        });\n      } else {\n        // Remove both possible parameter names if no conversation is selected\n        if (currentUrl.searchParams.has('conversationId')) {\n          currentUrl.searchParams.delete('conversationId');\n        }\n        if (currentUrl.searchParams.has('selectedConversation')) {\n          currentUrl.searchParams.delete('selectedConversation');\n        }\n        \n        // Clear global context\n        window.selectedConversationId = null;\n        \n        debugLog('MBA4477: Cleared conversation parameters from URL');\n      }\n      \n      // Update the URL without refreshing the page\n      window.history.replaceState({}, '', currentUrl.toString());\n      \n      // Also update the navigation params directly\n      if (navigation && navigation.setParams) {\n        navigation.setParams({ selectedConversation });\n        \n        debugLog('MBA4477: Updated navigation params with selectedConversation', {\n          selectedConversation\n        });\n      }\n    }\n  }, [selectedConversation, navigation]);\n\n  useEffect(() => {\n    debugLog('MBA2u3f89fbno4: [STATE] isSignedIn changed', {\n      newValue: isSignedIn,\n      timestamp: Date.now()\n    });\n  }, [isSignedIn]);\n\n  useEffect(() => {\n    debugLog('MBA2u3f89fbno4: [STATE] loading changed', {\n      newValue: loading,\n      timestamp: Date.now()\n    });\n  }, [loading]);\n\n  useEffect(() => {\n    debugLog('MBA2u3f89fbno4: [STATE] screenWidth changed', {\n      newValue: screenWidth,\n      timestamp: Date.now()\n    });\n  }, [screenWidth]);\n\n  // Add a function to handle View Profile button click\n  const handleViewPets = () => {\n    debugLog('MBA3456', 'View Profile button clicked', {\n      conversation_id: selectedConversationData?.conversation_id,\n      other_user_name: selectedConversationData?.other_user_name\n    });\n    \n    setShowClientPetsModal(true);\n  };\n\n  // Add a special effect specifically for Android Chrome keyboard handling\n  useEffect(() => {\n    if (Platform.OS === 'web' && screenWidth <= 900 && isAndroidChromeRef.current) {\n      debugLog('MBA9876: [ANDROID] Setting up Android Chrome-specific keyboard handler');\n      \n      // Helper function to detect keyboard visibility more reliably on Android Chrome\n      const checkAndroidKeyboard = () => {\n        // If input is focused, keyboard is likely open\n        const isInputFocused = document.activeElement && \n                              (document.activeElement.tagName === 'TEXTAREA' || \n                               document.activeElement.tagName === 'INPUT');\n        \n        // Visual viewport height change is a good indicator\n        const viewportHeightReduced = window.visualViewport && \n                                     window.innerHeight - window.visualViewport.height > 100;\n        \n        const keyboardIsLikelyOpen = isInputFocused && viewportHeightReduced;\n        \n        debugLog('MBA9876: [ANDROID] Android keyboard check', {\n          isInputFocused,\n          activeElement: document.activeElement?.tagName,\n          viewportHeightReduced,\n          innerHeight: window.innerHeight,\n          visualViewportHeight: window.visualViewport?.height,\n          keyboardIsLikelyOpen\n        });\n        \n        if (keyboardIsLikelyOpen) {\n          // Force input into view on Android Chrome\n          const inputContainer = document.querySelector('.message-input-container');\n          if (inputContainer) {\n            // Make sure input container is fixed to bottom\n            inputContainer.style.position = 'fixed';\n            inputContainer.style.bottom = '0px';\n            inputContainer.style.left = '0px';\n            inputContainer.style.right = '0px';\n            inputContainer.style.zIndex = '1000';\n            \n            // Explicitly ensure no margin\n            inputContainer.style.marginBottom = '0px';\n            \n            // Force visual viewport to bottom\n            setTimeout(() => {\n              window.scrollTo(0, document.body.scrollHeight);\n            }, 50);\n          }\n        }\n      };\n      \n      // Create event listeners specifically for Android Chrome\n      const handleAndroidFocus = () => {\n        debugLog('MBA9876: [ANDROID] Focus event on Android Chrome');\n        \n        // Add repeated checks for the keyboard\n        const checkInterval = setInterval(checkAndroidKeyboard, 100);\n        \n        // Stop checking after 1 second\n        setTimeout(() => {\n          clearInterval(checkInterval);\n        }, 1000);\n        \n        // Do an immediate check\n        checkAndroidKeyboard();\n      };\n      \n      document.addEventListener('focusin', handleAndroidFocus);\n      \n      return () => {\n        document.removeEventListener('focusin', handleAndroidFocus);\n      };\n    }\n  }, [screenWidth]);\n\n  // Function to ensure the latest message is visible - update to be more thorough\n  const ensureLatestMessageVisible = () => {\n    // Only run on web\n    if (Platform.OS === 'web') {\n      // Add a significant bottom padding to the FlatList content container\n      setTimeout(() => {\n        // Try different selectors to find the FlatList content container\n        const selectors = [\n          '.messagesContainer .message-list-component > div > div',\n          '.messagesContainer .message-list-component > div',\n          '.messagesContainer div[data-interactable=\"true\"]',\n          '.messagesContainer > *',\n        ];\n        \n        let targetFound = false;\n        \n        // Try each selector until we find a match\n        for (const selector of selectors) {\n          const elements = document.querySelectorAll(selector);\n          if (elements && elements.length > 0) {\n            // Apply padding to ensure messages are visible\n            elements.forEach(el => {\n              // Use cssText to ensure !important works properly\n              el.style.cssText += '; padding-top: 300px !important; margin-top: 300px !important;';\n              targetFound = true;\n              debugLog('MBA9876: Added padding to element', {\n                selector,\n                element: el.tagName,\n                childCount: el.childElementCount\n              });\n            });\n            \n            // If we found a target with this selector, stop trying others\n            if (targetFound) break;\n          }\n        }\n        \n        // If we couldn't find any suitable container, try a more direct approach but don't log warning\n        // This reduces console spam while still trying to fix the issue\n        if (!targetFound) {\n          // Try applying padding to the message container directly\n          const messageContainer = document.querySelector('.messagesContainer');\n          if (messageContainer) {\n            messageContainer.style.cssText += '; padding-bottom: 300px !important;';\n          }\n        }\n        \n        // Also try to force scroll to top of inverted list to show latest message\n        const messageList = document.querySelector('.messagesContainer');\n        if (messageList) {\n          messageList.scrollTop = 0;\n          debugLog('MBA9876: Forced scroll to top of message list');\n        }\n      }, 100); // Decreased timeout for faster response\n    }\n  };\n\n  // Add an interval to keep checking and fixing the padding\n  useEffect(() => {\n    if (Platform.OS !== 'web' || !selectedConversation) return;\n    \n    // Run immediately\n    ensureLatestMessageVisible();\n    \n    // Set up an interval to continuously check and fix\n    const intervalId = setInterval(ensureLatestMessageVisible, 500);\n    \n    // Clean up interval on unmount\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [selectedConversation, messages]);\n\n  // Add this useEffect after the existing ones to directly fix message visibility after sending\n  useEffect(() => {\n    // Only run this on web\n    if (Platform.OS !== 'web' || !selectedConversation) return;\n    \n    // Function to directly fix message visibility with a direct approach\n    const fixMessageVisibility = () => {\n      // Target the FlatList directly\n      const flatList = document.querySelector('.messagesContainer .message-list-component');\n      if (!flatList) return;\n      \n      // Force scroll to top (latest message) for inverted list\n      flatList.scrollTop = 0;\n      \n      // Get the content container - this is what we need to add padding to\n      const contentContainer = flatList.querySelector('div > div');\n      if (contentContainer) {\n        // Check current padding before applying\n        const computedStyle = window.getComputedStyle(contentContainer);\n        const currentPaddingTop = parseInt(computedStyle.paddingTop) || 0;\n        \n        // Only apply if needed\n        if (currentPaddingTop < 300) {\n          // Add a very large padding to ensure latest message is visible\n          contentContainer.style.paddingTop = '300px';\n          // Also try margin in case padding is being overridden\n          contentContainer.style.marginTop = '300px';\n          \n          debugLog('MBA9876: Applied direct padding fix to FlatList content container', {\n            element: 'content container',\n            paddingApplied: '300px',\n            marginApplied: '300px'\n          });\n        }\n      }\n      \n      // Also try to apply padding to all direct children\n      const directChildren = flatList.querySelectorAll(':scope > div');\n      directChildren.forEach(child => {\n        // Check current padding\n        const computedStyle = window.getComputedStyle(child);\n        const currentPaddingTop = parseInt(computedStyle.paddingTop) || 0;\n        \n        // Only apply if needed\n        if (currentPaddingTop < 300) {\n          child.style.paddingTop = '300px';\n          child.style.marginTop = '300px';\n          \n          debugLog('MBA9876: Applied padding to direct child', {\n            child: child.className || child.tagName,\n            paddingApplied: '300px',\n            marginApplied: '300px'\n          });\n        }\n      });\n    };\n    \n    // Run the fix whenever messages change (new message sent or received)\n    if (messages.length > 0) {\n      // Run immediately\n      fixMessageVisibility();\n      \n      // And after a short delay to ensure the DOM has updated\n      setTimeout(fixMessageVisibility, 100);\n      setTimeout(fixMessageVisibility, 500);\n    }\n  }, [messages, selectedConversation]);\n\n  // Add a specific WebInput focus handler to fix message visibility when keyboard opens\n  // Improved input focus handler for cross-browser compatibility\n  const handleInputFocus = () => {\n    if (Platform.OS === 'web') {\n      // On mobile browsers, when keyboard opens, force scroll to show latest message\n      setTimeout(() => {\n        // Scroll the message list to show the latest messages (top for inverted list)\n        const messageList = document.querySelector('.messagesContainer');\n        if (messageList) {\n          messageList.scrollTop = 0;\n          debugLog('MBA9876: Forced scroll on input focus to show latest messages');\n        }\n        \n        // For iOS Safari, we need additional handling to avoid the gray space\n        // This ensures content doesn't shift weirdly when the keyboard opens\n        if (isKeyboardVisible) {\n          // Force window scroll to ensure input is visible\n          window.scrollTo(0, 0);\n          \n          // Fix for iOS browsers - scroll input into view\n          const inputContainer = document.querySelector('.message-input-container');\n          if (inputContainer) {\n            // Make sure the input stays visible by forcing a reflow\n            inputContainer.style.transform = 'translateZ(0)';\n            \n            debugLog('MBA9876: Applied iOS input visibility fix');\n          }\n        }\n      }, 150);\n    }\n  };\n\n  // Add an effect to ensure keyboard handling works properly on iOS\n  useEffect(() => {\n    if (Platform.OS !== 'web') return;\n    \n    // Helper function to make adjustments when keyboard is visible\n    const adjustForKeyboard = () => {\n      // Only run if we have a selected conversation\n      if (!selectedConversation) return;\n      \n      if (isKeyboardVisible) {\n        // When keyboard is visible, ensure the input is visible\n        const inputContainer = document.querySelector('.message-input-container');\n        if (inputContainer) {\n          // Ensure the input stays in view\n          inputContainer.style.position = 'fixed';\n          inputContainer.style.bottom = '0';\n          inputContainer.style.left = '0';\n          inputContainer.style.right = '0';\n          inputContainer.style.zIndex = '1000';\n          \n          // On iOS, use hardware acceleration to prevent rendering issues\n          inputContainer.style.transform = 'translateZ(0)';\n          \n          // Ensure messages have enough padding to not be hidden behind the input\n          const messageContainer = document.querySelector('.messagesContainer');\n          if (messageContainer) {\n            messageContainer.style.paddingBottom = '80px';\n          }\n          \n          debugLog('MBA9876: [KEYBOARD] Applied keyboard adjustments');\n        }\n        \n        // Force scroll if textarea is focused\n        if (document.activeElement && document.activeElement.tagName === 'TEXTAREA') {\n          const messageList = document.querySelector('.messagesContainer');\n          if (messageList) {\n            // For inverted list, scroll to top to see latest messages\n            messageList.scrollTop = 0;\n          }\n        }\n      }\n    };\n    \n    // Add event listeners for iOS keyboard detection\n    window.addEventListener('focusin', adjustForKeyboard);\n    \n    // Run once on mount\n    adjustForKeyboard();\n    \n    // Clear the handlers on unmount\n    return () => {\n      window.removeEventListener('focusin', adjustForKeyboard);\n    };\n  }, [selectedConversation, isKeyboardVisible]);\n\n  // Add iOS-specific style adjustments\n  useLayoutEffect(() => {\n    if (Platform.OS !== 'web') return;\n    \n    // Create a style element with cross-browser compatible styles\n    const styleEl = document.createElement('style');\n    styleEl.id = 'ios-message-fix-style';\n    styleEl.innerHTML = `\n      /* Ensure proper message container height and scrolling */\n      .messagesContainer {\n        -webkit-overflow-scrolling: touch;\n        padding-bottom: 80px !important;\n      }\n      \n      /* Fix for inverted FlatList in Safari */\n      .message-list-component {\n        padding-bottom: 0 !important;\n        transform: translateZ(0);\n      }\n      \n      /* Make sure there's enough space at the bottom to not cut off messages */\n      .message-list-component > div > div {\n        padding-bottom: 100px !important;\n      }\n      \n      /* Fix for iOS keyboard issues */\n      .message-input-container {\n        transform: translateZ(0);\n        z-index: 1000;\n      }\n    `;\n    \n    // Add the style to the document head\n    document.head.appendChild(styleEl);\n    \n    debugLog('MBA9876: Added iOS-compatible style fixes', {\n      styleId: 'ios-message-fix-style'\n    });\n    \n    // Clean up function\n    return () => {\n      const existingStyle = document.getElementById('ios-message-fix-style');\n      if (existingStyle) {\n        existingStyle.remove();\n      }\n    };\n  }, []);\n  \n  // Add focused cleanup effect for iOS layout issues\n  useLayoutEffect(() => {\n    if (Platform.OS !== 'web' || !selectedConversation) return;\n    \n    // Simple function to ensure message list has proper padding\n    const ensureMessageListPadding = () => {\n      const messageList = document.querySelector('.messagesContainer');\n      if (messageList) {\n        // Ensure the message container has enough padding at the bottom\n        // to accommodate for the fixed input bar\n        if (parseInt(messageList.style.paddingBottom || '0') < 80) {\n          messageList.style.paddingBottom = '80px';\n        }\n        \n        // Make sure iOS properly renders the scroll container\n        messageList.style.WebkitOverflowScrolling = 'touch';\n        \n        debugLog('MBA9876: [iOS] Ensured message list has proper padding');\n      }\n    };\n    \n    // Run immediately\n    ensureMessageListPadding();\n    \n    // And also after a short delay to account for async rendering\n    const timeoutId = setTimeout(ensureMessageListPadding, 500);\n    \n    // Clean up function\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [selectedConversation]);\n  \n  // Add a lightweight effect to ensure iOS scrolling works properly\n  useEffect(() => {\n    if (Platform.OS !== 'web' || !selectedConversation) return;\n    \n    // This timeout ensures the message container can scroll properly\n    // by adding the -webkit-overflow-scrolling property\n    const timeoutId = setTimeout(() => {\n      // Apply iOS-specific scrolling property\n      const messageContainer = document.querySelector('.messagesContainer');\n      if (messageContainer) {\n        messageContainer.style.WebkitOverflowScrolling = 'touch';\n        debugLog('MBA9876: [iOS] Applied smooth scrolling to message container');\n      }\n      \n      // Make sure input stays in place on iOS\n      const inputContainer = document.querySelector('.message-input-container');\n      if (inputContainer) {\n        // Force hardware acceleration to avoid rendering issues\n        inputContainer.style.transform = 'translateZ(0)';\n        debugLog('MBA9876: [iOS] Applied hardware acceleration to input container');\n      }\n    }, 250);\n    \n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [selectedConversation]);\n\n  // Add a loading overlay component at the bottom of the return statement, before any modals\n  // Final sanity check right before rendering\n  debugLog('MBA3456: FINAL CHECK before rendering UI', {\n    conversationsTotal: conversations.length,\n    filteredTotal: filteredConversations.length,\n    role: userRole,\n    originalConversations: conversations.map(c => ({\n      id: c.conversation_id,\n      is_professional: c.is_professional\n    })),\n    filteredConversations: filteredConversations.map(c => ({\n      id: c.conversation_id,\n      is_professional: c.is_professional\n    }))\n  });\n  \n  // Ensure no inappropriate conversations are showing - redundant safety check\n  const safeFilteredConversations = userRole === 'professional'\n    ? filteredConversations.filter(c => c.is_professional === true)\n    : userRole === 'petOwner' || userRole === 'owner'\n      ? filteredConversations.filter(c => c.is_professional === false) \n      : filteredConversations;\n  \n  // Refs for resize handling\n  const resizeTimeoutRef = useRef(null);\n  \n  // Track previous width for threshold crossing detection\n  const lastWidthRef = useRef(getInitialWidth());\n  \n  // Add effect to handle screen width changes with debouncing to prevent excessive re-renders\n  useEffect(() => {\n    // Only run on web platform\n    if (Platform.OS !== 'web' || typeof window === 'undefined') {\n      return;\n    }\n    \n    const handleScreenWidthChange = () => {\n      // Clear any existing timeout\n      if (resizeTimeoutRef.current) {\n        clearTimeout(resizeTimeoutRef.current);\n      }\n      \n      // Set a new timeout to debounce the navigation param update\n      resizeTimeoutRef.current = setTimeout(() => {\n        // Only update if we have a selected conversation\n        if (selectedConversation && typeof window !== 'undefined') {\n          const currentWidth = window.innerWidth;\n          const lastWidth = lastWidthRef.current;\n          const isMobile = currentWidth <= 900;\n          const wasMobile = lastWidth <= 900;\n          \n          // Only update if crossing the mobile/desktop threshold to avoid unnecessary API calls\n          if (isMobile !== wasMobile) {\n            // Update the navigation params to ensure Navigation component detects the change\n            navigation.setParams({ \n              selectedConversation: selectedConversation,\n              isMobile: isMobile\n            });\n            \n            debugLog('MBA4477: Updated navigation params after crossing width threshold', {\n              selectedConversation,\n              previousWidth: lastWidth,\n              currentWidth,\n              isMobile\n            });\n            \n            // Update the last width reference\n            lastWidthRef.current = currentWidth;\n          }\n        }\n      }, 500); // 500ms debounce (increased from 200ms)\n    };\n    \n    // Add resize event listener\n    window.addEventListener('resize', handleScreenWidthChange);\n    \n    // Cleanup\n    return () => {\n      window.removeEventListener('resize', handleScreenWidthChange);\n      \n      if (resizeTimeoutRef.current) {\n        clearTimeout(resizeTimeoutRef.current);\n      }\n    };\n  }, [selectedConversation, navigation]);\n  \n  // Direct solution for Brave/DuckDuckGo overlay issues\n  useEffect(() => {\n    if (Platform.OS !== 'web') return;\n    \n    // Brave/DuckDuckGo mobile detection attempt\n    const userAgent = navigator.userAgent.toLowerCase();\n    const isBrave = userAgent.includes('brave') || (navigator.brave && navigator.brave.isBrave && navigator.brave.isBrave.name === 'isBrave');\n    const isDuckDuckGo = userAgent.includes('duckduckgo');\n    const isMobile = userAgent.includes('iphone') || userAgent.includes('ipad') || userAgent.includes('mobile');\n\n    // Create a more aggressive CSS fix\n    const styleEl = document.createElement('style');\n    styleEl.id = 'brave-duckduckgo-fix';\n    styleEl.innerHTML = `\n      /* Target CSS fix specifically for mobile */\n      @media (max-width: 900px) {\n        /* Fix input container with !important flags to override browser styles */\n        .message-input-container, .inputSection {\n          background-color: #FFFFFF !important;\n          background: #FFFFFF !important;\n          border-top: 1px solid #ECECEC !important;\n          position: relative !important;\n          z-index: 999 !important;\n          bottom: 0 !important;\n          left: 0 !important;\n          right: 0 !important;\n          margin: 0 !important;\n          padding: 8px !important;\n        }\n        \n        /* Aggressively remove any translucent overlays */\n        .messagesContainer::after,\n        .inputSection::after,\n        .message-input-container::after,\n        .messagesContainer::before,\n        .inputSection::before,\n        .message-input-container::before,\n        .mainSection::after,\n        .mainSection::before {\n          display: none !important;\n          opacity: 0 !important;\n          content: none !important;\n          visibility: hidden !important;\n        }\n        \n        /* Force white background on containers */\n        html, body, #root, .mainSection, .messageSection, .messagesContainer {\n          background-color: #FFFFFF !important;\n        }\n        \n        /* Ensure message input stays on top */\n        .message-input-container textarea,\n        .message-input-container input {\n          position: relative !important;\n          z-index: 1000 !important;\n          opacity: 1 !important;\n          visibility: visible !important;\n        }\n      }\n    `;\n    \n    // Add style to document\n    document.head.appendChild(styleEl);\n    \n    // For Brave/DuckDuckGo on mobile, add extra fix\n    if ((isBrave || isDuckDuckGo || true) && isMobile) {\n      // Wait for DOM to be fully loaded\n      setTimeout(() => {\n        // Direct DOM fix\n        const fixGreySpace = () => {\n          // Fix input container\n          const inputContainer = document.querySelector('.message-input-container');\n          if (inputContainer) {\n            // Make sure input is visible\n            inputContainer.style.backgroundColor = '#FFFFFF';\n            inputContainer.style.position = 'relative';\n            inputContainer.style.zIndex = '999';\n            inputContainer.style.borderTop = '1px solid #ECECEC';\n            \n            // Fix parent containers\n            const inputSection = document.querySelector('.inputSection');\n            if (inputSection) {\n              inputSection.style.backgroundColor = '#FFFFFF';\n              inputSection.style.position = 'relative';\n              inputSection.style.zIndex = '998';\n            }\n          }\n          \n          // Fix message container\n          const messageContainer = document.querySelector('.messagesContainer');\n          if (messageContainer) {\n            messageContainer.style.backgroundColor = '#FFFFFF';\n          }\n        };\n        \n        // Run fix\n        fixGreySpace();\n        \n        // Run again after slight delay\n        setTimeout(fixGreySpace, 100);\n        \n        // Run on resize or orientation change\n        window.addEventListener('resize', fixGreySpace);\n        window.addEventListener('orientationchange', fixGreySpace);\n        \n        // Run on input focus (when keyboard appears)\n        document.addEventListener('focusin', (e) => {\n          if (e.target.tagName === 'TEXTAREA' || e.target.tagName === 'INPUT') {\n            setTimeout(fixGreySpace, 100);\n          }\n        });\n      }, 500);\n      \n      // Return cleanup function\n      return () => {\n        window.removeEventListener('resize', () => {});\n        window.removeEventListener('orientationchange', () => {});\n        document.removeEventListener('focusin', () => {});\n        \n        const existingStyle = document.getElementById('brave-duckduckgo-fix');\n        if (existingStyle) {\n          existingStyle.remove();\n        }\n      };\n    } else {\n      // Clean up for non-mobile browsers\n      return () => {\n        const existingStyle = document.getElementById('brave-duckduckgo-fix');\n        if (existingStyle) {\n          existingStyle.remove();\n        }\n      };\n    }\n  }, []);\n  \n  // A ref to track if we've already processed a specific navigation timestamp\n  const processedNavigationTimestampsRef = useRef(new Set());\n  \n  // Just after useState declarations, add one debug log for route params\n  useEffect(() => {\n    if (route.params?.conversationId) {\n      debugLog('MBA24u45vn', 'Route params detected', {\n        conversationId: route.params.conversationId,\n        otherUserName: route.params.otherUserName,\n        timestamp: route.params._timestamp,\n        has_fullConversationData: !!route.params.fullConversationData\n      });\n      \n      // Only process this useEffect if:\n      // 1. We have a recent timestamp (likely from ProfessionalServicesModal)\n      // 2. We have fullConversationData (confirms it's from ProfessionalServicesModal)\n      // 3. We haven't already processed this exact timestamp\n      // 4. This isn't a screen resize event\n      const hasRecentTimestamp = route.params._timestamp && \n                               (Date.now() - route.params._timestamp < 10000);\n      const isFromProfessionalModal = !!route.params.fullConversationData;\n      const hasProcessedThisTimestamp = route.params._timestamp && \n                                      processedNavigationTimestampsRef.current.has(route.params._timestamp);\n      \n      // Check if this is a screen resize event\n      // Screen resize typically changes isMobile param but keeps the same timestamp\n      const isScreenResizeEvent = route.params.isMobile !== undefined && \n                                !hasRecentTimestamp;\n      \n      debugLog('MBA24u45vn', 'Checking if we should fetch based on navigation source', {\n        hasRecentTimestamp,\n        isFromProfessionalModal,\n        hasProcessedThisTimestamp,\n        isScreenResizeEvent,\n        currentTimestamp: Date.now(),\n        navigationTimestamp: route.params._timestamp,\n        isMobile: route.params.isMobile\n      });\n      \n      // Only trigger fetch for new navigations from ProfessionalServicesModal\n      // Skip if this is a screen resize event\n      if (hasRecentTimestamp && isFromProfessionalModal && !hasProcessedThisTimestamp && \n          !isScreenResizeEvent && !isFetchingConversationsRef.current) {\n        debugLog('MBA24u45vn', 'Triggering fetch based on navigation from ProfessionalServicesModal', {\n          conversationId: route.params.conversationId,\n          currentConversation: selectedConversation,\n          timestamp: Date.now()\n        });\n        \n        // Mark this timestamp as processed to prevent duplicate processing\n        if (route.params._timestamp) {\n          processedNavigationTimestampsRef.current.add(route.params._timestamp);\n          \n          // Clean up old timestamps to prevent memory leaks\n          setTimeout(() => {\n            processedNavigationTimestampsRef.current.delete(route.params._timestamp);\n          }, 10000);\n        }\n        \n        // Set the selected conversation first\n        setSelectedConversation(route.params.conversationId);\n        \n        // Fetch conversations to update the list\n        fetchConversations().then(data => {\n          if (data && Array.isArray(data)) {\n            debugLog('MBA24u45vn', 'Conversations fetched from ProfessionalServicesModal navigation', {\n              conversationCount: data.length,\n              conversationId: route.params.conversationId,\n              found: !!data.find(c => c.conversation_id === route.params.conversationId)\n            });\n            \n            // Fetch messages for this conversation\n            fetchMessages(route.params.conversationId);\n          }\n        });\n      }\n    }\n  }, [route.params]);\n  \n  return (\n    <View style={[\n      styles.container,\n      screenWidth <= 900 && selectedConversation && styles.mobileContainer,\n      { marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0 },\n    ]}>\n      {isLoadingConversations ? (\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={{ marginTop: 16, color: theme.colors.placeholder }}>Loading conversations...</Text>\n        </View>\n      ) : safeFilteredConversations.length > 0 ? (\n        <View style={styles.contentContainer}>\n          {screenWidth <= 900 ? (\n            selectedConversation ? (\n              <View style={styles.mobileMessageView}>\n                {renderMobileHeader()}\n                {renderMessageSection()}\n              </View>\n            ) : (\n              renderConversationList()\n            )\n          ) : (\n            <>\n              {renderConversationList()}\n              {renderMessageSection()}\n            </>\n          )}\n        </View>\n      ) : (\n        renderEmptyState()\n      )}\n      \n      {/* Loading overlay for draft creation */}\n      {isLoading && (\n        <View style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.4)',\n          justifyContent: 'center',\n          alignItems: 'center',\n          zIndex: 1000\n        }}>\n          <View style={{\n            backgroundColor: theme.colors.surface,\n            borderRadius: 12,\n            padding: 24,\n            alignItems: 'center',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.25,\n            shadowRadius: 3.84,\n            elevation: 5,\n          }}>\n            <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n            <Text style={{ marginTop: 16, color: theme.colors.text, fontFamily: theme.fonts.regular.fontFamily }}>\n              Creating draft from booking...\n            </Text>\n          </View>\n        </View>\n      )}\n      \n      {/* <RequestBookingModal\n        visible={showRequestModal}\n        onClose={() => setShowRequestModal(false)}\n        onSubmit={handleBookingRequest}\n        conversationId={selectedConversation}\n      /> */}\n\n      <BookingStepModal\n        visible={showBookingStepModal}\n        onClose={() => {\n          setShowBookingStepModal(false);\n          setCurrentBookingId(null);\n          \n          // Refresh message data when modal is closed to get latest draft status\n          if (selectedConversation) {\n            debugLog('MBA2349f87g9qbh2nfv9cg: Refreshing message data after closing BookingStepModal');\n            fetchMessages(selectedConversation, 1);\n          }\n        }}\n        navigation={navigation}\n        bookingId={currentBookingId}\n        onComplete={(bookingData) => {\n          debugLog('MBA6428: Booking completed:', bookingData);\n          debugLog('MBA6428: New booking message:', bookingData.message);\n          debugLog('MBA6428: Message metadata:', bookingData.message?.metadata);\n          debugLog('MBA6428: Is this an update?', bookingData.isUpdate);\n          \n          // Handle error case\n          if (bookingData.error) {\n            Alert.alert(\n              'Error',\n              bookingData.errorMessage || 'Failed to process booking. Please try again.'\n            );\n            \n            // Close the modal and clean up\n            setShowBookingStepModal(false);\n            setCurrentBookingId(null);\n            \n            // Refresh message data to get latest draft status\n            if (selectedConversation) {\n              debugLog('MBA2349f87g9qbh2nfv9cg: Refreshing message data after booking error');\n              fetchMessages(selectedConversation, 1);\n            }\n            \n            return;\n          }\n          \n          // Add the new booking message to the messages list\n          if (bookingData.message) {\n            debugLog('MBA2349f87g9qbh2nfv9cg: Adding booking completion message to list', {\n              messageId: bookingData.message.message_id,\n              currentMessageCount: messages.length\n            });\n            \n            setMessages(prevMessages => {\n              const updatedMessages = [bookingData.message, ...prevMessages];\n              debugLog('MBA2349f87g9qbh2nfv9cg: Booking message added to list', {\n                oldLength: prevMessages.length,\n                newLength: updatedMessages.length\n              });\n              return updatedMessages;\n            });\n            \n            // Update conversation's last message with appropriate text\n            const lastMessageText = bookingData.isUpdate \n              ? \"Updated Booking Request\" \n              : \"Approval Request\";\n              \n            setConversations(prev => prev.map(conv => \n              conv.conversation_id === selectedConversation \n                ? {\n                    ...conv,\n                    last_message: lastMessageText,\n                    last_message_time: bookingData.message.timestamp\n                  }\n                : conv\n            ));\n          }\n          \n          // Update draft state since the draft is deleted after booking creation\n          setHasDraft(false);\n          setDraftData(null);\n          \n          // Close the modal and clean up\n          setShowBookingStepModal(false);\n          setCurrentBookingId(null);\n          \n          // Refresh message data to get latest draft status\n          if (selectedConversation) {\n            debugLog('MBA2349f87g9qbh2nfv9cg: Refreshing message data after successful booking completion');\n            fetchMessages(selectedConversation, 1);\n          }\n\n          // Show success message to the user\n          const successMessage = bookingData.isUpdate\n            ? \"Booking update request sent successfully!\"\n            : \"Booking request sent successfully!\";\n          \n          Alert.alert(\"Success\", successMessage);\n        }}\n      />\n\n      <ClientPetsModal\n        visible={showClientPetsModal}\n        onClose={() => setShowClientPetsModal(false)}\n        conversation={{\n          id: selectedConversationData?.conversation_id\n        }}\n        otherUserProfilePhoto={selectedConversationData?.profile_picture}\n        otherUserName={selectedConversationData?.other_user_name}\n        onCreateBooking={handleCreateBooking}\n      />\n\n      <DraftConfirmationModal\n        visible={showDraftConfirmModal}\n        onClose={() => setShowDraftConfirmModal(false)}\n        onContinueExisting={handleContinueExisting}\n        onCreateNew={handleCreateNew}\n      />\n      \n      {/* Image Viewer Modal */}\n      <ImageViewer\n        visible={isImageViewerVisible}\n        imageUrl={selectedImageUrl}\n        onClose={closeImageViewer}\n      />\n    </View>\n  );\n};\n\nexport default MessageHistory;\n\n","import { StyleSheet, Platform } from 'react-native';\nimport { theme } from '../../styles/theme';\n\nexport const createMessageStyles = (screenWidth, isCollapsed = false) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: 0,\n    paddingRight: 0,\n    paddingLeft: 0,\n    height: '100%',\n    overflow: 'hidden',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    ...(Platform.OS === 'web' && screenWidth <= 900 ? {\n      display: 'flex',\n      flexDirection: 'column',\n    } : {}),\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  filterButton: {\n    marginLeft: 'auto',\n  },\n  contentContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    maxWidth: screenWidth > 900 ? '100%' : 900,\n    alignSelf: 'center',\n    width: '100%',\n    overflow: 'hidden',\n    height: '100%',\n    display: 'flex',\n    marginTop: 0,\n    paddingTop: 0,\n  },\n  mainSection: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    maxWidth: Platform.OS === 'web' ? \n      (screenWidth <= 900 ? '100%' : '70%') : \n      '100%',\n    alignSelf: screenWidth <= 900 ? 'stretch' : 'flex-start',\n    width: screenWidth <= 900 ? '100%' : 'auto',\n    height: '100%',\n    marginTop: 0,\n    paddingTop: 0,\n  },\n  conversationListContainer: {\n    width: screenWidth <= 900 ? '100%' : '30%',\n    maxWidth: screenWidth < 900 ? '' : 600,\n    backgroundColor: theme.colors.surfaceContrast,\n    overflow: 'auto',\n  },\n  conversationItem: {\n    padding: 16,\n    maxWidth: screenWidth < 900 ? '' : 600,\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  conversationProfilePhoto: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  conversationProfilePhotoFallback: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  conversationContent: {\n    flex: 1,\n  },\n  selectedConversation: {\n    backgroundColor: theme.colors.primary + '20',\n    borderLeftWidth: 3,\n    borderLeftColor: theme.colors.primary,\n  },\n  conversationName: {\n    fontSize: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n    flex: 1,\n  },\n  messageSection: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n    paddingHorizontal: 5,\n    backgroundColor: theme.colors.surface,\n    paddingBottom: 0,\n    position: 'relative',\n  },\n  messageHeader: {\n    padding: 12,\n    backgroundColor: theme.colors.surfaceContrast,\n    width: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 1,\n    ...(Platform.OS === 'web' && screenWidth <= 900 ? {\n      position: 'sticky',\n      top: 0,\n    } : {}),\n  },\n  profilePhoto: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  messageHeaderName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  // Mobile header profile photo styles\n  mobileProfilePhotoContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 8,\n  },\n  mobileProfilePhoto: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n  mobileProfilePhotoFallback: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  messagesContainer: {\n    flex: 1,\n    overflow: 'auto',\n    width: '100%',\n    ...(Platform.OS === 'web' && screenWidth <= 900 ? {\n      WebkitOverflowScrolling: 'touch', // Smooth scrolling for iOS\n    } : {}),\n  },\n  messageList: {\n    width: '100%',\n    paddingBottom: 16,\n  },\n  fullWidthMessage: {\n    width: '100%',\n    alignSelf: 'center',\n    paddingHorizontal: 8,\n  },\n  textInput: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    borderRadius: 20,\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n    marginRight: 8,\n    marginLeft: 8,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sendButton: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n  },\n  sendButtonMobile: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n    marginHorizontal: 0,\n    minWidth: 0,\n  },\n  sendButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  sendButtonInactive: {\n    backgroundColor: theme.colors.border,\n  },\n  webInput: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    paddingVertical: 8,\n    marginHorizontal: 8,\n    fontSize: 18,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    maxHeight: 120,\n    minHeight: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  input: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    paddingHorizontal: 20,\n    paddingVertical: 8,\n    marginHorizontal: 8,\n    fontSize: 18,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    minHeight: 20,\n  },\n  inputSection: {\n    width: '100%',\n    padding: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    zIndex: 10,\n    ...(Platform.OS === 'web' && screenWidth <= 900 ? {\n      position: 'relative', // Changed from fixed to relative\n      bottom: 0,\n      left: 0,\n      right: 0,\n      paddingTop: 8,\n      paddingBottom: 8,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: -1 },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    } : {}),\n  },\n  inputContainerOuter: {\n    width: '100%',\n    flexDirection: 'column',\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  attachButtonContainer: {\n    marginRight: 8,\n  },\n  attachButton: {\n    padding: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  inputInnerContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 20,\n    marginRight: 0,\n  },\n  dropdownMenu: {\n    position: 'absolute',\n    bottom: '100%',\n    left: 0,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginBottom: 8,\n    minWidth: 150,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownItem: {\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  dropdownText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  messageCard: {\n    // marginVertical: 4,\n    maxWidth: screenWidth > 900 ? '40%' : '75%',\n    borderRadius: 12,\n    overflow: 'hidden',\n  },\n  messageContent: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n  },\n  sentMessage: {\n    alignSelf: 'flex-end',\n    backgroundColor: theme.colors.primary,\n  },\n  receivedMessage: {\n    alignSelf: 'flex-start',\n    backgroundColor: theme.colors.receivedMessage,\n  },\n  messageText: {\n    fontSize: 20,\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sentMessageContainer: {\n    alignItems: 'flex-end',\n    // marginBottom: 4,\n  },\n  receivedMessageContainer: {\n    alignItems: 'flex-start',\n    marginBottom: 4,\n  },\n  sentMessageText: {\n    color: theme.colors.whiteText,\n  },\n  receivedMessageText: {\n    color: theme.colors.text,\n  },\n  // Timestamp styles\n  messageTimestampContainer: {\n    paddingHorizontal: 4,\n    marginBottom: 2,\n    marginTop: 8,\n  },\n  sentMessageTimestamp: {\n    alignSelf: 'flex-end',\n    marginRight: 4,\n    marginBottom: 2,\n  },\n  receivedMessageTimestamp: {\n    alignSelf: 'flex-start',\n    marginLeft: 4,\n    marginBottom: 2,\n  },\n  messageTimestampText: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  searchContainer: {\n    padding: 16,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  searchInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 20,\n    paddingHorizontal: 12,\n    marginVertical: 6,\n    height: 40,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  searchIcon: {\n    marginRight: 8,\n  },\n  clearButton: {\n    padding: 4,\n  },\n  searchInput: {\n    flex: 1,\n    height: '100%',\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    ...(Platform.OS === 'web' && {\n      WebkitTapHighlightColor: 'transparent',\n      WebkitAppearance: 'none',\n    }),\n  },\n  conversationHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 6,\n    width: '100%',\n  },\n  conversationTime: {\n    fontSize: 12,\n    color: theme.colors.placeholder,\n  },\n  conversationLastMessageContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n    marginBottom: 6,\n  },\n  conversationLastMessage: {\n    fontSize: 14,\n    color: theme.colors.placeholder,\n    flex: 1,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  unreadMessage: {\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  bookingStatusContainer: {\n    backgroundColor: theme.colors.primary + '20',\n    padding: 4,\n    borderRadius: 4,\n    alignSelf: 'flex-start',\n    marginTop: 2,\n  },\n  bookingStatus: {\n    fontSize: 12,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeConversationText: {\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  unreadBadge: {\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 18,\n    height: 18,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    marginLeft: 8,\n    alignSelf: 'flex-start',\n  },\n  unreadBadgeText: {\n    color: 'white',\n    fontSize: 11,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileHeader: {\n    width: '100%',\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    position: 'sticky',\n    top: 0,\n    zIndex: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n    elevation: 3,\n    backgroundColor: theme.colors.surfaceContrast,\n    marginTop: 0,\n    paddingTop: 0,\n  },\n  mobileHeaderContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: 'relative',\n    paddingVertical: 16,\n    paddingHorizontal: 8,\n    width: '100%',\n    minHeight: 60,\n  },\n  mobileHeaderName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n    flexWrap: 'wrap',\n  },\n  mobileHeaderNameContainer: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    paddingHorizontal: 30, // Add padding to prevent overlap with back button\n  },\n  backArrow: {\n    position: 'absolute',\n    left: 16,\n    zIndex: 10,\n    padding: 8,\n  },\n  editDraftButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    marginLeft: 'auto',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  editDraftText: {\n    marginLeft: 4,\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  mobileEditDraftButton: {\n    marginRight: 10,\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: theme.colors.surface,\n    minWidth: 55,\n    alignSelf: 'flex-start',\n  },\n  messageHeaderContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n  },\n  headerDropdownMenu: {\n    position: 'absolute',\n    top: '100%',\n    right: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    marginTop: 4,\n    minWidth: 180,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    zIndex: 1000,\n  },\n  headerDropdownItem: {\n    padding: 12,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerDropdownText: {\n    color: theme.colors.text,\n    fontSize: 14,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  createBookingContainer: {\n    position: 'absolute',\n    top: 8,\n    left: 0,\n    right: 0,\n    paddingHorizontal: 16,\n    alignItems: 'center',\n    zIndex: 10,\n    pointerEvents: 'box-none',\n  },\n  createBookingHangingButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    paddingHorizontal: screenWidth <= 600 ? 12 : 16,\n    paddingVertical: screenWidth <= 600 ? 8 : 10,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n    width: '50%',\n    justifyContent: 'center',\n  },\n  createBookingHangingText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontSize: screenWidth <= 600 ? 14 : 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 12,\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emptyText: {\n    padding: 16,\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  loadingMore: {\n    padding: 16,\n  },\n  mobileMessageView: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n    marginTop: 0,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  mobileContainer: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n      // Image handling styles for MessageInput\n    selectedImagesWrapper: {\n      width: '100%',\n      marginBottom: 8,\n      marginTop: 4,\n      borderBottomWidth: 1,\n      borderBottomColor: '#ECECEC',\n      paddingBottom: 8,\n    },\n    selectedImagesScrollView: {\n      width: '100%',\n      maxHeight: 100,\n    },\n    selectedImagesContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingVertical: 4,\n    },\n    selectedImageContainer: {\n      position: 'relative',\n      marginRight: 8,\n      borderRadius: 8,\n      overflow: 'hidden',\n      borderWidth: 1,\n      borderColor: '#ECECEC',\n    },\n    selectedImagePreview: {\n      width: 80,\n      height: 80,\n      borderRadius: 8,\n    },\n    removeImageButton: {\n      position: 'absolute',\n      top: 4,\n      right: 4,\n      backgroundColor: 'rgba(255, 255, 255, 0.8)',\n      borderRadius: 12,\n      width: 24,\n      height: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    uploadingOverlay: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'rgba(0, 0, 0, 0.3)',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  // Styles for message images in MessageList\n  messageImage: {\n    width: 250,\n    height: 250,\n    borderRadius: 8,\n    // marginVertical: 4,\n    resizeMode: 'cover',\n  },\n  messageImagesContainer: {\n    width: '100%',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginVertical: 8,\n  },\n}); ","import { useState } from 'react';\nimport { debugLog } from '../../context/AuthContext';\n\n/**\n * Custom hook to manage image viewer state and handlers\n */\nexport const useImageViewer = () => {\n  const [isImageViewerVisible, setIsImageViewerVisible] = useState(false);\n  const [selectedImageUrl, setSelectedImageUrl] = useState(null);\n\n  /**\n   * Handle image click to open the fullscreen viewer\n   * @param {string} imageUrl - URL of the image to display\n   */\n  const handleImagePress = (imageUrl) => {\n    debugLog('MBA7654: Image pressed', { imageUrl });\n    \n    if (!imageUrl) {\n      debugLog('MBA7654: No image URL provided, cannot open viewer');\n      return;\n    }\n    \n    setSelectedImageUrl(imageUrl);\n    setIsImageViewerVisible(true);\n  };\n\n  /**\n   * Close the image viewer\n   */\n  const closeImageViewer = () => {\n    debugLog('MBA7654: Closing image viewer');\n    setIsImageViewerVisible(false);\n  };\n\n  return {\n    isImageViewerVisible,\n    selectedImageUrl,\n    handleImagePress,\n    closeImageViewer\n  };\n}; ","import React, { useContext, useState, useEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, Text, TouchableOpacity, StatusBar } from 'react-native';\nimport { List, Divider } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { AuthContext } from '../context/AuthContext';\n\nconst Settings = ({ navigation }) => {\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const styles = createStyles(screenWidth, isCollapsed);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  const settingsItems = [\n    { title: 'Change Password', icon: 'lock-reset', route: 'ChangePassword' },\n    { title: 'Notification Preferences', icon: 'bell-outline', route: 'NotificationPreferences' },\n    { title: 'Privacy Settings', icon: 'shield-account', route: 'PrivacySettings' },\n    { title: 'Language', icon: 'translate', route: 'LanguageSettings' },\n    { title: 'Display & Accessibility', icon: 'palette', route: 'DisplaySettings' },\n    { title: 'Data Usage', icon: 'chart-bar', route: 'DataUsage' },\n    { title: 'About', icon: 'information-outline', route: 'About' },\n  ];\n\n  const renderSettingsItems = () => {\n    return settingsItems.map((item, index) => (\n      <React.Fragment key={index}>\n        <List.Item\n          title={item.title}\n          titleStyle={styles.listItemTitle}\n          left={props => \n            Platform.OS === 'web' \n              ? <MaterialCommunityIcons \n                  name={item.icon} \n                  size={screenWidth <= 900 ? 20 : 24} \n                  color={theme.colors.primary} \n                />\n              : <List.Icon {...props} icon={item.icon} />\n          }\n          onPress={() => navigation.navigate(item.route)}\n          style={[\n            styles.webListItem,\n            { paddingHorizontal: screenWidth <= 900 ? 8 : 16 }\n          ]}\n        />\n        {index < settingsItems.length - 1 && <Divider />}\n      </React.Fragment>\n    ));\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          {isMobile && (\n            <BackHeader \n              title=\"Settings\" \n              onBackPress={() => navigation.navigate('More')} \n            />\n          )}\n          <View style={styles.webContent}>\n            <List.Section style={styles.listSection}>\n              {renderSettingsItems()}\n            </List.Section>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100vh',\n    overflow: 'hidden',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  container: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  listSection: {\n    backgroundColor: theme.colors.surface,\n  },\n  webContent: {\n    width: '100%',\n    maxWidth: screenWidth > 900 ? 800 : 600,\n    alignSelf: 'center',\n    padding: screenWidth <= 900 ? 10 : 16,\n  },\n  webListItem: {\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    paddingVertical: screenWidth <= 900 ? 8 : 12,\n  },\n  listItemTitle: {\n    fontSize: screenWidth <= 900 ? theme.fontSizes.medium : theme.fontSizes.large,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  warningContainer: {\n    backgroundColor: '#FFF3CD',\n    padding: theme.spacing.small,\n    marginHorizontal: theme.spacing.small,\n    marginTop: theme.spacing.small,\n    borderRadius: 4,\n  },\n  warningText: {\n    color: '#856404',\n    textAlign: 'center',\n  },\n});\n\nexport default Settings;\n","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { handleBack } from '../components/Navigation';\n\nconst appName = 'Zen Exotics';\n\nconst privacy_policy_info = [\n  {sectionTitle: \"Information We Collect\", \n    paragraph: \"When you use {appName}, we collect several types of information to ensure the best experience for both professionals and pet owners. This includes:\", \n    listItems: {listItem: \"Personal Information: Name, email, phone number, address, and service preferences.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Health Data: Medical information about your pets (e.g., medical history, medications, vaccinations, behavioral traits). By using this service, you consent to our use of this health data as we deem necessary for analytics, research, marketing, or any other purpose related to improving our services.\",\n                listItem: \"Device Data: We collect information about your device, including IP address, browser type, operating system, and other usage data.\",\n                listItem: \"Location Data: With your permission, we collect location information to match professionals and owners more effectively. Disabling location services may limit certain app features.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n                listItem: \"Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.\",\n    }},\n  {}\n];\n\nconst PrivacyPolicy = () => {\n  const navigation = useNavigation();\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader \n        title=\"Privacy Policy\" \n        onBackPress={() => handleBack(navigation)} \n      />\n      <ScrollView \n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <Text style={styles.title}>Privacy Policy for {appName}</Text>\n        <Text style={styles.date}>Effective Date: 10/21/2024</Text>\n        \n        <Text style={styles.paragraph}>\n          By accessing or using {appName}, you agree to the practices described in this Privacy Policy. If you do not agree with these terms, please discontinue the use of our services immediately.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Information We Collect</Text>\n        <Text style={styles.paragraph}>\n          When you use {appName}, we collect several types of information to ensure the best experience for both professionals and pet owners. This includes:\n        </Text>\n        <Text style={styles.listItem}>• Personal Information: Name, email, phone number, address, and service preferences.</Text>\n        <Text style={styles.listItem}>• Payment Information: Card type, expiration date, and the last four digits of your payment card. Complete payment details are managed by third-party processors, and we do not store full card numbers.</Text>\n        <Text style={styles.listItem}>• Health Data: Medical information about your pets (e.g., medical history, medications, vaccinations, behavioral traits). By using this service, you consent to our use of this health data as we deem necessary for analytics, research, marketing, or any other purpose related to improving our services.</Text>\n        <Text style={styles.listItem}>• Device Data: We collect information about your device, including IP address, browser type, operating system, and other usage data.</Text>\n        <Text style={styles.listItem}>• Location Data: With your permission, we collect location information to match professionals and owners more effectively. Disabling location services may limit certain app features.</Text>\n        <Text style={styles.listItem}>• Cookies and Tracking: We use cookies and tracking technologies to improve user experience and monitor traffic patterns. You can disable cookies in your browser settings.</Text>\n\n        <Text style={styles.sectionTitle}>How We Use Your Data</Text>\n        <Text style={styles.paragraph}>We use the data we collect to:</Text>\n        <Text style={styles.listItem}>• Facilitate bookings and transactions between professionals and owners.</Text>\n        <Text style={styles.listItem}>• Verify professional eligibility through background checks.</Text>\n        <Text style={styles.listItem}>• Provide customer support and resolve disputes between users.</Text>\n        <Text style={styles.listItem}>• Improve app functionality through analytics and feedback.</Text>\n        <Text style={styles.listItem}>• Manage communications between professionals and owners.</Text>\n        <Text style={styles.listItem}>• Use health data for internal analysis and marketing purposes. We retain control over how this data is used.</Text>\n\n        <Text style={styles.sectionTitle}>Sharing of Information</Text>\n        <Text style={styles.paragraph}>We may share your data in the following ways:</Text>\n        <Text style={styles.listItem}>• With Other Users: For bookings, we share relevant information between professionals and pet owners.</Text>\n        <Text style={styles.listItem}>• With Third-Party Providers: Payment processors, analytics providers, and background check services may access limited information to perform their services.</Text>\n        <Text style={styles.listItem}>• Legal and Compliance Purposes: We may disclose information if required by law or to protect the safety and security of our users.</Text>\n        <Text style={styles.listItem}>• Business Transfers: In case of a merger, sale, or acquisition, your data may be transferred to a new owner.</Text>\n        <Text style={styles.listItem}>• Aggregated Data: We may share non-identifiable, aggregated data for research or business purposes.</Text>\n\n        <Text style={styles.sectionTitle}>Your Rights and Choices</Text>\n        <Text style={styles.listItem}>• Account Management: You can update or delete your account information through the app settings.</Text>\n        <Text style={styles.listItem}>• Health Data Access: You may review the health data associated with your pets but agree that we control its use.</Text>\n        <Text style={styles.listItem}>• Location Services: Manage your location preferences through your device settings.</Text>\n        <Text style={styles.listItem}>• Cookie Preferences: You can opt out of personalized ads and tracking through your browser settings.</Text>\n\n        <Text style={styles.sectionTitle}>Security and Data Retention</Text>\n        <Text style={styles.paragraph}>\n          We implement reasonable security measures to protect your data, though no system is entirely secure. We retain your data as long as needed for operational purposes or as required by law.\n        </Text>\n\n        <Text style={styles.sectionTitle}>International Data Transfers</Text>\n        <Text style={styles.paragraph}>\n          Your data may be processed or stored in countries outside your own. By using the app, you agree to these transfers, even if those countries have different data protection laws.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Changes to This Privacy Policy</Text>\n        <Text style={styles.paragraph}>\n          We may update this policy from time to time to reflect changes in our practices or services. We will notify you of significant changes through the app or via email. Continued use of the app constitutes acceptance of the revised policy.\n        </Text>\n\n        <Text style={styles.sectionTitle}>Contact Us</Text>\n        <Text style={styles.paragraph}>\n          If you have questions or concerns about this policy, please contact us:\n        </Text>\n        <Text style={styles.listItem}>Email: zam.hh.llc@gmail.com</Text>\n        <Text style={styles.listItem}>Phone: 7195106341</Text>\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    width: '100%',\n    maxWidth: 800,\n    alignSelf: 'center',\n  },\n  contentContainer: {\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  date: {\n    fontSize: 16,\n    marginBottom: 20,\n    color: theme.colors.text,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  paragraph: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: theme.colors.text,\n  },\n  listItem: {\n    fontSize: 16,\n    marginBottom: 5,\n    marginLeft: 10,\n    color: theme.colors.text,\n  },\n});\n\nexport default PrivacyPolicy;\n","import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ProfessionalSettings = () => {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Professional Settings</Text>\n      <Text>Manage your professional profile and preferences here.</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: theme.colors.primary,\n  },\n});\n\nexport default ProfessionalSettings;","import React, { useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { handleBack } from '../components/Navigation';\nimport { AuthContext } from '../context/AuthContext';\n\nconst appName = 'Zen Exotics';\n\nconst TermsOfService = () => {\n  const navigation = useNavigation();\n\n  return (\n    <CrossPlatformView fullWidthHeader={true}>\n      <BackHeader \n        title=\"Terms of Service\" \n        onBackPress={() => handleBack(navigation)} \n      />\n      <Text>Terms of Service coming soon. Right now we are in prototype mode, so no data is saved except for email/name if you choose to contact us through this platform, then it is saved for marketing purposes.</Text>\n      \n      <ScrollView \n        style={styles.container}\n        contentContainerStyle={styles.contentContainer}\n      >\n        <Text style={styles.title}>Terms of Service for {appName}</Text>\n\n        <Text style={styles.date}>Effective Date: 10/21/2024</Text>\n        \n        <Text style={styles.paragraph}>\n          Welcome to {appName}! By using our platform, mobile application, or any services offered through our platform (collectively, \"the Service\"), you agree to be bound by these Terms of Service (\"Terms\"). If you do not agree to these Terms, you must discontinue use of the Service immediately.\n        </Text>\n\n        <Text style={styles.sectionTitle}>1. Description of Service</Text>\n        <Text style={styles.paragraph}>\n          {appName} provides an online platform for connecting pet owners with professionals specializing in exotic animals, as well as dogs and cats. Users can book services, communicate with professionals, and manage pet-related services, including payments and reviews.\n        </Text>\n\n        <Text style={styles.sectionTitle}>2. User Accounts</Text>\n        <Text style={styles.paragraph}>\n          To use certain features of the Service, you must create an account. You are responsible for keeping your account information accurate and secure.\n        </Text>\n        <Text style={styles.listItem}>• Eligibility: Users must be at least 18 years old to create an account.</Text>\n        <Text style={styles.listItem}>• Account Security: You are responsible for all activities under your account. Notify us immediately if you suspect unauthorized use.</Text>\n        <Text style={styles.listItem}>• Account Termination: We reserve the right to suspend or terminate accounts at our sole discretion for violations of these Terms.</Text>\n\n        <Text style={styles.sectionTitle}>3. User Conduct and Acceptable Use</Text>\n        <Text style={styles.paragraph}>By using the Service, you agree:</Text>\n        <Text style={styles.listItem}>• To provide accurate and complete information.</Text>\n        <Text style={styles.listItem}>• Not to engage in fraudulent or unlawful activities.</Text>\n        <Text style={styles.listItem}>• Not to use the Service for spam, harassment, or abusive behavior toward other users.</Text>\n        <Text style={styles.listItem}>• To comply with all local, national, and international laws applicable to your activities on the platform.</Text>\n        <Text style={styles.paragraph}>Failure to comply with these rules may result in account suspension or termination.</Text>\n\n        <Text style={styles.sectionTitle}>4. Pet and Health Information</Text>\n        <Text style={styles.paragraph}>\n          You acknowledge that the Service involves the collection and sharing of health-related data for pets. By using the Service, you agree to provide accurate medical information for your animals and grant us permission to use and share this data as outlined in our Privacy Policy.\n        </Text>\n\n        <Text style={styles.sectionTitle}>5. Payment Terms</Text>\n        <Text style={styles.paragraph}>\n          All transactions between pet owners and professionals must be processed through the platform's payment system, powered by Stripe. You agree to the following:\n        </Text>\n        <Text style={styles.listItem}>• Booking Fees: You will be charged the agreed-upon amount at the time of booking.</Text>\n        <Text style={styles.listItem}>• Cancellations and Refunds: Cancellations are subject to our cancellation policy, which may result in partial or no refunds.</Text>\n        <Text style={styles.listItem}>• Payouts to Professionals: Professionals must provide accurate payment information and comply with local tax regulations.</Text>\n\n        <Text style={styles.sectionTitle}>6. Liability and Disclaimer of Warranties</Text>\n        <Text style={styles.paragraph}>\n          You acknowledge that {appName} does not guarantee the quality or safety of services provided by professionals. Our platform only facilitates connections between users.\n        </Text>\n        <Text style={styles.listItem}>• We are not liable for any injury, damage, or loss caused during the provision of pet care services.</Text>\n        <Text style={styles.listItem}>• The Service is provided \"as is\" and \"as available\" without warranties of any kind, express or implied.</Text>\n\n        <Text style={styles.sectionTitle}>7. Dispute Resolution Between Users</Text>\n        <Text style={styles.paragraph}>\n          Disputes between users (e.g., pet owners and professionals) must first be addressed directly between the parties. If no resolution is reached, {appName} may mediate but is not responsible for the outcome.\n        </Text>\n\n        <Text style={styles.sectionTitle}>8. Limitation of Liability</Text>\n        <Text style={styles.paragraph}>In no event shall {appName}, its affiliates, officers, employees, or partners be liable for:</Text>\n        <Text style={styles.listItem}>• Indirect, incidental, or consequential damages arising from the use of the Service.</Text>\n        <Text style={styles.listItem}>• Any claims exceeding the amount you paid through the Service within the last six months.</Text>\n\n        <Text style={styles.sectionTitle}>9. Termination and Suspension</Text>\n        <Text style={styles.paragraph}>We reserve the right to suspend or terminate access to the Service at any time without notice if:</Text>\n        <Text style={styles.listItem}>• You breach these Terms.</Text>\n        <Text style={styles.listItem}>• Your actions jeopardize the safety or security of the platform or other users.</Text>\n\n        <Text style={styles.sectionTitle}>10. Modifications to the Service and Terms</Text>\n        <Text style={styles.paragraph}>\n          We may modify these Terms or the Service at any time. Significant changes will be communicated via email or in-app notifications. Continued use of the Service after changes constitutes acceptance of the revised Terms.\n        </Text>\n\n        <Text style={styles.sectionTitle}>11. Intellectual Property Rights</Text>\n        <Text style={styles.paragraph}>\n          All content, trademarks, and logos on the platform are owned by or licensed to {appName}. You may not copy, modify, or distribute content without express permission.\n        </Text>\n\n        <Text style={styles.sectionTitle}>12. Governing Law and Dispute Resolution</Text>\n        <Text style={styles.paragraph}>\n          These Terms are governed by the laws of El Paso County, Colorado, without regard to conflict of law principles.\n        </Text>\n        <Text style={styles.listItem}>• Arbitration Clause: All disputes arising under these Terms shall be resolved through binding arbitration in Colorado Springs, Colorado.</Text>\n        <Text style={styles.listItem}>• Class Action Waiver: You agree to waive your right to participate in class action lawsuits.</Text>\n\n        <Text style={styles.sectionTitle}>13. Indemnification</Text>\n        <Text style={styles.paragraph}>\n          You agree to indemnify and hold harmless {appName}, its affiliates, officers, and employees from any claims, damages, or liabilities arising from your use of the Service or breach of these Terms.\n        </Text>\n\n        <Text style={styles.sectionTitle}>14. Third-Party Links and Services</Text>\n        <Text style={styles.paragraph}>\n          The platform may contain links to third-party websites or services. {appName} is not responsible for the content or actions of those third parties.\n        </Text>\n\n        <Text style={styles.sectionTitle}>15. Contact Us</Text>\n        <Text style={styles.paragraph}>\n          If you have questions about these Terms, please contact us:\n        </Text>\n        <Text style={styles.listItem}>Email: zam.hh.llc@gmail.com</Text>\n        <Text style={styles.listItem}>Phone: 7195106341</Text>\n\n        <Text style={styles.sectionTitle}>Acknowledgment of Agreement</Text>\n        <Text style={styles.paragraph}>\n          By accessing or using {appName}, you acknowledge that you have read, understood, and agreed to these Terms of Service.\n        </Text>\n      </ScrollView>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  contentContainer: {\n    paddingBottom: 80,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  date: {\n    fontSize: 16,\n    marginBottom: 20,\n    color: theme.colors.text,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 20,\n    marginBottom: 10,\n    color: theme.colors.primary,\n  },\n  paragraph: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: theme.colors.text,\n  },\n  listItem: {\n    fontSize: 16,\n    marginBottom: 5,\n    marginLeft: 10,\n    color: theme.colors.text,\n  },\n  testSection: {\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    padding: 10,\n    borderRadius: 4,\n  },\n});\n\nexport default TermsOfService;\n","import React from 'react';\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst HelpFAQ = () => {\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.title}>Help / FAQ</Text>\n      <Text>Frequently asked questions and help topics go here...</Text>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n    color: theme.colors.primary,\n  },\n});\n\nexport default HelpFAQ;","import React, { useState, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Platform, Dimensions } from 'react-native';\nimport { theme } from '../styles/theme';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { validateEmail, validateName, validateMessage, sanitizeInput } from '../validation/validation';\n\nconst ContactUs = () => {\n  const navigation = useNavigation();\n  const { screenWidth, isCollapsed } = useContext(AuthContext);\n  const [state, handleFormspreeSubmit] = useForm(\"mkgobpro\");\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [successMessage, setSuccessMessage] = useState('');\n  \n  // Validation error states\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [messageError, setMessageError] = useState('');\n\n  // Calculate responsive widths\n  const isMobile = screenWidth < 900;\n  const contentWidth = isMobile ? '90%' : '600px';\n  const maxContentWidth = isMobile ? '100%' : '800px';\n\n  // Enhanced input handlers with real-time sanitization\n  const handleNameChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'name');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 30 && text.length > 3) {\n      debugLog('MBA1234: Potentially malicious name input detected in ContactUs:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setName(sanitizedText);\n    setNameError('');\n    setSuccessMessage('');\n  };\n\n  const handleEmailChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'email');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 20 && text.length > 5) {\n      debugLog('MBA1234: Potentially malicious email input detected in ContactUs:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setEmail(sanitizedText);\n    setEmailError('');\n    setSuccessMessage('');\n  };\n\n  const handleMessageChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'message', { maxLength: 2000 });\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 30 && text.length > 10) {\n      debugLog('MBA1234: Potentially malicious message input detected in ContactUs:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setMessage(sanitizedText);\n    setMessageError('');\n    setSuccessMessage('');\n  };\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate name\n    const nameValidation = validateName(name);\n    setNameError(nameValidation.message);\n    if (!nameValidation.isValid) isValid = false;\n    \n    // Validate email\n    const emailValidation = validateEmail(email);\n    setEmailError(emailValidation.message);\n    if (!emailValidation.isValid) isValid = false;\n    \n    // Validate message\n    const messageValidation = validateMessage(message, { \n      maxLength: 2000, \n      minLength: 10,\n      allowEmpty: false \n    });\n    setMessageError(messageValidation.message);\n    if (!messageValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  const handleSubmit = async () => {\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setIsSubmitting(true);\n    setSuccessMessage('');\n    \n    try {\n      // Sanitize all inputs before sending to backend\n      const sanitizedName = sanitizeInput(name, 'name');\n      const sanitizedEmail = sanitizeInput(email, 'email');\n      const sanitizedMessage = sanitizeInput(message, 'message', { maxLength: 2000 });\n      \n      debugLog('MBA1234: Contact form submission with sanitized inputs', {\n        originalName: name,\n        sanitizedName,\n        originalEmail: email,\n        sanitizedEmail,\n        originalMessage: message,\n        sanitizedMessage\n      });\n      \n      const response = await axios.post(`${API_BASE_URL}/api/users/v1/contact/`, {\n        name: sanitizedName,\n        email: sanitizedEmail,\n        message: sanitizedMessage\n      });\n\n      if (response.status === 200) {\n        setSuccessMessage('Your message has been sent successfully!');\n        setName('');\n        setEmail('');\n        setMessage('');\n        setNameError('');\n        setEmailError('');\n        setMessageError('');\n      } else {\n        throw new Error('Failed to send message');\n      }\n    } catch (error) {\n      debugLog('MBA1234: Error sending contact form:', error);\n      \n      let errorMessage = 'Failed to send message. Please try again later.';\n      if (error.response && error.response.data && error.response.data.error) {\n        errorMessage = error.response.data.error;\n      }\n      \n      setSuccessMessage(errorMessage);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // Show success message from either Formspree or backend\n  if (state.succeeded) {\n    return (\n      <CrossPlatformView \n        fullWidthHeader={false} \n        contentWidth={maxContentWidth}\n        style={!isMobile && Platform.OS === 'web' ? {\n          marginLeft: isCollapsed ? '70px' : '250px',\n          width: `calc(100% - ${isCollapsed ? '70px' : '250px'})`,\n          transition: 'margin-left 0.3s ease, width 0.3s ease'\n        } : {}}\n      >\n        <View style={styles.container}>\n          <View style={[styles.contentWrapper, { width: contentWidth }]}>\n            <Text style={[styles.title, { color: theme.colors.primary }]}>\n              Thanks for reaching out!\n            </Text>\n            <Text style={styles.successMessage}>\n              We'll get back to you soon.\n            </Text>\n          </View>\n        </View>\n      </CrossPlatformView>\n    );\n  }\n\n  return (\n    <CrossPlatformView \n      fullWidthHeader={false}\n      contentWidth={maxContentWidth}\n      style={!isMobile && Platform.OS === 'web' ? {\n        marginLeft: isCollapsed ? '70px' : '250px',\n        width: `calc(100% - ${isCollapsed ? '70px' : '250px'})`,\n        transition: 'margin-left 0.3s ease, width 0.3s ease'\n      } : {}}\n    >\n      <View style={styles.container}>\n        <View style={[styles.contentWrapper, { width: contentWidth }]}>\n          <Text style={styles.title}>Contact Us</Text>\n          <Text style={styles.subtitle}>Get in touch with our support team</Text>\n          \n          <TextInput\n            style={[styles.input, nameError ? styles.errorInput : null]}\n            placeholder=\"Your Name\"\n            value={name}\n            onChangeText={handleNameChange}\n            name=\"name\"\n          />\n          {nameError ? <Text style={styles.errorText}>{nameError}</Text> : null}\n          \n          <TextInput\n            style={[styles.input, emailError ? styles.errorInput : null]}\n            placeholder=\"Your Email\"\n            value={email}\n            onChangeText={handleEmailChange}\n            keyboardType=\"email-address\"\n            name=\"email\"\n            autoCapitalize=\"none\"\n          />\n          {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n          \n          <TextInput\n            style={[styles.input, styles.messageInput, messageError ? styles.errorInput : null]}\n            placeholder=\"Your Message (minimum 10 characters)\"\n            value={message}\n            onChangeText={handleMessageChange}\n            multiline\n            name=\"message\"\n          />\n          {messageError ? <Text style={styles.errorText}>{messageError}</Text> : null}\n          \n          {successMessage ? (\n            <Text style={[styles.successMessage, successMessage.includes('Failed') && styles.errorMessage]}>\n              {successMessage}\n            </Text>\n          ) : null}\n          \n          <TouchableOpacity\n            style={[styles.submitButton, isSubmitting && styles.disabledButton]}\n            onPress={handleSubmit}\n            disabled={isSubmitting}\n          >\n            <Text style={styles.submitButtonText}>\n              {isSubmitting ? 'Sending...' : 'Send Message'}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n    minHeight: '80vh',\n  },\n  contentWrapper: {\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    maxWidth: '100%',\n  },\n  title: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 15,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  messageInput: {\n    height: 120,\n    textAlignVertical: 'top',\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 10,\n  },\n  buttonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  successMessage: {\n    color: theme.colors.success,\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    width: '100%',\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  errorInput: {\n    borderColor: theme.colors.error,\n    borderWidth: 1,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 10,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 10,\n  },\n  submitButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorMessage: {\n    color: theme.colors.error,\n  },\n});\n\nexport default ContactUs;\n","import React, { useState, useRef, useEffect, forwardRef, memo } from 'react';\nimport { View, TextInput, StyleSheet, Platform } from 'react-native';\nimport { IconButton, useTheme } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nconst SearchBar = forwardRef(({ placeholder, onChangeText, initialValue = '', style }, ref) => {\n  const { colors } = useTheme();\n  const [value, setValue] = useState(initialValue);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (initialValue !== value) {\n      setValue(initialValue);\n    }\n  }, [initialValue]);\n\n  const handleChangeText = (text) => {\n    if (text !== value) {\n      setValue(text);\n      onChangeText(text);\n    }\n  };\n\n  return (\n    <View style={[styles.container, style, { backgroundColor: colors.surface }]}>\n      <IconButton\n        icon={() => <MaterialIcons name=\"search\" size={24} color={colors.primary} />}\n        onPress={() => inputRef.current?.focus()}\n      />\n      <TextInput\n        ref={inputRef}\n        style={[styles.input, { color: colors.text }]}\n        placeholder={placeholder}\n        placeholderTextColor={colors.placeholder}\n        value={value}\n        onChangeText={handleChangeText}\n        autoFocus={true}\n        keyboardType=\"default\"\n        returnKeyType=\"search\"\n        blurOnSubmit={false}\n      />\n    </View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderRadius: 25, // Make it circular\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  input: {\n    flex: 1,\n    fontSize: 16,\n    paddingVertical: 8,\n    paddingRight: 8,\n  },\n});\n\nexport default memo(SearchBar);\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { View, StyleSheet, FlatList, TouchableOpacity, Platform, SafeAreaView, StatusBar, TouchableWithoutFeedback } from 'react-native';\nimport { Chip, Card, Title, Paragraph, Button, Portal, Modal, useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport SearchBar from '../components/SearchBar';\nimport { mockOwners } from '../data/mockData';\n\nconst Owners = ({ navigation }) => {\n  const { colors } = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedFilters, setSelectedFilters] = useState([]);\n  const [tempFilters, setTempFilters] = useState([]);\n  const [isFilterModalVisible, setIsFilterModalVisible] = useState(false);\n  const [owners, setOwners] = useState([]);\n\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n\n  const fetchOwners = async () => {\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setOwners(mockOwners);\n    } catch (error) {\n      console.error('Error fetching owners:', error);\n    }\n  };\n\n  const filters = [\n    { label: 'Dog Sitting', value: 'Dog' },\n    { label: 'Cat Sitting', value: 'Cat' },\n    { label: 'Exotic Sitting', value: 'Exotic' },\n    { label: 'Last Week', value: 'week' },\n    { label: 'Last Month', value: 'month' },\n    { label: 'Last Year', value: 'year' },\n  ];\n\n  const toggleFilter = useCallback((filter) => {\n    setTempFilters(prevFilters =>\n      prevFilters.includes(filter)\n        ? prevFilters.filter(f => f !== filter)\n        : [...prevFilters, filter]\n    );\n  }, []);\n\n  const applyFilters = useCallback(() => {\n    setSelectedFilters(tempFilters);\n    setIsFilterModalVisible(false);\n  }, [tempFilters]);\n\n  const filteredOwners = useMemo(() => {\n    return owners.filter(owner => {\n      const matchesSearch = owner.name.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesFilters = selectedFilters.length === 0 || selectedFilters.every(filter => {\n        if (['Dog', 'Cat', 'Exotic'].includes(filter)) {\n          return owner.pet_types.includes(filter);\n        }\n        const lastBookingDate = new Date(owner.last_booking);\n        const currentDate = new Date();\n        switch (filter) {\n          case 'week':\n            const weekAgo = new Date();\n            weekAgo.setDate(currentDate.getDate() - 7);\n            return lastBookingDate >= weekAgo;\n          case 'month':\n            const monthAgo = new Date();\n            monthAgo.setMonth(currentDate.getMonth() - 1);\n            return lastBookingDate >= monthAgo;\n          case 'year':\n            const yearAgo = new Date();\n            yearAgo.setFullYear(currentDate.getFullYear() - 1);\n            return lastBookingDate >= yearAgo;\n          default:\n            return true;\n        }\n      });\n      return matchesSearch && matchesFilters;\n    });\n  }, [owners, searchQuery, selectedFilters]);\n\n  const renderOwner = useCallback(({ item }) => (\n    <TouchableOpacity onPress={() => navigation.navigate('OwnerHistory', { ownerId: item.id })}>\n      <Card style={styles.ownerCard}>\n        <Card.Content>\n          <Title>{item.name}</Title>\n          <Paragraph>Last booking: {item.last_booking}</Paragraph>\n          <View style={styles.petTypes}>\n            {item.pet_types.map(pet => (\n              <Chip key={pet} style={styles.petChip}>{pet}</Chip>\n            ))}\n          </View>\n        </Card.Content>\n      </Card>\n    </TouchableOpacity>\n  ), [navigation]);\n\n  const handleSearchChange = useCallback((query) => {\n    setSearchQuery(query);\n  }, []);\n\n  return Platform.OS === 'web' ? (\n    <View style={styles.container}>\n      <View style={styles.searchAndFilterContainer}>\n        <TouchableWithoutFeedback onPress={() => {}}>\n          <SearchBar\n            placeholder=\"Search owners\"\n            onChangeText={handleSearchChange}\n            initialValue={searchQuery}\n            style={styles.searchBar}\n          />\n        </TouchableWithoutFeedback>\n        <Button \n          mode=\"outlined\" \n          onPress={() => {\n            setTempFilters(selectedFilters);\n            setIsFilterModalVisible(true);\n          }}\n          style={styles.filterButton}\n        >\n          Filters\n        </Button>\n      </View>\n      {filteredOwners.length > 0 ? (\n        <FlatList\n          data={filteredOwners}\n          renderItem={renderOwner}\n          keyExtractor={item => item.id}\n          contentContainerStyle={styles.ownerList}\n          keyboardShouldPersistTaps=\"handled\"\n          removeClippedSubviews={false}\n        />\n      ) : (\n        <View style={styles.noOwnersContainer}>\n          <Paragraph>No owners match your search or filters.</Paragraph>\n        </View>\n      )}\n      <Portal>\n        <Modal visible={isFilterModalVisible} onDismiss={() => setIsFilterModalVisible(false)} contentContainerStyle={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setIsFilterModalVisible(false)} style={styles.closeIcon}>\n            <MaterialCommunityIcons name=\"close\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <Title style={styles.modalTitle}>Filters</Title>\n          <View style={styles.filtersContainer}>\n            {filters.map(filter => (\n              <Chip\n                key={filter.value}\n                style={styles.filterChip}\n                selected={tempFilters.includes(filter.value)}\n                onPress={() => toggleFilter(filter.value)}\n                icon={tempFilters.includes(filter.value) ? ({size, color}) => (\n                  <MaterialCommunityIcons name=\"check\" size={size} color={color} />\n                ) : undefined}\n              >\n                {filter.label}\n              </Chip>\n            ))}\n          </View>\n          <Button mode=\"contained\" onPress={applyFilters} style={styles.applyButton}>\n            Apply Filters\n          </Button>\n        </Modal>\n      </Portal>\n    </View>\n  ) : (\n    <SafeAreaView style={[styles.container, styles.androidSafeArea]}>\n      <View style={styles.searchAndFilterContainer}>\n        <TouchableWithoutFeedback onPress={() => {}}>\n          <SearchBar\n            placeholder=\"Search owners\"\n            onChangeText={handleSearchChange}\n            initialValue={searchQuery}\n            style={styles.searchBar}\n          />\n        </TouchableWithoutFeedback>\n        <Button \n          mode=\"outlined\" \n          onPress={() => {\n            setTempFilters(selectedFilters);\n            setIsFilterModalVisible(true);\n          }}\n          style={styles.filterButton}\n        >\n          Filters\n        </Button>\n      </View>\n      {filteredOwners.length > 0 ? (\n        <FlatList\n          data={filteredOwners}\n          renderItem={renderOwner}\n          keyExtractor={item => item.id}\n          contentContainerStyle={styles.ownerList}\n          keyboardShouldPersistTaps=\"handled\"\n          removeClippedSubviews={false}\n        />\n      ) : (\n        <View style={styles.noOwnersContainer}>\n          <Paragraph>No owners match your search or filters.</Paragraph>\n        </View>\n      )}\n      <Portal>\n        <Modal visible={isFilterModalVisible} onDismiss={() => setIsFilterModalVisible(false)} contentContainerStyle={styles.modalContainer}>\n          <TouchableOpacity onPress={() => setIsFilterModalVisible(false)} style={styles.closeIcon}>\n            <MaterialCommunityIcons name=\"close\" size={24} color=\"black\" />\n          </TouchableOpacity>\n          <Title style={styles.modalTitle}>Filters</Title>\n          <View style={styles.filtersContainer}>\n            {filters.map(filter => (\n              <Chip\n                key={filter.value}\n                style={styles.filterChip}\n                selected={tempFilters.includes(filter.value)}\n                onPress={() => toggleFilter(filter.value)}\n                icon={tempFilters.includes(filter.value) ? ({size, color}) => (\n                  <MaterialCommunityIcons name=\"check\" size={size} color={color} />\n                ) : undefined}\n              >\n                {filter.label}\n              </Chip>\n            ))}\n          </View>\n          <Button mode=\"contained\" onPress={applyFilters} style={styles.applyButton}>\n            Apply Filters\n          </Button>\n        </Modal>\n      </Portal>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n  },\n  androidSafeArea: {\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  searchAndFilterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  searchBar: {\n    flex: 1,\n    marginRight: 8,\n    marginLeft: Platform.OS === 'web' ? 0 : 8,\n  },\n  filterButton: {\n    minWidth: 80,\n    marginRight: Platform.OS === 'web' ? 0 : 8,\n  },\n  ownerList: {\n    padding: 16,\n  },\n  ownerCard: {\n    marginBottom: 16,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '100%',\n  },\n  petTypes: {\n    flexDirection: 'row',\n    marginTop: 8,\n  },\n  petChip: {\n    marginRight: 8,\n  },\n  noOwnersContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContainer: {\n    backgroundColor: 'white',\n    padding: 20,\n    margin: 20,\n    borderRadius: 5,\n    maxWidth: 600,\n    alignSelf: 'center',\n    width: '90%',\n  },\n  modalTitle: {\n    marginBottom: 10,\n  },\n  filtersContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 20,\n  },\n  filterChip: {\n    margin: 4,\n  },\n  applyButton: {\n    marginTop: 10,\n  },\n  closeButton: {\n    marginTop: 10,\n    alignSelf: 'flex-end',\n  },\n  closeIcon: {\n    position: 'absolute',\n    top: 10,\n    right: 10,\n    zIndex: 1,\n  },\n});\n\nexport default Owners;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Modal,\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  ScrollView,\n  Switch,\n} from 'react-native';\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from './DatePicker';\nimport { theme } from '../styles/theme';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nexport const CostCalculationModal = ({\n  visible,\n  onClose,\n  serviceName,\n  additionalRates = [],\n  professionalName = \"Professional\",\n  onContactPress,\n}) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [additionalAnimals, setAdditionalAnimals] = useState(0);\n  const [isHolidayRate, setIsHolidayRate] = useState(false);\n  const [selectedRates, setSelectedRates] = useState({});\n  const [totalCost, setTotalCost] = useState(0);\n  const [platformFees, setPlatformFees] = useState(0);\n\n  const BASE_RATE = 20;\n  const ADDITIONAL_ANIMAL_RATE = 10;\n  const HOLIDAY_RATE = 40;\n  const PLATFORM_FEE_PERCENTAGE = 0.10;\n\n  const calculateTotalCost = () => {\n    // Start with either holiday rate or base rate\n    let subtotal = isHolidayRate ? HOLIDAY_RATE : BASE_RATE;\n    \n    // Add additional animal costs\n    subtotal += additionalAnimals * ADDITIONAL_ANIMAL_RATE;\n    \n    // Add any selected additional rates\n    Object.entries(selectedRates).forEach(([_, rate]) => {\n      if (rate.selected) {\n        subtotal += rate.amount;\n      }\n    });\n\n    setTotalCost(subtotal);\n    setPlatformFees(subtotal * PLATFORM_FEE_PERCENTAGE);\n  };\n\n  useEffect(() => {\n    // Initialize selectedRates object\n    const ratesObj = {};\n    additionalRates.forEach(rate => {\n      ratesObj[rate.title] = { ...rate, selected: false };\n    });\n    setSelectedRates(ratesObj);\n  }, [additionalRates]);\n\n  useEffect(() => {\n    calculateTotalCost();\n  }, [additionalAnimals, isHolidayRate, selectedRates]);\n\n  return (\n    <Modal\n      visible={visible}\n      animationType=\"slide\"\n      transparent={true}\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalContainer}>\n        <View style={styles.modalContent}>\n          <TouchableOpacity \n            style={styles.closeIcon} \n            onPress={onClose}\n          >\n            <MaterialIcons name=\"close\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n\n          <Text style={styles.modalTitle}>{serviceName}</Text>\n          \n          <ScrollView \n            style={styles.scrollContent} \n            showsVerticalScrollIndicator={true}\n            persistentScrollbar={true}\n          >\n            {/* Date Selection\n            <View style={styles.dateSection}>\n              <View style={styles.dateColumn}>\n                <Text style={styles.dateLabel}>Start Date:</Text>\n                <DatePicker\n                  value={startDate}\n                  mode=\"date\"\n                  onChange={(event, date) => {\n                    if (date) setStartDate(date);\n                  }}\n                />\n              </View>\n              \n              <View style={styles.dateColumn}>\n                <Text style={styles.dateLabel}>End Date:</Text>\n                <DatePicker\n                  value={endDate}\n                  mode=\"date\"\n                  onChange={(event, date) => {\n                    if (date) setEndDate(date);\n                  }}\n                />\n              </View>\n            </View> */}\n\n            {/* Base Rate */}\n            <View style={styles.rateItem}>\n              <Text>Base Rate</Text>\n              <Text>${BASE_RATE}</Text>\n            </View>\n\n            {/* Additional Animals */}\n            <View style={styles.rateItem}>\n              <Text>Additional Animals (${ADDITIONAL_ANIMAL_RATE} each)</Text>\n              <View style={styles.counterContainer}>\n                <TouchableOpacity \n                  onPress={() => setAdditionalAnimals(Math.max(0, additionalAnimals - 1))}\n                  style={styles.counterButton}\n                >\n                  <MaterialIcons name=\"remove\" size={24} color={theme.colors.primary} />\n                </TouchableOpacity>\n                <Text style={styles.counterText}>{additionalAnimals}</Text>\n                <TouchableOpacity \n                  onPress={() => setAdditionalAnimals(additionalAnimals + 1)}\n                  style={styles.counterButton}\n                >\n                  <MaterialIcons name=\"add\" size={24} color={theme.colors.primary} />\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* Holiday Rate */}\n            <View style={styles.rateItem}>\n              <Text>Holiday Rate (${HOLIDAY_RATE})</Text>\n              <Switch\n                value={isHolidayRate}\n                onValueChange={setIsHolidayRate}\n                trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n              />\n            </View>\n\n            {/* Additional Rates */}\n            {Object.entries(selectedRates).map(([title, rate]) => (\n              <View key={title} style={styles.rateItem}>\n                <Text>{title} (${rate.amount})</Text>\n                <Switch\n                  value={rate.selected}\n                  onValueChange={(value) => {\n                    setSelectedRates({\n                      ...selectedRates,\n                      [title]: { ...rate, selected: value },\n                    });\n                  }}\n                  trackColor={{ false: \"#767577\", true: theme.colors.primary }}\n                />\n              </View>\n            ))}\n\n            {/* Total and Fees */}\n            <View style={styles.totalSection}>\n              <View style={styles.totalItem}>\n                <Text style={styles.totalLabel}>Subtotal:</Text>\n                <Text style={styles.totalAmount}>${totalCost}</Text>\n              </View>\n              <View style={styles.totalItem}>\n                <Text style={styles.totalLabel}>Service Fees (10%):</Text>\n                <Text style={styles.totalAmount}>${platformFees.toFixed(2)}</Text>\n              </View>\n              <View style={[styles.totalItem, styles.finalTotal]}>\n                <Text style={[styles.totalLabel, styles.finalTotalText]}>Total Cost:</Text>\n                <Text style={[styles.totalAmount, styles.finalTotalText]}>${(totalCost + platformFees).toFixed(2)}</Text>\n              </View>\n            </View>\n          </ScrollView>\n\n          <TouchableOpacity \n            style={styles.contactButton} \n            onPress={onContactPress}\n          >\n            <Text style={styles.contactButtonText}>Contact {professionalName}</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 20,\n    paddingRight: 15,\n    width: '90%',\n    maxHeight: '43%',\n    maxWidth: 400,\n  },\n  scrollContent: {\n    flexGrow: 0,\n    marginBottom: 10,\n    paddingRight: 12,\n    marginRight: -7,\n  },\n  modalTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center',\n    marginTop: 5,\n    paddingHorizontal: 30,\n  },\n  dateSection: {\n    marginBottom: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 16,\n  },\n  dateColumn: {\n    flex: 1,\n  },\n  dateLabel: {\n    marginBottom: 8,\n    fontSize: theme.fontSizes.smallMedium,\n    color: theme.colors.text,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n  },\n  counterContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  counterButton: {\n    padding: 5,\n  },\n  counterText: {\n    marginHorizontal: 10,\n    fontSize: theme.fontSizes.medium,\n  },\n  totalSection: {\n    marginTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 15,\n  },\n  totalItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 10,\n  },\n  finalTotal: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 10,\n    marginTop: 5,\n  },\n  totalLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n  totalAmount: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n  },\n  finalTotalText: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  closeButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  closeButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n  closeIcon: {\n    position: 'absolute',\n    right: 15,\n    top: 15,\n    zIndex: 1,\n    padding: 5,\n  },\n  contactButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  contactButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { CostCalculationModal } from './CostCalculationModal';\nimport { mockConversations, mockMessages, createNewConversation } from '../data/mockData';\n\nexport const ServiceCard = ({ \n  service, \n  onHeartPress, \n  isFavorite, \n  professionalName,\n  professionalId,\n  navigation\n}) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const handleContactPress = () => {\n    // Check if conversation already exists\n    const existingConversation = mockConversations.find(\n      conv => conv.professionalId === professionalId\n    );\n\n    if (existingConversation) {\n      navigation.replace('MessageHistory', {\n        selectedConversation: existingConversation.id,\n        professionalName: professionalName,\n        professionalId: professionalId\n      });\n    } else {\n      // Create new conversation using the helper function\n      const newConversation = createNewConversation(\n        professionalId,\n        professionalName,\n        'current_user_id', // Replace with actual current user ID\n        'Me' // Current user name\n      );\n\n      // Add new conversation to mockConversations\n      mockConversations.unshift(newConversation);\n\n      // Initialize empty messages array for this conversation\n      mockMessages[newConversation.id] = [];\n\n      // Navigate directly to MessageHistory\n      navigation.replace('MessageHistory', {\n        selectedConversation: newConversation.id,\n        professionalName: professionalName,\n        professionalId: professionalId\n      });\n    }\n    setIsModalVisible(false);\n  };\n\n  return (\n    <View style={styles.serviceCard}>\n      {/* <TouchableOpacity \n        style={styles.heartButton}\n        onPress={() => onHeartPress(service.id)}\n      >\n        <MaterialIcons \n          name={isFavorite ? \"favorite\" : \"favorite-border\"} \n          size={24} \n          color={theme.colors.primary} \n        />\n      </TouchableOpacity> */}\n      \n      <View style={styles.contentContainer}>\n        <MaterialCommunityIcons name={service.icon} size={30} color={theme.colors.primary} />\n        <Text numberOfLines={2} style={styles.serviceName}>{service.name}</Text>\n        <Text style={styles.startingPrice}>Starting at ${service.startingPrice}</Text>\n        <View style={styles.animalTypeContainer}>\n          {service.animalTypes.map((type, index) => (\n            <Text key={index} style={styles.animalType}>{type}</Text>\n          ))}\n        </View>\n      </View>\n\n      <TouchableOpacity \n        style={styles.calculateButton}\n        onPress={() => setIsModalVisible(true)}\n      >\n        <Text style={styles.calculateButtonText}>Calculate Cost</Text>\n      </TouchableOpacity>\n\n      <CostCalculationModal\n        visible={isModalVisible}\n        onClose={() => setIsModalVisible(false)}\n        serviceName={service.name}\n        additionalRates={service.additionalRates || []}\n        professionalName={professionalName}\n        professionalId={professionalId}\n        onContactPress={handleContactPress}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  serviceCard: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 12,\n    marginRight: 12,\n    width: 280,\n    height: 220,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    position: 'relative',\n    justifyContent: 'space-between',\n  },\n  heartButton: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n    zIndex: 1,\n  },\n  serviceName: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: '600',\n    marginTop: 8,\n    marginBottom: 6,\n    fontFamily: theme.fonts.header.fontFamily,\n    flexShrink: 1,\n  },\n  startingPrice: {\n    fontSize: theme.fontSizes.medium + 2,\n    color: theme.colors.secondary,\n    marginBottom: 6,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  animalTypeContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 4,\n    marginBottom: 8,\n  },\n  animalType: {\n    fontSize: theme.fontSizes.small + 2,\n    color: theme.colors.secondary,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calculateButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 'auto',\n  },\n  calculateButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  contentContainer: {\n    flex: 1,\n  },\n});\n\nexport default ServiceCard;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity, Platform, useWindowDimensions, Modal } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { Calendar } from 'react-native-calendars';\nimport { mockPets } from '../data/mockData';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { SCREEN_WIDTH } from '../context/AuthContext';\nimport ServiceCard from '../components/ServiceCard';\nimport { mockServicesForCards } from '../data/mockData';\nimport { mockConversations, mockMessages } from '../data/mockData';\nimport platformNavigation from '../utils/platformNavigation';\n// Conditionally import WebMap component\nconst WebMap = Platform.OS === 'web' ? require('react-leaflet').MapContainer : null;\n\n// Mock API function to fetch profile data\nconst fetchProfileData = () => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve({\n        // profilePhoto: 'https://example.com/profile-photo.jpg',\n        bio: \"Hi! I'm an experienced pet professional who loves all animals. I have 5 years of experience caring for dogs, cats, and exotic pets.\",\n        petPhotos: [\n          // 'https://example.com/pet-photo-1.jpg',\n          // 'https://example.com/pet-photo-2.jpg',\n        ],\n        services: ['Dog Boarding', 'Dog Walking', 'Drop-In Visits', 'House Sitting'],\n        rates: {\n          boarding: '35',\n          daycare: '25',\n          houseSitting: '40',\n          dropInVisits: '20',\n          dogWalking: '15'\n        },\n        name: 'John Doe',\n        location: 'New York, NY'\n      });\n    }, 1000);\n  });\n};\n\nconst mockReviews = [\n  {\n    id: 1,\n    name: 'Noah M.',\n    service: 'Fish Tank Cleaning',\n    date: 'Dec 02, 2024',\n    rating: 5,\n    text: 'Dina was fantastic with our dog! Sent lots of photos and clearly made sure she was comfortable. Will definitely use again!',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 2,\n    name: 'Kaily J.',\n    service: 'Ferrier',\n    date: 'Nov 26, 2024',\n    rating: 4,\n    text: 'Dina always takes such good care of Elijah. He was having tummy problems today and she kept me updated all day on how he was doing.',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 3,\n    name: 'Nadia U.',\n    service: 'Reptile Boarding & Habitat Maintenance',\n    date: 'Nov 19, 2024',\n    rating: 5,\n    text: 'She took such great care of our puppy! Sent pictures and videos the whole time, her backyard was super nice and clean ❤️ my puppy was definitely in great hands! Bonus her dogs were so sweet with our puppy.',\n    photo: 'https://via.placeholder.com/50'\n  },\n  {\n    id: 4,\n    name: 'Vanessa G.',\n    service: 'Bird Feeding',\n    date: 'Nov 19, 2024',\n    rating: 5,\n    text: 'Dina was great! She communicated through the whole stay and sent plenty of videos and photos. 10/10',\n    photo: 'https://via.placeholder.com/50'\n  }\n];\n\nconst useResponsiveLayout = () => {\n  const { width } = useWindowDimensions();\n  const [isWideScreen, setIsWideScreen] = useState(true);\n\n  useEffect(() => {\n    setIsWideScreen(Platform.OS === 'web' && width >= 900);\n  }, [width]);\n\n  return isWideScreen;\n};\n\n// Move this outside the component and add platform safety\nif (Platform.OS === 'web' && typeof document !== 'undefined') {\n  try {\n    const style = document.createElement('style');\n    style.textContent = `\n      .services-scroll::-webkit-scrollbar {\n        -webkit-appearance: none;\n      }\n\n      .services-scroll::-webkit-scrollbar:vertical {\n        width: 11px;\n      }\n\n      .services-scroll::-webkit-scrollbar:horizontal {\n        height: 11px;\n      }\n\n      .services-scroll::-webkit-scrollbar-thumb {\n        border-radius: 8px;\n        border: 2px solid white;\n        background-color: rgba(0, 0, 0, .5);\n      }\n    `;\n    if (document.head) {\n      document.head.appendChild(style);\n    }\n  } catch (error) {\n    console.warn('MBA5511: Could not inject CSS styles:', error);\n  }\n}\n\n// Platform-aware storage helpers\nconst platformStorage = {\n  setItem: async (key, value) => {\n    try {\n      if (Platform.OS === 'web' && typeof sessionStorage !== 'undefined') {\n        sessionStorage.setItem(key, value);\n      } else {\n        await AsyncStorage.setItem(key, value);\n      }\n    } catch (error) {\n      console.warn('MBA5511: Storage setItem failed:', error);\n    }\n  },\n  \n  getItem: async (key) => {\n    try {\n      if (Platform.OS === 'web' && typeof sessionStorage !== 'undefined') {\n        return sessionStorage.getItem(key);\n      } else {\n        return await AsyncStorage.getItem(key);\n      }\n    } catch (error) {\n      console.warn('MBA5511: Storage getItem failed:', error);\n      return null;\n    }\n  },\n  \n  removeItem: async (key) => {\n    try {\n      if (Platform.OS === 'web' && typeof sessionStorage !== 'undefined') {\n        sessionStorage.removeItem(key);\n      } else {\n        await AsyncStorage.removeItem(key);\n      }\n    } catch (error) {\n      console.warn('MBA5511: Storage removeItem failed:', error);\n    }\n  }\n};\n\nconst ProfessionalProfile = ({ route, navigation }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, is_DEBUG } = useContext(AuthContext);\n  const [professionalData, setProfessionalData] = useState(null);\n  const [canGoBack, setCanGoBack] = useState(false);\n  const [bioModalVisible, setBioModalVisible] = useState(false);\n  const [reviewsModalVisible, setReviewsModalVisible] = useState(false);\n  const [specialistModalVisible, setSpecialistModalVisible] = useState(false);\n  const [favoriteServices, setFavoriteServices] = useState([]);\n  const [servicesModalVisible, setServicesModalVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const isWideScreen = useResponsiveLayout();\n\n  // Calculate marginLeft to account for sidebar on desktop\n  const marginLeft = screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0;\n\n  // Debug component lifecycle\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA9999: ProfessionalProfile component mounted');\n    }\n    return () => {\n      if (is_DEBUG) {\n        console.log('MBA9999: ProfessionalProfile component unmounting');\n      }\n    };\n  }, []);\n\n  // Debug professional data changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA9999: Professional data changed:', professionalData ? professionalData.name : 'null');\n    }\n  }, [professionalData]);\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(screenWidth <= 900);\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    // Check if we can go back and if SearchProfessionalsListing exists in history\n    const state = navigation.getState();\n    const hasHistory = state.routes.some(route => route.name === 'SearchProfessionalsListing');\n    setCanGoBack(navigation.canGoBack() && hasHistory);\n  }, [navigation]);\n\n  const handleBack = async () => {\n    if (is_DEBUG) {\n      console.log('MBA9999: handleBack called, Platform:', Platform.OS);\n    }\n    \n    // Remove stored professional data\n    await platformStorage.removeItem('currentProfessional');\n    \n    if (is_DEBUG) {\n      console.log('MBA9999: Navigating back to SearchProfessionalsListing');\n    }\n    \n    // Use navigation.navigate for consistent behavior across platforms\n    navigation.navigate('SearchProfessionalsListing');\n  };\n\n  // Handle browser back button - REMOVED due to causing navigation issues\n  // The browser's native back button will work with React Navigation\n  // useEffect(() => {\n  //   if (Platform.OS === 'web') {\n  //     // Popstate handling removed - was causing automatic navigation\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    const loadProfessionalData = async () => {\n      if (is_DEBUG) {\n        console.log('MBA9999: loadProfessionalData called', {\n          hasRouteParams: !!route?.params?.professional,\n          platform: Platform.OS\n        });\n      }\n      \n      if (route?.params?.professional) {\n        if (is_DEBUG) {\n          console.log('MBA9999: Setting professional data from route params:', route.params.professional.name);\n        }\n        setProfessionalData(route.params.professional);\n        // Store in platform-appropriate storage for persistence\n        await platformStorage.setItem('currentProfessional', JSON.stringify(route.params.professional));\n      } else {\n        // Try to get professional data from storage\n        const storedProfessional = await platformStorage.getItem('currentProfessional');\n        if (is_DEBUG) {\n          console.log('MBA9999: Checking storage for professional data:', !!storedProfessional);\n        }\n        \n        if (storedProfessional) {\n          try {\n            const parsedProfessional = JSON.parse(storedProfessional);\n            if (is_DEBUG) {\n              console.log('MBA9999: Setting professional data from storage:', parsedProfessional.name);\n            }\n            setProfessionalData(parsedProfessional);\n          } catch (error) {\n            console.error('MBA9999: Error parsing stored professional data:', error);\n            // Only redirect if we can't parse the data\n            navigation.replace('SearchProfessionalsListing');\n          }\n        } else {\n          if (is_DEBUG) {\n            console.log('MBA9999: No professional data found, redirecting to search');\n          }\n          // If no data, redirect back to search\n          navigation.replace('SearchProfessionalsListing');\n        }\n      }\n    };\n\n    loadProfessionalData();\n  }, [route?.params?.professional, navigation, is_DEBUG]);\n\n  const getContentWidth = () => {\n    if (Platform.OS === 'web') {\n      // Account for sidebar width on desktop\n      const availableWidth = screenWidth > 900 \n        ? windowWidth - (isCollapsed ? 70 : 250) \n        : windowWidth;\n      return Math.min(1000, availableWidth - 32); // 32px for padding\n    }\n    return windowWidth - 32; // 16px padding on each side\n  };\n\n  const toggleFavorite = (serviceId) => {\n    setFavoriteServices(prev => \n      prev.includes(serviceId) \n        ? prev.filter(id => id !== serviceId)\n        : [...prev, serviceId]\n    );\n  };\n\n  const renderServices = () => (\n    <View style={styles.servicesSection}>\n      <View style={styles.sectionHeader}>\n        <Text style={styles.sectionTitle}>Services</Text>\n        <TouchableOpacity \n          style={styles.seeAllButton}\n          onPress={() => setServicesModalVisible(true)}\n        >\n          <Text style={styles.seeAllButtonText}>See All</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={styles.servicesWrapper}>\n        <ScrollView \n          horizontal\n          showsHorizontalScrollIndicator={true}\n          style={[\n            styles.servicesScroll,\n            Platform.OS === 'web' && { \n              className: 'services-scroll',\n              overflowX: 'scroll'\n            }\n          ]}\n          contentContainerStyle={styles.servicesScrollContent}\n          persistentScrollbar={true}\n        >\n          {mockServicesForCards.slice(0, 5).map(service => (\n            <ServiceCard \n              key={service.id}\n              service={service}\n              onHeartPress={toggleFavorite}\n              isFavorite={favoriteServices.includes(service.id)}\n              professionalName={professionalData.name}\n              professionalId={professionalData.id}\n              navigation={navigation}\n            />\n          ))}\n        </ScrollView>\n      </View>\n    </View>\n  );\n\n  if (!professionalData) {\n    return (\n      <CrossPlatformView fullWidthHeader={true}>\n        <BackHeader \n          title=\"Professional Profile\" \n          onBackPress={handleBack}\n        />\n        <View style={styles.centered}>\n          <Text>Loading...</Text>\n        </View>\n      </CrossPlatformView>\n    );\n  }\n\n  const renderProfilePhoto = () => {\n    if (professionalData.profilePicture) {\n      return <Image source={{ uri: professionalData.profilePicture }} style={styles.profilePhoto} />;\n    }\n    return (\n      <View style={[styles.profilePhoto, styles.profilePhotoPlaceholder]}>\n        <MaterialCommunityIcons name=\"account\" size={80} color={theme.colors.primary} />\n      </View>\n    );\n  };\n\n  const renderSpecialistExperience = () => (\n    <View style={styles.specialistSection}>\n      <Text style={styles.sectionTitle}>Specialist Experience</Text>\n      <TruncatedText text={professionalData?.bio || ''} />\n    </View>\n  );\n\n  const renderRatingStars = () => (\n    <View style={styles.ratingContainer}>\n      <MaterialCommunityIcons name=\"star\" size={24} color={theme.colors.primary} />\n      <Text style={styles.rating}>{professionalData.reviews}</Text>\n      <Text style={[styles.reviewCount, { marginLeft: 12 }]}>({professionalData.reviewCount || 50} reviews)</Text>\n    </View>\n  );\n\n  // Add new component for truncated text with Read More\n  const TruncatedText = ({ text, maxLines = 3 }) => (\n    <View>\n      <Text \n        numberOfLines={maxLines} \n        style={styles.specialistText}\n      >\n        {text}\n      </Text>\n      <TouchableOpacity \n        style={styles.readMoreButton}\n        onPress={() => setSpecialistModalVisible(true)}\n      >\n        <Text style={styles.readMoreText}>Read more</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderMap = () => {\n    if (Platform.OS === 'web' && WebMap) {\n      const { MapContainer, TileLayer, Marker } = require('react-leaflet');\n      return (\n        <View style={styles.mapContainer}>\n          <MapContainer\n            center={[38.8339, -104.8214]} // Default coordinates\n            zoom={13}\n            style={{ height: 400, width: '100%' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n            <Marker position={[38.8339, -104.8214]} />\n          </MapContainer>\n        </View>\n      );\n    }\n    // For mobile, return null or a placeholder\n    return null;\n  };\n\n  const renderPets = () => {\n    if (!mockPets || mockPets.length === 0) return null;\n    \n    return (\n      <View style={styles.petsSection}>\n        <Text style={styles.sectionTitle}>Pets</Text>\n        {mockPets.map((pet, index) => (\n          <View key={pet.id} style={styles.petItem}>\n            <View style={styles.petPhoto}>\n              <MaterialCommunityIcons \n                name={pet.animal_type.toLowerCase() === 'dog' ? 'dog' : \n                      pet.animal_type.toLowerCase() === 'cat' ? 'cat' : 'snake'} \n                size={30} \n                color={theme.colors.primary} \n              />\n            </View>\n            <View style={styles.petInfo}>\n              <Text style={styles.petName}>{pet.name}</Text>\n              <Text style={styles.petBreed}>{pet.breed}</Text>\n              <Text style={styles.petDetails}>\n                {`${pet.weight} lbs, ${pet.age.years} years${pet.age.months ? ` ${pet.age.months} months` : ''}`}\n              </Text>\n            </View>\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const styles2 = StyleSheet.create({\n    modalContent: {\n      backgroundColor: theme.colors.background,\n      padding: 24,\n      borderRadius: 12,\n      width: Platform.OS === 'web' ? \n        (screenWidth <= 650 ? '90%' : '60%') : \n        '90%',\n      maxWidth: 800,\n      maxHeight: '90%',\n    },\n  });\n\n  // Create services array from professionalData\n  const services = [\n    { name: 'Boarding', price: \"25\" },\n    { name: 'Doggy Day Care', price: \"30\" },\n    { name: 'House Sitting', price: \"40\" },\n    { name: 'Drop-In Visits', price: \"35\" },\n    { name: 'Dog Walking', price: \"45\" }\n  ];\n\n  const HomeFeature = ({ text }) => (\n    <View style={styles.featureBubble}>\n      <Text style={styles.featureText}>{text}</Text>\n    </View>\n  );\n\n  const renderReviews = () => (\n    <View style={styles.reviewsSection}>\n      <Text style={styles.sectionTitle}>Reviews</Text>\n      <View style={styles.reviewsGrid}>\n        {mockReviews.slice(0, 4).map(renderReview)}\n      </View>\n      <TouchableOpacity \n        style={styles.readMoreButton}\n        onPress={() => setReviewsModalVisible(true)}\n      >\n        <Text style={styles.readMoreText}>Read more reviews</Text>\n      </TouchableOpacity>\n    </View>\n  );\n\n  const renderReview = (review) => (\n    <View key={review.id} style={styles.reviewItem}>\n      <View style={styles.reviewHeader}>\n        <Image source={{ uri: review.photo }} style={styles.reviewerPhoto} />\n        <View style={styles.reviewerInfo}>\n          <Text style={styles.reviewerName}>{review.name}</Text>\n          <View style={styles.reviewMeta}>\n            <View style={styles.starContainer}>\n              {[...Array(5)].map((_, index) => (\n                <MaterialCommunityIcons\n                  key={index}\n                  name={index < review.rating ? \"star\" : \"star-outline\"}\n                  size={16}\n                  color={theme.colors.primary}\n                />\n              ))}\n            </View>\n            <View style={styles.serviceInfo}>\n              <MaterialCommunityIcons name=\"home\" size={16} color={theme.colors.secondary} />\n              <Text style={styles.serviceText}>{review.service} • {review.date}</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n      <Text style={styles.reviewText}>{review.text}</Text>\n    </View>\n  );\n\n  const renderHomeSection = () => (\n    <View style={styles.homeSection}>\n      <Text style={styles.sectionTitle}>Home</Text>\n      <View style={styles.homeFeaturesGrid}>\n        <HomeFeature text=\"No children present\" />\n        <HomeFeature text=\"Has security system\" />\n        <HomeFeature text=\"Non-smoking household\" />\n        <HomeFeature text=\"Has 2 dogs\" />\n        <HomeFeature text=\"Dogs allowed on bed\" />\n        <HomeFeature text=\"Dogs allowed on furniture\" />\n        <HomeFeature text=\"Potty breaks every 0-2 hours\" />\n      </View>\n    </View>\n\n  );\n\n  const renderAboutSection = () => (\n    <View style={styles.aboutSection}>\n      <Text style={styles.sectionTitle}>About {professionalData.name}</Text>\n      <View style={styles.aboutSubsections}>\n        <View style={styles.communicationSection}>\n          <Text style={styles.subsectionTitle}>Communication</Text>\n          <Text>22 repeat pet parents</Text>\n          <Text>100% response rate</Text>\n          <Text>Usually responds in a few minutes</Text>\n          <Text>90% bookings with photo updates</Text>\n        </View>\n        <View style={styles.skillsSection}>\n          <Text style={styles.subsectionTitle}>Skills</Text>\n          <Text>3 years of experience</Text>\n        </View>\n      </View> \n    </View>\n  );\n\n  const renderAvailability = () => (\n    <View style={dynamicStyles.dynamicServicesBox}>\n      <View style={styles.calendarSection}>\n        <Text style={[styles.sectionTitle, { marginBottom: 0 }]}>Availability</Text>\n        <Calendar\n          style={styles.calendar}\n          theme={{\n            calendarBackground: theme.colors.surface,\n            selectedDayBackgroundColor: theme.colors.primary,\n            selectedDayTextColor: '#ffffff',\n            todayTextColor: theme.colors.primary,\n          }}\n        />\n      </View>\n    </View>\n  );\n\n  const renderGallery = () => {\n    return (\n      <View style={styles.gallerySection}>\n        <Text style={styles.sectionTitle}>53 Photos</Text>\n        <View style={styles.photoGrid}>\n          {[1, 2, 3, 4].map((_, index) => (\n            <Image \n              key={index}\n              source={{ uri: 'https://via.placeholder.com/150' }}\n              style={styles.galleryPhoto}\n                      />\n          ))}\n        </View>\n      </View>\n    );\n  };\n\n  const additionalStyles = StyleSheet.create({\n    servicesSection: {\n      marginBottom: 24,\n    },\n    sectionHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 16,\n    },\n    seeAllButton: {\n      borderWidth: 1,\n      borderColor: theme.colors.primary,\n      paddingHorizontal: 12,\n      paddingVertical: 6,\n      borderRadius: 8,\n      alignSelf: 'flex-start',\n      minWidth: 'auto',\n      width: 'auto',\n    },\n    seeAllButtonText: {\n      color: theme.colors.primary,\n      fontSize: 16,\n      fontWeight: '600',\n      textAlign: 'center',\n    },\n    servicesScroll: {\n      marginHorizontal: -24, // To counteract parent padding\n      paddingHorizontal: 24,\n    },\n    modalServicesGrid: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: 16,\n      justifyContent: 'center',\n      padding: 16,\n    },\n  });\n\n  const handleContactPress = () => {\n    // Check if conversation already exists\n    const existingConversation = mockConversations.find(\n      conv => conv.professionalId === professionalData.id\n    );\n\n    if (existingConversation) {\n      // Use replace instead of navigate to avoid navigation stack issues\n      navigation.replace('MessageHistory', {\n        selectedConversation: existingConversation.id\n      });\n    } else {\n      // Create new conversation\n      const newConversation = {\n        id: `conv_${Date.now()}`,\n        name: professionalData.name,\n        professionalId: professionalData.id,\n        lastMessage: '',\n        timestamp: new Date().toISOString(),\n        unread: false,\n        bookingStatus: null\n      };\n\n      // Add new conversation to mockConversations\n      mockConversations.unshift(newConversation);\n\n      // Initialize empty messages array for this conversation\n      mockMessages[newConversation.id] = [];\n\n      // Use replace instead of navigate\n      navigation.replace('MessageHistory', {\n        selectedConversation: newConversation.id\n      });\n    }\n  };\n\n  // Create dynamic styles that account for sidebar\n  const createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: Platform.OS === 'web' ? '100vh' : '100%',\n      overflow: 'hidden',\n      position: Platform.OS === 'web' ? 'fixed' : 'relative',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n      transition: Platform.OS === 'web' ? 'margin-left 0.3s ease' : undefined,\n    },\n    dynamicProfileSection: {\n      backgroundColor: theme.colors.surface,\n      borderRadius: 12,\n      padding: 16,\n      marginBottom: 16,\n      alignItems: 'center',\n      width: '100%',\n      display: windowWidth >= 600 ? 'flex' : 'block',\n    },\n    dynamicProfileSectionMobile: {\n      backgroundColor: theme.colors.surface,\n      borderRadius: 12,\n      padding: 16,\n      marginBottom: 16,\n      alignItems: 'center',\n      width: '100%',\n      maxWidth: 500,\n      alignSelf: 'center',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    dynamicServicesBox: {\n      backgroundColor: theme.colors.surface,\n      padding: 24,\n      paddingTop: 0,\n      borderRadius: 12,\n      marginTop: 24,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 4,\n      elevation: 3,\n      width: '100%',\n      maxWidth: Platform.OS === 'web' ? 600 : undefined,\n      alignSelf: 'center',\n    },\n  });\n\n  const dynamicStyles = createStyles(screenWidth, isCollapsed);\n\n  // Add this new function to render profile section based on screen size\n  const renderProfileSection = () => {\n    if (windowWidth >= 600) {\n      // Web version - original layout\n      return (\n        <View style={[styles.leftColumn, !isWideScreen && styles.leftColumnMobile]}>\n          <View style={[styles.profileSection, !isWideScreen && styles.profileSectionMobile]}>\n            {renderProfilePhoto()}\n            <Text style={styles.name}>{professionalData.name}</Text>\n            <Text style={styles.location}>{professionalData.location}</Text>\n            {renderRatingStars()}\n            <TouchableOpacity style={styles.contactButton} onPress={handleContactPress}>\n              <Text style={styles.contactButtonText}>Contact {professionalData.name}</Text>\n            </TouchableOpacity>\n          </View>\n          {isWideScreen && renderAvailability()}\n          {isWideScreen && renderMap()}\n          {isWideScreen && mockPets && mockPets.length > 0 && renderPets()}\n        </View>\n      );\n    } else {\n      // Mobile version - fixed layout\n      return (\n        <View style={[dynamicStyles.dynamicProfileSection, dynamicStyles.dynamicProfileSectionMobile]}>\n          {renderProfilePhoto()}\n          <Text style={styles.name}>{professionalData.name}</Text>\n          <Text style={styles.location}>{professionalData.location}</Text>\n          {renderRatingStars()}\n          <TouchableOpacity style={styles.contactButton} onPress={handleContactPress}>\n            <Text style={styles.contactButtonText}>Contact {professionalData.name}</Text>\n          </TouchableOpacity>\n        </View>\n      );\n    }\n  };\n\n  return (\n    <View style={dynamicStyles.mainContainer}>\n      <CrossPlatformView fullWidthHeader={true} contentWidth=\"1200px\">\n        <BackHeader \n          title=\"Professional Profile\" \n          onBackPress={handleBack}\n        />\n        <ScrollView contentContainerStyle={styles.scrollViewContent}>\n          <View style={[styles.content, { width: getContentWidth() }]}>\n            <View style={[styles.twoColumnLayout, !isWideScreen && styles.singleColumnLayout]}>\n              {renderProfileSection()}\n              <View style={styles.rightColumn}>\n                {/* TODO: Add back after MVP launch */}\n                {/* {renderGallery()} */}\n                {renderServices()}\n                {!isWideScreen && renderAvailability()}\n                {renderSpecialistExperience()}\n                {renderReviews()}\n                {renderHomeSection()}\n                {!isWideScreen && renderMap()}\n              </View>\n            </View>\n          </View>\n        </ScrollView>\n\n        {/* Bio Modal */}\n        <Modal\n          visible={bioModalVisible}\n          animationType=\"slide\"\n          transparent={true}\n          onRequestClose={() => setBioModalVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles2.modalContent}>\n              <Text style={styles.bioText}>{professionalData.bio}</Text>\n              <TouchableOpacity \n                style={styles.closeButton}\n                onPress={() => setBioModalVisible(false)}\n              >\n                <Text style={styles.closeButtonText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </Modal>\n\n        {/* Reviews Modal */}\n        <Modal\n          visible={reviewsModalVisible}\n          animationType=\"slide\"\n          transparent={true}\n          onRequestClose={() => setReviewsModalVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles2.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>All Reviews</Text>\n                <TouchableOpacity \n                  style={styles.modalCloseIcon}\n                  onPress={() => setReviewsModalVisible(false)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              <ScrollView \n                style={styles.modalScroll}\n                contentContainerStyle={styles.modalScrollContent}\n              >\n                {mockReviews.map((review) => (\n                  <View key={review.id} style={styles.modalReviewItem}>\n                    {renderReview(review)}\n                  </View>\n                ))}\n              </ScrollView>\n            </View>\n          </View>\n        </Modal>\n\n        {/* Specialist Experience Modal */}\n        <Modal\n          visible={specialistModalVisible}\n          animationType=\"slide\"\n          transparent={true}\n          onRequestClose={() => setSpecialistModalVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles2.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Specialist Experience</Text>\n                <TouchableOpacity \n                  style={styles.modalCloseIcon}\n                  onPress={() => setSpecialistModalVisible(false)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              <ScrollView \n                style={styles.modalScroll}\n                contentContainerStyle={styles.modalScrollContent}\n              >\n                <Text style={styles.bioText}>{professionalData?.bio}</Text>\n              </ScrollView>\n            </View>\n          </View>\n        </Modal>\n\n        {/* Services Modal */}\n        <Modal\n          visible={servicesModalVisible}\n          animationType=\"slide\"\n          transparent={true}\n          onRequestClose={() => setServicesModalVisible(false)}\n        >\n          <View style={styles.modalContainer}>\n            <View style={styles2.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>All Services</Text>\n                <TouchableOpacity \n                  style={styles.modalCloseIcon}\n                  onPress={() => setServicesModalVisible(false)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              <ScrollView \n                style={styles.modalScroll}\n                contentContainerStyle={styles.modalScrollContent}\n              >\n                <View style={styles.modalServicesGrid}>\n                  {mockServicesForCards.map(service => (\n                    <ServiceCard \n                      key={service.id}\n                      service={service}\n                      onHeartPress={toggleFavorite}\n                      isFavorite={favoriteServices.includes(service.id)}\n                      professionalName={professionalData.name}\n                      professionalId={professionalData.id}\n                      navigation={navigation}\n                    />\n                  ))}\n                </View>\n              </ScrollView>\n            </View>\n          </View>\n        </Modal>\n      </CrossPlatformView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollViewContent: {\n    flexGrow: 1,\n    paddingBottom: Platform.OS === 'web' ? 16 : 80,\n    height: Platform.OS === 'web' ? 'calc(100vh - 124px)' : '100%',\n    overflow: 'auto',\n  },\n  content: {\n    alignSelf: 'center',\n    padding: 24,\n  },\n  topSection: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n    marginBottom: 24,\n  },\n  gallerySection: {\n    maxHeight: 400,\n    overflow: 'hidden',\n    marginBottom: 24,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    maxHeight: 320,\n    overflow: 'auto',\n  },\n  bottomSection: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n  },\n  servicesSection: {\n    flex: Platform.OS === 'web' ? 1 : undefined,\n    backgroundColor: theme.colors.background,\n    padding: 24,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  aboutSection: {\n    maxHeight: 300,\n    overflow: 'auto',\n    marginBottom: 24,\n    padding: 16,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n  },\n  profileHeader: {\n    alignItems: Platform.OS === 'web' ? 'flex-start' : 'center',\n  },\n  profileInfo: {\n    alignItems: Platform.OS === 'web' ? 'flex-start' : 'center',\n  },\n  hostingSection: {\n    marginTop: 24,\n  },\n  hostTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  weightRanges: {\n    gap: 8,\n  },\n  weightRange: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  galleryPhoto: {\n    width: Platform.OS === 'web' ? 100 : 50,\n    height: Platform.OS === 'web' ? 100 : 50,\n    borderRadius: 8,\n  },\n  centered: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  profilePhoto: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 16,\n    alignSelf: 'center',\n  },\n  profilePhotoPlaceholder: {\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  name: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  location: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    marginBottom: 8,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  section: {\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  bioInput: {\n    backgroundColor: theme.colors.surface,\n  },\n  service: {\n    fontSize: 16,\n    marginBottom: 5,\n  },\n  rateItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  rateLabel: {\n    flex: 1,\n    fontSize: 16,\n  },\n  rateInput: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  photoGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  petPhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  addPhotoButton: {\n    width: 100,\n    height: 100,\n    margin: 5,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  saveButton: {\n    margin: 20,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginBottom: 16,\n  },\n  rating: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginLeft: 5,\n  },\n  reviewCount: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginLeft: 4,\n  },\n  contactButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 12,\n    borderRadius: 8,\n    alignSelf: 'center',\n  },\n  contactButtonText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.surface,\n    textAlign: 'center',\n  },\n  statsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 20,\n  },\n  statItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10,\n  },\n  statText: {\n    fontSize: 16,\n    marginLeft: 5,\n  },\n  bioText: {\n    fontSize: 18,\n    lineHeight: 28,\n    color: theme.colors.text,\n    overflow: 'hidden',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  serviceItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  serviceText: {\n    fontSize: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  servicePrice: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  skillsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  skillBadge: {\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    margin: 5,\n  },\n  skillText: {\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  photoGallery: {\n    flexDirection: 'row',\n  },\n  calculatorText: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  additionalRatesButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 6,\n    backgroundColor: theme.colors.surface,\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.outline,\n  },\n  additionalRatesText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  calendarSection: {\n    marginTop: 24,\n  },\n  readMoreButton: {\n    marginTop: 8,\n  },\n  readMoreText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewsSection: {\n    marginVertical: 32,\n    width: '100%',\n    backgroundColor: theme.colors.background,\n  },\n  reviewItem: {\n    marginBottom: 16,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    maxWidth: Platform.OS === 'web' ? 600 : undefined,\n  },\n  servicesSection: {\n    backgroundColor: theme.colors.surface,\n    padding: 24,\n    borderRadius: 12,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    marginBottom: 24,\n  },\n  mapContainer: {\n    height: 400,\n    width: '100%',\n    marginVertical: 24,\n  },\n  map: {\n    flex: 1,\n  },\n  petsSection: {\n    marginBottom: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  petItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 12,\n    padding: 12,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n  },\n  petInfo: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  petName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 2,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  petBreed: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    marginBottom: 2,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  petDetails: {\n    fontSize: 14,\n    color: theme.colors.secondary,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  aboutSubsections: {\n    flexDirection: Platform.OS === 'web' ? 'row' : 'column',\n    gap: 24,\n  },\n  communicationSection: {\n    flex: 1,\n  },\n  skillsSection: {\n    flex: 1,\n  },\n  homeDetails: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n  },\n  noReviews: {\n    fontSize: 16,\n    color: theme.colors.secondary,\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginTop: 16,\n  },\n  twoColumnLayout: {\n    flexDirection: 'row',\n    gap: 24,\n  },\n  singleColumnLayout: {\n    flexDirection: 'column',\n  },\n  leftColumn: {\n    flex: Platform.OS === 'web' ? 1 : undefined,\n    maxWidth: Platform.OS === 'web' ? 400 : undefined,\n  },\n  rightColumn: {\n    flex: Platform.OS === 'web' ? 2 : undefined,\n  },\n  calendar: {\n    height: 300,\n    marginTop: 16,\n  },\n  serviceText: {\n    fontSize: 12,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '100',\n  },\n  homeFeaturesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginTop: 16,\n  },\n  featureBubble: {\n    backgroundColor: theme.colors.surface,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.outline,\n  },\n  featureText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  reviewItem: {\n    marginBottom: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  reviewHeader: {\n    flexDirection: 'row',\n    marginBottom: 12,\n  },\n  reviewerPhoto: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  reviewerInfo: {\n    flex: 1,\n  },\n  reviewerName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  serviceInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  reviewText: {\n    fontSize: 14,\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  modalScroll: {\n    maxHeight: Platform.OS === 'web' ? '70vh' : '80%',\n  },\n  closeButton: {\n    marginTop: 16,\n    alignItems: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n  },\n  closeButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalCloseIcon: {\n    padding: 8,\n  },\n  modalScrollContent: {\n    paddingBottom: 24,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: Platform.OS === 'web' ? 40 : 20,\n  },\n  reviewsGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    marginTop: 16,\n  },\n  reviewItem: {\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n    flex: 1,\n    minWidth: Platform.OS === 'web' ? 300 : '100%',\n    // maxWidth: Platform.OS === 'web' ? 'calc(50% - 8px)' : undefined,\n    marginBottom: 0, // Remove default margin since we're using gap\n  },\n  specialistSection: {\n    marginTop: 24,\n    backgroundColor: theme.colors.surface,\n    padding: 16,\n    borderRadius: 12,\n  },\n  specialistText: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalReviewItem: {\n    marginBottom: 16,\n    width: '100%',\n  },\n  leftColumnMobile: {\n    maxWidth: '100%',\n    alignItems: 'center',\n  },\n  seeAllButton: {\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 8,\n    alignSelf: 'flex-start',\n    minWidth: 'auto',\n    width: 'auto',\n  },\n  seeAllButtonText: {\n    color: theme.colors.primary,\n    fontSize: 16,\n    fontWeight: '600',\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalServicesGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 16,\n    justifyContent: 'center',\n    padding: 16,\n  },\n  reviewMeta: {\n    gap: 4,\n  },\n  starContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 4,\n  },\n});\n\nexport default ProfessionalProfile;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\n\nconst ContractList = () => {\n  const [contracts, setContracts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchContracts();\n  }, []);\n\n  const fetchContracts = async () => {\n    setLoading(true);\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/contracts/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setContracts(response.data);\n    } catch (error) {\n      console.error('Error fetching contracts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.sectionTitle}>Your Contracts</Text>\n      {contracts.length === 0 ? (\n        <Text style={styles.noContractsText}>No contracts yet</Text>\n      ) : (\n        contracts.map((contract) => (\n          <View key={contract.id} style={styles.card}>\n            <Text style={styles.contractTitle}>{contract.title}</Text>\n            <Text style={styles.ownerName}>Owner: {contract.owner_name}</Text>\n            <View style={styles.buttonContainer}>\n              <TouchableOpacity style={styles.button}>\n                <Text style={styles.buttonText}>Share</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.button}>\n                <Text style={styles.buttonText}>Edit</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        ))\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 16,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 50,\n  },\n  sectionTitle: {\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  noContractsText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginTop: 20,\n  },\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  contractTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  ownerName: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    marginTop: 4,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ContractList;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Modal, Platform, StyleSheet } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst OwnerPicker = ({ owners, selectedOwner, onSelectOwner }) => {\n  const [showOwnerPicker, setShowOwnerPicker] = useState(false);\n\n  if (Platform.OS === 'web') {\n    return (\n      <Picker\n        selectedValue={selectedOwner}\n        onValueChange={(itemValue) => onSelectOwner(itemValue)}\n        style={styles.picker}\n      >\n        <Picker.Item label=\"Select a owner...\" value=\"\" />\n        {owners.map(owner => (\n          <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n        ))}\n      </Picker>\n    );\n  } else {\n    return (\n      <View>\n        <TouchableOpacity\n          style={styles.dropdownButton}\n          onPress={() => setShowOwnerPicker(true)}\n        >\n          <Text style={styles.dropdownButtonText}>\n            {selectedOwner || \"Select a owner...\"}\n          </Text>\n          <MaterialCommunityIcons \n            name=\"chevron-down\" \n            size={24} \n            color={theme.colors.primary} \n          />\n        </TouchableOpacity>\n        <Modal\n          visible={showOwnerPicker}\n          transparent={true}\n          animationType=\"slide\"\n          onRequestClose={() => setShowOwnerPicker(false)}\n        >\n          <View style={styles.pickerModalContainer}>\n            <View style={styles.pickerContainer}>\n              <Picker\n                selectedValue={selectedOwner}\n                onValueChange={(itemValue) => {\n                  onSelectOwner(itemValue);\n                  setShowOwnerPicker(false);\n                }}\n                style={styles.modalPicker}\n              >\n                <Picker.Item label=\"Select a owner...\" value=\"\" />\n                {owners.map(owner => (\n                  <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n                ))}\n              </Picker>\n            </View>\n            <TouchableOpacity\n              style={styles.pickerCloseButton}\n              onPress={() => setShowOwnerPicker(false)}\n            >\n              <Text style={styles.pickerCloseButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n};\n\nconst styles = StyleSheet.create({\n  picker: {\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n    padding: Platform.OS === 'ios' ? 12 : 0,\n    width: '90%',\n  },\n  modalPicker: {\n    width: '90%',\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownButtonText: {\n    color: theme.colors.text,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default OwnerPicker;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Modal, TextInput, ScrollView, Platform } from 'react-native';\nimport { theme } from '../styles/theme';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\nimport OwnerPicker from './OwnerPicker'; // Import the new component\n\nconst ContractTemplate = ({ templates }) => {\n  const [isTemplateModalVisible, setTemplateModalVisible] = useState(false);\n  const [isEditModalVisible, setEditModalVisible] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [contractContent, setContractContent] = useState('');\n  const [owners, setOwners] = useState([]);\n  const [selectedOwner, setSelectedOwner] = useState('');\n\n  useEffect(() => {\n    fetchOwners();\n  }, []);\n\n  const fetchOwners = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/clients/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setOwners(response.data);\n    } catch (error) {\n      console.error('Error fetching owners:', error);\n    }\n  };\n\n  const handleTemplateSelect = (template) => {\n    setSelectedTemplate(template);\n    setContractContent(template.description);\n    setTemplateModalVisible(false);\n    setEditModalVisible(true);\n  };\n\n  const handleAddSignableField = () => {\n    setContractContent((prevContent) => `${prevContent}\\n[signable] ___________ [end signable]`);\n  };\n\n  const handleSubmitContract = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.post(\n        `${API_BASE_URL}/api/contracts/`,\n        {\n          template: selectedTemplate.id,\n          content: contractContent,\n          owner: selectedOwner,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n      console.log('Contract submitted:', response.data);\n      setEditModalVisible(false);\n    } catch (error) {\n      console.error('Error submitting contract:', error);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.sectionTitle}>Create New Contract</Text>\n      <TouchableOpacity style={styles.button} onPress={() => setTemplateModalVisible(true)}>\n        <Text style={styles.buttonText}>Use Template</Text>\n      </TouchableOpacity>\n\n      {/* Template Selection Modal */}\n      <Modal\n        visible={isTemplateModalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setTemplateModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Select a Template</Text>\n            <ScrollView contentContainerStyle={styles.templateGrid}>\n              {templates.length === 0 ? (\n                <Text style={styles.noTemplatesText}>No templates yet</Text>\n              ) : (\n                templates.map((template) => (\n                  <TouchableOpacity\n                    key={template.id}\n                    style={styles.templateBox}\n                    onPress={() => handleTemplateSelect(template)}\n                  >\n                    <Text style={styles.templateTitle}>{template.title}</Text>\n                  </TouchableOpacity>\n                ))\n              )}\n            </ScrollView>\n            <TouchableOpacity style={styles.closeButton} onPress={() => setTemplateModalVisible(false)}>\n              <Text style={styles.closeButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n\n      {/* Edit Contract Modal */}\n      <Modal\n        visible={isEditModalVisible}\n        transparent={true}\n        animationType=\"slide\"\n        onRequestClose={() => setEditModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={styles.modalContent}>\n            <Text style={styles.modalTitle}>Edit Contract</Text>\n            <View style={styles.ownerPickerContainer}>\n              <Text style={styles.sectionTitle}>Select a Owner</Text>\n              <OwnerPicker\n                owners={owners}\n                selectedOwner={selectedOwner}\n                onSelectOwner={setSelectedOwner}\n              />\n            </View>\n            <TextInput\n              style={styles.textArea}\n              placeholder=\"Contract Content\"\n              value={contractContent}\n              onChangeText={setContractContent}\n              multiline\n            />\n            <TouchableOpacity style={styles.button} onPress={handleAddSignableField}>\n              <Text style={styles.buttonText}>Add Signable Field</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.button} onPress={handleSubmitContract}>\n              <Text style={styles.buttonText}>Submit Contract</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.closeButton} onPress={() => setEditModalVisible(false)}>\n              <Text style={styles.closeButtonText}>Close</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 16,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  templateGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  templateBox: {\n    width: 100,\n    height: 100,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  templateTitle: {\n    color: theme.colors.background,\n    textAlign: 'center',\n  },\n  noTemplatesText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginTop: 20,\n  },\n  closeButton: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  textArea: {\n    width: '100%',\n    height: 100,\n    padding: 10,\n    borderColor: theme.colors.primary,\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    textAlignVertical: 'top',\n  },\n  ownerPickerContainer: {\n    width: '100%', // Ensure the owner picker container takes full width\n    marginBottom: 10,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ContractTemplate;\n","import React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\n\nconst ChronicleSummary = ({ chronicles }) => {\n  if (!chronicles || chronicles.length === 0) {\n    return (\n      <View style={styles.emptyContainer}>\n        <Text style={styles.emptyText}>No chronicles yet</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView style={styles.container}>\n      <Text style={styles.sectionTitle}>Your Chronicles</Text>\n      {chronicles.map((chronicle) => (\n        <View key={chronicle.id} style={styles.card}>\n          <Text style={styles.chronicleTitle}>{chronicle.title}</Text>\n          <Text style={styles.ownerName}>Owner: {chronicle.owner}</Text>\n          <Text style={styles.petName}>Pet: {chronicle.pets.join(', ')}</Text>\n          <Text style={styles.summary}>{chronicle.summary}</Text>\n          <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.button}>\n              <Text style={styles.buttonText}>Edit</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.button}>\n              <Text style={styles.buttonText}>Send to Owner</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    marginTop: 16,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    textAlign: 'center',\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  card: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 16,\n    marginBottom: 16,\n  },\n  chronicleTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n  ownerName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 4,\n  },\n  petName: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 2,\n  },\n  summary: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginTop: 8,\n    marginBottom: 8,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginTop: 8,\n  },\n  button: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 4,\n    marginLeft: 8,\n  },\n  buttonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ChronicleSummary;\n","import React, { useState, useRef, useLayoutEffect } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ScrollView, StyleSheet, Platform, Modal, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\n\nconst { width: SCREEN_WIDTH } = Dimensions.get('window');\n\nconst QuestionInput = ({ value, onChange }) => {\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\n  const inputRef = useRef(null);\n\n  const [layout, setLayout] = useState(null);\n\nconst handleLayout = (event) => {\n  const { x, y, width, height } = event.nativeEvent.layout;\n    setLayout({ x, y, width, height });\n  };\n\n  const presetQuestions = [\n    \"What is your favorite animal?\",\n    \"How many pets do you have?\",\n    \"What's your experience with exotic pets?\",\n    \"Do you have any allergies to animals?\",\n    \"What type of exotic pet are you interested in?\",\n    \"Have you owned an exotic pet before?\",\n    \"Are you familiar with the care requirements for exotic pets?\",\n    \"Do you have a veterinarian experienced with exotic animals?\",\n    \"What's your living situation? (House, apartment, etc.)\",\n    \"Are there any local regulations about exotic pet ownership in your area?\",\n  ];\n\n  const handleChange = (text) => {\n    onChange(text);\n  };\n\n  useLayoutEffect(() => {\n    if (showDropdown && inputRef.current) {\n      inputRef.current.measure((fx, fy, width, height, px, py) => {\n        if (!isNaN(py) && !isNaN(height)) {\n          const newTop = py + height;\n          const newLeft = px;\n          const newWidth = width;\n            \n          setDropdownPosition({ top: newTop, left: newLeft, width: newWidth });\n        }\n      });\n    }\n\n    // Lock/unlock scrolling\n    if (Platform.OS === 'web') {\n      document.body.style.overflow = showDropdown ? 'hidden' : 'auto';\n    }\n\n    return () => {\n      if (Platform.OS === 'web') {\n        document.body.style.overflow = 'auto';\n      }\n    };\n  }, [showDropdown, layout]);\n\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  return (\n    <View style={styles.outerContainer}>\n      <View style={styles.container}>\n        <View style={styles.inputContainer} ref={inputRef} onLayout={handleLayout}>\n          <TextInput\n            style={styles.input}\n            value={value}\n            onChangeText={handleChange}\n            placeholder=\"Enter or select a question\"\n            multiline\n          />\n          <TouchableOpacity \n            style={styles.dropdownButton}\n            onPress={toggleDropdown}\n          >\n            <MaterialCommunityIcons \n              name={showDropdown ? \"chevron-up\" : \"chevron-down\"} \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n        </View>\n        <Modal\n          visible={showDropdown}\n          transparent={true}\n          animationType=\"none\"\n          onRequestClose={toggleDropdown}\n        >\n          <TouchableOpacity\n            style={styles.modalOverlay}\n            activeOpacity={1}\n            onPress={toggleDropdown}\n          >\n            <View style={[styles.dropdownContainer, { top: dropdownPosition.top, left: dropdownPosition.left, width: dropdownPosition.width }]}>\n              <ScrollView style={styles.dropdownList}>\n                {presetQuestions.map((q, i) => (\n                  <TouchableOpacity\n                    key={i}\n                    style={styles.dropdownItem}\n                    onPress={() => {\n                      handleChange(q);\n                      toggleDropdown();\n                    }}\n                  >\n                    <Text style={styles.dropdownItemText}>{q}</Text>\n                  </TouchableOpacity>\n                ))}\n              </ScrollView>\n            </View>\n          </TouchableOpacity>\n        </Modal>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    width: '100%',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  container: {\n    width: SCREEN_WIDTH - 80, // Match the answer input width\n    maxWidth: 600,\n    alignItems: 'center',\n  },\n  inputContainer: {\n    width: '100%',\n    position: 'relative',\n  },\n  input: {\n    width: '100%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 8,\n    minHeight: 60,\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  dropdownButton: {\n    position: 'absolute',\n    right: 8,\n    top: 8,\n    padding: 4,\n  },\n  modalOverlay: {\n    flex: 1,\n  },\n  dropdownContainer: {\n    position: 'absolute',\n    backgroundColor: theme.colors.background,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    maxHeight: 200,\n    zIndex: 1000, // Ensure it appears on top\n    ...Platform.select({\n      web: {\n        boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n      },\n      default: {\n        elevation: 4,\n      },\n    }),\n  },\n  dropdownList: {\n    maxHeight: 200,\n  },\n  dropdownItem: {\n    padding: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  dropdownItemText: {\n    color: theme.colors.text,\n  },\n});\n\nexport default QuestionInput;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, ScrollView, Modal, Platform, Dimensions, Image, ActivityIndicator, Pressable } from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport * as ImagePicker from 'expo-image-picker';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport QuestionInput from './QuestionInput';\nimport OwnerPicker from './OwnerPicker';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst ChronicleForm = ({ onCreateChronicle }) => {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedOwner, setSelectedOwner] = useState('');\n  const [selectedPets, setSelectedPets] = useState([]);\n  const [questions, setQuestions] = useState([{ question: '', answer: '', isPreset: true }]);\n  const [summary, setSummary] = useState('');\n  const [photos, setPhotos] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showOwnerPicker, setShowOwnerPicker] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n\n  const mockOwners = [\n    { id: '1', name: 'John Doe', pets: [{ id: '1', name: 'Max' }, { id: '2', name: 'Bella' }] },\n    { id: '2', name: 'Jane Smith', pets: [{ id: '3', name: 'Luna' }, { id: '4', name: 'Charlie' }] }\n  ];\n\n  const pickImages = async () => {\n    try {\n      setIsUploading(true);\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsMultipleSelection: true,\n        quality: 1,\n      });\n\n      if (!result.canceled) {\n        setPhotos([...photos, ...result.assets]);\n      }\n    } catch (error) {\n      console.error('Error uploading images:', error);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  const updateQuestion = (index, field, value) => {\n    const newQuestions = [...questions];\n    newQuestions[index] = { ...newQuestions[index], [field]: value };\n    setQuestions(newQuestions);\n  };\n\n  const handleCreateChronicle = () => {\n    setIsCreating(true);\n    const newChronicle = {\n      id: Date.now(),\n      owner: selectedOwner,\n      pets: selectedPets,\n      summary,\n      questions,\n      photos,\n      title: `Chronicle for ${selectedOwner}`,\n    };\n\n    setTimeout(() => {\n      console.log('Sending data to backend:', newChronicle);\n      onCreateChronicle(newChronicle);\n      setIsCreating(false);\n      setModalVisible(false);\n      resetForm();\n    }, 2000);\n  };\n\n  const resetForm = () => {\n    setSelectedOwner('');\n    setSelectedPets([]);\n    setSummary('');\n    setQuestions([{ question: '', answer: '' }]);\n    setPhotos([]);\n  };\n\n  const addNewQuestion = () => {\n    setQuestions([...questions, { question: '', answer: '', isPreset: false }]);\n  };\n\n  const renderOwnerSelection = () => {\n    if (Platform.OS === 'web') {\n      return (\n        <Picker\n          selectedValue={selectedOwner}\n          onValueChange={(itemValue) => setSelectedOwner(itemValue)}\n          style={styles.picker}\n        >\n          <Picker.Item label=\"Select a owner...\" value=\"\" />\n          {mockOwners.map(owner => (\n            <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n          ))}\n        </Picker>\n      );\n    } else {\n      return (\n        <View>\n          <TouchableOpacity\n            style={styles.dropdownButton}\n            onPress={() => setShowOwnerPicker(true)}\n          >\n            <Text style={styles.dropdownButtonText}>\n              {selectedOwner || \"Select a owner...\"}\n            </Text>\n            <MaterialCommunityIcons \n              name=\"chevron-down\" \n              size={24} \n              color={theme.colors.primary} \n            />\n          </TouchableOpacity>\n          <Modal\n            visible={showOwnerPicker}\n            transparent={true}\n            animationType=\"slide\"\n          >\n            <View style={styles.pickerModalContainer}>\n              <View style={styles.pickerContainer}>\n                <Picker\n                  selectedValue={selectedOwner}\n                  onValueChange={(itemValue) => {\n                    setSelectedOwner(itemValue);\n                    setShowOwnerPicker(false);\n                  }}\n                >\n                  <Picker.Item label=\"Select a owner...\" value=\"\" />\n                  {mockOwners.map(owner => (\n                    <Picker.Item key={owner.id} label={owner.name} value={owner.name} />\n                  ))}\n                </Picker>\n              </View>\n              <TouchableOpacity\n                style={styles.pickerCloseButton}\n                onPress={() => setShowOwnerPicker(false)}\n              >\n                <Text style={styles.pickerCloseButtonText}>Close</Text>\n              </TouchableOpacity>\n            </View>\n          </Modal>\n        </View>\n      );\n    }\n  };\n\n  const PhotoPreview = ({ photo }) => (\n    <View style={styles.photoContainer}>\n      <Image source={{ uri: photo.uri }} style={styles.photo} />\n    </View>\n  );\n\n  return (\n    <View>\n      <TouchableOpacity style={styles.createButton} onPress={() => setModalVisible(true)}>\n        <Text style={styles.createButtonText}>Create New Chronicle</Text>\n      </TouchableOpacity>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => setModalVisible(false)}\n      >\n        <View style={styles.modalContainer}>\n          <View style={[styles.modalContent, Platform.OS === 'web' && styles.webModalContent]}>\n            <View style={styles.modalHeader}>\n              <Text style={styles.modalTitle}>Create New Chronicle</Text>\n              <TouchableOpacity onPress={() => setModalVisible(false)}>\n                <Text style={styles.closeButtonText}>✕</Text>\n              </TouchableOpacity>\n            </View>\n\n            <ScrollView>\n              <Text style={styles.label}>Select Owner</Text>\n              <OwnerPicker\n                owners={mockOwners}\n                selectedOwner={selectedOwner}\n                onSelectOwner={setSelectedOwner}\n              />\n\n              <Text style={styles.label}>Select Pets</Text>\n              {selectedOwner && mockOwners.find(c => c.name === selectedOwner)?.pets.map(pet => (\n                <TouchableOpacity\n                  key={pet.id}\n                  style={[\n                    styles.petOption,\n                    selectedPets.includes(pet.name) && styles.selectedPet\n                  ]}\n                  onPress={() => {\n                    if (selectedPets.includes(pet.name)) {\n                      setSelectedPets(selectedPets.filter(p => p !== pet.name));\n                    } else {\n                      setSelectedPets([...selectedPets, pet.name]);\n                    }\n                  }}\n                >\n                  <Text style={styles.petOptionText}>{pet.name}</Text>\n                </TouchableOpacity>\n              ))}\n\n              <Text style={styles.label}>Summary</Text>\n              <TextInput\n                style={styles.summaryInput}\n                multiline\n                value={summary}\n                onChangeText={setSummary}\n                placeholder=\"Write a summary of the chronicle\"\n                textAlignVertical=\"top\"\n              />\n\n              {questions.map((item, index) => (\n                <View key={index} style={styles.questionContainer}>\n                  <Text style={styles.label}>Question {index + 1}</Text>\n                  <QuestionInput\n                    value={item.question}\n                    onChange={(text) => updateQuestion(index, 'question', text)}\n                  />\n                  <View style={styles.answerInputContainer}>\n                    <TextInput\n                      style={[styles.input, styles.answerInput]}\n                      value={item.answer}\n                      onChangeText={(text) => updateQuestion(index, 'answer', text)}\n                      placeholder=\"Enter answer\"\n                      multiline\n                    />\n                  </View>\n                </View>\n              ))}\n\n              <TouchableOpacity style={styles.addQuestionButton} onPress={addNewQuestion}>\n                <MaterialCommunityIcons name=\"plus\" size={20} color={theme.colors.primary} />\n                <Text style={styles.addQuestionButtonText}>Add Another Question</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity \n                style={styles.uploadButton} \n                onPress={pickImages}\n                disabled={isUploading}\n              >\n                <MaterialCommunityIcons \n                  name=\"camera\" \n                  size={24} \n                  color={isUploading ? theme.colors.disabled : theme.colors.primary} \n                />\n                <Text style={[\n                  styles.uploadButtonText,\n                  isUploading && styles.uploadingText\n                ]}>\n                  {isUploading ? 'Uploading...' : 'Upload Photos'}\n                </Text>\n                {isUploading && (\n                  <ActivityIndicator \n                    size=\"small\" \n                    color={theme.colors.primary} \n                    style={styles.uploadingSpinner} \n                  />\n                )}\n              </TouchableOpacity>\n\n              <ScrollView horizontal style={styles.photoPreview}>\n                {photos.map((photo, index) => (\n                  <PhotoPreview key={index} photo={photo} />\n                ))}\n              </ScrollView>\n            </ScrollView>\n\n            <View style={styles.modalButtonContainer}>\n              <TouchableOpacity \n                style={styles.cancelButton} \n                onPress={() => {\n                  setModalVisible(false);\n                  resetForm();\n                }}\n              >\n                <Text style={styles.cancelButtonText}>Cancel</Text>\n              </TouchableOpacity>\n              <TouchableOpacity \n                style={styles.submitButton} \n                onPress={handleCreateChronicle}\n                disabled={isCreating}\n              >\n                <Text style={styles.submitButtonText}>\n                  {isCreating ? 'Creating Chronicle...' : 'Create Chronicle'}\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </Modal>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  createButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  createButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n    fontSize: 16,\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    padding: 16,\n    width: '90%',\n    maxHeight: '80%',\n  },\n  webModalContent: {\n    width: screenWidth > 600 ? '40%' : '90%',\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: theme.colors.text,\n  },\n  closeButton: {\n    padding: 8,\n  },\n  closeButtonText: {\n    fontSize: 20,\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: theme.colors.text,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginBottom: 8,\n    minHeight: 20,\n  },\n  picker: {\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n    padding: Platform.OS === 'ios' ? 12 : 0,\n  },\n  petOption: {\n    padding: 8,\n    backgroundColor: theme.colors.surface,\n    marginBottom: 8,\n    borderRadius: 4,\n  },\n  selectedPet: {\n    backgroundColor: theme.colors.primary,\n  },\n  petOptionText: {\n    color: theme.colors.text,\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginTop: 16,\n  },\n  uploadButtonText: {\n    marginLeft: 8,\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  photoPreview: {\n    flexDirection: 'row',\n    marginTop: 16,\n  },\n  photoThumbnail: {\n    width: 80,\n    height: 80,\n    marginRight: 8,\n    borderRadius: 4,\n  },\n  questionContainer: {\n    marginBottom: 16,\n    width: '100%',\n    alignItems: 'center',\n  },\n  modalButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 16,\n  },\n  cancelButton: {\n    backgroundColor: theme.colors.error,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 4,\n    alignItems: 'center',\n    flex: 1,\n    marginRight: 8,\n  },\n  cancelButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 16,\n    paddingVertical: 12,\n    borderRadius: 4,\n    alignItems: 'center',\n    flex: 1,\n    marginLeft: 8,\n  },\n  submitButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  addQuestionButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 12,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginTop: 8,\n    marginBottom: 16,\n    zIndex: 1, // Lower than dropdown\n  },\n  addQuestionButtonText: {\n    marginLeft: 8,\n    zIndex: 1, // Lower than dropdown\n    color: theme.colors.primary,\n    fontWeight: 'bold',\n  },\n  answerInputContainer: {\n    width: '100%',\n    alignItems: 'center',\n  },\n  answerInput: {\n    width: screenWidth - 80,\n    maxWidth: 600,\n    minHeight: 60,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 8,\n    marginTop: 8,\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  summaryInput: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    marginBottom: 8,\n    padding: 8,\n    height: 100, // Set a fixed height\n    textAlignVertical: 'top',\n    ...Platform.select({\n      web: {\n        minHeight: 100,\n      },\n      ios: {\n        paddingTop: 8, // Add some padding to the top for iOS\n      },\n      android: {\n        paddingTop: 8, // Add some padding to the top for Android\n      },\n    }),\n    ...Platform.select({\n      web: {\n        border: `1px solid ${theme.colors.border}`,\n      },\n      default: {\n        borderWidth: 1,\n        borderColor: theme.colors.border,\n      },\n    }),\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 4,\n    padding: 12,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  dropdownButtonText: {\n    color: theme.colors.text,\n  },\n  pickerModalContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pickerContainer: {\n    backgroundColor: theme.colors.background,\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    padding: 16,\n  },\n  pickerCloseButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 16,\n    alignItems: 'center',\n  },\n  pickerCloseButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  photoContainer: {\n    marginRight: 8,\n  },\n  photo: {\n    width: 100,\n    height: 100,\n    borderRadius: 8,\n  },\n});\n\nexport default ChronicleForm;\n","import React, { useState, useEffect } from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity, SafeAreaView, StatusBar, Platform, ActivityIndicator } from 'react-native';\nimport { theme } from '../styles/theme';\nimport ContractList from '../components/ContractList';\nimport ContractTemplate from '../components/ContractTemplate'; // Import ContractTemplate\nimport ChronicleSummary from '../components/ChronicleSummary';\nimport ChronicleForm from '../components/ChronicleForm';\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { API_BASE_URL } from '../config/config';\n\nconst MyContracts = () => {\n  const [activeTab, setActiveTab] = useState('contracts');\n  const [chronicles, setChronicles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [templates, setTemplates] = useState([]);\n\n  useEffect(() => {\n    if (activeTab === 'chronicles') {\n      fetchChronicles();\n    }\n  }, [activeTab]);\n\n  const fetchChronicles = async () => {\n    setLoading(true);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n\n    const mockChronicles = [\n      {\n        id: 1,\n        title: 'Fluffy\\'s Adventure',\n        owner: 'John Doe',\n        pets: ['Fluffy'],\n        summary: 'Fluffy had a great time at the park today!',\n      },\n      {\n        id: 2,\n        title: 'Max\\'s Playdate',\n        owner: 'Jane Smith',\n        pets: ['Max'],\n        summary: 'Max enjoyed playing with other dogs at the beach.',\n      },\n    ];\n\n    setChronicles(mockChronicles);\n    setLoading(false);\n  };\n\n  const fetchTemplates = async () => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        console.error('No token found');\n        return;\n      }\n      const response = await axios.get(`${API_BASE_URL}/api/contracts/templates/`, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTemplates(response.data);\n    } catch (error) {\n      console.error('Error fetching templates:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTemplates(); // Fetch templates when component mounts\n  }, []);\n\n  const handleCreateChronicle = (newChronicle) => {\n    setChronicles((prevChronicles) => [...prevChronicles, newChronicle]);\n  };\n\n  return (\n    <SafeAreaView style={styles.safeArea}>\n      <ScrollView contentContainerStyle={styles.scrollViewContent}>\n        <View style={styles.container}>\n          <Text style={styles.title}>My Contracts & Chronicles</Text>\n          \n          <View style={styles.tabContainer}>\n            <TouchableOpacity\n              style={[styles.tab, activeTab === 'contracts' && styles.activeTab]}\n              onPress={() => setActiveTab('contracts')}\n            >\n              <Text style={[styles.tabText, activeTab === 'contracts' && styles.activeTabText]}>Contracts</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={[styles.tab, activeTab === 'chronicles' && styles.activeTab]}\n              onPress={() => setActiveTab('chronicles')}\n            >\n              <Text style={[styles.tabText, activeTab === 'chronicles' && styles.activeTabText]}>Critter Chronicles</Text>\n            </TouchableOpacity>\n          </View>\n\n          {activeTab === 'contracts' && (\n            <View style={styles.contentContainer}>\n              <ContractTemplate templates={templates} />\n              <ContractList />\n            </View>\n          )}\n\n          {activeTab === 'chronicles' && (\n            <View style={styles.contentContainer}>\n              {loading ? (\n                <View style={styles.loadingContainer}>\n                  <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                </View>\n              ) : (\n                <>\n                  <ChronicleForm onCreateChronicle={handleCreateChronicle} />\n                  <ChronicleSummary chronicles={chronicles} />\n                </>\n              )}\n            </View>\n          )}\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n  },\n  container: {\n    flex: 1,\n    padding: 16,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 16,\n    color: theme.colors.primary,\n    textAlign: 'center',\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    width: '100%',\n    maxWidth: 500,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    marginHorizontal: 4,\n  },\n  activeTab: {\n    backgroundColor: theme.colors.primary,\n  },\n  tabText: {\n    color: theme.colors.text,\n    fontWeight: 'bold',\n  },\n  activeTabText: {\n    color: theme.colors.background,\n  },\n  contentContainer: {\n    width: '100%',\n    maxWidth: 500,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: 200,\n  },\n  useTemplateButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  useTemplateButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n  modalContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  modalContent: {\n    width: '80%',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 10,\n    padding: 20,\n    alignItems: 'center',\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  templateGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  templateBox: {\n    width: 100,\n    height: 100,\n    backgroundColor: theme.colors.primary,\n    margin: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 5,\n  },\n  templateTitle: {\n    color: theme.colors.background,\n    textAlign: 'center',\n  },\n  closeButton: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 5,\n  },\n  closeButtonText: {\n    color: theme.colors.background,\n    fontWeight: 'bold',\n  },\n});\n\nexport default MyContracts;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { View, StyleSheet, Platform, SafeAreaView, TouchableOpacity, StatusBar, Text, TextInput, ActivityIndicator, Dimensions } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport CustomButton from '../components/CustomButton';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { changePassword } from '../api/API';\nimport { validatePassword, validatePasswordMatch, sanitizeInput } from '../validation/validation';\n\nconst { width: screenWidth } = Dimensions.get('window');\n\nconst ChangePassword = () => {\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showCurrentPassword, setShowCurrentPassword] = useState(false);\n  const [showNewPassword, setShowNewPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const { isSignedIn, screenWidth: contextScreenWidth, isCollapsed } = useContext(AuthContext);\n  const [token, setToken] = useState(null);\n  \n  // Validation error states\n  const [currentPasswordError, setCurrentPasswordError] = useState('');\n  const [newPasswordError, setNewPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  \n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const getToken = async () => {\n      const storedToken = await AsyncStorage.getItem('userToken');\n      setToken(storedToken);\n    };\n    getToken();\n  }, []);\n\n  // Enhanced input handlers with real-time sanitization\n  const handleCurrentPasswordChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious current password input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setCurrentPassword(sanitizedText);\n    setCurrentPasswordError('');\n    setError('');\n    setSuccess('');\n  };\n\n  const handleNewPasswordChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious new password input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setNewPassword(sanitizedText);\n    setNewPasswordError('');\n    setError('');\n    setSuccess('');\n  };\n\n  const handleConfirmPasswordChange = (text) => {\n    const sanitizedText = sanitizeInput(text, 'password');\n    \n    const removalPercentage = text.length > 0 ? ((text.length - sanitizedText.length) / text.length) * 100 : 0;\n    \n    if (removalPercentage > 50 && text.length > 8) {\n      debugLog('MBA1234: Potentially malicious confirm password input detected:', {\n        original: text,\n        sanitized: sanitizedText,\n        removalPercentage\n      });\n      return;\n    }\n    \n    setConfirmPassword(sanitizedText);\n    setConfirmPasswordError('');\n    setError('');\n    setSuccess('');\n  };\n\n  const validateForm = () => {\n    let isValid = true;\n    \n    // Validate current password (basic check)\n    if (!currentPassword.trim()) {\n      setCurrentPasswordError('Current password is required');\n      isValid = false;\n    }\n    \n    // Validate new password\n    const newPasswordValidation = validatePassword(newPassword);\n    setNewPasswordError(newPasswordValidation.message);\n    if (!newPasswordValidation.isValid) isValid = false;\n    \n    // Validate password match\n    const passwordMatchValidation = validatePasswordMatch(newPassword, confirmPassword);\n    setConfirmPasswordError(passwordMatchValidation.message);\n    if (!passwordMatchValidation.isValid) isValid = false;\n    \n    return isValid;\n  };\n\n  const handleChangePassword = async () => {\n    // Validate form before proceeding\n    if (!validateForm()) {\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      // Sanitize inputs before sending to API\n      const sanitizedCurrentPassword = sanitizeInput(currentPassword, 'password');\n      const sanitizedNewPassword = sanitizeInput(newPassword, 'password');\n      \n      debugLog('MBA1234: Password change request with sanitized inputs');\n      \n      await changePassword(sanitizedCurrentPassword, sanitizedNewPassword);\n      setSuccess('Password changed successfully!');\n      \n      // Clear form after successful change\n      setCurrentPassword('');\n      setNewPassword('');\n      setConfirmPassword('');\n      \n      // Navigate back after a short delay\n      setTimeout(() => {\n        navigation.navigate('MyProfile', { initialTab: 'settings_payments' });\n      }, 2000);\n      \n    } catch (error) {\n      debugLog('MBA1234: Error changing password:', error);\n      \n      let errorMessage = 'Failed to change password. Please try again.';\n      if (error.response && error.response.data) {\n        if (typeof error.response.data === 'string') {\n          errorMessage = error.response.data;\n        } else if (error.response.data.error) {\n          errorMessage = error.response.data.error;\n        } else if (error.response.data.detail) {\n          errorMessage = error.response.data.detail;\n        }\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleForgotPassword = () => {\n    navigation.navigate('ResetPassword');\n  };\n\n  const styles = createStyles(contextScreenWidth, isCollapsed);\n\n  return (\n    <View style={styles.container}>\n      <SafeAreaView style={styles.safeArea}>\n        <View style={styles.content}>\n          <TouchableOpacity onPress={() => navigation.navigate('MyProfile', { initialTab: 'settings_payments' })} style={styles.backButton}>\n            <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.text} />\n            <Text style={styles.backText}>Change Password</Text>\n          </TouchableOpacity>\n          \n          <View style={styles.card}>\n            <Text style={styles.title}>Change Password</Text>\n            \n            <View style={styles.inputContainer}>\n              <TextInput\n                style={[styles.input, currentPasswordError ? styles.errorInput : null]}\n                placeholder=\"Current Password\"\n                value={currentPassword}\n                onChangeText={handleCurrentPasswordChange}\n                secureTextEntry={!showCurrentPassword}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              <TouchableOpacity\n                style={styles.eyeIcon}\n                onPress={() => setShowCurrentPassword(!showCurrentPassword)}\n              >\n                <MaterialCommunityIcons\n                  name={showCurrentPassword ? \"eye-off\" : \"eye\"}\n                  size={20}\n                  color={theme.colors.placeHolderText}\n                />\n              </TouchableOpacity>\n              {currentPasswordError ? <Text style={styles.errorText}>{currentPasswordError}</Text> : null}\n            </View>\n\n            <View style={styles.inputContainer}>\n              <TextInput\n                style={[styles.input, newPasswordError ? styles.errorInput : null]}\n                placeholder=\"New Password\"\n                value={newPassword}\n                onChangeText={handleNewPasswordChange}\n                secureTextEntry={!showNewPassword}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              <TouchableOpacity\n                style={styles.eyeIcon}\n                onPress={() => setShowNewPassword(!showNewPassword)}\n              >\n                <MaterialCommunityIcons\n                  name={showNewPassword ? \"eye-off\" : \"eye\"}\n                  size={20}\n                  color={theme.colors.placeHolderText}\n                />\n              </TouchableOpacity>\n              {newPasswordError ? <Text style={styles.errorText}>{newPasswordError}</Text> : null}\n            </View>\n\n            <View style={styles.inputContainer}>\n              <TextInput\n                style={[styles.input, confirmPasswordError ? styles.errorInput : null]}\n                placeholder=\"Confirm New Password\"\n                value={confirmPassword}\n                onChangeText={handleConfirmPasswordChange}\n                secureTextEntry={!showConfirmPassword}\n                placeholderTextColor={theme.colors.placeHolderText}\n              />\n              <TouchableOpacity\n                style={styles.eyeIcon}\n                onPress={() => setShowConfirmPassword(!showConfirmPassword)}\n              >\n                <MaterialCommunityIcons\n                  name={showConfirmPassword ? \"eye-off\" : \"eye\"}\n                  size={20}\n                  color={theme.colors.placeHolderText}\n                />\n              </TouchableOpacity>\n              {confirmPasswordError ? <Text style={styles.errorText}>{confirmPasswordError}</Text> : null}\n            </View>\n\n            {error ? <Text style={styles.errorText}>{error}</Text> : null}\n            {success ? <Text style={styles.successText}>{success}</Text> : null}\n\n            <CustomButton \n              title=\"Change Password\" \n              onPress={handleChangePassword}\n              disabled={loading}\n              style={styles.button}\n            />\n            \n            {loading && <ActivityIndicator size=\"large\" color={theme.colors.primary} style={styles.loader} />}\n\n            <TouchableOpacity onPress={handleForgotPassword} style={styles.forgotPasswordButton}>\n              <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </SafeAreaView>\n    </View>\n  );\n};\n\nconst createStyles = (screenWidth, isCollapsed) => StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    marginLeft: screenWidth > 900 ? (isCollapsed ? 70 : 250) : 0,\n    transition: 'margin-left 0.3s ease',\n  },\n  safeArea: {\n    flex: 1,\n    paddingTop: Platform.OS === 'android' ? StatusBar.currentHeight : 0,\n  },\n  content: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  backButton: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  backText: {\n    marginLeft: 8,\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n  },\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 12,\n    padding: 40,\n    width: '100%',\n    maxWidth: 400,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 8,\n    elevation: 5,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: '600',\n    color: theme.colors.text,\n    textAlign: 'center',\n    marginBottom: 30,\n  },\n  inputContainer: {\n    position: 'relative',\n    marginBottom: 20,\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 15,\n    fontSize: 16,\n    color: theme.colors.text,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    paddingRight: 50,\n  },\n  eyeIcon: {\n    position: 'absolute',\n    right: 15,\n    top: 15,\n    padding: 5,\n  },\n  button: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 15,\n    fontSize: 14,\n  },\n  successText: {\n    color: theme.colors.success || '#4CAF50',\n    textAlign: 'center',\n    marginBottom: 15,\n    fontSize: 14,\n  },\n  loader: {\n    marginTop: 10,\n  },\n  forgotPasswordButton: {\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  forgotPasswordText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default ChangePassword;\n","import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, TextInput } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { SERVICE_TYPES } from '../data/mockData';\n\nconst ServiceTypeSelect = ({ value, onChange }) => {\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [filteredServices, setFilteredServices] = useState([]);\n\n  const handleTextChange = (text) => {\n    onChange(text);\n    if (text.length > 0) {\n      const filtered = SERVICE_TYPES.filter(service => \n        service.toLowerCase().includes(text.toLowerCase())\n      );\n      setFilteredServices(filtered);\n      setShowSuggestions(true);\n    } else {\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleSelectService = (service) => {\n    onChange(service);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <View style={styles.container}>\n      <TextInput\n        style={styles.input}\n        placeholder=\"Search services...\"\n        value={value}\n        onChangeText={handleTextChange}\n        onFocus={() => value.length > 0 && setShowSuggestions(true)}\n        onBlur={() => {\n          // Delay hiding suggestions to allow for suggestion selection\n          setTimeout(() => {\n            setShowSuggestions(false);\n          }, 150);\n        }}\n      />\n      {showSuggestions && (\n        <View style={styles.suggestionsWrapper}>\n          <ScrollView \n            style={styles.suggestionsContainer}\n            keyboardShouldPersistTaps=\"always\"\n            nestedScrollEnabled={true}\n          >\n            {filteredServices.map((service, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.suggestionItem}\n                onPress={() => handleSelectService(service)}\n              >\n                <Text>{service}</Text>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: '100%',\n    position: 'relative',\n    marginRight: theme.spacing.medium,\n    marginBottom: theme.spacing.medium,\n    zIndex: 1000,\n  },\n  input: {\n    height: 48,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    paddingHorizontal: theme.spacing.medium,\n    backgroundColor: theme.colors.surface,\n    width: '100%',\n  },\n  suggestionsWrapper: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    maxHeight: 200,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 8,\n    zIndex: 1000,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  suggestionsContainer: {\n    flex: 1,\n  },\n  suggestionItem: {\n    padding: theme.spacing.medium,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n});\n\nexport default ServiceTypeSelect; ","import React, { useState, useRef, useCallback, useContext, useEffect } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Platform, TextInput, ScrollView, Switch, Modal } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport Slider from '@react-native-community/slider';\nimport { debounce } from 'lodash';\nimport { GENERAL_CATEGORIES } from '../data/mockData';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport ServiceTypeSelect from './ServiceTypeSelect';\nimport { searchProfessionals } from '../api/API';\n\n// All available animal types from CategorySelectionStep\nconst ALL_ANIMAL_TYPES = [\n  // Farm animals\n  'Horse', 'Cow', 'Sheep', 'Goat', 'Pig',\n  // Domestic\n  'Dogs', 'Cats', 'Bird', 'Rabbit', 'Hamster',\n  // Reptiles\n  'Snake', 'Lizard', 'Turtle', 'Gecko', 'Chameleon',\n  // Aquatic\n  'Fish', 'Frog', 'Newt', 'Axolotl',\n  // Invertebrates\n  'Spider', 'Scorpion', 'Crab', 'Snail', 'Millipede'\n];\n\n// Supported locations for MVP launch\nconst SUPPORTED_LOCATIONS = [\n  // Denver Metro Area\n//   { display: \"Denver, Colorado\", city: \"Denver\", state: \"Colorado\", zips: [\"80201\", \"80202\", \"80203\", \"80204\", \"80205\", \"80206\", \"80207\", \"80208\", \"80209\", \"80210\", \"80211\", \"80212\", \"80213\", \"80214\", \"80215\", \"80216\", \"80217\", \"80218\", \"80219\", \"80220\", \"80221\", \"80222\", \"80223\", \"80224\", \"80225\", \"80226\", \"80227\", \"80228\", \"80229\", \"80230\", \"80231\", \"80232\", \"80233\", \"80234\", \"80235\", \"80236\", \"80237\", \"80238\", \"80239\", \"80246\", \"80247\", \"80248\", \"80249\", \"80250\", \"80251\", \"80252\", \"80256\", \"80257\", \"80258\", \"80259\", \"80260\", \"80261\", \"80262\", \"80263\", \"80264\", \"80265\", \"80266\", \"80271\", \"80273\", \"80274\", \"80279\", \"80280\", \"80281\", \"80290\", \"80291\", \"80293\", \"80294\", \"80295\", \"80299\"] },\n//   { display: \"Aurora, Colorado\", city: \"Aurora\", state: \"Colorado\", zips: [\"80010\", \"80011\", \"80012\", \"80013\", \"80014\", \"80015\", \"80016\", \"80017\", \"80018\", \"80019\", \"80040\", \"80041\", \"80042\", \"80044\", \"80045\", \"80046\", \"80047\"] },\n//   { display: \"Lakewood, Colorado\", city: \"Lakewood\", state: \"Colorado\", zips: [\"80214\", \"80215\", \"80226\", \"80227\", \"80228\", \"80232\", \"80401\"] },\n//   { display: \"Thornton, Colorado\", city: \"Thornton\", state: \"Colorado\", zips: [\"80023\", \"80229\", \"80233\", \"80241\"] },\n//   { display: \"Arvada, Colorado\", city: \"Arvada\", state: \"Colorado\", zips: [\"80001\", \"80002\", \"80003\", \"80004\", \"80005\", \"80006\", \"80007\", \"80403\"] },\n//   { display: \"Westminster, Colorado\", city: \"Westminster\", state: \"Colorado\", zips: [\"80003\", \"80020\", \"80021\", \"80030\", \"80031\", \"80234\"] },\n//   { display: \"Centennial, Colorado\", city: \"Centennial\", state: \"Colorado\", zips: [\"80112\", \"80121\", \"80122\", \"80016\"] },\n  \n  // Colorado Springs Area\n  { display: \"Colorado Springs, Colorado\", city: \"Colorado Springs\", state: \"Colorado\", zips: [\"80901\", \"80902\", \"80903\", \"80904\", \"80905\", \"80906\", \"80907\", \"80908\", \"80909\", \"80910\", \"80911\", \"80912\", \"80913\", \"80914\", \"80915\", \"80916\", \"80917\", \"80918\", \"80919\", \"80920\", \"80921\", \"80922\", \"80923\", \"80924\", \"80925\", \"80926\", \"80927\", \"80928\", \"80929\", \"80930\", \"80931\", \"80932\", \"80933\", \"80934\", \"80935\", \"80936\", \"80937\", \"80938\", \"80939\", \"80941\", \"80942\", \"80946\", \"80947\", \"80949\", \"80950\", \"80951\", \"80960\", \"80962\", \"80970\", \"80977\", \"80995\", \"80997\"] },\n  \n  // Boulder Area\n//   { display: \"Boulder, Colorado\", city: \"Boulder\", state: \"Colorado\", zips: [\"80301\", \"80302\", \"80303\", \"80304\", \"80305\", \"80309\", \"80310\", \"80314\"] },\n  \n  // Fort Collins Area\n//   { display: \"Fort Collins, Colorado\", city: \"Fort Collins\", state: \"Colorado\", zips: [\"80521\", \"80522\", \"80523\", \"80524\", \"80525\", \"80526\", \"80527\", \"80528\"] },\n  \n  // Pueblo Area\n//   { display: \"Pueblo, Colorado\", city: \"Pueblo\", state: \"Colorado\", zips: [\"81001\", \"81002\", \"81003\", \"81004\", \"81005\", \"81006\", \"81007\", \"81008\", \"81009\", \"81010\", \"81011\", \"81012\"] }\n];\n\n// Create a flat list of all searchable items (cities and zip codes)\nconst getAllSearchableLocations = () => {\n  const searchableItems = [];\n  \n  SUPPORTED_LOCATIONS.forEach(location => {\n    // Add the city\n    searchableItems.push({\n      display: location.display,\n      searchText: `${location.city}, ${location.state}`,\n      type: 'city'\n    });\n    \n    // Add all zip codes for this city\n    location.zips.forEach(zip => {\n      searchableItems.push({\n        display: `${zip}, ${location.city}, ${location.state}`,\n        searchText: zip,\n        type: 'zip'\n      });\n    });\n  });\n  \n  return searchableItems;\n};\n\nconst ALL_SEARCHABLE_LOCATIONS = getAllSearchableLocations();\n\n// Helper function to check if a location is supported\nconst isLocationSupported = (text) => {\n  if (!text) return false;\n  \n  const normalizedText = text.toLowerCase();\n  return ALL_SEARCHABLE_LOCATIONS.some(location => \n    location.display.toLowerCase().includes(normalizedText) || \n    location.searchText.toLowerCase().includes(normalizedText)\n  );\n};\n\nconst generalCategoriesData = GENERAL_CATEGORIES.map(category => ({\n  label: category,\n  value: category.toLowerCase().replace(/\\s+/g, '-')\n}));\n\nconst SearchRefiner = ({ onFiltersChange, onShowProfessionals, isMobile, onSearchResults, initialFilters }) => {\n  const [location, setLocation] = useState(initialFilters?.location || '');\n  const [locationSuggestions, setLocationSuggestions] = useState([]);\n  const [service, setService] = useState(initialFilters?.service_query || '');\n  const [selectedAnimals, setSelectedAnimals] = useState(initialFilters?.animal_types || []);\n  const [overnightService, setOvernightService] = useState(initialFilters?.overnight_service || false);\n  const [priceRange, setPriceRange] = useState(initialFilters?.price_max || 200);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n  const [verifiedOnly, setVerifiedOnly] = useState(false);\n  const [insuredOnly, setInsuredOnly] = useState(false);\n  const [filterBackgroundChecked, setFilterBackgroundChecked] = useState(initialFilters?.filter_background_checked || false);\n  const [filterInsured, setFilterInsured] = useState(initialFilters?.filter_insured || false);\n  const [filterElitePro, setFilterElitePro] = useState(initialFilters?.filter_elite_pro || false);\n  const [showOtherAnimalInput, setShowOtherAnimalInput] = useState(false);\n  const [otherAnimalSearch, setOtherAnimalSearch] = useState('');\n  const [otherAnimalSuggestions, setOtherAnimalSuggestions] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const { screenWidth, isSignedIn } = useContext(AuthContext);\n\n  // Add logging for location state changes\n  useEffect(() => {\n    debugLog('MBA23o4iuv59', 'Location state changed:', location);\n  }, [location]);\n\n  // Add logging for location suggestions changes\n  useEffect(() => {\n    debugLog('MBA23o4iuv59', 'Location suggestions changed:', {\n      count: locationSuggestions.length,\n      suggestions: locationSuggestions\n    });\n  }, [locationSuggestions]);\n\n  // Update state when initialFilters change\n  React.useEffect(() => {\n    if (initialFilters) {\n      debugLog('MBA23o4iuv59', 'Initial filters updated:', initialFilters);\n      setLocation(initialFilters.location || '');\n      setService(initialFilters.service_query || '');\n      setSelectedAnimals(initialFilters.animal_types || []);\n      setOvernightService(initialFilters.overnight_service || false);\n      setPriceRange(initialFilters.price_max || 200);\n      setFilterBackgroundChecked(initialFilters.filter_background_checked || false);\n      setFilterInsured(initialFilters.filter_insured || false);\n      setFilterElitePro(initialFilters.filter_elite_pro || false);\n    }\n  }, [initialFilters]);\n\n  // Create styles function that takes context variables as parameters\n  const createStyles = (isSignedIn, screenWidth) => StyleSheet.create({\n    container: {\n      padding: theme.spacing.medium,\n      backgroundColor: theme.colors.surface,\n      height: '100%',\n      width: '100%',\n      overflow: 'visible',\n      // Add top padding when not signed in or on mobile (screenWidth <= 1200)\n      paddingTop: (!isSignedIn || screenWidth <= 1200) ? theme.spacing.medium : theme.spacing.medium,\n    },\n    header: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: theme.spacing.xlarge,\n      gap: theme.spacing.small,\n    },\n    title: {\n      fontSize: theme.fontSizes.xlarge,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    section: {\n      marginBottom: theme.spacing.xlarge,\n      position: 'relative',\n    },\n    label: {\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '500',\n      color: theme.colors.text,\n      marginVertical: theme.spacing.small,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    dropdown: {\n      height: 48,\n      backgroundColor: theme.colors.background,\n      borderRadius: 8,\n      padding: theme.spacing.medium,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n    },\n    locationInputWrapper: {\n      position: 'relative',\n      marginBottom: theme.spacing.small,\n      zIndex: 1100,\n    },\n    locationInput: {\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      paddingHorizontal: theme.spacing.medium,\n      backgroundColor: theme.colors.background,\n      fontSize: theme.fontSizes.medium,\n      zIndex: 1101,\n    },\n    modalBackdrop: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      backgroundColor: 'transparent',\n      zIndex: 1099,\n    },\n    suggestionsWrapper: {\n      position: 'absolute',\n      top: '100%',\n      left: 0,\n      right: 0,\n      maxHeight: 200,\n      backgroundColor: theme.colors.background,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      zIndex: 1102,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n    suggestionsContainer: {\n      flex: 1,\n    },\n    suggestionItem: {\n      padding: theme.spacing.medium,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.border,\n    },\n    suggestionItemNotSupported: {\n      backgroundColor: theme.colors.background,\n    },\n    suggestionText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    suggestionTextNotSupported: {\n      color: theme.colors.placeholderText,\n      fontStyle: 'italic',\n    },\n    suggestionType: {\n      fontSize: theme.fontSizes.small,\n      color: theme.colors.placeholderText,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    datePickersContainer: {\n      flexDirection: 'column',\n      gap: theme.spacing.medium,\n      marginRight: 16,\n      zIndex: 500,\n    },\n    datePickerWrapper: {\n      width: '100%',\n    },\n    dateLabel: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      marginBottom: 8,\n      fontFamily: theme.fonts.regular.fontFamily,\n      fontWeight: '500',\n    },\n    dateInput: {\n      height: 48,\n      backgroundColor: theme.colors.background,\n      borderRadius: 8,\n      padding: theme.spacing.medium,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      fontSize: theme.fontSizes.medium,\n    },\n    priceRangeContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: theme.spacing.medium,\n      marginTop: theme.spacing.small,\n    },\n    slider: {\n      flex: 1,\n      height: 48,\n      marginHorizontal: theme.spacing.medium,\n    },\n    priceText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n      minWidth: 50,\n    },\n    selectedText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      fontWeight: '500',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    placeholderText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.placeholderText,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    dropdownContainer: {\n      backgroundColor: theme.colors.background,\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      overflow: 'hidden',\n    },\n    dropdownItem: {\n      padding: theme.spacing.medium,\n    },\n    dropdownItemSelected: {\n      backgroundColor: theme.colors.surface,\n      borderWidth: 1,\n      borderColor: theme.colors.primary,\n      borderRadius: 8,\n      margin: 4,\n    },\n    dropdownItemText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    dropdownItemTextSelected: {\n      color: theme.colors.primary,\n      fontWeight: '500',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    personButton: {\n      padding: theme.spacing.small,\n      borderRadius: 8,\n      marginLeft: 'auto',\n    },\n    showProfessionalsButton: {\n      backgroundColor: theme.colors.primary,\n      padding: theme.spacing.medium,\n      borderRadius: 8,\n      alignItems: 'center',\n      marginTop: theme.spacing.large,\n    },\n    showProfessionalsText: {\n      color: theme.colors.whiteText,\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '600',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    locationContainer: {\n      flexDirection: 'column',\n      width: '100%',\n      gap: theme.spacing.small,\n      zIndex: 1100,\n      position: 'relative',\n    },\n    useLocationButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: theme.spacing.small,\n      backgroundColor: theme.colors.surface,\n      borderRadius: 8,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      gap: 4,\n      alignSelf: 'flex-start',\n    },\n    useLocationText: {\n      color: theme.colors.text,\n      fontSize: theme.fontSizes.small,\n    },\n    input: {\n      height: 48,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      paddingHorizontal: theme.spacing.medium,\n      backgroundColor: theme.colors.surface,\n    },\n    animalTypesContainer: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: theme.spacing.small,\n      marginTop: theme.spacing.small,\n      marginBottom: theme.spacing.medium,\n      zIndex: 800,\n    },\n    animalTypeButton: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: theme.spacing.small,\n      backgroundColor: theme.colors.surface,\n      borderRadius: 20,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      gap: 4,\n    },\n    animalTypeButtonSelected: {\n      backgroundColor: theme.colors.primary,\n      borderColor: theme.colors.primary,\n    },\n    animalTypeLabel: {\n      color: theme.colors.text,\n      fontSize: theme.fontSizes.small,\n    },\n    animalTypeLabelSelected: {\n      color: theme.colors.whiteText,\n    },\n    switchContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: Platform.OS === 'web' ? 'space-between' : 'flex-start',\n      marginVertical: theme.spacing.small,\n      gap: theme.spacing.medium,\n      zIndex: 700,\n    },\n    priceContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: theme.spacing.small,\n      zIndex: 600,\n    },\n    priceLabel: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      minWidth: 50,\n    },\n    checkboxContainer: {\n      marginTop: theme.spacing.medium,\n      gap: theme.spacing.small,\n      zIndex: 400,\n    },\n    checkboxRow: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: theme.spacing.small,\n    },\n    checkbox: {\n      width: 24,\n      height: 24,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 4,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: theme.colors.surface,\n    },\n    checkboxChecked: {\n      backgroundColor: theme.colors.primary,\n      borderColor: theme.colors.primary,\n    },\n    checkboxLabel: {\n      flex: 1,\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n    },\n    badgeFilterRow: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      gap: theme.spacing.small,\n    },\n    badgeIcon: {\n      marginRight: 4,\n    },\n    headerButtons: {\n      flexDirection: 'row',\n      gap: theme.spacing.small,\n    },\n    iconButton: {\n      padding: theme.spacing.small,\n      borderRadius: 8,\n    },\n    checkboxLabelContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'space-between',\n      paddingRight: theme.spacing.small,\n    },\n    searchButton: {\n      backgroundColor: theme.colors.primary,\n      padding: theme.spacing.medium,\n      borderRadius: 8,\n      alignItems: 'center',\n      marginTop: theme.spacing.large,\n      marginBottom: theme.spacing.large,\n    },\n    searchButtonText: {\n      color: theme.colors.whiteText,\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '600',\n    },\n    searchButtonDisabled: {\n      backgroundColor: theme.colors.border,\n      opacity: 0.6,\n    },\n    otherAnimalInputWrapper: {\n      backgroundColor: theme.colors.background,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      marginTop: theme.spacing.small,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n    otherAnimalHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      padding: theme.spacing.medium,\n    },\n    otherAnimalTitle: {\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '600',\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    closeButton: {\n      padding: theme.spacing.small,\n      borderRadius: 8,\n    },\n    animalInputContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginHorizontal: theme.spacing.medium,\n      marginBottom: theme.spacing.small,\n    },\n    animalInput: {\n      flex: 1,\n      height: 48,\n      borderWidth: 0,\n      borderRadius: 8,\n      paddingHorizontal: theme.spacing.medium,\n      backgroundColor: theme.colors.background,\n      fontSize: theme.fontSizes.medium,\n    },\n    addAnimalButton: {\n      backgroundColor: theme.colors.primary,\n      paddingVertical: 8,\n      paddingHorizontal: 16,\n      borderRadius: 8,\n      marginLeft: theme.spacing.small,\n    },\n    addAnimalButtonText: {\n      color: theme.colors.whiteText,\n      fontWeight: '600',\n      fontSize: theme.fontSizes.small,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    animalSuggestionsWrapper: {\n      flex: 1,\n    },\n    animalSuggestionsContainer: {\n      flex: 1,\n    },\n    animalSuggestionItem: {\n      padding: theme.spacing.medium,\n      borderBottomWidth: 1,\n      borderBottomColor: theme.colors.border,\n    },\n    animalSuggestionText: {\n      fontSize: theme.fontSizes.medium,\n      color: theme.colors.text,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    animalSelectionWrapper: {\n      flexDirection: 'column',\n      gap: theme.spacing.small,\n    },\n    selectedAnimalsContainer: {\n      marginTop: theme.spacing.medium,\n      padding: theme.spacing.medium,\n      backgroundColor: theme.colors.background,\n      borderRadius: 8,\n    },\n    selectedAnimalsLabel: {\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '500',\n      color: theme.colors.text,\n      marginBottom: theme.spacing.small,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    selectedAnimalsList: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      gap: theme.spacing.small,\n    },\n    selectedAnimalTag: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      padding: theme.spacing.small,\n      backgroundColor: theme.colors.primary,\n      borderRadius: 8,\n      gap: theme.spacing.small,\n    },\n    selectedAnimalText: {\n      color: theme.colors.whiteText,\n      fontSize: theme.fontSizes.medium,\n      fontWeight: '500',\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    modalOverlay: {\n      flex: 1,\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      justifyContent: 'flex-start',\n    },\n    modalSuggestionsWrapper: {\n      position: 'absolute',\n      left: theme.spacing.medium,\n      right: theme.spacing.medium,\n      maxHeight: 200,\n      backgroundColor: theme.colors.background,\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n      borderRadius: 8,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n      zIndex: 1200,\n    },\n  });\n\n  // Create styles using current context values\n  const styles = createStyles(isSignedIn, screenWidth);\n\n  // Create a new simple location input component\n  const LocationInputSimple = ({ value, onChange }) => {\n    const [inputValue, setInputValue] = useState(value);\n    const [suggestions, setSuggestions] = useState([]);\n    const [isFocused, setIsFocused] = useState(false);\n    const inputRef = useRef(null);\n    const suggestionsRef = useRef(null);\n    const containerRef = useRef(null);\n    \n    // Update internal value when prop changes\n    useEffect(() => {\n      debugLog('MBA23o4iuv59', 'Value prop changed:', value);\n      setInputValue(value);\n    }, [value]);\n    \n    // Add click outside handler for web\n    useEffect(() => {\n      if (Platform.OS === 'web') {\n        const handleClickOutside = (event) => {\n          // Check if the click is outside both the input container and suggestions\n          const isOutsideContainer = containerRef.current && !containerRef.current.contains(event.target);\n          \n          debugLog('MBA23o4iuv59', 'Click detected', { \n            isOutsideContainer,\n            hasSuggestions: suggestions.length > 0,\n            isFocused\n          });\n          \n          if (isOutsideContainer && isFocused) {\n            debugLog('MBA23o4iuv59', 'Click outside detected, closing dropdown');\n            setIsFocused(false);\n            setSuggestions([]);\n          }\n        };\n        \n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n          document.removeEventListener('mousedown', handleClickOutside);\n        };\n      }\n    }, [isFocused, suggestions.length]);\n    \n    // Log component state\n    useEffect(() => {\n      debugLog('MBA23o4iuv59', 'Component state:', { \n        inputValue, \n        suggestionsCount: suggestions.length,\n        isFocused\n      });\n    }, [inputValue, suggestions, isFocused]);\n    \n    const handleTextChange = (text) => {\n      debugLog('MBA23o4iuv59', 'Text input changed:', text);\n      setInputValue(text);\n      \n      // Search for locations\n      if (text.length < 1) {\n        // Show all supported locations when input is empty\n        debugLog('MBA23o4iuv59', 'Empty input, showing all supported locations');\n        \n        // Get the first few supported locations to show as suggestions\n        const defaultSuggestions = ALL_SEARCHABLE_LOCATIONS\n          .filter(location => location.type === 'city')  // Only show cities in the default list\n          .slice(0, 5);  // Limit to 5 results\n        \n        setSuggestions(defaultSuggestions);\n      } else {\n        // Search through supported locations\n        const filteredLocations = ALL_SEARCHABLE_LOCATIONS.filter(location =>\n          location.searchText.toLowerCase().includes(text.toLowerCase()) ||\n          location.display.toLowerCase().includes(text.toLowerCase())\n        ).slice(0, 5); // Limit to 5 results\n        \n        debugLog('MBA23o4iuv59', 'Search results:', { \n          query: text, \n          resultsCount: filteredLocations.length\n        });\n        \n        // If no matches found, show \"not supported\" message\n        if (filteredLocations.length === 0) {\n          debugLog('MBA23o4iuv59', 'Location not supported:', text);\n          setSuggestions([{\n            display: `We're not available in \"${text}\" yet - coming soon!`,\n            searchText: text,\n            type: 'not_supported'\n          }]);\n        } else {\n          setSuggestions(filteredLocations);\n        }\n      }\n    };\n    \n    // Direct selection handler without complex state management\n    const selectLocation = (location) => {\n      debugLog('MBA23o4iuv59', 'DIRECT SELECTION of location:', location);\n      \n      if (location.type !== 'not_supported') {\n        // Update both local and parent state immediately\n        const newValue = location.display;\n        setInputValue(newValue);\n        onChange(newValue);\n        debugLog('MBA23o4iuv59', 'Set location value to:', newValue);\n      }\n      \n      // Always clear suggestions and reset focus\n      setSuggestions([]);\n      setIsFocused(false);\n    };\n\n    return (\n      <View \n        style={styles.locationInputWrapper}\n        ref={containerRef}\n      >\n        <TextInput\n          ref={inputRef}\n          style={styles.locationInput}\n          placeholder=\"Enter city or zip in Colorado\"\n          value={inputValue}\n          onChangeText={handleTextChange}\n          onFocus={() => {\n            debugLog('MBA23o4iuv59', 'Input focused');\n            setIsFocused(true);\n            \n            if (inputValue.length > 0) {\n              handleTextChange(inputValue);\n            } else {\n              // Show all supported locations when input is empty\n              debugLog('MBA23o4iuv59', 'Empty input on focus, showing all supported locations');\n              \n              // Get the first few supported locations to show as suggestions\n              const defaultSuggestions = ALL_SEARCHABLE_LOCATIONS\n                .filter(location => location.type === 'city')  // Only show cities in the default list\n                .slice(0, 5);  // Limit to 5 results\n              \n              setSuggestions(defaultSuggestions);\n            }\n          }}\n        />\n        \n        {suggestions.length > 0 && isFocused && (\n          <View \n            style={styles.suggestionsWrapper}\n            ref={suggestionsRef}\n          >\n            <ScrollView \n              style={styles.suggestionsContainer}\n              keyboardShouldPersistTaps=\"handled\"\n              nestedScrollEnabled={true}\n            >\n              {suggestions.map((suggestion, index) => (\n                <TouchableOpacity\n                  key={index}\n                  style={[\n                    styles.suggestionItem,\n                    suggestion.type === 'not_supported' && styles.suggestionItemNotSupported\n                  ]}\n                  onPress={() => selectLocation(suggestion)}\n                >\n                  <Text style={[\n                    styles.suggestionText,\n                    suggestion.type === 'not_supported' && styles.suggestionTextNotSupported\n                  ]}>\n                    {suggestion.display}\n                  </Text>\n                  {suggestion.type === 'zip' && (\n                    <Text style={styles.suggestionType}>ZIP Code</Text>\n                  )}\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  const OtherAnimalInput = ({ value, onChange, suggestions, onSuggestionSelect, isVisible, onClose, onAnimalSelect }) => {\n    const animalInputRef = useRef(null);\n    // Add a ref to track whether a suggestion was selected\n    const suggestionSelectedRef = useRef(false);\n    // Add a ref to track if the close button was clicked\n    const closeButtonClickedRef = useRef(false);\n\n    const debouncedSearch = useCallback(\n      debounce((text) => {\n        if (text.length < 1) {\n          onSuggestionSelect([]);\n          return;\n        }\n        \n        const filteredAnimals = ALL_ANIMAL_TYPES.filter(animal =>\n          animal.toLowerCase().includes(text.toLowerCase())\n        );\n        onSuggestionSelect(filteredAnimals);\n      }, 300),\n      [onSuggestionSelect]\n    );\n\n    // Function to handle adding a custom animal\n    const handleAddCustomAnimal = () => {\n      if (value.trim() === '') return;\n      \n      // Add the custom animal\n      onAnimalSelect(value.trim());\n      \n      // Reset input and close\n      onChange('');\n      onSuggestionSelect([]);\n      onClose();\n    };\n\n    // Custom close handler that sets the close flag before calling the original onClose\n    const handleClose = () => {\n      closeButtonClickedRef.current = true;\n      onClose();\n    };\n\n    if (!isVisible) return null;\n\n    return (\n      <View style={styles.otherAnimalInputWrapper}>\n        <View style={styles.otherAnimalHeader}>\n          <Text style={styles.otherAnimalTitle}>Search for animal type</Text>\n          <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n            <MaterialCommunityIcons name=\"close\" size={20} color={theme.colors.text} />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.animalInputContainer}>\n          <TextInput\n            ref={animalInputRef}\n            style={styles.animalInput}\n            placeholder=\"Type animal name (e.g., Snake, Turtle, Horse)\"\n            value={value}\n            onChangeText={(text) => {\n              onChange(text);\n              debouncedSearch(text);\n              // Reset flags when text changes\n              suggestionSelectedRef.current = false;\n              closeButtonClickedRef.current = false;\n            }}\n            onBlur={() => {\n              // Don't add empty values\n              if (value.trim() === '') return;\n              \n              // Delay to allow for suggestion selection before adding custom value\n              setTimeout(() => {\n                // Only add if a suggestion wasn't selected AND close button wasn't clicked\n                if (value.trim() !== '' && !suggestionSelectedRef.current && !closeButtonClickedRef.current) {\n                  handleAddCustomAnimal();\n                }\n                // Reset the flags after processing\n                suggestionSelectedRef.current = false;\n                closeButtonClickedRef.current = false;\n              }, 200);\n            }}\n            autoFocus={true}\n          />\n          {value.trim() !== '' && (\n            <TouchableOpacity \n              style={styles.addAnimalButton} \n              onPress={handleAddCustomAnimal}\n            >\n              <Text style={styles.addAnimalButtonText}>Add</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n        {suggestions.length > 0 && (\n          <View style={styles.animalSuggestionsWrapper}>\n            <ScrollView \n              style={styles.animalSuggestionsContainer}\n              keyboardShouldPersistTaps=\"always\"\n              nestedScrollEnabled={true}\n            >\n              {suggestions.map((animal, index) => (\n                <TouchableOpacity\n                  key={index}\n                  style={styles.animalSuggestionItem}\n                  onPress={() => {\n                    // Mark that a suggestion was selected\n                    suggestionSelectedRef.current = true;\n                    onAnimalSelect(animal);\n                    onChange('');\n                    onSuggestionSelect([]);\n                    onClose();\n                  }}\n                >\n                  <Text style={styles.animalSuggestionText}>{animal}</Text>\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  const AnimalTypeButton = ({ icon, label, selected, onPress }) => (\n    <TouchableOpacity \n      style={[styles.animalTypeButton, selected && styles.animalTypeButtonSelected]} \n      onPress={onPress}\n    >\n      <MaterialCommunityIcons \n        name={icon} \n        size={24} \n        color={selected ? theme.colors.whiteText : theme.colors.text} \n      />\n      <Text style={[styles.animalTypeLabel, selected && styles.animalTypeLabelSelected]}>\n        {label}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  const handleAnimalSelect = (animal) => {\n    if (selectedAnimals.includes(animal)) {\n      setSelectedAnimals(selectedAnimals.filter(a => a !== animal));\n    } else {\n      setSelectedAnimals([...selectedAnimals, animal]);\n    }\n  };\n\n  const handleOtherAnimalClose = () => {\n    setShowOtherAnimalInput(false);\n    setOtherAnimalSearch('');\n    setOtherAnimalSuggestions([]);\n  };\n\n  const handleSearch = async () => {\n    setIsSearching(true);\n    \n    try {\n      debugLog('MBA9999', 'Starting professional search with filters:', {\n        selectedAnimals,\n        location,\n        service,\n        overnightService,\n        priceRange,\n        filterBackgroundChecked,\n        filterInsured,\n        filterElitePro\n      });\n\n      // Prepare search parameters\n      const searchParams = {\n        animal_types: selectedAnimals,\n        location: location.trim(),\n        service_query: service.trim(),\n        overnight_service: overnightService,\n        price_min: 0,\n        price_max: priceRange,\n        radius_miles: 30,\n        page: 1,\n        page_size: 20,\n        filter_background_checked: filterBackgroundChecked,\n        filter_insured: filterInsured,\n        filter_elite_pro: filterElitePro\n      };\n\n      // Call the search API\n      const results = await searchProfessionals(searchParams);\n      \n      debugLog('MBA9999', 'Search completed successfully:', results);\n\n      // Pass results and search parameters to parent component\n      if (onSearchResults) {\n        onSearchResults(results, searchParams);\n      }\n\n      // Show professionals list\n      if (onShowProfessionals) {\n        onShowProfessionals();\n      }\n\n    } catch (error) {\n      debugLog('MBA9999', 'Search failed:', error);\n      // TODO: Show error toast to user\n      console.error('Search failed:', error);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Refine Search</Text>\n        <TouchableOpacity style={styles.personButton} onPress={onShowProfessionals}>\n          <MaterialCommunityIcons name=\"account-group\" size={24} color={theme.colors.text} />\n        </TouchableOpacity>\n        {isMobile && (\n          <View style={styles.headerButtons}>\n            <TouchableOpacity \n              style={styles.iconButton}\n              onPress={() => {\n                if (onShowProfessionals) {\n                  // Pass a special parameter to indicate we want to switch to map view\n                  onShowProfessionals('map');\n                }\n              }}\n            >\n              <MaterialCommunityIcons name=\"map\" size={24} color={theme.colors.text} />\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n\n      <Text style={styles.label}>I'm looking for services for my:</Text>\n      <View style={styles.animalSelectionWrapper}>\n        <View style={styles.animalTypesContainer}>\n          <AnimalTypeButton\n            icon=\"dog\"\n            label=\"Dogs\"\n            selected={selectedAnimals.includes('Dogs')}\n            onPress={() => handleAnimalSelect('Dogs')}\n          />\n          <AnimalTypeButton\n            icon=\"cat\"\n            label=\"Cats\"\n            selected={selectedAnimals.includes('Cats')}\n            onPress={() => handleAnimalSelect('Cats')}\n          />\n          <TouchableOpacity \n            style={[styles.animalTypeButton, showOtherAnimalInput && styles.animalTypeButtonSelected]} \n            onPress={() => setShowOtherAnimalInput(!showOtherAnimalInput)}\n          >\n            <MaterialCommunityIcons \n              name=\"dots-horizontal\" \n              size={24} \n              color={showOtherAnimalInput ? theme.colors.whiteText : theme.colors.text} \n            />\n            <Text style={[styles.animalTypeLabel, showOtherAnimalInput && styles.animalTypeLabelSelected]}>\n              Other\n            </Text>\n          </TouchableOpacity>\n        </View>\n        \n        {showOtherAnimalInput && (\n          <OtherAnimalInput\n            value={otherAnimalSearch}\n            onChange={setOtherAnimalSearch}\n            suggestions={otherAnimalSuggestions}\n            onSuggestionSelect={setOtherAnimalSuggestions}\n            isVisible={showOtherAnimalInput}\n            onClose={handleOtherAnimalClose}\n            onAnimalSelect={handleAnimalSelect}\n          />\n        )}\n      </View>\n\n      {/* Display selected animals */}\n      {selectedAnimals.length > 0 && (\n        <View style={styles.selectedAnimalsContainer}>\n          <Text style={styles.selectedAnimalsLabel}>Selected animals:</Text>\n          <View style={styles.selectedAnimalsList}>\n            {selectedAnimals.map((animal, index) => (\n              <TouchableOpacity\n                key={index}\n                style={styles.selectedAnimalTag}\n                onPress={() => handleAnimalSelect(animal)}\n              >\n                <Text style={styles.selectedAnimalText}>{animal}</Text>\n                <MaterialCommunityIcons name=\"close\" size={16} color={theme.colors.whiteText} />\n              </TouchableOpacity>\n            ))}\n          </View>\n        </View>\n      )}\n\n      {/* Location Input */}\n      <Text style={styles.label}>Location</Text>\n      <View style={styles.locationContainer}>\n        <LocationInputSimple\n          value={location}\n          onChange={setLocation}\n        />\n        {/* <TouchableOpacity style={[styles.useLocationButton, { marginBottom: 16 }]}>\n          <MaterialCommunityIcons name=\"crosshairs-gps\" size={20} color={theme.colors.text} />\n          <Text style={styles.useLocationText}>Use My Location</Text>\n        </TouchableOpacity> */}\n      </View>\n\n      {/* Service Input */}\n      <Text style={styles.label}>What service do you need? (e.g., Dog Walking, Pet Sitting)</Text>\n      <ServiceTypeSelect\n        value={service}\n        onChange={setService}\n      />\n\n      {/* Overnight Service */}\n      <View style={styles.switchContainer}>\n        <Text style={styles.label}>Overnight Service</Text>\n        <Switch\n          value={overnightService}\n          onValueChange={setOvernightService}\n          trackColor={{ false: theme.colors.border, true: theme.colors.primary }}\n        />\n      </View>\n\n      {/* Price Range */}\n      <Text style={styles.label}>Price Range</Text>\n      <View style={styles.priceContainer}>\n        <Text style={styles.priceLabel}>$0</Text>\n        <Slider\n          style={styles.slider}\n          minimumValue={0}\n          maximumValue={250}\n          value={priceRange}\n          onValueChange={setPriceRange}\n          minimumTrackTintColor={theme.colors.primary}\n          maximumTrackTintColor={theme.colors.border}\n          thumbTintColor={theme.colors.primary}\n          step={1}\n        />\n        <Text style={styles.priceLabel}>${Math.round(priceRange)}</Text>\n      </View>\n\n      {/* Badge Filters */}\n      <Text style={styles.label}>Professional Credentials</Text>\n      <View style={styles.checkboxContainer}>\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={[styles.checkbox, filterBackgroundChecked && styles.checkboxChecked]} \n            onPress={() => setFilterBackgroundChecked(!filterBackgroundChecked)}\n          >\n            {filterBackgroundChecked && <MaterialCommunityIcons name=\"check\" size={16} color={theme.colors.whiteText} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <View style={styles.badgeFilterRow}>\n              <MaterialCommunityIcons name=\"shield-check\" size={16} color=\"#9C27B0\" style={styles.badgeIcon} />\n              <Text style={styles.checkboxLabel}>Background Checked Only</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={[styles.checkbox, filterInsured && styles.checkboxChecked]} \n            onPress={() => setFilterInsured(!filterInsured)}\n          >\n            {filterInsured && <MaterialCommunityIcons name=\"check\" size={16} color={theme.colors.whiteText} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <View style={styles.badgeFilterRow}>\n              <MaterialCommunityIcons name=\"security\" size={16} color=\"#0784C6\" style={styles.badgeIcon} />\n              <Text style={styles.checkboxLabel}>Insured Only</Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={[styles.checkbox, filterElitePro && styles.checkboxChecked]} \n            onPress={() => setFilterElitePro(!filterElitePro)}\n          >\n            {filterElitePro && <MaterialCommunityIcons name=\"check\" size={16} color={theme.colors.whiteText} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <View style={styles.badgeFilterRow}>\n              <MaterialCommunityIcons name=\"medal\" size={16} color=\"#4CAF50\" style={styles.badgeIcon} />\n              <Text style={styles.checkboxLabel}>Elite Pro Only</Text>\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {/* TODO: Add back after MVP launch \n      Date Selection\n      <Text style={styles.label}>Date Range</Text>\n      <View style={styles.datePickersContainer}>\n        <DatePicker\n          label=\"Start Date\"\n          value={startDate}\n          onChange={setStartDate}\n        />\n        <DatePicker\n          label=\"End Date\"\n          value={endDate}\n          onChange={setEndDate}\n        />\n      </View> */}\n\n      {/* TODO: Add back after MVP launch \n      Verification Options\n      <View style={styles.checkboxContainer}>\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setVerifiedOnly(!verifiedOnly)}\n          >\n            {verifiedOnly && <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <Text style={styles.checkboxLabel}>Verified Professionals Only</Text>\n            <Tooltip \n              content=\"Verified professionals have completed our background check and identity verification process.\"\n              position=\"right\"\n            >\n              <MaterialCommunityIcons name=\"help-circle-outline\" size={20} color={theme.colors.text} />\n            </Tooltip>\n          </View>\n      </View>\n\n        <View style={styles.checkboxRow}>\n          <TouchableOpacity \n            style={styles.checkbox} \n            onPress={() => setInsuredOnly(!insuredOnly)}\n          >\n            {insuredOnly && <MaterialCommunityIcons name=\"check\" size={20} color={theme.colors.primary} />}\n          </TouchableOpacity>\n          <View style={styles.checkboxLabelContainer}>\n            <Text style={styles.checkboxLabel}>Insured Service Providers</Text>\n            <Tooltip \n              content=\"Insured providers maintain current liability insurance coverage for their services.\"\n              position=\"right\"\n            >\n              <MaterialCommunityIcons name=\"help-circle-outline\" size={20} color={theme.colors.text} />\n            </Tooltip>\n          </View>\n        </View>\n      </View> */}\n\n      {/* Search Button - Always show */}\n      <TouchableOpacity \n        style={[styles.searchButton, isSearching && styles.searchButtonDisabled]}\n        onPress={handleSearch}\n        disabled={isSearching}\n      >\n        <Text style={styles.searchButtonText}>\n          {isSearching ? 'Searching...' : 'Search'}\n        </Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default SearchRefiner; ","import React from 'react';\nimport { View, Text, FlatList, StyleSheet, Image, TouchableOpacity, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { getMediaUrl } from '../config/config';\nimport { BACKEND_TO_FRONTEND_TIME_UNIT } from '../data/mockData';\nimport { debugLog } from '../context/AuthContext';\n\nconst ProfessionalCard = ({ professional, index, onPress }) => {\n  // Debug log for unit_of_time mapping\n  if (professional.primary_service?.unit_of_time) {\n    debugLog(\"MBA4001: Unit of time mapping\", {\n      backend_value: professional.primary_service.unit_of_time,\n      frontend_value: BACKEND_TO_FRONTEND_TIME_UNIT[professional.primary_service.unit_of_time],\n      professional_name: professional.name\n    });\n  }\n  \n  // Debug log for review data\n  if (professional.reviews) {\n    debugLog(\"MBA4001: Professional reviews data\", {\n      professional_name: professional.name,\n      has_reviews: professional.reviews.average_rating > 0,\n      average_rating: professional.reviews.average_rating,\n      review_count: professional.reviews.review_count,\n      has_review_text: !!professional.reviews.latest_highest_review_text,\n      has_author_profile_pic: !!professional.reviews.latest_review_author_profile_pic,\n      has_reviewer_profile_pic: !!professional.reviews.reviewer_profile_picture,\n      author_pic_url: professional.reviews.latest_review_author_profile_pic || 'none',\n      reviewer_pic_url: professional.reviews.reviewer_profile_picture || 'none'\n    });\n  }\n  \n  const handlePress = () => {\n    if (onPress) {\n      onPress();\n    }\n  };\n\n  // Render either profile picture or fallback icon\n  const renderProfileImage = () => {\n    if (professional.profile_picture_url) {\n      return (\n        <Image \n          source={{ uri: getMediaUrl(professional.profile_picture_url) }}\n          style={styles.profileImage}\n        />\n      );\n    }\n    \n    // Return fallback icon inside a circular view with the same dimensions\n    return (\n      <View style={[styles.profileImage, styles.fallbackIconContainer]}>\n        <MaterialCommunityIcons \n          name=\"account\" \n          size={50} \n          color={theme.colors.textSecondary} \n        />\n      </View>\n    );\n  };\n\n  // Check if we should display reviews\n  const hasReviews = professional.reviews && professional.reviews.average_rating > 0;\n  const hasBadges = professional.badges?.is_background_checked || professional.badges?.is_insured || professional.badges?.is_elite_pro;\n\n  return (\n    <TouchableOpacity style={styles.listItem} onPress={handlePress}>\n      <View style={styles.cardContent}>\n        <View style={styles.leftSection}>\n          {renderProfileImage()}\n        </View>\n        \n        <View style={styles.mainContent}>\n          <View style={styles.header}>\n            <View style={styles.nameSection}>\n              {/* TODO: styling naming is messed up here, we should fix it. */}\n              <Text style={styles.name}>{index + 1}. {professional.primary_service?.service_name || 'Various Services'}</Text>\n              <Text style={styles.location}>{professional.name}</Text>\n              <Text style={styles.distance}>{professional.location}</Text>\n            </View>\n            \n            <View style={styles.priceSection}>\n              <Text style={styles.fromText}>from</Text>\n              <Text style={styles.amount}>\n                <Text style={styles.dollarSign}>$</Text>\n                {professional.primary_service ? professional.primary_service.price_per_visit : 'N/A'}\n              </Text>\n              <Text style={styles.perNight}>\n                {professional.primary_service ? \n                  (BACKEND_TO_FRONTEND_TIME_UNIT[professional.primary_service.unit_of_time] || professional.primary_service.unit_of_time) : \n                  'per visit'}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </View>\n\n      {(hasReviews || hasBadges) && (\n        <View style={[styles.reviewSection]}>\n          {hasReviews && (\n            <View style={[styles.ratingContainer, {marginBottom: hasBadges ? theme.spacing.small : 0}]}>\n              <MaterialCommunityIcons name=\"star\" size={16} color=\"#FFD700\" />\n              <Text style={styles.ratingText}>{professional.reviews.average_rating.toFixed(2)}</Text>\n              <Text style={styles.dot}> • </Text>\n              <Text style={styles.reviews}>{professional.reviews.review_count} reviews</Text>\n            </View>\n          )}\n          \n          {hasBadges && (\n            <View style={styles.badgesContainer}>\n              {professional.badges?.is_background_checked && (\n                <View style={[styles.badge, styles.backgroundCheckedBadge]}>\n                  <MaterialCommunityIcons name=\"shield-check\" size={14} color=\"#9C27B0\" />\n                  <Text style={[styles.badgeText, styles.backgroundCheckedBadgeText]}>Background Checked</Text>\n                </View>\n              )}\n              {professional.badges?.is_insured && (\n                <View style={[styles.badge, styles.insuredBadge]}>\n                  <MaterialCommunityIcons name=\"security\" size={14} color=\"#0784C6\" />\n                  <Text style={[styles.badgeText, styles.insuredBadgeText]}>Insured</Text>\n                </View>\n              )}\n              {professional.badges?.is_elite_pro && (\n                <View style={[styles.badge, styles.eliteProBadge]}>\n                  <MaterialCommunityIcons name=\"medal\" size={14} color=\"#4CAF50\" />\n                  <Text style={[styles.badgeText, styles.eliteProBadgeText]}>Elite Pro</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nconst ProfessionalList = ({ professionals, onLoadMore, onProfessionalSelect, isMobile, filters, onFilterPress, searchParams = null }) => {\n  \n  // Function to generate appropriate empty state message\n  const getEmptyStateMessage = () => {\n    if (!searchParams) {\n      return {\n        title: \"No professionals found\",\n        message: \"Please try adjusting your search criteria.\"\n      };\n    }\n\n    const { animal_types = [], location = '', service_query = '', overnight_service = false } = searchParams;\n    \n    // Check if location is Colorado Springs area\n    const isColoradoSprings = location.toLowerCase().includes('colorado springs') || \n                             location.toLowerCase().includes('colorado') ||\n                             location === '';\n\n    // If no professionals in Colorado Springs area at all\n    if (isColoradoSprings && animal_types.length === 0 && !service_query && !overnight_service) {\n      return {\n        title: \"No professionals in the Colorado Springs area yet!\",\n        message: \"Please come back later when we onboard more professionals to your area.\"\n      };\n    }\n\n    // Build specific message based on search criteria\n    let criteria = [];\n    \n    if (animal_types.length > 0) {\n      const animalText = animal_types.length === 1 ? \n        `${animal_types[0]} care` : \n        `care for ${animal_types.join(', ')}`;\n      criteria.push(animalText);\n    }\n    \n    if (service_query) {\n      criteria.push(`\"${service_query}\" services`);\n    }\n    \n    if (overnight_service) {\n      criteria.push('overnight services');\n    }\n    \n    if (location && !isColoradoSprings) {\n      criteria.push(`in ${location}`);\n    }\n\n    if (criteria.length > 0) {\n      const criteriaText = criteria.join(', ');\n      return {\n        title: `No professionals found with ${criteriaText}`,\n        message: \"Please try adjusting your search parameters or expanding your search area.\"\n      };\n    }\n\n    return {\n      title: \"No professionals found\",\n      message: \"Please try adjusting your search criteria.\"\n    };\n  };\n\n  const renderEmptyState = () => {\n    const emptyState = getEmptyStateMessage();\n    \n    debugLog(\"MBA4001: Showing empty state\", {\n      searchParams,\n      emptyStateTitle: emptyState.title,\n      emptyStateMessage: emptyState.message\n    });\n    \n    return (\n      <View style={styles.emptyStateContainer}>\n        <MaterialCommunityIcons \n          name=\"account-search\" \n          size={80} \n          color={theme.colors.textSecondary} \n        />\n        <Text style={styles.emptyStateTitle}>{emptyState.title}</Text>\n        <Text style={styles.emptyStateMessage}>{emptyState.message}</Text>\n        <TouchableOpacity \n          style={styles.adjustSearchButton}\n          onPress={() => onFilterPress && onFilterPress()}\n        >\n          <Text style={styles.adjustSearchButtonText}>Adjust Search</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  };\n\n  const renderHeader = () => (\n    <View style={[styles.header, {borderBottomWidth: 1, borderBottomColor: theme.colors.border, paddingBottom: theme.spacing.medium}]}>\n      <View style={styles.headerContent}>\n        <Text style={[styles.headerTitle, {paddingTop: theme.spacing.medium}]}>Pet Care Professionals</Text>\n        <View style={styles.filterChips}>\n          {filters?.categories?.map((filter, index) => (\n            <View key={index} style={styles.filterChip}>\n              <Text style={styles.filterChipText}>{filter}</Text>\n            </View>\n          ))}\n        </View>\n      </View>\n      <View style={[styles.headerButtons, {paddingTop: 8}]}>\n        <TouchableOpacity style={styles.filterButton} onPress={onFilterPress}>\n          <MaterialCommunityIcons name=\"filter\" size={24} color={theme.colors.text} />\n        </TouchableOpacity>\n        {isMobile && (\n          <TouchableOpacity \n            style={styles.filterButton} \n            onPress={() => {\n              // Navigate to the map view\n              if (onFilterPress) {\n                // Pass a special parameter to indicate we want to switch to map view\n                onFilterPress('map');\n              }\n            }}\n          >\n            <MaterialCommunityIcons name=\"map\" size={24} color={theme.colors.text} />\n          </TouchableOpacity>\n        )}\n      </View>\n    </View>\n  );\n\n  // If no professionals, show empty state\n  if (!professionals || professionals.length === 0) {\n    return (\n      <View style={styles.container}>\n        {renderHeader()}\n        {renderEmptyState()}\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      {renderHeader()}\n      <FlatList\n        data={professionals}\n        renderItem={({ item, index }) => (\n          <ProfessionalCard \n            professional={item}\n            index={index}\n            onPress={() => onProfessionalSelect(item)}\n          />\n        )}\n        keyExtractor={(item) => item.professional_id.toString()}\n        onEndReached={onLoadMore}\n        onEndReachedThreshold={0.5}\n        contentContainerStyle={styles.listContent}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  listContent: {\n    flexGrow: 1,\n    // padding: theme.spacing.medium,\n  },\n  listItem: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 3,\n    elevation: 3,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    paddingHorizontal: theme.spacing.medium,\n    paddingTop: theme.spacing.medium,\n    paddingBottom: theme.spacing.medium,\n  },\n  leftSection: {\n    marginRight: theme.spacing.medium,\n    justifyContent: 'center',\n  },\n  profileImage: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n  },\n  mainContent: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n  },\n  nameSection: {\n    flex: 1,\n    marginRight: theme.spacing.medium,\n  },\n  name: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  location: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    marginBottom: 2,\n  },\n  distance: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  priceSection: {\n    alignItems: 'flex-end',\n  },\n  fromText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n  },\n  amount: {\n    fontSize: theme.fontSizes.large + 4,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginVertical: 2,\n  },\n  dollarSign: {\n    color: theme.colors.primary,\n  },\n  perNight: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n    maxWidth: 50,\n  },\n  reviewSection: {\n    paddingHorizontal: theme.spacing.medium,\n    paddingBottom: theme.spacing.medium,\n    borderTopWidth: 0,\n    borderTopColor: 'transparent',\n    marginTop: 0,\n  },\n  ratingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: theme.spacing.small,\n  },\n  ratingText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontWeight: '500',\n    marginLeft: 4,\n  },\n  dot: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  reviews: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  repeatOwners: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  bestReviewContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  reviewerImage: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    marginRight: theme.spacing.small,\n  },\n  bestReviewTextContainer: {\n    flex: 1,\n  },\n  bestReview: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontStyle: 'italic',\n  },\n  readMore: {\n    color: theme.colors.primary,\n    fontStyle: 'normal',\n    fontWeight: '500',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    paddingRight: theme.spacing.small,\n    // paddingTop: theme.spacing.medium,\n    backgroundColor: theme.colors.surfaceContrast,\n    \n  },\n  mobileHeaderRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerContent: {\n    flex: 1,\n    marginHorizontal: theme.spacing.medium,\n  },\n  headerTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: theme.spacing.small,\n  },\n  filterChips: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing.small,\n  },\n  filterChip: {\n    backgroundColor: theme.colors.background,\n    paddingHorizontal: theme.spacing.medium,\n    paddingVertical: theme.spacing.small,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  filterChipText: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n  },\n  filterButton: {\n    padding: theme.spacing.small,\n    borderRadius: 8,\n  },\n  headerButtons: {\n    flexDirection: 'row',\n    gap: theme.spacing.small,\n  },\n  emptyStateContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: theme.spacing.large,\n  },\n  emptyStateTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginTop: theme.spacing.medium,\n    marginBottom: theme.spacing.small,\n    textAlign: 'center',\n  },\n  emptyStateMessage: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n    textAlign: 'center',\n    marginBottom: theme.spacing.large,\n    lineHeight: 22,\n  },\n  adjustSearchButton: {\n    paddingHorizontal: theme.spacing.large,\n    paddingVertical: theme.spacing.medium,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n  },\n  adjustSearchButtonText: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    color: theme.colors.whiteText,\n  },\n  fallbackIconContainer: {\n    backgroundColor: theme.colors.background,\n    borderRadius: 40,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  fallbackReviewerIconContainer: {\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  badgesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: theme.spacing.small,\n    marginTop: theme.spacing.small,\n  },\n  badge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 16,\n    backgroundColor: theme.colors.background,\n  },\n  badgeText: {\n    fontSize: 12,\n    color: theme.colors.text,\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  backgroundCheckedBadge: {\n    borderColor: '#9C27B0',\n    backgroundColor: 'rgba(156, 39, 176, 0.1)',\n  },\n  backgroundCheckedBadgeText: {\n    color: '#9C27B0',\n  },\n  insuredBadge: {\n    borderColor: '#0784C6',\n    backgroundColor: 'rgba(7, 132, 198, 0.1)',\n  },\n  insuredBadgeText: {\n    color: '#0784C6',\n  },\n  eliteProBadge: {\n    borderColor: '#4CAF50',\n    backgroundColor: 'rgba(76, 175, 80, 0.1)',\n  },\n  eliteProBadgeText: {\n    color: '#4CAF50',\n  },\n});\n\nexport default ProfessionalList;","import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, Platform, TouchableOpacity } from 'react-native';\nimport { theme } from '../styles/theme';\nimport { BACKEND_TO_FRONTEND_TIME_UNIT } from '../data/mockData';\n\n// Conditional import for react-native-maps (iOS/Android only)\nlet ReactNativeMapView, RNMarker, Callout, PROVIDER_GOOGLE;\nif (Platform.OS !== 'web') {\n  try {\n    const maps = require('react-native-maps');\n    ReactNativeMapView = maps.default || maps.MapView;\n    RNMarker = maps.Marker;\n    Callout = maps.Callout;\n    PROVIDER_GOOGLE = maps.PROVIDER_GOOGLE;\n  } catch (error) {\n    console.warn('Failed to load react-native-maps:', error);\n  }\n}\n\n// Conditional imports for web-only libraries\nlet MapContainer, TileLayer, Marker, Popup, useMap, L;\nif (Platform.OS === 'web') {\n  try {\n    const reactLeaflet = require('react-leaflet');\n    MapContainer = reactLeaflet.MapContainer;\n    TileLayer = reactLeaflet.TileLayer;\n    Marker = reactLeaflet.Marker;\n    Popup = reactLeaflet.Popup;\n    useMap = reactLeaflet.useMap;\n    \n    L = require('leaflet');\n    require('leaflet/dist/leaflet.css');\n  } catch (error) {\n    console.warn('Failed to load Leaflet libraries:', error);\n  }\n}\n\n// Fix for default marker icons in Leaflet (web only)\nif (Platform.OS === 'web' && L) {\n  try {\n    delete L.Icon.Default.prototype._getIconUrl;\n    L.Icon.Default.mergeOptions({\n      iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n      iconUrl: require('leaflet/dist/images/marker-icon.png'),\n      shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n    });\n  } catch (error) {\n    console.warn('Failed to configure Leaflet icons:', error);\n  }\n}\n\nconst MapViewComponent = ({ professionals, onMarkerPress, region, isMobile, onShowServicesModal }) => {\n  if (Platform.OS === 'web') {\n    return (\n      <WebMapComponent\n        professionals={professionals}\n        onMarkerPress={onMarkerPress}\n        region={region}\n        isMobile={isMobile}\n        onShowServicesModal={onShowServicesModal}\n      />\n    );\n  }\n\n  return (\n    <NativeMapComponent\n      professionals={professionals}\n      onMarkerPress={onMarkerPress}\n      region={region}\n      isMobile={isMobile}\n      onShowServicesModal={onShowServicesModal}\n    />\n  );\n};\n\n// Custom marker component that handles hover behavior\nconst HoverMarker = ({ professional, onShowServicesModal }) => {\n  const markerRef = useRef(null);\n  const popupRef = useRef(null);\n\n  // Return null if Leaflet is not available\n  if (!L || !Marker || !Popup) {\n    return null;\n  }\n\n  const MarkerIcon = L.divIcon({\n    className: 'custom-marker',\n    html: `<div style=\"\n    width: 32px;\n    height: 32px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n  \">\n    <svg viewBox=\"0 0 24 24\" width=\"32\" height=\"32\">\n      <path fill=\"${theme.colors.primary}\" d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"/>\n    </svg>\n  </div>`,\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32],\n  });\n\n  const formatTimeUnit = (unit) => {\n    return BACKEND_TO_FRONTEND_TIME_UNIT[unit] || unit;\n  };\n\n  const handleViewDetails = () => {\n    if (onShowServicesModal) {\n      onShowServicesModal(professional);\n    }\n  };\n\n  const handleMarkerClick = (e) => {\n    // Prevent event bubbling and ensure popup opens properly\n    e.originalEvent?.stopPropagation();\n    \n    // Small delay to ensure marker position is properly set before opening popup\n    setTimeout(() => {\n      if (markerRef.current && popupRef.current) {\n        markerRef.current.openPopup();\n      }\n    }, 10);\n  };\n\n  useEffect(() => {\n    const marker = markerRef.current;\n    if (marker) {\n      const leafletMarker = marker.getElement ? marker : marker._leaflet_marker;\n      \n      if (leafletMarker) {\n        leafletMarker.on('mouseover', () => {\n          if (popupRef.current) {\n            popupRef.current.openOn(marker._map);\n          }\n        });\n      }\n    }\n  }, []);\n\n  // Ensure coordinates exist and are valid\n  if (!professional.coordinates || \n      typeof professional.coordinates.latitude !== 'number' || \n      typeof professional.coordinates.longitude !== 'number') {\n    return null;\n  }\n\n  const position = [professional.coordinates.latitude, professional.coordinates.longitude];\n\n  return (\n    <Marker\n      ref={markerRef}\n      position={position}\n      icon={MarkerIcon}\n      eventHandlers={{\n        click: handleMarkerClick,\n      }}\n    >\n      <Popup\n        ref={popupRef}\n        closeButton={true}\n        autoClose={false}\n        closeOnClick={false}\n        closeOnEscapeKey={true}\n      >\n        <div style={{\n          padding: '16px',\n          minWidth: '250px',\n          maxWidth: '300px',\n          fontFamily: 'system-ui, -apple-system, sans-serif'\n        }}>\n          <h3 style={{\n            margin: '0 0 8px 0',\n            fontSize: '18px',\n            fontWeight: '600',\n            color: '#1a1a1a'\n          }}>{professional.name}</h3>\n          <p style={{\n            margin: '0 0 4px 0',\n            fontSize: '14px',\n            color: '#666'\n          }}>{professional.location}</p>\n          <p style={{\n            margin: '0 0 8px 0',\n            fontSize: '14px',\n            color: '#1a1a1a',\n            fontWeight: '500'\n          }}>{professional.primary_service?.service_name}</p>\n          <p style={{\n            margin: '0 0 12px 0',\n            fontSize: '16px',\n            fontWeight: '600',\n            color: theme.colors.primary\n          }}>from ${professional.primary_service?.price_per_visit || 'N/A'}/{formatTimeUnit(professional.primary_service?.unit_of_time || 'visit')}</p>\n          <button \n            style={{\n              backgroundColor: theme.colors.primary,\n              color: 'white',\n              border: 'none',\n              padding: '10px 16px',\n              borderRadius: '8px',\n              fontSize: '14px',\n              fontWeight: '500',\n              cursor: 'pointer',\n              width: '100%'\n            }}\n            onClick={handleViewDetails}\n          >\n            View Details\n          </button>\n        </div>\n      </Popup>\n    </Marker>\n  );\n};\n\nconst WebMapComponent = ({ professionals, onMarkerPress, region, isMobile, onShowServicesModal }) => {\n  // Return fallback if Leaflet libraries failed to load\n  if (!MapContainer || !TileLayer || !Marker || !Popup || !L) {\n    return (\n      <View style={styles.container}>\n        <View style={styles.fallbackContainer}>\n          <Text style={styles.fallbackText}>Map not available</Text>\n        </View>\n      </View>\n    );\n  }\n\n  const formatTimeUnit = (unit) => {\n    return BACKEND_TO_FRONTEND_TIME_UNIT[unit] || unit;\n  };\n\n  const handleViewDetails = (professional) => {\n    if (onShowServicesModal) {\n      onShowServicesModal(professional);\n    }\n  };\n\n  // Calculate map bounds and center based on professionals\n  const calculateMapBounds = () => {\n    const validProfessionals = professionals.filter(professional => \n      professional.coordinates && \n      professional.coordinates.latitude && \n      professional.coordinates.longitude\n    );\n\n    if (validProfessionals.length === 0) {\n      // Default to provided region if no professionals\n      return {\n        center: [region.latitude, region.longitude],\n        zoom: 13\n      };\n    }\n\n    if (validProfessionals.length === 1) {\n      // Single professional - center on them\n      const prof = validProfessionals[0];\n      return {\n        center: [prof.coordinates.latitude, prof.coordinates.longitude],\n        zoom: 14\n      };\n    }\n\n    // Multiple professionals - calculate bounds\n    const lats = validProfessionals.map(p => p.coordinates.latitude);\n    const lngs = validProfessionals.map(p => p.coordinates.longitude);\n    \n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLng = Math.min(...lngs);\n    const maxLng = Math.max(...lngs);\n\n    const centerLat = (minLat + maxLat) / 2;\n    const centerLng = (minLng + maxLng) / 2;\n\n    // Calculate zoom level based on bounds\n    const latDiff = maxLat - minLat;\n    const lngDiff = maxLng - minLng;\n    const maxDiff = Math.max(latDiff, lngDiff);\n\n    let zoom = 13;\n    if (maxDiff > 0.5) zoom = 10;\n    else if (maxDiff > 0.2) zoom = 11;\n    else if (maxDiff > 0.1) zoom = 12;\n    else if (maxDiff > 0.05) zoom = 13;\n    else zoom = 14;\n\n    return {\n      center: [centerLat, centerLng],\n      zoom: zoom\n    };\n  };\n\n  const mapBounds = calculateMapBounds();\n\n  return (\n    <View style={styles.mapContainer}>\n      <MapContainer\n        center={mapBounds.center}\n        zoom={mapBounds.zoom}\n        style={{ height: '100%', width: '100%' }}\n        key={`${mapBounds.center[0]}-${mapBounds.center[1]}-${mapBounds.zoom}`}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        />\n        {professionals.filter(professional => \n          professional.coordinates && \n          professional.coordinates.latitude && \n          professional.coordinates.longitude\n        ).map((professional, index) => (\n          <HoverMarker\n            key={professional.professional_id}\n            professional={professional}\n            onShowServicesModal={onShowServicesModal}\n          />\n        ))}\n      </MapContainer>\n    </View>\n  );\n};\n\nconst NativeMapComponent = ({ professionals, onMarkerPress, region, isMobile, onShowServicesModal }) => {\n  const [mapReady, setMapReady] = useState(false);\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n  \n  // Debug logging for Android\n  console.log('NativeMapComponent - Platform:', Platform.OS);\n  console.log('NativeMapComponent - ReactNativeMapView available:', !!ReactNativeMapView);\n  console.log('NativeMapComponent - RNMarker available:', !!RNMarker);\n  console.log('NativeMapComponent - Callout available:', !!Callout);\n  console.log('NativeMapComponent - PROVIDER_GOOGLE available:', !!PROVIDER_GOOGLE);\n  \n  // Return fallback if react-native-maps failed to load\n  if (!ReactNativeMapView || !RNMarker || !Callout) {\n    console.log('NativeMapComponent - Returning fallback due to missing components');\n    return (\n      <View style={styles.container}>\n        <View style={styles.fallbackContainer}>\n          <Text style={styles.fallbackText}>Map not available - missing components</Text>\n          <Text style={styles.fallbackText}>\n            MapView: {ReactNativeMapView ? '✓' : '✗'} | \n            Marker: {RNMarker ? '✓' : '✗'} | \n            Callout: {Callout ? '✓' : '✗'}\n          </Text>\n        </View>\n      </View>\n    );\n  }\n\n  const formatTimeUnit = (unit) => {\n    return BACKEND_TO_FRONTEND_TIME_UNIT[unit] || unit;\n  };\n\n  // Calculate map region based on professionals\n  const calculateMapRegion = () => {\n    const validProfessionals = professionals.filter(professional => \n      professional.coordinates && \n      professional.coordinates.latitude && \n      professional.coordinates.longitude\n    );\n\n    if (validProfessionals.length === 0) {\n      // Default to provided region if no professionals\n      return {\n        latitude: region.latitude,\n        longitude: region.longitude,\n        latitudeDelta: region.latitudeDelta || 0.0922,\n        longitudeDelta: region.longitudeDelta || 0.0421,\n      };\n    }\n\n    if (validProfessionals.length === 1) {\n      // Single professional - center on them\n      const prof = validProfessionals[0];\n      return {\n        latitude: prof.coordinates.latitude,\n        longitude: prof.coordinates.longitude,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01,\n      };\n    }\n\n    // Multiple professionals - calculate bounds\n    const lats = validProfessionals.map(p => p.coordinates.latitude);\n    const lngs = validProfessionals.map(p => p.coordinates.longitude);\n    \n    const minLat = Math.min(...lats);\n    const maxLat = Math.max(...lats);\n    const minLng = Math.min(...lngs);\n    const maxLng = Math.max(...lngs);\n\n    const latitudeDelta = (maxLat - minLat) * 1.3; // Add 30% padding\n    const longitudeDelta = (maxLng - minLng) * 1.3; // Add 30% padding\n\n    return {\n      latitude: (minLat + maxLat) / 2,\n      longitude: (minLng + maxLng) / 2,\n      latitudeDelta: Math.max(latitudeDelta, 0.01), // Minimum delta\n      longitudeDelta: Math.max(longitudeDelta, 0.01), // Minimum delta\n    };\n  };\n\n  const mapRegion = calculateMapRegion();\n  console.log('NativeMapComponent - Map region:', mapRegion);\n  console.log('NativeMapComponent - Professionals count:', professionals.length);\n  \n  // Add more detailed logging for Android\n  if (Platform.OS === 'android') {\n    console.log('Android Map Debug - Region details:', {\n      latitude: mapRegion.latitude,\n      longitude: mapRegion.longitude,\n      latitudeDelta: mapRegion.latitudeDelta,\n      longitudeDelta: mapRegion.longitudeDelta,\n      isValidLatitude: mapRegion.latitude >= -90 && mapRegion.latitude <= 90,\n      isValidLongitude: mapRegion.longitude >= -180 && mapRegion.longitude <= 180,\n      isValidDeltas: mapRegion.latitudeDelta > 0 && mapRegion.longitudeDelta > 0\n    });\n  }\n\n    const handleLayout = (event) => {\n      const { width, height } = event.nativeEvent.layout;\n      console.log('Container layout:', { width, height });\n      setDimensions({ width, height });\n    };\n\n    const handleMapReady = () => {\n      console.log('Map is ready!');\n      setMapReady(true);\n    };\n\n    return (\n    <View style={styles.container} onLayout={handleLayout}>\n      {Platform.OS === 'android' && dimensions.width === 0 ? (\n        <View style={styles.fallbackContainer}>\n          <Text style={styles.fallbackText}>Loading map...</Text>\n        </View>\n      ) : (\n        <ReactNativeMapView\n          key={Platform.OS === 'android' ? `android-map-${dimensions.width}-${dimensions.height}` : 'ios-map'}\n          style={[styles.map, Platform.OS === 'android' && { width: dimensions.width, height: dimensions.height }]}\n          {...(Platform.OS === 'android' ? { region: mapRegion } : { initialRegion: mapRegion })}\n          provider={Platform.OS === 'android' ? PROVIDER_GOOGLE : undefined}\n          showsUserLocation={false}\n          showsMyLocationButton={false}\n          mapType=\"standard\"\n          loadingEnabled={false}\n          moveOnMarkerPress={false}\n          showsCompass={false}\n          showsScale={false}\n          showsBuildings={true}\n          showsTraffic={false}\n          showsIndoors={true}\n          onMapReady={handleMapReady}\n          onError={(error) => console.log('Map error:', error)}\n          onLayout={() => console.log('Map layout complete')}\n          onRegionChangeComplete={(region) => console.log('Region changed:', region)}\n        >\n        {professionals.filter(professional => \n          professional.coordinates && \n          professional.coordinates.latitude && \n          professional.coordinates.longitude\n        ).map((professional, index) => (\n          <RNMarker\n            key={professional.professional_id}\n            coordinate={{\n              latitude: professional.coordinates.latitude,\n              longitude: professional.coordinates.longitude,\n            }}\n            title={professional.name}\n            description={professional.primary_service?.service_name}\n            onPress={() => onMarkerPress && onMarkerPress(professional)}\n          >\n            {Platform.OS === 'ios' && (\n              <View style={styles.customMarker}>\n                <View style={styles.markerPin}>\n                  <View style={styles.markerInner} />\n                </View>\n              </View>\n            )}\n            <Callout onPress={() => onShowServicesModal && onShowServicesModal(professional)}>\n              <View style={styles.calloutContainer}>\n                <Text style={styles.calloutTitle}>{professional.name}</Text>\n                <Text style={styles.calloutLocation}>{professional.location}</Text>\n                <Text style={styles.calloutService}>{professional.primary_service?.service_name}</Text>\n                <Text style={styles.calloutPrice}>\n                  from ${professional.primary_service?.price_per_visit || 'N/A'}/{formatTimeUnit(professional.primary_service?.unit_of_time || 'visit')}\n                </Text>\n                <TouchableOpacity \n                  style={styles.calloutButton}\n                  onPress={() => onShowServicesModal && onShowServicesModal(professional)}\n                >\n                  <Text style={styles.calloutButtonText}>View Details</Text>\n                </TouchableOpacity>\n              </View>\n            </Callout>\n          </RNMarker>\n        ))}\n        </ReactNativeMapView>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n  },\n  mapContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.background,\n    height: '100%',\n    width: '100%',\n    overflow: 'hidden',\n  },\n  map: {\n    flex: 1,\n    height: '100%',\n    width: '100%',\n  },\n  markerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  markerPin: {\n    width: 30,\n    height: 30,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 15,\n    borderWidth: 3,\n    borderColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 3,\n    elevation: 5,\n  },\n  markerInner: {\n    width: 12,\n    height: 12,\n    backgroundColor: 'white',\n    borderRadius: 6,\n  },\n  markerText: {\n    color: theme.colors.whiteText,\n    fontWeight: 'bold',\n  },\n  calloutContainer: {\n    backgroundColor: theme.colors.surface,\n    padding: theme.spacing.medium,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    minWidth: 200,\n    maxWidth: 250,\n  },\n  calloutTitle: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  calloutLocation: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.textSecondary,\n    marginBottom: 4,\n  },\n  calloutService: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    fontWeight: '500',\n    marginBottom: 4,\n  },\n  calloutPrice: {\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginBottom: 8,\n  },\n  calloutButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    borderRadius: 6,\n    alignItems: 'center',\n  },\n  calloutButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.small,\n    fontWeight: '500',\n  },\n  calloutText: {\n    color: theme.colors.text,\n    fontSize: theme.fontSizes.small,\n  },\n  popupContent: {\n    padding: 16,\n    minWidth: 250,\n    maxWidth: 300,\n  },\n  popupTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    fontFamily: theme.fonts.header.fontFamily,\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  popupLocation: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    marginBottom: 4,\n  },\n  popupService: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontWeight: '500',\n    marginBottom: 8,\n  },\n  popupPrice: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.primary,\n    marginBottom: 12,\n  },\n  popupButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  popupButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  fallbackContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  fallbackText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.textSecondary,\n  },\n  customMarker: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default MapViewComponent;","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, Modal, TouchableOpacity, ScrollView, StyleSheet, ActivityIndicator, Dimensions, Alert, Image } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { getProfessionalServicesDetailed, createConversation, getUserReviews } from '../api/API';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { useNavigation } from '@react-navigation/native';\nimport { getMediaUrl } from '../config/config';\nimport { formatFromUTC } from '../utils/time_utils';\nimport ReviewsModal from './ReviewsModal';\n\nconst ProfessionalServicesModal = ({ visible, onClose, professional, primaryService }) => {\n  const navigation = useNavigation();\n  const { isSignedIn } = useContext(AuthContext);\n  const [services, setServices] = useState([]);\n  const [selectedService, setSelectedService] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showTooltip, setShowTooltip] = useState(null);\n  const [mobileView, setMobileView] = useState('services'); // 'services' or 'details'\n  const [isCreatingConversation, setIsCreatingConversation] = useState(false);\n  const [showErrorModal, setShowErrorModal] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [reviews, setReviews] = useState([]);\n  const [averageRating, setAverageRating] = useState(0);\n  const [reviewCount, setReviewCount] = useState(0);\n  const [loadingReviews, setLoadingReviews] = useState(false);\n  const [showReviewsModal, setShowReviewsModal] = useState(false);\n  const [activeTab, setActiveTab] = useState('services'); // 'services' or 'reviews'\n  \n  const { width: screenWidth } = Dimensions.get('window');\n  const isMobile = screenWidth <= 768;\n  const isSmallMobile = screenWidth <= 600;\n\n  useEffect(() => {\n    if (visible && professional?.professional_id) {\n      fetchServices();\n      fetchReviews();\n    }\n  }, [visible, professional?.professional_id]);\n\n  useEffect(() => {\n    // Set the primary service as selected when services load\n    if (services.length > 0 && primaryService) {\n      const primaryServiceData = services.find(s => s.service_id === primaryService.service_id);\n      if (primaryServiceData) {\n        setSelectedService(primaryServiceData);\n      } else {\n        // Fallback to first service if primary not found\n        setSelectedService(services[0]);\n      }\n    } else if (services.length > 0) {\n      setSelectedService(services[0]);\n    }\n  }, [services, primaryService]);\n\n  const fetchServices = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      debugLog('MBA9999', 'Fetching services for professional:', professional.professional_id);\n      const servicesData = await getProfessionalServicesDetailed(professional.professional_id);\n      setServices(servicesData);\n    } catch (err) {\n      debugLog('MBA9999', 'Error fetching professional services:', err);\n      setError('Failed to load services');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const fetchReviews = async () => {\n    if (!professional?.professional_id) return;\n    \n    setLoadingReviews(true);\n    try {\n      const professionalId = professional.professional_id.toString();\n      debugLog('MBA4001', 'Fetching reviews for professional:', professionalId);\n      const reviewsData = await getUserReviews(null, professionalId, false);\n      debugLog('MBA4001', 'Reviews fetched successfully:', reviewsData);\n      \n      // Check if the response has the expected structure\n      if (reviewsData && typeof reviewsData === 'object') {\n        setReviews(reviewsData.reviews || []);\n        setAverageRating(reviewsData.average_rating || 0);\n        setReviewCount(reviewsData.review_count || 0);\n        \n        // Log information about reviewer profile pictures\n        if (reviewsData.reviews && reviewsData.reviews.length > 0) {\n          debugLog('MBA4001', 'First review has profile picture:', {\n            has_profile_pic: !!reviewsData.reviews[0].reviewer_profile_picture,\n            profile_pic_url: reviewsData.reviews[0].reviewer_profile_picture || 'none'\n          });\n        }\n        \n        if (reviewsData.detail) {\n          debugLog('MBA4001', 'Review fetch message:', reviewsData.detail);\n        }\n      } else {\n        debugLog('MBA4001', 'Unexpected reviews data format:', reviewsData);\n        setReviews([]);\n        setAverageRating(0);\n        setReviewCount(0);\n      }\n    } catch (err) {\n      debugLog('MBA4001', 'Error fetching professional reviews:', err);\n      // Don't set an error state here, as we don't want to block the UI\n      setReviews([]);\n      setAverageRating(0);\n      setReviewCount(0);\n    } finally {\n      setLoadingReviews(false);\n    }\n  };\n\n  const handleClose = () => {\n    setSelectedService(null);\n    setServices([]);\n    setError(null);\n    setShowTooltip(null);\n    setMobileView('services');\n    setShowErrorModal(false);\n    setErrorMessage('');\n    setReviews([]);\n    setAverageRating(0);\n    setReviewCount(0);\n    setActiveTab('services');\n    onClose();\n  };\n\n  const handleServiceSelect = (service) => {\n    setSelectedService(service);\n    if (isMobile) {\n      setMobileView('details');\n    }\n  };\n\n  const handleBackToServices = () => {\n    setMobileView('services');\n  };\n\n  const formatAnimalTypes = (animalTypes) => {\n    if (!animalTypes || typeof animalTypes !== 'object') return 'Various animals';\n    const types = Object.keys(animalTypes);\n    if (types.length === 0) return 'Various animals';\n    if (types.length === 1) return types[0];\n    if (types.length === 2) return `${types[0]} & ${types[1]}`;\n    return `${types[0]}, ${types[1]} & ${types.length - 2} more`;\n  };\n\n  // Format date for review display\n  const formatReviewDate = (dateString) => {\n    try {\n      return formatFromUTC(dateString);\n    } catch (error) {\n      debugLog('MBA6789', 'Error formatting review date:', error);\n      return dateString;\n    }\n  };\n\n  // Render stars based on rating\n  const renderStars = (rating) => {\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n      stars.push(\n        <MaterialCommunityIcons\n          key={i}\n          name={i <= rating ? \"star\" : \"star-outline\"}\n          size={16}\n          color={theme.colors.warning}\n          style={styles.starIcon}\n        />\n      );\n    }\n    return <View style={styles.starsContainer}>{stars}</View>;\n  };\n\n  // Render profile picture or default icon\n  const renderProfilePicture = (profilePicture) => {\n    if (profilePicture) {\n      const imageUrl = getMediaUrl(profilePicture);\n      return (\n        <Image \n          source={{ uri: imageUrl }} \n          style={styles.reviewProfileImage} \n          resizeMode=\"cover\"\n        />\n      );\n    } else {\n      return (\n        <View style={styles.defaultReviewProfileImage}>\n          <MaterialCommunityIcons \n            name=\"account\" \n            size={32} \n            color={theme.colors.surface} \n          />\n        </View>\n      );\n    }\n  };\n\n  const renderAdditionalRates = (rates) => {\n    if (!rates || rates.length === 0) return null;\n    \n    return (\n      <View style={styles.detailSection}>\n        <Text style={styles.detailLabel}>Additional Rates</Text>\n        {rates.map((rate) => (\n          <View key={rate.rate_id} style={styles.additionalRateItem}>\n            <View style={styles.additionalRateRow}>\n              <View style={styles.additionalRateTitleContainer}>\n                {rate.description && (\n                  <TouchableOpacity \n                    style={styles.infoIcon}\n                    onPress={() => setShowTooltip(showTooltip === rate.rate_id ? null : rate.rate_id)}\n                  >\n                    <MaterialCommunityIcons \n                      name=\"information-outline\" \n                      size={16} \n                      color={theme.colors.primary} \n                    />\n                  </TouchableOpacity>\n                )}\n                <Text style={styles.additionalRateTitle}>{rate.title}</Text>\n              </View>\n              <Text style={styles.additionalRatePrice}>${rate.rate}</Text>\n            </View>\n\n          </View>\n        ))}\n      </View>\n    );\n  };\n\n  const renderServiceDetails = (service) => (\n    <>\n      <View style={styles.detailSection}>\n        <Text style={styles.detailLabel}>Description</Text>\n        <Text style={styles.detailText}>{service.description}</Text>\n      </View>\n\n      <View style={styles.detailSection}>\n        <Text style={styles.detailLabel}>Animal Types</Text>\n        <Text style={styles.detailText}>{formatAnimalTypes(service.animal_types)}</Text>\n      </View>\n\n      <View style={styles.detailSection}>\n        <Text style={styles.detailLabel}>Base Rate</Text>\n        <Text style={styles.detailText}>${service.base_rate} per {service.unit_of_time}</Text>\n      </View>\n\n      <View style={styles.detailSection}>\n        <Text style={styles.detailLabel}>Additional Animal Rate</Text>\n        <Text style={styles.detailText}>\n          ${service.additional_animal_rate} (applies after {service.applies_after} animal{service.applies_after > 1 ? 's' : ''})\n        </Text>\n      </View>\n\n      {service.holiday_rate && \n       service.holiday_rate !== '$0' && \n       service.holiday_rate !== '$0.00' && \n       service.holiday_rate !== '0%' && \n       service.holiday_rate !== '0.00%' && \n       service.holiday_rate !== '0' && (\n        <View style={styles.detailSection}>\n          <Text style={styles.detailLabel}>Holiday Rate</Text>\n          <Text style={styles.detailText}>{service.holiday_rate}</Text>\n        </View>\n      )}\n\n      {service.is_overnight && (\n        <View style={styles.detailSection}>\n          <Text style={styles.overnightBadge}>Overnight Service</Text>\n        </View>\n      )}\n\n      {renderAdditionalRates(service.additional_rates)}\n    </>\n  );\n\n  const renderReviews = () => {\n    if (loadingReviews) {\n      return (\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n          <Text style={styles.loadingText}>Loading reviews...</Text>\n        </View>\n      );\n    }\n\n    if (reviews.length === 0) {\n      return (\n        <View style={styles.emptyStateContainer}>\n          <MaterialCommunityIcons name=\"star-outline\" size={60} color={theme.colors.placeholder} />\n          <Text style={styles.emptyStateText}>No reviews yet</Text>\n        </View>\n      );\n    }\n\n    return (\n      <ScrollView style={styles.reviewsList} contentContainerStyle={styles.reviewsContent}>\n        {[...reviews].sort((a, b) => b.rating - a.rating).map((review) => (\n          <View key={review.id} style={styles.reviewCard}>\n            <View style={styles.reviewUserInfo}>\n              <View style={styles.profileContainer}>\n                {renderProfilePicture(review.reviewer_profile_picture)}\n              </View>\n              <View style={styles.reviewUserDetails}>\n                <View style={styles.nameAndStarsRow}>\n                  <Text style={styles.reviewerName}>{review.client_name || 'Anonymous'}</Text>\n                  {renderStars(review.rating)}\n                </View>\n                <View style={styles.serviceRow}>\n                  <MaterialCommunityIcons name=\"briefcase-outline\" size={14} color={theme.colors.textSecondary} style={styles.calendarIcon} />\n                  <Text style={styles.serviceName}>{review.service_name || 'No Service Found'}</Text>\n                  <Text style={styles.serviceName}>•</Text>\n                  <MaterialCommunityIcons name=\"calendar\" size={14} color={theme.colors.textSecondary} style={styles.calendarIcon} />\n                  <Text style={styles.serviceInfoText}>\n                    {review.last_occurrence_end_date || review.created_at}\n                  </Text>\n                </View>\n                <Text style={styles.reviewText}>{review.review_text || 'No comments provided.'}</Text>\n              </View>\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    );\n  };\n\n  const handleCreateConversation = async () => {\n    if (!professional?.professional_id) {\n      Alert.alert('Error', 'Professional information not available');\n      return;\n    }\n\n    // Check if user is signed in before making API call\n    if (!isSignedIn) {\n      debugLog('MBA24u45vn', 'User not signed in, redirecting to login');\n      \n      // Close the modal first\n      onClose();\n      \n      // Navigate to sign in screen\n      navigation.navigate('SignIn');\n      return;\n    }\n\n    setIsCreatingConversation(true);\n    try {\n      // Log navigation state before creating conversation\n      debugLog('MBA24u45vn', 'Navigation state before creating conversation', {\n        current_route: navigation.getState()?.routes?.[navigation.getState()?.index]?.name,\n        current_params: JSON.stringify(navigation.getState()?.routes?.[navigation.getState()?.index]?.params || {}),\n        route_count: navigation.getState()?.routes?.length,\n        current_index: navigation.getState()?.index,\n        timestamp: Date.now()\n      });\n      \n      debugLog('MBA24u45vn', 'Creating conversation with professional - START', {\n        professional_id: professional.professional_id,\n        professional_name: professional.name,\n        from_screen: navigation.getState()?.routes?.[navigation.getState()?.index]?.name || 'unknown',\n        previous_screen: navigation.getState()?.routes?.[navigation.getState()?.index - 1]?.name || 'unknown',\n        timestamp: Date.now()\n      });\n      \n      const response = await createConversation(professional.professional_id);\n      \n      debugLog('MBA24u45vn', 'Conversation created successfully', {\n        conversation_id: response.conversation_id,\n        other_user_name: response.other_user_name,\n        status: response.status,\n        is_professional: response.is_professional,\n        full_response: JSON.stringify(response),\n        timestamp: Date.now()\n      });\n      \n      // Get current navigation state for logging\n      const currentRoute = navigation.getState()?.routes?.[navigation.getState()?.index]?.name;\n      const currentParams = navigation.getState()?.routes?.[navigation.getState()?.index]?.params;\n      \n      debugLog('MBA24u45vn', 'About to navigate to MessageHistory', {\n        from_route: currentRoute,\n        current_params: JSON.stringify(currentParams),\n        conversation_id: response.conversation_id,\n        navigation_timestamp: Date.now(),\n        navigation_state: JSON.stringify(navigation.getState())\n      });\n      \n      // Close the modal first\n      onClose();\n      \n      // Add a small delay to ensure backend has processed the conversation\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Create navigation params with exact conversation data to help MessageHistory\n      const navigationParams = { \n        conversationId: response.conversation_id,\n        otherUserName: professional.name,\n        otherUserProfilePic: professional.profile_picture || null,\n        isProfessional: false,\n        fullConversationData: JSON.stringify(response),\n        _timestamp: Date.now()\n      };\n      \n      debugLog('MBA24u45vn', 'Navigation params prepared', {\n        params: JSON.stringify(navigationParams),\n        timestamp: Date.now()\n      });\n      \n      // Navigate to MessageHistory with the conversation ID\n      navigation.navigate('MessageHistory', navigationParams);\n      \n      debugLog('MBA24u45vn', 'Navigation to MessageHistory completed', {\n        conversation_id: response.conversation_id,\n        timestamp: Date.now()\n      });\n      \n      // Log navigation state after navigation\n      setTimeout(() => {\n        debugLog('MBA24u45vn', 'Navigation state after navigation (with timeout)', {\n          current_route: navigation.getState()?.routes?.[navigation.getState()?.index]?.name,\n          current_params: JSON.stringify(navigation.getState()?.routes?.[navigation.getState()?.index]?.params || {}),\n          route_count: navigation.getState()?.routes?.length,\n          current_index: navigation.getState()?.index,\n          timestamp: Date.now()\n        });\n      }, 100);\n    } catch (err) {\n      debugLog('MBA3456', 'Error creating conversation:', err);\n      \n      // Check if this is the \"cannot contact yourself\" error\n      if (err.response?.status === 400 && \n          err.response?.data?.error === 'Cannot create conversation with yourself') {\n        setErrorMessage('You cannot contact yourself.');\n        setShowErrorModal(true);\n      } else {\n        setErrorMessage('Failed to create conversation. Please try again.');\n        setShowErrorModal(true);\n      }\n    } finally {\n      setIsCreatingConversation(false);\n    }\n  };\n\n  const handleOpenReviewsModal = () => {\n    setShowReviewsModal(true);\n  };\n\n  const handleCloseReviewsModal = () => {\n    setShowReviewsModal(false);\n  };\n\n  return (\n    <>\n      <Modal\n        visible={visible}\n        onRequestClose={handleClose}\n        animationType=\"slide\"\n        transparent={true}\n      >\n        <View style={styles.modalOverlay}>\n          <View style={[styles.modalContainer, isSmallMobile && styles.modalContainerSmallMobile]}>\n            {/* Header */}\n            <View style={styles.header}>\n              <View style={styles.headerTop}>\n                <View style={styles.headerLeft}>\n                  {professional?.profile_picture_url ? (\n                    <Image \n                      source={{ uri: getMediaUrl(professional.profile_picture_url) }} \n                      style={styles.professionalProfilePhoto} \n                    />\n                  ) : (\n                    <View style={styles.professionalProfilePhotoPlaceholder}>\n                      <MaterialCommunityIcons name=\"account\" size={24} color={theme.colors.placeholder} />\n                    </View>\n                  )}\n                  <View style={styles.headerTextContainer}>\n                    <Text style={styles.professionalName}>{professional?.name}</Text>\n                    <View style={styles.headerLocationContainer}>\n                      {reviewCount > 0 ? (\n                        <TouchableOpacity \n                          style={styles.reviewBadge}\n                          onPress={handleOpenReviewsModal}\n                        >\n                          <MaterialCommunityIcons name=\"star\" size={16} color={theme.colors.warning} />\n                          <Text style={styles.reviewBadgeText}>{averageRating.toFixed(2)} • {reviewCount} {reviewCount === 1 ? 'Review' : 'Reviews'}</Text>\n                        </TouchableOpacity>\n                      ) : (\n                        <Text style={styles.noReviewsText}>No reviews yet</Text>\n                      )}\n                      {/* <Text style={styles.professionalLocation}>•</Text> */}\n                      <Text style={styles.professionalLocation}>• {professional?.location}</Text>\n                    </View>\n                  </View>\n                </View>\n                \n                <TouchableOpacity onPress={handleClose} style={styles.closeButton}>\n                  <MaterialCommunityIcons name=\"close\" size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n              \n              {/* Professional Badges */}\n              <View style={styles.headerBadgesContainer}>\n                                  <ScrollView \n                    horizontal \n                    showsHorizontalScrollIndicator={false}\n                    contentContainerStyle={styles.headerBadgesScrollContent}\n                  >\n                    {professional?.badges?.is_background_checked && (\n                      <View style={[styles.headerBadge, styles.headerBackgroundCheckedBadge]}>\n                        <MaterialCommunityIcons name=\"shield-check\" size={12} color=\"#9C27B0\" />\n                        <Text style={[styles.headerBadgeText, styles.headerBackgroundCheckedBadgeText]}>Background Checked</Text>\n                      </View>\n                    )}\n                    {professional?.badges?.is_insured && (\n                      <View style={[styles.headerBadge, styles.headerInsuredBadge]}>\n                        <MaterialCommunityIcons name=\"security\" size={12} color=\"#0784C6\" />\n                        <Text style={[styles.headerBadgeText, styles.headerInsuredBadgeText]}>Insured</Text>\n                      </View>\n                    )}\n                    {professional?.badges?.is_elite_pro && (\n                      <View style={[styles.headerBadge, styles.headerEliteProBadge]}>\n                        <MaterialCommunityIcons name=\"medal\" size={12} color=\"#4CAF50\" />\n                        <Text style={[styles.headerBadgeText, styles.headerEliteProBadgeText]}>Elite Pro</Text>\n                      </View>\n                    )}\n                  </ScrollView>\n              </View>\n            </View>\n\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n                <Text style={styles.loadingText}>Loading services...</Text>\n              </View>\n            ) : error ? (\n              <View style={styles.errorContainer}>\n                <Text style={styles.errorText}>{error}</Text>\n                <TouchableOpacity style={styles.retryButton} onPress={fetchServices}>\n                  <Text style={styles.retryText}>Retry</Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <View style={[styles.content, isMobile && styles.contentMobile]}>\n                {/* Mobile: Tabs and Content */}\n                {isMobile && mobileView === 'services' && (\n                  <View style={styles.mobileMainView}>\n                    {/* Tab Headers */}\n                    <View style={styles.tabContainer}>\n                      <TouchableOpacity\n                        style={[styles.tab, activeTab === 'services' && styles.activeTab]}\n                        onPress={() => setActiveTab('services')}\n                      >\n                        <Text style={[styles.tabText, activeTab === 'services' && styles.activeTabText]}>\n                          Services\n                        </Text>\n                      </TouchableOpacity>\n                      <TouchableOpacity\n                        style={[styles.tab, activeTab === 'reviews' && styles.activeTab]}\n                        onPress={() => setActiveTab('reviews')}\n                      >\n                        <Text style={[styles.tabText, activeTab === 'reviews' && styles.activeTabText]}>\n                          Reviews {reviewCount > 0 && `(${reviewCount})`}\n                        </Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    {/* Tab Content */}\n                    {activeTab === 'services' ? (\n                      <ScrollView style={styles.servicesScrollView}>\n                        {services.map((service) => (\n                          <TouchableOpacity\n                            key={service.service_id}\n                            style={styles.mobileServiceItem}\n                            onPress={() => handleServiceSelect(service)}\n                          >\n                            <View style={styles.mobileServiceContent}>\n                              <Text style={styles.mobileServiceName}>\n                                {service.service_name}\n                              </Text>\n                              <Text style={styles.mobileServicePrice}>\n                                ${service.base_rate}/{service.unit_of_time}\n                              </Text>\n                            </View>\n                            <MaterialCommunityIcons \n                              name=\"chevron-right\" \n                              size={24} \n                              color={theme.colors.textSecondary} \n                            />\n                          </TouchableOpacity>\n                        ))}\n                      </ScrollView>\n                    ) : (\n                      <View style={styles.reviewsTabContent}>\n                        {renderReviews()}\n                      </View>\n                    )}\n                  </View>\n                )}\n\n                {/* Mobile: Service Details View */}\n                {isMobile && mobileView === 'details' && selectedService && (\n                  <View style={styles.mobileDetailsView}>\n                    <View style={styles.mobileDetailsHeader}>\n                      <TouchableOpacity \n                        style={styles.backButton}\n                        onPress={handleBackToServices}\n                      >\n                        <MaterialCommunityIcons \n                          name=\"arrow-left\" \n                          size={24} \n                          color={theme.colors.primary} \n                        />\n                      </TouchableOpacity>\n                      <Text style={styles.mobileDetailsTitle}>{selectedService.service_name}</Text>\n                    </View>\n                    <ScrollView style={styles.mobileDetailsScrollView}>\n                      {renderServiceDetails(selectedService)}\n                    </ScrollView>\n                  </View>\n                )}\n\n                {/* Desktop: Two-panel layout */}\n                {!isMobile && (\n                  <>\n                    {/* Left Side with Tabs */}\n                    <View style={styles.servicesList}>\n                      {/* Tab Headers */}\n                      <View style={styles.tabContainer}>\n                        <TouchableOpacity\n                          style={[styles.tab, activeTab === 'services' && styles.activeTab]}\n                          onPress={() => setActiveTab('services')}\n                        >\n                          <Text style={[styles.tabText, activeTab === 'services' && styles.activeTabText]}>\n                            Services\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          style={[styles.tab, activeTab === 'reviews' && styles.activeTab]}\n                          onPress={() => setActiveTab('reviews')}\n                        >\n                          <Text style={[styles.tabText, activeTab === 'reviews' && styles.activeTabText]}>\n                            Reviews {reviewCount > 0 && `(${reviewCount})`}\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n\n                      {/* Tab Content */}\n                      {activeTab === 'services' ? (\n                        <ScrollView style={styles.servicesScrollView}>\n                          {services.map((service) => (\n                            <TouchableOpacity\n                              key={service.service_id}\n                              style={[\n                                styles.serviceItem,\n                                selectedService?.service_id === service.service_id && styles.serviceItemSelected\n                              ]}\n                              onPress={() => handleServiceSelect(service)}\n                            >\n                              <Text style={[\n                                styles.serviceName,\n                                selectedService?.service_id === service.service_id && styles.serviceNameSelected\n                              ]}>\n                                {service.service_name}\n                              </Text>\n                              <Text style={[\n                                styles.servicePrice,\n                                selectedService?.service_id === service.service_id && styles.servicePriceSelected\n                              ]}>\n                                ${service.base_rate}/{service.unit_of_time}\n                              </Text>\n                            </TouchableOpacity>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <View style={styles.reviewsTabContent}>\n                          {renderReviews()}\n                        </View>\n                      )}\n                    </View>\n\n                    {/* Service Details (Right Side) - Only show when Services tab is active */}\n                    {activeTab === 'services' && (\n                      <View style={styles.serviceDetails}>\n                        {selectedService ? (\n                          <ScrollView style={styles.detailsScrollView}>\n                            <Text style={styles.detailsTitle}>{selectedService.service_name}</Text>\n                            {renderServiceDetails(selectedService)}\n                          </ScrollView>\n                        ) : (\n                          <View style={styles.noSelectionContainer}>\n                            <Text style={styles.noSelectionText}>Select a service to view details</Text>\n                          </View>\n                        )}\n                      </View>\n                    )}\n                  </>\n                )}\n              </View>\n            )}\n\n            {/* Contact Button */}\n            {!loading && !error && (\n              <View style={styles.footer}>\n                <TouchableOpacity \n                  style={[styles.contactButton, isCreatingConversation && styles.contactButtonDisabled]} \n                  onPress={handleCreateConversation}\n                  disabled={isCreatingConversation}\n                >\n                  {isCreatingConversation ? (\n                    <View style={styles.contactButtonContent}>\n                      <ActivityIndicator size=\"small\" color={theme.colors.whiteText} />\n                      <Text style={[styles.contactButtonText, { marginLeft: 8 }]}>Creating conversation...</Text>\n                    </View>\n                  ) : (\n                    <Text style={styles.contactButtonText}>Contact {professional?.name}</Text>\n                  )}\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n        </View>\n\n        {/* Separate Modal for Tooltip */}\n        <Modal\n          visible={showTooltip !== null}\n          transparent\n          animationType=\"fade\"\n          onRequestClose={() => setShowTooltip(null)}\n        >\n          <TouchableOpacity \n            style={styles.tooltipModalOverlay}\n            activeOpacity={1}\n            onPress={() => setShowTooltip(null)}\n          >\n            <View style={styles.tooltipModalContent}>\n              <View style={styles.tooltipHeader}>\n                <Text style={styles.tooltipTitle}>\n                  {services.find(s => s.additional_rates?.find(r => r.rate_id === showTooltip))?.additional_rates?.find(r => r.rate_id === showTooltip)?.title || 'Rate Info'}\n                </Text>\n                <TouchableOpacity \n                  style={styles.tooltipCloseButton}\n                  onPress={() => setShowTooltip(null)}\n                >\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={18} \n                    color={theme.colors.text} \n                  />\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.tooltipText}>\n                {services.find(s => s.additional_rates?.find(r => r.rate_id === showTooltip))?.additional_rates?.find(r => r.rate_id === showTooltip)?.description || ''}\n              </Text>\n            </View>\n          </TouchableOpacity>\n        </Modal>\n\n        {/* Error Modal */}\n        <Modal\n          visible={showErrorModal}\n          transparent\n          animationType=\"fade\"\n          onRequestClose={() => setShowErrorModal(false)}\n        >\n          <TouchableOpacity \n            style={styles.tooltipModalOverlay}\n            activeOpacity={1}\n            onPress={() => setShowErrorModal(false)}\n          >\n            <TouchableOpacity \n              style={styles.errorModalContent}\n              activeOpacity={1}\n              onPress={(e) => e.stopPropagation()}\n            >\n              <View style={styles.errorModalHeader}>\n                <Text style={styles.errorModalTitle}>Error</Text>\n                <TouchableOpacity \n                  style={styles.errorModalCloseButton}\n                  onPress={() => setShowErrorModal(false)}\n                >\n                  <MaterialCommunityIcons \n                    name=\"close\" \n                    size={20} \n                    color={theme.colors.text} \n                  />\n                </TouchableOpacity>\n              </View>\n              <Text style={styles.errorModalText}>\n                {errorMessage}\n              </Text>\n              <TouchableOpacity \n                style={styles.errorModalOkButton}\n                onPress={() => setShowErrorModal(false)}\n              >\n                <Text style={styles.errorModalOkText}>OK</Text>\n              </TouchableOpacity>\n            </TouchableOpacity>\n          </TouchableOpacity>\n        </Modal>\n      </Modal>\n\n      {/* Reviews Modal */}\n      <ReviewsModal\n        visible={showReviewsModal}\n        onClose={handleCloseReviewsModal}\n        reviews={reviews}\n        averageRating={averageRating}\n        reviewCount={reviewCount}\n        userName={professional?.name}\n        forProfessional={true}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  modalContainer: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    width: '90%',\n    maxWidth: 800,\n    maxHeight: '80%',\n    overflow: 'hidden',\n  },\n  modalContainerSmallMobile: {\n    width: 'calc(100% - 10px)',\n    height: 'calc(100% - 10px)',\n    maxWidth: 'none',\n    maxHeight: 'none',\n    borderRadius: 8,\n  },\n  header: {\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  headerTop: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  headerLeft: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  headerTextContainer: {\n    flex: 1,\n  },\n  professionalName: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  professionalLocation: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    marginTop: 4,\n    marginRight: 8,\n  },\n  headerLocationContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginTop: 4,\n  },\n  reviewBadge: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    // backgroundColor: theme.colors.background,\n    paddingTop: 4,\n    paddingRight: 4,\n    borderRadius: 12,\n  },\n  reviewBadgeText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    marginLeft: 4,\n    fontWeight: '500',\n  },\n  closeButton: {\n    padding: 8,\n  },\n  loadingContainer: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  loadingText: {\n    marginTop: 16,\n    color: theme.colors.textSecondary,\n  },\n  errorContainer: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  errorText: {\n    color: theme.colors.error,\n    textAlign: 'center',\n    marginBottom: 16,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n  },\n  retryText: {\n    color: theme.colors.whiteText,\n    fontWeight: '500',\n  },\n  content: {\n    flexDirection: 'row',\n    flex: 1,\n  },\n  contentMobile: {\n    flexDirection: 'column',\n  },\n  // Mobile styles\n  mobileMainView: {\n    flex: 1,\n    padding: 20,\n  },\n  mobileServiceItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  mobileServiceContent: {\n    flex: 1,\n  },\n  mobileServiceName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  mobileServicePrice: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  mobileDetailsView: {\n    flex: 1,\n  },\n  mobileDetailsHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  backButton: {\n    padding: 8,\n    marginRight: 12,\n  },\n  mobileDetailsTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n  },\n  mobileDetailsScrollView: {\n    flex: 1,\n    padding: 20,\n  },\n  // Desktop styles\n  servicesList: {\n    width: '40%',\n    borderRightWidth: 1,\n    borderRightColor: theme.colors.border,\n    padding: 20,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 16,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  servicesScrollView: {\n    flex: 1,\n  },\n  serviceItem: {\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 8,\n    backgroundColor: theme.colors.background,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  serviceItemSelected: {\n    backgroundColor: theme.colors.primary,\n    borderColor: theme.colors.primary,\n  },\n  serviceName: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 4,\n  },\n  serviceNameSelected: {\n    color: theme.colors.whiteText,\n  },\n  servicePrice: {\n    fontSize: 12,\n    color: theme.colors.textSecondary,\n  },\n  servicePriceSelected: {\n    color: theme.colors.whiteText,\n  },\n  serviceDetails: {\n    flex: 1,\n    padding: 20,\n  },\n  detailsScrollView: {\n    flex: 1,\n  },\n  detailsTitle: {\n    fontSize: 24,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  detailSection: {\n    marginBottom: 20,\n  },\n  detailLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 8,\n  },\n  detailText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    lineHeight: 20,\n  },\n  overnightBadge: {\n    backgroundColor: theme.colors.primary,\n    color: theme.colors.whiteText,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    fontSize: 12,\n    fontWeight: '500',\n    alignSelf: 'flex-start',\n  },\n  additionalRateItem: {\n    paddingVertical: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    position: 'relative',\n  },\n  additionalRateRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalRateTitleContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    flex: 1,\n  },\n  additionalRateTitle: {\n    fontSize: 14,\n    color: theme.colors.text,\n    flex: 1,\n    marginLeft: 4,\n  },\n  infoIcon: {\n    padding: 2,\n    marginTop: -2,\n  },\n  additionalRatePrice: {\n    fontSize: 14,\n    fontWeight: '500',\n    color: theme.colors.primary,\n    marginLeft: 16,\n  },\n  tooltipModalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  tooltipModalContent: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 12,\n    padding: 16,\n    margin: 20,\n    maxWidth: 300,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 10,\n  },\n  tooltipHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  tooltipTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n  },\n  tooltipCloseButton: {\n    padding: 4,\n    marginLeft: 8,\n  },\n  tooltipText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    lineHeight: 20,\n  },\n  noSelectionContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  noSelectionText: {\n    color: theme.colors.textSecondary,\n    fontSize: 16,\n  },\n  footer: {\n    padding: 20,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  contactButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  contactButtonDisabled: {\n    backgroundColor: theme.colors.placeholder,\n    opacity: 0.7,\n  },\n  contactButtonContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  contactButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  errorModalContent: {\n    backgroundColor: theme.colors.surface,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    borderRadius: 12,\n    padding: 16,\n    margin: 20,\n    maxWidth: 300,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4,\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 10,\n  },\n  errorModalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 12,\n  },\n  errorModalTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: theme.colors.text,\n    flex: 1,\n  },\n  errorModalCloseButton: {\n    padding: 4,\n    marginLeft: 8,\n  },\n  errorModalText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    lineHeight: 20,\n  },\n  errorModalOkButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 16,\n  },\n  errorModalOkText: {\n    color: theme.colors.whiteText,\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  professionalProfilePhoto: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 15,\n  },\n  professionalProfilePhotoPlaceholder: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.background,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n    marginRight: 15,\n  },\n  noReviewsText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n    marginLeft: 4,\n  },\n  // Tab styles\n  tabContainer: {\n    flexDirection: 'row',\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    marginBottom: 16,\n  },\n  tab: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    alignItems: 'center',\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.textSecondary,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '600',\n  },\n  // Reviews styles\n  reviewsTabContent: {\n    flex: 1,\n  },\n  reviewsList: {\n    flex: 1,\n  },\n  reviewsContent: {\n    paddingBottom: 16,\n  },\n  reviewCard: {\n    padding: 16,\n    backgroundColor: theme.colors.background,\n    borderRadius: 8,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  reviewUserInfo: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n  },\n  profileContainer: {\n    marginRight: 16,\n  },\n  reviewProfileImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n  },\n  defaultReviewProfileImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: theme.colors.primary,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  reviewUserDetails: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  nameAndStarsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginBottom: 8,\n  },\n  reviewerName: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginRight: 8,\n  },\n  starsContainer: {\n    flexDirection: 'row',\n  },\n  starIcon: {\n    marginRight: 2,\n  },\n  serviceRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  },\n  serviceName: {\n    fontSize: 14,\n    color: theme.colors.primary,\n    fontWeight: '500',\n    marginRight: 8,\n  },\n  calendarIcon: {\n    marginRight: 4,\n  },\n  serviceInfoText: {\n    fontSize: 14,\n    color: theme.colors.textSecondary,\n  },\n  reviewText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    lineHeight: 20,\n    marginTop: 8,\n  },\n  // Header badges styles\n  headerBadgesContainer: {\n    marginTop: 16,\n  },\n  headerBadgesScrollContent: {\n    flexDirection: 'row',\n    gap: 6,\n  },\n  headerBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 3,\n    paddingHorizontal: 6,\n    borderWidth: 1,\n    borderRadius: 12,\n  },\n  headerBadgeText: {\n    fontSize: 10,\n    marginLeft: 3,\n    fontWeight: '500',\n  },\n  headerBackgroundCheckedBadge: {\n    borderColor: '#9C27B0',\n    backgroundColor: 'rgba(156, 39, 176, 0.1)',\n  },\n  headerBackgroundCheckedBadgeText: {\n    color: '#9C27B0',\n  },\n  headerInsuredBadge: {\n    borderColor: '#0784C6',\n    backgroundColor: 'rgba(7, 132, 198, 0.1)',\n  },\n  headerInsuredBadgeText: {\n    color: '#0784C6',\n  },\n  headerEliteProBadge: {\n    borderColor: '#4CAF50',\n    backgroundColor: 'rgba(76, 175, 80, 0.1)',\n  },\n  headerEliteProBadgeText: {\n    color: '#4CAF50',\n  },\n});\n\nexport default ProfessionalServicesModal; ","import React, { useState, useEffect, useContext } from 'react';\nimport { View, StyleSheet, Platform, Dimensions, TouchableOpacity, Text, useWindowDimensions, SafeAreaView } from 'react-native';\nimport SearchRefiner from '../components/SearchRefiner';\nimport ProfessionalList from '../components/ProfessionalList';\nimport MapView from '../components/MapView';\nimport ProfessionalServicesModal from '../components/ProfessionalServicesModal';\nimport { theme } from '../styles/theme';\n// import { mockProfessionals } from '../data/mockData'; // TODO: Remove mock data after implementing real search\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport BackHeader from '../components/BackHeader';\nimport { searchProfessionals } from '../api/API';\n\nconst SearchProfessionalsListing = ({ navigation, route }) => {\n  const { width: windowWidth } = useWindowDimensions();\n  const { screenWidth, isCollapsed, isSignedIn } = useContext(AuthContext);\n  const [isSingleView, setIsSingleView] = useState(screenWidth <= 1200);\n  const [isMobile, setIsMobile] = useState(screenWidth <= 900);\n  const [activeView, setActiveView] = useState(isSingleView ? 'filters' : 'all');\n  const [professionals, setProfessionals] = useState([]); // Start with empty array\n  const [filters, setFilters] = useState({});\n  const [isMapMinimized, setIsMapMinimized] = useState(false);\n  const [isLeftColumnExpanded, setIsLeftColumnExpanded] = useState(true);\n  const [showingSearch, setShowingSearch] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchResults, setSearchResults] = useState(null);\n  const [currentSearchParams, setCurrentSearchParams] = useState(null);\n  const [region, setRegion] = useState({\n    latitude: 38.8339,\n    longitude: -104.8214,\n    latitudeDelta: 0.0922,\n    longitudeDelta: 0.0421,\n  });\n  const [activeFilters, setActiveFilters] = useState({\n    categories: [],\n  });\n  const [servicesModalVisible, setServicesModalVisible] = useState(false);\n  const [selectedProfessional, setSelectedProfessional] = useState(null);\n\n  // Helper function to extract city from location string\n  const extractCity = (location) => {\n    if (!location) return '';\n    \n    // Try to extract city from \"City, State\" format\n    const cityMatch = location.match(/^([^,]+)/);\n    if (cityMatch && cityMatch[1]) {\n      return cityMatch[1].trim();\n    }\n    \n    // If no match, return the whole location or truncate if too long\n    return truncateLocation(location);\n  };\n  \n  // Helper function to truncate long location strings\n  const truncateLocation = (location, maxLength = 20) => {\n    if (!location) return '';\n    if (location.length <= maxLength) return location;\n    \n    return location.substring(0, maxLength) + '...';\n  };\n  \n  // Helper function to generate filter categories from search params\n  const generateFilterCategories = (searchParams) => {\n    if (!searchParams) return [];\n    \n    debugLog('MBA9999', 'Generating filter categories from search params:', searchParams);\n    \n    const categories = [];\n    \n    // Add animal types (limit to 2 to avoid overcrowding)\n    if (searchParams.animal_types && searchParams.animal_types.length > 0) {\n      if (searchParams.animal_types.length === 1) {\n        categories.push(searchParams.animal_types[0]);\n      } else if (searchParams.animal_types.length === 2) {\n        categories.push(searchParams.animal_types[0]);\n        categories.push(searchParams.animal_types[1]);\n      } else {\n        categories.push(searchParams.animal_types[0]);\n        categories.push(`+${searchParams.animal_types.length - 1} more`);\n      }\n    }\n    \n    // Add location if available (extract city only)\n    if (searchParams.location) {\n      const extractedCity = extractCity(searchParams.location);\n      categories.push(extractedCity);\n      debugLog('MBA9999', `Extracted city \"${extractedCity}\" from location \"${searchParams.location}\"`);\n    }\n    \n    // Add service query if available (truncate if too long)\n    if (searchParams.service_query) {\n      const service = truncateLocation(searchParams.service_query, 15);\n      categories.push(service);\n    }\n    \n    // Add overnight service if true\n    if (searchParams.overnight_service) {\n      categories.push('Overnight');\n    }\n    \n    // Add price range if available and not the default max\n    if (searchParams.price_max && searchParams.price_max < 250) {\n      categories.push(`Under $${searchParams.price_max}`);\n    }\n    \n    // Add badge filters\n    if (searchParams.filter_background_checked) {\n      categories.push('Background Checked');\n    }\n    if (searchParams.filter_insured) {\n      categories.push('Insured');\n    }\n    if (searchParams.filter_elite_pro) {\n      categories.push('Elite Pro');\n    }\n    \n    // Limit to 4 filters max to avoid overflow\n    const finalCategories = categories.length > 4 \n      ? [...categories.slice(0, 3), `+${categories.length - 3} more`]\n      : categories;\n    \n    debugLog('MBA9999', 'Generated filter categories:', finalCategories);\n    return finalCategories;\n  };\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsSingleView(screenWidth <= 1200);\n      setIsMobile(screenWidth <= 900);\n      setActiveView(screenWidth <= 1200 ? 'filters' : 'all');\n    };\n    updateLayout();\n  }, [screenWidth]);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      if (isSingleView) {\n        setActiveView('filters');\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation, isSingleView]);\n\n  // Load initial professionals when component mounts\n  useEffect(() => {\n    loadInitialProfessionals();\n  }, []);\n\n  const loadInitialProfessionals = async () => {\n    setIsLoading(true);\n    try {\n      debugLog('MBA9999', 'Loading initial professionals for Colorado Springs');\n      \n      // Load first 20 professionals in Colorado Springs area with no filters\n      const searchParams = {\n        animal_types: [],\n        location: 'Colorado Springs, Colorado',\n        service_query: '',\n        overnight_service: false,\n        price_min: 0,\n        price_max: 999999,\n        radius_miles: 30,\n        page: 1,\n        page_size: 20\n      };\n      \n      const results = await searchProfessionals(searchParams);\n      \n      debugLog('MBA9999', 'Initial professionals loaded:', results);\n      setSearchResults(results);\n      setProfessionals(results.professionals || []);\n      setCurrentSearchParams(searchParams);\n      \n      // Set initial active filters\n      const filterCategories = generateFilterCategories(searchParams);\n      setActiveFilters({\n        categories: filterCategories\n      });\n      \n    } catch (error) {\n      debugLog('MBA9999', 'Error loading initial professionals:', error);\n      console.error('Error loading initial professionals:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSearchResults = (results, searchParams = null) => {\n    debugLog('MBA9999', 'Received search results:', results);\n    setSearchResults(results);\n    setProfessionals(results.professionals || []);\n    \n    if (searchParams) {\n      setCurrentSearchParams(searchParams);\n      \n      // Update active filters based on search parameters\n      const filterCategories = generateFilterCategories(searchParams);\n      setActiveFilters({\n        categories: filterCategories\n      });\n      \n      debugLog('MBA9999', 'Updated active filters:', filterCategories);\n      debugLog('MBA9999', 'Search complete: Found ' + (results.professionals?.length || 0) + ' professionals with active filters: ' + filterCategories.join(', '));\n    }\n  };\n\n  const handleFiltersChange = (newFilters) => {\n    setFilters(newFilters);\n    // Implement filtering logic here\n  };\n\n  const handleLoadMore = () => {\n    // Implement pagination logic\n  };\n\n  const handleProfessionalSelect = (professional) => {\n    // Instead of navigating to profile, show services modal\n    setSelectedProfessional(professional);\n    setServicesModalVisible(true);\n  };\n\n  const handleShowServicesModal = (professional) => {\n    setSelectedProfessional(professional);\n    setServicesModalVisible(true);\n  };\n\n  const handleCloseServicesModal = () => {\n    setServicesModalVisible(false);\n    setSelectedProfessional(null);\n  };\n\n  const toggleMapSize = () => {\n    setIsMapMinimized(!isMapMinimized);\n  };\n\n  const handleShowProfessionals = (view) => {\n    setShowingSearch(false);\n    if (isSingleView) {\n      if (view === 'map') {\n        setActiveView('map');\n      } else {\n        setActiveView('list');\n      }\n    }\n  };\n\n  const toggleLeftColumn = () => {\n    setIsLeftColumnExpanded(!isLeftColumnExpanded);\n    // If we're expanding the left column, make sure the map is minimized\n    if (!isLeftColumnExpanded) {\n      setIsMapMinimized(true);\n    }\n  };\n\n  const createStyles = (screenWidth, isCollapsed, isSignedIn, isMobile) => StyleSheet.create({\n    mainContainer: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      // Only apply sidebar margin when signed in and on desktop\n      marginLeft: (screenWidth > 900 && isSignedIn) ? (isCollapsed ? 70 : 250) : 0,\n      // Add top padding when not signed in (mobile header) or on mobile when signed in\n      paddingTop: (!isSignedIn || isMobile) ? 60 : 0,\n      transition: 'margin-left 0.3s ease',\n    },\n    container: {\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      height: (!isSignedIn || isMobile) ? 'calc(100vh - 60px)' : '100vh',\n      overflow: 'hidden',\n    },\n    content: {\n      flex: 1,\n      flexDirection: 'row',\n      height: isMobile ? '100%' : 'calc(100vh - 64px)',\n      overflow: 'hidden',\n    },\n    leftColumn: {\n      height: '100%',\n      borderRightWidth: 1,\n      borderRightColor: theme.colors.border,\n      backgroundColor: theme.colors.background,\n      transition: 'width 0.3s ease',\n      position: 'relative',\n      zIndex: 1,\n    },\n    leftColumnToggle: {\n      position: 'absolute',\n      top: '50%',\n      right: -16,\n      transform: [{ translateY: -20 }],\n      zIndex: 2000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 20,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n      width: 32,\n      height: 32,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderWidth: 1,\n      borderColor: theme.colors.border,\n    },\n    mapColumn: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100%',\n      transition: 'width 0.3s ease',\n      position: 'relative',\n      zIndex: 0,\n    },\n    toggleButton: {\n      position: 'absolute',\n      top: theme.spacing.medium,\n      right: theme.spacing.medium,\n      zIndex: 1000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 8,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n    toggleButtonText: {\n      color: theme.colors.primary,\n      fontSize: theme.fontSizes.medium,\n      fontFamily: theme.fonts.regular.fontFamily,\n      fontWeight: '500',\n    },\n    containerMobile: {\n      flex: 1,\n      backgroundColor: theme.colors.background,\n      height: '100%',\n      overflow: 'hidden',\n    },\n    mobileHeader: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      borderBottomWidth: 2,\n      padding: 10,\n      marginHorizontal: 10,\n      backgroundColor: theme.colors.background,\n    },\n    mobileHeaderText: {\n      fontSize: theme.fontSizes.large,\n      fontWeight: '500',\n      fontFamily: theme.fonts.header.fontFamily,\n    },\n    \n    headerIcon: {\n      padding: 8,\n      marginLeft: 16,\n    },\n    searchButton: {\n      backgroundColor: theme.colors.primary,\n      padding: 10,\n      alignItems: 'center',\n      borderRadius: 5,\n      margin: 10,\n    },\n    searchButtonText: {\n      color: theme.colors.whiteText,\n      fontSize: theme.fontSizes.medium + 2,\n      fontFamily: theme.fonts.regular.fontFamily,\n    },\n    mapToggleButton: {\n      position: 'absolute',\n      top: theme.spacing.medium,\n      right: theme.spacing.medium,\n      zIndex: 1000,\n      backgroundColor: theme.colors.surface,\n      padding: theme.spacing.small,\n      borderRadius: 8,\n      shadowColor: \"#000\",\n      shadowOffset: {\n        width: 0,\n        height: 2,\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3,\n      elevation: 3,\n    },\n  });\n\n  const styles = createStyles(screenWidth, isCollapsed, isSignedIn, isMobile);\n\n  const renderContent = () => {\n    if (!isSingleView) {\n      const leftColumnWidth = isLeftColumnExpanded ? '50%' : '33.333%';\n      const mapColumnWidth = isMapMinimized ? '50%' : '66.666%';\n\n      return (\n        <>\n          <View style={[styles.leftColumn, { width: leftColumnWidth }]}>\n            <TouchableOpacity \n              style={[styles.toggleButton, styles.leftColumnToggle]} \n              onPress={toggleLeftColumn}\n            >\n              <MaterialCommunityIcons \n                name={isLeftColumnExpanded ? \"chevron-left\" : \"chevron-right\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            {showingSearch ? (\n              <SearchRefiner \n                onFiltersChange={handleFiltersChange}\n                onShowProfessionals={handleShowProfessionals}\n                onSearchResults={handleSearchResults}\n                initialFilters={currentSearchParams}\n              />\n            ) : (\n            <ProfessionalList\n              professionals={professionals}\n              onLoadMore={handleLoadMore}\n              onProfessionalSelect={handleProfessionalSelect}\n              isMobile={isMobile}\n              filters={activeFilters}\n              searchParams={currentSearchParams}\n              onFilterPress={(view) => {\n                if (view === 'map') {\n                  setActiveView('map');\n                } else {\n                  setShowingSearch(true);\n                }\n              }}\n            />\n            )}\n          </View>\n          <View style={[styles.mapColumn, { width: mapColumnWidth }]}>\n            <TouchableOpacity \n              style={[styles.toggleButton, styles.mapToggleButton]} \n              onPress={toggleMapSize}\n            >\n              <MaterialCommunityIcons \n                name={isMapMinimized ? \"arrow-expand\" : \"arrow-collapse\"} \n                size={24} \n                color={theme.colors.primary} \n              />\n            </TouchableOpacity>\n            <MapView\n              professionals={professionals}\n              onMarkerPress={handleProfessionalSelect}\n              onShowServicesModal={handleShowServicesModal}\n              region={region}\n              isMobile={isMobile}\n            />\n          </View>\n        </>\n      );\n    }\n\n    // Single view (below 1200px)\n    return (\n      <View style={styles.containerMobile}>\n        {activeView === 'filters' && (\n          <>\n            <SearchRefiner \n              onFiltersChange={handleFiltersChange} \n              onShowProfessionals={handleShowProfessionals}\n              onSearchResults={handleSearchResults}\n              isMobile={isSingleView}\n              initialFilters={currentSearchParams}\n            />\n          </>\n        )}\n        \n        {activeView === 'list' && (\n          <>\n            <ProfessionalList\n              professionals={professionals}\n              onLoadMore={handleLoadMore}\n              onProfessionalSelect={handleProfessionalSelect}\n              isMobile={isSingleView}\n              filters={activeFilters}\n              searchParams={currentSearchParams}\n              onFilterPress={(view) => {\n                if (view === 'map') {\n                  setActiveView('map');\n                } else {\n                  setActiveView('filters');\n                }\n              }}\n            />\n          </>\n        )}\n        \n        {activeView === 'map' && (\n          <>\n            <View style={styles.mobileHeader}>\n              <TouchableOpacity onPress={() => setActiveView('list')}>\n                <MaterialCommunityIcons name=\"arrow-left\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n            </View>\n            <MapView\n              professionals={professionals}\n              onMarkerPress={handleProfessionalSelect}\n              onShowServicesModal={handleShowServicesModal}\n              region={region}\n              isMobile={isSingleView}\n            />\n          </>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.mainContainer}>\n      <SafeAreaView style={styles.container}>\n        <View style={styles.content}>\n          {renderContent()}\n        </View>\n      </SafeAreaView>\n      \n      {/* Professional Services Modal */}\n      <ProfessionalServicesModal\n        visible={servicesModalVisible}\n        onClose={handleCloseServicesModal}\n        professional={selectedProfessional}\n        primaryService={selectedProfessional?.primary_service}\n      />\n    </View>\n  );\n};\n\nexport default SearchProfessionalsListing;\n\n","import React, { useState, useEffect, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, FlatList, TouchableOpacity, ActivityIndicator, Platform, Dimensions, ScrollView } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport BookingCard from '../components/BookingCard';\nimport { AuthContext } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { handleBack, navigateToFrom } from '../components/Navigation';\nimport { API_BASE_URL } from '../config/config';\nimport { supportsHover } from '../utils/deviceUtils';\n\nconst MyBookings = () => {\n  const navigation = useNavigation();\n  const { isApprovedProfessional, userRole, is_DEBUG, isCollapsed, screenWidth } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth < 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1200);\n  const [activeTab, setActiveTab] = useState(userRole === 'professional' ? 'professional' : 'owner');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [hoveredFilter, setHoveredFilter] = useState(null);\n  \n  // Check if device supports hover\n  const deviceSupportsHover = supportsHover();\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n      setIsWideScreen(Dimensions.get('window').width >= 1200);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  // Handle role changes\n  useEffect(() => {\n    if (userRole === 'professional' && isApprovedProfessional) {\n      setActiveTab('professional');\n    }\n  }, [userRole, isApprovedProfessional]);\n\n  const fetchBookings = async (pageNum = 1, isLoadMore = false) => {\n    if (isLoadMore) {\n      setIsLoadingMore(true);\n    } else {\n      setLoading(true);\n      setError(null);\n    }\n\n    try {\n      let token = Platform.OS === 'web' ? sessionStorage.getItem('userToken') : await AsyncStorage.getItem('userToken');\n      if (!token) {\n        throw new Error('No authentication token found');\n      }\n\n      if (is_DEBUG) {\n        console.log('MBA1234 Fetching bookings:', {\n          isApprovedProfessional,\n          userRole,\n          activeTab,\n          page: pageNum,\n          status: activeFilter\n        });\n      }\n\n      const response = await axios.get(\n        `${API_BASE_URL}/api/bookings/v1/`,\n        { \n          headers: { Authorization: `Bearer ${token}` },\n          params: {\n            page: pageNum,\n            page_size: 20,\n            status: activeFilter\n          }\n        }\n      );\n\n      const newBookings = activeTab === 'professional' \n        ? response.data.bookings.professional_bookings || []\n        : response.data.bookings.owner_bookings || [];\n\n      if (isLoadMore) {\n        setBookings(prev => [...prev, ...newBookings]);\n      } else {\n        setBookings(newBookings);\n      }\n\n      setHasMore(newBookings.length === 20);\n      setPage(pageNum);\n    } catch (error) {\n      console.error('Error fetching bookings:', error);\n      setError('Failed to fetch bookings');\n    } finally {\n      setLoading(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  // Fetch bookings when component mounts or when dependencies change\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Fetching bookings due to dependency change:', {\n        activeTab,\n        userRole,\n        isApprovedProfessional,\n        activeFilter\n      });\n    }\n    setPage(1);\n    setBookings([]);\n    fetchBookings(1);\n  }, [activeTab, userRole, isApprovedProfessional, activeFilter]);\n\n  // Handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    \n    if (!query.trim()) {\n      setPage(1);\n      setBookings([]);\n      fetchBookings(1);\n      return;\n    }\n\n    const searchLower = query.toLowerCase();\n    const filtered = bookings.filter(booking => {\n      if (activeTab === 'professional') {\n        return (\n          booking.id.toLowerCase().includes(searchLower) ||\n          booking.ownerName.toLowerCase().includes(searchLower)\n        );\n      } else {\n        return (\n          booking.id.toLowerCase().includes(searchLower) ||\n          booking.professionalName.toLowerCase().includes(searchLower)\n        );\n      }\n    });\n\n    setBookings(filtered);\n  };\n\n  const handleLoadMore = () => {\n    if (!isLoadingMore && hasMore) {\n      fetchBookings(page + 1, true);\n    }\n  };\n\n  const handleViewDetails = async (booking) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Navigating to booking details:', {\n        bookingId: booking.booking_id || booking.id,\n        isProfessional: activeTab === 'professional'\n      });\n    }\n    \n    await navigateToFrom(navigation, 'BookingDetails', 'MyBookings', {\n      bookingId: booking.booking_id || booking.id,\n      isProfessional: activeTab === 'professional'\n    });\n  };\n\n  const handleCancelBooking = async (bookingId) => {\n    if (is_DEBUG) {\n      console.log('MBA1234 Cancel booking:', bookingId);\n    }\n  };\n\n  const renderBookingCard = ({ item }) => (\n    <BookingCard\n      booking={{\n        id: item.booking_id || item.id,\n        ownerName: item.owner_name || item.ownerName,\n        professionalName: item.professional_name || item.professionalName,\n        serviceName: item.service_type || item.serviceName,\n        date: item.start_date || item.date,\n        time: item.start_time || item.time,\n        status: item.status\n      }}\n      type={activeTab}\n      onViewDetails={() => handleViewDetails(item)}\n      onCancel={() => handleCancelBooking(item.booking_id || item.id)}\n    />\n  );\n\n  const EmptyStateMessage = () => (\n    <View style={styles.emptyStateContainer}>\n      <MaterialCommunityIcons \n        name={error ? \"alert-circle-outline\" : \"calendar-blank-outline\"} \n        size={64} \n        color={error ? theme.colors.error : theme.colors.primary} \n      />\n      <Text style={styles.emptyStateTitle}>\n        {error ? 'Error Getting Bookings' : 'No Bookings Found'}\n      </Text>\n      <Text style={styles.emptyStateSubtitle}>\n        {error \n          ? 'There was an error fetching your bookings. Please try again later.' \n          : activeTab === 'professional' \n            ? isApprovedProfessional \n              ? 'Create a service to start receiving bookings'\n              : 'Apply to become a professional to start receiving bookings'\n            : 'Browse available services to make your first booking'\n        }\n      </Text>\n      {!error && (\n        <TouchableOpacity\n          style={styles.createServiceButton}\n          onPress={() => navigation.navigate(\n            activeTab === 'professional'\n              ? isApprovedProfessional\n                ? 'ServiceManager'\n                : 'BecomeProfessional'\n              : 'SearchProfessionalsListing'\n          )}\n        >\n          <Text style={styles.createServiceButtonText}>\n            {activeTab === 'professional'\n              ? isApprovedProfessional\n                ? 'Create Service'\n                : 'Become Professional'\n              : 'Browse Services'\n            }\n          </Text>\n        </TouchableOpacity>\n      )}\n      {error && (\n        <TouchableOpacity\n          style={styles.retryButton}\n          onPress={() => fetchBookings(1)}\n        >\n          <Text style={styles.retryButtonText}>Retry</Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n\n  const renderFooter = () => {\n    if (!isLoadingMore) return null;\n    return (\n      <View style={styles.loadingMoreContainer}>\n        <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n      </View>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: isMobile ? 0 : (isCollapsed ? 70 : 250) }\n    ]}>\n      <View style={[styles.content, { marginTop: isMobile ? 60 : 0 }]}>\n        <View style={styles.mainContent}>\n          <View style={styles.headerSection}>\n            <Text style={styles.title}>My Bookings</Text>\n            {isApprovedProfessional && (\n              <View style={styles.tabContainer}>\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'professional' && styles.activeTab]}\n                  onPress={() => setActiveTab('professional')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'professional' && styles.activeTabText]}>\n                    Your Bookings\n                  </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'owner' && styles.activeTab]}\n                  onPress={() => setActiveTab('owner')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'owner' && styles.activeTabText]}>\n                    Owner Bookings\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            )}\n          </View>\n          <View style={styles.bookingsContent}>\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              </View>\n            ) : bookings.length > 0 ? (\n              <View style={styles.bookingsContent}>\n                <View style={styles.stickyHeader}>\n                  <View style={[styles.stickyHeaderContent, { \n                    flexDirection: isWideScreen ? 'row' : 'column'\n                  }]}>\n                    <View style={[\n                      styles.searchContainer, \n                      isWideScreen ? { flex: 0.4, marginRight: 'auto' } : null\n                    ]}>\n                      <MaterialCommunityIcons name=\"magnify\" size={24} color={theme.colors.mybookings.searchBar} />\n                      <TextInput\n                        style={[styles.searchInput, { color: theme.colors.mybookings.searchBar, width: '100%', height: '100%' }]}\n                        placeholder=\"Search by pet name, owner, or date\"\n                        value={searchQuery}\n                        onChangeText={handleSearch}\n                        outlineStyle=\"none\"\n                      />\n                    </View>\n\n                    <View style={[\n                      styles.filtersWrapper,\n                      isWideScreen ? { flex: 0.6, alignItems: 'flex-end' } : null\n                    ]}>\n                      <ScrollView \n                        horizontal \n                        showsHorizontalScrollIndicator={false}\n                        contentContainerStyle={styles.filterScrollContent}\n                      >\n                        <View style={styles.filterContainer}>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.allButton,\n                              deviceSupportsHover && hoveredFilter === 'all' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('all')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('all')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"filter-variant\" \n                                size={16} \n                                color=\"#0784C6\" \n                              />\n                              <Text style={[styles.filterText, styles.allButtonText]}>\n                                All\n                              </Text>\n                              {activeFilter === 'all' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#0784C6\" \n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.pendingButton,\n                              deviceSupportsHover && hoveredFilter === 'pending' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('pending')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('pending')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"clock-outline\" \n                                size={16} \n                                color={theme.colors.mybookings.secondary}\n                              />\n                              <Text style={[styles.filterText, styles.pendingButtonText]}>\n                                Pending\n                              </Text>\n                              {activeFilter === 'pending' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color={theme.colors.mybookings.secondary}\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.confirmedButton,\n                              deviceSupportsHover && hoveredFilter === 'confirmed' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('confirmed')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('confirmed')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"check-circle-outline\" \n                                size={16} \n                                color=\"#898974\"\n                              />\n                              <Text style={[styles.filterText, styles.confirmedButtonText]}>\n                                Confirmed\n                              </Text>\n                              {activeFilter === 'confirmed' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#898974\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.completedButton,\n                              deviceSupportsHover && hoveredFilter === 'completed' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('completed')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('completed')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"flag-checkered\" \n                                size={16} \n                                color={theme.colors.mybookings.completedText}\n                              />\n                              <Text style={[styles.filterText, styles.completedButtonText]}>\n                                Completed\n                              </Text>\n                              {activeFilter === 'completed' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color={theme.colors.mybookings.completedText}\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </ScrollView>\n                    </View>\n                  </View>\n                </View>\n\n                <FlatList\n                  data={bookings}\n                  renderItem={renderBookingCard}\n                  keyExtractor={item => (item.booking_id || item.id || Math.random().toString()).toString()}\n                  contentContainerStyle={styles.listContainer}\n                  onEndReached={handleLoadMore}\n                  onEndReachedThreshold={0.5}\n                  ListFooterComponent={renderFooter}\n                  ListHeaderComponent={<View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />}\n                />\n              </View>\n            ) : (\n              <EmptyStateMessage />\n            )}\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.background,\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  bookingsContent: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: 32,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  stickyHeader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    zIndex: 2,\n    marginHorizontal: 24,\n    marginTop: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    borderRadius: 8,\n    padding: 16,\n  },\n  stickyHeaderContent: {\n    width: '100%',\n    gap: 16,\n  },\n  searchContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9', // #CCCBC9\n  },\n  filterScrollContent: {\n    flexGrow: 0,\n  },\n  filtersWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginRight: -16,\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    gap: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingVertical: 8,\n    paddingLeft: 4,\n    paddingRight: 16,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  filterButtonHovered: {\n    transform: [{ scale: 1.05 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  filterContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n  },\n  checkmark: {\n    marginLeft: 4,\n  },\n  allButton: {\n    backgroundColor: '#EFF9FF', // #EFF9FF\n  },\n  allButtonText: {\n    color: '#0784C6', // #0784C6\n  },\n  pendingButton: {\n    backgroundColor: theme.colors.mybookings.main,\n  },\n  pendingButtonText: {\n    color: theme.colors.mybookings.secondary,\n  },\n  confirmedButton: {\n    backgroundColor: '#E8E9E2', // #E8E9E2\n  },\n  confirmedButtonText: {\n    color: '#898974', // #898974\n  },\n  completedButton: {\n    backgroundColor: '#F5F5F4', // #F5F5F4\n  },\n  completedButtonText: {\n    color: theme.colors.mybookings.completedText,\n  },\n  filterText: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  listHeaderSpacing: {\n    paddingTop: 16,\n  },\n  listContainer: {\n    paddingHorizontal: 24,\n    paddingBottom: 34,\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingMoreContainer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n  },\n  emptyStateContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  emptyStateTitle: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginTop: 16,\n    textAlign: 'center',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  emptyStateSubtitle: {\n    fontSize: 16,\n    color: theme.colors.placeholder,\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  createServiceButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  retryButton: {\n    backgroundColor: theme.colors.error,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  retryButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  searchInput: {\n    outlineStyle: 'none',\n    outlineWidth: 0,\n    outline: 'none',\n    marginLeft: 8,\n  },\n});\n\nexport default MyBookings;","import React, { useContext } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Image } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\n\nconst LogoHeader = ({ \n  title = \"CrittrCove\", \n  onProfilePress = null,\n  customStyles = {} \n}) => {\n  const navigation = useNavigation();\n  const { userProfileImage } = useContext(AuthContext);\n\n  const handleProfilePress = () => {\n    if (onProfilePress) {\n      onProfilePress();\n    } else {\n      // Default navigation to profile screen\n      navigation.navigate('Profile');\n    }\n  };\n\n  const handleNavigation = (route) => {\n    navigation.navigate(route);\n  };\n\n  return (\n    <View style={[styles.header, customStyles]}>\n      {/* Logo/Title on the left */}\n      <TouchableOpacity onPress={() => handleNavigation('Home')}>\n            <Image\n                source={require('../../assets/logo.png')}\n                style={[styles.mobileLogo, { tintColor: theme.colors.primary }]}\n            />\n        </TouchableOpacity>\n      \n      {/* Profile icon on the right */}\n      <TouchableOpacity \n        onPress={handleProfilePress} \n        style={styles.profileButton}\n      >\n        {userProfileImage ? (\n          <Image \n            source={{ uri: userProfileImage }} \n            style={styles.profileImage}\n          />\n        ) : (\n          <MaterialCommunityIcons \n            name=\"account-circle\" \n            size={32} \n            color={theme.colors.primary} \n          />\n        )}\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  header: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    backgroundColor: theme.colors.background,\n    zIndex: 100,\n    elevation: 100,\n  },\n  logoContainer: {\n    flex: 1,\n  },\n  logoText: {\n    fontSize: theme.fontSizes.large,\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  profileButton: {\n    padding: 4,\n  },\n  mobileLogo: {\n    height: 40,\n    width: 120,\n    resizeMode: 'contain',\n  },\n  profileImage: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: theme.colors.surface,\n  },\n});\n\nexport default LogoHeader; ","import React, { useState, useEffect, useContext, useCallback } from 'react';\nimport { View, StyleSheet, ActivityIndicator, Platform, Dimensions, ScrollView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { useNavigation, useFocusEffect } from '@react-navigation/native';\nimport ServiceManager from '../components/ServiceManager';\nimport { theme } from '../styles/theme';\nimport LogoHeader from '../components/LogoHeader';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getProfessionalServices } from '../api/API';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { useToast } from '../components/ToastProvider';\n\nconst ServiceManagerScreen = () => {\n  const navigation = useNavigation();\n  const [services, setServices] = useState([]);\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isMobile, setIsMobile] = useState(Platform.OS === 'web' ? false : true);\n  const [isMobileBrowser, setIsMobileBrowser] = useState(Dimensions.get('window').width < 900);\n  const { isCollapsed, is_DEBUG, isSignedIn, userRole } = useContext(AuthContext);\n  const showToast = useToast();\n\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobileBrowser(Dimensions.get('window').width < 900);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  const fetchServices = async () => {\n    try {\n      if (userRole === 'professional') {\n        setIsLoading(true);\n        const data = await getProfessionalServices();\n        if (is_DEBUG) console.log('MBA7890: Fetched services:', data);\n        setServices(data);\n      }\n    } catch (error) {\n      console.error('MBA7890: Error fetching services:', error);\n      if (userRole === 'professional') {\n        showToast({\n          message: 'Failed to load services',\n          type: 'error',\n          duration: 3000\n        });\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    // Only fetch services if user is signed in and has a role\n    if (isSignedIn && userRole) {\n      debugLog('MBA7890', 'Fetching services for user:', { userRole, isSignedIn });\n      fetchServices();\n    } else {\n      // Clear services if user is not signed in\n      setServices([]);\n      setIsLoading(false);\n    }\n  }, [isSignedIn, userRole]);\n\n  // Effect to handle unsaved changes\n  useEffect(() => {\n    if (hasUnsavedChanges) {\n      fetchServices();\n      setHasUnsavedChanges(false);\n    }\n  }, [hasUnsavedChanges]);\n\n  // Fetch services when screen comes into focus (ensures fresh data after navigation)\n  useFocusEffect(\n    useCallback(() => {\n      if (isSignedIn && userRole) {\n        debugLog('MBA7890', 'Screen focused, fetching services for user:', { userRole, isSignedIn });\n        fetchServices();\n      }\n    }, [isSignedIn, userRole])\n  );\n\n  useEffect(() => {\n    const setRouteHistory = async () => {\n      const currentRoute = 'ServiceManager';\n      let previousRoute;\n\n      if (Platform.OS === 'web') {\n        previousRoute = sessionStorage.getItem('previousRoute');\n        sessionStorage.setItem('previousRoute', previousRoute || '');\n        sessionStorage.setItem('currentRoute', currentRoute);\n      } else {\n        previousRoute = await AsyncStorage.getItem('previousRoute');\n        await AsyncStorage.setItem('previousRoute', previousRoute || '');\n        await AsyncStorage.setItem('currentRoute', currentRoute);\n      }\n\n      if (!previousRoute) {\n        previousRoute = 'Dashboard';\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('previousRoute', previousRoute || '');\n          sessionStorage.setItem('currentRoute', currentRoute);\n        } else {\n          await AsyncStorage.setItem('previousRoute', previousRoute || '');\n          await AsyncStorage.setItem('currentRoute', currentRoute);\n        }\n      }\n    };\n    setRouteHistory();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <View style={[styles.container, styles.loadingContainer]}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n      </View>\n    );\n  }\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: !isMobileBrowser ? (isCollapsed ? 70 : 250) : 0 }\n    ]}>\n      {isMobile ? (\n        <SafeAreaView style={styles.safeAreaContainer}>\n          <LogoHeader title=\"CrittrCove\" />\n          <ScrollView \n            style={styles.scrollView}\n            contentContainerStyle={[styles.scrollContent, { marginTop: 20 }]}\n            showsVerticalScrollIndicator={false}\n          >\n            <ServiceManager\n              services={services || []}\n              setServices={setServices}\n              setHasUnsavedChanges={setHasUnsavedChanges}\n              isProfessionalTab={false}\n              isMobile={isMobile}\n            />\n          </ScrollView>\n        </SafeAreaView>\n      ) : (\n        <View \n          style={[styles.content, { marginTop: isMobileBrowser ? 30 : 0 }]}\n          showsVerticalScrollIndicator={false}\n        >\n          <ServiceManager\n            services={services || []}\n            setServices={setServices}\n            setHasUnsavedChanges={setHasUnsavedChanges}\n            isProfessionalTab={false}\n            isMobile={isMobile}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  safeAreaContainer: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  scrollContent: {\n    flexGrow: 1,\n    paddingBottom: 80,\n  },\n});\n\nexport default ServiceManagerScreen; ","import React, { useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  Platform,\n  TextInput\n} from 'react-native';\nimport { useTheme, Searchbar } from 'react-native-paper';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackHeader from '../components/BackHeader';\nimport { theme } from '../styles/theme';\nimport { navigateToFrom } from '../components/Navigation';\n\nconst BlogScreen = ({ navigation }) => {\n  const theme = useTheme();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState(BLOG_POSTS);\n\n  const handleBack = () => {\n    navigation.navigate('More');\n  };\n\n  const handleSearch = useCallback((query) => {\n    setSearchQuery(query);\n    const lowercaseQuery = query.toLowerCase();\n    const filtered = BLOG_POSTS.filter(post => \n      post.title.toLowerCase().includes(lowercaseQuery) ||\n      post.author.name.toLowerCase().includes(lowercaseQuery) ||\n      post.content.toLowerCase().includes(lowercaseQuery)\n    );\n    setFilteredPosts(filtered);\n  }, []);\n\n  const renderBlogPost = (post) => {\n    const truncatedContent = post.content.slice(0, 200) + '...';\n\n    return (\n      <TouchableOpacity\n        key={post.id}\n        style={[styles.blogCard, { backgroundColor: theme.colors.surface }]}\n        onPress={() => navigateToFrom(navigation, 'Blog', 'BlogPost', { post })}\n      >\n        <View style={styles.authorContainer}>\n          <Image\n            source={{ uri: post.author.profilePicture }}\n            style={styles.authorImage}\n          />\n          <View style={styles.blogContent}>\n            <Text style={[styles.title, { color: theme.colors.primary }]}>{post.title}</Text>\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.dot}> • </Text>\n              <Text style={styles.readTime}>{post.readTime}</Text>\n            </View>\n            <Text style={styles.preview} numberOfLines={3}>\n              {truncatedContent}\n            </Text>\n            <View style={styles.tags}>\n              {post.tags.map((tag, index) => (\n                <View \n                  key={index} \n                  style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n                >\n                  <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n                </View>\n              ))}\n            </View>\n            <View style={styles.stats}>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"heart-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.likes}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"comment-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.comments}</Text>\n              </View>\n              <View style={styles.stat}>\n                <MaterialCommunityIcons name=\"share-outline\" size={20} color={theme.colors.secondary} />\n                <Text style={styles.statText}>{post.shares}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <View style={[styles.container, { backgroundColor: theme.colors.background }]}>\n      <BackHeader \n        title=\"Blog\" \n        onBackPress={handleBack}\n      />\n      <View style={styles.searchBarContainer}>\n        {Platform.OS === 'web' ? (\n          <View style={[styles.searchBar, { backgroundColor: theme.colors.surface }]}>\n            <MaterialCommunityIcons name=\"magnify\" size={24} color={theme.colors.primary} />\n            <TextInput\n              placeholder=\"Search by title, author, or content\"\n              onChangeText={handleSearch}\n              value={searchQuery}\n              style={styles.webSearchInput}\n            />\n            {searchQuery ? (\n              <TouchableOpacity onPress={() => handleSearch('')}>\n                <MaterialCommunityIcons name=\"close-circle\" size={24} color={theme.colors.primary} />\n              </TouchableOpacity>\n            ) : null}\n          </View>\n        ) : (\n          <Searchbar\n            placeholder=\"Search by title, author, or content\"\n            onChangeText={handleSearch}\n            value={searchQuery}\n            style={styles.searchBar}\n            icon=\"magnify\"\n            clearIcon=\"close-circle\"\n          />\n        )}\n      </View>\n      <ScrollView style={styles.scrollView}>\n        {filteredPosts.length > 0 ? (\n          filteredPosts.map(renderBlogPost)\n        ) : (\n          <View style={styles.noResultsContainer}>\n            <MaterialCommunityIcons \n              name=\"magnify-close\" \n              size={48} \n              color={theme.colors.secondary} \n            />\n            <Text style={[styles.noResultsText, { color: theme.colors.secondary }]}>\n              No blog posts found\n            </Text>\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  searchBarContainer: {\n    margin: 16,\n  },\n  searchBar: {\n    elevation: 4,\n    borderRadius: 8,\n    backgroundColor: theme.colors.surface,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  searchInput: {\n    fontSize: 16,\n    color: theme.colors.text,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  blogCard: {\n    margin: 16,\n    padding: 16,\n    borderRadius: 12,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  authorContainer: {\n    flexDirection: 'row',\n  },\n  authorImage: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    marginRight: 12,\n  },\n  blogContent: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  authorName: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  readTime: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  preview: {\n    fontSize: 14,\n    lineHeight: 20,\n    marginBottom: 12,\n    color: '#444',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginBottom: 12,\n  },\n  tag: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 12,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    marginTop: 8,\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 16,\n  },\n  statText: {\n    marginLeft: 4,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noResultsContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    marginTop: 40,\n  },\n  noResultsText: {\n    fontSize: 18,\n    fontWeight: '500',\n    marginTop: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  webSearchInput: {\n    flex: 1,\n    padding: 8,\n    fontSize: 16,\n    color: theme.colors.text,\n    border: 'none',\n    backgroundColor: 'transparent',\n    WebkitTapHighlightColor: 'transparent',\n    outlineWidth: 0,\n    outlineStyle: 'none',\n    boxShadow: 'none',\n    borderColor: 'transparent',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default BlogScreen;","import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  Linking,\n  Platform\n} from 'react-native';\nimport { useTheme } from 'react-native-paper';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport BackHeader from '../components/BackHeader';\nimport { theme } from '../styles/theme';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { BLOG_POSTS } from '../data/mockData';\nimport { handleBack, navigateToFrom } from '../components/Navigation';\n\nconst BlogPost = ({ route, navigation }) => {\n  const [post, setPost] = useState(null);\n  const theme = useTheme();\n\n  // Validate post data structure\n  const isValidPost = (postData) => {\n    return postData && \n           typeof postData === 'object' && \n           postData.author && \n           typeof postData.author === 'object' &&\n           postData.author.name &&\n           postData.author.profilePicture &&\n           postData.author.bio &&\n           postData.title &&\n           postData.content &&\n           Array.isArray(postData.tags);\n  };\n\n  useEffect(() => {\n    const loadPost = async () => {\n      try {\n        // Try to get post from route params first\n        if (route?.params?.post && isValidPost(route.params.post)) {\n          setPost(route.params.post);\n          // Store the post data\n          if (Platform.OS === 'web') {\n            sessionStorage.setItem('currentBlogPost', JSON.stringify(route.params.post));\n          } else {\n            await AsyncStorage.setItem('currentBlogPost', JSON.stringify(route.params.post));\n          }\n          return;\n        }\n\n        // If no route params or invalid post, try to load from storage\n        let storedPost;\n        if (Platform.OS === 'web') {\n          storedPost = sessionStorage.getItem('currentBlogPost');\n        } else {\n          storedPost = await AsyncStorage.getItem('currentBlogPost');\n        }\n\n        if (storedPost) {\n          const parsedPost = JSON.parse(storedPost);\n          if (isValidPost(parsedPost)) {\n            setPost(parsedPost);\n            return;\n          }\n        }\n\n        // If no valid post found in storage, try to find it in BLOG_POSTS\n        if (route?.params?.postId) {\n          const foundPost = BLOG_POSTS.find(p => p.id === route.params.postId);\n          if (foundPost && isValidPost(foundPost)) {\n            setPost(foundPost);\n            return;\n          }\n        }\n\n        // If still no valid post, redirect to blog list\n        navigateToFrom(navigation, 'Blog', 'BlogPost');\n      } catch (error) {\n        console.error('Error loading blog post:', error);\n        navigateToFrom(navigation, 'Blog', 'BlogPost');\n      }\n    };\n\n    loadPost();\n  }, [route?.params]);\n\n  // If no post data is available, show an error state\n  if (!post || !isValidPost(post)) {\n    return (\n      <View style={[styles.mainContainer, { backgroundColor: theme.colors.background }]}>\n        <BackHeader \n          title=\"Blog Post\"\n          onBackPress={() => handleBack(navigation)}\n        />\n        <View style={styles.errorContainer}>\n          <MaterialCommunityIcons \n            name=\"alert-circle-outline\" \n            size={48} \n            color={theme.colors.error} \n          />\n          <Text style={[styles.errorText, { color: theme.colors.error }]}>\n            Blog post not found or invalid\n          </Text>\n          <TouchableOpacity\n            style={[styles.errorButton, { backgroundColor: theme.colors.primary }]}\n            onPress={() => navigateToFrom(navigation, 'Blog', 'BlogPost')}\n          >\n            <Text style={[styles.errorButtonText, { color: theme.colors.surface }]}>\n              Go to Blog List\n            </Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n\n  const handleReferencePress = (reference) => {\n    if (reference.url) {\n      Linking.openURL(reference.url);\n    } else if (reference.doi) {\n      Linking.openURL(`https://doi.org/${reference.doi}`);\n    }\n  };\n\n  return (\n    <View style={[styles.mainContainer, { backgroundColor: theme.colors.background }]}>\n      <BackHeader \n        title={post.title}\n        onBackPress={() => handleBack(navigation)}\n      />\n      <ScrollView style={styles.container}>\n        <View style={styles.header}>\n          <View style={styles.authorContainer}>\n            <Image\n              source={{ uri: post.author.profilePicture }}\n              style={styles.authorImage}\n            />\n            <View style={styles.authorInfo}>\n              <Text style={[styles.authorName, { color: theme.colors.secondary }]}>\n                {post.author.name}\n              </Text>\n              <Text style={styles.authorBio}>{post.author.bio}</Text>\n              <View style={styles.postInfo}>\n                <Text style={styles.date}>{post.publishDate}</Text>\n                <Text style={styles.dot}> • </Text>\n                <Text style={styles.readTime}>{post.readTime}</Text>\n              </View>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.tags}>\n          {post.tags.map((tag, index) => (\n            <View \n              key={index} \n              style={[styles.tag, { backgroundColor: theme.colors.primary + '20' }]}\n            >\n              <Text style={[styles.tagText, { color: theme.colors.primary }]}>{tag}</Text>\n            </View>\n          ))}\n        </View>\n\n        <Text style={[styles.content, { color: theme.colors.text }]}>{post.content}</Text>\n\n        <View style={styles.stats}>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"heart-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.likes}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"comment-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.comments}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.stat}>\n            <MaterialCommunityIcons name=\"share-outline\" size={24} color={theme.colors.secondary} />\n            <Text style={styles.statText}>{post.shares}</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.references}>\n          <Text style={[styles.referencesTitle, { color: theme.colors.primary }]}>References</Text>\n          {post.references.map((reference, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.reference}\n              onPress={() => handleReferencePress(reference)}\n            >\n              <Text style={styles.referenceText}>\n                {reference.authors} ({reference.year || 'n.d.'}). {reference.title}. {reference.publication}.\n                {reference.doi && ` DOI: ${reference.doi}`}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  mainContainer: {\n    flex: 1,\n  },\n  container: {\n    flex: 1,\n  },\n  header: {\n    padding: 16,\n  },\n  authorContainer: {\n    flexDirection: 'row',\n    marginBottom: 16,\n  },\n  authorImage: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 12,\n  },\n  authorInfo: {\n    flex: 1,\n  },\n  authorName: {\n    fontSize: 16,\n    fontWeight: '600',\n    marginBottom: 4,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  authorBio: {\n    fontSize: 14,\n    color: '#666',\n    marginBottom: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  postInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  date: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dot: {\n    marginHorizontal: 4,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  readTime: {\n    fontSize: 14,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  tags: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 16,\n    paddingTop: 0,\n  },\n  tag: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    marginRight: 8,\n    marginBottom: 8,\n  },\n  tagText: {\n    fontSize: 14,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  content: {\n    fontSize: 16,\n    lineHeight: 24,\n    padding: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  stats: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 16,\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n  },\n  stat: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  statText: {\n    marginLeft: 8,\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  references: {\n    padding: 16,\n  },\n  referencesTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 12,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  reference: {\n    marginBottom: 12,\n  },\n  referenceText: {\n    fontSize: 14,\n    color: '#444',\n    lineHeight: 20,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    fontSize: 18,\n    fontWeight: '500',\n    marginTop: 16,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  errorButton: {\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n  },\n  errorButtonText: {\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default BlogPost;","import React, { useState, useContext } from 'react';\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, Platform, ScrollView, Clipboard, Modal, FlatList } from 'react-native';\nimport { theme } from '../styles/theme';\nimport BackHeader from '../components/BackHeader';\nimport CrossPlatformView from '../components/CrossPlatformView';\nimport { useNavigation } from '@react-navigation/native';\nimport { AuthContext } from '../context/AuthContext';\nimport { useForm, ValidationError } from '@formspree/react';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst CrossPlatformContent = ({ children }) => {\n  // For web, we need to add a div with margin auto to center content\n  if (Platform.OS === 'web') {\n    return (\n      <View style={{ \n        width: '100%', \n        maxWidth: 550, \n        marginLeft: 'auto', \n        marginRight: 'auto',\n        paddingHorizontal: 15\n      }}>\n        {children}\n      </View>\n    );\n  }\n  // For native, just return children\n  return <>{children}</>;\n};\n\nconst ValidationModal = ({ visible, message, onClose }) => {\n  return (\n    <Modal\n      visible={visible}\n      transparent\n      animationType=\"fade\"\n      onRequestClose={onClose}\n    >\n      <View style={styles.modalOverlay}>\n        <View style={styles.modalContent}>\n          <Text style={styles.modalText}>{message}</Text>\n          <TouchableOpacity\n            style={styles.modalButton}\n            onPress={onClose}\n          >\n            <Text style={styles.modalButtonText}>OK</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nconst CityDropdown = ({ selectedCity, onSelectCity }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const cities = [\n    { id: '1', name: 'Colorado Springs' },\n    { id: '2', name: 'Denver' },\n    { id: '3', name: 'Boulder' },\n    { id: '4', name: 'Fort Collins' },\n    { id: '5', name: 'Pueblo' },\n    { id: '6', name: 'Aurora' },\n    { id: '7', name: 'Littleton' },\n    { id: '8', name: 'Castle Rock' },\n    { id: '9', name: 'Parker' },\n    { id: '10', name: 'Centennial' },\n    { id: '11', name: 'Other' }\n  ];\n\n  const filteredCities = cities.filter(city => \n    city.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  // Always include \"Other\" in the results if it's not already there\n  const displayCities = filteredCities.some(city => city.name === 'Other')\n    ? filteredCities\n    : [...filteredCities, { id: '11', name: 'Other' }];\n\n  const renderCityItem = ({ item }) => (\n    <TouchableOpacity\n      style={[\n        styles.cityItem,\n        item.name === 'Other' && styles.otherCityItem\n      ]}\n      onPress={() => {\n        onSelectCity(item.name);\n        setIsOpen(false);\n      }}\n    >\n      <Text style={[\n        styles.cityItemText,\n        item.name === 'Other' && styles.otherCityText\n      ]}>\n        {item.name}\n      </Text>\n    </TouchableOpacity>\n  );\n\n  return (\n    <View style={styles.dropdownContainer}>\n      <TouchableOpacity\n        style={[styles.dropdownButton, !selectedCity && styles.requiredField]}\n        onPress={() => setIsOpen(!isOpen)}\n      >\n        <Text style={styles.dropdownButtonText}>\n          {selectedCity || 'Select your city'}\n        </Text>\n        <MaterialCommunityIcons\n          name={isOpen ? \"chevron-up\" : \"chevron-down\"}\n          size={24}\n          color={theme.colors.primary}\n        />\n      </TouchableOpacity>\n\n      {isOpen && (\n        <View style={styles.dropdownList}>\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search cities...\"\n            value={searchQuery}\n            onChangeText={setSearchQuery}\n          />\n          <FlatList\n            data={displayCities}\n            renderItem={renderCityItem}\n            keyExtractor={item => item.id}\n            style={styles.cityList}\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst Waitlist = () => {\n  const navigation = useNavigation();\n  const { is_prototype, screenWidth } = useContext(AuthContext);\n  const [state, handleFormspreeSubmit] = useForm(\"mkgobpro\");\n  \n  // Form state\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [phone, setPhone] = useState('');\n  const [petInfo, setPetInfo] = useState('');\n  const [selectedServices, setSelectedServices] = useState([]);\n  const [userType, setUserType] = useState('');\n  const [hesitations, setHesitations] = useState('');\n  const [desiredFeatures, setDesiredFeatures] = useState('');\n  const [newsletter, setNewsletter] = useState(false);\n  const [agreeToTerms, setAgreeToTerms] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [otherService, setOtherService] = useState('');\n  const [showOtherInput, setShowOtherInput] = useState(false);\n  const [streetAddress, setStreetAddress] = useState('');\n  const [aptUnit, setAptUnit] = useState('');\n  const [city, setCity] = useState('');\n  const [stateRegion, setStateRegion] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [referralSource, setReferralSource] = useState('');\n  const [otherReferralSource, setOtherReferralSource] = useState('');\n  const [validationModal, setValidationModal] = useState({\n    visible: false,\n    message: ''\n  });\n  const [emailError, setEmailError] = useState('');\n  const [phoneError, setPhoneError] = useState('');\n  const [selectedCity, setSelectedCity] = useState('');\n  const [otherCity, setOtherCity] = useState('');\n  const [cityError, setCityError] = useState('');\n\n  // Calculate responsive widths\n  const isMobile = screenWidth < 768;\n  const maxContentWidth = '100%';\n\n  // Navigation handler for back button\n  const handleBackToSignup = () => {\n    navigation.navigate('SignUp');\n  };\n\n  const services = [\n    'Pet Sitting',\n    'Grooming',\n    'Training',\n    'Veterinary Services',\n    'Farm/Homestead Care',\n    'Care Consulting',\n    'Other'\n  ];\n\n  const userTypes = [\n    'Pet owner in need of services',\n    'Care specialist (sitter, groomer, ferrier, fish tank cleaner, etc)',\n    'Both'\n  ];\n\n  const referralSources = [\n    'Nextdoor',\n    'Reddit',\n    'Google',\n    'Other - Enter name of Person who referred you or other referral source for a free sticker'\n  ];\n\n  // Validation functions\n  const validateEmail = (email) => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  const formatPhoneNumber = (text) => {\n    // Remove all non-numeric characters\n    const cleaned = text.replace(/\\D/g, '');\n    \n    // Format as (XXX) XXX-XXXX\n    const match = cleaned.match(/^(\\d{0,3})(\\d{0,3})(\\d{0,4})$/);\n    if (match) {\n      const [, area, prefix, line] = match;\n      let formatted = '';\n      if (area) formatted += `(${area}`;\n      if (prefix) formatted += `) ${prefix}`;\n      if (line) formatted += `-${line}`;\n      return formatted;\n    }\n    return cleaned;\n  };\n\n  const handlePhoneChange = (text) => {\n    const formatted = formatPhoneNumber(text);\n    setPhone(formatted);\n    setPhoneError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Reset validation errors\n    setEmailError('');\n    setPhoneError('');\n    setCityError('');\n\n    // Validate email\n    if (!validateEmail(email)) {\n      setEmailError('Please enter a valid email address');\n      setValidationModal({\n        visible: true,\n        message: 'Please enter a valid email address'\n      });\n      return;\n    }\n\n    // Validate phone\n    if (!phone) {\n      setPhoneError('Please enter a valid phone number');\n      setValidationModal({\n        visible: true,\n        message: 'Please enter a valid phone number'\n      });\n      return;\n    }\n\n    // Validate city\n    if (!selectedCity) {\n      setCityError('Please select your city');\n      setValidationModal({\n        visible: true,\n        message: 'Please select your city'\n      });\n      return;\n    }\n\n    // Validate other city input if \"Other\" is selected\n    if (selectedCity === 'Other' && !otherCity.trim()) {\n      setCityError('Please specify your city');\n      setValidationModal({\n        visible: true,\n        message: 'Please specify your city'\n      });\n      return;\n    }\n\n    if (!email || !firstName || !lastName || !phone || !petInfo || selectedServices.length === 0 || !userType || !agreeToTerms || !referralSource) {\n      setValidationModal({\n        visible: true,\n        message: 'Please fill in all required fields'\n      });\n      return;\n    }\n\n    // Check if Other is selected but no input provided for services\n    if (selectedServices.includes('Other') && !otherService.trim()) {\n      setValidationModal({\n        visible: true,\n        message: 'Please specify the other service you are interested in'\n      });\n      return;\n    }\n\n    // Check if Other is selected but no input provided for referral source\n    if (referralSource === 'Other - Enter name of Person who referred you or other referral source for a free sticker' && !otherReferralSource.trim()) {\n      setValidationModal({\n        visible: true,\n        message: 'Please specify where you heard about us'\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const formData = {\n        firstName,\n        lastName,\n        email,\n        phone,\n        petInfo,\n        services: selectedServices.includes('Other') \n          ? [...selectedServices.filter(s => s !== 'Other'), `Other - ${otherService.trim()}`].join(', ')\n          : selectedServices.join(', '),\n        userType,\n        hesitations,\n        desiredFeatures,\n        newsletter: newsletter ? 'Yes' : 'No',\n        agreeToTerms: agreeToTerms ? 'Yes' : 'No',\n        referralSource: referralSource === 'Other - Enter name of Person who referred you or other referral source for a free sticker' \n          ? `Other - ${otherReferralSource.trim()}`\n          : referralSource,\n        // Flatten address fields\n        streetAddress: streetAddress || '',\n        aptUnit: aptUnit || '',\n        city: selectedCity === 'Other' ? `Other - ${otherCity.trim()}` : selectedCity,\n        stateRegion: stateRegion || '',\n        zipCode: zipCode || '',\n      };\n\n      console.log('MBA9876: Submitting form data:', formData);\n      const response = await handleFormspreeSubmit(formData);\n      console.log('MBA9876: Formspree response:', response);\n\n      if (state.succeeded) {\n        // Reset form\n        setFirstName('');\n        setLastName('');\n        setEmail('');\n        setPhone('');\n        setPetInfo('');\n        setSelectedServices([]);\n        setOtherService('');\n        setShowOtherInput(false);\n        setUserType('');\n        setHesitations('');\n        setDesiredFeatures('');\n        setNewsletter(false);\n        setAgreeToTerms(false);\n        setStreetAddress('');\n        setAptUnit('');\n        setCity('');\n        setStateRegion('');\n        setZipCode('');\n        setReferralSource('');\n        setOtherReferralSource('');\n      }\n    } catch (error) {\n      console.error('MBA9876: Error submitting form:', error);\n      console.error('MBA9876: Error response:', error.response?.data);\n      setValidationModal({\n        visible: true,\n        message: error.response?.data?.error || 'An error occurred while submitting the form. Please try again.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const toggleService = (service) => {\n    setSelectedServices(prev => {\n      if (service === 'Other') {\n        setShowOtherInput(!prev.includes('Other'));\n      }\n      return prev.includes(service)\n        ? prev.filter(s => s !== service)\n        : [...prev, service];\n    });\n  };\n\n  const handleCopyLink = async () => {\n    try {\n      await Clipboard.setString('https://crittrcove.com/waitlist');\n      alert('Link copied to clipboard!');\n    } catch (error) {\n      console.error('Failed to copy link:', error);\n    }\n  };\n\n  if (state.succeeded) {\n    return (\n      <CrossPlatformView fullWidthHeader={true} contentWidth={maxContentWidth}>\n        <BackHeader \n          title=\"Join Waitlist\" \n          onBackPress={handleBackToSignup} \n        />\n        <ScrollView \n          style={styles.scrollView} \n          contentContainerStyle={styles.scrollViewContent}\n        >\n          <CrossPlatformContent>\n            <View style={styles.container}>\n              <View style={styles.contentWrapper}>\n                <Text style={[styles.title, { color: theme.colors.primary }]}>\n                  Thank you for joining the CrittrCove waitlist!\n                </Text>\n                <Text style={styles.successMessage}>\n                  As a waitlist member, you'll enjoy exclusive early access to the app, priority placement, \n                  special gifts, and a unique profile badge to highlight your role as a founding member of CrittrCove.\n                </Text>\n                <View style={styles.referralSection}>\n                  <Text style={[styles.title, { fontSize: theme.fontSizes.large, marginTop: 20 }]}>\n                    Want Another Custom Pet Sticker? 🎁\n                  </Text>\n                  <Text style={styles.successMessage}>\n                    Share CrittrCove with your pet-loving friends! When they join the waitlist using this link:\n                  </Text>\n                  <View style={styles.linkContainer}>\n                    <Text style={styles.link}>https://crittrcove.com/waitlist</Text>\n                    <TouchableOpacity onPress={handleCopyLink} style={styles.copyButton}>\n                      <MaterialCommunityIcons name=\"content-copy\" size={20} color={theme.colors.primary} />\n                    </TouchableOpacity>\n                  </View>\n                  <Text style={styles.successMessage}>\n                    and mention your name, we'll send you another custom sticker featuring your pet. It's our way of saying thank you for helping\n                    grow our community!\n                  </Text>\n                  <Text style={[styles.successMessage, { fontStyle: 'italic' }]}>\n                    Simply tell your friends to mention your name when they sign up, and we'll take care of the rest.\n                  </Text>\n                </View>\n                <Text style={styles.successMessage}>\n                  Stay tuned for exciting updates!\n                </Text>\n              </View>\n            </View>\n          </CrossPlatformContent>\n        </ScrollView>\n      </CrossPlatformView>\n    );\n  }\n\n  return (\n    <CrossPlatformView fullWidthHeader={true} contentWidth={maxContentWidth}>\n      <BackHeader \n        title=\"Join Waitlist\" \n        onBackPress={handleBackToSignup} \n      />\n      <ScrollView \n        style={styles.scrollView} \n        contentContainerStyle={styles.scrollViewContent}\n      >\n        <CrossPlatformContent>\n          <View style={styles.container}>\n            <View style={styles.contentWrapper}>\n              <Text style={styles.title}>Join the CrittrCove Waitlist!</Text>\n              <Text style={styles.description}>\n                Welcome to Critter Cove's early sign-up, the ultimate pet care marketplace for all pets—whether furry, feathery, or scaly! \n                Our app connects local pet care specialists with pet owners, offering reliable and loving care for your beloved companions.\n              </Text>\n              <Text style={styles.description}>\n                By joining our waitlist, you'll gain early access to exclusive features, special gifts, education, discounts, a custom sticker featuring your pet (if you so wish), and a profile badge as a founding member of the Critter Cove community.\n              </Text>\n\n              <Text style={styles.requiredFieldNote}>\n                <Text style={styles.requiredAsterisk}>*</Text> indicates required field\n              </Text>\n\n              <View style={styles.formSection}>\n                <View style={styles.nameContainer}>\n                  <View style={styles.nameField}>\n                    <Text style={styles.label}>First Name <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={styles.input}\n                      value={firstName}\n                      onChangeText={setFirstName}\n                      placeholder=\"First Name\"\n                    />\n                  </View>\n                  <View style={styles.nameField}>\n                    <Text style={styles.label}>Last Name <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={styles.input}\n                      value={lastName}\n                      onChangeText={setLastName}\n                      placeholder=\"Last Name\"\n                    />\n                  </View>\n                </View>\n\n                <Text style={styles.label}>Email <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={[styles.input, emailError ? styles.inputError : null]}\n                  value={email}\n                  onChangeText={(text) => {\n                    setEmail(text);\n                    setEmailError('');\n                  }}\n                  placeholder=\"Email\"\n                  keyboardType=\"email-address\"\n                  autoCapitalize=\"none\"\n                />\n                {emailError ? <Text style={styles.errorText}>{emailError}</Text> : null}\n\n                <Text style={styles.label}>Phone Number <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={[styles.input, phoneError ? styles.inputError : null]}\n                  value={phone}\n                  onChangeText={handlePhoneChange}\n                  placeholder=\"(XXX) XXX-XXXX\"\n                  keyboardType=\"numeric\"\n                  maxLength={14}\n                />\n                {phoneError ? <Text style={styles.errorText}>{phoneError}</Text> : null}\n\n                <Text style={styles.label}>Do you currently own pets? If yes, tell us all about them! <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={petInfo}\n                  onChangeText={setPetInfo}\n                  placeholder=\"Tell us about your pets\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <Text style={styles.label}>What kind of pet care services are you most interested in? <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.checkboxGroup}>\n                  {services.map((service) => (\n                    <View key={service}>\n                      <TouchableOpacity \n                        style={styles.checkboxContainer}\n                        onPress={() => toggleService(service)}\n                      >\n                        <MaterialCommunityIcons\n                          name={selectedServices.includes(service) ? \"checkbox-marked\" : \"checkbox-blank-outline\"}\n                          size={24}\n                          color={theme.colors.primary}\n                          style={styles.checkboxIcon}\n                        />\n                        <Text style={styles.checkboxLabel}>{service}</Text>\n                      </TouchableOpacity>\n                      {service === 'Other' && selectedServices.includes('Other') && (\n                        <View style={styles.otherInputContainer}>\n                          <Text style={styles.label}>Please specify other service <Text style={styles.requiredAsterisk}>*</Text></Text>\n                          <TextInput\n                            style={[styles.input, styles.otherInput]}\n                            value={otherService}\n                            onChangeText={setOtherService}\n                            placeholder=\"Enter other service\"\n                          />\n                        </View>\n                      )}\n                    </View>\n                  ))}\n                </View>\n\n                <Text style={styles.label}>Are you signing up as a: <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.radioGroup}>\n                  {userTypes.map((type) => (\n                    <TouchableOpacity \n                      key={type}\n                      style={styles.radioContainer}\n                      onPress={() => setUserType(type)}\n                    >\n                      <View style={[styles.radio, userType === type && styles.radioSelected]} />\n                      <Text style={styles.radioLabel}>{type}</Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n\n                <Text style={styles.label}>Where did you hear about us? <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.radioGroup}>\n                  {referralSources.map((source) => (\n                    <TouchableOpacity \n                      key={source}\n                      style={styles.radioContainer}\n                      onPress={() => setReferralSource(source)}\n                    >\n                      <View style={[styles.radio, referralSource === source && styles.radioSelected]} />\n                      <Text style={styles.radioLabel}>{source}</Text>\n                    </TouchableOpacity>\n                  ))}\n                </View>\n                {referralSource === 'Other - Enter name of Person who referred you or other referral source for a free sticker' && (\n                  <View>\n                    <Text style={styles.label}>Please specify where you heard about us <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={styles.input}\n                      value={otherReferralSource}\n                      onChangeText={setOtherReferralSource}\n                      placeholder=\"Enter referral source\"\n                    />\n                  </View>\n                )}\n\n                <Text style={styles.label}>Which city are you located in? <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <CityDropdown\n                  selectedCity={selectedCity}\n                  onSelectCity={(city) => {\n                    setSelectedCity(city);\n                    setCityError('');\n                  }}\n                />\n                {selectedCity === 'Other' && (\n                  <View style={styles.otherInputContainer}>\n                    <Text style={styles.label}>Please specify your city <Text style={styles.requiredAsterisk}>*</Text></Text>\n                    <TextInput\n                      style={[styles.input, cityError && styles.inputError]}\n                      value={otherCity}\n                      onChangeText={(text) => {\n                        setOtherCity(text);\n                        setCityError('');\n                      }}\n                      placeholder=\"Enter your city\"\n                    />\n                  </View>\n                )}\n                {cityError ? <Text style={styles.errorText}>{cityError}</Text> : null}\n\n                <Text style={styles.label}>What hesitations do you have about using an app to connect you to local pet care? <Text style={styles.optional}>(Optional)</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={hesitations}\n                  onChangeText={setHesitations}\n                  placeholder=\"Share your concerns\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <Text style={styles.label}>What features or tools would make Critter Cove perfect for you? <Text style={styles.optional}>(Optional)</Text></Text>\n                <TextInput\n                  style={[styles.input, styles.textArea]}\n                  value={desiredFeatures}\n                  onChangeText={setDesiredFeatures}\n                  placeholder=\"Share your ideas\"\n                  multiline\n                  numberOfLines={4}\n                />\n\n                <View style={styles.addressSection}>\n                  <Text style={styles.label}>Mailing Address <Text style={styles.optional}>(Optional)</Text></Text>\n                  <Text style={styles.addressNote}>\n                    🎁 <Text style={{ fontStyle: 'italic' }}> Want a custom sticker featuring your pet? Add your mailing address and we'll send you one for joining the waitlist!</Text>\n                  </Text>\n                  <TextInput\n                    style={styles.input}\n                    value={streetAddress}\n                    onChangeText={setStreetAddress}\n                    placeholder=\"Street Address\"\n                  />\n                  <TextInput\n                    style={styles.input}\n                    value={aptUnit}\n                    onChangeText={setAptUnit}\n                    placeholder=\"Apartment/Unit # (if applicable)\"\n                  />\n                  <View style={styles.cityStateContainer}>\n                    <TextInput\n                      style={[styles.input, styles.cityInput]}\n                      value={city}\n                      onChangeText={setCity}\n                      placeholder=\"City\"\n                    />\n                    <TextInput\n                      style={[styles.input, styles.stateInput]}\n                      value={stateRegion}\n                      onChangeText={setStateRegion}\n                      placeholder=\"State\"\n                      maxLength={2}\n                      autoCapitalize=\"characters\"\n                    />\n                    <TextInput\n                      style={[styles.input, styles.zipInput]}\n                      value={zipCode}\n                      onChangeText={setZipCode}\n                      placeholder=\"ZIP\"\n                      keyboardType=\"numeric\"\n                      maxLength={5}\n                    />\n                  </View>\n                </View>\n\n                <Text style={styles.label}>Would you like to be added to the email newsletter for updates on the app, pet care tips, discounts and more? <Text style={styles.optional}>(Optional)</Text></Text>\n                <View style={styles.buttonContainer}>\n                  <TouchableOpacity \n                    style={[styles.button, newsletter && styles.buttonSelected]}\n                    onPress={() => setNewsletter(true)}\n                  >\n                    <Text style={[styles.buttonText, newsletter && styles.buttonTextSelected]}>Yes</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={[styles.button, !newsletter && styles.buttonSelected]}\n                    onPress={() => setNewsletter(false)}\n                  >\n                    <Text style={[styles.buttonText, !newsletter && styles.buttonTextSelected]}>No</Text>\n                  </TouchableOpacity>\n                </View>\n\n                <Text style={styles.label}>I agree to the terms and conditions and understand my data will be used to improve the app experience. <Text style={styles.requiredAsterisk}>*</Text></Text>\n                <View style={styles.buttonContainer}>\n                  <TouchableOpacity \n                    style={[styles.button, agreeToTerms && styles.buttonSelected]}\n                    onPress={() => setAgreeToTerms(true)}\n                  >\n                    <Text style={[styles.buttonText, agreeToTerms && styles.buttonTextSelected]}>Yes</Text>\n                  </TouchableOpacity>\n                  <TouchableOpacity \n                    style={[styles.button, !agreeToTerms && styles.buttonSelected]}\n                    onPress={() => setAgreeToTerms(false)}\n                  >\n                    <Text style={[styles.buttonText, !agreeToTerms && styles.buttonTextSelected]}>No</Text>\n                  </TouchableOpacity>\n                </View>\n\n                <TouchableOpacity \n                  style={[styles.submitButton, (isSubmitting || !agreeToTerms) && styles.disabledButton]}\n                  onPress={handleSubmit}\n                  disabled={isSubmitting || !agreeToTerms}\n                >\n                  <Text style={styles.submitButtonText}>\n                    {isSubmitting ? 'Submitting...' : 'Join Waitlist'}\n                  </Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n          </View>\n        </CrossPlatformContent>\n      </ScrollView>\n      <ValidationModal\n        visible={validationModal.visible}\n        message={validationModal.message}\n        onClose={() => setValidationModal({ visible: false, message: '' })}\n      />\n    </CrossPlatformView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  scrollView: {\n    flex: 1,\n    width: '100%',\n  },\n  scrollViewContent: {\n    flexGrow: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  container: {\n    width: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 20,\n  },\n  contentWrapper: {\n    padding: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n    width: '100%',\n  },\n  title: {\n    fontSize: theme.fontSizes.largeLarge,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.header.fontFamily,\n    textAlign: 'center',\n  },\n  description: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    lineHeight: 24,\n  },\n  formSection: {\n    width: '100%',\n  },\n  nameContainer: {\n    flexDirection: 'row',\n    gap: 10,\n    marginBottom: 15,\n  },\n  nameField: {\n    flex: 1,\n  },\n  label: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 5,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  input: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    padding: 15,\n    marginBottom: 15,\n    fontSize: theme.fontSizes.medium,\n    width: '100%',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  textArea: {\n    height: 100,\n    textAlignVertical: 'top',\n  },\n  checkboxGroup: {\n    marginBottom: 15,\n  },\n  checkboxContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    marginBottom: 10,\n    paddingRight: 10,\n  },\n  checkboxIcon: {\n    marginRight: 10,\n  },\n  checkboxLabel: {\n    flex: 1,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  radioGroup: {\n    marginBottom: 15,\n  },\n  radioContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  radio: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: theme.colors.primary,\n    marginRight: 10,\n  },\n  radioSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  radioLabel: {\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  submitButton: {\n    backgroundColor: theme.colors.primary,\n    padding: 15,\n    borderRadius: 5,\n    alignItems: 'center',\n    width: '100%',\n    marginTop: 20,\n  },\n  submitButtonText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.mediumLarge,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    opacity: 0.7,\n  },\n  successMessage: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    marginBottom: 15,\n    lineHeight: 24,\n  },\n  otherInputContainer: {\n    paddingLeft: 34,\n    width: '100%',\n  },\n  otherInput: {\n    marginTop: 5,\n    marginBottom: 10,\n    width: '90%',\n  },\n  addressSection: {\n    marginBottom: 20,\n  },\n  cityStateContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    gap: 10,\n  },\n  cityInput: {\n    flex: 2,\n    marginBottom: 0,\n  },\n  stateInput: {\n    flex: 1,\n    marginBottom: 0,\n  },\n  zipInput: {\n    flex: 1,\n    marginBottom: 0,\n  },\n  addressNote: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 10,\n    // fontStyle: 'italic',\n    paddingHorizontal: 5,\n  },\n  optional: {\n    color: theme.colors.secondary,\n    fontSize: theme.fontSizes.small,\n    fontStyle: 'italic',\n  },\n  referralSection: {\n    backgroundColor: theme.colors.surface,\n    padding: 20,\n    borderRadius: 10,\n    marginVertical: 20,\n    borderWidth: 1,\n    borderColor: theme.colors.border,\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    gap: 10,\n    marginBottom: 20,\n  },\n  button: {\n    paddingVertical: 8,\n    paddingHorizontal: 24,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    backgroundColor: 'white',\n    minWidth: 80,\n    alignItems: 'center',\n  },\n  buttonSelected: {\n    backgroundColor: theme.colors.primary,\n  },\n  buttonText: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  buttonTextSelected: {\n    color: 'white',\n  },\n  requiredFieldNote: {\n    fontSize: theme.fontSizes.small,\n    color: theme.colors.text,\n    marginBottom: 20,\n    fontStyle: 'italic',\n  },\n  requiredAsterisk: {\n    color: '#FF0000',\n    fontSize: theme.fontSizes.medium,\n  },\n  linkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: theme.colors.surface,\n    padding: 10,\n    borderRadius: 5,\n    marginVertical: 10,\n  },\n  link: {\n    color: theme.colors.primary,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginRight: 10,\n  },\n  copyButton: {\n    padding: 5,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 20,\n    width: '90%',\n    maxWidth: 400,\n    alignItems: 'center',\n  },\n  modalText: {\n    fontSize: theme.fontSizes.medium,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    minWidth: 100,\n    alignItems: 'center',\n  },\n  modalButtonText: {\n    color: theme.colors.surface,\n    fontSize: theme.fontSizes.medium,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inputError: {\n    borderColor: '#FF0000',\n    borderWidth: 1,\n  },\n  errorText: {\n    color: '#FF0000',\n    fontSize: theme.fontSizes.small,\n    marginTop: -10,\n    marginBottom: 15,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownContainer: {\n    marginBottom: 15,\n    zIndex: 1000,\n  },\n  dropdownButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surface,\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    padding: 15,\n  },\n  dropdownButtonText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  dropdownList: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    borderColor: theme.colors.border,\n    borderWidth: 1,\n    marginTop: 5,\n    maxHeight: 300,\n    zIndex: 1000,\n  },\n  searchInput: {\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  cityList: {\n    maxHeight: 250,\n  },\n  cityItem: {\n    padding: 15,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  cityItemText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  requiredField: {\n    borderColor: '#FF0000',\n    borderWidth: 1,\n  },\n  otherCityItem: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surface,\n  },\n  otherCityText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n});\n\nexport default Waitlist; ","import React from 'react';\nimport { View, Text, StyleSheet, Button, TouchableOpacity } from 'react-native';\nimport { useToast } from '../components/ToastProvider';\nimport { theme } from '../styles/theme';\nimport { acceptInvitation, verifyInvitation } from '../api/API';\nimport { API_BASE_URL } from '../config/config';\nimport axios from 'axios';\nimport { debugLog } from '../context/AuthContext';\n\nconst TestToast = () => {\n  const showToast = useToast();\n\n  const showSuccessToast = () => {\n    showToast({\n      message: 'Success! Operation completed successfully.',\n      type: 'success',\n      duration: 3000\n    });\n  };\n\n  const showErrorToast = () => {\n    showToast({\n      message: 'Error! Something went wrong.',\n      type: 'error',\n      duration: 3000\n    });\n  };\n\n  const showInfoToast = () => {\n    showToast({\n      message: 'Info: This is an informational message.',\n      type: 'info',\n      duration: 3000\n    });\n  };\n\n  const showWarningToast = () => {\n    showToast({\n      message: 'Warning: This action may have consequences.',\n      type: 'warning',\n      duration: 3000\n    });\n  };\n\n  const showLongToast = () => {\n    showToast({\n      message: 'This is a longer toast message that will stay visible for 5 seconds to demonstrate how longer messages look.',\n      type: 'info',\n      duration: 5000\n    });\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Toast Notification Test</Text>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Success Toast\" \n          onPress={showSuccessToast}\n          color={theme.colors.primary}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Error Toast\" \n          onPress={showErrorToast}\n          color={theme.colors.error}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Info Toast\" \n          onPress={showInfoToast}\n          color={theme.colors.info || '#29B6F6'}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Warning Toast\" \n          onPress={showWarningToast}\n          color={theme.colors.warning || '#FFA726'}\n        />\n      </View>\n      \n      <View style={styles.buttonContainer}>\n        <Button \n          title=\"Show Long Toast\" \n          onPress={showLongToast}\n          color=\"#9C27B0\"\n        />\n      </View>\n\n      {/* Invitation debugging section */}\n      <View style={{ marginTop: 20, padding: 10, borderWidth: 1, borderColor: '#ccc', borderRadius: 8 }}>\n        <Text style={{ fontSize: 18, fontWeight: 'bold', marginBottom: 10 }}>Invitation API Debug</Text>\n        \n        <TouchableOpacity \n          style={{ \n            backgroundColor: '#3498db', \n            padding: 10, \n            borderRadius: 5, \n            alignItems: 'center',\n            marginBottom: 10\n          }}\n          onPress={async () => {\n            try {\n              // Get token from input or use a test token\n              const token = '29a05c7f-bde2-4e57-8a86-8f6e8062812a'; // Replace with a valid token\n              debugLog('MBAnb23ou4bf954 TEST: Verifying invitation token:', token);\n              \n              // First verify the invitation\n              const verifyResult = await verifyInvitation(token);\n              debugLog('MBAnb23ou4bf954 TEST: Verification result:', verifyResult);\n              \n              if (verifyResult.valid) {\n                // Try to accept the invitation using the simplified approach\n                debugLog('MBAnb23ou4bf954 TEST: Trying to accept invitation with authenticated request');\n                try {\n                  const acceptResult = await acceptInvitation(token);\n                  debugLog('MBAnb23ou4bf954 TEST: Accept result:', acceptResult);\n                  \n                  showToast({\n                    message: 'Invitation accepted successfully!',\n                    type: 'success',\n                    duration: 3000\n                  });\n                } catch (acceptError) {\n                  debugLog('MBAnb23ou4bf954 TEST: Accept error:', acceptError.message);\n                  if (acceptError.response) {\n                    debugLog('MBAnb23ou4bf954 TEST: Accept error details:', acceptError.response.data);\n                  }\n                  \n                  showToast({\n                    message: `Error: ${acceptError.message}`,\n                    type: 'error',\n                    duration: 3000\n                  });\n                }\n              } else {\n                debugLog('MBAnb23ou4bf954 TEST: Invitation is not valid:', verifyResult.error);\n                \n                showToast({\n                  message: `Invalid invitation: ${verifyResult.error || 'Unknown error'}`,\n                  type: 'error',\n                  duration: 3000\n                });\n              }\n            } catch (error) {\n              debugLog('MBAnb23ou4bf954 TEST: Overall error:', error.message);\n              \n              showToast({\n                message: `Error: ${error.message}`,\n                type: 'error',\n                duration: 3000\n              });\n            }\n          }}\n        >\n          <Text style={{ color: 'white' }}>Test Invitation API</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: theme.colors.background,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n    color: theme.colors.text,\n    fontFamily: theme.fonts?.medium?.fontFamily || undefined,\n  },\n  buttonContainer: {\n    width: '100%',\n    marginVertical: 10,\n    maxWidth: 300,\n  }\n});\n\nexport default TestToast; ","import React, { useContext, useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Image, Animated, Platform } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport { supportsHover } from '../utils/deviceUtils';\n\nconst ConnectionCard = ({ connection, type, onViewProfile, onCreateBooking }) => {\n  // Determine if this is a client or professional connection\n  const isClient = type === 'clients';\n  const { screenWidth } = useContext(AuthContext);\n  const isMobile = screenWidth < 900;\n  const isWideScreen = screenWidth >= 1200;\n  const isExtraWideScreen = screenWidth >= 2500;\n  \n  // State for button hover effects\n  const [isViewMessagesHovered, setIsViewMessagesHovered] = useState(false);\n  const [isCreateBookingHovered, setIsCreateBookingHovered] = useState(false);\n  \n  // Check if device supports hover\n  const deviceSupportsHover = supportsHover();\n  \n  // Determine booking status tag\n  const getBookingStatusTag = () => {\n    if (connection.active_bookings_count > 0) {\n      return {\n        icon: \"calendar-check\",\n        iconColor: \"#4CAF50\",\n        text: \"Active Bookings\",\n        containerStyle: styles.activeBookingsContainer,\n        textStyle: styles.activeBookingsText\n      };\n    } else if (connection.has_past_booking === 1) {\n      return {\n        icon: \"history\",\n        iconColor: \"#9C27B0\",\n        text: \"Past Bookings\",\n        containerStyle: styles.pastBookingsContainer,\n        textStyle: styles.pastBookingsText\n      };\n    } else {\n      return {\n        icon: \"calendar-remove\",\n        iconColor: \"#898974\",\n        text: \"No Bookings Yet\",\n        containerStyle: styles.noBookingsContainer,\n        textStyle: styles.noBookingsText\n      };\n    }\n  };\n  \n  const bookingStatus = getBookingStatusTag();\n  \n  debugLog('MBA9452: Rendering ConnectionCard:', {\n    connectionId: connection.id,\n    connectionName: connection.name,\n    connectionType: type,\n    conversationId: connection.conversation_id,\n    hasActivePastBooking: connection.has_past_booking,\n    activeBookingsCount: connection.active_bookings_count,\n    isMobile,\n    isWideScreen,\n    isExtraWideScreen,\n    screenWidth\n  });\n  \n  return (\n    <View style={styles.card}>\n      <View style={styles.contentContainer}>\n        <View style={styles.topRow}>\n          <View style={[\n            styles.profileInfo,\n            !isExtraWideScreen && styles.profileInfoWrap\n          ]}>\n            <Image \n              source={connection.avatar ? { uri: connection.avatar } : require('../../assets/default-profile.png')} \n              style={styles.avatar} \n            />\n            \n            <View style={[\n              styles.nameContainer,\n              isWideScreen && styles.nameContainerWide\n            ]}>\n              <Text style={styles.name}>{connection.name}</Text>\n              \n              {isClient ? (\n                <View style={styles.petsContainer}>\n                  <Text style={styles.petsLabel}>Pets: </Text>\n                  <Text style={[\n                    styles.petsText,\n                    isWideScreen && styles.petsTextWide\n                  ]}>\n                    {connection.pets?.length > 0 \n                      ? connection.pets.map(pet => `${pet.name} (${pet.species})`).join(', ') \n                      : 'No pets added yet'}\n                  </Text>\n                </View>\n              ) : (\n                <View style={styles.servicesContainer}>\n                  <Text style={styles.servicesLabel}>Services: </Text>\n                  <Text style={[\n                    styles.servicesText,\n                    isWideScreen && styles.servicesTextWide\n                  ]}>\n                    {connection.services?.join(', ') || 'No services'}\n                  </Text>\n                </View>\n              )}\n              \n              <View style={bookingStatus.containerStyle}>\n                <MaterialCommunityIcons name={bookingStatus.icon} size={14} color={bookingStatus.iconColor} />\n                <Text style={bookingStatus.textStyle}>\n                  {bookingStatus.text}\n                </Text>\n              </View>\n            </View>\n          </View>\n          \n          {!isMobile && (\n            <View style={[\n              styles.buttonSection,\n              !isExtraWideScreen && styles.buttonSectionWrap\n            ]}>\n              <TouchableOpacity \n                style={[\n                  styles.viewProfileButton,\n                  isViewMessagesHovered && styles.buttonHovered\n                ]}\n                onPress={() => {\n                  debugLog('MBA4321 View Messages button clicked', {\n                    connectionName: connection.name,\n                    conversationId: connection.conversation_id\n                  });\n                  onViewProfile(connection);\n                }}\n                onMouseEnter={() => deviceSupportsHover && setIsViewMessagesHovered(true)}\n                onMouseLeave={() => deviceSupportsHover && setIsViewMessagesHovered(false)}\n              >\n                <Text style={styles.viewProfileText}>View Messages</Text>\n              </TouchableOpacity>\n              \n              {isClient && (\n                <TouchableOpacity \n                  style={[\n                    styles.createBookingButton,\n                    isCreateBookingHovered && styles.buttonHovered\n                  ]}\n                  onPress={() => {\n                    debugLog('MBA4321 Create Booking button clicked', {\n                      connectionName: connection.name,\n                      conversationId: connection.conversation_id\n                    });\n                    onCreateBooking(connection);\n                  }}\n                  onMouseEnter={() => deviceSupportsHover && setIsCreateBookingHovered(true)}\n                  onMouseLeave={() => deviceSupportsHover && setIsCreateBookingHovered(false)}\n                >\n                  <Text style={styles.createBookingText}>Create Booking</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          )}\n        </View>\n\n        {connection.last_booking && (\n          <View style={styles.statusSection}>\n            <View style={styles.lastBookingContainer}>\n              <MaterialCommunityIcons name=\"calendar-clock\" size={16} color={theme.colors.text} />\n              <Text style={styles.lastBookingText}>\n                Last booking: {connection.last_booking}\n              </Text>\n            </View>\n      \n            {connection.upcoming_booking && (\n              <View style={styles.upcomingContainer}>\n                <MaterialCommunityIcons name=\"calendar-check\" size={16} color={theme.colors.primary} />\n                <Text style={styles.upcomingText}>\n                  Upcoming Booking\n                </Text>\n              </View>\n            )}\n          </View>\n        )}\n\n        {isMobile && (\n          <View style={styles.mobileBtnSection}>\n            <TouchableOpacity \n              style={[\n                styles.viewProfileButton,\n                isViewMessagesHovered && styles.buttonHovered\n              ]}\n              onPress={() => {\n                debugLog('MBA4321 View Messages button clicked (mobile)', {\n                  connectionName: connection.name,\n                  conversationId: connection.conversation_id\n                });\n                onViewProfile(connection);\n              }}\n              onMouseEnter={() => deviceSupportsHover && setIsViewMessagesHovered(true)}\n              onMouseLeave={() => deviceSupportsHover && setIsViewMessagesHovered(false)}\n            >\n              <Text style={styles.viewProfileText}>View Messages</Text>\n            </TouchableOpacity>\n            \n            {isClient && (\n              <TouchableOpacity \n                style={[\n                  styles.createBookingButton,\n                  isCreateBookingHovered && styles.buttonHovered\n                ]}\n                onPress={() => {\n                  debugLog('MBA4321 Create Booking button clicked (mobile)', {\n                    connectionName: connection.name,\n                    conversationId: connection.conversation_id\n                  });\n                  onCreateBooking(connection);\n                }}\n                onMouseEnter={() => deviceSupportsHover && setIsCreateBookingHovered(true)}\n                onMouseLeave={() => deviceSupportsHover && setIsCreateBookingHovered(false)}\n              >\n                <Text style={styles.createBookingText}>Create Booking In Messages</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    // marginBottom: 16,\n    padding: 16,\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    width: '100%',\n  },\n  contentContainer: {\n    width: '100%',\n  },\n  topRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    width: '100%',\n    flexWrap: 'wrap',\n  },\n  profileInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: 0,\n  },\n  profileInfoWrap: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    minWidth: '70%',\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    marginRight: 16,\n    flexShrink: 0,\n  },\n  nameContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    minWidth: 0,\n    marginRight: 16,\n  },\n  nameContainerWide: {\n    maxWidth: '60%',\n  },\n  name: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n    marginBottom: 8,\n  },\n  petsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  petsLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flexShrink: 0,\n  },\n  petsText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flex: 1,\n    minWidth: 0,\n  },\n  petsTextWide: {\n    maxWidth: '80%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  servicesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  servicesLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flexShrink: 0,\n  },\n  servicesText: {\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    flex: 1,\n    minWidth: 0,\n  },\n  servicesTextWide: {\n    maxWidth: '80%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n  statusSection: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 8,\n    marginTop: 8,\n  },\n  lastBookingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  lastBookingText: {\n    marginLeft: 6,\n    fontSize: 14,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  noBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F2F2F0',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  noBookingsText: {\n    fontSize: 12,\n    color: '#898974',\n    fontFamily: theme.fonts.regular.fontFamily,\n    marginLeft: 6,\n  },\n  pastBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F9F2FC',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  pastBookingsText: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: '#9C27B0',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  upcomingContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F0F9E5',\n    padding: 6,\n    borderRadius: 16,\n  },\n  upcomingText: {\n    marginLeft: 6,\n    fontSize: 14,\n    color: theme.colors.primary,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  buttonSection: {\n    flexDirection: 'row',\n    gap: 12,\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    flexShrink: 0,\n  },\n  buttonSectionWrap: {\n    marginTop: 12,\n    marginLeft: 'auto',\n  },\n  mobileBtnSection: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n    marginTop: 12,\n  },\n  viewProfileButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: '#F0F9E5',\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n  },\n  viewProfileText: {\n    color: theme.colors.primary,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  createBookingButton: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    transition: 'transform 0.2s ease, box-shadow 0.2s ease',\n  },\n  createBookingText: {\n    color: theme.colors.surfaceContrast,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  buttonHovered: {\n    transform: [{translateY: -3}],\n    boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.15)',\n  },\n  activeBookingsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#F0F9E5',\n    borderRadius: 4,\n    padding: 4,\n    marginTop: 8,\n    alignSelf: 'flex-start',\n  },\n  activeBookingsText: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: '#4CAF50',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n});\n\nexport default ConnectionCard; ","import React, { useState, useEffect, useContext, useRef } from 'react';\nimport { View, Text, StyleSheet, TextInput, FlatList, TouchableOpacity, Platform, ActivityIndicator, Dimensions, ScrollView, Modal } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport ConnectionCard from '../components/ConnectionCard';\nimport { AuthContext, debugLog } from '../context/AuthContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { navigateToFrom } from '../components/Navigation';\nimport { getUserConnections, inviteClient } from '../api/API';\nimport { supportsHover } from '../utils/deviceUtils';\nimport { sanitizeInput, validateEmail } from '../validation/validation';\n\nconst Connections = () => {\n  const navigation = useNavigation();\n  const { isApprovedProfessional, userRole, isCollapsed, screenWidth } = useContext(AuthContext);\n  const [isMobile, setIsMobile] = useState(screenWidth < 900);\n  const [isWideScreen, setIsWideScreen] = useState(screenWidth >= 1500);\n  const [activeTab, setActiveTab] = useState('clients');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [connections, setConnections] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n  const [activeFilter, setActiveFilter] = useState('all');\n  const [hoveredFilter, setHoveredFilter] = useState(null);\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [inviteEmail, setInviteEmail] = useState('');\n  const [isInviting, setIsInviting] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const searchInputRef = useRef(null);\n  const [allConnections, setAllConnections] = useState([]);\n  const [invitationType, setInvitationType] = useState('email');\n  const [generatedLink, setGeneratedLink] = useState('');\n  const [inviteError, setInviteError] = useState('');\n  const [inviteSuccess, setInviteSuccess] = useState('');\n  const [isInviteButtonHovered, setIsInviteButtonHovered] = useState(false);\n  const [isCreateServiceButtonHovered, setIsCreateServiceButtonHovered] = useState(false);\n  const [emailValidationError, setEmailValidationError] = useState('');\n\n  // Check if device supports hover\n  const deviceSupportsHover = supportsHover();\n\n  // Update layout based on screen size\n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n      setIsWideScreen(Dimensions.get('window').width >= 1200);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  // Set the initial tab based on role\n  useEffect(() => {\n    if (userRole === 'professional') {\n      setActiveTab('clients');\n    } else {\n      setActiveTab('professionals');\n    }\n  }, [userRole]);\n\n  // Handle navigation based on the user role\n  useEffect(() => {\n    const handleRoleNavigation = async () => {\n      debugLog('MBA4321 Checking user role for navigation', { userRole });\n      if (userRole === 'petOwner') {\n        // Store Dashboard as the current route before navigating\n        if (Platform.OS === 'web') {\n          sessionStorage.setItem('previousRoute', '');\n          sessionStorage.setItem('currentRoute', 'Dashboard');\n        } else {\n          await AsyncStorage.setItem('previousRoute', '');\n          await AsyncStorage.setItem('currentRoute', 'Dashboard');\n        }\n        debugLog('MBA4321 User is pet owner, navigating to Dashboard');\n        navigation.navigate('Dashboard');\n      }\n    };\n\n    handleRoleNavigation();\n  }, [userRole, navigation]);\n\n  const fetchConnections = async (pageNum = 1, isLoadMore = false) => {\n    setLoading(!isLoadMore);\n    isLoadMore && setIsLoadingMore(true);\n    \n    debugLog('MBA4321 Fetching connections:', {\n      page: pageNum,\n      isLoadMore\n    });\n\n    try {\n      const response = await getUserConnections(pageNum);\n      \n      debugLog('MBA4321 Response from API:', response);\n\n      const connectionsList = response.connections || [];\n      \n      if (isLoadMore) {\n        const newConnections = [...connections, ...connectionsList];\n        setConnections(newConnections);\n        setAllConnections(newConnections);\n      } else {\n        setConnections(connectionsList);\n        setAllConnections(connectionsList);\n      }\n\n      setHasMore(connectionsList.length === 20);\n      setPage(pageNum);\n    } catch (error) {\n      debugLog('MBA4321 Error fetching connections:', error);\n      setError('Failed to fetch connections');\n    } finally {\n      setLoading(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  // Update useEffect to only fetch once and not refetch when filter changes\n  useEffect(() => {\n    debugLog('MBA4321 Fetching connections due to dependency change:', {\n      activeTab,\n      userRole\n    });\n    setPage(1);\n    setConnections([]);\n    fetchConnections(1);\n  }, [activeTab, userRole]);\n\n  // Add new useEffect to filter connections locally when filter changes\n  useEffect(() => {\n    debugLog('MBA4321 Filtering connections locally based on:', {\n      activeFilter\n    });\n    if (allConnections.length > 0) {\n      filterConnectionsLocally();\n    }\n  }, [activeFilter, allConnections]);\n\n  // Add function to filter connections locally\n  const filterConnectionsLocally = () => {\n    if (!allConnections.length) return;\n    \n    debugLog('MBA9452: Filtering connections locally with filter:', activeFilter);\n    \n    if (activeFilter === 'all') {\n      setConnections(allConnections);\n      return;\n    }\n    \n    // Filter based on activeFilter\n    let filtered = [];\n    \n    switch (activeFilter) {\n      case 'active_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count > 0\n        );\n        break;\n      case 'no_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count === 0 && connection.has_past_booking === 0\n        );\n        break;\n      case 'past_bookings':\n        filtered = allConnections.filter(connection => \n          connection.active_bookings_count === 0 && connection.has_past_booking === 1\n        );\n        break;\n      default:\n        filtered = allConnections;\n    }\n    \n    setConnections(filtered);\n  };\n\n  // Handle search\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n    \n    // If query is empty, reapply the current filter\n    if (!query.trim()) {\n      debugLog('MBA9452: Empty search query, reapplying current filter');\n      filterConnectionsLocally();\n      return;\n    }\n\n    debugLog('MBA9452: Searching connections with query:', query);\n    \n    // Get the base set of connections to search from (already filtered by activeFilter)\n    let baseConnections = [];\n    if (activeFilter === 'all') {\n      baseConnections = allConnections;\n    } else {\n      // Re-apply the active filter to get the current filtered set\n      switch (activeFilter) {\n        case 'active_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count > 0\n          );\n          break;\n        case 'no_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count === 0 && connection.has_past_booking === 0\n          );\n          break;\n        case 'past_bookings':\n          baseConnections = allConnections.filter(connection => \n            connection.active_bookings_count === 0 && connection.has_past_booking === 1\n          );\n          break;\n        default:\n          baseConnections = allConnections;\n      }\n    }\n    \n    // Filter the already filtered list based on search query\n    const searchLower = query.toLowerCase();\n    const filtered = baseConnections.filter(connection => \n      connection.name.toLowerCase().includes(searchLower) || \n      (activeTab === 'clients' && connection.pets?.some(pet => \n        pet.name?.toLowerCase().includes(searchLower) || \n        pet.species?.toLowerCase().includes(searchLower)\n      ))\n    );\n\n    setConnections(filtered);\n  };\n\n  const handleLoadMore = () => {\n    if (!isLoadingMore && hasMore) {\n      fetchConnections(page + 1, true);\n    }\n  };\n\n  const handleViewMessages = async (connection) => {\n    debugLog('MBA4321 Navigating to messages with connection:', {\n      connectionId: connection.id,\n      connectionName: connection.name,\n      conversationId: connection.conversation_id\n    });\n    \n    // Navigate to MessageHistory screen with conversation ID\n    await navigateToFrom(navigation, 'MessageHistory', 'Connections', {\n      conversationId: connection.conversation_id,\n      otherUserName: connection.name\n      // No isProfessional flag here as we don't want to trigger booking creation\n    });\n  };\n\n  const handleCreateBooking = async (connection) => {\n    debugLog('MBA4321 Creating booking with client:', {\n      clientId: connection.id,\n      clientName: connection.name,\n      conversationId: connection.conversation_id\n    });\n    \n    // Navigate directly to the MessageHistory screen with the conversation ID\n    await navigateToFrom(navigation, 'MessageHistory', 'Connections', {\n      conversationId: connection.conversation_id,\n      otherUserName: connection.name,\n      clientId: connection.client_id, // Include client_id for potential future use\n      isProfessional: true // Since this is called from the professional's perspective\n    });\n  };\n\n  const validateInviteEmail = (email) => {\n    debugLog('MBA1234', 'Validating invite email:', email);\n    \n    if (!email || email.trim() === '') {\n      setEmailValidationError('');\n      return { isValid: true, sanitized: '' }; // Allow empty email initially\n    }\n    \n    // Sanitize the email\n    const sanitized = sanitizeInput(email, 'email', { maxLength: 254 });\n    \n    // Check for malicious content\n    const originalLength = email.length;\n    const sanitizedLength = sanitized.length;\n    const removalPercentage = originalLength > 0 ? ((originalLength - sanitizedLength) / originalLength) * 100 : 0;\n    \n    if (removalPercentage > 30 && originalLength > 5) {\n      debugLog('MBA1234', 'Malicious content detected in invite email:', { originalLength, sanitizedLength, removalPercentage });\n      setEmailValidationError('Invalid characters detected in email');\n      return { isValid: false, sanitized };\n    }\n    \n    // Validate email format\n    const emailValidation = validateEmail(sanitized);\n    if (!emailValidation.isValid) {\n      setEmailValidationError(emailValidation.message);\n      return { isValid: false, sanitized };\n    }\n    \n    setEmailValidationError('');\n    return { isValid: true, sanitized };\n  };\n\n  const handleEmailInputChange = (email) => {\n    const { sanitized } = validateInviteEmail(email);\n    setInviteEmail(sanitized);\n  };\n\n  const handleInviteClient = () => {\n    debugLog('MBA4321 Opening invite client modal');\n    setInviteEmail('');\n    setGeneratedLink('');\n    setInviteError('');\n    setInviteSuccess('');\n    setEmailValidationError('');\n    setInvitationType('email');\n    setShowInviteModal(true);\n  };\n  \n  const handleSendInvite = async () => {\n    setInviteError('');\n    setInviteSuccess('');\n    \n    if (invitationType === 'email') {\n      // Validate email before sending\n      const { isValid } = validateInviteEmail(inviteEmail);\n      if (!isValid || emailValidationError) {\n        setInviteError(emailValidationError || 'Please enter a valid email address');\n        debugLog('MBA1234 Invalid email format:', { inviteEmail, emailValidationError });\n        return;\n      }\n      \n      if (!inviteEmail || !inviteEmail.trim()) {\n        setInviteError('Please enter an email address');\n        debugLog('MBA1234 Empty email:', inviteEmail);\n        return;\n      }\n    }\n    \n    setIsInviting(true);\n    debugLog('MBA4321 Creating invitation:', { \n      type: invitationType, \n      email: invitationType === 'email' ? inviteEmail : null \n    });\n    \n    try {\n      const response = await inviteClient(invitationType, invitationType === 'email' ? inviteEmail : null);\n      debugLog('MBA4321 Invitation created successfully:', response);\n      \n      if (invitationType === 'email') {\n        setInviteSuccess(`Invitation sent to ${inviteEmail} - please have your client check spam if they don't see it in their inbox.`);\n        setInviteEmail('');\n      } else {\n        setGeneratedLink(response.invitation_link);\n        setInviteSuccess('Invitation link created successfully!');\n      }\n      \n      // Refresh the connections list only if needed\n      if (activeFilter === 'pending' || activeFilter === 'all') {\n        fetchConnections(1);\n      }\n    } catch (error) {\n      debugLog('MBA4321 Error creating invitation:', error);\n      setInviteError(error.response?.data?.error || 'Failed to send invitation. Please try again.');\n    } finally {\n      setIsInviting(false);\n    }\n  };\n\n  const handleCopyLink = () => {\n    if (generatedLink && Platform.OS === 'web') {\n      navigator.clipboard.writeText(generatedLink);\n      setInviteSuccess('Link copied to clipboard!');\n    }\n  };\n\n  const EmptyStateMessage = ({ type }) => {\n    const messages = {\n      clients: {\n        all: \"You don't have any clients with bookings or that you have invited yet. Invite a client to get started!\",\n        active: \"You don't have any active clients.\",\n        pending: \"You don't have any pending client requests.\",\n        past: \"You don't have any past clients.\"\n      },\n      professionals: {\n        all: \"You're not connected with any professionals yet.\",\n        active: \"You don't have any active professionals.\",\n        pending: \"You don't have any pending professional connections.\",\n        past: \"You don't have any past professional connections.\"\n      }\n    };\n\n    return (\n      <View style={styles.emptyContainer}>\n        <MaterialCommunityIcons \n          name={type === 'clients' ? 'account-group-outline' : 'account-tie-outline'} \n          size={80} \n          color={theme.colors.primary} \n        />\n        <Text style={styles.emptyText}>{messages[type][activeFilter]}</Text>\n        {type === 'clients' && userRole === 'professional' && (\n          <TouchableOpacity \n            style={styles.inviteButton}\n            onPress={handleInviteClient}\n          >\n            <Text style={styles.inviteButtonText}>Invite Client</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n    );\n  };\n\n  const renderFooter = () => {\n    if (isLoadingMore) {\n      debugLog('MBA4321 Loading more connections');\n      return (\n        <View style={styles.footer}>\n          <ActivityIndicator size=\"small\" color={theme.colors.primary} />\n        </View>\n      );\n    }\n    \n    if (!hasMore && connections.length > 0) {\n      debugLog('MBA4321 No more connections to load');\n      return (\n        <View style={styles.footer}>\n          <Text style={styles.footerText}>No more {activeTab} to load</Text>\n          {userRole === 'professional' && activeTab === 'clients' && (\n            <TouchableOpacity \n              style={[\n                styles.createServiceButton,\n                isCreateServiceButtonHovered && styles.buttonHovered\n              ]}\n              onPress={() => {\n                debugLog('MBA4321 Create Service button clicked in footer');\n                navigateToFrom(navigation, 'ServiceManager', 'Connections');\n              }}\n              onMouseEnter={() => deviceSupportsHover && setIsCreateServiceButtonHovered(true)}\n              onMouseLeave={() => deviceSupportsHover && setIsCreateServiceButtonHovered(false)}\n            >\n              <Text style={styles.createServiceButtonText}>Create a Service to Get More Clients</Text>\n            </TouchableOpacity>\n          )}\n        </View>\n      );\n    }\n    \n    return null;\n  };\n\n  const renderItem = ({ item }) => {\n    debugLog('MBA4321 Rendering connection item:', item);\n    return (\n      <View style={[\n        styles.cardWrapper,\n        isMobile && styles.mobileCardWrapper,\n        isWideScreen && styles.wideScreenCardWrapper\n      ]}>\n        <ConnectionCard\n          connection={item}\n          type={activeTab}\n          onViewProfile={() => handleViewMessages(item)}\n          onCreateBooking={activeTab === 'clients' ? () => handleCreateBooking(item) : null}\n        />\n      </View>\n    );\n  };\n\n  return (\n    <View style={[\n      styles.container,\n      { marginLeft: isMobile ? 0 : (isCollapsed ? 70 : 250) }\n    ]}>\n      <View style={[styles.content, { marginTop: isMobile ? 60 : 0 }]}>\n        <View style={styles.mainContent}>\n          <View style={styles.headerSection}>\n            <Text style={styles.title}>Connections</Text>\n            <View style={styles.tabContainer}>\n              {userRole === 'professional' && (\n                <TouchableOpacity\n                  style={[styles.tab, activeTab === 'clients' && styles.activeTab]}\n                  onPress={() => setActiveTab('clients')}\n                >\n                  <Text style={[styles.tabText, activeTab === 'clients' && styles.activeTabText]}>\n                    My Clients\n                  </Text>\n                </TouchableOpacity>\n              )}\n              {/* My Professionals tab commented out until implementation\n              <TouchableOpacity\n                style={[styles.tab, activeTab === 'professionals' && styles.activeTab]}\n                onPress={() => setActiveTab('professionals')}\n              >\n                <Text style={[styles.tabText, activeTab === 'professionals' && styles.activeTabText]}>\n                  My Professionals\n                </Text>\n              </TouchableOpacity>\n              */}\n            </View>\n          </View>\n          <View style={styles.connectionsContent}>\n            {loading ? (\n              <View style={styles.loadingContainer}>\n                <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n              </View>\n            ) : (\n              <View style={styles.connectionsContent}>\n                <View style={styles.stickyHeader}>\n                  <View style={[styles.stickyHeaderContent, { \n                    flexDirection: isWideScreen ? 'row' : 'column'\n                  }]}>\n                    <View style={[\n                      styles.searchAndInviteContainer,\n                      isWideScreen ? { flex: 0.4, marginRight: 'auto', flexDirection: 'row', alignItems: 'center' } : { flexDirection: 'row', alignItems: 'center' }\n                    ]}>\n                      <View style={[\n                        styles.searchContainer,\n                        searchFocused && styles.searchContainerFocused\n                      ]}>\n                        <MaterialCommunityIcons \n                          name=\"magnify\" \n                          size={24} \n                          color={searchFocused ? theme.colors.primary : \"#666\"} \n                        />\n                        <TextInput\n                          ref={searchInputRef}\n                          style={styles.searchInput}\n                          placeholder={activeTab === 'clients' \n                            ? \"Search by client name or pet\" \n                            : \"Search by professional name or service\"\n                          }\n                          value={searchQuery}\n                          onChangeText={handleSearch}\n                          onFocus={() => setSearchFocused(true)}\n                          onBlur={() => setSearchFocused(false)}\n                        />\n                        {searchQuery ? (\n                          <TouchableOpacity \n                            onPress={() => {\n                              setSearchQuery('');\n                              filterConnectionsLocally();\n                            }}\n                          >\n                            <MaterialCommunityIcons name=\"close-circle\" size={20} color=\"#777\" />\n                          </TouchableOpacity>\n                        ) : null}\n                      </View>\n                      \n                      {activeTab === 'clients' && userRole === 'professional' && (\n                        <TouchableOpacity \n                          style={[\n                            styles.inviteButtonSmall,\n                            isInviteButtonHovered && styles.buttonHovered\n                          ]}\n                          onPress={handleInviteClient}\n                          onMouseEnter={() => deviceSupportsHover && setIsInviteButtonHovered(true)}\n                          onMouseLeave={() => deviceSupportsHover && setIsInviteButtonHovered(false)}\n                        >\n                          <MaterialCommunityIcons name=\"account-plus\" size={16} color={theme.colors.surface} />\n                          <Text style={styles.inviteButtonSmallText}>Invite</Text>\n                        </TouchableOpacity>\n                      )}\n                    </View>\n\n                    <View style={[\n                      styles.filtersWrapper,\n                      isWideScreen ? { flex: 0.6, alignItems: 'flex-end' } : null\n                    ]}>\n                      <ScrollView \n                        horizontal \n                        showsHorizontalScrollIndicator={false}\n                        contentContainerStyle={styles.filterScrollContent}\n                      >\n                        <View style={styles.filterContainer}>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.allButton,\n                              Platform.OS === 'web' && hoveredFilter === 'all' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('all')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('all')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"filter-variant\" \n                                size={16} \n                                color=\"#0784C6\" \n                              />\n                              <Text style={[styles.filterText, styles.allButtonText]}>\n                                All\n                              </Text>\n                              {activeFilter === 'all' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#0784C6\" \n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.activeBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'active_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('active_bookings')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('active_bookings')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"calendar-check\" \n                                size={16} \n                                color=\"#4CAF50\"\n                              />\n                              <Text style={[styles.filterText, styles.activeBookingsButtonText]}>\n                                Active Bookings\n                              </Text>\n                              {activeFilter === 'active_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#4CAF50\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.noBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'no_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('no_bookings')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('no_bookings')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"calendar-remove\" \n                                size={16} \n                                color=\"#898974\"\n                              />\n                              <Text style={[styles.filterText, styles.noBookingsButtonText]}>\n                                No Bookings\n                              </Text>\n                              {activeFilter === 'no_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#898974\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                          <TouchableOpacity \n                            style={[\n                              styles.filterButton,\n                              styles.pastBookingsButton,\n                              Platform.OS === 'web' && hoveredFilter === 'past_bookings' && styles.filterButtonHovered\n                            ]}\n                            onPress={() => setActiveFilter('past_bookings')}\n                            onMouseEnter={() => deviceSupportsHover && setHoveredFilter('past_bookings')}\n                            onMouseLeave={() => deviceSupportsHover && setHoveredFilter(null)}\n                          >\n                            <View style={styles.filterContent}>\n                              <MaterialCommunityIcons \n                                name=\"history\" \n                                size={16} \n                                color=\"#9C27B0\"\n                              />\n                              <Text style={[styles.filterText, styles.pastBookingsButtonText]}>\n                                Past Bookings\n                              </Text>\n                              {activeFilter === 'past_bookings' && (\n                                <MaterialCommunityIcons \n                                  name=\"check\" \n                                  size={16} \n                                  color=\"#9C27B0\"\n                                  style={styles.checkmark}\n                                />\n                              )}\n                            </View>\n                          </TouchableOpacity>\n                        </View>\n                      </ScrollView>\n                    </View>\n                  </View>\n                </View>\n\n                {connections.length > 0 ? (\n                  <FlatList\n                    data={connections}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.client_id.toString()}\n                    contentContainerStyle={styles.listContainer}\n                    onEndReached={handleLoadMore}\n                    onEndReachedThreshold={0.5}\n                    ListFooterComponent={renderFooter}\n                    ListHeaderComponent={<View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />}\n                    numColumns={isWideScreen ? 3 : (isMobile ? 1 : 2)}\n                    key={isWideScreen ? 'three-columns' : (isMobile ? 'one-column' : 'two-columns')}\n                    columnWrapperStyle={!isMobile && styles.columnWrapper}\n                  />\n                ) : searchQuery ? (\n                  <View style={styles.emptyContainer}>\n                    <View style={[styles.listHeaderSpacing, { height: isWideScreen ? 130 : 190 }]} />\n                    <MaterialCommunityIcons \n                      name=\"magnify-close\" \n                      size={80} \n                      color={theme.colors.placeholder} \n                    />\n                    <Text style={styles.emptyText}>\n                      No {activeTab} found matching \"{searchQuery}\"\n                    </Text>\n                    <TouchableOpacity \n                      style={styles.inviteButton}\n                      onPress={() => {\n                        setSearchQuery('');\n                        filterConnectionsLocally();\n                      }}\n                    >\n                      <Text style={styles.inviteButtonText}>Clear Search</Text>\n                    </TouchableOpacity>\n                  </View>\n                ) : (\n                  <EmptyStateMessage type={activeTab} />\n                )}\n              </View>\n            )}\n          </View>\n        </View>\n        \n        {/* Invite Client Modal */}\n        <Modal\n          visible={showInviteModal}\n          transparent={true}\n          animationType=\"fade\"\n          onRequestClose={() => setShowInviteModal(false)}\n        >\n          <View style={styles.modalOverlay}>\n            <View style={styles.modalContent}>\n              <View style={styles.modalHeader}>\n                <Text style={styles.modalTitle}>Invite Client</Text>\n                <TouchableOpacity \n                  style={styles.closeButton}\n                  onPress={() => setShowInviteModal(false)}\n                >\n                  <MaterialCommunityIcons name=\"close\" size={24} color=\"#666\" />\n                </TouchableOpacity>\n              </View>\n              \n              <Text style={styles.modalText}>\n                Invite a client to connect with you on CrittrCove. \n                You can either send them an email invitation or generate a link to share.\n              </Text>\n              \n              <View style={styles.inviteTypeToggle}>\n                <TouchableOpacity\n                  style={[\n                    styles.inviteTypeButton,\n                    invitationType === 'email' && styles.inviteTypeButtonActive\n                  ]}\n                  onPress={() => {\n                    setInvitationType('email');\n                    setInviteError('');\n                    setInviteSuccess('');\n                    setEmailValidationError('');\n                  }}\n                >\n                  <MaterialCommunityIcons \n                    name=\"email-outline\" \n                    size={20} \n                    color={invitationType === 'email' ? theme.colors.primary : \"#666\"} \n                  />\n                  <Text \n                    style={[\n                      styles.inviteTypeText,\n                      invitationType === 'email' && styles.inviteTypeTextActive\n                    ]}\n                  >\n                    Email Invitation\n                  </Text>\n                </TouchableOpacity>\n                \n                <TouchableOpacity\n                  style={[\n                    styles.inviteTypeButton,\n                    invitationType === 'link' && styles.inviteTypeButtonActive\n                  ]}\n                  onPress={() => {\n                    setInvitationType('link');\n                    setInviteError('');\n                    setInviteSuccess('');\n                    setEmailValidationError('');\n                  }}\n                >\n                  <MaterialCommunityIcons \n                    name=\"link-variant\" \n                    size={20} \n                    color={invitationType === 'link' ? theme.colors.primary : \"#666\"} \n                  />\n                  <Text \n                    style={[\n                      styles.inviteTypeText,\n                      invitationType === 'link' && styles.inviteTypeTextActive\n                    ]}\n                  >\n                    Generate Link\n                  </Text>\n                </TouchableOpacity>\n              </View>\n              \n              {invitationType === 'email' ? (\n                <View style={styles.inputContainer}>\n                  <Text style={styles.inputLabel}>Client's Email Address</Text>\n                  <TextInput\n                    style={[\n                      styles.emailInput,\n                      emailValidationError ? styles.emailInputError : null\n                    ]}\n                    placeholder=\"client@example.com\"\n                    value={inviteEmail}\n                    onChangeText={handleEmailInputChange}\n                    keyboardType=\"email-address\"\n                    autoCapitalize=\"none\"\n                    maxLength={254}\n                  />\n                  {emailValidationError ? (\n                    <Text style={styles.validationErrorText}>{emailValidationError}</Text>\n                  ) : null}\n                </View>\n              ) : generatedLink ? (\n                <View style={styles.linkContainer}>\n                  <Text style={styles.inputLabel}>Shareable Invitation Link</Text>\n                  <View style={styles.generatedLinkContainer}>\n                    <Text \n                      style={styles.generatedLink}\n                      numberOfLines={1}\n                      ellipsizeMode=\"middle\"\n                    >\n                      {generatedLink}\n                    </Text>\n                    {Platform.OS === 'web' && (\n                      <TouchableOpacity \n                        style={styles.copyButton}\n                        onPress={handleCopyLink}\n                      >\n                        <MaterialCommunityIcons name=\"content-copy\" size={20} color={theme.colors.primary} />\n                      </TouchableOpacity>\n                    )}\n                  </View>\n                </View>\n              ) : null}\n              \n              {inviteError ? (\n                <Text style={styles.errorText}>{inviteError}</Text>\n              ) : null}\n              \n              {inviteSuccess ? (\n                <Text style={styles.successText}>{inviteSuccess}</Text>\n              ) : null}\n              \n              <View style={styles.modalButtons}>\n                <TouchableOpacity\n                  style={styles.cancelButton}\n                  onPress={() => setShowInviteModal(false)}\n                >\n                  <Text style={styles.cancelButtonText}>Close</Text>\n                </TouchableOpacity>\n                \n                {!generatedLink || invitationType === 'email' ? (\n                  <TouchableOpacity\n                    style={[\n                      styles.sendInviteButton,\n                      (invitationType === 'email' && (!inviteEmail || emailValidationError)) && styles.disabledButton,\n                      isInviting && styles.disabledButton\n                    ]}\n                    onPress={handleSendInvite}\n                    disabled={isInviting || (invitationType === 'email' && (!inviteEmail || emailValidationError))}\n                  >\n                    {isInviting ? (\n                      <ActivityIndicator size=\"small\" color={theme.colors.surface} />\n                    ) : (\n                      <Text style={styles.sendInviteButtonText}>\n                        {invitationType === 'email' ? 'Send Invitation' : 'Generate Link'}\n                      </Text>\n                    )}\n                  </TouchableOpacity>\n                ) : null}\n              </View>\n            </View>\n          </View>\n        </Modal>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    height: '100vh',\n    backgroundColor: theme.colors.surface,\n    position: 'fixed',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    transition: 'margin-left 0.3s ease',\n  },\n  content: {\n    flex: 1,\n    height: '100%',\n    overflow: 'auto',\n  },\n  mainContent: {\n    flex: 1,\n    width: '100%',\n    alignSelf: 'center',\n    backgroundColor: theme.colors.background,\n    position: 'relative',\n  },\n  headerSection: {\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingHorizontal: 24,\n    paddingTop: 24,\n    zIndex: 2,\n  },\n  connectionsContent: {\n    flex: 1,\n    backgroundColor: theme.colors.surface,\n    position: 'relative',\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: '600',\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  tabContainer: {\n    flexDirection: 'row',\n    gap: 32,\n  },\n  tab: {\n    paddingBottom: 8,\n    borderBottomWidth: 2,\n    borderBottomColor: 'transparent',\n  },\n  activeTab: {\n    borderBottomColor: theme.colors.primary,\n  },\n  tabText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  activeTabText: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  stickyHeader: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    zIndex: 2,\n    marginHorizontal: 24,\n    marginTop: 24,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    borderRadius: 8,\n    padding: 16,\n  },\n  stickyHeaderContent: {\n    width: '100%',\n    gap: 16,\n  },\n  searchAndInviteContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n  },\n  searchContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRadius: 8,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    minHeight: 48,\n  },\n  searchContainerFocused: {\n    borderColor: theme.colors.primary,\n    borderWidth: 2,\n    shadowColor: theme.colors.primary,\n    shadowOffset: { width: 0, height: 0 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n  },\n  searchInput: {\n    flex: 1,\n    color: '#666',\n    fontSize: 16,\n    marginLeft: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n    outlineStyle: 'none',\n    outlineWidth: 0,\n    WebkitAppearance: 'none',\n    padding: 0,\n    minHeight: 24,\n    ...(Platform.OS === 'web' && {\n      caretColor: theme.colors.primary,\n    }),\n  },\n  inviteButtonSmall: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 12,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    gap: 6,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease',\n      cursor: 'pointer',\n    })\n  },\n  inviteButtonSmallText: {\n    color: theme.colors.surface,\n    fontSize: 14,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  filtersWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    marginRight: -16,\n  },\n  filterScrollContent: {\n    flexGrow: 0,\n  },\n  filterContainer: {\n    flexDirection: 'row',\n    gap: 8,\n    backgroundColor: theme.colors.surfaceContrast,\n    paddingVertical: 8,\n    paddingLeft: 4,\n    paddingRight: 16,\n  },\n  filterButton: {\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease-in-out',\n      cursor: 'pointer',\n    })\n  },\n  filterButtonHovered: {\n    transform: [{ scale: 1.05 }],\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  filterContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n  },\n  checkmark: {\n    marginLeft: 4,\n  },\n  allButton: {\n    backgroundColor: '#EFF9FF',\n  },\n  allButtonText: {\n    color: '#0784C6',\n  },\n  activeBookingsButton: {\n    backgroundColor: '#E8F5E9',\n  },\n  activeBookingsButtonText: {\n    color: '#4CAF50',\n  },\n  noBookingsButton: {\n    backgroundColor: '#E8E9E2',\n  },\n  noBookingsButtonText: {\n    color: '#898974',\n  },\n  pastBookingsButton: {\n    backgroundColor: '#F3E5F5',\n  },\n  pastBookingsButtonText: {\n    color: '#9C27B0',\n  },\n  filterText: {\n    fontSize: 14,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n  },\n  listHeaderSpacing: {\n    paddingTop: 16,\n  },\n  listContainer: {\n    paddingHorizontal: 24,\n    paddingBottom: 34,\n    alignItems: 'stretch',\n    width: '100%',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  loadingMoreContainer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 24,\n  },\n  emptyText: {\n    fontSize: 16,\n    color: theme.colors.placeholder,\n    textAlign: 'center',\n    marginTop: 8,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inviteButton: {\n    backgroundColor: theme.colors.primary,\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 8,\n  },\n  inviteButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  footer: {\n    paddingVertical: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  footerText: {\n    color: theme.colors.placeholder,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n    textAlign: 'center',\n    marginBottom: 12,\n  },\n  createServiceButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    backgroundColor: theme.colors.primary,\n    borderRadius: 8,\n    marginTop: 8,\n    ...(Platform.OS === 'web' && {\n      transition: 'all 0.2s ease',\n      cursor: 'pointer',\n    })\n  },\n  createServiceButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalOverlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modalContent: {\n    backgroundColor: theme.colors.surface,\n    borderRadius: 12,\n    padding: 24,\n    width: '90%',\n    maxWidth: 500,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n  modalHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: '600',\n    color: theme.colors.text,\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  closeButton: {\n    padding: 4,\n  },\n  modalText: {\n    fontSize: 16,\n    color: theme.colors.text,\n    marginBottom: 24,\n    fontFamily: theme.fonts.regular.fontFamily,\n    lineHeight: 24,\n  },\n  inviteTypeToggle: {\n    flexDirection: 'row',\n    gap: 12,\n    marginBottom: 24,\n  },\n  inviteTypeButton: {\n    flex: 1,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 6,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  inviteTypeButtonActive: {\n    borderColor: theme.colors.primary,\n    backgroundColor: 'rgba(7, 132, 198, 0.05)',\n  },\n  inviteTypeText: {\n    fontSize: 16,\n    color: '#666',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  inviteTypeTextActive: {\n    color: theme.colors.primary,\n    fontWeight: '500',\n  },\n  inputContainer: {\n    marginBottom: 24,\n  },\n  inputLabel: {\n    fontSize: 16,\n    fontWeight: '500',\n    color: theme.colors.text,\n    marginBottom: 8,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emailInput: {\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  emailInputError: {\n    borderColor: theme.colors.error,\n    borderWidth: 2,\n  },\n  validationErrorText: {\n    color: theme.colors.error,\n    fontSize: 12,\n    marginTop: 4,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  linkContainer: {\n    marginBottom: 24,\n  },\n  generatedLinkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    padding: 12,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    borderRadius: 8,\n    backgroundColor: 'rgba(0, 0, 0, 0.02)',\n  },\n  generatedLink: {\n    flex: 1,\n    color: theme.colors.text,\n    fontSize: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  copyButton: {\n    padding: 8,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  errorText: {\n    color: theme.colors.error || '#D32F2F',\n    fontSize: 16,\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  successText: {\n    color: theme.colors.success || '#4CAF50',\n    fontSize: 16,\n    marginBottom: 16,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    gap: 12,\n    marginTop: 8,\n  },\n  cancelButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#CCCBC9',\n    backgroundColor: theme.colors.surface,\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  cancelButtonText: {\n    color: theme.colors.text,\n    fontSize: 16,\n    fontWeight: '500',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  sendInviteButton: {\n    paddingVertical: 10,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    backgroundColor: theme.colors.primary,\n    minWidth: 140,\n    alignItems: 'center',\n    justifyContent: 'center',\n    ...(Platform.OS === 'web' && {\n      cursor: 'pointer',\n    }),\n  },\n  sendInviteButtonText: {\n    color: theme.colors.surface,\n    fontSize: 16,\n    fontWeight: '600',\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  disabledButton: {\n    backgroundColor: '#CCCCCC',\n    opacity: 0.7,\n    ...(Platform.OS === 'web' && {\n      cursor: 'not-allowed',\n    }),\n  },\n  columnWrapper: {\n    flexWrap: 'wrap',\n    justifyContent: 'space-between',\n    gap: 16,\n    width: '100%',\n  },\n  cardWrapper: {\n    flex: 1,\n    width: '100%',\n    marginBottom: 16,\n  },\n  mobileCardWrapper: {\n    maxWidth: '100%',\n  },\n  wideScreenCardWrapper: {\n    maxWidth: 'calc(50% - 11px)',\n    // width: 'calc(33.33% - 11px)',\n  },\n  buttonHovered: {\n    transform: [{translateY: -3}],\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 6 },\n    shadowOpacity: 0.15,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n});\n\nexport default Connections; ","import React, { useEffect, useState, useContext } from 'react';\nimport { Platform, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\n// Add base64 polyfill for React Native if needed\nif (Platform.OS !== 'web' && typeof global.atob === 'undefined') {\n  global.atob = (str) => {\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    let result = '';\n    let i = 0;\n    \n    str = str.replace(/[^A-Za-z0-9+/]/g, '');\n    \n    while (i < str.length) {\n      const encoded1 = chars.indexOf(str.charAt(i++));\n      const encoded2 = chars.indexOf(str.charAt(i++));\n      const encoded3 = chars.indexOf(str.charAt(i++));\n      const encoded4 = chars.indexOf(str.charAt(i++));\n      \n      const bitmap = (encoded1 << 18) | (encoded2 << 12) | (encoded3 << 6) | encoded4;\n      \n      result += String.fromCharCode((bitmap >> 16) & 255);\n      if (encoded3 !== 64) result += String.fromCharCode((bitmap >> 8) & 255);\n      if (encoded4 !== 64) result += String.fromCharCode(bitmap & 255);\n    }\n    \n    return result;\n  };\n}\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Navigation from './src/components/Navigation';\nimport { theme } from './src/styles/theme';\nimport { AuthProvider, AuthContext, debugLog, getStorage, setStorage } from './src/context/AuthContext';\nimport { MessageNotificationProvider } from './src/context/MessageNotificationContext';\nimport { API_BASE_URL } from './src/config/config';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createNavigationContainerRef } from '@react-navigation/native';\nimport { useNavigation } from '@react-navigation/native';\nimport { navigateToFrom } from './src/components/Navigation';\nimport { TutorialProvider } from './src/context/TutorialContext';\nimport { ToastProvider } from './src/components/ToastProvider';\nimport platformNavigation from './src/utils/platformNavigation';\nimport { loadFonts } from './src/styles/fonts';\nimport { ActivityIndicator } from 'react-native-paper';\n\n// Import CSS fixes for mobile browsers\nif (Platform.OS === 'web') {\n  // We need to import this statically for webpack to pick it up\n  require('./src/styles/viewport-fix.css');\n}\n\n// Import all your screen components\nimport HomeScreen from './src/screens/HomeScreen';\n// import AboutScreen from './src/screens/AboutScreen';\nimport MyProfile from './src/screens/MyProfile';\nimport SignIn from './src/screens/SignIn';\nimport SignUp from './src/screens/SignUp';\nimport ResetPassword from './src/screens/ResetPassword';\nimport ResetPasswordConfirm from './src/screens/ResetPasswordConfirm';\nimport Dashboard from './src/screens/Dashboard';\nimport BecomeProfessional from './src/screens/BecomeProfessional';\nimport MoreScreen from './src/screens/MoreScreen';\nimport AvailabilitySettings from './src/screens/AvailabilitySettings';\nimport OwnerHistory from './src/screens/OwnerHistory';\nimport MessageHistory from './src/screens/MessageHistory';\nimport Settings from './src/screens/Settings';\nimport PrivacyPolicy from './src/screens/PrivacyPolicy';\nimport ProfessionalSettings from './src/screens/ProfessionalSettings';\nimport TermsOfService from './src/screens/TermsOfService';\nimport HelpFAQ from './src/screens/HelpFAQ';\nimport ContactUs from './src/screens/ContactUs';\nimport Owners from './src/screens/Owners';\nimport ProfessionalProfile from './src/screens/ProfessionalProfile';\nimport MyContracts from './src/screens/MyContracts';\nimport ChangePassword from './src/screens/ChangePassword';\nimport SearchProfessionalsListing from './src/screens/SearchProfessionalsListing';\nimport MyBookings from './src/screens/MyBookings';\nimport ServiceManagerScreen from './src/screens/ServiceManagerScreen';\nimport BlogScreen from './src/screens/BlogScreen';\nimport BlogPost from './src/screens/BlogPost';\nimport Waitlist from './src/screens/Waitlist';\nimport TestToast from './src/screens/TestToast';\nimport Connections from './src/screens/Connections';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst screens = [\n  { name: 'Home', component: HomeScreen },\n  { name: 'MyProfile', component: MyProfile },  \n  { name: 'SignIn', component: SignIn },\n  { name: 'SignUp', component: SignUp },\n  { name: 'Invite', component: SignUp },\n  { name: 'ResetPassword', component: ResetPassword },\n  { name: 'ResetPasswordConfirm', component: ResetPasswordConfirm },\n  { name: 'SearchProfessionalsListing', component: SearchProfessionalsListing },\n  { name: 'OwnerHistory', component: OwnerHistory },\n  { name: 'MessageHistory', component: MessageHistory },\n  { name: 'Dashboard', component: Dashboard },\n  { name: 'BecomeProfessional', component: BecomeProfessional },\n  { name: 'More', component: MoreScreen },\n  { name: 'Owners', component: Owners },\n  { name: 'AvailabilitySettings', component: AvailabilitySettings },\n  { name: 'Settings', component: Settings },\n  { name: 'PrivacyPolicy', component: PrivacyPolicy },\n  { name: 'ProfessionalSettings', component: ProfessionalSettings },\n  { name: 'TermsOfService', component: TermsOfService },\n  { name: 'HelpFAQ', component: HelpFAQ },\n  { name: 'ContactUs', component: ContactUs },\n  { name: 'ProfessionalProfile', component: ProfessionalProfile },\n  { name: 'MyContracts', component: MyContracts },\n  { name: 'ChangePassword', component: ChangePassword },\n  { name: 'MyBookings', component: MyBookings },\n  { name: 'ServiceManager', component: ServiceManagerScreen },\n  { name: 'Blog', component: BlogScreen },\n  { name: 'BlogPost', component: BlogPost },\n  { name: 'Waitlist', component: Waitlist },\n  { name: 'TestToast', component: TestToast },\n  { name: 'Connections', component: Connections },\n];\n\nconst createLinking = (authContext) => ({\n  enabled: true,\n  prefixes: [\n    'https://staging.crittrcove.com',\n    'http://staging.crittrcove.com',\n    `${API_BASE_URL}`\n  ],\n  getInitialURL: async () => {\n    if (Platform.OS !== 'web') {\n      return null; // Let React Navigation handle mobile normally\n    }\n    \n    const url = window.location.href;\n    const pathname = window.location.pathname;\n    \n    debugLog('MBA2ounf4f LINKING: Checking initial URL for auth protection:', { url, pathname });\n    \n    // List of protected paths\n    const protectedPaths = [\n      '/Dashboard', '/dashboard',\n      '/MyProfile', '/my-profile', \n      '/MessageHistory', '/message-history',\n      '/OwnerHistory', '/owner-history',\n      '/BecomeProfessional', '/become-professional',\n      '/More', '/more',\n      '/Owners', '/owners',\n      '/AvailabilitySettings', '/availability-settings',\n      '/Settings', '/settings',\n      '/ProfessionalSettings', '/professional-settings',\n      '/ProfessionalProfile', '/professional-profile',\n      '/MyContracts', '/my-contracts',\n      '/ChangePassword', '/change-password',\n      '/MyBookings', '/my-bookings',\n      '/ServiceManager', '/service-manager',\n      '/TestToast', '/test-toast',\n      '/Connections', '/connections'\n    ];\n    \n    const isProtectedPath = protectedPaths.some(path => \n      pathname.startsWith(path) || pathname === path\n    );\n    \n    if (isProtectedPath) {\n      // Wait for auth context to be available and initialized\n      let waitCount = 0;\n      while ((!authContext || !authContext.isInitialized) && waitCount < 50) {\n        debugLog('MBA2ounf4f LINKING: Waiting for auth context...', waitCount);\n        await new Promise(resolve => setTimeout(resolve, 100));\n        waitCount++;\n      }\n      \n      if (authContext && !authContext.isSignedIn) {\n        debugLog('MBA2ounf4f LINKING: Protected path accessed without auth, redirecting to signin');\n        const baseUrl = url.split(pathname)[0];\n        return `${baseUrl}/signin`;\n      }\n    }\n    \n    debugLog('MBA2ounf4f LINKING: Allowing access to URL:', url);\n    return url;\n  },\n  config: {\n    screens: {\n      Home: '/',  // Only match root path\n      MyProfile: 'my-profile',\n      SignIn: 'signin',\n      SignUp: {\n        path: 'signup/:token?',\n        parse: {\n          token: (token) => token || null\n        }\n      },\n      Invite: {\n        path: 'invite/:token',\n        exact: true,\n        parse: {\n          token: (token) => token\n        },\n        stringify: {\n          token: (token) => token\n        }\n      },\n      ResetPassword: 'reset-password',\n      ResetPasswordConfirm: 'reset-password/:uid/:token',\n      SearchProfessionalsListing: 'SearchProfessionalsListing',\n      OwnerHistory: 'owner-history',\n      MessageHistory: {\n        path: 'message-history',\n        parse: {\n          messageId: (messageId) => messageId || null,\n          senderName: (senderName) => senderName || 'Unknown User'\n        }\n      },\n      Dashboard: 'Dashboard',\n      BecomeProfessional: 'become-professional',\n      More: 'more',\n      Owners: 'owners',\n      AvailabilitySettings: 'availability-settings',\n      Settings: 'settings',\n      PrivacyPolicy: 'privacy-policy',\n      ProfessionalSettings: 'professional-settings',\n      TermsOfService: 'terms-of-service',\n      HelpFAQ: 'help-faq',\n      ContactUs: 'contact-us',\n      ProfessionalProfile: {\n        path: 'professional-profile',\n        parse: {\n          professional: (professional) => undefined\n        }\n      },\n      MyContracts: 'my-contracts',\n      ChangePassword: 'change-password',\n      MyBookings: 'my-bookings',\n      ServiceManager: 'service-manager',\n      Blog: 'blog',\n      BlogPost: 'blog-post',\n      Waitlist: 'waitlist',\n      TestToast: 'test-toast',\n      Connections: 'connections',\n    }\n  }\n});\n\n\nexport const navigationRef = createNavigationContainerRef();\n\nexport function navigate(name, params) {\n  if (navigationRef.isReady()) {\n    navigationRef.navigate(name, params);\n  }\n}\n\nfunction TabNavigator({ initialRouteName = 'Home' }) {\n  return (\n    <Tab.Navigator \n      initialRouteName={initialRouteName}\n      tabBar={props => <Navigation {...props} />}\n    >\n      {screens.map(screen => (\n        <Tab.Screen \n          key={screen.name}\n          name={screen.name} \n          component={screen.component} \n          options={{ headerShown: false }} \n        />\n      ))}\n    </Tab.Navigator>\n  );\n}\n\nconst MVPWarning = () => {\n  const [isVisible, setIsVisible] = useState(true);\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const checkBannerStatus = async () => {\n      const hidden = await getStorage('mvp_banner_hidden');\n      if (hidden === 'true') {\n        setIsVisible(false);\n      }\n    };\n    checkBannerStatus();\n  }, []);\n\n  const hideBanner = async () => {\n    await setStorage('mvp_banner_hidden', 'true');\n    setIsVisible(false);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <View style={styles.warningBanner}>\n      <View style={styles.warningContent}>\n        <TouchableOpacity \n          style={styles.closeButton}\n          onPress={hideBanner}\n        >\n          <Text style={styles.closeButtonText}>✕</Text>\n        </TouchableOpacity>\n        <Text style={styles.warningText}>\n          🚧 MVP MODE: Features are still under development.\n        </Text>\n        <TouchableOpacity \n          style={styles.waitlistButton}\n          onPress={() => navigateToFrom(navigation, 'Waitlist', 'Home')}\n        >\n          <Text style={styles.waitlistButtonText}>Join Waitlist</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nfunction AppContent() {\n  const authContext = useContext(AuthContext);\n  const { checkAuthStatus, is_DEBUG, isInitialized, isSignedIn, userRole } = authContext;\n  const [initialRoute, setInitialRoute] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isVisible, setIsVisible] = useState(true);\n  const [inviteToken, setInviteToken] = useState(null);\n\n  // Check for invitation in the URL\n  useEffect(() => {\n    if (Platform.OS === 'web') {\n      // Use platform navigation to get current route info\n      const currentRouteInfo = platformNavigation.getCurrentRoute();\n      const url = currentRouteInfo.path;\n      \n      if (authContext.debugLog) {\n        authContext.debugLog('MBA6666 App - Current URL path:', url);\n      }\n      \n      if (url.includes('/invite/')) {\n        const pathParts = url.split('/');\n        const inviteIndex = pathParts.findIndex(part => part === 'invite');\n        if (inviteIndex !== -1 && pathParts.length > inviteIndex + 1) {\n          const token = pathParts[inviteIndex + 1];\n          if (authContext.debugLog) {\n            authContext.debugLog('MBA6666 Found invitation token in URL:', token);\n          }\n          setInviteToken(token);\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const initializeApp = async () => {\n      // Wait for AuthContext to be fully initialized\n      if (!isInitialized) {\n        return;\n      }\n\n      try {\n        let route = 'Home';\n\n        // If we have an invite token, go to SignUp\n        if (inviteToken) {\n          if (authContext.debugLog) {\n            authContext.debugLog('MBA6666 Setting initial route to SignUp with token:', inviteToken);\n          }\n          route = 'SignUp';\n        }\n        // If user is authenticated and no invite token, go to appropriate screen\n        else if (isSignedIn) {\n          route = 'Dashboard'; // Both roles go to Dashboard now\n          if (authContext.debugLog) {\n            authContext.debugLog('MBA6666 User authenticated, setting route to:', route, 'for role:', userRole);\n          }\n        } else {\n          // User not signed in - check if they're trying to access a protected route\n          if (Platform.OS === 'web' && typeof window !== 'undefined') {\n            const currentPath = window.location.pathname;\n            const protectedPaths = [\n              '/Dashboard', '/dashboard',\n              '/MyProfile', '/my-profile',\n              '/MessageHistory', '/message-history',\n              '/OwnerHistory', '/owner-history',\n              '/BecomeProfessional', '/become-professional',\n              '/More', '/more',\n              '/Owners', '/owners',\n              '/AvailabilitySettings', '/availability-settings',\n              '/Settings', '/settings',\n              '/ProfessionalSettings', '/professional-settings',\n              '/ProfessionalProfile', '/professional-profile',\n              '/MyContracts', '/my-contracts',\n              '/ChangePassword', '/change-password',\n              '/MyBookings', '/my-bookings',\n              '/ServiceManager', '/service-manager',\n              '/TestToast', '/test-toast',\n              '/Connections', '/connections'\n            ];\n            \n            const isOnProtectedPath = protectedPaths.some(path => \n              currentPath.startsWith(path) || currentPath === path\n            );\n            \n            if (isOnProtectedPath) {\n              debugLog('MBA6666 Web: User not authenticated but on protected path, redirecting to SignIn');\n              route = 'SignIn';\n            } else {\n              route = 'Home';\n              if (authContext.debugLog) {\n                authContext.debugLog('MBA6666 User not authenticated, setting route to Home');\n              }\n            }\n          } else {\n            route = 'Home';\n            if (authContext.debugLog) {\n              authContext.debugLog('MBA6666 User not authenticated, setting route to Home');\n            }\n          }\n        }\n\n        setInitialRoute(route);\n        debugLog('MBA6666 Final initial route set to:', route);\n      } catch (error) {\n        console.error('Error initializing app:', error);\n        setInitialRoute(inviteToken ? 'SignUp' : 'Home');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    initializeApp();\n  }, [inviteToken, isInitialized, isSignedIn, userRole]);\n\n  // Route guard effect - handles URL-based redirects after app initialization\n  useEffect(() => {\n    if (Platform.OS !== 'web' || !isInitialized || isLoading) {\n      return;\n    }\n\n    const checkAndRedirectProtectedRoute = () => {\n      if (typeof window === 'undefined') return;\n      \n      const currentPath = window.location.pathname;\n      const protectedPaths = [\n        '/Dashboard', '/dashboard',\n        '/MyProfile', '/my-profile',\n        '/MessageHistory', '/message-history',\n        '/OwnerHistory', '/owner-history',\n        '/BecomeProfessional', '/become-professional',\n        '/More', '/more',\n        '/Owners', '/owners',\n        '/AvailabilitySettings', '/availability-settings',\n        '/Settings', '/settings',\n        '/ProfessionalSettings', '/professional-settings',\n        '/ProfessionalProfile', '/professional-profile',\n        '/MyContracts', '/my-contracts',\n        '/ChangePassword', '/change-password',\n        '/MyBookings', '/my-bookings',\n        '/ServiceManager', '/service-manager',\n        '/TestToast', '/test-toast',\n        '/Connections', '/connections'\n      ];\n      \n      const isOnProtectedPath = protectedPaths.some(path => \n        currentPath.startsWith(path) || currentPath === path\n      );\n      \n      debugLog('MBA7777 Route guard check:', {\n        currentPath,\n        isOnProtectedPath,\n        isSignedIn,\n        isInitialized,\n        isLoading\n      });\n      \n      if (isOnProtectedPath && !isSignedIn) {\n        debugLog('MBA7777 Route guard: Redirecting unauthenticated user from protected route');\n        // Use window.location.href for immediate redirect\n        window.location.href = '/signin';\n      }\n    };\n\n    // Small delay to ensure all initialization is complete\n    const timeoutId = setTimeout(checkAndRedirectProtectedRoute, 100);\n    \n    return () => clearTimeout(timeoutId);\n  }, [isInitialized, isSignedIn, isLoading]);\n\n  // Handle route changes without triggering auth checks\n  useEffect(() => {\n    if (!isLoading && initialRoute && Platform.OS !== 'web') {\n      AsyncStorage.setItem('lastRoute', initialRoute)\n        .catch(error => console.error('Error storing route:', error));\n    }\n  }, [initialRoute, isLoading]);\n\n  if (!isInitialized || isLoading || !initialRoute) {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: theme.colors.background }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 16, color: theme.colors.text, fontSize: 16 }}>Loading...</Text>\n      </View>\n    );\n  }\n\n  // Add navigation state listener\n  const handleNavigationStateChange = async (state) => {\n    // Store route for mobile\n    if (Platform.OS !== 'web' && state?.routes?.length > 0) {\n      const currentRoute = state.routes[state.routes.length - 1].name;\n      await AsyncStorage.setItem('lastRoute', currentRoute)\n        .catch(error => console.error('Error storing route:', error));\n    }\n    \n    // Web route protection - only redirect if clearly unauthenticated on protected route\n    if (Platform.OS === 'web' && state?.routes?.length > 0) {\n      const currentRoute = state.routes[state.routes.length - 1];\n      const routeName = currentRoute.name;\n      \n      debugLog('MBA2ounf4f Navigation state change:', {\n        routeName,\n        currentPath: typeof window !== 'undefined' ? window.location.pathname : 'unknown',\n        isInitialized,\n        isSignedIn\n      });\n      \n      // List of protected route names (these are route names, not paths)\n      const protectedRoutes = [\n        'Dashboard',\n        'MyProfile',\n        'MessageHistory',\n        'OwnerHistory',\n        'BecomeProfessional',\n        'More',\n        'Owners',\n        'AvailabilitySettings',\n        'Settings',\n        'ProfessionalSettings',\n        'ProfessionalProfile',\n        'MyContracts',\n        'ChangePassword',\n        'MyBookings',\n        'ServiceManager',\n        'TestToast',\n        'Connections'\n      ];\n      \n      const isProtectedRoute = protectedRoutes.includes(routeName);\n      \n      // Only redirect if:\n      // 1. On a protected route\n      // 2. Auth is fully initialized (not still loading)\n      // 3. User is definitely not signed in\n      // 4. Not already on signin page\n      if (isProtectedRoute && isInitialized && !isSignedIn && routeName !== 'SignIn') {\n        debugLog('MBA2ounf4f Web: Protected route accessed without authentication, redirecting to signin');\n        // Use React Navigation instead of window.location to avoid full page reload\n        if (navigationRef.current) {\n          navigationRef.current.navigate('SignIn');\n        }\n      }\n    }\n  };\n\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      linking={createLinking(authContext)}\n      onStateChange={handleNavigationStateChange}\n    >\n      <MessageNotificationProvider>\n        <TutorialProvider>\n          <PaperProvider theme={theme}>\n            <ToastProvider>\n              {/* {isVisible && <MVPWarning />} */}\n              {Platform.OS === 'web' ? (\n                <Stack.Navigator\n                  initialRouteName={initialRoute}\n                  screenOptions={{\n                    headerShown: true,\n                    header: ({ navigation }) => <Navigation navigation={navigation} />,\n                    ...TransitionPresets.SlideFromRightIOS,\n                    presentation: 'card',\n                    animation: 'slide_from_right'\n                  }}\n                >\n                  {screens.map(screen => (\n                    <Stack.Screen \n                      key={screen.name}\n                      name={screen.name} \n                      component={screen.component}\n                      options={{\n                        headerShown: true,\n                        animation: 'slide_from_right'\n                      }}\n                    />\n                  ))}\n                </Stack.Navigator>\n              ) : (\n                <TabNavigator initialRouteName={initialRoute} />\n              )}\n            </ToastProvider>\n          </PaperProvider>\n        </TutorialProvider>\n      </MessageNotificationProvider>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  warningBanner: {\n    backgroundColor: '#ffebee',\n    padding: Platform.OS === 'web' ? 12 : 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ef5350',\n    width: '100%',\n    flexShrink: 0, // Prevent banner from shrinking\n  },\n  warningContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    gap: 10,\n    maxWidth: 1200,\n    marginHorizontal: 'auto',\n    width: '100%',\n  },\n  warningText: {\n    color: '#c62828',\n    textAlign: 'center',\n    fontSize: Platform.OS === 'web' ? 15 : 14,\n    flexShrink: 1,\n    flex: 1,\n    marginHorizontal: 15,\n  },\n  waitlistButton: {\n    backgroundColor: '#ef5350',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 20,\n    marginLeft: 'auto',\n  },\n  waitlistButtonText: {\n    color: 'white',\n    fontSize: Platform.OS === 'web' ? 14 : 13,\n    fontWeight: '600',\n  },\n  closeButton: {\n    width: 24,\n    height: 24,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 5,\n  },\n  closeButtonText: {\n    color: '#c62828',\n    fontSize: 18,\n    fontWeight: '600',\n  },\n});\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n\n  useEffect(() => {\n    const initializeFonts = async () => {\n      if (Platform.OS !== 'web') {\n        // Only load fonts on mobile platforms\n        try {\n          await loadFonts();\n          debugLog('MBA1234: Fonts loaded successfully');\n        } catch (error) {\n          console.warn('MBA1234: Error loading fonts:', error);\n        }\n      }\n      setFontsLoaded(true);\n    };\n\n    initializeFonts();\n  }, []);\n\n  // Show loading screen while fonts are loading on mobile\n  if (!fontsLoaded && Platform.OS !== 'web') {\n    return (\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: theme.colors.background }}>\n        <ActivityIndicator size=\"large\" color={theme.colors.primary} />\n        <Text style={{ marginTop: 16, color: theme.colors.text }}>Loading fonts...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <AuthProvider>\n      <AppContent />\n    </AuthProvider>\n  );\n}\n\n","import axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { debugLog } from '../context/AuthContext';\nimport { Platform } from 'react-native';\nimport { convertToUTC, formatDateForAPI, formatTimeForAPI } from '../utils/time_utils';\n\n// Get all professional services for service manager screen\nexport const getProfessionalServices = async () => {\n  try {\n    debugLog('MBA7890: Fetching professional services');\n    \n    const response = await axios.get(`${API_BASE_URL}/api/services/v1/professional/services/`);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA7890: Error fetching professional services:', error);\n    debugLog('MBA7890: Error details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n// Get all available services for a pro and\n// return the selected ones in the draft\nexport const getBookingAvailableServices = async (bookingId) => {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${bookingId}/available_services/`\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching available services:', error);\n    throw error;\n  }\n};\n\nexport const getBookingAvailablePets = async (bookingId) => {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${bookingId}/available_pets/`\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching available pets:', error);\n    throw error;\n  }\n};\n\nexport const approveBooking = async (bookingId, clientAgreedTos = false) => {\n  try {\n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/approve/`,\n      {\n        client_agreed_tos: clientAgreedTos\n      }\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('Error approving booking:', error);\n    throw error;\n  }\n};\n\n/**\n * Get detailed booking information by ID\n * @param {string|number} bookingId - ID of the booking to retrieve\n * @returns {Promise<Object>} - Detailed booking information\n */\nexport const getBookingDetails = async (bookingId) => {\n  try {\n    debugLog('MBA88899', 'Fetching booking details for ID:', bookingId);\n\n    const response = await axios.get(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/details/`\n    );\n    \n    debugLog('MBA88899', 'Booking details fetched successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA88899', 'Error fetching booking details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Request changes to a booking\n * @param {string|number} bookingId - ID of the booking to request changes for\n * @param {string} message - Message explaining the requested changes\n * @returns {Promise<Object>} - Response from the API\n */\nexport const requestBookingChanges = async (bookingId, message) => {\n  try {\n    debugLog('MBA88899 Requesting changes for booking ID:', bookingId);\n    debugLog('MBA88899 Change request message:', message);\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/request-changes/`,\n      { message }\n    );\n    \n    debugLog('MBA88899 Change request submitted successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA88899 Error requesting booking changes:', error);\n    throw error;\n  }\n};\n\nexport const updateBookingDraftPetsAndServices = async (draftId, data) => {\n  try {\n    const response = await axios.patch(\n      `${API_BASE_URL}/api/booking_drafts/v1/${draftId}/update_pets_and_services/`,\n      data\n    );\n\n    debugLog('MBA12345 Draft update response:', response.data);\n\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error updating booking draft:', error);\n    throw error;\n  }\n};\n\nexport const updateBookingDraftTimeAndDate = async (draftId, startDate, endDate, startTime, endTime) => {\n    try {\n        debugLog('MBA5asdt3f4321 - Updating booking draft time and date:', {\n            draftId,\n            startDate,\n            endDate,\n            startTime,\n            endTime\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-time-and-date/${draftId}/`,\n            {\n                start_date: startDate,\n                end_date: endDate,\n                start_time: startTime,\n                end_time: endTime\n            }\n        );\n\n        debugLog('MBA5asdt3f4321 - Booking draft time and date update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA5asdt3f4321 Error updating booking draft time and date:', error);\n        throw error;\n    }\n};\n\nexport const updateBookingDraftMultipleDays = async (draftId, data, timeSettings) => {\n    try {\n        // Get the user's timezone from timeSettings, with fallback to US/Mountain\n        const userTimezone = timeSettings?.timezone || 'US/Mountain';\n        \n        debugLog('MBA8800: Updating booking draft multiple days:', {\n            draftId,\n            data,\n            userTimezone\n        });\n\n        // Handle different formats of dates array\n        const utcDates = data.dates.map(dateItem => {\n            // Check what format the date is in\n            let dateStr, startTimeStr, endTimeStr, endDateStr;\n            let isServiceOvernight = false;\n            \n            // If the dateItem already has date and times (from non-overnight date range)\n            if (dateItem.date && dateItem.start_time && dateItem.end_time) {\n                debugLog('MBA8800: Using provided occurrence data format', dateItem);\n                return {\n                    date: dateItem.date,\n                    startTime: dateItem.start_time,\n                    endDate: dateItem.end_date || dateItem.date, // Always include endDate\n                    endTime: dateItem.end_time,\n                    is_overnight: dateItem.is_overnight || false\n                };\n            }\n            \n            // If the dateItem already has date and times (formatted in BookingStepModal)\n            if (dateItem.date && dateItem.startTime && dateItem.endTime) {\n                debugLog('MBA8800: Using provided date and times', dateItem);\n                return {\n                    date: dateItem.date,\n                    startTime: dateItem.startTime,\n                    endDate: dateItem.endDate || dateItem.date, // Always include endDate\n                    endTime: dateItem.endTime,\n                    is_overnight: dateItem.is_overnight || false\n                };\n            }\n            \n            // For multiple days format from DateSelectionCard\n            if (dateItem instanceof Date) {\n                // Format the date for API\n                dateStr = formatDateForAPI(dateItem);\n                \n                // Determine which time to use - if individual times exist, use those\n                let dayTimes = data.times;\n                const dateKey = dateItem.toISOString().split('T')[0];\n                \n                if (data.times[dateKey] && data.times.hasIndividualTimes) {\n                    dayTimes = data.times[dateKey];\n                }\n                \n                // Get the time strings\n                if (typeof dayTimes.startTime === 'string') {\n                    startTimeStr = dayTimes.startTime;\n                } else if (dayTimes.startTime?.hours !== undefined) {\n                    startTimeStr = `${String(dayTimes.startTime.hours).padStart(2, '0')}:${String(dayTimes.startTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                    // Default time if missing\n                    startTimeStr = '09:00';\n                }\n                \n                if (typeof dayTimes.endTime === 'string') {\n                    endTimeStr = dayTimes.endTime;\n                } else if (dayTimes.endTime?.hours !== undefined) {\n                    endTimeStr = `${String(dayTimes.endTime.hours).padStart(2, '0')}:${String(dayTimes.endTime.minutes || 0).padStart(2, '0')}`;\n                } else {\n                    // Default time if missing\n                    endTimeStr = '17:00';\n                }\n                \n                debugLog('MBA8800: Formatted times for date:', dateKey, { startTimeStr, endTimeStr });\n                \n                // Determine if the end time might cross to the next day\n                // Check if end time is midnight or earlier than start time, indicating day boundary crossing\n                const isMidnightEnd = endTimeStr === '00:00';\n                const isTimeBeforeStart = \n                    (parseInt(endTimeStr.split(':')[0], 10) < parseInt(startTimeStr.split(':')[0], 10)) ||\n                    (parseInt(endTimeStr.split(':')[0], 10) === parseInt(startTimeStr.split(':')[0], 10) && \n                     parseInt(endTimeStr.split(':')[1], 10) < parseInt(startTimeStr.split(':')[1], 10));\n                \n                const needsNextDayDate = isMidnightEnd || isTimeBeforeStart;\n                \n                // Calculate end date - either same day or next day\n                const endDateObj = needsNextDayDate \n                  ? new Date(dateItem.getTime() + 24*60*60*1000) // Next day if crossing midnight\n                  : new Date(dateItem);\n                \n                endDateStr = formatDateForAPI(endDateObj);\n                \n                debugLog('MBA8800: End date calculation in API.js:', {\n                  needsNextDayDate,\n                  isMidnightEnd,\n                  isTimeBeforeStart,\n                  startTimeStr,\n                  endTimeStr,\n                  originalDate: dateStr,\n                  calculatedEndDate: endDateStr\n                });\n                \n                // Set overnight based on service, not just time\n                isServiceOvernight = dayTimes.isOvernightForced || false;\n            } else {\n                // If the data is in some other format, we need to extract the date and times\n                debugLog('MBA8800: Unexpected date format', dateItem);\n                throw new Error('Unexpected date format');\n            }\n            \n            // Convert to UTC using user's timezone\n            const { date: utcStartDate, time: utcStartTime } = convertToUTC(\n                dateStr,\n                startTimeStr,\n                userTimezone\n            );\n\n            const { date: utcEndDate, time: utcEndTime } = convertToUTC(\n                endDateStr || dateStr, // Use endDateStr if available, otherwise use dateStr\n                endTimeStr,\n                userTimezone\n            );\n\n            return {\n                date: utcStartDate,\n                startTime: utcStartTime,\n                endDate: utcEndDate, // Always include endDate\n                endTime: utcEndTime,\n                is_overnight: isServiceOvernight\n            };\n        });\n\n        debugLog('MBA8800: Converted UTC dates:', utcDates);\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-multiple-days/${draftId}/`,\n            { dates: utcDates }\n        );\n\n        debugLog('MBA8800: Booking draft multiple days update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA8800: Error updating booking draft multiple days:', error);\n        throw error;\n    }\n};\n\nexport const updateBookingDraftRecurring = async (draftId, recurringData) => {\n    try {\n        debugLog('MBA5asdt3f4321 - Updating booking draft recurring dates:', {\n            draftId,\n            recurringData\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-recurring/${draftId}/`,\n            recurringData\n        );\n\n        debugLog('MBA5asdt3f4321 - Booking draft recurring update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA5asdt3f4321 Error updating booking draft recurring dates:', error);\n        throw error;\n    }\n};\n\n/**\n * Get user's time settings (timezone and military time preference)\n * @returns {Promise<Object>} Object containing timezone and use_military_time\n */\nexport const getTimeSettings = async () => {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/users/v1/time-settings/`\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching time settings', error);\n    throw error;\n  }\n};\n\n/**\n * Update user's time settings\n * @param {Object} settings - Object containing timezone and/or use_military_time\n * @returns {Promise<Object>} Updated time settings\n */\nexport const updateTimeSettings = async (settings) => {\n  try {\n    // Ensure settings is an object\n    const data = typeof settings === 'object' ? settings : { timezone: settings };\n    \n    debugLog('MBA12345 Sending time settings update', data);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/users/v1/update-time-settings/`,\n      data\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error updating time settings', error);\n    throw error;\n  }\n};\n\n/**\n * Get user's name from the backend\n * @returns {Promise<Object>} Object containing name and first_name\n */\nexport const getUserName = async () => {\n  try {\n    const response = await axios.get(\n      `${API_BASE_URL}/api/users/v1/get-name/`\n    );\n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345 Error fetching user name', error);\n    throw error;\n  }\n};\n\n/**\n * Get user profile data\n * @returns {Promise<Object>} - User profile data\n */\nexport const userProfile = async () => {\n  try {\n    debugLog('MBA12345', 'Fetching user profile data');\n    \n    const response = await axios.get(`${API_BASE_URL}/api/users/v1/profile/`);\n    \n    debugLog('MBA12345', 'User profile data fetched successfully:', {\n      name: response.data.name,\n      email: response.data.email,\n      address: response.data.address\n    });\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA12345', 'Error in userProfile:', error);\n    throw error;\n  }\n};\n\n/**\n * Update user profile information\n * @param {Object} profileData - Data to update in the user profile\n * @returns {Promise<Object>} - Only the updated fields\n */\nexport const updateProfileInfo = async (profileData) => {\n  try {\n    debugLog('MBA76543', 'Updating profile info with data:', profileData);\n    \n    // Handle FormData differently than JSON\n    const isFormData = profileData instanceof FormData;\n    \n    debugLog('MBA76543', `Making ${isFormData ? 'FormData' : 'JSON'} request to update profile`);\n    \n    const config = {\n      method: 'patch',\n      url: `${API_BASE_URL}/api/users/v1/update-profile/`,\n      data: profileData\n    };\n    \n    // Only set content-type for non-FormData\n    if (!isFormData) {\n      config.headers = { 'Content-Type': 'application/json' };\n    }\n    \n    const response = await axios(config);\n    \n    debugLog('MBA76543', 'Profile updated successfully with response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA76543', 'Error updating profile info:', error);\n    throw error;\n  }\n};\n\n/**\n * Change user password\n * @param {string} currentPassword - The user's current password\n * @param {string} newPassword - The new password to set\n * @returns {Promise<Object>} - Response from the backend\n */\nexport const changePassword = async (currentPassword, newPassword) => {\n  try {\n    debugLog('MBA1234', 'Initiating password change request');\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/users/v1/change-password/`,\n      {\n        current_password: currentPassword,\n        new_password: newPassword,\n      }\n    );\n    \n    debugLog('MBA1234', 'Password change successful');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA1234', 'Error changing password:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Upload a profile picture for the user\n * @param {FormData} formData - FormData containing the profile_picture file\n * @returns {Promise<Object>} - Object containing the profile_photo URL\n */\nexport const uploadProfilePicture = async (formData) => {\n  try {\n    debugLog('MBA3oin4f084', 'Starting profile picture upload');\n    \n    if (!(formData instanceof FormData)) {\n      throw new Error('uploadProfilePicture requires FormData');\n    }\n    \n    // Check if formData contains a profile_picture entry\n    let hasFile = false;\n    for (let pair of formData.entries()) {\n      if (pair[0] === 'profile_picture') {\n        hasFile = true;\n        debugLog('MBA3oin4f084', `FormData contains profile_picture: ${typeof pair[1]}`);\n        break;\n      }\n    }\n    \n    if (!hasFile) {\n      throw new Error('FormData does not contain profile_picture');\n    }\n    \n    // Ensure we're not setting Content-Type ourselves - let axios set it with boundary\n    const response = await axios({\n      method: 'post',\n      url: `${API_BASE_URL}/api/users/v1/upload-profile-picture/`,\n      data: formData,\n      headers: {\n        'Accept': 'application/json',\n        // Let axios set the content-type with boundary\n      },\n      // Increase timeout for larger files\n      timeout: 30000\n    });\n    \n    debugLog('MBA3oin4f084', 'Profile picture upload successful with response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA3oin4f084', 'Error uploading profile picture:', error);\n    if (error.response) {\n      debugLog('MBA3oin4f084', 'Server error response:', error.response);\n    }\n    throw error;\n  }\n};\n\n/**\n * Add a new pet to the user's account\n * This function sends pet data to the backend to create a new pet record\n * @param {Object} petData - Object containing the pet details\n * @returns {Promise<Object>} - Created pet data from the backend\n */\nexport const addPet = async (petData) => {\n  try {\n    debugLog('MBA789', 'Adding new pet with data:', petData);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/pets/v1/add-pet/`,\n      petData\n    );\n    \n    debugLog('MBA789', 'Pet added successfully:', response.data);\n    \n    // Return the data in a standardized format\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error adding pet:', error);\n    throw error;\n  }\n};\n\n/**\n * Update an existing pet\n * This function sends updated pet data to the backend to update an existing pet record\n * @param {string|number} petId - The ID of the pet to update\n * @param {Object} petData - Object containing the updated pet details\n * @returns {Promise<Object>} - Updated pet data from the backend\n */\nexport const updatePet = async (petId, petData) => {\n  try {\n    debugLog('MBA789', 'Updating pet with ID:', petId, 'and data:', petData);\n\n    const response = await axios.patch(\n      `${API_BASE_URL}/api/pets/v1/${petId}/`,\n      petData\n    );\n    \n    debugLog('MBA789', 'Pet updated successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error updating pet:', error);\n    throw error;\n  }\n};\n\n/**\n * Fix the owner of a pet by assigning the current user\n * This is used to repair pets that have a null owner field\n * @param {string|number} petId - The ID of the pet to fix\n * @returns {Promise<Object>} - Updated pet data from the backend\n */\nexport const fixPetOwner = async (petId) => {\n  try {\n    debugLog('MBA789', 'Fixing owner for pet with ID:', petId);\n\n    const response = await axios.post(\n      `${API_BASE_URL}/api/pets/v1/${petId}/fix-owner/`,\n      {}\n    );\n    \n    debugLog('MBA789', 'Pet owner fixed successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error fixing pet owner:', error);\n    throw error;\n  }\n};\n\n/**\n * Delete a pet from the user's account\n * This function sends a DELETE request to remove a pet record\n * @param {string|number} petId - The ID of the pet to delete\n * @returns {Promise<Object>} - Success response from the backend\n */\nexport const deletePet = async (petId) => {\n  try {\n    debugLog('MBA789', 'Deleting pet with ID:', petId);\n\n    const response = await axios.delete(\n      `${API_BASE_URL}/api/pets/v1/${petId}/`\n    );\n    \n    debugLog('MBA789', 'Pet deleted successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA789', 'Error deleting pet:', error);\n    throw error;\n  }\n};\n\n/**\n * Creates a new professional service\n * @param {Object} serviceData - Data for the new service\n * @returns {Promise<Object>} - The created service data\n */\nexport const createService = async (serviceData) => {\n  try {\n    // Log the data we're sending to the server\n    debugLog('MBA54321', 'Creating new service - sending data to backend:', serviceData);\n\n    // Format animal_types as a dictionary mapping animal types to their categories\n    let formattedAnimalTypes = {};\n    \n    if (serviceData.animal_types && Array.isArray(serviceData.animal_types)) {\n      // Convert array format to dictionary\n      serviceData.animal_types.forEach(animal => {\n        if (typeof animal === 'object' && animal.name && animal.category) {\n          formattedAnimalTypes[animal.name] = animal.category;\n        } else if (typeof animal === 'string') {\n          formattedAnimalTypes[animal] = 'Other';\n        }\n      });\n    } else if (serviceData.animal_types && typeof serviceData.animal_types === 'object') {\n      // If it's already a dictionary, use it directly\n      formattedAnimalTypes = serviceData.animal_types;\n    } else if (serviceData.animal_type) {\n      // Fallback to legacy single animal_type\n      formattedAnimalTypes[serviceData.animal_type] = 'Other';\n    } else {\n      // Default\n      formattedAnimalTypes['Other'] = 'Other';\n    }\n    \n    // Format additional rates to ensure rate values are strings\n    const formattedAdditionalRates = (serviceData.additional_rates || []).map(rate => ({\n      ...rate,\n      rate: String(rate.rate)\n    }));\n    \n    // Make sure all numeric values are properly formatted as strings to avoid type issues\n    const formattedData = {\n      ...serviceData,\n      base_rate: String(serviceData.base_rate),\n      additional_animal_rate: String(serviceData.additional_animal_rate || 0),\n      holiday_rate: String(serviceData.holiday_rate || 0),\n      animal_types: formattedAnimalTypes,\n      additional_rates: formattedAdditionalRates\n    };\n    \n    // Log we're sending the additional rates too\n    debugLog('MBA54321', 'Sending additional rates to backend:', formattedData.additional_rates);\n\n    const response = await axios.post(`${API_BASE_URL}/api/services/v1/create/`, formattedData);\n\n    debugLog('MBA54321', 'Service created successfully - backend response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA54321', 'Error creating service:', error);\n    debugLog('MBA54321', 'Error response data:', error.response?.data);\n    \n    // Rethrow the original error - axios interceptor will handle auth errors\n    throw error;\n  }\n};\n\n/**\n * Delete a service by ID\n * @param {number} serviceId - ID of the service to delete\n * @returns {Promise<Object>} Response data with success message or error details\n */\nexport const deleteService = async (serviceId) => {\n  try {\n    debugLog('MBA7890: Deleting service with ID:', serviceId);\n\n    const response = await axios.delete(`${API_BASE_URL}/api/services/v1/delete/${serviceId}/`);\n\n    debugLog('MBA7890: Service deleted successfully - backend response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA7890: Error deleting service:', error);\n    debugLog('MBA7890: Error response data:', error.response?.data);\n    throw error;\n  }\n};\n\n// Function to update an existing service\nexport const updateService = async (serviceData) => {\n  try {\n    debugLog('API updateService', 'Updating service with data:', serviceData);\n    \n    const response = await axios.patch(`${API_BASE_URL}/api/services/v1/update/${serviceData.service_id}/`, serviceData);\n    \n    debugLog('API updateService Response:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('API updateService Error:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Get professional's client connections, returning necessary client data\n * @param {number} page - Page number for pagination\n * @returns {Promise<Object>} Object containing connections and pagination info\n */\nexport const getUserConnections = async (page = 1) => {\n  try {\n    debugLog('MBA4321 Fetching client connections, page:', page);\n    \n    const response = await axios.get(`${API_BASE_URL}/api/bookings/v1/connections/`, {\n      params: {\n        page\n      }\n    });\n    \n    debugLog('MBA4321 Connections response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error fetching connections:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get profile details for a specific connection\n * @param {string} userId - The ID of the user to get profile details for\n * @param {string} type - The type of connection ('client' or 'professional')\n * @returns {Promise<Object>} Object containing detailed profile info\n */\nexport const getConnectionProfile = async (userId, type = 'client') => {\n  try {\n    debugLog('MBA4321 Fetching connection profile:', { userId, type });\n    \n    const response = await axios.get(`${API_BASE_URL}/api/connections/v1/profile/${userId}/`, {\n      params: { type }\n    });\n    \n    debugLog('MBA4321 Connection profile response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error fetching connection profile:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Invite a client to connect with a professional via email or link\n * \n * @param {string} type - Type of invitation: 'email' or 'link'\n * @param {string} email - The email address of the client to invite (required if type is 'email')\n * @returns {Promise<Object>} Object containing result of invitation, including invitation_link for link invitations\n */\nexport const inviteClient = async (type = 'email', email = null) => {\n  try {\n    debugLog('MBA4321 Inviting client:', { type, email });\n    \n    const response = await axios.post(`${API_BASE_URL}/api/users/v1/invitations/`, {\n      type,\n      email,\n      is_professional_invite: true\n    });\n    \n    debugLog('MBA4321 Invite client response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error inviting client:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Send a referral to invite someone to join CrittrCove\n * \n * @param {string} type - Type of invitation: 'email' or 'link'\n * @param {string} email - The email address to refer (required if type is 'email')\n * @param {string} referralType - The type of referral: 'client_to_client', 'client_to_professional', or 'professional_to_professional'\n * @returns {Promise<Object>} Object containing result of referral, including invitation_link for link referrals\n */\nexport const sendReferral = async (type = 'email', email = null, referralType) => {\n  try {\n    debugLog('MBA4321 Sending referral:', { type, email, referralType });\n    \n    const response = await axios.post(`${API_BASE_URL}/api/users/v1/invitations/`, {\n      type,\n      email,\n      is_professional_invite: false,\n      referral_type: referralType\n    });\n    \n    debugLog('MBA4321 Send referral response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error sending referral:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get a list of all invitations created by the current user\n * \n * @param {string} type - Type of invitations to fetch: 'all', 'professional', or 'referral'\n * @returns {Promise<Array>} Array of invitation objects\n */\nexport const getInvitations = async (type = 'all') => {\n  try {\n    debugLog('MBA4321 Getting invitations:', { type });\n    \n    const response = await axios.get(`${API_BASE_URL}/api/users/v1/invitations/?type=${type}`);\n    \n    debugLog('MBA4321 Get invitations response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error getting invitations:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get details of a specific invitation\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Invitation details\n */\nexport const getInvitationDetails = async (token) => {\n  try {\n    debugLog('MBA4321 Getting invitation details:', { token });\n    \n    const response = await axios.get(`${API_BASE_URL}/api/users/v1/invitations/${token}/`);\n    \n    debugLog('MBA4321 Get invitation details response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error getting invitation details:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Verify if an invitation is valid\n * This endpoint doesn't require authentication\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Object with valid flag and invitation details\n */\nexport const verifyInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Verifying invitation:', { token });\n    debugLog('MBA4321 Verification endpoint:', `${API_BASE_URL}/api/users/v1/invitations/${token}/verify/`);\n    \n    // Don't use the authenticated API client since this doesn't require auth\n    const response = await axios.get(`${API_BASE_URL}/api/users/v1/invitations/${token}/verify/`);\n    \n    debugLog('MBA4321 Verify invitation response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error verifying invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Accept an invitation and create a connection between client and professional\n * Requires authentication - the user must be logged in\n * \n * Note: If the user registered with an invitation token, the backend\n * automatically accepts the invitation during registration.\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Result of accepting the invitation\n */\nexport const acceptInvitation = async (token) => {\n  try {\n    debugLog('MBAnb23ou4bf954 Accepting invitation with token:', token);\n    \n    // Backend requires authentication - make a simple authenticated request\n    const response = await axios.post(\n      `${API_BASE_URL}/api/users/v1/invitations/${token}/accept/`,\n      {}, // Empty body - backend just needs the auth token\n      {\n        headers: {\n          'Content-Type': 'application/json'\n          // Auth header will be added automatically by the interceptor\n        }\n      }\n    );\n    \n    debugLog('MBAnb23ou4bf954 Invitation accepted successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBAnb23ou4bf954 Error accepting invitation:', error.message);\n    \n    // Log detailed error information\n    if (error.response) {\n      debugLog('MBAnb23ou4bf954 Error status:', error.response.status);\n      debugLog('MBAnb23ou4bf954 Error data:', error.response.data);\n      \n      // Special case: \"already used\" isn't really an error for our purposes\n      // Since invitations are accepted automatically during registration\n      if (error.response.status === 400 && error.response.data?.error === 'Invitation has already been used') {\n        debugLog('MBAnb23ou4bf954 Invitation was already accepted (likely during registration), treating as success');\n        return { \n          success: true, \n          already_accepted: true,\n          message: 'Invitation was already accepted'\n        };\n      }\n    }\n    \n    // Add context about requirements to the error\n    if (error.response?.status === 401) {\n      error.message = 'You must be logged in to accept this invitation';\n    } else if (error.response?.data?.error) {\n      error.message = error.response.data.error;\n    }\n    \n    throw error;\n  }\n};\n\n/**\n * Delete/cancel an invitation\n * \n * @param {string} token - The invitation token\n * @returns {Promise<void>}\n */\nexport const deleteInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Deleting invitation:', { token });\n    \n    await axios.delete(`${API_BASE_URL}/api/users/v1/invitations/${token}/`);\n    \n    debugLog('MBA4321 Delete invitation success');\n    \n    return true;\n  } catch (error) {\n    debugLog('MBA4321 Error deleting invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Resend an invitation email\n * \n * @param {string} token - The invitation token\n * @returns {Promise<Object>} Result of resending the invitation\n */\nexport const resendInvitation = async (token) => {\n  try {\n    debugLog('MBA4321 Resending invitation:', { token });\n    \n    const response = await axios.post(`${API_BASE_URL}/api/users/v1/invitations/${token}/resend/`);\n    \n    debugLog('MBA4321 Resend invitation response:', response.data);\n    \n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321 Error resending invitation:', error);\n    debugLog('MBA4321 Error details:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Update booking draft rates and recalculate cost summary\n * @param {string} draftId - The ID of the booking draft to update\n * @param {Array} occurrences - Array of occurrence objects with updated rates\n * @returns {Promise<Object>} Updated draft data\n */\nexport const updateBookingDraftRates = async (draftId, occurrences) => {\n    try {\n        debugLog('MBA98765 - Updating booking draft rates:', {\n            draftId,\n            occurrences\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/booking_drafts/v1/update-rates/${draftId}/`,\n            {\n                occurrences\n            }\n        );\n\n        debugLog('MBA98765 - Booking draft rates update response:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA98765 Error updating booking draft rates:', error);\n        throw error;\n    }\n};\n\n/**\n * Create a booking from a draft\n * Called when the professional confirms a booking from the booking step modal\n * @param {string} conversationId - The ID of the conversation containing the draft\n * @returns {Promise<Object>} Response containing the new booking information and message\n */\nexport const createBookingFromDraft = async (conversationId, termsOfServiceAgreedByPro = false) => {\n    try {\n        debugLog('MBA66777 - Creating booking from draft:', {\n            conversationId\n        });\n\n        const response = await axios.post(\n            `${API_BASE_URL}/api/bookings/v1/create-from-draft/`,\n            {\n                conversation_id: conversationId, \n                terms_of_service_agreed_by_pro: termsOfServiceAgreedByPro\n            }\n        );\n\n        debugLog('MBA66777 - Booking created from draft:', response.data);\n        return response.data;\n    } catch (error) {\n        debugLog('MBA66777 Error creating booking from draft:', error);\n        throw error;\n    }\n};\n\n/**\n * Gets the dates and times for a booking draft\n * @param {string} draftId - The ID of the draft\n * @returns {Promise<Object>} - Draft dates and times data\n */\nexport const getBookingDraftDatesAndTimes = async (draftId) => {\n  try {\n    debugLog('MBA9876: Fetching booking draft dates and times:', draftId);\n    \n    const response = await axios.get(\n      `${API_BASE_URL}/api/booking_drafts/v1/${draftId}/dates_and_times/`\n    );\n    \n    debugLog('MBA9876: Draft dates and times fetched successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA9876: Error fetching booking draft dates and times:', error);\n    throw error;\n  }\n};\n\n/**\n * Creates a draft from an existing booking for editing purposes\n * @param {number} bookingId - The ID of the booking to create a draft from\n * @returns {Promise<Object>} Response containing the draft ID and draft data\n */\nexport const createDraftFromBooking = async (bookingId) => {\n  try {\n    debugLog('MBA6428: Creating draft from booking:', { bookingId });\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/booking_drafts/v1/create-from-booking/${bookingId}/`,\n      {}  // No body needed for this request\n    );\n    \n    debugLog('MBA6428: Draft created successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA6428: Error creating draft from booking:', error);\n    // Return a structured error object instead of throwing\n    if (error.response?.data) {\n      return {\n        error: true,\n        status: error.response.status,\n        message: error.response.data.error || 'Failed to create draft from booking',\n        data: error.response.data\n      };\n    }\n    // Still throw for network errors or other unexpected issues\n    throw error;\n  }\n};\n\n/**\n * Search for professionals based on various criteria\n * @param {Object} searchParams - Search parameters\n * @param {Array} searchParams.animal_types - Array of animal types (e.g., ['dogs', 'cats'])\n * @param {string} searchParams.location - Location string (city, zip, etc.)\n * @param {string} searchParams.service_query - Service search query\n * @param {boolean} searchParams.overnight_service - Whether overnight service is required\n * @param {number} searchParams.price_min - Minimum price\n * @param {number} searchParams.price_max - Maximum price\n * @param {number} searchParams.radius_miles - Search radius in miles (default 30)\n * @param {number} searchParams.page - Page number for pagination (default 1)\n * @param {number} searchParams.page_size - Number of results per page (default 20)\n * @returns {Promise<Object>} - Search results with professionals array and pagination info\n */\nexport const searchProfessionals = async (searchParams = {}) => {\n  try {\n    debugLog('MBA9999', 'Searching professionals with params:', searchParams);\n    \n    const response = await axios.post(`${API_BASE_URL}/api/professionals/v1/search/`, searchParams);\n    \n    debugLog('MBA9999', 'Professional search completed successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA9999', 'Error searching professionals:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get detailed services for a specific professional (for client view)\n * @param {number} professionalId - The ID of the professional\n * @returns {Promise<Array>} - Array of detailed service objects with rates and descriptions\n */\nexport const getProfessionalServicesDetailed = async (professionalId) => {\n  try {\n    debugLog('MBA9999', 'Getting detailed services for professional:', professionalId);\n    \n    const response = await axios.get(`${API_BASE_URL}/api/professionals/v1/services/${professionalId}/`);\n    \n    debugLog('MBA9999', 'Professional services fetched successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA9999', 'Error fetching professional services:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Create a conversation between the current user (client) and a professional\n * @param {number} professionalId - The ID of the professional to contact\n * @returns {Promise<Object>} - Object containing conversation_id, is_professional, and other_user_name\n */\nexport const createConversation = async (professionalId) => {\n  try {\n    debugLog('MBA3456', 'Creating conversation with professional:', professionalId);\n    \n    const response = await axios.post(`${API_BASE_URL}/api/conversations/v1/create/`, {\n      professional_id: professionalId\n    });\n    \n    debugLog('MBA3456', 'Conversation created successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA3456', 'Error creating conversation:', error.response?.data || error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get count of unread messages for the current user\n * @returns {Promise<Object>} - Object containing unread message count\n */\nexport const getUnreadMessageCount = async () => {\n  try {\n    debugLog(\"MBA4321: Fetching unread message count\");\n    \n    const response = await axios.get(`${API_BASE_URL}/api/messages/v1/unread-count/`);\n    \n    debugLog(\"MBA4321: Unread count fetched:\", response.data);\n    return response.data;\n  } catch (error) {\n    debugLog(\"MBA4321: Error with unread message count:\", error.message);\n    \n    throw error;\n  }\n};\n\n/**\n * Get all conversations for the current user with online status data\n * @returns {Promise<Array>} - Array of conversation objects with participant online status\n */\nexport const getConversations = async () => {\n  try {\n    debugLog('MBA3210: Fetching conversations with online status data');\n    \n    const response = await axios.get(`${API_BASE_URL}/api/conversations/v1/`);\n    \n    debugLog(`MBA3210: Fetched ${response.data?.length || 0} conversations with online status data`);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA3210: Error fetching conversations:', error);\n    throw error;\n  }\n};\n\n/**\n * Get messages for a conversation with pagination\n * @param {string|number} conversationId - The ID of the conversation\n * @param {number} page - Page number for pagination (default 1)\n * @returns {Promise<Object>} - Object containing messages array, pagination info, and draft data\n */\nexport const getConversationMessages = async (conversationId, page = 1) => {\n  if (!conversationId || conversationId === 'undefined' || conversationId === 'null') {\n    debugLog('MBA4321: No conversation ID provided');\n    throw new Error('No conversation ID provided');\n  }\n  try {\n    debugLog('MBA4321: Fetching messages for conversation:', conversationId, 'page:', page);\n    \n    const response = await axios.get(`${API_BASE_URL}/api/messages/v1/conversation/${conversationId}/`, {\n      params: { page }\n    });\n    \n    debugLog('MBA4321: Messages fetched successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA4321: Error fetching messages:', error);\n    throw error;\n  }\n};\n\n/**\n * Get dashboard data for professionals\n * @returns {Promise<Object>} - Dashboard data including bookings and onboarding progress\n */\nexport const getProfessionalDashboard = async () => {\n  try {\n    debugLog('MBA5677: Fetching professional dashboard data');\n    \n    const response = await axios.get(`${API_BASE_URL}/api/professionals/v1/dashboard/`);\n    \n    debugLog('MBA5677: Professional dashboard data fetched successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA5677: Error fetching professional dashboard data:', error);\n    throw error;\n  }\n};\n\n/**\n * Get dashboard data for clients/owners\n * @returns {Promise<Object>} - Dashboard data including bookings and onboarding progress\n */\nexport const getClientDashboard = async () => {\n  try {\n    debugLog('MBA5677: Fetching client dashboard data');\n    \n    const response = await axios.get(`${API_BASE_URL}/api/clients/v1/dashboard/`);\n    \n    debugLog('MBA5677: Client dashboard data fetched successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA5677: Error fetching client dashboard data:', error);\n    throw error;\n  }\n};\n\n/**\n * Get client pets\n * \n * Retrieves all pets for a specific client based on conversation ID\n * The backend will determine the client ID from the conversation and user roles\n * \n * @param {string|number} conversationId - The ID of the conversation \n * @returns {Promise<Array>} - Array of pet objects for the client\n */\nexport const getClientPets = async (conversationId) => {\n  try {\n    debugLog('MBA3456', 'Fetching client pets for conversation:', conversationId);\n    \n    // Make sure conversationId is provided\n    if (!conversationId) {\n      debugLog('MBA3456', 'Error: No conversation_id provided to getClientPets');\n      throw new Error('No conversation_id provided');\n    }\n    \n    const response = await axios.get(`${API_BASE_URL}/api/clients/v1/get-pets/`, {\n      params: {\n        conversation_id: conversationId\n      }\n    });\n    \n    debugLog('MBA3456', 'Client pets fetched successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA3456', 'Error fetching client pets:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Upload an image to be attached to a message\n * @param {string|number} conversationId - The conversation ID\n * @param {File|Blob|string} imageData - The image file, blob, or base64 string\n * @returns {Promise<Object>} - Object containing image_url and message_id\n */\nexport const uploadMessageImage = async (conversationId, imageData) => {\n  try {\n    debugLog('MBA5678: Uploading message image for conversation:', conversationId);\n    \n    const formData = new FormData();\n    formData.append('conversation_id', conversationId);\n    \n    // Handle different types of image data\n    if (typeof imageData === 'string') {\n      // If it's a base64 string, convert to file object\n      debugLog('MBA5678: Image data is a string, sending as base64');\n      \n      // Use JSON format instead of FormData for base64\n      const response = await axios.post(\n        `${API_BASE_URL}/api/messages/v1/upload_image/`,\n        {\n          conversation_id: conversationId,\n          image_data: imageData\n        }\n      );\n      \n      debugLog('MBA5678: Image uploaded successfully:', response.data);\n      return response.data;\n    } else {\n      // If it's a File or Blob object\n      debugLog('MBA5678: Image data is a File/Blob, sending as multipart/form-data');\n      formData.append('image_file', imageData);\n      \n      const response = await axios.post(\n        `${API_BASE_URL}/api/messages/v1/upload_image/`,\n        formData,\n        {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }\n      );\n      \n      debugLog('MBA5678: Image uploaded successfully:', response.data);\n      return response.data;\n    }\n  } catch (error) {\n    debugLog('MBA5678: Error uploading message image:', error);\n    throw error;\n  }\n};\n\n/**\n * Compress an image to reduce its size before upload\n * @param {string} imageUri - The URI of the image to compress\n * @param {number} maxWidth - Maximum width of the compressed image (default: 1024)\n * @param {number} quality - Quality of the compressed image (0-1, default: 0.7)\n * @returns {Promise<string>} - Base64 string of the compressed image\n */\nexport const compressImage = async (imageUri, maxWidth = 1024, quality = 0.7) => {\n  try {\n    debugLog('MBA5511: Attempting to compress image:', {\n      uriType: typeof imageUri,\n      isBase64: typeof imageUri === 'string' && imageUri.startsWith('data:image'),\n      platform: Platform.OS\n    });\n    \n    // If we already have a base64 string, process it directly\n    if (typeof imageUri === 'string' && imageUri.startsWith('data:image')) {\n      // For base64 data URLs, use web-based compression if on web platform\n      if (Platform.OS === 'web') {\n        return compressWebBase64Image(imageUri, maxWidth, quality);\n      }\n      // On native, just return as is since we don't have image manipulation\n      return imageUri;\n    }\n    \n    // For mobile image URIs, we currently don't have a direct way to compress\n    // without expo-image-manipulator, so we'll just return the original URI\n    if (Platform.OS !== 'web' && imageUri) {\n      // In a production app, you'd want to implement native compression here\n      // using available libraries\n      debugLog('MBA5511: Native image compression not implemented - using original image');\n      return imageUri;\n    }\n    \n    // For web environment\n    if (Platform.OS === 'web') {\n      return compressWebImage(imageUri, maxWidth, quality);\n    }\n    \n    // Return original if we can't compress\n    return imageUri;\n  } catch (error) {\n    debugLog('MBA5511: Error compressing image:', error);\n    // Return original image if compression fails\n    return imageUri;\n  }\n};\n\n/**\n * Helper function to compress a web image\n * @param {string} imageUri - Image URI or URL\n * @param {number} maxWidth - Maximum width\n * @param {number} quality - Compression quality (0-1)\n * @returns {Promise<string>} - Compressed image as data URL\n */\nconst compressWebImage = (imageUri, maxWidth, quality) => {\n  return new Promise((resolve, reject) => {\n    // Only perform canvas operations on web platform\n    if (Platform.OS !== 'web') {\n      debugLog('MBA5511: Canvas compression not available on mobile platform, returning original image');\n      resolve(imageUri);\n      return;\n    }\n\n    // Check if required web APIs are available\n    if (typeof document === 'undefined' || typeof Image === 'undefined') {\n      debugLog('MBA5511: Web APIs not available, returning original image');\n      resolve(imageUri);\n      return;\n    }\n\n    const img = new Image();\n    img.crossOrigin = 'Anonymous'; // Help with CORS issues\n    img.src = imageUri;\n    \n    img.onload = () => {\n      try {\n        // Calculate new dimensions\n        let width = img.width;\n        let height = img.height;\n        \n        // For very large images, use more aggressive resizing\n        if (width > 3000 || height > 3000) {\n          // Extra compression for extremely large images\n          maxWidth = Math.min(maxWidth, 600);\n          quality = Math.min(quality, 0.4);\n          debugLog('MBA5511: Extra compression applied for very large image', {\n            originalWidth: width,\n            originalHeight: height,\n            newMaxWidth: maxWidth,\n            newQuality: quality\n          });\n        }\n        \n        if (width > maxWidth) {\n          const ratio = maxWidth / width;\n          width = maxWidth;\n          height = height * ratio;\n        }\n        \n        // Skip compression for small images\n        if (width < maxWidth && (width * height < 250000)) { // less than ~0.25MP\n          debugLog('MBA5511: Image already small enough, skipping compression');\n          resolve(imageUri);\n          return;\n        }\n        \n        // Create canvas with appropriate size\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        \n        // Draw image to canvas with resizing\n        const ctx = canvas.getContext('2d');\n        \n        // For better quality, use a 2-step process for large downsampling\n        if (img.width > width * 2) {\n          // Create an intermediate canvas at half size\n          const tempCanvas = document.createElement('canvas');\n          const tempCtx = tempCanvas.getContext('2d');\n          const tempWidth = Math.min(img.width, width * 2);\n          const tempHeight = (tempWidth / img.width) * img.height;\n          \n          tempCanvas.width = tempWidth;\n          tempCanvas.height = tempHeight;\n          \n          // First downsample\n          tempCtx.drawImage(img, 0, 0, tempWidth, tempHeight);\n          \n          // Then final resize\n          ctx.drawImage(tempCanvas, 0, 0, width, height);\n        } else {\n          // Direct resize for smaller downsampling\n          ctx.drawImage(img, 0, 0, width, height);\n        }\n        \n        // Convert to base64 with the specified quality\n        const compressedDataUrl = canvas.toDataURL('image/jpeg', quality);\n        \n        debugLog('MBA5511: Image compressed successfully', {\n          originalDimensions: `${img.width}x${img.height}`,\n          newDimensions: `${width}x${height}`,\n          quality: quality,\n          sizeReduction: imageUri.length > 0 ? \n            ((1 - (compressedDataUrl.length / imageUri.length)) * 100).toFixed(2) + '%' : \n            'unknown'\n        });\n        \n        resolve(compressedDataUrl);\n      } catch (err) {\n        debugLog('MBA5511: Error in canvas compression:', err);\n        resolve(imageUri); // Fall back to original\n      }\n    };\n    \n    img.onerror = (error) => {\n      debugLog('MBA5511: Image loading error:', error);\n      resolve(imageUri); // Fall back to original\n    };\n  });\n};\n\n/**\n * Helper function to compress a base64 image on web\n * @param {string} base64Data - Base64 image data URL\n * @param {number} maxWidth - Maximum width\n * @param {number} quality - Compression quality (0-1)\n * @returns {Promise<string>} - Compressed image as data URL\n */\nconst compressWebBase64Image = (base64Data, maxWidth, quality) => {\n  return new Promise((resolve, reject) => {\n    // Only perform canvas operations on web platform\n    if (Platform.OS !== 'web') {\n      debugLog('MBA5511: Canvas compression not available on mobile platform, returning original base64');\n      resolve(base64Data);\n      return;\n    }\n\n    // Check if required web APIs are available\n    if (typeof document === 'undefined' || typeof Image === 'undefined') {\n      debugLog('MBA5511: Web APIs not available, returning original base64');\n      resolve(base64Data);\n      return;\n    }\n\n    const img = new Image();\n    img.src = base64Data;\n    \n    img.onload = () => {\n      try {\n        // Calculate new dimensions\n        let width = img.width;\n        let height = img.height;\n        \n        // For very large images, use more aggressive resizing\n        if (width > 3000 || height > 3000) {\n          // Extra compression for extremely large images\n          maxWidth = Math.min(maxWidth, 600);\n          quality = Math.min(quality, 0.4);\n          debugLog('MBA5511: Extra compression applied for very large image', {\n            originalWidth: width,\n            originalHeight: height,\n            newMaxWidth: maxWidth,\n            newQuality: quality\n          });\n        }\n        \n        if (width > maxWidth) {\n          const ratio = maxWidth / width;\n          width = maxWidth;\n          height = height * ratio;\n        }\n        \n        // Skip compression for small images\n        if (width < maxWidth && (width * height < 250000)) { // less than ~0.25MP\n          debugLog('MBA5511: Base64 image already small enough, skipping compression');\n          resolve(base64Data);\n          return;\n        }\n        \n        // Create canvas with appropriate size\n        const canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        \n        // Draw image to canvas with resizing\n        const ctx = canvas.getContext('2d');\n        \n        // For better quality, use a 2-step process for large downsampling\n        if (img.width > width * 2) {\n          // Create an intermediate canvas at half size\n          const tempCanvas = document.createElement('canvas');\n          const tempCtx = tempCanvas.getContext('2d');\n          const tempWidth = Math.min(img.width, width * 2);\n          const tempHeight = (tempWidth / img.width) * img.height;\n          \n          tempCanvas.width = tempWidth;\n          tempCanvas.height = tempHeight;\n          \n          // First downsample\n          tempCtx.drawImage(img, 0, 0, tempWidth, tempHeight);\n          \n          // Then final resize\n          ctx.drawImage(tempCanvas, 0, 0, width, height);\n        } else {\n          // Direct resize for smaller downsampling\n          ctx.drawImage(img, 0, 0, width, height);\n        }\n        \n        // Convert to base64 with the specified quality\n        const compressedDataUrl = canvas.toDataURL('image/jpeg', quality);\n        \n        debugLog('MBA5511: Base64 image compressed successfully', {\n          originalDimensions: `${img.width}x${img.height}`,\n          newDimensions: `${width}x${height}`,\n          quality: quality,\n          sizeReduction: base64Data.length > 0 ? \n            ((1 - (compressedDataUrl.length / base64Data.length)) * 100).toFixed(2) + '%' : \n            'unknown'\n        });\n        \n        resolve(compressedDataUrl);\n      } catch (err) {\n        debugLog('MBA5511: Error in canvas compression:', err);\n        resolve(base64Data); // Fall back to original\n      }\n    };\n    \n    img.onerror = (error) => {\n      debugLog('MBA5511: Base64 image loading error:', error);\n      resolve(base64Data); // Fall back to original\n    };\n  });\n};\n\n/**\n * Upload and send images in a single message using a direct approach with FormData\n * @param {string|number} conversationId - The conversation ID\n * @param {Array<File|Blob|string>} images - Array of image files, blobs, or base64 strings\n * @param {string} caption - Optional caption to include with the images\n * @returns {Promise<Object>} - Object containing message data including image_urls\n */\nexport const uploadAndSendImageMessage = async (conversationId, images, caption = '') => {\n  try {\n    debugLog('MBA5511: Uploading and sending image message directly:', {\n      conversationId,\n      imageCount: images.length,\n      hasCaption: !!caption?.trim().length\n    });\n    \n    if (!images || images.length === 0) {\n      throw new Error('No images provided for upload');\n    }\n    \n    // Determine total image size to set compression level\n    const totalEstimatedSize = images.reduce((sum, img) => {\n      if (img.base64) {\n        // base64 size is roughly 4/3 of the raw data\n        return sum + (img.base64.length * 0.75);\n      } else if (img.size) {\n        return sum + img.size;\n      }\n      // Assume 1MB if unknown\n      return sum + 1000000;\n    }, 0);\n    \n    // Set compression parameters based on total size\n    let maxWidth = 1024;  // Default for small images\n    let quality = 0.7;    // Default quality\n    \n    // Adjust based on total size\n    if (totalEstimatedSize > 4 * 1024 * 1024) {\n      // For large uploads (>4MB), use aggressive compression\n      maxWidth = 800;\n      quality = 0.5;\n    } else if (totalEstimatedSize > 2 * 1024 * 1024) {\n      // For medium uploads (>2MB), use moderate compression\n      maxWidth = 1024;\n      quality = 0.6;\n    }\n    \n    debugLog('MBA5511: Compression settings:', {\n      totalEstimatedSizeMB: (totalEstimatedSize / (1024 * 1024)).toFixed(2) + 'MB',\n      maxWidth,\n      quality\n    });\n    \n    // Prepare images array for sending, with compression\n    const processedImages = await Promise.all(images.map(async (image) => {\n      let imageSource;\n      \n      if (image.base64) {\n        imageSource = `data:image/jpeg;base64,${image.base64}`;\n      } else if (image.uri) {\n        imageSource = image.uri;\n      } else {\n        imageSource = image;\n      }\n      \n      // Compress the image before sending\n      return await compressImage(imageSource, maxWidth, quality);\n    }));\n    \n    debugLog('MBA5511: Images compressed and ready for upload', {\n      imageCount: processedImages.length\n    });\n    \n    // Send a single request with all compressed images\n    const response = await axios.post(\n      `${API_BASE_URL}/api/messages/v1/upload_and_send/`,\n      {\n        conversation_id: conversationId,\n        content: caption || '',\n        images: processedImages\n      }\n    );\n    \n    debugLog('MBA5511: Image message uploaded and sent successfully:', {\n      messageId: response.data.message_id,\n      imageCount: images.length,\n      hasCaption: !!caption\n    });\n    \n    // Create a message object that can be directly added to the UI\n    const messageObject = {\n      message_id: response.data.message_id,\n      content: caption || '',\n      sent_by_other_user: false,\n      timestamp: new Date().toISOString(),\n      type_of_message: 'image_message',\n      status: 'sent',\n      is_clickable: false,\n      image_urls: response.data.image_urls || [],\n      metadata: {\n        image_urls: response.data.image_urls || []\n      }\n    };\n    \n    return messageObject;\n  } catch (error) {\n    debugLog('MBA5511: Error uploading and sending image message:', error);\n    throw error;\n  }\n};\n\n/**\n * Upload multiple images in a single message (previous implementation)\n * @param {string|number} conversationId - The conversation ID\n * @param {Array<File|Blob|string>} images - Array of image files, blobs, or base64 strings\n * @param {string} caption - Optional caption to include with the images\n * @returns {Promise<Object>} - Object containing image_urls and message_id\n * @deprecated Use uploadAndSendImageMessage instead\n */\nexport const sendImageMessage = async (conversationId, images, caption = '') => {\n  // Just call the new function\n  return uploadAndSendImageMessage(conversationId, images, caption);\n};\n\n/**\n * Mark a booking as completed\n * @param {string|number} bookingId - ID of the booking to mark as completed\n * @returns {Promise<Object>} - Response from the API\n */\nexport const markBookingCompleted = async (bookingId) => {\n  try {\n    debugLog('MBA8675309: Marking booking as completed:', bookingId);\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${bookingId}/mark_completed/`,\n      {} // Empty body since we don't need to send any data\n    );\n    \n    debugLog('MBA8675309: Booking marked as completed successfully');\n    return response.data;\n  } catch (error) {\n    debugLog('MBA8675309: Error marking booking as completed:', error);\n    debugLog('MBA8675309: Error details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Submit a review for a booking\n * @param {object} reviewData - The review data\n * @param {string|number} reviewData.bookingId - ID of the booking to review\n * @param {number} reviewData.rating - Star rating (1-5)\n * @param {string} reviewData.reviewText - Review text content\n * @param {boolean} reviewData.isProfessional - Whether the reviewer is a professional\n * @returns {Promise<Object>} - Response from the API\n */\nexport const submitBookingReview = async (reviewData) => {\n  try {\n    debugLog('MBA8675309: Submitting booking review:', reviewData);\n    \n    const response = await axios.post(\n      `${API_BASE_URL}/api/bookings/v1/${reviewData.bookingId}/review/`,\n      {\n        rating: reviewData.rating,\n        review_text: reviewData.reviewText,\n        is_professional_review: reviewData.isProfessional\n      }\n    );\n    \n    debugLog('MBA8675309: Review submitted successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA8675309: Error submitting review:', error);\n    debugLog('MBA8675309: Error details:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n/**\n * Get reviews for a user based on conversation ID\n * \n * @param {string|number} conversationId - The ID of the conversation\n * @param {boolean} isProfessional - Whether the current user is a professional (true) or client (false)\n * @returns {Promise<Object>} - Object containing reviews, average rating, and review count\n */\nexport const getUserReviews = async (conversationId = null, professionalId = null, isProfessional = false) => {\n  try {\n    debugLog('MBA387c439h', 'Fetching user reviews for conversation:', conversationId, 'isProfessional:', isProfessional);\n    \n    // Make sure conversationId is provided\n    if (!conversationId) {\n      debugLog('MBA387c439h', 'No conversation_id provided to getUserReviews');\n      if (!professionalId) {\n        throw new Error('No conversation_id or professional_id provided');\n      }\n    }\n    \n    const response = await axios.get(`${API_BASE_URL}/api/reviews/v1/get-user-reviews/`, {\n      params: {\n        conversation_id: conversationId,\n        professional_id: professionalId,\n        is_professional: isProfessional ? 1 : 0\n      }\n    });\n    \n    debugLog('MBA387c439h', 'User reviews fetched successfully:', response.data);\n    return response.data;\n  } catch (error) {\n    debugLog('MBA387c439h', 'Error fetching user reviews:', error.response?.data || error.message);\n    throw error;\n  }\n};\n\n","import React, { useState, useContext, useEffect, useRef } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Dimensions, Platform, SafeAreaView, Image } from 'react-native';\nimport { MaterialCommunityIcons, MaterialIcons } from '@expo/vector-icons';\nimport { theme } from '../styles/theme';\nimport { AuthContext, debugLog, getStorage, setStorage } from '../context/AuthContext';\nimport MessageNotificationContext from '../context/MessageNotificationContext';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Appbar, Menu, useTheme, Avatar } from 'react-native-paper';\nimport { useNavigation as useReactNavigation, useRoute } from '@react-navigation/native';\nimport { BackHandler } from 'react-native';\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming, interpolate } from 'react-native-reanimated';\nimport platformNavigation from '../utils/platformNavigation';\n\n/*\n * IMPORTANT ARCHITECTURE NOTE:\n * \n * This Navigation component uses a specific architecture to prevent React hooks errors:\n * \n * 1. The main Navigation component is a thin wrapper that:\n *    - Handles the conditional visibility logic (shouldHideNavigation)\n *    - Renders the NavigationContent with a shouldRender prop\n * \n * 2. The NavigationContent component contains all the hooks and UI rendering:\n *    - ALL hooks are called unconditionally at the top of the component\n *    - We check shouldRender AFTER all hooks have been called\n *    - This ensures React's rules of hooks are followed (same hooks in same order every render)\n * \n * If you modify this file, ensure that:\n * - You don't add any conditional hooks (hooks inside if statements or early returns)\n * - All hooks are called at the top of the component, before any conditional returns\n * - You maintain the parent/child structure to prevent hooks errors\n */\n\nlet previousRoute, currentRoute;\n\nexport const handleBack = async (navigation) => {\n  try {\n    const previousRoute = await getStorage('previousRoute');\n    const currentRoute = await getStorage('currentRoute');\n    \n    // If we have a valid previous route, navigate to it\n    if (previousRoute && previousRoute !== currentRoute) {\n      debugLog('MBA6789: handleBack - navigating to previous route', { \n        from: currentRoute, \n        to: previousRoute \n      });\n      \n      // Use platform-aware navigation\n      const success = platformNavigation.goBack(navigation);\n      if (success) {\n        await setStorage('currentRoute', previousRoute);\n      }\n      \n      return success;\n    } else {\n      // If no previous route, go to Dashboard as fallback\n      if (currentRoute !== 'Dashboard') {\n        debugLog('MBA6789: handleBack - no previous route, going to Dashboard', { \n          from: currentRoute \n        });\n        platformNavigation.navigateTo(navigation, 'Dashboard');\n        await setStorage('currentRoute', 'Dashboard');\n        return true;\n      }\n    }\n    \n    return false;\n  } catch (error) {\n    debugLog('MBA6789: handleBack - error', error);\n    return false;\n  }\n};\n\nexport const navigateToFrom = async (navigation, toLocation, fromLocation, params = {}) => {\n  try {\n    // Store current route as previous before navigation\n    const currentRoute = await getStorage('currentRoute');\n    await setStorage('previousRoute', currentRoute);\n    \n    // Special handling for MyProfile screen\n    if (toLocation === 'MyProfile') {\n      const activeTab = await getStorage('MyProfileActiveTab');\n      if (activeTab) {\n        params.initialTab = activeTab;\n      }\n    }\n    \n    // Get current route information using platform navigation\n    const currentRouteInfo = platformNavigation.getCurrentRoute(navigation);\n    \n    // Only log if we're not already at the route to reduce spam\n    if (currentRouteInfo.name !== toLocation || currentRoute !== toLocation) {\n      debugLog('MBAuieo2o34nf navigateToFrom - current route check', {\n        currentRouteName: currentRouteInfo.name,\n        currentPath: currentRouteInfo.path,\n        navigatingTo: toLocation\n      });\n    }\n    \n    // If we're already on this route according to the current info but not our state, just update state\n    if (currentRouteInfo.name === toLocation && currentRoute !== toLocation) {\n      await setStorage('currentRoute', toLocation);\n      debugLog('MBAuieo2o34nf navigateToFrom - only updating state, already at route', {\n        toLocation,\n        currentRouteName: currentRouteInfo.name\n      });\n      return;\n    }\n    \n    // Navigate to the new screen using platform navigation\n    platformNavigation.navigateTo(navigation, toLocation, params);\n    \n    // Update current route in storage\n    await setStorage('currentRoute', toLocation);\n    \n    // Only log if we're actually changing routes\n    if (currentRoute !== toLocation) {\n      debugLog('MBAuieo2o34nf navigateToFrom - navigation complete', {\n        from: fromLocation,\n        to: toLocation,\n        params,\n        previousRoute: currentRoute,\n        newCurrentRoute: toLocation,\n        currentPath: currentRouteInfo.path\n      });\n    }\n  } catch (error) {\n    debugLog('MBAuieo2o34nf navigateToFrom - error', error);\n  }\n};\n\nconst useReactRoute = () => {\n  try {\n    // Try to get the current route, but return a safe fallback if it fails\n    const route = useRoute();\n    return route || { name: '', params: {}, key: '' };\n  } catch (e) {\n    // If we're in a context where useRoute doesn't work, return a safe object\n    return { name: '', params: {}, key: '' };\n  }\n};\n\n// Create a separate component for NavigationContent to prevent conditional hooks\nconst NavigationContent = ({ \n  propState, \n  descriptors, \n  propNavigation, \n  shouldRender = true\n}) => {\n  // All hooks are used here unconditionally\n  const reactNavigation = useReactNavigation();\n  const reactRoute = useReactRoute();\n  const navigation = propNavigation || reactNavigation;\n  const [visible, setVisible] = useState(false);\n  const [isMobile, setIsMobile] = useState(Dimensions.get('window').width < 900);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [currentRoute, setCurrentRoute] = useState('');\n  const [notificationCount, setNotificationCount] = useState(3);\n  const { colors } = useTheme();\n  const { \n    isSignedIn, \n    is_DEBUG, \n    userRole, \n    isCollapsed, \n    setIsCollapsed, \n    switchRole, \n    screenWidth, \n    signOut,\n    isApprovedProfessional\n  } = useContext(AuthContext);\n  \n  // Add render counter for debugging\n  const renderCountRef = useRef(0);\n  useEffect(() => {\n    renderCountRef.current += 1;\n  });\n  \n  // Get message notification state\n  const {\n    hasUnreadMessages,\n    unreadCount,\n    ownerUnreadCount,\n    professionalUnreadCount,\n    getCurrentRoleUnreadCount,\n    getOtherRoleUnreadCount,\n    hasCurrentRoleUnreadMessages,\n    resetNotifications,\n    updateRoute\n  } = useContext(MessageNotificationContext);\n  \n  // Add a notification state update effect when the notification context changes\n  useEffect(() => {\n    debugLog('MBA3uiobv59u: Navigation received notification update:', {\n      hasUnreadMessages,\n      unreadCount,\n      ownerUnreadCount,\n      professionalUnreadCount,\n      userRole,\n      currentRoute\n    });\n\n    // Force update display of notifications on role change or when notification state changes\n  }, [hasUnreadMessages, unreadCount, ownerUnreadCount, professionalUnreadCount, userRole]);\n  \n  // Animation values for hamburger menu\n  const line1Rotation = useSharedValue(0);\n  const line2Opacity = useSharedValue(1);\n  const line3Rotation = useSharedValue(0);\n  const line1TranslateY = useSharedValue(0);\n  const line3TranslateY = useSharedValue(0);\n  \n  // Create a synthetic state object\n  const routeFromProps = propState?.routes?.[propState?.index];\n  const routeFromHook = reactRoute;\n  \n  const routeName = routeFromProps?.name || routeFromHook?.name || '';\n  const selectedConversation = \n    routeFromProps?.params?.selectedConversation || \n    routeFromHook?.params?.selectedConversation;\n    \n  const effectiveState = propState || {\n    routes: routeFromHook ? [routeFromHook] : [],\n    index: routeFromHook ? 0 : -1\n  };\n  \n  const isInMessageHistory = routeName === 'MessageHistory';\n  \n  // Update animation when menu state changes\n  useEffect(() => {\n    animateHamburgerMenu(isMenuOpen);\n  }, [isMenuOpen]);\n  \n  // Only log on the first render or when these values change to reduce console spam\n  const renderLogRef = useRef({ routeName, isInMessageHistory, selectedConversation, screenWidth });\n  const shouldLog = \n    renderLogRef.current.routeName !== routeName || \n    renderLogRef.current.isInMessageHistory !== isInMessageHistory ||\n    renderLogRef.current.selectedConversation !== selectedConversation ||\n    renderLogRef.current.screenWidth !== screenWidth;\n    \n  if (shouldLog) {\n    renderLogRef.current = { routeName, isInMessageHistory, selectedConversation, screenWidth };\n    // Debug log all relevant conditions for visibility\n    debugLog('MBAo3hi4g4v: Navigation render conditions', { \n      routeName,\n      isInMessageHistory,\n      selectedConversation,\n      screenWidth,\n      platform: Platform.OS,\n      route: JSON.stringify(reactRoute?.params || propState?.routes?.[propState?.index]?.params),\n      stateSource: propState ? 'props' : 'hook',\n      navSource: propNavigation ? 'props' : 'hook'\n    });\n  }\n  \n  // Add effect to log state changes\n  useEffect(() => {\n    if (is_DEBUG) {\n      console.log('MBA98386196v Navigation State Update:', {\n        isSignedIn,\n        userRole,\n        isApprovedProfessional,\n        currentRoute\n      });\n    }\n  }, [isSignedIn, userRole, isApprovedProfessional, currentRoute, is_DEBUG]);\n  \n  // Add logging for message notifications on state change\n  useEffect(() => {\n    // Only log if there are unread messages to reduce noise\n    if (hasUnreadMessages) {\n      debugLog('MBA2o3uihf48hv: Navigation notification state changed', {\n        hasUnreadMessages,\n        unreadCount,\n        currentRoute,\n        isInMessageHistory: currentRoute === 'MessageHistory',\n        selectedConversationId: typeof window !== 'undefined' ? window.selectedConversationId : null\n      });\n    }\n  }, [hasUnreadMessages, unreadCount, currentRoute]);\n  \n  useEffect(() => {\n    const updateLayout = () => {\n      setIsMobile(Dimensions.get('window').width < 900);\n    };\n\n    const subscription = Dimensions.addEventListener('change', updateLayout);\n\n    return () => {\n      subscription?.remove();\n    };\n  }, []);\n\n  // Helper function to check and reset conversation notifications if needed\n  const checkAndResetConversationNotifications = () => {\n    // Only run if we're on the MessageHistory screen\n    if (currentRoute === 'MessageHistory') {\n      // Check for selected conversation ID\n      const selectedConvId = (typeof window !== 'undefined') ? window.selectedConversationId : null;\n      \n      if (selectedConvId) {\n        debugLog('MBA2o3uihf48hv: Checking if notifications need reset for selected conversation', {\n          selectedConvId,\n          currentRoute,\n          hasUnreadMessages,\n          unreadCount\n        });\n        \n        // When running resetNotifications from navigation, we need to make sure\n        // we're not accumulating extra counts that don't exist in the real state\n        if (hasUnreadMessages || unreadCount > 0) {\n          // Reset notifications for this conversation - call even if hasUnreadMessages is false\n          // to ensure any conversation-specific notifications are cleared\n          resetNotifications && resetNotifications(currentRoute, selectedConvId);\n        }\n      }\n    }\n  };\n  \n  // Add effect to reset conversation notifications when selectedConversationId changes\n  useEffect(() => {\n    if (typeof window !== 'undefined' && window.selectedConversationId) {\n      checkAndResetConversationNotifications();\n    }\n  }, [currentRoute, hasUnreadMessages]); // Removed unreadCount from dependencies to avoid infinite loops\n\n  // Add a websocket-focused effect to ensure notifications are correctly synced\n  useEffect(() => {\n    // Log the current notification state when it changes\n    debugLog('MBA2o3uihf48hv: Navigation notification state update', {\n      unreadCount,\n      hasUnreadMessages,\n      currentRoute,\n      userRole,\n      onMessagesScreen: currentRoute === 'MessageHistory',\n      selectedConversationId: typeof window !== 'undefined' ? window.selectedConversationId : null\n    });\n    \n    // Make sure that hasUnreadMessages and unreadCount are consistent\n    // unreadCount should be > 0 when hasUnreadMessages is true, and vice versa\n    if ((hasUnreadMessages && unreadCount === 0) || (!hasUnreadMessages && unreadCount > 0)) {\n      debugLog('MBA2o3uihf48hv: ⚠️ Inconsistent notification state detected', {\n        hasUnreadMessages,\n        unreadCount,\n        userRole\n      });\n    }\n    \n    // Store unread count for current role in sessionStorage to help with role switching\n    if (typeof window !== 'undefined' && typeof window.sessionStorage !== 'undefined') {\n      try {\n        const roleKey = `unreadCount_${userRole}`;\n        window.sessionStorage.setItem(roleKey, unreadCount.toString());\n        debugLog('MBA2o3uihf48hv: Stored unread count for role', {\n          role: userRole,\n          count: unreadCount\n        });\n      } catch (error) {\n        // Ignore storage errors\n      }\n    }\n    \n    // Only run the sync check if we're on the MessageHistory page \n    // and we have a selected conversation\n    if (currentRoute === 'MessageHistory' && \n        typeof window !== 'undefined' && \n        window.selectedConversationId) {\n      \n      // If we have a selected conversation but still show unread messages,\n      // we might need to mark that conversation as read\n      if (unreadCount > 0) {\n        // We should check if the unread messages are for the current conversation\n        checkAndResetConversationNotifications();\n      }\n    }\n  }, [unreadCount, hasUnreadMessages, currentRoute, userRole]);\n\n  useEffect(() => {\n    const updateCurrentRoute = async () => {\n      try {\n        // Get current route using platform navigation\n        const currentRouteInfo = platformNavigation.getCurrentRoute(navigation, reactRoute);\n        const urlRoute = currentRouteInfo.name;\n        \n        // Only log if the route is different from current route to reduce spam\n        if (urlRoute !== currentRoute) {\n          debugLog('MBA2o3uihf48hv: Route check', { \n            urlRoute, \n            currentRoute,\n            path: currentRouteInfo.path\n          });\n        }\n        \n        // If route info is different from current route, update it\n        if (urlRoute && urlRoute !== currentRoute) {\n          setCurrentRoute(urlRoute);\n          await setStorage('currentRoute', urlRoute);\n          \n          // Update message notification context with new route\n          updateRoute && updateRoute(urlRoute);\n          \n          // Only reset notifications when navigating to MessageHistory\n          if (urlRoute === 'MessageHistory' && hasUnreadMessages) {\n            // Check for a specific selected conversation ID from global variable (web only)\n            const selectedConvId = platformNavigation.isWeb() && typeof window !== 'undefined' \n              ? window.selectedConversationId \n              : null;\n            debugLog('MBA2o3uihf48hv: Navigation checking for selected conversation ID', { \n              selectedConvId, \n              hasUnreadMessages, \n              route: urlRoute \n            });\n            \n            // Pass the selected conversation ID if available\n            resetNotifications && resetNotifications(urlRoute, selectedConvId);\n          }\n          \n          debugLog('MBA2o3uihf48hv: Updated current route', { \n            urlRoute, \n            oldRoute: currentRoute,\n            hasUnreadMessages,\n            unreadCount\n          });\n          \n          return; // Skip checking localStorage if we've already updated from route info\n        }\n        \n        // Fall back to localStorage if route info didn't provide a different route\n        const route = await getStorage('currentRoute');\n        \n        // Only log in debug mode, not every time\n        if (is_DEBUG && route !== currentRoute) {\n          console.log('MBA98386196v Current Route Updated:', route);\n        }\n        \n        // Only update if the route has actually changed\n        if (route && route !== currentRoute) {\n          setCurrentRoute(route);\n          \n          // Update message notification context with new route\n          // Avoiding infinite loops by checking if the route changed\n          updateRoute && updateRoute(route);\n          \n          // Only reset notifications when navigating to MessageHistory\n          if (route === 'MessageHistory' && hasUnreadMessages) {\n            // Check for a specific selected conversation ID from global variable (web only)\n            const selectedConvId = platformNavigation.isWeb() && typeof window !== 'undefined' \n              ? window.selectedConversationId \n              : null;\n            debugLog('MBA2o3uihf48hv: Navigation checking for selected conversation ID from storage', { \n              selectedConvId, \n              hasUnreadMessages, \n              route \n            });\n            \n            // Pass the selected conversation ID if available\n            resetNotifications && resetNotifications(route, selectedConvId);\n          }\n          \n          debugLog('MBA2o3uihf48hv: Updated current route from storage', {\n            route,\n            oldRoute: currentRoute,\n            hasUnreadMessages,\n            unreadCount\n          });\n        }\n      } catch (error) {\n        console.error('Error updating current route:', error);\n      }\n    };\n\n    // Initial update\n    updateCurrentRoute();\n    \n    // Add navigation state listener with safety check\n    let unsubscribe = () => {};\n    if (navigation && typeof navigation.addListener === 'function') {\n      unsubscribe = navigation.addListener('state', updateCurrentRoute);\n    } else {\n      debugLog('MBA4477: Warning - navigation.addListener not available', { \n        navigationExists: !!navigation,\n        addListenerExists: navigation && typeof navigation.addListener === 'function'\n      });\n    }\n    \n    // Add platform-aware navigation listener for handling browser history changes\n    const removeNavigationListener = platformNavigation.addNavigationListener((routeInfo, event) => {\n      debugLog('MBA4477: Detected navigation change, updating route', {\n        routeName: routeInfo.name,\n        path: routeInfo.path\n      });\n      \n      // Force immediate update on navigation change\n      updateCurrentRoute();\n    });\n    \n    // Set up periodic route checking for web platform\n    let routeCheckInterval;\n    if (platformNavigation.isWeb() && typeof window !== 'undefined') {\n      // Store previous route check to avoid unnecessary updates\n      let lastCheckedRoute = currentRoute;\n      \n      routeCheckInterval = setInterval(() => {\n        const currentRouteInfo = platformNavigation.getCurrentRoute(navigation, reactRoute);\n        const urlRoute = currentRouteInfo.name;\n        \n        // Only update if something has changed\n        if (urlRoute !== lastCheckedRoute && urlRoute !== currentRoute) {\n          lastCheckedRoute = urlRoute;\n          updateCurrentRoute();\n        }\n      }, 5000); // Check every 5 seconds to reduce overhead even further\n    }\n    \n    return () => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      removeNavigationListener();\n      if (routeCheckInterval) {\n        clearInterval(routeCheckInterval);\n      }\n    };\n  }, [navigation, resetNotifications, updateRoute, hasUnreadMessages, currentRoute, reactRoute]);\n\n  // Animated hamburger menu component\n  const AnimatedHamburgerMenu = ({ size = 28, color = theme.colors.text }) => {\n    const line1Style = useAnimatedStyle(() => ({\n      width: size,\n      height: 3,\n      backgroundColor: color,\n      marginVertical: 2,\n      borderRadius: 1.5,\n      transform: [\n        { translateY: line1TranslateY.value },\n        { rotate: `${line1Rotation.value}deg` }\n      ],\n    }));\n\n    const line2Style = useAnimatedStyle(() => ({\n      width: size,\n      height: 3,\n      backgroundColor: color,\n      marginVertical: 2,\n      borderRadius: 1.5,\n      opacity: line2Opacity.value,\n    }));\n\n    const line3Style = useAnimatedStyle(() => ({\n      width: size,\n      height: 3,\n      backgroundColor: color,\n      marginVertical: 2,\n      borderRadius: 1.5,\n      transform: [\n        { translateY: line3TranslateY.value },\n        { rotate: `${line3Rotation.value}deg` }\n      ],\n    }));\n\n    return (\n      <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n        <Animated.View style={line1Style} />\n        <Animated.View style={line2Style} />\n        <Animated.View style={line3Style} />\n      </View>\n    );\n  };\n  \n  // Component to show notification indicator for the other role\n  const OtherRoleNotificationIndicator = ({ roleToCheck, currentRole, style }) => {\n    // Get the unread count for the role we're checking\n    const roleCount = roleToCheck === 'professional' \n      ? professionalUnreadCount \n      : ownerUnreadCount;\n    \n    // Get if this is the currently active role\n    const isCurrentRole = userRole === roleToCheck;\n    \n    // Add debug log to track state updates for notifications\n    useEffect(() => {\n      debugLog('MBA3uiobv59u: OtherRoleNotificationIndicator update:', {\n        roleToCheck,\n        roleCount,\n        isCurrentRole,\n        currentUserRole: userRole,\n        ownerUnreadCount,\n        professionalUnreadCount\n      });\n    }, [roleCount, isCurrentRole, roleToCheck, userRole, ownerUnreadCount, professionalUnreadCount]);\n    \n    // Only show notification if:\n    // 1. This is not the current role (we're checking the other role)\n    // 2. There are unread messages for this role\n    if (isCurrentRole || roleCount === 0) return null;\n    \n    debugLog('MBA3uiobv59u: Rendering notification badge for role:', {\n      roleToCheck,\n      roleCount\n    });\n    \n    return (\n      <View style={[styles.roleNotificationBadge, style]}>\n        <Text style={styles.roleNotificationText}>{roleCount}</Text>\n      </View>\n    );\n  };\n  \n  // Include all the other helper functions from the original component\n  const animateHamburgerMenu = (toX) => {\n    const duration = 300;\n    \n    debugLog('MBA4477: Animating hamburger menu', { toX, isMenuOpen });\n    \n    if (toX) {\n      // Transform to X\n      line1Rotation.value = withTiming(45, { duration });\n      line2Opacity.value = withTiming(0, { duration });\n      line3Rotation.value = withTiming(-45, { duration });\n      line1TranslateY.value = withTiming(7, { duration });\n      line3TranslateY.value = withTiming(-7, { duration });\n    } else {\n      // Transform back to hamburger\n      line1Rotation.value = withTiming(0, { duration });\n      line2Opacity.value = withTiming(1, { duration });\n      line3Rotation.value = withTiming(0, { duration });\n      line1TranslateY.value = withTiming(0, { duration });\n      line3TranslateY.value = withTiming(0, { duration });\n    }\n  };\n\n  const openMenu = () => setVisible(true);\n  const closeMenu = () => setVisible(false);\n  const toggleMenu = () => setIsMenuOpen(!isMenuOpen);\n\n  const handleNavigation = (route) => {\n    debugLog('MBA4477: Navigation handling', { route, currentRoute });\n    if (route === currentRoute) {\n      return;\n    }\n    \n    // Close the menu when navigating\n    setIsMenuOpen(false);\n    closeMenu();\n    \n    // Use the navigation helpers\n    navigateToFrom(navigation, route, currentRoute);\n  };\n  \n  const handleRoleSwitch = async (role) => {\n    if (role !== userRole) {\n      await switchRole(role);\n    }\n  };\n  \n  const handleLogout = async () => {\n    setIsMenuOpen(false);\n    closeMenu();\n    await signOut();\n  };\n  \n  const renderMenuItems = () => {\n    let items = [];\n    let logoutItem = null;\n    \n    // Get current role notification count directly\n    const currentRoleCount = getCurrentRoleUnreadCount();\n    const hasCurrentRoleUnread = hasCurrentRoleUnreadMessages();\n    \n    // Add logging for notification state when rendering menu\n    debugLog('MBA3uiobv59u: Rendering menu items with notification state:', {\n      hasUnreadMessages,\n      unreadCount,\n      ownerUnreadCount,\n      professionalUnreadCount,\n      currentRoleCount,\n      hasCurrentRoleUnread,\n      userRole,\n      currentRoute\n    });\n    \n    if (!isSignedIn) {\n      // Signed-out menu items\n      items = [\n        { icon: 'login', label: 'Sign In', route: 'SignIn' },\n        { icon: 'account-plus-outline', label: 'Sign Up', route: 'SignUp' },\n        { icon: 'magnify', label: 'Search Pros', route: 'SearchProfessionalsListing' }\n      ];\n    } else if (userRole === 'professional') {\n      // Professional menu items in the specified order\n      items = [\n        { icon: 'view-dashboard-outline', label: 'Dashboard', route: 'Dashboard' },\n        { icon: 'message-text-outline', label: 'Messages', route: 'MessageHistory', notification: hasCurrentRoleUnread },\n        { icon: 'briefcase-outline', label: 'Services', route: 'ServiceManager' },\n        { icon: 'account-group-outline', label: 'Connections', route: 'Connections' },\n        { icon: 'account-outline', label: 'Profile', route: 'MyProfile' },\n        { icon: 'email-outline', label: 'Contact Us', route: 'ContactUs' }\n      ];\n      \n      // Store logout item separately\n      logoutItem = { icon: 'logout', label: 'Logout', route: 'logout', action: handleLogout };\n    } else {\n      // Pet Owner menu items in the specified order\n      items = [\n        { icon: 'view-dashboard-outline', label: 'Dashboard', route: 'Dashboard' },\n        { icon: 'message-text-outline', label: 'Messages', route: 'MessageHistory', notification: hasCurrentRoleUnread },\n        { icon: 'magnify', label: 'Search Pros', route: 'SearchProfessionalsListing' },\n        { icon: 'account-group-outline', label: 'Become Professional', route: 'ContactUs' },\n        { icon: 'account-outline', label: 'Profile', route: 'MyProfile' },\n        { icon: 'email-outline', label: 'Contact Us', route: 'ContactUs' }\n      ];\n      \n      // Store logout item separately\n      logoutItem = { icon: 'logout', label: 'Logout', route: 'logout', action: handleLogout };\n    }\n    \n    return {\n      menuItems: items.map((item, index) => (\n        <TouchableOpacity\n          key={index}\n          style={[\n            styles.sidebarItem,\n            currentRoute === item.route && styles.activeItem\n          ]}\n          onPress={() => item.action ? item.action() : handleNavigation(item.route)}\n        >\n          <MaterialCommunityIcons\n            name={item.icon}\n            size={24}\n            color={currentRoute === item.route ? theme.colors.primary : theme.colors.text}\n          />\n          <Text\n            style={[\n              styles.sidebarItemText,\n              {\n                color: currentRoute === item.route ? theme.colors.primary : theme.colors.text,\n                marginLeft: isCollapsed ? 0 : 12,\n                display: isCollapsed ? 'none' : 'flex',\n              }\n            ]}\n          >\n            {item.label}\n          </Text>\n          {/* Only show notification badge with count when there are unread messages FOR CURRENT ROLE */}\n          {item.route === 'MessageHistory' && currentRoleCount > 0 && (\n            <View style={styles.messageNotificationBadge}>\n              <Text style={styles.messageNotificationText}>\n                {currentRoleCount}\n              </Text>\n            </View>\n          )}\n          {/* We've replaced the old dot with the badge above */}\n        </TouchableOpacity>\n      )),\n      logoutItem\n    };\n  };\n  \n  const renderMobileMenuItems = () => {\n    let items = [];\n    \n    // Get current role notification count directly\n    const currentRoleCount = getCurrentRoleUnreadCount();\n    const hasCurrentRoleUnread = hasCurrentRoleUnreadMessages();\n    \n    debugLog('MBA3uiobv59u: Rendering mobile menu items:', {\n      currentRoleCount,\n      hasCurrentRoleUnread,\n      userRole\n    });\n    \n    if (!isSignedIn) {\n      // Signed-out menu items\n      items = [\n        { icon: 'login', label: 'Sign In', route: 'SignIn' },\n        { icon: 'account-plus-outline', label: 'Sign Up', route: 'SignUp' },\n        { icon: 'magnify', label: 'Search Pros', route: 'SearchProfessionalsListing' }\n      ];\n    } else if (userRole === 'professional') {\n      // Professional menu items in the specified order - keep logout in the menu for mobile\n      items = [\n        { icon: 'view-dashboard-outline', label: 'Dashboard', route: 'Dashboard' },\n        { icon: 'message-text-outline', label: 'Messages', route: 'MessageHistory', notification: hasCurrentRoleUnread, count: currentRoleCount },\n        { icon: 'briefcase-outline', label: 'Services', route: 'ServiceManager' },\n        { icon: 'account-group-outline', label: 'Connections', route: 'Connections' },\n        { icon: 'account-outline', label: 'Profile', route: 'MyProfile' },\n        { icon: 'email-outline', label: 'Contact Us', route: 'ContactUs' },\n        { icon: 'logout', label: 'Logout', route: 'logout', action: handleLogout }\n      ];\n    } else {\n      // Pet Owner menu items in the specified order - keep logout in the menu for mobile\n      items = [\n        { icon: 'view-dashboard-outline', label: 'Dashboard', route: 'Dashboard' },\n        { icon: 'message-text-outline', label: 'Messages', route: 'MessageHistory', notification: hasCurrentRoleUnread, count: currentRoleCount },\n        { icon: 'magnify', label: 'Search Pros', route: 'SearchProfessionalsListing' },\n        { icon: 'account-group-outline', label: 'Become Professional', route: 'ContactUs' },\n        { icon: 'account-outline', label: 'Profile', route: 'MyProfile' },\n        { icon: 'email-outline', label: 'Contact Us', route: 'ContactUs' },\n        { icon: 'logout', label: 'Logout', route: 'logout', action: handleLogout }\n      ];\n    }\n    \n    return (\n      <>\n        {/* Role Toggle for Mobile - Only show when signed in and approved professional */}\n        {isSignedIn && isApprovedProfessional && (\n          <View style={styles.mobileRoleToggleContainer}>\n            <Text style={styles.mobileRoleToggleTitle}>Your Role</Text>\n            <View style={styles.mobileRoleButtonsContainer}>\n              <TouchableOpacity\n                style={[\n                  styles.mobileRoleButton,\n                  userRole === 'petOwner' && styles.mobileRoleButtonActive\n                ]}\n                onPress={() => userRole !== 'owner' && handleRoleSwitch('owner')}\n              >\n                <Text\n                  style={[\n                    styles.mobileRoleButtonText,\n                    userRole === 'petOwner' && styles.mobileRoleButtonTextActive\n                  ]}\n                >\n                  Owner\n                </Text>\n                \n                {/* Notification indicator for pet owner role */}\n                {userRole !== 'petOwner' && ownerUnreadCount > 0 && (\n                  <View style={[styles.roleNotificationBadge, { top: -8, right: -8 }]}>\n                    <Text style={styles.roleNotificationText}>\n                      {ownerUnreadCount}\n                    </Text>\n                  </View>\n                )}\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={[\n                  styles.mobileRoleButton,\n                  userRole === 'professional' && styles.mobileRoleButtonActive\n                ]}\n                onPress={() => userRole !== 'professional' && handleRoleSwitch('professional')}\n              >\n                <Text\n                  style={[\n                    styles.mobileRoleButtonText,\n                    userRole === 'professional' && styles.mobileRoleButtonTextActive\n                  ]}\n                >\n                  Professional\n                </Text>\n                \n                {/* Notification indicator for professional role */}\n                {userRole !== 'professional' && professionalUnreadCount > 0 && (\n                  <View style={[styles.roleNotificationBadge, { top: -8, right: -8 }]}>\n                    <Text style={styles.roleNotificationText}>\n                      {professionalUnreadCount}\n                    </Text>\n                  </View>\n                )}\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n        \n        {/* Menu Items */}\n        {items.map((item, index) => (\n          <TouchableOpacity\n            key={index}\n            style={[\n              styles.mobileMenuItem,\n              item.route === 'logout' && styles.mobileLogoutItem\n            ]}\n            onPress={() => {\n              setIsMenuOpen(false);\n              item.action ? item.action() : handleNavigation(item.route);\n            }}\n          >\n            <MaterialCommunityIcons\n              name={item.icon}\n              size={24}\n              color={item.route === 'logout' ? '#F26969' : theme.colors.text}\n            />\n            <Text style={[\n              styles.mobileMenuItemText,\n              item.route === 'logout' && styles.mobileLogoutText\n            ]}>\n              {item.label}\n            </Text>\n            {/* Only show notification badge with count when there are unread messages FOR CURRENT ROLE */}\n            {item.route === 'MessageHistory' && currentRoleCount > 0 && (\n              <View style={styles.mobileMessageNotificationBadge}>\n                <Text style={styles.mobileMessageNotificationText}>{currentRoleCount}</Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        ))}\n      </>\n    );\n  };\n  \n  const renderDesktopSidebar = () => {\n    const sidebarWidth = isCollapsed ? 72 : 250;\n    const { menuItems, logoutItem } = renderMenuItems();\n    \n    return (\n      <View style={[styles.sidebarContainer, { width: sidebarWidth }]}>\n        <View style={styles.sidebarLogoContainer}>\n          <TouchableOpacity\n            style={styles.logoButton}\n            onPress={() => handleNavigation('Home')}\n          >\n            <Image\n              source={require('../../assets/logo.png')}\n              style={[\n                styles.sidebarLogo,\n                { width: isCollapsed ? 40 : 120, tintColor: theme.colors.primary }\n              ]}\n            />\n          </TouchableOpacity>\n        </View>\n        \n        <TouchableOpacity\n          style={styles.collapseButton}\n          onPress={() => setIsCollapsed(!isCollapsed)}\n        >\n          <MaterialCommunityIcons\n            name={isCollapsed ? 'chevron-right' : 'chevron-left'}\n            size={24}\n            color={theme.colors.text}\n          />\n        </TouchableOpacity>\n        \n        <View style={styles.menuItemsContainer}>\n          {/* Role Toggle - Only show when signed in and approved professional */}\n          {isSignedIn && isApprovedProfessional && (\n            <View style={styles.roleToggleContainer}>\n              {!isCollapsed && (\n                <Text style={styles.roleToggleTitle}>Your Role</Text>\n              )}\n              <View style={styles.roleButtonsContainer}>\n                <TouchableOpacity\n                  style={[\n                    styles.roleButton,\n                    userRole === 'petOwner' && styles.roleButtonActive\n                  ]}\n                  onPress={() => handleRoleSwitch('petOwner')}\n                >\n                  <Text\n                    style={[\n                      styles.roleButtonText,\n                      userRole === 'petOwner' && styles.roleButtonTextActive,\n                      isCollapsed && styles.roleButtonTextCollapsed\n                    ]}\n                  >\n                    {isCollapsed ? 'O' : 'Owner'}\n                  </Text>\n                  \n                  {/* Notification indicator for pet owner role */}\n                  {userRole !== 'petOwner' && ownerUnreadCount > 0 && (\n                    <View style={[styles.roleNotificationBadge, { top: -8, right: -8 }]}>\n                      <Text style={styles.roleNotificationText}>\n                        {ownerUnreadCount}\n                      </Text>\n                    </View>\n                  )}\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[\n                    styles.roleButton,\n                    userRole === 'professional' && styles.roleButtonActive\n                  ]}\n                  onPress={() => handleRoleSwitch('professional')}\n                >\n                  <Text\n                    style={[\n                      styles.roleButtonText,\n                      userRole === 'professional' && styles.roleButtonTextActive,\n                      isCollapsed && styles.roleButtonTextCollapsed\n                    ]}\n                  >\n                    {isCollapsed ? 'P' : 'Professional'}\n                  </Text>\n                  \n                  {/* Notification indicator for professional role */}\n                  {userRole !== 'professional' && professionalUnreadCount > 0 && (\n                    <View style={[styles.roleNotificationBadge, { top: -8, right: -8 }]}>\n                      <Text style={styles.roleNotificationText}>\n                        {professionalUnreadCount}\n                      </Text>\n                    </View>\n                  )}\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n          \n          {menuItems}\n        </View>\n        \n        {/* Logout Button at the bottom */}\n        {isSignedIn && logoutItem && (\n          <View style={styles.logoutButtonContainer}>\n            <TouchableOpacity\n              style={styles.sidebarItem}\n              onPress={logoutItem.action}\n            >\n              <MaterialCommunityIcons\n                name={logoutItem.icon}\n                size={24}\n                color=\"#F26969\"\n              />\n              <Text\n                style={[\n                  styles.sidebarItemText,\n                  {\n                    color: '#F26969',\n                    marginLeft: isCollapsed ? 0 : 12,\n                    display: isCollapsed ? 'none' : 'flex',\n                  }\n                ]}\n              >\n                {logoutItem.label}\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </View>\n    );\n  };\n  \n  const renderMobileHeader = () => {\n    return (\n      <View style={[styles.mobileHeader, { backgroundColor: theme.colors.surfaceContrast }]}>\n        <View style={styles.mobileHeaderContent}>\n          <TouchableOpacity onPress={() => handleNavigation('Home')}>\n            <Image\n              source={require('../../assets/logo.png')}\n              style={[styles.mobileLogo, { width: 120, height: 40, tintColor: theme.colors.primary }]}\n            />\n          </TouchableOpacity>\n          \n          <View style={styles.mobileRightContent}>\n            <TouchableOpacity\n              style={styles.hamburgerMenuContainer}\n              onPress={toggleMenu}\n            >\n              <AnimatedHamburgerMenu size={24} color={theme.colors.text} />\n              {/* Add notification badge to hamburger menu for mobile */}\n              {isSignedIn && unreadCount > 0 && (\n                <View style={styles.hamburgerNotificationBadge}>\n                  <Text style={styles.hamburgerNotificationText}>{unreadCount}</Text>\n                </View>\n              )}\n            </TouchableOpacity>\n          </View>\n        </View>\n        \n        {isMenuOpen && (\n          <View style={styles.mobileMenu}>\n            {renderMobileMenuItems()}\n          </View>\n        )}\n      </View>\n    );\n  };\n  \n  const renderMobileNavBar = () => {\n    // Get current role notification count\n    const currentRoleCount = getCurrentRoleUnreadCount();\n    \n    // For mobile nav bar when signed out\n    if (!isSignedIn) {\n      return (\n        <SafeAreaView style={styles.customNavBar}>\n          <TouchableOpacity\n            style={styles.navButton}\n            onPress={() => handleNavigation('SignIn')}\n          >\n            <MaterialCommunityIcons\n              name=\"login\"\n              size={24}\n              color={currentRoute === 'SignIn' ? theme.colors.secondary : theme.colors.whiteText}\n            />\n            <Text style={[\n              styles.navText,\n              { color: currentRoute === 'SignIn' ? theme.colors.secondary : theme.colors.whiteText }\n            ]}>\n              Sign In\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={styles.navButton}\n            onPress={() => handleNavigation('SignUp')}\n          >\n            <MaterialCommunityIcons\n              name=\"account-plus-outline\"\n              size={24}\n              color={currentRoute === 'SignUp' ? theme.colors.secondary : theme.colors.whiteText}\n            />\n            <Text style={[\n              styles.navText,\n              { color: currentRoute === 'SignUp' ? theme.colors.secondary : theme.colors.whiteText }\n            ]}>\n              Sign Up\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={styles.navButton}\n            onPress={() => handleNavigation('SearchProfessionalsListing')}\n          >\n            <MaterialCommunityIcons\n              name=\"magnify\"\n              size={24}\n              color={currentRoute === 'SearchProfessionalsListing' ? theme.colors.secondary : theme.colors.whiteText}\n            />\n            <Text style={[\n              styles.navText,\n              { color: currentRoute === 'SearchProfessionalsListing' ? theme.colors.secondary : theme.colors.whiteText }\n            ]}>\n              Search\n            </Text>\n          </TouchableOpacity>\n        </SafeAreaView>\n      );\n    }\n    \n    return (\n      <SafeAreaView style={styles.customNavBar}>\n        <TouchableOpacity\n          style={styles.navButton}\n          onPress={() => handleNavigation(isSignedIn ? 'Dashboard' : 'SearchProfessionalsListing')}\n        >\n          <MaterialCommunityIcons\n            name={isSignedIn ? 'view-dashboard-outline' : 'magnify'}\n            size={24}\n            color={currentRoute === (isSignedIn ? 'Dashboard' : 'SearchProfessionalsListing') ? theme.colors.secondary : theme.colors.whiteText}\n          />\n          <Text style={[\n            styles.navText,\n            { color: currentRoute === (isSignedIn ? 'Dashboard' : 'SearchProfessionalsListing') ? theme.colors.secondary : theme.colors.whiteText }\n          ]}>\n            {isSignedIn ? 'Home' : 'Search'}\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={styles.navButton}\n          onPress={() => handleNavigation(isSignedIn ? 'SearchProfessionalsListing' : 'SignUp')}\n        >\n          <MaterialCommunityIcons\n            name={isSignedIn ? 'magnify' : 'account-plus-outline'}\n            size={24}\n            color={currentRoute === (isSignedIn ? 'SearchProfessionalsListing' : 'SignUp') ? theme.colors.secondary : theme.colors.whiteText}\n          />\n          <Text style={[\n            styles.navText,\n            { color: currentRoute === (isSignedIn ? 'SearchProfessionalsListing' : 'SignUp') ? theme.colors.secondary : theme.colors.whiteText }\n          ]}>\n            {isSignedIn ? 'Search' : 'Sign Up'}\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={styles.navButton}\n          onPress={() => handleNavigation(isSignedIn ? (userRole === 'professional' ? 'ServiceManager' : 'PetManager') : 'SignIn')}\n        >\n          <MaterialCommunityIcons\n            name={isSignedIn ? 'paw' : 'login'}\n            size={24}\n            color={\n              currentRoute === (isSignedIn ? (userRole === 'professional' ? 'ServiceManager' : 'PetManager') : 'SignIn')\n                ? theme.colors.secondary\n                : theme.colors.whiteText\n            }\n          />\n          <Text style={[\n            styles.navText,\n            {\n              color: currentRoute === (isSignedIn ? (userRole === 'professional' ? 'ServiceManager' : 'PetManager') : 'SignIn')\n                ? theme.colors.secondary\n                : theme.colors.whiteText\n            }\n          ]}>\n            {isSignedIn ? (userRole === 'professional' ? 'Services' : 'Pets') : 'Sign In'}\n          </Text>\n        </TouchableOpacity>\n        \n        {isSignedIn && (\n          <>\n            <TouchableOpacity\n              style={styles.navButton}\n              onPress={() => handleNavigation('MessageHistory')}\n            >\n              <View style={{ position: 'relative' }}>\n                <MaterialCommunityIcons\n                  name=\"message-text-outline\"\n                  size={24}\n                  color={currentRoute === 'MessageHistory' ? theme.colors.secondary : theme.colors.whiteText}\n                />\n                {/* Only show notification badge with count when there are unread messages FOR CURRENT ROLE */}\n                {currentRoleCount > 0 && (\n                  <View style={styles.mobileMessageNotificationBadge}>\n                    <Text style={styles.mobileMessageNotificationText}>{currentRoleCount}</Text>\n                  </View>\n                )}\n              </View>\n              <Text style={[\n                styles.navText,\n                { color: currentRoute === 'MessageHistory' ? theme.colors.secondary : theme.colors.whiteText }\n              ]}>\n                Messages\n              </Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity\n              style={styles.navButton}\n              onPress={() => handleNavigation('MyProfile')}\n            >\n              <MaterialCommunityIcons\n                name=\"account-outline\"\n                size={24}\n                color={currentRoute === 'MyProfile' ? theme.colors.secondary : theme.colors.whiteText}\n              />\n              <Text style={[\n                styles.navText,\n                { color: currentRoute === 'MyProfile' ? theme.colors.secondary : theme.colors.whiteText }\n              ]}>\n                Profile\n              </Text>\n            </TouchableOpacity>\n          </>\n        )}\n      </SafeAreaView>\n    );\n  };\n  \n  // If we shouldn't render (for example when navigation should be hidden),\n  // we still need to return something to avoid React errors\n  // IMPORTANT: All hooks must be called BEFORE this check to ensure consistent hook order\n  if (!shouldRender) {\n    return null;\n  }\n  \n  // The return statement should be similar to the original component\n  return (\n    <>\n      {Platform.OS === 'web' ? (\n        <>\n          {!isMobile && isSignedIn && (\n            <View style={styles.navContainer}>\n              {renderDesktopSidebar()}\n            </View>\n          )}\n          {!isMobile && !isSignedIn && (\n            <View style={styles.signedOutHeaderWeb}>\n              <TouchableOpacity onPress={() => handleNavigation('Home')}>\n                <Image\n                  source={require('../../assets/logo.png')}\n                  style={[styles.webLogo, { tintColor: theme.colors.primary }]}\n                />\n              </TouchableOpacity>\n              <View style={styles.mobileRightContent}>\n                <TouchableOpacity\n                  style={styles.hamburgerMenuContainer}\n                  onPress={toggleMenu}\n                >\n                  <AnimatedHamburgerMenu size={24} color={theme.colors.text} />\n                </TouchableOpacity>\n              </View>\n            </View>\n          )}\n          {isMobile && renderMobileHeader()}\n          \n          {isMenuOpen && !isMobile && !isSignedIn && (\n            <View style={[styles.mobileMenu, styles.webDesktopMenu]}>\n              {renderMobileMenuItems()}\n            </View>\n          )}\n        </>\n      ) : (\n        <View style={styles.container}>\n          {renderMobileNavBar()}\n        </View>\n      )}\n    </>\n  );\n};\n\n// Main Navigation component - this is the one that gets exported\nexport default function Navigation(props) {\n  const { state: propState, descriptors, navigation: propNavigation } = props;\n  \n  // IMPORTANT: All hooks must be called here unconditionally\n  const reactRoute = useReactRoute();\n  const [shouldCheckMessageState, setShouldCheckMessageState] = useState(true);\n  const { screenWidth } = useContext(AuthContext);\n  \n  // Determine routeName and selectedConversation\n  const routeFromProps = propState?.routes?.[propState?.index];\n  const routeName = routeFromProps?.name || reactRoute?.name || '';\n  const selectedConversation = \n    routeFromProps?.params?.selectedConversation || \n    reactRoute?.params?.selectedConversation;\n  \n  const isInMessageHistory = routeName === 'MessageHistory';\n  \n  // IMPORTANT: React hooks rules require that hooks are called in the same order\n  // on every render. Never put hooks inside conditional blocks or early returns.\n  // For safety, we've moved all hooks to the top of the component.\n  \n  // On first render, we check if this is a page reload with URL params\n  // ALWAYS call hooks unconditionally to avoid React hooks errors\n  useEffect(() => {\n    // Only execute the effect logic if the conditions are met\n    if (Platform.OS === 'web' && isInMessageHistory && selectedConversation && screenWidth <= 900) {\n      // If URL has conversation params, wait for MessageHistory to set its state\n      const isPageReload = typeof performance !== 'undefined' && \n                         performance.navigation && \n                         performance.navigation.type === performance.navigation.TYPE_RELOAD;\n      \n      debugLog('MBAo3hi4g4v: Page load check', {\n        isPageReload: isPageReload || 'API not available',\n        hasURLParams: !!selectedConversation,\n        shouldCheckMessageState\n      });\n      \n      if (shouldCheckMessageState) {\n        // First render with URL params - don't hide navigation yet\n        setShouldCheckMessageState(false);\n      }\n    }\n  }, [isInMessageHistory, selectedConversation, screenWidth, shouldCheckMessageState]);\n  \n  // Check if we should hide navigation\n  // More robust check for selectedConversation to prevent falsy values from causing issues\n  const hasSelectedConversation = selectedConversation !== null && \n                                selectedConversation !== undefined && \n                                selectedConversation !== '' &&\n                                selectedConversation !== 'null';\n  \n  const shouldHideNavigation = isInMessageHistory && \n                              hasSelectedConversation && \n                              screenWidth <= 900 && \n                              !shouldCheckMessageState;\n  \n  // Log visibility state\n  debugLog('MBAo3hi4g4v: Navigation visibility check', { \n    routeName, \n    selectedConversation, \n    screenWidth,\n    shouldCheckMessageState,\n    shouldHideNavigation\n  });\n  \n  // We ALWAYS render the NavigationContent component but control visibility\n  // via the shouldRender prop. This ensures hooks are always called in the same order.\n  return (\n    <NavigationContent \n      propState={propState}\n      descriptors={descriptors}\n      propNavigation={propNavigation}\n      shouldRender={!shouldHideNavigation}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: 'flex',\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    backgroundColor: theme.colors.primary,\n  },\n  content: {\n    flex: 1,\n  },\n  header: {\n    backgroundColor: theme.colors.primary,\n  },\n  titleContainer: {\n    justifyContent: 'center',\n  },\n  titleContainer2: {\n    flex: 1,\n    justifyContent: 'center',\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    textAlign: 'left',\n    marginLeft: theme.spacing.medium,\n    fontSize: theme.fontSizes.large,\n    color: theme.colors.text,\n    fontWeight: 'bold',\n    fontFamily: theme.fonts.header.fontFamily,\n  },\n  desktopNav: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n  navItem: {\n    marginHorizontal: theme.spacing.medium,\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    cursor: 'pointer',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  customNavBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n  },\n  navButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 60,\n    paddingHorizontal: 5,\n  },\n  navText: {\n    color: theme.colors.whiteText,\n    fontSize: theme.fontSizes.small,\n    marginTop: 5,\n    textAlign: 'center',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  webNavItem: {\n    marginHorizontal: theme.spacing.medium,\n  },\n  webNavText: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.whiteText,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n  },\n  navLinkContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginHorizontal: 6,\n  },\n  sidebarContainer: {\n    height: '100%',\n    minHeight: '100vh',\n    backgroundColor: theme.colors.surfaceContrast,\n    borderRightWidth: 0,\n    position: 'fixed',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    zIndex: 1000,\n    display: 'flex',\n    flexDirection: 'column',\n    transition: 'width 0.3s ease',\n    borderTopRightRadius: 24,\n    borderBottomRightRadius: 24,\n  },\n  sidebarLogoContainer: {\n    padding: 16,\n    borderBottomWidth: 3,\n    borderBottomColor: theme.colors.surface,\n    alignItems: 'center',\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  logoButton: {\n    alignItems: 'center',\n  },\n  sidebarLogo: {\n    height: 50,\n    resizeMode: 'contain',\n  },\n  collapseButton: {\n    position: 'absolute',\n    right: -16,\n    top: '50%',\n    transform: [{ translateY: -20 }],\n    width: 32,\n    height: 40,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderWidth: 0,\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1001,\n  },\n  menuItemsContainer: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: theme.colors.surfaceContrast,\n  },\n  sidebarItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    marginBottom: 8,\n    borderRadius: 8,\n    backgroundColor: 'transparent',\n    cursor: 'pointer',\n  },\n  sidebarItemText: {\n    marginLeft: 12,\n    fontSize: theme.fontSizes.medium,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  logoutButton: {\n    width: '100%',\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    borderTopWidth: 0,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderBottomRightRadius: 24,\n  },\n  logoutText: {\n    marginLeft: 12,\n    fontSize: theme.fontSizes.medium,\n    color: '#F26969',\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '500',\n  },\n  headerRight: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    marginRight: 16,\n  },\n  notificationButton: {\n    position: 'relative',\n    padding: 8,\n  },\n  notificationBadge: {\n    position: 'absolute',\n    top: 4,\n    right: 4,\n    backgroundColor: theme.colors.error,\n    borderRadius: 10,\n    minWidth: 20,\n    height: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  notificationCount: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  profileButton: {\n    borderRadius: 20,\n    overflow: 'hidden',\n  },\n  menuContent: {\n    marginTop: 45,\n  },\n  mobileHeader: {\n    width: '100%',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: 'rgba(255,255,255,0.1)',\n    position: 'relative',\n  },\n  mobileHeaderContent: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '100%',\n  },\n  mobileLogo: {\n    resizeMode: 'contain',\n  },\n  mobileRightContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 15,\n  },\n  mobileMenu: {\n    position: 'absolute',\n    top: '100%',\n    right: 0,\n    backgroundColor: theme.colors.surface,\n    borderRadius: 8,\n    padding: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n    zIndex: 1000,\n    marginRight: 20, \n    minWidth: 250,\n  },\n  mobileMenuItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 12,\n    borderRadius: 8,\n  },\n  mobileMenuItemText: {\n    marginLeft: 12,\n    fontSize: 16,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n  },\n  profileContainer: {\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  iconButton: {\n    padding: 8,\n    position: 'relative',\n  },\n  notificationText: {\n    color: theme.colors.whiteText,\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  navContainer: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    zIndex: 1000,\n    backgroundColor: theme.colors.surface,\n    borderRightWidth: 1,\n    borderRightColor: theme.colors.border,\n  },\n  activeItem: {\n    backgroundColor: '#F0F9E5',\n  },\n  logoutItem: {\n    marginTop: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    paddingTop: 16,\n  },\n  roleToggleContainer: {\n    padding: 12,\n    marginBottom: 16,\n    borderRadius: 8,\n    backgroundColor: '#F0F9E5',\n  },\n  roleToggleTitle: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n  },\n  roleButtonsContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  roleButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n    cursor: 'pointer',\n  },\n  roleButtonDisabled: {\n    opacity: 0.5,\n    borderColor: theme.colors.border,\n    cursor: 'not-allowed',\n  },\n  roleButtonText: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.primary,\n  },\n  roleButtonTextDisabled: {\n    color: theme.colors.border,\n  },\n  roleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  roleButtonTextActive: {\n    color: theme.colors.surface,\n  },\n  mobileRoleToggleContainer: {\n    padding: 16,\n    marginBottom: 8,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  mobileRoleToggleTitle: {\n    fontSize: theme.fontSizes.medium,\n    color: theme.colors.text,\n    fontFamily: theme.fonts.regular.fontFamily,\n    fontWeight: '600',\n    marginBottom: 8,\n  },\n  mobileRoleButtonsContainer: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  mobileRoleButton: {\n    flex: 1,\n    padding: 8,\n    borderRadius: 6,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  mobileRoleButtonDisabled: {\n    opacity: 0.5,\n    borderColor: theme.colors.border,\n  },\n  mobileRoleButtonText: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.primary,\n  },\n  mobileRoleButtonTextDisabled: {\n    color: theme.colors.border,\n  },\n  mobileRoleButtonActive: {\n    backgroundColor: theme.colors.primary,\n  },\n  mobileRoleButtonTextActive: {\n    color: theme.colors.surface,\n  },\n  mobileLogoutItem: {\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    marginTop: 8,\n  },\n  mobileLogoutText: {\n    color: '#F26969',\n  },\n  messageNotificationDot: {\n    position: 'absolute',\n    top: '50%',\n    right: -2,\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    transform: [{ translateY: -5 }],\n  },\n  \n  mobileMessageNotificationDot: {\n    position: 'absolute',\n    top: '50%',\n    right: -2,\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surfaceContrast,\n    transform: [{ translateY: -4 }],\n  },\n  messageNotificationBadge: {\n    position: 'absolute',\n    top: '50%',\n    right: -12,\n    minWidth: 22,\n    height: 22,\n    borderRadius: 11,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 3,\n    transform: [{ translateY: -11 }],\n  },\n  messageNotificationText: {\n    color: 'white',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  mobileMessageNotificationBadge: {\n    position: 'absolute',\n    top: '50%',\n    right: -10,\n    minWidth: 20,\n    height: 20,\n    borderRadius: 10,\n    marginRight: 10,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surfaceContrast,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 3,\n    transform: [{ translateY: -10 }],\n  },\n  mobileMessageNotificationText: {\n    color: 'white',\n    fontSize: 11,\n    fontWeight: 'bold',\n  },\n  roleNotificationIndicator: {\n    position: 'absolute',\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    zIndex: 1,\n    top: '50%',\n    right: -4,\n    transform: [{ translateY: -4 }],\n  },\n  roleNotificationBadge: {\n    position: 'absolute',\n    minWidth: 18,\n    height: 18,\n    borderRadius: 9,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 3,\n    zIndex: 10,\n    top: '50%',\n    right: -9,\n    transform: [{ translateY: -9 }],\n  },\n  roleNotificationText: {\n    color: 'white',\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  hamburgerMenuContainer: {\n    width: 28,\n    height: 28,\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'relative',\n  },\n  signedOutOptions: {\n    flexDirection: 'row',\n    gap: 8,\n  },\n  signedOutButton: {\n    padding: 8,\n    borderRadius: 6,\n    borderWidth: 1,\n    borderColor: theme.colors.primary,\n  },\n  signedOutButtonText: {\n    fontSize: theme.fontSizes.small,\n    fontFamily: theme.fonts.regular.fontFamily,\n    color: theme.colors.primary,\n  },\n  signInButton: {\n    backgroundColor: theme.colors.primary,\n  },\n  signedOutHeaderWeb: {\n    height: 70,\n    width: '100%',\n    backgroundColor: theme.colors.surfaceContrast,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingHorizontal: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: theme.colors.border,\n  },\n  webLogo: {\n    height: 40,\n    width: 120,\n    resizeMode: 'contain',\n  },\n  signedOutNavButtons: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 24,\n  },\n  webSignInButton: {\n    backgroundColor: theme.colors.primary,\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n  },\n  webSignInText: {\n    color: theme.colors.surface,\n  },\n  webDesktopMenu: {\n    position: 'absolute',\n    right: 0,\n    top: 70,\n    width: 250,\n  },\n  logoutButtonContainer: {\n    paddingHorizontal: 16,\n    paddingVertical: 16,\n    borderTopWidth: 1,\n    borderTopColor: theme.colors.border,\n    backgroundColor: theme.colors.surfaceContrast,\n    borderBottomRightRadius: 24,\n  },\n  hamburgerNotificationBadge: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n    minWidth: 18,\n    height: 18,\n    borderRadius: 9,\n    backgroundColor: theme.colors.error,\n    borderWidth: 1,\n    borderColor: theme.colors.surface,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 3,\n    zIndex: 10,\n  },\n  hamburgerNotificationText: {\n    color: 'white',\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n});\n","// src/config/config.js\nimport { Platform } from 'react-native';\nimport { debugLog } from '../utils/logging';\nimport { \n  STAGING_API_BASE_URL_ANDROID, \n  STAGING_API_BASE_URL_IOS, \n  STAGING_API_BASE_URL_WEB,\n  PRODUCTION_API_BASE_URL_ANDROID,\n  PRODUCTION_API_BASE_URL_IOS,\n  PRODUCTION_API_BASE_URL_WEB,\n  DEV_API_BASE_URL_ANDROID,\n  DEV_API_BASE_URL_IOS,\n  DEV_API_BASE_URL_WEB,\n  STAGING_MEDIA_URL,\n  PRODUCTION_MEDIA_URL,\n  NODE_ENV \n} from '@env';\n\n\ndebugLog(\"MBA1234: Environment Variables Loaded\", {\n  NODE_ENV,\n  STAGING_API_BASE_URL_ANDROID,\n  STAGING_API_BASE_URL_IOS,\n  STAGING_API_BASE_URL_WEB,\n  PRODUCTION_API_BASE_URL_ANDROID,\n  PRODUCTION_API_BASE_URL_IOS,\n  PRODUCTION_API_BASE_URL_WEB,\n  DEV_API_BASE_URL_ANDROID,\n  DEV_API_BASE_URL_IOS,\n  DEV_API_BASE_URL_WEB,\n  STAGING_MEDIA_URL,\n  PRODUCTION_MEDIA_URL,\n  platform: Platform.OS\n});\n\nconst isDevelopment = NODE_ENV === 'development';\nconst isStaging = NODE_ENV === 'staging';\nconst isProduction = NODE_ENV === 'production';\n\ndebugLog(\"MBA1234: Environment Configuration\", {\n  NODE_ENV,\n  isDevelopment,\n  isStaging,\n  isProduction,\n  platform: Platform.OS\n});\n\nlet API_BASE_URL;\n\nif (Platform.OS === 'android') {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_ANDROID : isStaging ? STAGING_API_BASE_URL_ANDROID : PRODUCTION_API_BASE_URL_ANDROID;\n} else if (Platform.OS === 'ios') {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_IOS : isStaging ? STAGING_API_BASE_URL_IOS : PRODUCTION_API_BASE_URL_IOS;\n} else {\n  API_BASE_URL = isDevelopment ? DEV_API_BASE_URL_WEB : isStaging ? STAGING_API_BASE_URL_WEB : PRODUCTION_API_BASE_URL_WEB;\n}\n\n// Set up MEDIA_URL for images\nlet MEDIA_URL;\nif (isDevelopment) {\n  // In development, use the API base URL for media\n  MEDIA_URL = API_BASE_URL;\n} else if (isStaging) {\n  // In staging, use the staging media URL if available, otherwise fall back to API base URL\n  MEDIA_URL = STAGING_MEDIA_URL;\n} else {\n  // In production, use the production media URL if available, otherwise fall back to API base URL\n  MEDIA_URL = PRODUCTION_MEDIA_URL;\n}\n\ndebugLog(\"MBA1234: Selected API Base URL\", { API_BASE_URL });\ndebugLog(\"MBA1234: Selected Media URL\", { MEDIA_URL });\n\n/**\n * Returns the full URL for a media resource\n * @param {string} path - The media resource path\n * @returns {string} The full URL to the media resource\n */\nconst getMediaUrl = (path) => {\n  // If the path is already a full URL, return it as is\n  if (!path) return null;\n  if (path.startsWith('http')) return path;\n  // Otherwise, prepend the media base URL\n  return `${MEDIA_URL}${path}`;\n};\n\nexport { API_BASE_URL, MEDIA_URL, getMediaUrl };\n","import React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config/config';\nimport { Dimensions, Platform } from 'react-native';\nimport { navigate } from '../../App';\nimport { navigateToFrom } from '../components/Navigation';\nimport { initStripe } from '../utils/StripeService';\nimport { getUserName, getTimeSettings } from '../api/API';\nimport platformNavigation from '../utils/platformNavigation';\n\nexport const SCREEN_WIDTH = Dimensions.get('window').width;\nexport const SCREEN_HEIGHT = Dimensions.get('window').height;\n\n// Create a debug logging utility\nlet debugEnabled = true;\n\nexport const setDebugEnabled = (enabled) => {\n  debugEnabled = enabled;\n};\n\nexport const debugLog = (message, ...data) => {\n  if (debugEnabled && !message.includes('MBA3210')) {\n    if (data.length > 0) {\n      console.log(`${message}:`, ...data);\n    } else {\n      console.log(`${message}`);\n    }\n  }\n};\n\n// Authentication state management class with proper synchronization\nclass AuthService {\n  constructor() {\n    this.accessToken = null;\n    this.refreshToken = null;\n    this.isRefreshing = false;\n    this.refreshSubscribers = [];\n    this.tokenExpiryTime = null;\n    this.lastValidation = null;\n    this.authStateCallbacks = new Set();\n    this.isSigningOut = false;\n    this.lastTokenCheck = 0;\n    \n    // For testing - reduce refresh thresholds\n    this.TOKEN_REFRESH_THRESHOLD = 10 * 1000; // 10 seconds - increased for safety buffer\n    // This provides protection against:\n    // 1. Slow backend responses (2-5 seconds)\n    // 2. Network latency/timeouts\n    // 3. High server load scenarios\n    // Token refresh will start with 10s buffer, plenty of time for completion\n    this.TOKEN_PREEMPTIVE_REFRESH = 3 * 1000; // 3 seconds for testing\n    this.VALIDATION_CACHE_TIME = 30 * 1000; // 30 seconds cache\n    \n    // console.log('MBA1111 AuthService initialized with increased safety buffer (10s refresh threshold)');\n  }\n\n  // Register callback for auth state changes\n  onAuthStateChange(callback) {\n    this.authStateCallbacks.add(callback);\n    return () => this.authStateCallbacks.delete(callback);\n  }\n\n  // Notify all callbacks of auth state changes\n  notifyAuthStateChange(state) {\n    debugLog('MBA1111 Notifying auth state change:', state);\n    this.authStateCallbacks.forEach(callback => {\n      try {\n        callback(state);\n      } catch (error) {\n        console.error('MBA1111 Error in auth state callback:', error);\n      }\n    });\n  }\n\n  // Parse JWT token to get expiry time\n  parseJwt(token) {\n    try {\n      if (!token || typeof token !== 'string') {\n        debugLog('MBA1111 parseJwt: Invalid token provided');\n        return null;\n      }\n      \n      const parts = token.split('.');\n      if (parts.length !== 3) {\n        debugLog('MBA1111 parseJwt: Token does not have 3 parts');\n        return null;\n      }\n      \n      const base64Url = parts[1];\n      if (!base64Url) {\n        debugLog('MBA1111 parseJwt: No payload part found');\n        return null;\n      }\n      \n      let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      \n      // Add padding if needed\n      const padding = base64.length % 4;\n      if (padding) {\n        base64 += '='.repeat(4 - padding);\n      }\n      \n      // Decode base64 using platform-appropriate method\n      let decoded;\n      if (Platform.OS === 'web') {\n        // Use browser's atob\n        decoded = atob(base64);\n      } else {\n        // React Native - use built-in base64 support through global atob or Buffer\n        try {\n          if (typeof atob !== 'undefined') {\n            decoded = atob(base64);\n          } else if (typeof global !== 'undefined' && global.atob) {\n            decoded = global.atob(base64);\n          } else {\n            // Fallback - this should not be needed in modern RN\n            debugLog('MBA1111 parseJwt: No base64 decode method available');\n            return null;\n          }\n        } catch (e) {\n          debugLog('MBA1111 parseJwt: Error during base64 decode:', e);\n          throw e;\n        }\n      }\n      \n      return JSON.parse(decoded);\n      \n    } catch (error) {\n      console.error('MBA1111 Error parsing JWT:', error);\n      debugLog('MBA1111 parseJwt error details:', {\n        tokenLength: token ? token.length : 0,\n        tokenStart: token ? token.substring(0, 50) : 'null',\n        errorMessage: error.message,\n        errorStack: error.stack\n      });\n      return null;\n    }\n  }\n\n  // Calculate time until token expires in milliseconds\n  getTimeUntilExpiry(token) {\n    const parsedToken = this.parseJwt(token);\n    if (!parsedToken || !parsedToken.exp) return 0;\n    \n    const expiryTime = parsedToken.exp * 1000; // Convert to milliseconds\n    this.tokenExpiryTime = expiryTime;\n    \n    return expiryTime - Date.now();\n  }\n\n  // Check if we should refresh the token\n  shouldRefreshToken(token) {\n    if (!token) return false;\n    \n    const timeUntilExpiry = this.getTimeUntilExpiry(token);\n    const shouldRefresh = timeUntilExpiry < this.TOKEN_REFRESH_THRESHOLD && timeUntilExpiry > 0;\n    \n    if (shouldRefresh) {\n      debugLog(`MBA1111 Token should be refreshed - expires in ${Math.round(timeUntilExpiry/1000)} seconds`);\n    }\n    \n    return shouldRefresh;\n  }\n\n  // Refresh JWT tokens\n  async refreshTokens() {\n    debugLog('MBA1111 refreshTokens called');\n    \n    try {\n      // Prevent concurrent refresh attempts\n      if (this.isRefreshing) {\n        debugLog('MBA1111 Token refresh already in progress, subscribing');\n        return new Promise((resolve, reject) => {\n          this.refreshSubscribers.push({ resolve, reject });\n          \n          // Add timeout to prevent hanging forever\n          setTimeout(() => {\n            const index = this.refreshSubscribers.findIndex(sub => sub.resolve === resolve);\n            if (index !== -1) {\n              this.refreshSubscribers.splice(index, 1);\n              reject(new Error('Token refresh timeout'));\n            }\n          }, 10000); // 10 second timeout\n        });\n      }\n      \n      this.isRefreshing = true;\n      this.refreshSubscribers = [];\n      \n      if (!this.refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      \n      // Check if refresh token is expired\n      const refreshTokenExpiry = this.getTimeUntilExpiry(this.refreshToken);\n      if (refreshTokenExpiry <= 0) {\n        debugLog('MBA1111 Refresh token is expired, cannot refresh');\n        throw new Error('Refresh token expired');\n      }\n      \n      const refreshStartTime = Date.now();\n      debugLog('MBA1111 Making refresh token request to backend');\n      \n      // Make the actual refresh request without using interceptors\n      const response = await fetch(`${API_BASE_URL}/api/token/refresh/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          refresh: this.refreshToken\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        debugLog('MBA1111 Token refresh failed with status:', response.status, errorData);\n        throw new Error(`Token refresh failed: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      const { access, refresh } = data;\n      \n      if (!access) {\n        throw new Error('No access token in refresh response');\n      }\n      \n      this.accessToken = access;\n      \n      // Handle refresh token rotation if new refresh token is provided\n      if (refresh) {\n        debugLog('MBA1111 New refresh token received, updating stored refresh token');\n        this.refreshToken = refresh;\n        await setStorage('refreshToken', refresh);\n      }\n      \n      // Store new access token\n      await setStorage('userToken', access);\n      \n      const refreshDuration = Date.now() - refreshStartTime;\n      debugLog(`MBA1111 Token refresh successful in ${refreshDuration}ms`);\n      \n      // Resolve all waiting requests\n      this.refreshSubscribers.forEach(({ resolve }) => {\n        try {\n          resolve(access);\n        } catch (error) {\n          debugLog('MBA1111 Error resolving refresh subscriber:', error);\n        }\n      });\n      \n      return access;\n      \n    } catch (error) {\n      debugLog('MBA1111 Token refresh failed:', error);\n      \n      // Reject all waiting requests\n      this.refreshSubscribers.forEach(({ reject }) => {\n        try {\n          reject(error);\n        } catch (err) {\n          debugLog('MBA1111 Error rejecting refresh subscriber:', err);\n        }\n      });\n      \n      // Clear invalid tokens\n      await this.clearTokens();\n      throw error;\n      \n    } finally {\n      this.isRefreshing = false;\n      this.refreshSubscribers = [];\n      debugLog('MBA1111 Token refresh process completed');\n    }\n  }\n\n  // Get access token with automatic refresh\n  async getAccessToken() {\n    // If signing out, return null\n    if (this.isSigningOut) {\n      debugLog('MBA1111 getAccessToken: signing out, returning null');\n      return null;\n    }\n    \n    // Check if current token is expired\n    if (this.accessToken) {\n      const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n      if (timeUntilExpiry <= 0) {\n        debugLog('MBA1111 getAccessToken: current token is expired, clearing it');\n        this.accessToken = null;\n      }\n    }\n    \n    // If no access token but we have refresh token, try to refresh\n    if (!this.accessToken && this.refreshToken) {\n      debugLog('MBA1111 getAccessToken: no access token but have refresh token, attempting refresh');\n      try {\n        await this.refreshTokens();\n      } catch (error) {\n        debugLog('MBA1111 getAccessToken: failed to refresh token:', error);\n        return null;\n      }\n    }\n    \n    // Check if current token needs refresh (but isn't expired yet)\n    if (this.accessToken && this.shouldRefreshToken(this.accessToken)) {\n      const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n      if (timeUntilExpiry > 0) {\n        debugLog('MBA1111 getAccessToken: token needs refresh but still valid, attempting refresh');\n        try {\n          await this.refreshTokens();\n        } catch (error) {\n          debugLog('MBA1111 getAccessToken: failed to refresh token:', error);\n          // If refresh fails but token is still valid, return current token\n          if (this.getTimeUntilExpiry(this.accessToken) > 0) {\n            debugLog('MBA1111 getAccessToken: refresh failed but token still valid, returning current token');\n            return this.accessToken;\n          }\n          return null;\n        }\n      }\n    }\n    \n    if (this.accessToken) {\n      const timeUntilExpiry = this.getTimeUntilExpiry(this.accessToken);\n      if (timeUntilExpiry > 0) {\n        return this.accessToken;\n      } else {\n        debugLog('MBA1111 getAccessToken: token is expired, returning null');\n        this.accessToken = null;\n        return null;\n      }\n    } else {\n      debugLog('MBA1111 getAccessToken: returning null, no token available');\n      return null;\n    }\n  }\n\n  // Validate token with caching\n  async validateToken(token) {\n    const now = Date.now();\n    \n    // Use client-side validation for recent checks\n    if (this.lastValidation && now - this.lastValidation < this.VALIDATION_CACHE_TIME) {\n      debugLog('MBA1111 Using cached token validation');\n      const timeUntilExpiry = this.getTimeUntilExpiry(token);\n      return timeUntilExpiry > 0;\n    }\n    \n    debugLog('MBA1111 Performing server-side token validation');\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/token/verify/`, {\n        token: token\n      });\n\n      this.lastValidation = now;\n      // debugLog('MBA1111 Token validation successful');\n      return response.status === 200;\n    } catch (error) {\n      debugLog('MBA1111 Token validation failed:', error.response?.status);\n      return false;\n    }\n  }\n\n  // Clear tokens from storage\n  async clearTokens() {\n    try {\n      if (Platform.OS === 'web') {\n        // Clear from sessionStorage (original behavior)\n        sessionStorage.removeItem('userToken');\n        sessionStorage.removeItem('refreshToken');\n      } else {\n        await AsyncStorage.multiRemove(['userToken', 'refreshToken']);\n      }\n      this.accessToken = null;\n      this.refreshToken = null;\n    } catch (error) {\n      console.error('MBA2ounf4f Error clearing tokens:', error);\n    }\n  }\n\n  // Set tokens in storage\n  async setTokens(accessToken, refreshToken) {\n    try {\n      this.accessToken = accessToken;\n      this.refreshToken = refreshToken;\n\n      if (Platform.OS === 'web') {\n        // Use sessionStorage for web (original behavior)\n        sessionStorage.setItem('userToken', accessToken);\n        sessionStorage.setItem('refreshToken', refreshToken);\n      } else {\n        await AsyncStorage.multiSet([\n          ['userToken', accessToken],\n          ['refreshToken', refreshToken]\n        ]);\n      }\n    } catch (error) {\n      console.error('MBA1111 Error setting tokens:', error);\n      throw error;\n    }\n  }\n\n  // Validate JWT format without full parsing\n  isValidJWT(token) {\n    if (!token || typeof token !== 'string') return false;\n    \n    const parts = token.split('.');\n    if (parts.length !== 3) return false;\n    \n    // Check if each part has content\n    return parts.every(part => part && part.length > 0);\n  }\n\n  // Initialize auth service\n  async initialize() {\n    debugLog('MBA2ounf4f Starting AuthService.initialize()');\n    try {\n      let accessToken, refreshToken;\n      \n      debugLog('MBA2ounf4f Attempting to get stored tokens');\n      accessToken = await getStorage('userToken');\n      refreshToken = await getStorage('refreshToken');\n      \n      debugLog('MBA2ounf4f Raw tokens retrieved:', {\n        accessTokenExists: !!accessToken,\n        refreshTokenExists: !!refreshToken,\n        accessTokenLength: accessToken ? accessToken.length : 0,\n        refreshTokenLength: refreshToken ? refreshToken.length : 0,\n        accessTokenStart: accessToken ? accessToken.substring(0, 20) + '...' : 'null',\n        refreshTokenStart: refreshToken ? refreshToken.substring(0, 20) + '...' : 'null'\n      });\n      \n      // Validate tokens before using them\n      if (accessToken && !this.isValidJWT(accessToken)) {\n        debugLog('MBA2ounf4f Invalid access token found, clearing it', {\n          tokenLength: accessToken.length,\n          tokenStart: accessToken.substring(0, 20)\n        });\n        accessToken = null;\n        await setStorage('userToken', '');\n      }\n      \n      if (refreshToken && !this.isValidJWT(refreshToken)) {\n        debugLog('MBA2ounf4f Invalid refresh token found, clearing it', {\n          tokenLength: refreshToken.length,\n          tokenStart: refreshToken.substring(0, 20)\n        });\n        refreshToken = null;\n        await setStorage('refreshToken', '');\n      }\n      \n      this.accessToken = accessToken;\n      this.refreshToken = refreshToken;\n\n      debugLog('MBA2ounf4f Tokens retrieved and validated:', {\n        hasAccessToken: !!this.accessToken,\n        hasRefreshToken: !!this.refreshToken\n      });\n      \n      // Check if token needs immediate refresh\n      if (this.accessToken && this.shouldRefreshToken(this.accessToken)) {\n        debugLog('MBA2ounf4f Token needs refresh during init');\n        try {\n          await this.refreshTokens();\n        } catch (err) {\n          debugLog('MBA2ounf4f Failed to refresh token during init:', err);\n        }\n      }\n\n      return {\n        hasAccessToken: !!this.accessToken,\n        hasRefreshToken: !!this.refreshToken\n      };\n    } catch (error) {\n      console.error('MBA2ounf4f Error in AuthService.initialize():', error);\n      return { hasAccessToken: false, hasRefreshToken: false };\n    }\n  }\n\n  // Force sign out with reason\n  forceSignOut(reason) {\n    if (this.isSigningOut) return;\n    \n    debugLog(`MBA1111 Force sign out triggered. Reason: ${reason}`);\n    this.isSigningOut = true;\n    \n    // Notify auth state change\n    this.notifyAuthStateChange({\n      type: 'FORCE_SIGN_OUT',\n      reason: reason,\n      timestamp: new Date().toISOString()\n    });\n  }\n}\n\nexport const AuthContext = createContext();\n\n// Storage helper functions with platform-specific persistence strategies\nexport const getStorage = async (key) => {\n  try {\n    if (Platform.OS === 'web') {\n      // For authentication tokens on web, use sessionStorage for session persistence (original behavior)\n      // For other data, check both sessionStorage and localStorage\n      if (key === 'userToken' || key === 'refreshToken') {\n        const value = sessionStorage.getItem(key);\n        return value;\n      } else {\n        // For non-auth data, prefer sessionStorage but fallback to localStorage\n        const sessionValue = sessionStorage.getItem(key);\n        if (sessionValue) {\n          return sessionValue;\n        }\n        const localValue = localStorage.getItem(key);\n        return localValue;\n      }\n    } else {\n      const value = await AsyncStorage.getItem(key);\n      return value;\n    }\n  } catch (error) {\n    console.error('MBA2ounf4f Error getting from storage:', error);\n    return null;\n  }\n};\n\nexport const setStorage = async (key, value) => {\n  try {\n    if (Platform.OS === 'web') {\n      // For authentication tokens on web, use sessionStorage (original behavior)\n      if (key === 'userToken' || key === 'refreshToken') {\n        sessionStorage.setItem(key, value);\n      } else {\n        // For other data, use sessionStorage\n        sessionStorage.setItem(key, value);\n      }\n    } else {\n      await AsyncStorage.setItem(key, value);\n    }\n  } catch (error) {\n    console.error('MBA2ounf4f Error setting storage:', error);\n  }\n};\n\n// Production flag\nconst is_PRODUCTION = false;\n\nexport const IsProduction = () => {\n  return is_PRODUCTION;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const authService = useRef(new AuthService());\n  const isInitializedRef = useRef(false);\n  const signOutTimeoutRef = useRef(null);\n  \n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [userRole, setUserRole] = useState(null);\n  const [isApprovedProfessional, setIsApprovedProfessional] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\n  const [firstName, setFirstName] = useState('');\n  const [name, setName] = useState('');\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const [timeSettings, setTimeSettings] = useState({\n    timezone: 'UTC',\n    timezone_abbrev: 'UTC',\n    use_military_time: false\n  });\n  const [is_prototype, setIsPrototype] = useState(false);\n  const [is_DEBUG, setIsDebug] = useState(true);\n  // Platform-aware redirect effect for users without tokens on protected routes\n  // NOTE: Only run this on mobile - web uses React Navigation linking for route protection\n  useEffect(() => {\n    // Skip redirect logic entirely on web - React Navigation linking handles it\n    if (Platform.OS === 'web') {\n      return;\n    }\n    \n    // Don't check for redirects until auth has been initialized\n    if (!isInitializedRef.current) {\n      debugLog('MBA1111 AUTH REDIRECT: Auth not yet initialized, skipping redirect check');\n      return;\n    }\n    \n    if (!loading && !isSignedIn) {\n      try {\n        // Get current route information using platform navigation\n        const currentRouteInfo = platformNavigation.getCurrentRoute();\n        \n        // Safety check: ensure currentRouteInfo is valid\n        if (!currentRouteInfo) {\n          debugLog('MBA1111 AUTH REDIRECT: currentRouteInfo is null/undefined, skipping redirect check');\n          return;\n        }\n      \n      // Handle platform-specific route checking (mobile only now)\n      let isOnProtectedRoute = false;\n      \n      // This should never execute on web due to early return above, but keeping for safety\n      if (Platform.OS === 'web') {\n        const currentPath = currentRouteInfo.path;\n        \n        debugLog(`MBA1111 AUTH REDIRECT WEB: Full URL: ${currentRouteInfo.href || 'N/A'}`);\n        debugLog(`MBA1111 AUTH REDIRECT WEB: Route name: ${currentRouteInfo.name}`);\n        debugLog(`MBA1111 AUTH REDIRECT WEB: Path: ${currentPath}`);\n        \n        // List of protected paths for web\n        const protectedWebPaths = [\n          '/Dashboard',\n          '/MyProfile', \n          '/my-profile',\n          '/MessageHistory',\n          '/message-history',\n          '/OwnerHistory',\n          '/BecomeProfessional',\n          '/become-professional',\n          '/More',\n          '/Owners',\n          '/AvailabilitySettings',\n          '/Settings',\n          '/ProfessionalSettings',\n          '/ProfessionalProfile',\n          '/MyContracts',\n          '/ChangePassword',\n          '/change-password',\n          '/MyBookings',\n          '/ServiceManager',\n          '/service-manager',\n          '/TestToast',\n          '/Connections',\n          '/connections'\n        ];\n        \n        // Check if current path matches any protected path\n        isOnProtectedRoute = protectedWebPaths.some(path => {\n          const matches = currentPath.startsWith(path) || currentPath === path;\n          if (matches) {\n            debugLog(`MBA1111 AUTH REDIRECT WEB: Matched protected path ${path} with current path ${currentPath}`);\n          }\n          return matches;\n        });\n      } else {\n        // Mobile apps: use route names instead of paths\n        const currentRouteName = currentRouteInfo.name;\n        \n        debugLog(`MBA1111 AUTH REDIRECT MOBILE: Route name: ${currentRouteName}`);\n        \n        // List of protected route names for mobile\n        const protectedMobileRoutes = [\n          'Dashboard',\n          'MyProfile',\n          'MessageHistory',\n          'OwnerHistory',\n          'BecomeProfessional',\n          'More',\n          'Owners',\n          'AvailabilitySettings',\n          'Settings',\n          'ProfessionalSettings',\n          'ProfessionalProfile',\n          'MyContracts',\n          'ChangePassword',\n          'MyBookings',\n          'ServiceManager',\n          'TestToast',\n          'Connections'\n        ];\n        \n        // Check if current route name matches any protected route\n        isOnProtectedRoute = protectedMobileRoutes.includes(currentRouteName);\n        \n        if (isOnProtectedRoute) {\n          debugLog(`MBA1111 AUTH REDIRECT MOBILE: On protected route ${currentRouteName}`);\n        }\n      }\n      \n      if (isOnProtectedRoute) {\n        debugLog(`MBA1111 AUTH REDIRECT: User not signed in on protected route, redirecting to SignIn`);\n        \n        // Use platform navigation for redirect\n        try {\n          // First try using existing navigate function\n          navigate('SignIn');\n          debugLog('MBA1111 AUTH REDIRECT: Navigation to SignIn successful');\n        } catch (error) {\n          debugLog('MBA1111 AUTH REDIRECT: Navigation failed, using platform navigation fallback:', error);\n          // Fallback to platform navigation redirect\n          platformNavigation.redirectToSignIn(null);\n        }\n      } else {\n        debugLog(`MBA1111 AUTH REDIRECT: Current route is not protected, no redirect needed`);\n      }\n      } catch (error) {\n        debugLog('MBA1111 AUTH REDIRECT: Error during redirect check:', error);\n        // Don't crash the app, just log the error and continue\n      }\n    } else {\n      if (loading) {\n        debugLog('MBA1111 AUTH REDIRECT: Still loading, skipping redirect check');\n      }\n      if (isSignedIn) {\n        debugLog('MBA1111 AUTH REDIRECT: User is signed in, no redirect needed');\n      }\n    }\n  }, [isSignedIn, loading]);\n\n  // Sign out function with comprehensive cleanup and reason tracking\n  const signOut = async (reason = 'user_action') => {\n    debugLog('MBA1111 signOut called with reason:', reason);\n    \n    try {\n      // Prevent concurrent sign out operations\n      if (authService.current.isSigningOut) {\n        debugLog('MBA1111 Sign out already in progress, skipping');\n        return;\n      }\n      \n      authService.current.isSigningOut = true;\n      \n      // For token expiry or validation failures, immediately set signed out state\n      // to prevent user from seeing stale content\n      if (reason.includes('validation') || reason.includes('expired') || reason.includes('no_valid')) {\n        debugLog('MBA1111 Immediate state update for auth failure');\n        setIsSignedIn(false);\n        setLoading(false); // Ensure loading is false so redirect can happen\n      }\n      \n      // Clear any pending sign out\n      if (signOutTimeoutRef.current) {\n        clearTimeout(signOutTimeoutRef.current);\n        signOutTimeoutRef.current = null;\n      }\n      \n      // Close websocket connection first\n      try {\n        const websocketManager = (await import('../utils/websocket')).default;\n        websocketManager.disconnect();\n        debugLog('MBA1111 WebSocket disconnected during signOut');\n      } catch (error) {\n        debugLog('MBA1111 Error disconnecting websocket:', error);\n      }\n      \n      // Clear tokens and storage\n      await authService.current.clearTokens();\n      await AsyncStorage.multiRemove(['userRole', 'isApprovedProfessional']);\n      \n      // Clear all storage items for web (both localStorage and sessionStorage)\n      if (Platform.OS === 'web') {\n        // Clear from localStorage\n        localStorage.removeItem('userRole');\n        localStorage.removeItem('isApprovedProfessional');\n        localStorage.removeItem('currentProfessional');\n        localStorage.removeItem('userToken');\n        localStorage.removeItem('refreshToken');\n        \n        // Clear from sessionStorage\n        sessionStorage.removeItem('userRole');\n        sessionStorage.removeItem('isApprovedProfessional');\n        sessionStorage.removeItem('currentProfessional');\n        sessionStorage.removeItem('userToken');\n        sessionStorage.removeItem('refreshToken');\n        // Mark as explicit sign out for web\n        sessionStorage.setItem('explicitSignOut', 'true');\n      }\n      \n      debugLog('MBA1111 Storage cleared during sign out');\n      \n      // Reset all auth state\n      setIsSignedIn(false);\n      setFirstName('');\n      setName('');\n      setUserRole(null);\n      setIsApprovedProfessional(false);\n      setTimeSettings({\n        timezone: 'UTC',\n        timezone_abbrev: 'UTC',\n        use_military_time: false\n      });\n      \n      // Clear auth service state\n      authService.current.accessToken = null;\n      authService.current.refreshToken = null;\n      \n      // Navigate to sign in with platform-specific handling\n      const navigateToSignIn = () => {\n        try {\n          debugLog('MBA1111 Navigating to SignIn screen due to:', reason);\n          \n          if (Platform.OS === 'web') {\n            // For web, use direct URL navigation to avoid conflicts with React Navigation\n            if (typeof window !== 'undefined' && window.location) {\n              window.location.href = '/signin';\n              debugLog('MBA1111 Web redirect to /signin successful');\n            } else {\n              // Fallback to navigate function\n              navigate('SignIn');\n            }\n          } else {\n            // For mobile, use React Navigation\n            navigate('SignIn');\n          }\n        } catch (navError) {\n          console.error('MBA1111 Navigation error during signOut:', navError);\n          // Final fallback: use platform navigation\n          try {\n            platformNavigation.redirectToSignIn(null);\n          } catch (fallbackError) {\n            console.error('MBA1111 Platform navigation fallback also failed:', fallbackError);\n          }\n        }\n      };\n      \n      // For auth failures, navigate immediately\n      if (reason.includes('validation') || reason.includes('expired') || reason.includes('no_valid') || reason.includes('server_validation')) {\n        debugLog('MBA1111 Immediate navigation for auth failure');\n        navigateToSignIn();\n      } else {\n        // For user-initiated sign outs, small delay\n        setTimeout(navigateToSignIn, 0);\n      }\n      \n      debugLog('MBA1111 Sign out completed successfully');\n      \n    } catch (error) {\n      debugLog('MBA1111 Error during sign out:', error);\n      \n      // Even if there's an error, ensure we're in signed out state\n      setIsSignedIn(false);\n      setLoading(false);\n      \n      // Try to navigate anyway\n      try {\n        navigate('SignIn');\n      } catch (navError) {\n        console.error('MBA1111 Failed to navigate after signOut error:', navError);\n      }\n    } finally {\n      authService.current.isSigningOut = false;\n    }\n  };\n\n  // Listen for auth state changes from AuthService\n  useEffect(() => {\n    const unsubscribe = authService.current.onAuthStateChange((state) => {\n      debugLog('MBA1111 Auth state change received:', state);\n      \n      if (state.type === 'FORCE_SIGN_OUT') {\n        // Clear the signing out flag and trigger sign out\n        authService.current.isSigningOut = false;\n        signOut(state.reason);\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  // Set up axios interceptors with consolidated error handling\n  useEffect(() => {\n    debugLog('MBA1111 Setting up consolidated axios interceptors');\n    \n    // Circuit breaker for 401 errors with enhanced tracking\n    let consecutiveAuth401Errors = 0;\n    let lastErrorTime = 0;\n    const MAX_401_RETRIES = 3;\n    const ERROR_RESET_TIME = 60000; // Reset error count after 1 minute\n    \n    const requestInterceptor = axios.interceptors.request.use(\n      async (config) => {\n        // debugLog(`MBA1111 Request interceptor called for: ${config.method?.toUpperCase()} ${config.url}`);\n        \n        if (!is_prototype) {\n          // Check if this is an invitation verification endpoint - ONLY verification should be public\n          // NOTE: Invitation acceptance requires authentication and is handled during registration\n          const isInviteVerification = config.url.includes('/api/users/v1/invitations/') && \n                                      config.url.includes('/verify/');\n          \n          if (isInviteVerification) {\n            debugLog(`MBAnb23ou4bf954 Skipping auth for invite verification endpoint: ${config.url}`);\n            return config;\n          }\n          \n          try {\n            const token = await authService.current.getAccessToken();\n            if (token) {\n              config.headers.Authorization = `Bearer ${token}`;\n              \n              // Log for invitation acceptance requests\n              if (config.url.includes('/api/users/v1/invitations/') && config.url.includes('/accept/')) {\n                debugLog(`MBAnb23ou4bf954 Added auth token for invitation acceptance: ${config.url}`);\n              }\n            } else {\n              debugLog(`MBAnb23ou4bf954 No token available for request: ${config.method?.toUpperCase()} ${config.url}`);\n              \n              // If this is an invitation acceptance endpoint which requires authentication but we have no token\n              if (config.url.includes('/api/users/v1/invitations/') && config.url.includes('/accept/')) {\n                debugLog(`MBAnb23ou4bf954 ERROR: Invitation acceptance requires authentication but no token available: ${config.url}`);\n                \n                // For acceptance endpoints, we MUST have a token\n                const error = new Error('Authentication required for invitation acceptance');\n                error.name = 'NoTokenError';\n                throw error;\n              }\n            }\n          } catch (error) {\n            console.error('MBA1111 Error getting access token for request:', error);\n            debugLog(`MBA9999 Token error for request: ${config.method?.toUpperCase()} ${config.url}`, error);\n            \n            // If the error is due to auth service issues and UI thinks user is signed in,\n            // this could indicate state inconsistency\n            if (isSignedIn && error.message && (\n              error.message.includes('No authentication token') || \n              error.message.includes('expired') ||\n              error.message.includes('invalid')\n            )) {\n              debugLog('MBA9999 Auth service error while UI shows signed in - potential state inconsistency');\n              setTimeout(() => {\n                signOut('auth_service_error_while_signed_in');\n              }, 0);\n            }\n            \n            throw error;\n          }\n        } else {\n          debugLog(`MBA1111 Prototype mode - skipping token for: ${config.method?.toUpperCase()} ${config.url}`);\n        }\n        \n        return config;\n      },\n      (error) => {\n        debugLog('MBA1111 Request interceptor error:', error);\n        return Promise.reject(error);\n      }\n    );\n\n    const responseInterceptor = axios.interceptors.response.use(\n      (response) => {\n        // debugLog(`MBA1111 Response success: ${response.status} ${response.config.method?.toUpperCase()} ${response.config.url}`);\n        \n        // Reset circuit breaker on successful response\n        const now = Date.now();\n        if (now - lastErrorTime > ERROR_RESET_TIME) {\n          consecutiveAuth401Errors = 0;\n        }\n        return response;\n      },\n      async (error) => {\n        const originalRequest = error.config;\n        \n        debugLog(`MBA1111 Response error: ${error.response?.status} ${error.config?.method?.toUpperCase()} ${error.config?.url}`);\n        \n        // Skip handling certain error types that should not trigger auth logic\n        if (error.name === 'NoTokenError' || error.name === 'AbortError') {\n          return Promise.reject(error);\n        }\n        \n        // Handle 401 errors with enhanced circuit breaker\n        if (error.response?.status === 401 && originalRequest && !originalRequest._retry) {\n          const now = Date.now();\n          \n          // Reset counter if enough time has passed\n          if (now - lastErrorTime > ERROR_RESET_TIME) {\n            consecutiveAuth401Errors = 0;\n          }\n          \n          consecutiveAuth401Errors++;\n          lastErrorTime = now;\n          \n          debugLog(`MBA2ounf4f 401 error detected (${consecutiveAuth401Errors}/${MAX_401_RETRIES}), attempting token refresh`, {\n            url: originalRequest.url,\n            method: originalRequest.method\n          });\n          \n          // Enhanced circuit breaker: Stop trying after too many consecutive failures\n          if (consecutiveAuth401Errors >= MAX_401_RETRIES) {\n            debugLog('MBA2ounf4f Circuit breaker triggered: Too many consecutive 401 errors, forcing sign out');\n            authService.current.forceSignOut('too_many_auth_failures');\n            return Promise.reject(error);\n          }\n          \n          originalRequest._retry = true;\n          \n          try {\n            // Skip auth logging calls to prevent infinite loops\n            const isAuthLoggingCall = originalRequest.url?.includes('/api/core/log-auth-event/');\n            const isMessageCall = originalRequest.url?.includes('/api/messages/');\n            const isConversationCall = originalRequest.url?.includes('/api/conversations/');\n            \n            // Be extra careful with message/conversation calls during auth issues\n            if (isMessageCall || isConversationCall) {\n              debugLog('MBA9999 Skipping token refresh for message/conversation call during auth issues to prevent loops');\n              throw new Error('Auth failed for protected call');\n            }\n            \n            if (!isAuthLoggingCall) {\n              // Only attempt refresh for non-logging calls\n              debugLog('MBA1111 Attempting token refresh for failed request');\n              \n              // Add timeout to token refresh\n              const refreshPromise = authService.current.refreshTokens();\n              const timeoutPromise = new Promise((_, reject) => \n                setTimeout(() => reject(new Error('Token refresh timeout')), 8000)\n              );\n              \n              await Promise.race([refreshPromise, timeoutPromise]);\n              \n              // Retry original request with new token\n              const newToken = await authService.current.getAccessToken();\n              if (newToken) {\n                originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                debugLog('MBA1111 Retrying request with new token');\n                return axios(originalRequest);\n              } else {\n                debugLog('MBA1111 No new token available after refresh');\n                throw new Error('No token available after refresh');\n              }\n            } else {\n              // For auth logging calls, just fail silently\n              debugLog('MBA1111 Auth logging call failed, not retrying to prevent loops');\n              throw error;\n            }\n          } catch (refreshError) {\n            debugLog('MBA1111 Token refresh failed:', refreshError);\n            \n            // If this was a timeout or repeated failure, force sign out\n            if (refreshError.message.includes('timeout') || consecutiveAuth401Errors >= 2) {\n              debugLog('MBA9999 Token refresh timeout or repeated failure, forcing sign out');\n              authService.current.forceSignOut('token_refresh_failed');\n            }\n            \n            throw error;\n          }\n        }\n        \n        // Log all network errors for debugging\n        debugLog('MBA2ounf4f Axios response interceptor error:', {\n          status: error.response?.status,\n          url: error.config?.url,\n          method: error.config?.method,\n          message: error.message,\n          isNetworkError: !error.response,\n          errorCode: error.code,\n          isBackendDown: error.code === 'ECONNREFUSED' || error.code === 'ERR_NETWORK'\n        });\n        \n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, [is_prototype]);\n\n  // Window focus handling with proper debouncing\n  useEffect(() => {\n    if (!isSignedIn || is_prototype) return;\n    \n    let focusCheckTimeout = null;\n    \n    const handleWindowFocus = () => {\n      // Clear any pending check\n      if (focusCheckTimeout) {\n        clearTimeout(focusCheckTimeout);\n      }\n      \n      // Debounce the focus check\n      focusCheckTimeout = setTimeout(async () => {\n        // debugLog('MBA1111 Window regained focus, checking token');\n        \n        if (authService.current && !authService.current.isSigningOut) {\n          const token = authService.current.accessToken;\n          if (token && authService.current.shouldRefreshToken(token)) {\n            debugLog('MBA1111 Token needs refresh on focus');\n            try {\n              await authService.current.refreshTokens();\n            } catch (error) {\n              debugLog('MBA1111 Error refreshing token on focus:', error);\n            }\n          }\n        }\n      }, 500); // 500ms debounce\n    };\n    \n    // Set up event listeners only for web\n    if (Platform.OS === 'web' && typeof window !== 'undefined' && typeof document !== 'undefined') {\n      window.addEventListener('focus', handleWindowFocus);\n      \n      document.addEventListener('visibilitychange', () => {\n        if (document.visibilityState === 'visible') {\n          handleWindowFocus();\n        }\n      });\n    }\n    \n    return () => {\n      if (focusCheckTimeout) {\n        clearTimeout(focusCheckTimeout);\n      }\n      \n      if (Platform.OS === 'web' && typeof window !== 'undefined' && typeof document !== 'undefined') {\n        window.removeEventListener('focus', handleWindowFocus);\n        document.removeEventListener('visibilitychange', handleWindowFocus);\n      }\n    };\n  }, [isSignedIn, is_prototype]);\n\n  // Initialize auth state with debounce protection for rapid refreshes\n  useEffect(() => {\n    let initTimeout;\n    \n    const init = async () => {\n      if (isInitializedRef.current) return;\n      \n      // Add small delay for web to prevent race conditions on rapid refresh\n      if (Platform.OS === 'web') {\n        await new Promise(resolve => setTimeout(resolve, 50));\n      }\n      \n      try {\n        debugLog('MBA1111 Initializing auth state');\n        \n        const { hasAccessToken, hasRefreshToken } = await authService.current.initialize();\n        \n        if (hasAccessToken || hasRefreshToken) {\n          debugLog('MBA1111 Found stored tokens, validating...');\n          \n          // First, check if we have any valid token WITHOUT attempting refresh\n          // This prevents the user from seeing content while being actually logged out\n          let storedAccessToken = await getStorage('userToken');\n          let storedRefreshToken = await getStorage('refreshToken');\n          \n          let hasValidToken = false;\n          \n          // Check if access token is valid (not expired)\n          if (storedAccessToken) {\n            const timeUntilExpiry = authService.current.getTimeUntilExpiry(storedAccessToken);\n            if (timeUntilExpiry > 0) {\n              debugLog('MBA1111 Access token is still valid');\n              hasValidToken = true;\n            } else {\n              debugLog('MBA1111 Access token is expired');\n            }\n          }\n          \n          // If access token is expired, check if refresh token is valid\n          if (!hasValidToken && storedRefreshToken) {\n            const refreshTimeUntilExpiry = authService.current.getTimeUntilExpiry(storedRefreshToken);\n            if (refreshTimeUntilExpiry > 0) {\n              debugLog('MBA1111 Refresh token is valid, attempting token refresh');\n              try {\n                // Attempt to refresh the token\n                await authService.current.refreshTokens();\n                hasValidToken = true;\n                debugLog('MBA1111 Token refresh successful during initialization');\n              } catch (error) {\n                debugLog('MBA1111 Token refresh failed during initialization:', error);\n                hasValidToken = false;\n              }\n            } else {\n              debugLog('MBA1111 Refresh token is also expired');\n            }\n          }\n          \n          if (hasValidToken) {\n            // Get the current valid token (either original or refreshed)\n            const token = await authService.current.getAccessToken();\n            if (token) {\n              try {\n                // Perform server-side validation to be absolutely sure\n                const isValid = await authService.current.validateToken(token);\n                if (isValid) {\n                  debugLog('MBA1111 Token validated successfully, setting up user session');\n                  setIsSignedIn(true);\n                  \n                  // Fetch user data\n                  await fetchUserName();\n                  const status = await getProfessionalStatus(token);\n                  \n                  // Check for stored user role preference\n                  let storedRole = null;\n                  try {\n                    storedRole = await getStorage('userRole');\n                  } catch (error) {\n                    console.error('MBA1111 Error getting stored role:', error);\n                  }\n                  \n                  // Use stored role if valid, otherwise use suggested role\n                  const finalRole = (storedRole && (storedRole === 'professional' || storedRole === 'petOwner')) \n                    ? storedRole \n                    : status.suggestedRole;\n                  \n                  debugLog('MBA1111 Role selection:', { \n                    storedRole, \n                    suggestedRole: status.suggestedRole, \n                    finalRole,\n                    isApprovedProfessional: status.isApprovedProfessional \n                  });\n                  \n                  setUserRole(finalRole);\n                  setIsApprovedProfessional(status.isApprovedProfessional);\n                  await fetchTimeSettings();\n                  \n                                    debugLog('MBA1111 User session restored successfully');\n                } else {\n                  debugLog('MBA1111 Server-side token validation failed, signing out');\n                  await signOut('server_validation_failed');\n                }\n              } catch (error) {\n                debugLog('MBA1111 Error during token validation, signing out:', error);\n                await signOut('validation_error');\n              }\n            } else {\n              debugLog('MBA1111 Could not retrieve access token, signing out');\n              await signOut('no_access_token');\n            }\n          } else {\n            debugLog('MBA1111 No valid tokens found, signing out');\n            await signOut('no_valid_tokens');\n          }\n        } else {\n          // No tokens available - this is normal for new users\n          debugLog('MBA1111 No tokens found during initialization - user needs to sign in');\n          // Don't call signOut here as it would trigger navigation for new users\n          // Just ensure they're in the signed out state\n          setIsSignedIn(false);\n          debugLog('MBA1111 Set isSignedIn to false due to no tokens');\n        }\n      } catch (error) {\n        console.error('MBA1111 Error initializing auth state:', error);\n        await signOut('initialization_error');\n      } finally {\n        setLoading(false);\n        debugLog('MBA1111 Auth initialization completed, loading set to false');\n        \n        isInitializedRef.current = true;\n        setIsInitialized(true);\n      }\n    };\n\n    // Use setTimeout to prevent rapid successive initialization attempts\n    initTimeout = setTimeout(init, Platform.OS === 'web' ? 10 : 0);\n    \n    return () => {\n      if (initTimeout) {\n        clearTimeout(initTimeout);\n      }\n    };\n  }, []);\n\n  // Fetch user name\n  const fetchUserName = async () => {\n    try {\n      debugLog('MBA1111 Fetching user name');\n      const userData = await getUserName();\n      debugLog('MBA1111 User name response:', userData);\n      setFirstName(userData.first_name);\n      setName(userData.name);\n    } catch (error) {\n      console.error('MBA1111 Error fetching user name:', error.response ? error.response.data : error.message);\n      setFirstName('');\n      setName('');\n    }\n  };\n\n  // Get professional status\n  const getProfessionalStatus = async (token) => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/api/professional-status/v1/`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      \n      debugLog('MBA1111 Professional status response:', response.data);\n\n      const { is_approved } = response.data;\n      \n      setIsApprovedProfessional(is_approved);\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('isApprovedProfessional', String(is_approved));\n      } else {\n        await AsyncStorage.setItem('isApprovedProfessional', String(is_approved));\n      }\n\n      return {\n        isApprovedProfessional: is_approved,\n        suggestedRole: is_approved ? 'professional' : 'petOwner'\n      };\n    } catch (error) {\n      console.error('MBA1111 Error getting professional status:', error.response?.data || error);\n      return {\n        isApprovedProfessional: false,\n        suggestedRole: 'petOwner'\n      };\n    }\n  };\n\n  // Sign in function\n  const signIn = async (token, refreshTokenValue, navigation) => {\n    try {\n      debugLog('MBA1111 Starting sign in process');\n\n      // Clear signing out flag\n      authService.current.isSigningOut = false;\n      \n      await authService.current.setTokens(token, refreshTokenValue);\n      setIsSignedIn(true);\n      \n      // Fetch user name immediately after setting tokens\n      await fetchUserName();\n      \n      // Fetch time settings immediately to ensure they're available\n      try {\n        const timeSettingsData = await getTimeSettings();\n        setTimeSettings(timeSettingsData);\n        debugLog('MBA1111 Time settings fetched during sign in:', timeSettingsData);\n      } catch (timeError) {\n        console.error('MBA1111 Error fetching time settings during sign in:', timeError);\n      }\n      \n      const status = await getProfessionalStatus(token);\n      const initialRole = status.suggestedRole;\n      \n      setUserRole(initialRole);\n      setIsApprovedProfessional(status.isApprovedProfessional);\n      \n      // Store the role\n      if (Platform.OS === 'web') {\n        sessionStorage.setItem('userRole', initialRole);\n      } else {\n        await AsyncStorage.setItem('userRole', initialRole);\n      }\n\n      debugLog('MBA1111 Sign in successful:', { initialRole, isApprovedProfessional: status.isApprovedProfessional });\n\n      // Navigate to dashboard after successful sign in\n      if (navigation) {\n        setTimeout(() => {\n          navigateToFrom(navigation, 'Dashboard', 'SignIn');\n        }, 0);\n      }\n\n      return {\n        userRole: initialRole,\n        isApprovedProfessional: status.isApprovedProfessional\n      };\n    } catch (error) {\n      debugLog('MBA1111 Sign in error:', error);\n      console.error('MBA1111 Error during sign in:', error);\n      throw error;\n    }\n  };\n\n  // Switch role function\n  const switchRole = async (navigation) => {\n    if (isApprovedProfessional) {\n      debugLog('MBA1111 Switching role, current role:', userRole);\n      \n      const newRole = userRole === 'professional' ? 'petOwner' : 'professional';\n      setUserRole(newRole);\n      try {\n        if (Platform.OS === \"web\") {\n          sessionStorage.setItem('userRole', newRole);\n        } else {\n          await AsyncStorage.setItem('userRole', newRole);\n        }\n        \n        // Navigate to Dashboard if switching to pet owner from Connections screen\n        const currentRoute = navigation?.getCurrentRoute?.()?.name;\n        if (newRole === 'petOwner' && currentRoute === 'Connections') {\n          debugLog('MBA1111 Navigating to Dashboard from Connections when switching to pet owner');\n          navigate('Dashboard');\n        }\n        \n        debugLog('MBA1111 Role switched to:', newRole);\n      } catch (error) {\n        console.error('MBA1111 Error updating role in storage:', error);\n      }\n    } else {\n      console.log('MBA1111 User is not an approved professional, cannot switch roles');\n    }\n  };\n\n  // Fetch time settings\n  const fetchTimeSettings = async () => {\n    if (is_prototype) return;\n    \n    try {\n      const settings = await getTimeSettings();\n      setTimeSettings(settings);\n      debugLog('MBA1111 Time settings response:', settings);\n    } catch (error) {\n      console.error('MBA1111 Error fetching time settings:', error.response ? error.response.data : error.message);\n    }\n  };\n\n  // Check auth status\n  const checkAuthStatus = async () => {\n    try {\n      const token = await authService.current.getAccessToken();\n      if (!token) {\n        return { isAuthenticated: false };\n      }\n\n      const isValid = await authService.current.validateToken(token);\n      if (!isValid) {\n        await signOut('auth_status_check_failed');\n        return { isAuthenticated: false };\n      }\n\n      debugLog('MBA1111 checkAuthStatus', { isAuthenticated: true, userRole, isApprovedProfessional });\n\n      return {\n        isAuthenticated: true,\n        userRole: userRole,\n        isApprovedProfessional: isApprovedProfessional\n      };\n    } catch (error) {\n      console.error('MBA1111 Error checking auth status:', error);\n      return { isAuthenticated: false };\n    }\n  };\n\n  // Screen width handling\n  useEffect(() => {\n    const handleDimensionsChange = ({ window }) => {\n      setScreenWidth(window.width);\n    };\n\n    const subscription = Dimensions.addEventListener('change', handleDimensionsChange);\n\n    return () => {\n      if (subscription?.remove) {\n        subscription.remove();\n      }\n    };\n  }, []);\n\n  // State consistency checker with enhanced detection\n  useEffect(() => {\n    if (loading || is_prototype) return;\n    \n    const checkStateConsistency = async () => {\n      try {\n        const hasStoredTokens = !!(await getStorage('userToken')) || !!(await getStorage('refreshToken'));\n        const hasMemoryTokens = !!(authService.current.accessToken) || !!(authService.current.refreshToken);\n        \n        debugLog('MBA1111 State consistency check:', {\n          isSignedIn,\n          hasStoredTokens,\n          hasMemoryTokens,\n          isSigningOut: authService.current.isSigningOut\n        });\n        \n        // CRITICAL CHECK: If UI shows signed in but no tokens exist anywhere\n        if (isSignedIn && !hasStoredTokens && !hasMemoryTokens && !authService.current.isSigningOut) {\n          debugLog('MBA1111 CRITICAL STATE INCONSISTENCY: UI shows signed in but no tokens exist - immediate redirect');\n          await signOut('state_inconsistency_no_tokens');\n          return;\n        }\n        \n        // ENHANCED CHECK: If UI shows signed in, verify tokens are actually valid\n        if (isSignedIn && (hasStoredTokens || hasMemoryTokens) && !authService.current.isSigningOut) {\n          const storedToken = await getStorage('userToken');\n          \n          // Check if stored token is expired\n          if (storedToken) {\n            const timeUntilExpiry = authService.current.getTimeUntilExpiry(storedToken);\n            if (timeUntilExpiry <= 0) {\n              debugLog('MBA1111 CRITICAL STATE INCONSISTENCY: UI shows signed in but token is expired');\n              \n              // Check if refresh token can save us\n              const refreshToken = await getStorage('refreshToken');\n              if (refreshToken) {\n                const refreshTimeUntilExpiry = authService.current.getTimeUntilExpiry(refreshToken);\n                if (refreshTimeUntilExpiry <= 0) {\n                  debugLog('MBA1111 Refresh token also expired - forcing sign out');\n                  await signOut('state_inconsistency_all_tokens_expired');\n                  return;\n                } else {\n                  debugLog('MBA1111 Attempting emergency token refresh');\n                  try {\n                    await authService.current.refreshTokens();\n                    debugLog('MBA1111 Emergency token refresh successful');\n                  } catch (error) {\n                    debugLog('MBA1111 Emergency token refresh failed, signing out');\n                    await signOut('state_inconsistency_refresh_failed');\n                    return;\n                  }\n                }\n              } else {\n                debugLog('MBA1111 No refresh token available, signing out');\n                await signOut('state_inconsistency_no_refresh_token');\n                return;\n              }\n            }\n          }\n        }\n        \n        // If we think user is not signed in but tokens exist\n        if (!isSignedIn && (hasStoredTokens || hasMemoryTokens) && !authService.current.isSigningOut) {\n          debugLog('MBA1111 STATE INCONSISTENCY DETECTED: UI shows signed out but tokens exist');\n          \n          // Try to restore the session\n          try {\n            const token = await authService.current.getAccessToken();\n            if (token) {\n              const isValid = await authService.current.validateToken(token);\n              if (isValid) {\n                debugLog('MBA1111 Restoring session with valid tokens');\n                \n                setIsSignedIn(true);\n                await fetchUserName();\n                const status = await getProfessionalStatus(token);\n                setUserRole(status.suggestedRole);\n                setIsApprovedProfessional(status.isApprovedProfessional);\n                return;\n              }\n            }\n          } catch (error) {\n            debugLog('MBA1111 Failed to restore session:', error);\n          }\n          \n          // If restoration failed, clear everything\n          await signOut('state_inconsistency_invalid_tokens');\n        }\n      } catch (error) {\n        debugLog('MBA1111 Error in state consistency check:', error);\n        \n        // If there's an error in consistency checking and we think we're signed in,\n        // be safe and sign out to avoid confused state\n        if (isSignedIn) {\n          debugLog('MBA1111 Error during consistency check while signed in - signing out for safety');\n          await signOut('state_consistency_check_error');\n        }\n      }\n    };\n    \n    // Run initial check after a shorter delay for faster detection\n    const initialCheck = setTimeout(checkStateConsistency, 1000);\n    \n    // Run periodic checks more frequently for better responsiveness\n    const consistencyInterval = setInterval(checkStateConsistency, 15000); // Every 15 seconds\n    \n    return () => {\n      clearTimeout(initialCheck);\n      clearInterval(consistencyInterval);\n    };\n  }, [isSignedIn, loading, is_prototype]);\n\n  // Token refresh monitoring with PROACTIVE refresh triggers\n  useEffect(() => {\n    if (!isSignedIn || is_prototype) return;\n    \n    const monitorAndRefreshToken = async () => {\n      try {\n        // Get the current token (this will automatically refresh if needed)\n        const token = await authService.current.getAccessToken();\n        \n        if (token) {\n          const timeUntilExpiry = authService.current.getTimeUntilExpiry(token);\n          const shouldRefresh = authService.current.shouldRefreshToken(token);\n          \n          if (timeUntilExpiry < 0) {\n            debugLog('MBA1111 TOKEN EXPIRED DETECTED in monitor');\n          }\n          \n          // PROACTIVE REFRESH: If token should be refreshed, trigger it now\n          if (shouldRefresh && !authService.current.isRefreshing) {\n            debugLog('MBA1111 Token monitor triggering proactive refresh');\n            try {\n              await authService.current.refreshTokens();\n              debugLog('MBA1111 Proactive token refresh completed successfully');\n            } catch (error) {\n              debugLog('MBA1111 Proactive token refresh failed:', error);\n            }\n          }\n        } else {\n          debugLog('MBA1111 Token monitor: No token available');\n        }\n      } catch (error) {\n        debugLog('MBA1111 Error in token monitor:', error);\n      }\n    };\n    \n    // Monitor every 2 seconds during testing\n    const monitorInterval = setInterval(monitorAndRefreshToken, 2000);\n    \n    return () => clearInterval(monitorInterval);\n  }, [isSignedIn, is_prototype]);\n\n  // Debug function to check token status\n  const debugTokenStatus = () => {\n    const token = authService.current.accessToken;\n    if (!token) {\n      debugLog('MBA1111 No access token available');\n      return;\n    }\n    \n    const timeUntilExpiry = authService.current.getTimeUntilExpiry(token);\n    const isExpired = timeUntilExpiry <= 0;\n    const shouldRefresh = authService.current.shouldRefreshToken(token);\n    \n    debugLog('MBA1111 Token status:', {\n      hasToken: !!token,\n      timeUntilExpirySeconds: Math.round(timeUntilExpiry / 1000),\n      isExpired,\n      shouldRefresh,\n      isRefreshing: authService.current.isRefreshing,\n      isSigningOut: authService.current.isSigningOut\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isSignedIn,\n        userRole,\n        isApprovedProfessional,\n        loading,\n        isInitialized,\n        screenWidth,\n        firstName,\n        name,\n        is_prototype,\n        is_DEBUG,\n        is_PRODUCTION,\n        timeSettings,\n        isCollapsed,\n        setIsCollapsed,\n        signIn,\n        signOut,\n        switchRole,\n        setIsDebug,\n        setIsPrototype,\n        checkAuthStatus,\n        fetchTimeSettings,\n        debugTokenStatus,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { createContext, useState, useEffect, useContext, useRef } from 'react';\nimport { AuthContext, debugLog } from './AuthContext';\nimport { getUnreadMessageCount } from '../api/API';\nimport websocketManager from '../utils/websocket';\nimport { getStorage } from './AuthContext';\nimport { Platform } from 'react-native';\n\n// Create the context\nexport const MessageNotificationContext = createContext();\n\nexport const MessageNotificationProvider = ({ children }) => {\n  const { isSignedIn, userRole } = useContext(AuthContext);\n  \n  // State for notification badges\n  const [hasUnreadMessages, setHasUnreadMessages] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  // Add role-specific counts for more accurate notification management\n  const [ownerUnreadCount, setOwnerUnreadCount] = useState(0);\n  const [professionalUnreadCount, setProfessionalUnreadCount] = useState(0);\n  const [conversationCounts, setConversationCounts] = useState({});\n  const [currentRoute, setCurrentRoute] = useState('');\n  const [lastApiResponse, setLastApiResponse] = useState(null);\n  \n  // State for WebSocket management\n  const [websocketConnected, setWebsocketConnected] = useState(false);\n  const [websocketInitialized, setWebsocketInitialized] = useState(false);\n  const [lastApiCheck, setLastApiCheck] = useState(0);\n  \n  // Use refs to track initialization state and prevent duplicate calls\n  const initialCheckDoneRef = useRef(false);\n  const pendingCheckRef = useRef(false);\n  const reconnectIntervalRef = useRef(null);\n  const debounceTimerRef = useRef(null);\n  const websocketDataReceivedRef = useRef(false);\n  const lastCheckTimeRef = useRef(0);  // Track last time we checked\n  const MIN_CHECK_INTERVAL = 5000; // Minimum 5 seconds between API checks\n  \n  // Ref to track connection health (separate from connected state)\n  const connectionHealthyRef = useRef(false);\n  // Track WebSocket initialization and reconnect attempts\n  const websocketInitializedRef = useRef(false);\n  const websocketRetryAttemptsRef = useRef(0);\n  const MAX_WEBSOCKET_RETRIES = 12; // After 12 retries (60 seconds), fall back to API\n  const WEBSOCKET_RETRY_INTERVAL = 5000; // 5 second wait between retries\n  \n  // Add connection status tracking\n  const lastHeartbeatReceivedRef = useRef(0);\n  const lastHeartbeatSentRef = useRef(0);\n  const heartbeatTimeoutRef = useRef(null); // Track if connection is healthy\n  const HEARTBEAT_TIMEOUT = 40000; // 40 seconds timeout for heartbeat responses\n  \n  // Add session-based flag to track if we already made an API call in this session\n  const initialApiCallMadeRef = useRef(false);\n  // Timeout ref for WebSocket heartbeat check\n  const websocketTimeoutRef = useRef(null);\n  // Add a lastApiCheckRef at the top of the component with other refs\n  const lastApiCheckRef = useRef(0);\n  \n  // Ref to track user role changes\n  const prevUserRoleRef = useRef(null);\n\n  // Function to check if we have unread messages based on conversations\n  const checkUnreadMessages = async (force = false) => {\n    try {\n      // If there's already a check in progress, don't start another one\n      if (pendingCheckRef.current) {\n        debugLog('MBA4321: Skipping unread check - another check is already in progress');\n        return hasUnreadMessages;\n      }\n      \n      // Stack trace logging to help identify what's triggering API calls\n      const stackTrace = new Error().stack;\n      debugLog(`MBA4321: checkUnreadMessages called from:\\n${stackTrace}`);\n      \n      // Set pending flag before proceeding\n      pendingCheckRef.current = true;\n      \n      // For forced refreshes, we should just make the API call immediately\n      if (force) {\n        debugLog('MBA432wihe21: Forced API call for unread messages');\n        return await makeApiCall();\n      }\n\n      // NEW LOGIC: Check if websocket is connected first\n      const websocketConnected = websocketManager && websocketManager.isWebSocketConnected();\n      debugLog(`MBA4321: WebSocket connected: ${websocketConnected}`);\n      \n      // If WebSocket is connected and we've received data, return current state - no API call needed\n      if (websocketConnected && websocketDataReceivedRef.current) {\n        debugLog('MBA4321: WebSocket is connected and data received, using current state');\n        pendingCheckRef.current = false;\n        return hasUnreadMessages;\n      }\n      \n      // Check if this is a page load (first time check)\n      if (!initialApiCallMadeRef.current) {\n        debugLog('MBA4321: First check on page load, implementing progressive WebSocket wait');\n        \n        // Clear any existing timeout\n        if (websocketTimeoutRef.current) {\n          clearTimeout(websocketTimeoutRef.current);\n        }\n        \n        // Wait for WebSocket using progressive checks, with final API fallback\n        return await waitForWebSocketWithFallback();\n      }\n      \n      // We already made an initial call for this session and WebSocket isn't connected\n      // However, we're not forcing a refresh, so just use current state\n      debugLog('MBA4321: Using existing state, we already made an initial API call');\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    } catch (error) {\n      debugLog('MBA4321: Error in checkUnreadMessages:', error);\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    }\n  };\n\n  // Function to wait for WebSocket with progressive checks and final API fallback\n  const waitForWebSocketWithFallback = async () => {\n    // Reset attempt counter\n    websocketRetryAttemptsRef.current = 0;\n    \n    // IMPORTANT: If this is a fresh page load, ALWAYS make an API call first to get accurate state\n    // The problem was that we would rely only on WebSocket which might miss messages that arrived\n    // while the user was offline\n    if (!initialApiCallMadeRef.current) {\n      debugLog('MBA432wihe21: Fresh page load - making initial API call to get accurate unread count');\n      return await makeApiCall();\n    }\n    \n    return new Promise((resolve) => {\n      // Define the progressive check function\n      const checkWebSocketAndWait = () => {\n        // First check if WebSocket is connected\n        const connected = websocketManager && websocketManager.isWebSocketConnected();\n        \n        // Check if we've received any data (either from WebSocket or separate handlers)\n        if (websocketDataReceivedRef.current) {\n          debugLog('MBA4321: WebSocket data received during wait, using current state');\n          pendingCheckRef.current = false;\n          resolve(hasUnreadMessages);\n          return;\n        }\n        \n        // Increment attempt counter\n        websocketRetryAttemptsRef.current++;\n        debugLog(`MBA4321: WebSocket wait attempt ${websocketRetryAttemptsRef.current}/${MAX_WEBSOCKET_RETRIES}, connected: ${connected}`);\n        \n        // If connected, send a heartbeat to check if we get a response\n        if (connected) {\n          debugLog('MBA4321: WebSocket is connected, sending heartbeat request');\n          websocketManager.send('heartbeat', { timestamp: Date.now() });\n          lastHeartbeatSentRef.current = Date.now();\n        }\n        \n        // If reached max attempts, fall back to API\n        if (websocketRetryAttemptsRef.current >= MAX_WEBSOCKET_RETRIES) {\n          debugLog('MBA432wihe21: Max WebSocket wait attempts reached, falling back to API');\n          // Make the API call and resolve with its result\n          makeApiCall().then(result => resolve(result));\n          return;\n        }\n        \n        // Schedule next check (after 5-second wait)\n        websocketTimeoutRef.current = setTimeout(checkWebSocketAndWait, WEBSOCKET_RETRY_INTERVAL);\n      };\n      \n      // Start the first check\n      checkWebSocketAndWait();\n    });\n  };\n  \n  // Extract API call logic to separate function\n  const makeApiCall = async () => {\n    // Add new logging with the special prefix\n    debugLog('MBA432wihe21: makeApiCall called, checking if necessary');\n    \n    // Check if we've made an API call in the last minute (60000ms)\n    // This prevents frequent API calls which can disrupt components like BookingApprovalModal\n    const now = Date.now();\n    const timeSinceLastCheck = now - lastApiCheckRef.current;\n    \n    // Skip API calls if we've checked in the last minute, unless the connection is unhealthy\n    if (timeSinceLastCheck < 60000 && websocketDataReceivedRef.current && connectionHealthyRef.current) {\n      debugLog('MBA432wihe21: Skipping API call - checked recently and connection is healthy');\n      return hasUnreadMessages;\n    }\n    \n    debugLog('MBA432wihe21: Making API call for unread messages');\n    \n    try {\n      // Call the API to get unread message count\n      const result = await getUnreadMessageCount();\n      const count = result.unread_count || 0;\n      const conversationUnreadCounts = result.conversation_counts || {};\n      \n      debugLog('MBA432wihe21: Unread message count from API:', count);\n      \n      // Process conversation data to determine role-specific unread counts\n      let ownerCount = 0;\n      let proCount = 0;\n      \n      // Analyze the conversation_counts to separate by role\n      if (result.conversation_role_map) {\n        // If the API returns a role map, use it directly\n        ownerCount = result.owner_unread_count || 0;\n        proCount = result.professional_unread_count || 0;\n        \n        debugLog('MBA432wihe21: Got role-specific counts from API', {\n          ownerCount,\n          proCount\n        });\n      } else {\n        // Otherwise, we need to infer from what's available\n        // This is a fallback and won't be needed once the API is updated\n        \n        // We'll assume that the API already filters by the current role\n        // So all counts are for the current role\n        if (userRole === 'petOwner') {\n          ownerCount = count;\n        } else {\n          proCount = count;\n        }\n        \n        debugLog('MBA432wihe21: Inferred role-specific counts', {\n          userRole,\n          ownerCount,\n          proCount,\n          totalCount: count\n        });\n      }\n      \n      // Update the API response cache\n      setLastApiResponse({\n        unread_count: count,\n        conversation_counts: conversationUnreadCounts,\n        owner_unread_count: ownerCount,\n        professional_unread_count: proCount,\n        timestamp: now\n      });\n      \n      // Update state based on API response\n      setUnreadCount(count);\n      setOwnerUnreadCount(ownerCount);\n      setProfessionalUnreadCount(proCount);\n      \n      // Only set hasUnreadMessages based on the current role's count\n      const currentRoleCount = userRole === 'petOwner' ? ownerCount : proCount;\n      setHasUnreadMessages(currentRoleCount > 0);\n      \n      setConversationCounts(conversationUnreadCounts);\n      setLastApiCheck(now);\n      lastCheckTimeRef.current = now;\n      lastApiCheckRef.current = now;\n      \n      // Mark initialization as complete\n      initialCheckDoneRef.current = true;\n      \n      // Mark that we've made an API call in this session\n      initialApiCallMadeRef.current = true;\n      \n      // Mark that we've received data\n      websocketDataReceivedRef.current = true;\n      \n      // Clear pending flag\n      pendingCheckRef.current = false;\n      \n      return count > 0;\n    } catch (error) {\n      debugLog('MBA432wihe21: Error in API call:', error);\n      pendingCheckRef.current = false;\n      return hasUnreadMessages;\n    }\n  };\n\n  // Debounced version of checkUnreadMessages to prevent excessive API calls\n  const debouncedCheckUnreadMessages = (force = false) => {\n    // Clear any existing timer\n    if (debounceTimerRef.current) {\n      clearTimeout(debounceTimerRef.current);\n    }\n    \n    // Set a new timer to delay the API call\n    debounceTimerRef.current = setTimeout(() => {\n      checkUnreadMessages(force);\n      debounceTimerRef.current = null;\n    }, 300); // 300ms debounce time\n  };\n\n  // Check how many unread messages a specific conversation has\n  const getConversationUnreadCount = (conversationId) => {\n    if (!conversationId) return 0;\n    const count = conversationCounts[conversationId] || 0;\n    \n    // Add logging for debugging unread counts\n    if (count > 0) {\n      debugLog(`MBA2o3uihf48hv: getConversationUnreadCount for ${conversationId}`, {\n        conversationId,\n        count,\n        allCounts: JSON.stringify(conversationCounts),\n        totalUnreadCount: unreadCount,\n        hasUnreadMessages\n      });\n    }\n    \n    return count;\n  };\n\n  // Check if user is currently on the Messages screen\n  const isOnMessagesScreen = () => {\n    return currentRoute === 'MessageHistory';\n  };\n\n  // Function to handle incoming new messages\n  const onNewMessage = (messageData) => {\n    debugLog('MBA3uiobv59u: onNewMessage called with data:', messageData);\n    \n    // Only create notification if the message is from another user\n    if (messageData && messageData.sent_by_other_user) {\n      const conversationId = messageData.conversation_id;\n      \n      // Check if user is viewing this specific conversation\n      if (isOnMessagesScreen() && conversationId && \n          typeof window !== 'undefined' && String(conversationId) === String(window.selectedConversationId)) {\n        debugLog('MBA3uiobv59u: User is viewing this conversation, not creating notification');\n        return;\n      }\n      \n      // Determine which role this message is for\n      const messageRole = messageData.message_role || messageData.conversation_role;\n      \n      // IMPROVED ROLE DETECTION: Check sender role/type and recipient role to better determine\n      // which role the message belongs to\n      let isForOwnerRole = messageRole === 'petOwner' || messageRole === 'owner';\n      let isForProfessionalRole = messageRole === 'professional';\n      \n      // If message doesn't have explicit role, try to infer from other data\n      if (!isForOwnerRole && !isForProfessionalRole) {\n        if (messageData.recipient_role) {\n          // If we have recipient role, use that directly\n          isForOwnerRole = messageData.recipient_role === 'petOwner' || messageData.recipient_role === 'owner';\n          isForProfessionalRole = messageData.recipient_role === 'professional';\n        } else if (messageData.sender_type) {\n          // If sender is professional, message is likely for pet owner and vice versa\n          isForOwnerRole = messageData.sender_type === 'professional';\n          isForProfessionalRole = messageData.sender_type === 'petOwner' || messageData.sender_type === 'owner';\n        }\n      }\n      \n      debugLog('MBA3uiobv59u: Message role information:', {\n        conversationId,\n        messageRole,\n        isForOwnerRole,\n        isForProfessionalRole,\n        currentUserRole: userRole,\n        recipientRole: messageData.recipient_role,\n        senderType: messageData.sender_type\n      });\n      \n      // Update total unread count\n      setUnreadCount(prevCount => {\n        const newCount = prevCount + 1;\n        debugLog(`MBA3uiobv59u: Total unread count: ${prevCount} → ${newCount}`);\n        return newCount;\n      });\n      \n      // CRITICAL: Always set hasUnreadMessages to true when receiving a new message\n      // This ensures the Messages tab shows notification regardless of role specifics\n      setHasUnreadMessages(true);\n      debugLog('MBA3uiobv59u: Setting hasUnreadMessages=true for all new messages');\n      \n      // If we've successfully identified a specific role for this message\n      if (isForOwnerRole || isForProfessionalRole) {\n        // Only update the count for the specific role this message is for\n        if (isForOwnerRole) {\n          // This message is for the owner role\n          setOwnerUnreadCount(prevCount => {\n            const newCount = prevCount + 1;\n            debugLog(`MBA3uiobv59u: Owner unread count: ${prevCount} → ${newCount}`);\n            return newCount;\n          });\n        } else if (isForProfessionalRole) {\n          // This message is for the professional role\n          setProfessionalUnreadCount(prevCount => {\n            const newCount = prevCount + 1;\n            debugLog(`MBA3uiobv59u: Professional unread count: ${prevCount} → ${newCount}`);\n            return newCount;\n          });\n        }\n      } else {\n        // Role is still ambiguous even after attempts to infer\n        debugLog('MBA3uiobv59u: Message role still ambiguous, logging all available message data');\n        \n        // Full debug log of the entire message data to see what we have available\n        // This should help us find the is_professional field if it exists\n        debugLog('MBA3uiobv59u: FULL MESSAGE DATA:', JSON.stringify(messageData, null, 2));\n        \n        // Check if we have is_professional in the message data\n        const userIsProfessionalInConversation = messageData.is_professional === true;\n        \n        debugLog('MBA3uiobv59u: User professional status in conversation:', {\n          is_professional: messageData.is_professional,\n          userIsProfessionalInConversation\n        });\n        \n        // If we know the user's role in this conversation, update the appropriate count\n        if (typeof messageData.is_professional === 'boolean') {\n          if (userIsProfessionalInConversation) {\n            // User is a professional in this conversation, so message is for professional\n            setProfessionalUnreadCount(prevCount => {\n              const newCount = prevCount + 1;\n              debugLog(`MBA3uiobv59u: Professional unread count (from is_professional): ${prevCount} → ${newCount}`);\n              return newCount;\n            });\n          } else {\n            // User is an owner in this conversation, so message is for owner\n            setOwnerUnreadCount(prevCount => {\n              const newCount = prevCount + 1;\n              debugLog(`MBA3uiobv59u: Owner unread count (from is_professional): ${prevCount} → ${newCount}`);\n              return newCount;\n            });\n          }\n        } else {\n          // If we don't have is_professional, try other methods\n          \n          // For now, as a stopgap measure, update both counts\n          // This ensures notifications appear for both roles\n          // This isn't ideal, but it's better than missing notifications\n          setProfessionalUnreadCount(prevCount => {\n            const newCount = prevCount + 1;\n            debugLog(`MBA3uiobv59u: Professional unread count (fallback): ${prevCount} → ${newCount}`);\n            return newCount;\n          });\n          \n          setOwnerUnreadCount(prevCount => {\n            const newCount = prevCount + 1;\n            debugLog(`MBA3uiobv59u: Owner unread count (fallback): ${prevCount} → ${newCount}`);\n            return newCount;\n          });\n          \n          debugLog('MBA3uiobv59u: WARNING: Updated both counts because is_professional is missing');\n        }\n        \n        // Also log current state for debugging\n        debugLog('MBA3uiobv59u: Current state for reference:', {\n          userRole,\n          hasUnreadMessages,\n          unreadCount,\n          ownerUnreadCount,\n          professionalUnreadCount,\n          conversationId: messageData.conversation_id,\n          is_professional: messageData.is_professional\n        });\n      }\n      \n      // If we have a conversation ID, update that count too\n      if (conversationId) {\n        setConversationCounts(prevCounts => {\n          const prevConvCount = prevCounts[conversationId] || 0;\n          const newConvCount = prevConvCount + 1;\n          \n          debugLog(`MBA3uiobv59u: Conversation ${conversationId} count: ${prevConvCount} → ${newConvCount}`);\n          \n          return {\n            ...prevCounts,\n            [conversationId]: newConvCount\n          };\n        });\n      }\n    }\n  };\n\n  // Initialize global variable to track selected conversation across components\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      window.selectedConversationId = null;\n    }\n  }, []);\n\n  // Mark a specific conversation as read\n  const markConversationAsRead = async (conversationId) => {\n    debugLog('MBA2o3uihf48hv: Marking conversation as read:', {\n      conversationId,\n      hasUnreadMessages,\n      totalUnreadCount: unreadCount,\n      ownerUnreadCount,\n      professionalUnreadCount,\n      userRole,\n      conversationUnreadCount: conversationCounts[conversationId] || 0,\n      allConversationCounts: JSON.stringify(conversationCounts)\n    });\n    \n    // Update the global variable to track which conversation is currently selected\n    if (typeof window !== 'undefined') {\n      window.selectedConversationId = conversationId;\n    }\n    \n    // Clear this conversation's unread count from local state\n    if (conversationId && conversationCounts[conversationId]) {\n      const previousCount = conversationCounts[conversationId] || 0;\n      \n      debugLog('MBA2o3uihf48hv: Found unread messages to clear', {\n        conversationId,\n        previousCount,\n        currentTotalUnread: unreadCount\n      });\n      \n      // IMPORTANT: Force immediate update of unreadCount first before updating state\n      // This helps ensure the UI updates properly\n      const newTotalCount = Math.max(0, unreadCount - previousCount);\n      debugLog(`MBA2o3uihf48hv: DIRECTLY updating total unread count from ${unreadCount} to ${newTotalCount}`);\n      \n      // Update unread count directly first to ensure immediate UI update\n      setUnreadCount(newTotalCount);\n      \n      // If this was the only conversation with unread messages, explicitly set hasUnreadMessages to false\n      if (newTotalCount === 0) {\n        debugLog(`MBA2o3uihf48hv: No more unread messages, setting hasUnreadMessages to false`);\n        setHasUnreadMessages(false);\n      }\n      \n      // Create new conversation counts object without this conversation\n      const newCounts = { ...conversationCounts };\n      delete newCounts[conversationId];\n      setConversationCounts(newCounts);\n      \n      // Calculate new role-specific counts\n      let newOwnerCount = ownerUnreadCount;\n      let newProCount = professionalUnreadCount;\n      \n      // IMPORTANT: Only update the count for the CURRENT role\n      // This fixes the issue where both role counts were being updated when a message was read\n      if (userRole === 'petOwner') {\n        // Only decrement owner count\n        newOwnerCount = Math.max(0, ownerUnreadCount - previousCount);\n        debugLog(`MBA2o3uihf48hv: Updating owner unread count: ${ownerUnreadCount} → ${newOwnerCount}`);\n        setOwnerUnreadCount(newOwnerCount);\n      } else if (userRole === 'professional') {\n        // Only decrement professional count\n        newProCount = Math.max(0, professionalUnreadCount - previousCount);\n        debugLog(`MBA2o3uihf48hv: Updating professional unread count: ${professionalUnreadCount} → ${newProCount}`);\n        setProfessionalUnreadCount(newProCount);\n      }\n      \n      // Update API response cache if we have it\n      if (lastApiResponse) {\n        const updatedCounts = { ...lastApiResponse.conversation_counts };\n        delete updatedCounts[conversationId];\n        \n        debugLog('MBA2o3uihf48hv: Updated role-specific counts after marking as read', {\n          userRole,\n          previousOwnerCount: ownerUnreadCount,\n          previousProCount: professionalUnreadCount,\n          newOwnerCount,\n          newProCount,\n          conversationId,\n          conversationCount: previousCount\n        });\n        \n        setLastApiResponse({\n          unread_count: newTotalCount,\n          conversation_counts: updatedCounts,\n          owner_unread_count: newOwnerCount,\n          professional_unread_count: newProCount,\n          timestamp: Date.now()\n        });\n      }\n      \n      // Update hasUnreadMessages based on whether any conversations still have unread messages\n      // for the CURRENT role\n      const currentRoleHasUnread = userRole === 'petOwner' ? newOwnerCount > 0 : newProCount > 0;\n      setHasUnreadMessages(currentRoleHasUnread);\n      \n      debugLog(`MBA2o3uihf48hv: After marking conversation ${conversationId} as read:`, {\n        userRole,\n        currentRoleHasUnread,\n        newOwnerCount,\n        newProCount,\n        hasUnreadMessages: currentRoleHasUnread,\n        conversationsRemaining: Object.keys(newCounts).length\n      });\n      \n      // List remaining unread conversations\n      if (Object.keys(newCounts).length > 0) {\n        const remainingConvs = Object.keys(newCounts).map(id => `${id}:${newCounts[id]}`).join(', ');\n        debugLog(`MBA2o3uihf48hv: Remaining unread conversations: ${remainingConvs}`);\n      } else {\n        debugLog('MBA2o3uihf48hv: No remaining unread conversations');\n      }\n    } else {\n      debugLog('MBA2o3uihf48hv: No unread messages found for this conversation', {\n        conversationId,\n        conversationCounts: JSON.stringify(conversationCounts)\n      });\n    }\n    \n    // The backend automatically marks messages as read when \n    // get_conversation_messages is called, so we don't need to make another API call here\n    \n    debugLog('MBA2o3uihf48hv: Updated unread state after marking conversation as read');\n  };\n\n  // Update route information\n  const updateRoute = (routeName) => {\n    if (routeName && routeName !== currentRoute) {\n      setCurrentRoute(routeName);\n    }\n  };\n\n  // Initialize WebSocket connection when signed in - do this once globally\n  useEffect(() => {\n    const initializeWebSocket = async () => {\n      if (!isSignedIn) {\n        if (websocketInitialized) {\n          debugLog('MBA4321: User signed out, force disconnecting WebSocket');\n          websocketManager.disconnect(true); // Force disconnect on sign-out\n          setWebsocketInitialized(false);\n          \n          // Clear any reconnect interval\n          if (reconnectIntervalRef.current) {\n            clearInterval(reconnectIntervalRef.current);\n            reconnectIntervalRef.current = null;\n          }\n          \n          // Clear any WebSocket timeout\n          if (websocketTimeoutRef.current) {\n            clearTimeout(websocketTimeoutRef.current);\n            websocketTimeoutRef.current = null;\n          }\n          \n          // Clear heartbeat timeout\n          if (heartbeatTimeoutRef.current) {\n            clearTimeout(heartbeatTimeoutRef.current);\n            heartbeatTimeoutRef.current = null;\n          }\n          \n          // Reset retry attempts and connection state\n          websocketRetryAttemptsRef.current = 0;\n          setWebsocketDataReceivedRef(false);\n          connectionHealthyRef.current = false;\n          initialApiCallMadeRef.current = false;\n        }\n        return;\n      }\n    \n      try {\n        const token = await getStorage('userToken');\n        if (!token) {\n          debugLog('MBA4321: No token available for WebSocket connection');\n          return;\n        }\n        \n        debugLog('MBA4321: Initializing WebSocket connection');\n        websocketManager.init(token);\n        setWebsocketInitialized(true);\n        \n        // Reset WebSocket retry attempts when initialization starts\n        websocketRetryAttemptsRef.current = 0;\n        \n        // IMPORTANT: Always make an initial API call on page load/refresh to get accurate count\n        // This ensures we start with the correct server state\n        setTimeout(() => {\n          debugLog('MBA432wihe21: Forcing initial API check on page load to get accurate count');\n          makeApiCall();\n        }, 500);\n      } catch (error) {\n        debugLog('MBA4321: Error initializing WebSocket:', error);\n      }\n    };\n    \n    // Function to check WebSocket connection health\n    const checkConnectionHealth = () => {\n      // Only proceed if signed in and initialized\n      if (!isSignedIn || !websocketInitialized) return;\n      \n      const now = Date.now();\n      const timeSinceLastHeartbeat = now - lastHeartbeatReceivedRef.current;\n      \n      // Log the current connection state\n      debugLog(`MBA4321: Connection health check - Last heartbeat: ${timeSinceLastHeartbeat}ms ago`);\n      \n      // If we haven't received a heartbeat in a while, connection might be dead\n      if (timeSinceLastHeartbeat > HEARTBEAT_TIMEOUT) {\n        debugLog('MBA4321: Connection seems unhealthy, attempting reconnection');\n        connectionHealthyRef.current = false;\n        \n        // Reset the WebSocket data received flag if connection is unhealthy\n        setWebsocketDataReceivedRef(false);\n        \n        // Attempt to reconnect\n        websocketManager.reconnectIfNeeded();\n        \n        // Start progressive retry only if we haven't received data in a while\n        if (timeSinceLastHeartbeat > 120000) { // 2 minutes\n          startProgressiveWebSocketRetry();\n        }\n      } else {\n        // Connection seems healthy, just send a heartbeat to keep it alive\n        debugLog('MBA4321: Connection seems healthy, sending heartbeat');\n        connectionHealthyRef.current = true;\n        \n        // Send heartbeat to keep connection alive\n        if (websocketManager && websocketManager.isWebSocketConnected()) {\n          websocketManager.send('heartbeat', { timestamp: now });\n          lastHeartbeatSentRef.current = now;\n        }\n      }\n    };\n    \n    // Function to progressively retry WebSocket connection with API fallback\n    const startProgressiveWebSocketRetry = () => {\n      debugLog('MBA4321: Starting progressive WebSocket retry');\n      \n      // Reset retry counter if we're starting fresh\n      if (initialCheckDoneRef.current) {\n        websocketRetryAttemptsRef.current = 0;\n      }\n      \n      // If we've already received WebSocket data, no need to retry\n      if (websocketDataReceivedRef.current) {\n        debugLog('MBA4321: WebSocket data already received, skipping retry process');\n        return;\n      }\n      \n      // Check if the WebSocket is already connected\n      const isConnected = websocketManager && websocketManager.isWebSocketConnected();\n      if (isConnected) {\n        debugLog('MBA4321: WebSocket is already connected, sending heartbeat to verify');\n        websocketManager.send('heartbeat', { timestamp: Date.now() });\n        lastHeartbeatSentRef.current = Date.now();\n        \n        // Set a single timeout to check if we got heartbeat response\n        websocketTimeoutRef.current = setTimeout(() => {\n          if (!websocketDataReceivedRef.current) {\n            debugLog('MBA432wihe21: No heartbeat response received, falling back to API');\n            checkUnreadMessages(true);\n          }\n        }, 5000); // Wait 5 seconds for heartbeat response\n        \n        return;\n      }\n      \n      // WebSocket isn't connected, let's use our waitForWebSocketWithFallback\n      // which is already implemented in checkUnreadMessages\n      checkUnreadMessages(false);\n    };\n    \n    initializeWebSocket();\n    \n    // Clean up on unmount\n    return () => {\n      if (reconnectIntervalRef.current) {\n        debugLog('MBA4321: Cleaning up WebSocket reconnect interval');\n        clearInterval(reconnectIntervalRef.current);\n        reconnectIntervalRef.current = null;\n      }\n      \n      // Clear debounce timer if it exists\n      if (debounceTimerRef.current) {\n        clearTimeout(debounceTimerRef.current);\n        debounceTimerRef.current = null;\n      }\n      \n      // Clear WebSocket timeout if it exists\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      // Clear heartbeat timeout\n      if (heartbeatTimeoutRef.current) {\n        clearTimeout(heartbeatTimeoutRef.current);\n        heartbeatTimeoutRef.current = null;\n      }\n      \n      // Note: We don't disconnect the WebSocket on unmount \n      // This allows the connection to persist when navigating between tabs\n    };\n  }, [isSignedIn]);\n\n  // Register a websocket handler for new message notifications\n  useEffect(() => {\n    if (!isSignedIn || !websocketInitialized) return;\n\n    debugLog('MBA3uiobv59u: Setting up WebSocket message handlers');\n    \n    // Add explicit handler for new_message events from the server\n    const newMessageHandler = websocketManager.registerHandler('new_message', (data) => {\n      debugLog('MBA3uiobv59u: New message notification received:', data);\n      debugLog('MBA3uiobv59u: Current notification state BEFORE update:', {\n        hasUnreadMessages,\n        unreadCount,\n        ownerUnreadCount,\n        professionalUnreadCount,\n        userRole\n      });\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark that we've received data from WebSocket\n      websocketDataReceivedRef.current = true;\n      \n      // Process the new message\n      onNewMessage(data);\n\n      // Log state AFTER update (need setTimeout because setState is async)\n      setTimeout(() => {\n        debugLog('MBA3uiobv59u: Notification state AFTER update:', {\n          hasUnreadMessages,\n          unreadCount,\n          ownerUnreadCount,\n          professionalUnreadCount,\n          userRole\n        });\n      }, 100);\n    }, 'new-message-context');\n    \n    // Fallback handler for 'message' event type (keep for backward compatibility)\n    const messageHandler = websocketManager.registerHandler('message', (data) => {\n      debugLog('MBA4321: Message notification received via WebSocket:', data);\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark that we've received data from WebSocket\n      websocketDataReceivedRef.current = true;\n      \n      // Process the message\n      onNewMessage(data);\n    }, 'notification-context');\n    \n    const unreadUpdateHandler = websocketManager.registerHandler('unread_update', (data) => {\n      debugLog('MBA4321: Unread update received via WebSocket:', data);\n      \n      // Update heartbeat timestamp\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      \n      // Update the state directly from the WebSocket data\n      if (data && typeof data.unread_count !== 'undefined') {\n        setUnreadCount(data.unread_count);\n        setHasUnreadMessages(data.unread_count > 0);\n        setConversationCounts(data.conversation_counts || {});\n        \n        // Also update the API response cache with this new data\n        setLastApiResponse({\n          unread_count: data.unread_count,\n          conversation_counts: data.conversation_counts || {},\n          timestamp: Date.now()\n        });\n        \n        setLastApiCheck(Date.now()); // Consider websocket updates as api checks\n        \n        // Mark that we've received data from WebSocket\n        websocketDataReceivedRef.current = true;\n        \n        // Mark initialization as complete since we got data from WebSocket\n        initialCheckDoneRef.current = true;\n      }\n    }, 'unread-update-context');\n    \n    // Add a heartbeat acknowledgment handler\n    const heartbeatHandler = websocketManager.registerHandler('heartbeat_ack', (data) => {\n      debugLog('MBA4321: Heartbeat acknowledgment received');\n      \n      // Update heartbeat timestamp\n      lastHeartbeatReceivedRef.current = Date.now();\n      \n      // Mark connection as healthy\n      connectionHealthyRef.current = true;\n      \n      // Mark that we've received data from WebSocket\n      websocketDataReceivedRef.current = true;\n    }, 'heartbeat-context');\n    \n    // Handle WebSocket connection/disconnection\n    const connectionHandler = websocketManager.registerHandler('connection', (data) => {\n      debugLog('MBA4321: WebSocket connection event:', data);\n      \n      // Record heartbeat if we've established connection\n      if (data.status === 'connected') {\n        lastHeartbeatReceivedRef.current = Date.now();\n        connectionHealthyRef.current = true;\n      } else {\n        // Only reset the WebSocket data flag if connection was explicitly closed\n        // This prevents unnecessary API calls when the connection is temporarily unstable\n        if (data.forced) {\n          websocketDataReceivedRef.current = false;\n          connectionHealthyRef.current = false;\n          debugLog('MBA4321: Connection forcibly closed, resetting WebSocket data flag');\n        }\n      }\n      \n      // If we're (re)connecting and haven't done an initial check yet, do it now\n      if (data.status === 'connected' && !initialCheckDoneRef.current) {\n        // Use a small delay to avoid race conditions with other initialization\n        setTimeout(() => {\n          // Only call API if we haven't received WebSocket data yet\n          if (!websocketDataReceivedRef.current) {\n            debugLog('MBA432wihe21: in connection handler');\n            checkUnreadMessages(true);\n          }\n        }, 1000);\n      }\n    }, 'connection-context');\n    \n    // Cleanup function to unregister handlers\n    return () => {\n      debugLog('MBA4321: Cleaning up WebSocket handlers');\n      messageHandler();\n      newMessageHandler();\n      unreadUpdateHandler();\n      connectionHandler();\n      heartbeatHandler();\n    };\n  }, [isSignedIn, websocketInitialized]);\n\n  // Setup visibility change listener to reconnect when tab becomes visible\n  useEffect(() => {\n    if (!isSignedIn) return;\n    \n    const handleVisibilityChange = () => {\n      if (Platform.OS === 'web' && typeof document !== 'undefined' && document.visibilityState === 'visible') {\n        debugLog('MBA4321: Tab became visible, ensuring WebSocket connection');\n        \n        // First check if the WebSocket is already connected\n        const isWSConnected = websocketManager && websocketManager.isWebSocketConnected();\n        debugLog(`MBA4321: WebSocket connection status on visibility change: ${isWSConnected ? 'Connected' : 'Disconnected'}`);\n        \n        // If WebSocket is already connected, we don't need to do anything\n        if (isWSConnected) {\n          debugLog('MBA4321: WebSocket is already connected, no reconnection needed');\n          \n          // Optionally send a heartbeat to verify connection is still good\n          websocketManager.send('heartbeat', { timestamp: Date.now() });\n          lastHeartbeatSentRef.current = Date.now();\n          \n          // Reset the WebSocket data received flag since we have a good connection\n          websocketDataReceivedRef.current = true;\n          connectionHealthyRef.current = true;\n          \n          return;\n        }\n        \n        // WebSocket isn't connected, try to reconnect\n        if (websocketManager && typeof websocketManager.reconnectIfNeeded === 'function') {\n          debugLog('MBA4321: WebSocket not connected, attempting reconnection');\n          websocketManager.reconnectIfNeeded();\n          \n          // Start progressive retry instead of immediate API call\n          // Reset retry attempts counter first\n          websocketRetryAttemptsRef.current = 0;\n          \n          const startProgressiveRetry = () => {\n            // Check if WebSocket connected during the retry process\n            const nowConnected = websocketManager && websocketManager.isWebSocketConnected();\n            \n            // If WebSocket is now connected or data is received, we're done\n            if (nowConnected || websocketDataReceivedRef.current) {\n              debugLog('MBA4321: WebSocket reconnected successfully, stopping retry process');\n              // Clear any scheduled retry\n              if (websocketTimeoutRef.current) {\n                clearTimeout(websocketTimeoutRef.current);\n                websocketTimeoutRef.current = null;\n              }\n              return;\n            }\n            \n            // Increment retry counter\n            websocketRetryAttemptsRef.current++;\n            debugLog(`MBA4321: WebSocket reconnection attempt ${websocketRetryAttemptsRef.current}/${MAX_WEBSOCKET_RETRIES}`);\n            \n            if (websocketRetryAttemptsRef.current >= MAX_WEBSOCKET_RETRIES) {\n              // Max retries reached, fall back to API\n              debugLog('MBA432wihe21: Max retries reached, fall back to API');\n              debouncedCheckUnreadMessages(true);\n              return;\n            }\n            \n            // Try to reconnect again after interval\n            websocketTimeoutRef.current = setTimeout(startProgressiveRetry, WEBSOCKET_RETRY_INTERVAL);\n          };\n          \n          // Start the retry process after a short delay to allow immediate reconnection to complete\n          setTimeout(startProgressiveRetry, 1000);\n        }\n      }\n    };\n    \n    if (Platform.OS === 'web' && typeof document !== 'undefined') {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n    }\n    \n    return () => {\n      if (Platform.OS === 'web' && typeof document !== 'undefined') {\n        document.removeEventListener('visibilitychange', handleVisibilityChange);\n      }\n      \n      // Clear WebSocket timeout if it exists\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      // Clear heartbeat timeout\n      if (heartbeatTimeoutRef.current) {\n        clearTimeout(heartbeatTimeoutRef.current);\n        heartbeatTimeoutRef.current = null;\n      }\n    };\n  }, [isSignedIn]); // Remove lastApiCheck from dependencies\n\n  // Modified fallback strategy with much less frequent API calls\n  useEffect(() => {\n    if (!isSignedIn) {\n      setHasUnreadMessages(false);\n      setUnreadCount(0);\n      setConversationCounts({});\n      websocketDataReceivedRef.current = false;\n      initialApiCallMadeRef.current = false;\n      \n      // Clear any WebSocket timeout\n      if (websocketTimeoutRef.current) {\n        clearTimeout(websocketTimeoutRef.current);\n        websocketTimeoutRef.current = null;\n      }\n      \n      return;\n    }\n    \n    // Always get fresh unread count on page load or sign-in\n    // This ensures we start with correct state\n    if (!initialApiCallMadeRef.current) {\n      debugLog('MBA4321: Ensuring we get fresh unread count on page load/sign-in');\n      \n      const initialCheckTimeout = setTimeout(() => {\n        if (!initialApiCallMadeRef.current) {\n          debugLog('MBA432wihe21: Making initial API call to get fresh unread count');\n          makeApiCall();\n        }\n      }, 1000); // Short delay to allow WebSocket initialization\n      \n      // Clear timeout on cleanup\n      return () => clearTimeout(initialCheckTimeout);\n    }\n    \n    // No polling needed - WebSocket is the primary data source\n    \n    return () => {};\n  }, [isSignedIn]);\n\n  // Add effect to log changes to role-specific notification counts\n  useEffect(() => {\n    debugLog('MBA3uiobv59u: Notification state changed:', {\n      hasUnreadMessages,\n      unreadCount,\n      ownerUnreadCount,\n      professionalUnreadCount,\n      userRole\n    });\n  }, [hasUnreadMessages, unreadCount, ownerUnreadCount, professionalUnreadCount, userRole]);\n\n  // Update user role from AuthContext\n  useEffect(() => {\n    if (userRole !== prevUserRoleRef.current) {\n      debugLog('MBA3uiobv59u: User role changed in MessageNotificationContext:', {\n        from: prevUserRoleRef.current,\n        to: userRole\n      });\n      \n      // Store previous role to properly transition\n      const previousRole = prevUserRoleRef.current;\n      prevUserRoleRef.current = userRole;\n      \n      // When role changes, update hasUnreadMessages flag based on the new role's count\n      if (userRole === 'petOwner') {\n        // Switching to pet owner role\n        setHasUnreadMessages(ownerUnreadCount > 0);\n        debugLog('MBA3uiobv59u: Updated hasUnreadMessages for pet owner role:', {\n          ownerUnreadCount,\n          hasUnreadMessages: ownerUnreadCount > 0\n        });\n      } else if (userRole === 'professional') {\n        // Switching to professional role\n        setHasUnreadMessages(professionalUnreadCount > 0);\n        debugLog('MBA3uiobv59u: Updated hasUnreadMessages for professional role:', {\n          professionalUnreadCount,\n          hasUnreadMessages: professionalUnreadCount > 0\n        });\n      }\n      \n      // Refresh notifications only if we have a valid role\n      if (userRole) {\n        // Slight delay to ensure role is fully updated\n        setTimeout(() => {\n          checkUnreadMessages(true);\n        }, 50);\n      }\n    }\n  }, [userRole, ownerUnreadCount, professionalUnreadCount]);\n\n  // Create a memoized value for the context to reduce rerenders\n  const contextValue = {\n    hasUnreadMessages,\n    unreadCount,\n    ownerUnreadCount, \n    professionalUnreadCount,\n    conversationCounts,\n    currentRoute,\n    getConversationUnreadCount,\n    checkUnreadMessages,\n    markConversationAsRead,\n    resetNotifications: (routeName, conversationId) => {\n      // If a route is provided, set it as the current route\n      if (routeName && routeName !== currentRoute) {\n        setCurrentRoute(routeName);\n      }\n      \n      debugLog('MBA2o3uihf48hv: resetNotifications called', {\n        routeName,\n        conversationId,\n        currentRoute,\n        hasUnreadMessages,\n        unreadCount,\n        conversationCountsSize: Object.keys(conversationCounts).length\n      });\n      \n      // If a specific conversation ID is provided, only clear that conversation's notifications\n      if (conversationId) {\n        debugLog(`MBA2o3uihf48hv: Resetting notifications for specific conversation: ${conversationId}`);\n        markConversationAsRead(conversationId);\n        return;\n      }\n      \n      // IMPORTANT: Do NOT reset all notifications just because we're on the MessageHistory screen\n      // This was the bug - we were clearing all notifications even when only one conversation was viewed\n      \n      // Only reset all notifications if explicitly requested with a special flag\n      if (routeName === 'RESET_ALL') {\n        debugLog('MBA2o3uihf48hv: Explicitly resetting ALL message notifications');\n        setHasUnreadMessages(false);\n        setUnreadCount(0);\n        setConversationCounts({});\n      }\n    },\n    updateRoute,\n    // Helper function to get the count for the current role\n    getCurrentRoleUnreadCount: () => {\n      const count = userRole === 'petOwner' ? ownerUnreadCount : professionalUnreadCount;\n      debugLog('MBA3uiobv59u: getCurrentRoleUnreadCount called:', {\n        userRole,\n        ownerUnreadCount,\n        professionalUnreadCount,\n        returned: count\n      });\n      return count;\n    },\n    // Helper function to get the count for the other role\n    getOtherRoleUnreadCount: () => {\n      const count = userRole === 'petOwner' ? professionalUnreadCount : ownerUnreadCount;\n      debugLog('MBA3uiobv59u: getOtherRoleUnreadCount called:', {\n        userRole,\n        ownerUnreadCount,\n        professionalUnreadCount,\n        returned: count\n      });\n      return count;\n    },\n    // Helper to check if current role has unread messages\n    hasCurrentRoleUnreadMessages: () => {\n      const result = userRole === 'petOwner' ? ownerUnreadCount > 0 : professionalUnreadCount > 0;\n      debugLog('MBA3uiobv59u: hasCurrentRoleUnreadMessages called:', {\n        userRole,\n        ownerUnreadCount,\n        professionalUnreadCount,\n        returned: result\n      });\n      return result;\n    }\n  };\n\n  return (\n    <MessageNotificationContext.Provider value={contextValue}>\n      {children}\n    </MessageNotificationContext.Provider>\n  );\n};\n\nexport default MessageNotificationContext; ","import * as Font from 'expo-font';\nimport { Platform } from 'react-native';\n\n// Platform-specific font configurations\nconst getFontConfig = () => {\n  return Platform.select({\n    ios: {\n      regular: 'System', // iOS System font (SF Pro)\n      medium: 'System', // iOS System font medium weight\n      header: 'Avenir-Heavy', // Distinctive header font\n    },\n    android: {\n      regular: 'Roboto', // Android default\n      medium: 'Roboto', // Use same font with different weights\n      header: 'Roboto', // Use Roboto for headers too, with bold weight\n    },\n    web: {\n      regular: 'PlayfairDisplay', // DO NOT CHANGE\n      medium: 'PlayfairDisplay-Medium', // DO NOT CHANGE\n      header: 'Futura', // DO NOT CHANGE\n    },\n    default: {\n      regular: 'System',\n      medium: 'System', \n      header: 'System',\n    }\n  });\n};\n\n// Load fonts function - no custom fonts needed since we're using system fonts\nexport const loadFonts = async () => {\n  try {\n    // No custom fonts to load - using system fonts for better performance and consistency\n    return true;\n  } catch (error) {\n    console.warn('Error in font loading process:', error);\n    return false;\n  }\n};\n\n// Font family names for use in styles - optimized for each platform\nexport const fontFamilies = getFontConfig();\n\n// Font weight configurations for cross-platform consistency\nexport const fontWeights = {\n  regular: Platform.select({\n    ios: '400',\n    android: 'normal',\n    web: '400',\n    default: 'normal'\n  }),\n  medium: Platform.select({\n    ios: '500',\n    android: '500',\n    web: '500', \n    default: '500'\n  }),\n  semiBold: Platform.select({\n    ios: '600',\n    android: '600',\n    web: '600',\n    default: '600'\n  }),\n  bold: Platform.select({\n    ios: '700',\n    android: 'bold',\n    web: '700',\n    default: 'bold'\n  }),\n  header: Platform.select({\n    ios: '800',\n    android: '900',\n    web: '700',\n    default: 'bold'\n  })\n};\n","// theme.js\nimport { DefaultTheme } from 'react-native-paper';\nimport { Platform } from 'react-native';\nimport { fontFamilies, fontWeights } from './fonts';\n\n// Get font with platform-specific fallbacks\nconst getFontFamily = (customFont) => {\n  if (Platform.OS === 'web') {\n    // On web, use custom fonts with CSS fallbacks\n    if (customFont === fontFamilies.header) {\n      return 'Futura, \"Helvetica Neue\", Arial, sans-serif';\n    }\n    return `${customFont}, Georgia, serif`;\n  }\n  // On mobile, use the loaded custom fonts or platform-specific fonts\n  return customFont;\n};\n\nexport const theme = {\n  ...DefaultTheme,\n  // Cross-platform fonts using system fonts for optimal performance and consistency\n  fonts: {\n    ...DefaultTheme.fonts,\n    regular: {\n      fontFamily: fontFamilies.regular,\n      fontWeight: fontWeights.regular,\n    },\n    medium: {\n      fontFamily: fontFamilies.medium,\n      fontWeight: fontWeights.medium,\n    },\n    header: {\n      fontFamily: fontFamilies.header,\n      fontWeight: fontWeights.header,\n    }\n  },\n  colors: {\n    ...DefaultTheme.colors,\n    mainColors: {\n      main: '#6A6C51', // #6A6C51\n      secondary: '#5D6C51', // #5D6C51\n      tertiary: '#516C53', // #516C53\n      quaternary: '#516C61', // #516C61\n      quinary: '#516A6C', // #516A6C\n      senary: '#515D6C', // #515D6C\n    },\n    proDashboard: {\n      main: '#F0F9E5', // #F0F9E5\n      secondary: '#E7F3F8', // #E7F3F8\n      tertiary: '#FEF0DA', // #FEF0DA\n      quaternary: '#E1E2DB', // #E1E2DB\n    },\n    mybookings: {\n      main: '#FFF7ED', // #FFF7ED Pending indicator background\n      secondary: '#EA580E', // #EA580E Pending indicator text\n      tertiary: '#6A6C51', // #6A6C51\n      ownerName: '#4B4C3B', // #4B4C3B Owner name text color\n      metaText: '#959885', // #959885 Date/time/service text color\n      confirmedBg: '#E8E9E2', // #E8E9E2 Confirmed button background\n      confirmedText: '#898974', // #898974 Confirmed button text\n      completedBg: '#F5F5F4', // #F5F5F4 Completed button background\n      completedText: '#898983', // #898983 Completed button text\n      searchBar: 'rgb(183, 183, 183)', // Search bar text color\n    },\n    primary: '#6A6C51', // #6A6C51\n    secondary: '#516C61', // #516C61\n    background: '#f6f6f6', // #f6f6f6\n    backgroundContrast: '#F6F3FC', // #F6F3FC\n    calendarColor: '#A99E6B', // #A99E6B\n    calendarColorYellowBrown: '#8A8C6D', // #8A8C6D\n    text: 'black', // #000000\n    whiteText: 'white', // #FFFFFF\n    placeHolderText: '#A9A9A9', // #A9A9A9\n    accent: '#03dac4', // #03dac4\n    error: '#B00020', // #B00020\n    warning: '#FFA726', // Orange warning color\n    info: '#29B6F6', // Light blue info color\n    surface: '#F9FAFB', // #F9FAFB\n    surfaceContrast: '#FFFFFF', // #FFFFFF\n    border: 'rgb(183, 183, 183)', // 'rgb(183, 183, 183)'\n    bgColorModern: 'rgb(239, 239, 239)',\n    modernBorder: '#E0E0E0', // #E0E0E0\n    inputBackground: '#f6f6f6', // #f6f6f6\n    receivedMessage: '#e7eae6', // #e7eae6\n    danger: '#A52A2A', // #A52A2A\n  },\n  fontSizes: {\n    small: 12,\n    smallMedium: 14,\n    medium: 16,\n    mediumLarge: 18,\n    large: 20,\n    largeLarge: 24,\n    extraLarge: 26,\n  },\n  spacing: {\n    small: 8,\n    medium: 16,\n    large: 24,\n  },\n};","/**\n * Debug logging utility function\n * @param {string} message - The message to log\n * @param {any} data - Optional data to log\n */\nexport const debugLog = (message, data) => {\n  if (process.env.NODE_ENV !== 'production') {\n    // Log the actual process.env.NODE_ENV value\n    // console.log('MBA1234: Current process.env.NODE_ENV:', process.env.NODE_ENV);\n    \n    if (data) {\n      console.log(message, data);\n    } else {\n      console.log(message);\n    }\n  }\n}; ","import { Platform } from 'react-native';\nimport { debugLog } from './logging';\n\n/**\n * Platform-aware navigation utilities\n * Provides consistent navigation APIs across web and mobile platforms\n */\n\n/**\n * Get current route information in a platform-safe way\n * @param {Object} navigation - React Navigation object (optional for web)\n * @param {Object} route - React Navigation route object (optional for web)\n * @returns {Object} Current route information\n */\nexport const getCurrentRoute = (navigation = null, route = null) => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined' && window.location) {\n    try {\n      const currentPath = window.location.pathname;\n      const pathSegments = currentPath.split('/').filter(Boolean);\n      const routeName = pathSegments.length > 0 ? pathSegments[pathSegments.length - 1] : 'Home';\n      \n      return {\n        name: routeName,\n        path: currentPath,\n        params: getURLParams(),\n        href: window.location.href\n      };\n    } catch (error) {\n      debugLog('MBA9999: Error accessing window.location:', error);\n      return {\n        name: 'Home',\n        path: '/',\n        params: {},\n        href: 'web://error'\n      };\n    }\n  } else if (route) {\n    return {\n      name: route.name || 'home',\n      path: `/${route.name || 'home'}`,\n      params: route.params || {},\n      href: `app://${route.name || 'home'}`\n    };\n  } else {\n    // Mobile fallback when no route is provided\n    return {\n      name: 'Home',\n      path: '/home',\n      params: {},\n      href: 'app://home'\n    };\n  }\n};\n\n/**\n * Get URL parameters in a platform-safe way\n * @returns {Object} URL parameters\n */\nexport const getURLParams = () => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    const searchParams = new URLSearchParams(window.location.search);\n    const params = {};\n    for (const [key, value] of searchParams.entries()) {\n      params[key] = value;\n    }\n    return params;\n  }\n  return {};\n};\n\n/**\n * Navigate back in a platform-aware way\n * @param {Object} navigation - React Navigation object\n * @returns {boolean} Whether back navigation was successful\n */\nexport const goBack = (navigation) => {\n  if (!navigation) {\n    debugLog('MBA9999: goBack called without navigation object');\n    return false;\n  }\n\n  try {\n    if (Platform.OS === 'web' && typeof window !== 'undefined') {\n      // On web, try browser history first\n      if (window.history.length > 1) {\n        window.history.back();\n        return true;\n      }\n    }\n    \n    // For mobile or fallback, use React Navigation\n    if (navigation.canGoBack()) {\n      navigation.goBack();\n      return true;\n    }\n    \n    // If can't go back, navigate to Dashboard\n    navigation.navigate('Dashboard');\n    return true;\n  } catch (error) {\n    debugLog('MBA9999: Error in goBack:', error);\n    return false;\n  }\n};\n\n/**\n * Navigate to a specific route in a platform-aware way\n * @param {Object} navigation - React Navigation object\n * @param {string} routeName - Name of the route to navigate to\n * @param {Object} params - Navigation parameters\n */\nexport const navigateTo = (navigation, routeName, params = {}) => {\n  if (!navigation) {\n    debugLog('MBA9999: navigateTo called without navigation object');\n    return;\n  }\n\n  try {\n    navigation.navigate(routeName, params);\n  } catch (error) {\n    debugLog('MBA9999: Error in navigateTo:', error);\n  }\n};\n\n/**\n * Replace current route in a platform-aware way (like browser replaceState)\n * @param {Object} navigation - React Navigation object\n * @param {string} routeName - Name of the route to replace with\n * @param {Object} params - Navigation parameters\n */\nexport const replaceRoute = (navigation, routeName, params = {}) => {\n  if (!navigation) {\n    debugLog('MBA9999: replaceRoute called without navigation object');\n    return;\n  }\n\n  try {\n    if (Platform.OS === 'web' && typeof window !== 'undefined' && window.location) {\n      try {\n        // On web, update the URL without adding to history\n        const newUrl = new URL(window.location.href);\n        newUrl.pathname = `/${routeName.toLowerCase()}`;\n        \n        // Add params to URL\n        Object.keys(params).forEach(key => {\n          if (params[key] !== null && params[key] !== undefined) {\n            newUrl.searchParams.set(key, params[key]);\n          }\n        });\n        \n        window.history.replaceState({}, '', newUrl.toString());\n      } catch (error) {\n        debugLog('MBA9999: Error in replaceRoute web logic:', error);\n      }\n    }\n    \n    // Use React Navigation replace\n    navigation.replace(routeName, params);\n  } catch (error) {\n    debugLog('MBA9999: Error in replaceRoute:', error);\n  }\n};\n\n/**\n * Update URL parameters without navigation (web only)\n * @param {Object} params - Parameters to set in URL\n * @param {boolean} replace - Whether to replace current history entry\n */\nexport const updateURLParams = (params = {}, replace = true) => {\n  if (Platform.OS !== 'web' || typeof window === 'undefined' || !window.location) {\n    return;\n  }\n\n  try {\n    const currentUrl = new URL(window.location.href);\n    \n    // Update search parameters\n    Object.keys(params).forEach(key => {\n      if (params[key] !== null && params[key] !== undefined) {\n        currentUrl.searchParams.set(key, params[key]);\n      } else {\n        currentUrl.searchParams.delete(key);\n      }\n    });\n\n    // Update the URL\n    if (replace) {\n      window.history.replaceState({}, '', currentUrl.toString());\n    } else {\n      window.history.pushState({}, '', currentUrl.toString());\n    }\n  } catch (error) {\n    debugLog('MBA9999: Error in updateURLParams:', error);\n  }\n};\n\n/**\n * Get URL hash in a platform-safe way\n * @returns {string} URL hash without the # symbol\n */\nexport const getURLHash = () => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    return window.location.hash.substring(1); // Remove the #\n  }\n  return '';\n};\n\n/**\n * Set URL hash in a platform-safe way (web only)\n * @param {string} hash - Hash to set (without #)\n */\nexport const setURLHash = (hash) => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    window.location.hash = hash ? `#${hash}` : '';\n  }\n};\n\n/**\n * Listen for navigation changes in a platform-aware way\n * @param {Function} callback - Function to call when navigation changes\n * @returns {Function} Cleanup function\n */\nexport const addNavigationListener = (callback) => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined') {\n    const handlePopState = (event) => {\n      const routeInfo = getCurrentRoute();\n      callback(routeInfo, event);\n    };\n\n    window.addEventListener('popstate', handlePopState);\n    \n    return () => {\n      window.removeEventListener('popstate', handlePopState);\n    };\n  }\n  \n  // For mobile, navigation listeners should be handled by React Navigation\n  return () => {};\n};\n\n/**\n * Check if running on web platform\n * @returns {boolean}\n */\nexport const isWeb = () => Platform.OS === 'web';\n\n/**\n * Check if running on mobile platform\n * @returns {boolean}\n */\nexport const isMobile = () => Platform.OS === 'ios' || Platform.OS === 'android';\n\n/**\n * Get platform-safe user agent string\n * @returns {string}\n */\nexport const getUserAgent = () => {\n  if (Platform.OS === 'web' && typeof navigator !== 'undefined') {\n    return navigator.userAgent;\n  }\n  return `React Native ${Platform.OS} ${Platform.Version || 'unknown'}`;\n};\n\n/**\n * Redirect to signin page in a platform-aware way\n * @param {Object} navigation - React Navigation object\n */\nexport const redirectToSignIn = (navigation) => {\n  if (Platform.OS === 'web' && typeof window !== 'undefined' && window.location) {\n    try {\n      // On web, use URL navigation\n      if (window.location.hash) {\n        window.location.hash = '#/signin';\n      } else {\n        window.location.href = '/signin';\n      }\n    } catch (error) {\n      debugLog('MBA9999: Error in web redirectToSignIn:', error);\n    }\n  } else if (navigation) {\n    // On mobile, use React Navigation\n    navigation.navigate('SignIn');\n  }\n};\n\nexport default {\n  getCurrentRoute,\n  getURLParams,\n  goBack,\n  navigateTo,\n  replaceRoute,\n  updateURLParams,\n  getURLHash,\n  setURLHash,\n  addNavigationListener,\n  isWeb,\n  isMobile,\n  getUserAgent,\n  redirectToSignIn\n}; ","import { format, parse } from 'date-fns';\nimport { formatInTimeZone, toZonedTime, fromZonedTime, utcToZonedTime, getTimezoneOffset } from 'date-fns-tz';\nimport moment from 'moment-timezone';\nimport { debugLog } from '../context/AuthContext';\n// import { format as formatDate } from 'date-fns';\nimport { parseISO } from 'date-fns';\n\n/**\n * Formats a date string into \"MMM d\" format (e.g., \"Mar 5\")\n */\nexport const formatDate = (dateString) => {\n    if (!dateString) return '';\n    \n    debugLog('MBA5677: Formatting date input', dateString);\n    \n    try {\n        // First try to parse as ISO date\n        const parsedDate = parseISO(dateString);\n        \n        // Check if the parsed date is valid\n        if (!isNaN(parsedDate.getTime())) {\n            const month = parsedDate.toLocaleString('default', { month: 'short' });\n            const day = parsedDate.getDate();\n            debugLog('MBA5677: Parsed as ISO date', { parsedDate, month, day });\n            return `${month} ${day}`;\n        }\n        \n        // Fallback to parse as YYYY-MM-DD format\n        const date = parse(dateString, 'yyyy-MM-dd', new Date());\n        \n        // Check if the parsed date is valid\n        if (!isNaN(date.getTime())) {\n            const month = date.toLocaleString('default', { month: 'short' });\n            const day = date.getDate();\n            debugLog('MBA5677: Parsed with date-fns', { date, month, day });\n            return `${month} ${day}`;\n        }\n        \n        // If both parsing methods failed, try moment\n        const momentDate = moment(dateString);\n        if (momentDate.isValid()) {\n            const formatted = momentDate.format('MMM D');\n            debugLog('MBA5677: Parsed with moment', { momentDate, formatted });\n            return formatted;\n        }\n        \n        debugLog('MBA5677: Failed to parse date', dateString);\n        return dateString; // Return original if all parsing fails\n    } catch (error) {\n        debugLog('MBA5677: Error formatting date', { dateString, error });\n        return dateString; // Return original on error\n    }\n};\n\n/**\n * Converts 12-hour time format to 24-hour format\n */\nexport const convertTo24Hour = (time12h) => {\n    if (!time12h.includes(' ')) {\n        return time12h;\n    }\n\n    const [time, modifier] = time12h.split(' ');\n    let [hours, minutes] = time.split(':');\n    hours = parseInt(hours, 10);\n    \n    if (modifier === 'PM' && hours < 12) {\n        hours += 12;\n    } else if (modifier === 'AM' && hours === 12) {\n        hours = 0;\n    }\n    \n    return `${hours.toString().padStart(2, '0')}:${minutes}`;\n};\n\n/**\n * Converts 24-hour time format to 12-hour format\n */\nexport const convertTo12Hour = (time24h) => {\n    if (time24h.includes(' ')) {\n        return time24h;\n    }\n\n    const [hours24, minutes] = time24h.split(':');\n    const hours = parseInt(hours24, 10);\n    \n    let period = hours >= 12 ? 'PM' : 'AM';\n    let hours12 = hours % 12;\n    hours12 = hours12 === 0 ? 12 : hours12;\n    \n    return `${hours12}:${minutes} ${period}`;\n};\n\n/**\n * Converts a time from a specific timezone to UTC\n * @param {string} date - The date in YYYY-MM-DD format\n * @param {string} time - The time in HH:mm format (24-hour)\n * @param {string} fromTimezone - The source timezone (e.g., 'US/Mountain')\n * @returns {Object} Object containing the UTC date and time\n */\nexport const convertToUTC = (date, time, fromTimezone) => {\n  try {\n    debugLog('MBA12345: Converting to UTC - Input:', { date, time, fromTimezone });\n\n    // Create a moment object in the source timezone\n    const localMoment = moment.tz(`${date} ${time}`, fromTimezone);\n    \n    // Convert to UTC\n    const utcMoment = localMoment.utc();\n    \n    // Format the date and time\n    const utcDate = utcMoment.format('YYYY-MM-DD');\n    const utcTime = utcMoment.format('HH:mm');\n\n    debugLog('MBA12345: UTC conversion result:', {\n      input: {\n        date,\n        time,\n        fromTimezone\n      },\n      output: {\n        utcDate,\n        utcTime,\n        originalMoment: localMoment.format(),\n        utcMoment: utcMoment.format()\n      }\n    });\n    \n    return {\n      date: utcDate,\n      time: utcTime\n    };\n  } catch (error) {\n    debugLog('MBA12345: Error converting to UTC:', error);\n    return { date, time }; // Return original values as fallback\n  }\n};\n\n/**\n * Converts UTC date and time to local date and time\n */\nexport const convertDateTimeFromUTC = (date, time, timezone, useMilitaryTime = false) => {\n    try {\n        debugLog('MBA5677: Converting UTC to local:', { date, time, timezone, useMilitaryTime });\n        \n        // Ensure we have valid inputs\n        if (!date || !time) {\n            debugLog('MBA5677: Invalid input for conversion', { date, time });\n            return { date, time };\n        }\n        \n        // Multiple parsing strategies for more robust date handling\n        let utcDate = null;\n        \n        // Strategy 1: Try standard ISO format parsing\n        try {\n            // Handle different time formats\n            let formattedTime = time;\n            if (time.includes('.')) {\n                formattedTime = time.split('.')[0]; // Remove milliseconds if present\n            }\n            \n            // Create a proper ISO string\n            const isoString = `${date}T${formattedTime}${formattedTime.includes('Z') ? '' : 'Z'}`;\n            debugLog('MBA5677: Trying ISO string format', isoString);\n            \n            // Create Date object\n            utcDate = new Date(isoString);\n            \n            // Check if valid\n            if (isNaN(utcDate.getTime())) {\n                debugLog('MBA5677: ISO format parsing failed');\n                utcDate = null;\n            } else {\n                debugLog('MBA5677: ISO format parsing succeeded');\n            }\n        } catch (parseError) {\n            debugLog('MBA5677: Error in ISO format parsing', parseError);\n        }\n        \n        // Strategy 2: Try direct date-fns parsing\n        if (!utcDate) {\n            try {\n                debugLog('MBA5677: Trying date-fns parsing');\n                const dateStr = `${date} ${time}`;\n                utcDate = moment.utc(dateStr).toDate();\n                \n                // Check if valid\n                if (isNaN(utcDate.getTime())) {\n                    debugLog('MBA5677: date-fns parsing failed');\n                    utcDate = null;\n                } else {\n                    debugLog('MBA5677: date-fns parsing succeeded');\n                }\n            } catch (parseError) {\n                debugLog('MBA5677: Error in date-fns parsing', parseError);\n            }\n        }\n        \n        // Strategy 3: Try manual parsing\n        if (!utcDate) {\n            try {\n                debugLog('MBA5677: Trying manual parsing');\n                // Split the date and time parts\n                const [year, month, day] = date.split('-').map(Number);\n                let hours = 0, minutes = 0;\n                \n                // Parse time\n                if (time.includes(':')) {\n                    const timeParts = time.split(':');\n                    hours = parseInt(timeParts[0], 10);\n                    minutes = parseInt(timeParts[1], 10);\n                }\n                \n                // Create UTC date\n                utcDate = new Date(Date.UTC(year, month - 1, day, hours, minutes));\n                \n                // Check if valid\n                if (isNaN(utcDate.getTime())) {\n                    debugLog('MBA5677: Manual parsing failed');\n                    utcDate = null;\n                } else {\n                    debugLog('MBA5677: Manual parsing succeeded');\n                }\n            } catch (parseError) {\n                debugLog('MBA5677: Error in manual parsing', parseError);\n            }\n        }\n        \n        // If all parsing strategies failed, return original values\n        if (!utcDate) {\n            debugLog('MBA5677: All parsing strategies failed, returning original');\n            return { date, time };\n        }\n        \n        debugLog('MBA5677: Valid UTC Date created:', utcDate.toISOString());\n        \n        // Convert to user's timezone using moment for reliability\n        const utcMoment = moment.utc(utcDate);\n        const localMoment = utcMoment.tz(timezone || 'UTC');\n        \n        // Format the local date and time\n        const localDateStr = localMoment.format('YYYY-MM-DD');\n        const localTimeStr = localMoment.format(useMilitaryTime ? 'HH:mm' : 'h:mm A');\n        \n        debugLog('MBA5677: Date conversion result:', {\n            input: { date, time, timezone },\n            utc: utcDate.toISOString(),\n            utcMoment: utcMoment.format(),\n            localMoment: localMoment.format(),\n            output: { date: localDateStr, time: localTimeStr }\n        });\n        \n        return {\n            date: localDateStr,\n            time: localTimeStr\n        };\n    } catch (error) {\n        debugLog('MBA5677: Error in convertDateTimeFromUTC:', error, { date, time, timezone });\n        return { date, time }; // Return original on error\n    }\n};\n\n/**\n * Gets formatted times matching backend format\n */\nexport const getFormattedTimes = (startDate, startTime, endDate, endTime, timezone) => {\n    try {\n        console.log('MBA134njo0vh032 getFormattedTimes input:', {\n            startDate,\n            startTime,\n            endDate,\n            endTime,\n            timezone\n        });\n\n        // Parse the date and time strings\n        const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n        const [startHours, startMinutes] = startTime.split(':').map(Number);\n        const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n        const [endHours, endMinutes] = endTime.split(':').map(Number);\n\n        console.log('MBA134njo0vh032 Parsed components:', {\n            start: {\n                year: startYear,\n                month: startMonth,\n                day: startDay,\n                hours: startHours,\n                minutes: startMinutes\n            },\n            end: {\n                year: endYear,\n                month: endMonth,\n                day: endDay,\n                hours: endHours,\n                minutes: endMinutes\n            }\n        });\n\n        // Create ISO date strings for the local times in the specified timezone\n        const startDateStr = `${startYear}-${String(startMonth).padStart(2, '0')}-${String(startDay).padStart(2, '0')}T${String(startHours).padStart(2, '0')}:${String(startMinutes).padStart(2, '0')}:00`;\n        const endDateStr = `${endYear}-${String(endMonth).padStart(2, '0')}-${String(endDay).padStart(2, '0')}T${String(endHours).padStart(2, '0')}:${String(endMinutes).padStart(2, '0')}:00`;\n\n        console.log('MBA134njo0vh032 Created date strings:', {\n            startDateStr,\n            endDateStr,\n            timezone\n        });\n\n        // Format the dates directly using formatInTimeZone with the input timezone\n        const formatted_start = formatInTimeZone(startDateStr, timezone, \"MMM dd, yyyy (h:mm a)\");\n        const formatted_end = formatInTimeZone(endDateStr, timezone, \"MMM dd, yyyy (h:mm a)\");\n\n        console.log('MBA134njo0vh032 Formatted dates:', {\n            formatted_start,\n            formatted_end\n        });\n\n        // Create Date objects for duration calculation\n        const startDateTime = new Date(startDateStr);\n        const endDateTime = new Date(endDateStr);\n\n        // Calculate duration in milliseconds\n        const durationMs = endDateTime - startDateTime;\n        \n        // Calculate days and remaining hours\n        const days = Math.floor(durationMs / (24 * 60 * 60 * 1000));\n        const remainingMs = durationMs % (24 * 60 * 60 * 1000);\n        const hours = Math.floor(remainingMs / (60 * 60 * 1000));\n\n        // Format duration string\n        let durationStr = '';\n        if (days > 0) {\n            durationStr += `${days} day${days > 1 ? 's' : ''}`;\n            if (hours > 0) {\n                durationStr += `, ${hours} hour${hours > 1 ? 's' : ''}`;\n            }\n        } else if (hours > 0) {\n            durationStr += `${hours} hour${hours > 1 ? 's' : ''}`;\n        }\n\n        console.log('MBA134njo0vh032 Final formatted output:', {\n            formatted_start,\n            formatted_end,\n            duration: durationStr,\n            timezone: timezone.split('/')[1] || timezone\n        });\n\n        return {\n            formatted_start,\n            formatted_end,\n            duration: durationStr || '0 hours',\n            timezone: timezone.split('/')[1] || timezone\n        };\n    } catch (error) {\n        console.error('Error in getFormattedTimes:', error);\n        throw error;\n    }\n};\n\n/**\n * Check if times cross DST boundary\n */\nexport const checkDSTChange = (startDate, startTime, endDate, endTime, timezone) => {\n    try {\n        // Parse dates and times\n        const [startYear, startMonth, startDay] = startDate.split('-').map(Number);\n        const [startHours, startMinutes] = convertTo24Hour(startTime).split(':').map(Number);\n        const [endYear, endMonth, endDay] = endDate.split('-').map(Number);\n        const [endHours, endMinutes] = convertTo24Hour(endTime).split(':').map(Number);\n\n        // Create local dates and convert to zoned time\n        const startLocalDate = new Date(startYear, startMonth - 1, startDay, startHours, startMinutes);\n        const endLocalDate = new Date(endYear, endMonth - 1, endDay, endHours, endMinutes);\n        \n        const startZonedDate = fromZonedTime(toZonedTime(startLocalDate, timezone));\n        const endZonedDate = fromZonedTime(toZonedTime(endLocalDate, timezone));\n\n        // Convert back to local and check if offsets are different\n        const startLocal = toZonedTime(startZonedDate, timezone);\n        const endLocal = toZonedTime(endZonedDate, timezone);\n        \n        return startLocal.getTimezoneOffset() !== endLocal.getTimezoneOffset();\n    } catch (error) {\n        console.error('Error in checkDSTChange:', error);\n        throw error;\n    }\n};\n\n/**\n * Formats an occurrence from UTC times to local times with proper formatting\n */\nexport const formatOccurrenceFromUTC = (occurrence, userTimezone) => {\n  try {\n    // Always use full timezone name for conversions\n    // If userTimezone doesn't include '/', assume it's an abbreviation and default to US/Mountain\n    // In practice, userTimezone should come from timeSettings.timezone which is a full timezone identifier\n    const fullTimezone = userTimezone && userTimezone.includes('/') ? userTimezone : 'US/Mountain';\n    \n    console.log('MBA134njo0vh03 Formatting occurrence from UTC:', {\n      occurrence,\n      userTimezone,\n      fullTimezone\n    });\n\n    // Convert UTC times to local\n    const localStart = convertDateTimeFromUTC(\n      occurrence.start_date,\n      occurrence.start_time,\n      fullTimezone\n    );\n\n    const localEnd = convertDateTimeFromUTC(\n      occurrence.end_date,\n      occurrence.end_time,\n      fullTimezone\n    );\n\n    console.log('MBA134njo0vh03 Local start:', localStart);\n    console.log('MBA134njo0vh03 Local end:', localEnd);\n    console.log('MBA134njo0vh03 Full timezone:', fullTimezone);\n\n    // Get formatted times\n    const formattedTimes = getFormattedTimes(\n      localStart.date,\n      localStart.time,\n      localEnd.date,\n      localEnd.time,\n      fullTimezone\n    );\n\n    console.log('MBA134njo0vh03 Formatted times from getFormattedTimes:', formattedTimes);\n\n    // Check for DST change\n    const hasDSTChange = checkDSTChange(\n      localStart.date,\n      localStart.time,\n      localEnd.date,\n      localEnd.time,\n      fullTimezone\n    );\n\n    // Use the provided timezone abbreviation directly\n    const tzAbbrev = userTimezone.includes('/') ? userTimezone.split('/')[1] : userTimezone;\n\n    return {\n      ...occurrence,\n      formatted_start: formattedTimes.formatted_start,\n      formatted_end: formattedTimes.formatted_end,\n      duration: formattedTimes.duration,\n      timezone: tzAbbrev,\n      dst_message: hasDSTChange ? \n        \"Elapsed time may be different than expected due to Daylight Savings Time.\" : \n        \"\"\n    };\n  } catch (error) {\n    console.error('Error in formatOccurrenceFromUTC:', error);\n    return {\n      ...occurrence,\n      formatted_start: occurrence.start_date,\n      formatted_end: occurrence.end_date,\n      duration: 'Unknown',\n      timezone: userTimezone.includes('/') ? userTimezone.split('/')[1] : userTimezone,\n      dst_message: ''\n    };\n  }\n};\n\n/**\n * Formats a date for API calls (YYYY-MM-DD)\n * @param {Date|string} date - The date to format\n * @returns {string} Formatted date string\n */\nexport const formatDateForAPI = (date) => {\n  if (!date) return null;\n  \n  debugLog('MBA12345 formatDateForAPI input:', date, typeof date);\n  \n  let dateObj;\n  \n  try {\n    // If date is already a string in YYYY-MM-DD format, return as is\n    if (typeof date === 'string' && /^\\d{4}-\\d{2}-\\d{2}$/.test(date)) {\n      debugLog('MBA12345 formatDateForAPI: already in YYYY-MM-DD format:', date);\n      return date;\n    }\n    \n    // If date is an object with date, startTime, and endTime properties, it's a date item\n    if (typeof date === 'object' && date.date && date.startTime && date.endTime) {\n      debugLog('MBA12345 formatDateForAPI: extracting date from date item:', date.date);\n      return date.date;\n    }\n    \n    // If date is a Date object\n    if (date instanceof Date) {\n      dateObj = date;\n      debugLog('MBA12345 formatDateForAPI: using Date object');\n    } else {\n      // Otherwise, try to create a Date from whatever was passed in\n      dateObj = new Date(date);\n      debugLog('MBA12345 formatDateForAPI: created Date from input:', dateObj);\n    }\n    \n    // Check if the date is valid\n    if (isNaN(dateObj.getTime())) {\n      debugLog('MBA12345 formatDateForAPI: invalid date:', date);\n      throw new Error('Invalid date format');\n    }\n    \n    // Format as YYYY-MM-DD\n    const year = dateObj.getFullYear();\n    const month = String(dateObj.getMonth() + 1).padStart(2, '0');\n    const day = String(dateObj.getDate()).padStart(2, '0');\n    \n    const formattedDate = `${year}-${month}-${day}`;\n    debugLog('MBA12345 formatDateForAPI result:', formattedDate);\n    return formattedDate;\n  } catch (error) {\n    debugLog('MBA12345 formatDateForAPI error:', error, 'for input:', date);\n    throw error;\n  }\n};\n\n/**\n * Formats a time for API calls (HH:mm)\n * @param {Object|string} time - The time to format (object with hours/minutes or string)\n * @returns {string} Formatted time string in 24-hour format\n */\nexport const formatTimeForAPI = (time) => {\n  if (!time) {\n    debugLog('MBA12345 formatTimeForAPI received null/undefined time:', time);\n    return null;\n  }\n  \n  debugLog('MBA12345 formatTimeForAPI input:', time);\n  \n  let hours, minutes;\n  \n  if (typeof time === 'object' && time.hours !== undefined) {\n    // Handle time object format\n    hours = time.hours;\n    minutes = time.minutes;\n    debugLog('MBA12345 formatTimeForAPI processing time object:', { hours, minutes });\n  } else if (typeof time === 'string') {\n    // Handle string format (assuming HH:mm format)\n    [hours, minutes] = time.split(':').map(Number);\n    debugLog('MBA12345 formatTimeForAPI processing time string:', { hours, minutes });\n  } else {\n    debugLog('MBA12345 formatTimeForAPI invalid time format:', typeof time);\n    throw new Error('Invalid time format');\n  }\n  \n  // Ensure hours and minutes are valid\n  hours = parseInt(hours);\n  minutes = parseInt(minutes);\n  \n  if (isNaN(hours) || isNaN(minutes)) {\n    debugLog('MBA12345 formatTimeForAPI invalid time values:', { hours, minutes });\n    throw new Error('Invalid time values');\n  }\n  \n  // Format as HH:mm\n  const result = `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}`;\n  debugLog('MBA12345 formatTimeForAPI result:', result);\n  return result;\n};\n\n// Format types for consistent date/time formatting across the app\nexport const FORMAT_TYPES = {\n  SHORT_DATE: 'SHORT_DATE',           // Mar 4\n  MEDIUM_DATE: 'MEDIUM_DATE',         // Mar 4, 2025\n  LONG_DATE: 'LONG_DATE',            // March 4, 2025\n  TIME_ONLY: 'TIME_ONLY',            // 4:42 PM\n  TIME_ONLY_24H: 'TIME_ONLY_24H',    // 16:42\n  DATE_TIME: 'DATE_TIME',            // Mar 4, 2025 at 4:42 PM\n  DATE_TIME_WITH_TZ: 'DATE_TIME_WITH_TZ', // Mar 4, 2025 at 4:42 PM MDT\n  DATE_RANGE: 'DATE_RANGE',          // Mar 4 - Mar 5\n  DATE_TIME_RANGE: 'DATE_TIME_RANGE' // Mar 4, 2025 at 4:42 PM - Mar 5, 2025 at 5:00 PM MDT\n};\n\n/**\n * Converts UTC date and time strings to user's timezone and formats according to specified type\n * @param {string} dateStr - Date in YYYY-MM-DD format\n * @param {string} timeStr - Time in HH:mm format (24-hour)\n * @param {string} userTimezone - User's timezone (e.g., 'America/Denver')\n * @param {string} formatType - One of FORMAT_TYPES\n * @returns {string} Formatted date/time string\n */\nexport const formatFromUTC = (dateStr, timeStr = null, userTimezone, formatType = FORMAT_TYPES.MEDIUM_DATE) => {\n  try {\n    console.log('MBA134njo0vh02c23 formatFromUTC input:', { dateStr, timeStr, userTimezone, formatType });\n    \n    // Create a moment object in UTC with proper format\n    const utcMoment = moment.utc(`${dateStr}T${timeStr || '00:00'}:00Z`);\n    console.log('MBA134njo0vh02c23 UTC moment:', utcMoment.format());\n\n    // Convert to user's timezone\n    const localMoment = utcMoment.tz(userTimezone);\n    console.log('MBA134njo0vh02c23 Local moment:', localMoment.format());\n\n    // Get timezone abbreviation\n    const tzAbbrev = localMoment.zoneAbbr();\n    console.log('MBA134njo0vh02c23 Timezone abbreviation:', tzAbbrev);\n\n    // Format based on type\n    switch (formatType) {\n      case FORMAT_TYPES.SHORT_DATE:\n        return localMoment.format('MMM D');\n      case FORMAT_TYPES.MEDIUM_DATE:\n        return localMoment.format('MMM D, YYYY');\n      case FORMAT_TYPES.LONG_DATE:\n        return localMoment.format('MMMM D, YYYY');\n      case FORMAT_TYPES.TIME_ONLY:\n        return localMoment.format('h:mm A');\n      case FORMAT_TYPES.TIME_ONLY_24H:\n        return localMoment.format('HH:mm');\n      case FORMAT_TYPES.DATE_TIME:\n        return localMoment.format(\"MMM D, YYYY 'at' h:mm A\");\n      case FORMAT_TYPES.DATE_TIME_WITH_TZ:\n        return `${localMoment.format(\"MMM D, YYYY 'at' h:mm A\")} ${tzAbbrev}`;\n      default:\n        return localMoment.format('MMM D, YYYY');\n    }\n  } catch (error) {\n    console.error('MBA134njo0vh02c23 Error in formatFromUTC:', error);\n    return '';\n  }\n};\n\n/**\n * Formats a date/time range from UTC to user's timezone\n * @param {Object} params - Range parameters\n * @param {string} params.startDate - Start date in YYYY-MM-DD format\n * @param {string} params.startTime - Start time in HH:mm format\n * @param {string} params.endDate - End date in YYYY-MM-DD format\n * @param {string} params.endTime - End time in HH:mm format\n * @param {string} params.userTimezone - User's timezone\n * @param {boolean} params.includeTimes - Whether to include times in the output\n * @param {boolean} params.includeTimezone - Whether to include timezone in the output\n * @returns {string} Formatted date/time range\n */\nexport const formatDateTimeRangeFromUTC = ({\n  startDate,\n  startTime,\n  endDate,\n  endTime,\n  userTimezone,\n  includeTimes = true,\n  includeTimezone = true\n}) => {\n  try {\n    debugLog('MBA134njo: formatDateTimeRangeFromUTC input:', {\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n      userTimezone,\n      includeTimes,\n      includeTimezone\n    });\n\n    if (includeTimes) {\n      // Create UTC moments with proper format\n      const startUtcMoment = moment.utc(`${startDate}T${startTime}:00Z`);\n      const endUtcMoment = moment.utc(`${endDate}T${endTime}:00Z`);\n\n      debugLog('MBA134njo: UTC moments:', {\n        start: startUtcMoment.format(),\n        end: endUtcMoment.format()\n      });\n\n      // Convert to local timezone\n      const startLocalMoment = startUtcMoment.tz(userTimezone);\n      const endLocalMoment = endUtcMoment.tz(userTimezone);\n\n      debugLog('MBA134njo: Local moments:', {\n        start: startLocalMoment.format(),\n        end: endLocalMoment.format()\n      });\n\n      // Get timezone abbreviation\n      const tzAbbrev = startLocalMoment.zoneAbbr();\n      debugLog('MBA134njo: Timezone abbreviation:', tzAbbrev);\n\n      // Format the dates without timezone in the format string\n      const startFormatted = startLocalMoment.format(\"MMM D, YYYY h:mm A\");\n      const endFormatted = endLocalMoment.format(\"MMM D, YYYY h:mm A\");\n\n      // Add timezone abbreviation if needed\n      const finalStart = includeTimezone ? `${startFormatted} ${tzAbbrev}` : startFormatted;\n      const finalEnd = includeTimezone ? `${endFormatted} ${tzAbbrev}` : endFormatted;\n\n      debugLog('MBA134njo: Formatted dates:', {\n        startFormatted: finalStart,\n        endFormatted: finalEnd,\n        tzAbbrev\n      });\n      \n      return `${finalStart} - ${finalEnd}`;\n    } else {\n      const startLocalMoment = moment.utc(`${startDate}T00:00:00Z`).tz(userTimezone);\n      const endLocalMoment = moment.utc(`${endDate}T00:00:00Z`).tz(userTimezone);\n      \n      return `${startLocalMoment.format('MMM D, YYYY')} - ${endLocalMoment.format('MMM D, YYYY')}`;\n    }\n  } catch (error) {\n    debugLog('MBA134njo: Error in formatDateTimeRangeFromUTC:', error);\n    return '';\n  }\n};\n\n/**\n * Converts a time string from UTC to local timezone, handling date boundary changes\n * @param {string} dateStr - Date in \"YYYY-MM-DD\" format \n * @param {string} timeStr - Time in \"HH:MM\" format (24-hour)\n * @param {string} timezone - User's timezone\n * @returns {Object} Object with time (hours/minutes) and adjusted date if it changed\n */\nfunction convertTimeFromUTC(dateStr, timeStr, timezone = 'US/Mountain') {\n  try {\n    // Use provided timezone or default to US/Mountain\n    // In practice, timezone should come from timeSettings.timezone from AuthContext\n    const targetTimezone = timezone || 'US/Mountain';\n    \n    // Create a full UTC datetime string\n    const utcDate = `${dateStr}T${timeStr}:00Z`;\n    \n    // Convert to local timezone using moment-timezone\n    const utcMoment = moment.utc(utcDate);\n    const localMoment = utcMoment.tz(targetTimezone);\n    \n    // Extract hours and minutes with safety checks\n    const hours = localMoment.hours();\n    const minutes = localMoment.minutes();\n    \n    // Ensure we have valid numbers\n    if (isNaN(hours) || isNaN(minutes)) {\n      debugLog('MBA2j3kbr9hve4: Invalid hours or minutes from moment conversion:', { hours, minutes });\n      throw new Error('Invalid time values from moment conversion');\n    }\n    \n    // Check if the date changed during conversion\n    const localDateStr = localMoment.format('YYYY-MM-DD');\n    const dateChanged = localDateStr !== dateStr;\n    \n    debugLog('MBA2j3kbr9hve4: Time conversion details:', {\n      utc: {\n        date: dateStr,\n        time: timeStr,\n        fullDateTime: utcDate\n      },\n      local: {\n        date: localDateStr,\n        time: `${hours}:${minutes}`,\n        fullDateTime: localMoment.format(),\n        dateChanged\n      },\n      timezone: targetTimezone\n    });\n    \n    return {\n      hours,\n      minutes,\n      adjustedDate: dateChanged ? localDateStr : null\n    };\n  } catch (error) {\n    debugLog('MBA2j3kbr9hve4: Error converting time from UTC:', error);\n    \n    // Return the UTC time parsed directly as fallback\n    try {\n      const [hours, minutes] = timeStr.split(':').map(Number);\n      return {\n        hours: isNaN(hours) ? 0 : hours,\n        minutes: isNaN(minutes) ? 0 : minutes,\n        adjustedDate: null\n      };\n    } catch (parseError) {\n      debugLog('MBA2j3kbr9hve4: Error parsing fallback time:', parseError);\n      // Final fallback - return default times\n      return {\n        hours: 9,\n        minutes: 0,\n        adjustedDate: null\n      };\n    }\n  }\n}\n\n/**\n * Parses occurrences from the backend API into the format expected by DateSelectionCard and TimeSelectionCard\n * @param {Array} occurrences - Array of occurrence objects from the API\n * @param {string} userTimezone - User's timezone (from timeSettings.timezone), defaults to US/Mountain\n * @returns {Object} Object containing formatted dates and times\n */\nexport const parseOccurrencesForBookingSteps = (occurrences, userTimezone = 'US/Mountain') => {\n  debugLog('MBA2j3kbr9hve4: Parsing occurrences for booking steps:', occurrences);\n  \n  if (!occurrences || !Array.isArray(occurrences) || occurrences.length === 0) {\n    debugLog('MBA2j3kbr9hve4: No occurrences to parse');\n    return {\n      dates: [],\n      dateRange: null,\n      individualTimes: {},\n      defaultTimes: { startTime: { hours: 9, minutes: 0 }, endTime: { hours: 17, minutes: 0 } }\n    };\n  }\n  \n  // 1. Extract all unique dates and create Date objects\n  const uniqueDates = new Set();\n  const individualTimes = {};\n  \n  // Sort occurrences by date to ensure we get the correct start/end for date range\n  const sortedOccurrences = [...occurrences].sort((a, b) => {\n    return new Date(a.start_date) - new Date(b.start_date);\n  });\n  \n  debugLog('MBA2j3kbr9hve4: Sorted occurrences:', sortedOccurrences);\n  \n  // Use provided timezone or default to US/Mountain\n  // In practice, userTimezone should come from timeSettings.timezone from AuthContext\n  const targetTimezone = userTimezone || 'US/Mountain';\n  \n  // Process each occurrence\n  sortedOccurrences.forEach(occurrence => {\n    const { start_date, end_date, start_time, end_time } = occurrence;\n    \n    if (!start_date || !start_time || !end_time) {\n      debugLog('MBA2j3kbr9hve4: Invalid occurrence data, missing required fields:', occurrence);\n      return;\n    }\n    \n    // Convert UTC times to local timezone, accounting for date boundary changes\n    const localStartTime = convertTimeFromUTC(start_date, start_time, targetTimezone);\n    const localEndTime = convertTimeFromUTC(end_date || start_date, end_time, targetTimezone);\n    \n    // Determine the actual local date to use, accounting for timezone adjustments\n    const actualStartDate = localStartTime.adjustedDate || start_date;\n    const actualEndDate = localEndTime.adjustedDate || (end_date || start_date);\n    \n    debugLog('MBA2j3kbr9hve4: Converted times with date adjustments:', {\n      utc: { \n        startDate: start_date, \n        startTime: start_time,\n        endDate: end_date || start_date,\n        endTime: end_time\n      },\n      local: { \n        startDate: actualStartDate,\n        startTime: localStartTime,\n        endDate: actualEndDate,\n        endTime: localEndTime\n      }\n    });\n    \n    // Add the adjusted dates to uniqueDates set\n    uniqueDates.add(actualStartDate);\n    \n    // If end date is different and not the same as start date, add it too\n    if (actualEndDate !== actualStartDate) {\n      uniqueDates.add(actualEndDate);\n    }\n    \n    // Validate converted times before creating time objects\n    if (localStartTime.hours === undefined || localStartTime.minutes === undefined ||\n        localEndTime.hours === undefined || localEndTime.minutes === undefined) {\n      debugLog('MBA2j3kbr9hve4: Invalid time conversion result, skipping occurrence:', {\n        localStartTime,\n        localEndTime,\n        occurrence\n      });\n      return; // Skip this occurrence\n    }\n    \n    // Create time objects for the TimeSelectionCard using the actual local date as key\n    individualTimes[actualStartDate] = {\n      startTime: {\n        hours: localStartTime.hours,\n        minutes: localStartTime.minutes\n      },\n      endTime: {\n        hours: localEndTime.hours,\n        minutes: localEndTime.minutes\n      },\n      isOvernightForced: actualStartDate !== actualEndDate\n    };\n  });\n  \n  // 2. Create the dates array from the set of unique dates\n  const dates = Array.from(uniqueDates).map(dateStr => {\n    const [year, month, day] = dateStr.split('-').map(Number);\n    return new Date(year, month - 1, day);\n  });\n  \n  // Log the parsed dates to ensure they're correct\n  debugLog('MBA2j3kbr9hve4: Parsed dates after timezone adjustment:', dates.map(d => d.toISOString().split('T')[0]));\n  \n  // 3. Create the date range\n  let dateRange = null;\n  if (dates.length > 0) {\n    // Sort dates to ensure correct order\n    const sortedDates = [...dates].sort((a, b) => a - b);\n    \n    // Create a proper date range with JavaScript Date objects\n    dateRange = {\n      startDate: sortedDates[0],\n      endDate: sortedDates[sortedDates.length - 1]\n    };\n    \n    debugLog('MBA2j3kbr9hve4: Created date range after timezone adjustment:', {\n      startDate: dateRange.startDate.toISOString().split('T')[0],\n      endDate: dateRange.endDate.toISOString().split('T')[0]\n    });\n  }\n  \n  // 4. Get default times from the first occurrence if available\n  let defaultTimes = {\n    startTime: { hours: 9, minutes: 0 }, // Default fallback\n    endTime: { hours: 17, minutes: 0 }    // Default fallback\n  };\n  \n  if (Object.keys(individualTimes).length > 0) {\n    // Use the first converted time as the default\n    const firstDateKey = Object.keys(individualTimes)[0];\n    const firstTime = individualTimes[firstDateKey];\n    \n    // Validate the first time object before using it as default\n    if (firstTime && firstTime.startTime && firstTime.endTime &&\n        typeof firstTime.startTime.hours === 'number' && typeof firstTime.startTime.minutes === 'number' &&\n        typeof firstTime.endTime.hours === 'number' && typeof firstTime.endTime.minutes === 'number') {\n      defaultTimes = {\n        startTime: firstTime.startTime,\n        endTime: firstTime.endTime\n      };\n    } else {\n      debugLog('MBA2j3kbr9hve4: Invalid first time object, using fallback defaults:', firstTime);\n    }\n  }\n  \n  const result = {\n    dates,\n    dateRange,\n    individualTimes,\n    defaultTimes,\n    allTimesAreTheSame: Object.keys(individualTimes).length <= 1 || \n      Object.values(individualTimes).every(timeObj => \n        timeObj.startTime.hours === defaultTimes.startTime.hours &&\n        timeObj.startTime.minutes === defaultTimes.startTime.minutes &&\n        timeObj.endTime.hours === defaultTimes.endTime.hours &&\n        timeObj.endTime.minutes === defaultTimes.endTime.minutes\n      )\n  };\n  \n  debugLog('MBA2j3kbr9hve4: Parsed result with timezone adjustments:', result);\n  return result;\n}; ","import { API_BASE_URL } from '../config/config';\nimport { debugLog } from './logging';\nimport { Platform } from 'react-native';\n\n/**\n * WebSocket manager for real-time messaging\n */\nclass WebSocketManager {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.token = null;\n    this.connectionAttempts = 0;\n    this.maxConnectionAttempts = 5;\n    this.heartbeatInterval = null;\n    this.disconnectTimeout = null;\n    this.messageHandlers = new Map();\n    this.connectionId = null;\n    this.wsUrl = API_BASE_URL.replace('http://', 'ws://').replace('https://', 'wss://');\n    this._reconnectTimeout = null;\n    this.forceDisconnect = false;\n    this._hasVisibilityListener = false;\n    debugLog('MBA4321: WebSocketManager initialized, wsUrl is ' + this.wsUrl);\n  }\n\n  /**\n   * Initialize the WebSocket connection with authentication token\n   * @param {string} token - JWT token for authentication\n   */\n  init(token) {\n    if (!token) {\n      debugLog('MBA4321: Cannot initialize WebSocket without a valid token');\n      return;\n    }\n    \n    // If we already have this token and connection, no need to reconnect\n    if (this.token === token && this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: WebSocket already connected with this token');\n      return;\n    }\n    \n    // If we already had a token and it's different, this is a re-login, so force disconnect\n    if (this.token && this.token !== token) {\n      debugLog('MBA4321: Token changed, force disconnecting before reconnecting');\n      this.disconnect(true); // Force disconnect on token change\n    }\n    \n    this.token = token;\n    this.forceDisconnect = false; // Reset force disconnect flag\n    \n    // If we already have a socket but it's not working, close it first\n    if (this.socket && (this.socket.readyState === WebSocket.CLOSING || this.socket.readyState === WebSocket.CLOSED)) {\n      debugLog('MBA4321: Closing existing non-functional socket');\n      this.disconnect(false); // Non-forced disconnect\n    }\n    \n    // Connect with the token\n    this.connect();\n    \n    // Set up disconnect timeout (10 minutes of inactivity)\n    this.resetDisconnectTimeout();\n    \n    // Set up visibility change listener if in browser environment\n    this.setupVisibilityListener();\n  }\n\n  /**\n   * Set up visibility change listener to reconnect when tab becomes visible again\n   */\n  setupVisibilityListener() {\n    // Only run in browser environment\n    if (typeof document === 'undefined' || typeof window === 'undefined') {\n      return;\n    }\n    \n    // Skip if we've already set up the listener\n    if (this._hasVisibilityListener) {\n      return;\n    }\n    \n    debugLog('MBA4321: Setting up visibility change listener');\n    \n    // Create the handler function\n    const handleVisibilityChange = () => {\n      if (Platform.OS === 'web' && typeof document !== 'undefined' && document.visibilityState === 'visible') {\n        debugLog('MBA4321: Document became visible, checking WebSocket connection');\n        \n        // Only reconnect if we have a token and weren't explicitly disconnected\n        if (this.token && !this.forceDisconnect) {\n          this.reconnectIfNeeded();\n        }\n      }\n    };\n    \n    // Add the listener only for web\n    if (Platform.OS === 'web' && typeof document !== 'undefined') {\n      document.addEventListener('visibilitychange', handleVisibilityChange);\n      this._hasVisibilityListener = true;\n      \n      // Set up cleanup on page unload if needed\n      window.addEventListener('beforeunload', () => {\n        // Note: we deliberately don't disconnect here, as this would prevent\n        // browser session restoration from working properly\n        debugLog('MBA4321: Page unloading, connection may persist for session restore');\n      });\n    }\n  }\n\n  /**\n   * Connect to the WebSocket server\n   */\n  connect() {\n    // Skip connection if token is null or empty\n    if (!this.token) {\n      debugLog('MBA4321: Cannot connect WebSocket without a valid token');\n      return false;\n    }\n    \n    // If already connected, no need to reconnect\n    if (this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: WebSocket already connected and open');\n      return true;\n    }\n    \n    // If socket exists but is in CONNECTING state, don't start another connection\n    if (this.socket && this.socket.readyState === WebSocket.CONNECTING) {\n      debugLog('MBA4321: WebSocket already connecting, skipping duplicate connect');\n      return true;\n    }\n    \n    // Clear any existing heartbeat\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // If too many connection attempts, back off\n    if (this.connectionAttempts >= this.maxConnectionAttempts) {\n      debugLog(`MBA4321: Too many connection attempts (${this.connectionAttempts}), backing off`);\n      setTimeout(() => {\n        this.connectionAttempts = 0;\n        this.connect();\n      }, 60000);\n      return false;\n    }\n    \n    try {\n      this.connectionAttempts++;\n      \n      const wsEndpoint = `${this.wsUrl}/ws/messages/?token=${this.token}`;\n      debugLog(`MBA4321: [MY CONNECTION] Connecting WebSocket at ${wsEndpoint} (attempt ${this.connectionAttempts})`);\n      \n      this.socket = new WebSocket(wsEndpoint);\n      debugLog('MBA4321: [MY CONNECTION] WebSocket instance created');\n      \n      // Setup event handlers\n      this.socket.onopen = this.handleOpen.bind(this);\n      this.socket.onclose = this.handleClose.bind(this);\n      this.socket.onmessage = this.handleMessage.bind(this);\n      this.socket.onerror = this.handleError.bind(this);\n      \n      return true;\n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket connection error: ${error.message}`);\n      this.scheduleReconnect();\n      return false;\n    }\n  }\n\n  /**\n   * Handle WebSocket connection open\n   */\n  handleOpen(event) {\n    debugLog('MBA4321: [MY CONNECTION] WebSocket connection established');\n    this.isConnected = true;\n    this.connectionAttempts = 0; // Reset connection attempts on successful connection\n    \n    // Start sending heartbeats\n    this.startHeartbeat();\n    \n    // Log connection status for debugging\n    debugLog(`MBA4321: [MY CONNECTION] isConnected set to ${this.isConnected}, socket state: ${this.socket?.readyState}`);\n    \n    // Notify all handlers of connection\n    this.notifyHandlers('connection', { \n      status: 'connected',\n      timestamp: new Date().toISOString()\n    });\n    \n    // Send immediate heartbeat to verify connection on both sides\n    setTimeout(() => {\n      if (this.isConnected) {\n        debugLog('MBA4321: [MY CONNECTION] Sending initial heartbeat after connection');\n        this.send('heartbeat');\n      }\n    }, 500);\n  }\n\n  /**\n   * Handle WebSocket connection close\n   */\n  handleClose(event) {\n    // Skip redundant close events\n    if (!this.isConnected && !this.socket) {\n      return;\n    }\n\n    const wasConnected = this.isConnected;\n    this.isConnected = false;\n    this.socket = null;\n    \n    debugLog(`MBA4321: [MY CONNECTION] WebSocket connection closed: code=${event.code}, reason=${event.reason}`);\n    \n    // Clear heartbeat\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // Notify handlers of the disconnection, but only if we were previously connected\n    if (wasConnected) {\n      this.notifyHandlers('disconnection', {\n        code: event.code,\n        reason: event.reason,\n        timestamp: new Date().toISOString()\n      });\n    }\n    \n    // Attempt to reconnect\n    this.scheduleReconnect();\n  }\n\n  /**\n   * Handle WebSocket messages\n   */\n  handleMessage(event) {\n    try {\n      const message = JSON.parse(event.data);\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket message received: ${message.type}`);\n      \n      // For detailed message logging, use debugLog instead of is_DEBUG check\n      debugLog(`MBA4321: [MY CONNECTION] WebSocket message content: ${event.data}`);\n      \n      // For heartbeat responses, just log and return\n      if (message.type === 'heartbeat_ack') {\n        return;\n      }\n      \n      // Notify handlers based on message type\n      this.notifyHandlers(message.type, message.data || {});\n      \n      // Also notify global handlers\n      this.notifyHandlers('all', { type: message.type, data: message.data || {} });\n      \n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] Error handling WebSocket message: ${error.message}`);\n    }\n  }\n\n  /**\n   * Handle WebSocket errors\n   */\n  handleError(error) {\n    debugLog(`MBA4321: [MY CONNECTION] WebSocket error: ${error.message || 'Unknown error'}`);\n    \n    // Notify handlers of the error\n    this.notifyHandlers('error', { \n      error: error.message || 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n    \n    // Try to reconnect on error\n    this.scheduleReconnect();\n  }\n\n  /**\n   * Send a message through the WebSocket\n   */\n  send(type, data = {}) {\n    if (!this.isConnected || !this.socket) {\n      debugLog('MBA4321: [MY CONNECTION] Cannot send message, WebSocket not connected');\n      return false;\n    }\n\n    try {\n      const message = JSON.stringify({\n        type,\n        data,\n        timestamp: Date.now()\n      });\n      \n      this.socket.send(message);\n      debugLog(`MBA4321: [MY CONNECTION] Sent ${type} message through connection`);\n      return true;\n    } catch (error) {\n      debugLog(`MBA4321: [MY CONNECTION] Error sending message through connection: ${error.message}`);\n      return false;\n    }\n  }\n\n  /**\n   * Schedule a reconnection attempt\n   */\n  scheduleReconnect() {\n    // Skip if a reconnection is already scheduled\n    if (this._reconnectTimeout) {\n      debugLog('MBA4321: Reconnect already scheduled, skipping duplicate');\n      return;\n    }\n    \n    const delay = Math.min(1000 * Math.pow(2, this.connectionAttempts - 1), 30000);\n    debugLog(`MBA4321: Scheduling reconnect in ${delay}ms (attempt ${this.connectionAttempts})`);\n    \n    this._reconnectTimeout = setTimeout(() => {\n      this._reconnectTimeout = null;\n      if (!this.isConnected) {\n        this.connect();\n      }\n    }, delay);\n  }\n\n  /**\n   * Start sending heartbeat messages\n   */\n  startHeartbeat() {\n    // Clear any existing interval\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n    }\n\n    // Start a new interval\n    this.heartbeatInterval = setInterval(() => {\n      if (this.isConnected) {\n        this.send('heartbeat', { timestamp: Date.now() });\n        debugLog('MBA4321: Heartbeat sent');\n      } else {\n        debugLog('MBA4321: Skipping heartbeat, not connected');\n        clearInterval(this.heartbeatInterval);\n        this.heartbeatInterval = null;\n      }\n    }, 30000); // 30 seconds\n\n    debugLog('MBA4321: Heartbeat mechanism started');\n  }\n\n  /**\n   * Disconnect the WebSocket\n   * @param {boolean} force - Whether to force disconnect (true) or allow reconnect on visibility change (false)\n   */\n  disconnect(force = false) {\n    debugLog(`MBA4321: [MY CONNECTION] Disconnecting WebSocket connection (force=${force})`);\n    \n    // Set the force disconnect flag if requested\n    this.forceDisconnect = force;\n    \n    // If this is just a tab change and not a forced disconnect,\n    // we'll preserve the token to allow reconnection\n    const preserveToken = !force;\n    const savedToken = preserveToken ? this.token : null;\n    \n    // Clear heartbeat interval\n    if (this.heartbeatInterval) {\n      clearInterval(this.heartbeatInterval);\n      this.heartbeatInterval = null;\n    }\n    \n    // Clear disconnect timeout\n    if (this.disconnectTimeout) {\n      clearTimeout(this.disconnectTimeout);\n      this.disconnectTimeout = null;\n    }\n    \n    // Close the socket if it exists\n    if (this.socket) {\n      try {\n        // Remove all event handlers to prevent reconnection attempts from them\n        this.socket.onopen = null;\n        this.socket.onclose = null;\n        this.socket.onmessage = null;\n        this.socket.onerror = null;\n        \n        // Close the connection\n        this.socket.close();\n        this.socket = null;\n        \n        debugLog('MBA4321: [MY CONNECTION] WebSocket connection closed successfully');\n      } catch (error) {\n        debugLog(`MBA4321: [MY CONNECTION] Error closing WebSocket: ${error.message}`);\n      }\n    }\n    \n    // Reset connection state\n    this.isConnected = false;\n    \n    // Restore token if this wasn't a forced disconnect (just a tab change)\n    if (preserveToken && savedToken) {\n      this.token = savedToken;\n      debugLog('MBA4321: [MY CONNECTION] Preserved token for reconnection on tab visibility change');\n    }\n    \n    // Notify handlers of the disconnection\n    this.notifyHandlers('connection', { \n      status: 'disconnected',\n      forced: force,\n      timestamp: new Date().toISOString()\n    });\n    \n    return true;\n  }\n\n  /**\n   * Reset the disconnect timeout\n   * This timeout will disconnect the WebSocket after 10 minutes of inactivity\n   */\n  resetDisconnectTimeout() {\n    // Clear any existing timeout\n    if (this.disconnectTimeout) {\n      clearTimeout(this.disconnectTimeout);\n    }\n    \n    // Set a new timeout\n    this.disconnectTimeout = setTimeout(() => {\n      debugLog('MBA4321: Disconnecting due to inactivity');\n      this.disconnect();\n    }, 600000); // 10 minutes\n  }\n\n  /**\n   * Check if WebSocket is connected\n   * @returns {boolean} Connection status\n   */\n  isWebSocketConnected() {\n    return this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN;\n  }\n\n  /**\n   * Register a handler for specific message types\n   * @param {string} messageType - Type of message to handle\n   * @param {function} handler - Handler function\n   * @param {string} handlerId - Unique identifier for this handler\n   */\n  registerHandler(messageType, handler, handlerId) {\n    if (!this.messageHandlers.has(messageType)) {\n      this.messageHandlers.set(messageType, new Map());\n    }\n    \n    this.messageHandlers.get(messageType).set(handlerId, handler);\n    debugLog(`MBA4321: Registered handler ${handlerId} for ${messageType} messages`);\n    \n    return () => this.unregisterHandler(messageType, handlerId);\n  }\n\n  /**\n   * Unregister a handler\n   * @param {string} messageType - Type of message\n   * @param {string} handlerId - Handler ID to remove\n   */\n  unregisterHandler(messageType, handlerId) {\n    if (this.messageHandlers.has(messageType)) {\n      this.messageHandlers.get(messageType).delete(handlerId);\n      debugLog(`MBA4321: Unregistered handler ${handlerId} for ${messageType} messages`);\n    }\n  }\n\n  /**\n   * Notify all registered handlers for a specific message type\n   * @param {string} messageType - Type of message\n   * @param {object} data - Message data\n   */\n  notifyHandlers(messageType, data) {\n    if (this.messageHandlers.has(messageType)) {\n      const handlers = this.messageHandlers.get(messageType);\n      \n      handlers.forEach((handler, id) => {\n        try {\n          handler(data);\n        } catch (error) {\n          debugLog(`MBA4321: Error in ${messageType} handler ${id}: ${error.message}`);\n        }\n      });\n    }\n    \n    // Also notify global handlers (if any)\n    if (messageType !== 'all' && this.messageHandlers.has('all')) {\n      const globalHandlers = this.messageHandlers.get('all');\n      \n      globalHandlers.forEach((handler, id) => {\n        try {\n          handler({ type: messageType, data });\n        } catch (error) {\n          debugLog(`MBA4321: Error in global handler ${id}: ${error.message}`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Mark messages as read\n   * @param {number} conversationId - Conversation ID\n   * @param {Array} messageIds - Array of message IDs to mark as read\n   */\n  markMessagesAsRead(conversationId, messageIds) {\n    if (!Array.isArray(messageIds) || messageIds.length === 0) {\n      return false;\n    }\n    \n    return this.send('mark_read', {\n      conversation_id: conversationId,\n      message_ids: messageIds\n    });\n  }\n\n  /**\n   * Check if WebSocket is connected and reconnect if needed\n   * @returns {boolean} Whether a reconnection was attempted\n   */\n  reconnectIfNeeded() {\n    debugLog('MBA4321: [MY CONNECTION] Checking if WebSocket reconnection needed');\n    \n    // If we don't have a token or were force disconnected, don't try to reconnect\n    if (!this.token || this.forceDisconnect) {\n      debugLog(`MBA4321: [MY CONNECTION] Cannot reconnect - ${!this.token ? 'no token' : 'force disconnected'}`);\n      return false;\n    }\n    \n    // Check if we need to reconnect\n    const needsReconnect = (\n      !this.isConnected || \n      !this.socket || \n      (this.socket && (\n        this.socket.readyState === WebSocket.CLOSED || \n        this.socket.readyState === WebSocket.CLOSING\n      ))\n    );\n    \n    if (needsReconnect) {\n      debugLog('MBA4321: [MY CONNECTION] WebSocket needs reconnection, attempting now');\n      \n      // Reset the force disconnect flag\n      this.forceDisconnect = false;\n      \n      // Ensure old connection is properly closed\n      if (this.socket) {\n        try {\n          this.socket.onclose = null; // Prevent recursive reconnection\n          this.socket.close();\n          this.socket = null;\n        } catch (e) {\n          debugLog(`MBA4321: [MY CONNECTION] Error closing existing socket: ${e.message}`);\n        }\n      }\n      \n      this.isConnected = false;\n      \n      // Reconnect\n      setTimeout(() => {\n        this.connect();\n      }, 100);\n      \n      return true;\n    }\n    \n    // If we're connected, send a heartbeat to verify connection\n    if (this.isConnected && this.socket && this.socket.readyState === WebSocket.OPEN) {\n      debugLog('MBA4321: [MY CONNECTION] WebSocket appears connected, sending heartbeat to verify');\n      this.send('heartbeat');\n      \n      // Reset the disconnect timeout to prevent inactivity disconnection\n      this.resetDisconnectTimeout();\n    }\n    \n    return false;\n  }\n}\n\n// Create a singleton instance\nconst websocketManager = new WebSocketManager();\n\n// Export the singleton\nexport default websocketManager; ","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [174], () => (__webpack_require__(55819)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","overlay","position","Platform","OS","top","left","right","bottom","backgroundColor","zIndex","container","theme","colors","surface","borderRadius","padding","width","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","borderWidth","borderColor","primary","pulseBorder","opacity","closeButton","content","marginTop","title","fontSize","fontWeight","color","marginBottom","fontFamily","fonts","header","description","text","lineHeight","regular","footer","flexDirection","justifyContent","alignItems","leftButtons","flex","skipButton","paddingVertical","paddingHorizontal","skipText","secondary","navigationButton","navigationText","finishButton","finishText","stepIndicator","stepText","TutorialModal","step","totalSteps","onNext","onPrevious","onSkip","onClose","onFinish","userRole","is_DEBUG","isFirstStep","isLastStep","isVisible","setIsVisible","useState","currentScreen","setCurrentScreen","navigation","useNavigation","fadeAnim","useRef","Animated","Value","current","slideAnim","overlayAnim","Dimensions","get","useEffect","debugLog","currentStep","screen","timer","setTimeout","clearTimeout","addListener","timing","toValue","duration","useNativeDriver","start","initialPosition","finalPosition","getPositionStyles","slideStyle","transform","translateX","interpolate","inputRange","outputRange","translateY","_jsxs","_Fragment","children","_jsx","View","style","pointerEvents","TouchableOpacity","onPress","handleClose","MaterialCommunityIcons","name","size","Text","handleSkip","handlePrevious","handleFinish","handleNext","modalOverlay","modalContent","maxWidth","modalText","fontSizes","medium","textAlign","buttonContainer","gap","button","cancelButton","border","confirmButton","cancelButtonText","confirmButtonText","disabledButton","disabledText","ConfirmationModal","visible","onConfirm","actionText","isLoading","Modal","transparent","animationType","onRequestClose","disabled","ActivityIndicator","TutorialContext","createContext","defaultTutorialStatus","done_client_tutorial","done_pro_tutorial","tutorialSteps","client","tab","onStepEnter","navigate","professional","default","TutorialProvider","isSignedIn","useContext","AuthContext","tutorialStatus","setTutorialStatus","setCurrentStep","hasError","setHasError","errorMessage","setErrorMessage","setIsLoading","skipConfirmationVisible","setSkipConfirmationVisible","closeConfirmationVisible","setCloseConfirmationVisible","fetchTutorialStatus","async","response","axios","concat","API_BASE_URL","data","navigateToFrom","error","console","getCurrentStepData","roleKey","steps","safeCurrentStep","Math","min","max","length","stepData","Object","assign","nextStep","currentStepData","prevStep","from","to","fromTab","toTab","previousStep","completeTutorial","updates","patch","message","Provider","value","handleSkipCancel","handleSkipConfirm","handleCloseCancel","handleCloseConfirm","toast","minWidth","icon","marginRight","undefined","Toast","type","onDismiss","animation","timeoutRef","parallel","handleDismiss","callback","getBackgroundColor","warning","info","getIcon","numberOfLines","ellipsizeMode","hitSlop","ToastContext","useToast","context","Error","ToastProvider","setToast","showToast","useCallback","hideToast","prev","marginLeft","mobileContainer","mobileItemContainer","mobileMarker","mobileMilestoneTitle","mobileDashedLine","borderStyle","webContainer","dashedLine","webMarker","webMilestoneTitle","markerContainer","modalIconContainer","modalNumber","modalTitle","modalDescription","closeButtonText","RoadmapSection","selectedMilestone","setSelectedMilestone","modalVisible","setModalVisible","screenWidth","isMobile","roadmapData","id","mainColors","senary","quinary","quaternary","main","handleMilestonePress","milestone","map","index","FontAwesome5","number","BOOKING_STATES","ALL_SERVICES","SERVICE_TYPES","TIME_UNIT_MAPPING","BACKEND_TO_FRONTEND_TIME_UNIT","entries","reduce","acc","key","mockAdditionalRates","amount","mockServicesForCards","startingPrice","animalTypes","additionalRates","mockPets","animal_type","breed","age","months","years","weight","sex","friendlyWithChildren","friendlyWithCats","friendlyWithDogs","spayedNeutered","houseTrained","microchipped","adoptionDate","energyLevel","feedingSchedule","leftAlone","medication","additionalInstructions","vetName","vetAddress","vetPhone","insuranceProvider","vetDocuments","galleryImages","mockOwners","require","pet_types","last_booking","pets","email","phone","address","sharedBookingDetails","booking_id","status","owner_name","professional_name","service_details","service_type","pet_id","species","occurrences","occurrence_id","start_date","end_date","start_time","end_time","calculated_cost","base_total","rates","base_rate","additional_animal_rate","additional_animal_rate_applies","applies_after","unit_of_time","holiday_rate","holiday_days","additional_rates","cost_summary","subtotal","platform_fee","taxes","total_owner_cost","total_sitter_payout","is_prorated","mockBookingDetails","ownerName","startDate","startTime","CURRENT_USER_ID","values","booking","date","time","serviceType","numberOfPets","totalCost","costs","totalOwnerCost","professionalPayout","mockConversations","participant1_id","participant2_id","role_map","participant1_role","participant2_role","lastMessage","timestamp","unread","mockMessages","message_id","sender","is_booking_request","metadata","endDate","endTime","BLOG_POSTS","author","profilePicture","bio","publishDate","readTime","tags","references","authors","publication","url","year","doi","likes","comments","shares","useForm","ValidationError","formspree","log","windowWidth","windowHeight","reviews","image","ReviewImage","source","src","alt","Image","contentContainer","flexGrow","heroSection","overflow","heroImage","heroContent","heroText","textShadowColor","textShadowOffset","textShadowRadius","heroSignupButton","heroSignupButtonText","section","sectionTitle","largeLarge","card","appButtons","appButton","reviewsSection","reviewsBackground","reviewsOverlay","reviewsSubtitle","mediumLarge","reviewsTitle","reviewsContainer","overflowX","WebkitOverflowScrolling","msOverflowStyle","scrollbarWidth","scrollbarColor","reviewsContent","paddingBottom","reviewCard","reviewCardMobile","reviewQuote","reviewText","reviewAuthorContainer","reviewerImage","objectFit","reviewAuthorName","reviewAuthorTitle","paginationDots","paginationDot","margin","paginationDotActive","featuresSection","toggleContainer","toggleButton","toggleButtonActive","toggleButtonText","toggleButtonTextActive","whiteText","featuresContainer","featureColumn","SCREEN_WIDTH","columnTitle","featuresList","featureItem","featureIconCircle","featureIcon","featureTitle","featureText","actionButton","display","buttonText","blogSection","blogCard","authorContainer","authorImage","blogContent","authorInfo","authorName","dot","marginHorizontal","preview","flexWrap","tag","tagText","stats","stat","statText","roadmapSection","roadmapImage","roadmapOverlayText","faqSection","faqItem","faqButton","faqQuestion","faqToggle","faqAnswer","contactSection","contactContainer","input","socialIconsRow","socialIcon","footerLinksRow","footerLink","textDecorationLine","successMessage","messageInput","textAlignVertical","paddingTop","validationError","starsContainer","starIcon","waitlistSection","marginVertical","waitlistDescription","waitlistButton","scrollIndicators","scrollIndicatorButton","scrollIndicator","scrollIndicatorActive","scrollHint","scrollHintText","scrollContainer","scrollContent","serviceHighlightsSection","mainServiceTitle","servicesGrid","floatingButtonContainer","webButton","mobileButton","floatingButton","buttonLabel","wrapper","background","stepCircle","modernBorder","activeStepCircle","completedStepCircle","stepNumber","activeStepNumber","completedStepNumber","stepName","whiteSpace","activeStepName","line","completedLine","progressLine","progressFilled","progressEmpty","props","onStepPress","isDesktop","renderStep","isActive","isCompleted","React","stepIndex","sanitizeInput","options","removeHtmlTags","str","replace","removeSqlKeywords","sanitized","removeJavaScriptProtocol","removeEventHandlers","removeDataAttributes","toLowerCase","maxMessageLength","maxLength","substring","parts","split","slice","join","maxDescLength","validateMessage","minLength","allowEmpty","trim","isValid","sanitizedInput","sanitizedMessage","originalLength","test","validateEmail","sanitizedEmail","validateName","validatePassword","password","sanitizedPassword","hasUpperCase","hasLowerCase","hasNumbers","hasSpecialChar","IsProduction","validatePasswordMatch","confirmPassword","GENERAL_CATEGORIES","ANIMAL_ICONS","ANIMAL_CATEGORIES","getAllAnimalTypes","allTypes","forEach","category","includes","push","getAnimalIcon","animalName","categoryId","find","cat","CategorySelectionStep","serviceData","setServiceData","customAnimalInput","setCustomAnimalInput","customAnimalCategory","setCustomAnimalCategory","setScreenWidth","customAnimalError","setCustomAnimalError","updateLayout","addEventListener","removeEventListener","isAnimalTypeSelected","some","animal","handleAnimalTypeSelect","prevAnimalTypes","existingAnimalIndex","findIndex","updatedTypes","splice","hardcodedCategory","categoryToUse","foundCategory","newAnimal","categoryName","isCustom","filteredAnimalTypes","getFilteredAnimalTypes","animalTypesToShow","a","categories","subtitle","instructions","textSecondary","animalTypesGrid","animalTypeItem","animalTypeCard","selectedAnimalCard","mainLight","animalTypeRow","animalIconAndName","animalTypeName","customInputContainer","backgroundContrast","customInputTitle","inputRow","textInputContainer","textInput","textInputError","pickerContainer","picker","addButton","addButtonText","addButtonDisabled","addButtonTextDisabled","selectedAnimalsSection","selectedAnimalsTitle","selectedAnimalsList","animalBubble","animalBubbleText","removeAnimalButton","errorText","ScrollView","filter","animalType","TextInput","placeholder","onChangeText","validation","placeholderTextColor","placeHolderText","Picker","selectedValue","onValueChange","itemValue","Item","label","onChange","e","target","handleAddCustomAnimal","categoryInfo","generalCategories","categoryToAdd","MAX_DESCRIPTION_LENGTH","inputGroup","inputError","textArea","switchContainer","switchGroup","switchLabel","switchSubLabel","characterCount","ServiceDetailsStep","nameError","setNameError","descriptionError","setDescriptionError","serviceName","serviceDescription","multiline","Switch","isOvernight","trackColor","false","true","thumbColor","ios_backgroundColor","TIME_UNITS","keys","ANIMAL_THRESHOLDS","rateContainer","rateInputGroup","currencyInputContainer","currencySymbol","currencyInput","outlineStyle","unitSelector","unitText","dropdownContainer","maxHeight","dropdownScroll","dropdownScrollContent","dropdownItem","borderBottomWidth","borderBottomColor","selectedDropdownItem","dropdownText","selectedDropdownText","holidayRateContainer","holidayRateHeader","rateTypeToggleContainer","activeToggleButton","inactiveToggleButton","activeToggleText","inactiveToggleText","holidayRateInputWrapper","percentageInputContainer","percentageInput","percentageSymbol","calculatedHolidayRate","customRatesContainer","customRateItem","customRateContent","customRateActions","customRateTitleContainer","customRateTitle","customRateDescription","customRateAmount","newCustomRateContainer","customRateInput","addRateButton","addRateText","customRateButtonContainer","cancelRateButton","cancelRateText","saveRateButton","disabledSaveButton","saveRateText","customRateFormHeading","noCustomRatesText","fontStyle","customRateAction","modalIcon","modalButton","modalButtonText","disabledUnitSelector","RatesAndReviewStep","isUpdatingService","setIsUpdatingService","onProceedWithUpdate","showTimeUnitDropdown","setShowTimeUnitDropdown","showThresholdDropdown","setShowThresholdDropdown","customChargeVisible","setCustomChargeVisible","isHolidayRatePercent","setIsHolidayRatePercent","isEditingExistingRate","setIsEditingExistingRate","showUnsavedRateWarning","setShowUnsavedRateWarning","newCustomRate","setNewCustomRate","rate","baseRateError","setBaseRateError","additionalRateError","setAdditionalRateError","holidayRateError","setHolidayRateError","customRateTitleError","setCustomRateTitleError","customRateAmountError","setCustomRateAmountError","customRateDescriptionError","setCustomRateDescriptionError","availableTimeUnits","isPercent","base_rate_unit","holidayRate","holidayRateString","toString","hasUnsavedCustomRate","result","hasUnsaved","formatNumericInput","fieldType","hasScriptTags","hasSqlInjection","handleCustomRateChange","field","processed","handleAddCustomRate","rateValue","parseFloat","isNaN","sanitizedRate","renderDropdown","onSelect","containerStyle","contentContainerStyle","option","TouchableWithoutFeedback","handlePressOutside","keyboardType","unit","selectedUnit","additionalAnimalRate","additionalAnimalThreshold","threshold","rateToEdit","_","i","handleEditCustomRate","activeOpacity","handleDeleteCustomRate","STEPS","CATEGORY_SELECTION","SERVICE_DETAILS","RATES_AND_REVIEW","stepIndicatorContainer","scrollContentContainer","borderTopWidth","borderTopColor","nextButton","nextButtonText","disabledButtonText","ServiceCreationModal","onSave","initialService","setHasUnsavedChanges","hasHolidayRate","setError","isSubmitting","setIsSubmitting","isEditMode","setIsEditMode","isAddingCustomRate","setIsAddingCustomRate","animalTypesArray","animal_types","Array","isArray","holiday_rate_is_percent","service_id","service_name","is_overnight","canProceedToNextStep","hasValidBaseRate","hasValidAdditionalRate","callServiceApi","animalTypesDict","holidayRateValue","formattedData","parseInt","updateService","createService","serviceManagerData","lengthOfService","is_active","handleBack","SafeAreaView","StepProgressIndicator","renderCurrentStep","serviceCard","surfaceContrast","cardHeader","large","activeToggleContainer","activeText","smallMedium","inactiveText","switch","scaleX","scaleY","ratesContainer","rateRow","rateLabel","editButton","deleteButton","deleteButtonText","ProfessionalServiceCard","item","onEdit","onDelete","setIsActive","getPricingBackgroundColor","unitOfTime","idx","supportsHover","hasTouchScreen","window","navigator","maxTouchPoints","msMaxTouchPoints","matchMedia","matches","minHeight","serviceListContainer","serviceCardWrapper","headerContainer","headerActions","collapseButton","addServiceButton","addServiceText","emptyContainer","emptyText","portalTooltip","tooltipText","small","ServiceManager","services","setServices","isProfessionalTab","showModal","setShowModal","editingService","setEditingService","collapsedServices","setCollapsedServices","allCollapsed","setAllCollapsed","showDeleteModal","setShowDeleteModal","serviceToDelete","setServiceToDelete","hoveredButton","setHoveredButton","tooltipPosition","setTooltipPosition","collapseTooltipPosition","setCollapseTooltipPosition","buttonRef","deviceSupportsHover","handleEditService","serviceToEdit","formattedAnimalTypes","formattedService","handleDeleteService","toggleCollapse","renderService","warn","isCollapsed","onToggleCollapse","is_custom","ref","onMouseEnter","showTooltip","setPosition","element","getBoundingOwnerRect","rect","x","y","onMouseLeave","updatedService","serviceIndex","s","newServices","transformedService","existingIndex","serviceToRemove","deleteService","prevServices","Portal","petItem","petItemContent","petPhoto","petName","petInfo","petDetails","sectionHeader","fieldText","centeredContent","alignSelf","profileHeader","profilePhoto","profilePhotoPlaceholder","portfolioGrid","portfolioCard","portfolioImageContainer","aspectRatio","portfolioPhoto","borderTopLeftRadius","borderTopRightRadius","portfolioCaption","facilitiesContainer","facilityTag","facilityTagSelected","facilityTagText","facilityTagTextSelected","modalHeader","modalScroll","modalFacilityTag","modalFacilityText","modalFooter","saveButton","modalButtonText2","webDatePicker","androidButton","dateText","disabledInput","backButton","headerText","rightButton","BackHeader","onBackPress","rightIcon","onRightPress","rightComponent","customStyles","StatusBar","currentHeight","CrossPlatformView","useSafeArea","fullWidthHeader","contentWidth","setWindowWidth","updateDimensions","childrenArray","toArray","headerContent","mainContent","COLORADO_BOUNDS","geocodingQueue","constructor","this","queue","processing","lastRequest","minInterval","geocode","Promise","resolve","reject","processQueue","shift","timeSinceLastRequest","Date","now","waitTime","performGeocode","street","apartment","city","state","zip","addressString","params","URLSearchParams","q","format","limit","countrycodes","addressdetails","fetch","headers","ok","json","lat","lng","lon","isInColorado","latitude","longitude","formatted_address","display_name","geocodeAddressGraceful","maxRetries","attempt","pow","geocodeAddress","searchQueue","search","query","performSearch","bounded","viewbox","place_id","components","house_number","road","town","village","postcode","coordinates","inputContainer","inputValid","success","inputDisabled","loadingIndicator","validIcon","suggestionsContainer","suggestionsList","suggestionItem","lastSuggestionItem","suggestionIcon","suggestionContent","suggestionText","noResultsContainer","noResultsText","AddressAutocomplete","onAddressSelect","inputValue","setInputValue","suggestions","setSuggestions","showSuggestions","setShowSuggestions","selectedAddress","setSelectedAddress","searchTimeoutRef","results","searchAddresses","onBlur","handleBlur","editable","FlatList","renderItem","renderSuggestion","handleAddressSelect","keyExtractor","keyboardShouldPersistTaps","showsVerticalScrollIndicator","CONTAINER_SIZE","CIRCLE_SIZE","modalContainer","cropAreaOuterContainer","cropAreaContainer","imageViewport","imageContainer","cropCircleHole","select","web","boxShadow","circleGuide","sliderContainer","slider","zoomButton","instructionsContainer","instructionsText","saveButtonText","ProfilePhotoCropper","imageUri","isUploading","scale","setScale","imageSize","setImageSize","imagePosition","setImagePosition","imageLoaded","setImageLoaded","initialScaleRef","pan","ValueXY","disableScroll","preventDefault","document","passive","body","getSize","initialScale","calculateInitialScale","setValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","gestureState","abs","dx","dy","onPanResponderGrant","setOffset","_value","onPanResponderMove","onPanResponderRelease","flattenOffset","onPanResponderTerminationRequest","handleScaleChange","newScale","imageTransform","minZoom","maxZoom","statusBarTranslucent","presentationStyle","panHandlers","uri","resizeMode","onLoad","Slider","minimumValue","maximumValue","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","handleSave","cropParams","imageWidth","imageHeight","cropWidth","cropHeight","processImageWithCrop","cropImageOnWeb","oldProfilePhotoUrl","img","crossOrigin","onload","createElement","canvas","getContext","ctx","cropSize","centerX","centerY","beginPath","arc","PI","closePath","clip","scaledWidth","scaledHeight","cropCenterY","imageCenterX","imageCenterY","drawX","drawY","drawImage","dataUrl","toDataURL","base64Data","onerror","donateSection","donateButton","tertiary","donateButtonIcon","donateButtonContent","donateButtonTitle","donateButtonSubtitle","donateButtonCompact","donateButtonIconCompact","donateButtonTitleCompact","donateButtonSubtitleCompact","donateButtonLarge","donateButtonIconLarge","donateButtonTitleLarge","donateButtonSubtitleLarge","modalCloseButton","donationOptionsContainer","donationOption","disabledOption","donationOptionIcon","donationOptionContent","donationOptionTitle","donationOptionSubtitle","comingSoonBadge","comingSoonText","modalFooterText","SupportButton","buttonStyle","showTitle","showDonateModal","setShowDonateModal","sizeStyles","getSizeStyles","iconSize","arrowSize","handleDonatePress","handleCreditCardDonation","handleVenmoDonation","Linking","openURL","catch","err","INSURANCE_OPTIONS","EditOverlay","isLocation","isMultiline","isProfessional","isInsurance","selectedInsurance","onInsuranceChange","localValue","setLocalValue","localInsurance","setLocalInsurance","isLoadingLocation","setIsLoadingLocation","currentAddressValue","setCurrentAddressValue","insuranceStep","setInsuranceStep","insuranceType","setInsuranceType","setValidationError","insuranceModalContent","backButtonText","modalTitleCentered","insuranceStepContent","insuranceStepTitle","insuranceTypeButton","insuranceTypeContent","insuranceTypeTitle","insuranceTypeDescription","uploadButton","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","aspect","quality","canceled","newInsurance","assets","handleInsuranceChange","uploadText","customInsuranceCard","insuranceCardImage","insuranceCardText","opt","insuranceOption","selectedInsuranceOption","insuranceOptionContent","insuranceOptionTitle","insuranceOptionDescription","locationContent","addressInstructions","addressAutocomplete","selectedAddressInfo","selectedAddressText","modalInput","multilineInput","modalInputError","inputType","autoFocus","modalInputErrorText","modalInputCharacterCount","modalButtons","modalCancelButton","modalCancelText","modalSaveButton","modalSaveButtonDisabled","Alert","alert","sanitizedValue","original","modalSaveText","VerificationModal","onProceed","getModalContent","benefits","verificationModalOverlay","verificationModalContent","verificationModalHeader","verificationIconContainer","verificationModalTitle","verificationModalClose","verificationModalScroll","verificationDescription","verificationModalSection","verificationModalSectionTitle","verificationStep","verificationStepNumber","verificationStepNumberText","verificationStepText","benefit","verificationBenefit","verificationBenefitText","verificationModalButtons","verificationModalCancelButton","verificationModalCancelText","verificationModalProceedButton","verificationModalProceedText","contentWrapper","desktopLayout","profileSection","profileSectionDesktop","profileCard","profilePhotoContainer","cameraButton","profileInfo","nameContainer","emailContainer","locationContainer","locationIconWrapper","location","locationEditIcon","roleContainer","role","editIcon","ratingContainer","rating","sectionsContainer","sectionsContainerDesktop","paddingLeft","editButtonText","bioInput","facilitiesGrid","facilityItem","facilityContent","facilityTitle","facilityValue","addPhotoButton","addPhotoText","photoGrid","noReviews","bioText","locationButtons","locationButton","locationButtonText","orText","noPhotosText","facilitiesModalContent","facilitiesScrollView","facilityPresetItem","selectedFacilityPreset","facilityPresetContent","facilityPresetTitle","facilityPresetDescription","selectedFacilityText","checkIcon","locationModalContent","addressForm","addressInput","addressRow","maxFacilitiesText","insuranceContent","editButtonContent","modalCloseText","nameSection","sectionTitleContainer","sectionContent","sectionText","verificationSectionSubtitle","verificationButtonsContainer","verificationButton","verificationButtonElite","verificationButtonIcon","verificationButtonContent","verificationButtonTitle","verificationButtonTitleElite","verificationButtonSubtitle","verificationButtonSubtitleElite","mobileVerificationSection","donateSectionWithVerification","ProfileInfoTab","country","about_me","emergencyContact","authorizedHouseholdMembers","editMode","toggleEditMode","pickImage","onSaveComplete","insurance","onNavigateToTab","authName","hasEdits","setHasEdits","editingField","setEditingField","editValue","setEditValue","portfolioPhotos","setPortfolioPhotos","setSelectedInsurance","isSaving","setIsSaving","showVerificationModal","setShowVerificationModal","verificationModalType","setVerificationModalType","selectedPhoto","setSelectedPhoto","showCropper","setShowCropper","displayValues","setDisplayValues","profileData","setProfileData","profile_photo","originalValues","setOriginalValues","prevData","propName","locationDisplay","handleEdit","currentValue","handleSaveField","hasFieldChanged","JSON","stringify","newAddress","newApartment","newCity","newState","newZip","originalAddress","originalApartment","originalCity","originalState","originalZip","hasChanges","locationComponents","addressComponents","locationData","part","extractAddressComponents","updatedProfile","updateProfileInfo","prevValues","newLocation","charAt","toUpperCase","handleVerificationButton","renderVerificationAndSupport","isElitePro","requestMediaLibraryPermissionsAsync","base64","allowsMultipleSelection","selectedAsset","hasBase64","getMediaUrl","onError","nativeEvent","currentProfilePhotoUrl","cropParamsWithOldPhoto","imageData","processedImage","isBase64","formData","FormData","photoFile","append","prepareImageForUpload","post","image_data","old_profile_photo_url","uploadProfilePicture","photoUrl","uploadError","handleVerificationProceed","newDisplayValues","DAYS_OF_WEEK","ServiceIcon","service","sectionBox","servicesSection","servicesList","serviceWrapper","serviceItem","selectedServiceItem","serviceItemContent","serviceInfo","servicePrice","availabilityContainer","controlsScrollContainer","availabilityControls","controlsDivider","daysScrollContainer","daysContainer","availabilityDivider","availabilitySection","availabilityHeader","availabilityTitle","editHoursButton","editHoursText","dayItem","petsittingDayItem","warningLight","dayText","availabilityTime","serviceDivider","availabilityList","controlButton","blockButtonContent","blockButtonText","partialBlockButtonContent","partialBlockText","dateRangeButtonContent","dateRangeText","unavailableDayItem","unavailableSlash","rotate","unavailableDayText","nextUnavailableContainer","nextUnavailableText","ServicesAvailabilityTab","price","unavailableDays","onToggleService","onEditHours","onBlockService","onPartialDayBlock","selectedService","setSelectedService","isStacked","renderServiceItem","proDashboard","renderDayAvailability","horizontal","showsHorizontalScrollIndicator","day","isUnavailable","renderAvailabilitySection","calculateAge","birthday","today","birthDate","ageYears","getFullYear","ageMonths","getMonth","emptyStateContainer","emptyStateText","sectionDescription","petsList","petCard","petCardHeader","petBasicInfo","placeholderIcon","surfaceVariant","profilePhotoButton","plusIconContainer","petDetailsContainer","expandedDetails","detailRow","detailColumn","detailTitle","detailText","preferencesGrid","preferenceButton","selectedPreference","preferenceText","selectedPreferenceText","checkmark","petActions","fixButton","addContactForm","submitButton","submitButtonText","contactsList","contactCard","contactInfo","contactName","contactPhone","contactActions","emptyListText","compatibilityContainer","compatibilityItem","compatibilityLabel","careInfoContainer","medicationsContainer","medicationsText","vetInfoContainer","vetInfoItem","vetInfoLabel","vetInfoText","documentButton","documentButtonText","dropdownContainerEdit","optionButton","selectedOption","optionText","selectedOptionText","editInput","editInputMedications","editInputShort","editInputWeight","uploadButtonText","documentActionContainer","documentsList","documentItem","documentName","viewDocButton","viewDocText","noDocumentsText","detailSection","editContainer","inputsWrapper","inputWrapper","flexBasis","inputLabel","editMainContainer","editHeaderRow","editProfileContainer","editDetailsContainer","editActions","editActionsSmallScreen","buttonRowTop","buttonRowBottom","dateInfoContainer","dateInfoItem","dateInfoLabel","dateInfoText","customDatePickerContainer","dateInputBox","dateInputText","placeholderText","calendarButton","borderLeftWidth","borderLeftColor","datePickerContainer","calendarModalContent","calendarModalHeader","calendarModalTitle","calendarHeader","calendarNavButton","calendarMonthYear","weekdayLabels","weekdayLabel","calendarGrid","calendarRow","calendarDay","calendarDayText","calendarDayOtherMonth","calendarDayTextOtherMonth","calendarDaySelected","calendarDayTextSelected","stackedFields","fullWidth","errorModalContent","successModalContent","errorModalHeader","successModalHeader","errorModalTitle","successModalTitle","errorModalMessage","successModalMessage","errorModalButton","successModalButton","errorModalButtonText","successModalButtonText","editButtonTopRight","chevronButtonBottomRight","petInfoWithButtonPadding","paddingRight","dropdownButton","dropdownButtonText","dropdownList","dropdownScrollView","dropdownItemSelected","dropdownItemText","dropdownItemTextSelected","submitButtonDisabled","PetsPreferencesTab","preferences","homeEnvironment","emergencyContacts","onAddPet","onEditPet","onDeletePet","onReplacePet","onUpdatePreferences","p","hasOnAddPet","hasOnEditPet","hasOnDeletePet","hasOnReplacePet","expandedPetIds","setExpandedPetIds","Set","newEmergencyContact","setNewEmergencyContact","newHouseholdMember","setNewHouseholdMember","isAddingEmergencyContact","setIsAddingEmergencyContact","isAddingHouseholdMember","setIsAddingHouseholdMember","editingPetIds","setEditingPetIds","editedPetsData","setEditedPetsData","expandedSections","setExpandedSections","datePickerConfig","setDatePickerConfig","currentField","currentPetId","selectedDate","displayMonth","setDisplayMonth","displayYear","setDisplayYear","savingPet","setSavingPet","showSuccessModals","setShowSuccessModals","deleteConfirmation","setDeleteConfirmation","petId","isDeleting","showMonthPicker","setShowMonthPicker","showYearPicker","setShowYearPicker","selectedPetPhotoUri","setSelectedPetPhotoUri","showPetPhotoCropper","setShowPetPhotoCropper","currentEditingPetId","setCurrentEditingPetId","isUploadingPhoto","setIsUploadingPhoto","validationErrors","setValidationErrors","contactValidationErrors","setContactValidationErrors","updateWidth","yesNoOptions","energyLevelOptions","sexOptions","returnYesNoContainer","pet","attributeName","displayValue","returnEnergyLevelContainer","togglePetDetails","newSet","has","delete","add","handleEditPet","petToEdit","editData","medications","booleanToYesNo","childrenFriendly","friendly_with_children","catFriendly","friendly_with_cats","dogFriendly","friendly_with_dogs","spayed_neutered","house_trained","canBeLeftAlone","can_be_left_alone","getsAlongWithChildren","getsAlongWithCats","getsAlongWithDogs","handleDeletePet","petToDelete","formatDateForBackend","dateString","month","formatDateFromBackend","handleSavePetEdit","petData","currentPetsList","isNewPet","startsWith","convertYesNoToBoolean","sanitizedPetData","feedingInstructions","medicalNotes","pottyBreakSchedule","specialCareInstructions","microchipId","allergies","vaccinations","originalName","sanitizedName","originalBreed","sanitizedBreed","petToSave","adoption_date","feeding_schedule","medication_notes","potty_break_schedule","special_care_instructions","microchip_id","vet_name","vet_address","vet_phone","insurance_provider","energy_level","photo","currentPet","photoUri","addPet","savedPet","enhancedPetData","replaceTempPetWithReal","updatePet","updatedPet","profilePhotoUrl","formattedPet","newData","lastEditFailed","handleCancelPetEdit","formatPhoneNumber","phoneNumber","cleaned","handleEditChange","processedValue","numbersOnly","isSectionExpanded","sectionName","petIdStr","String","renderSectionHeader","safeTitle","isExpanded","event","toggleSection","stopPropagation","sectionNameStr","formatDateString","padStart","getDate","showDatePicker","currentDate","parseDate","handleDatePickerSelect","formattedDate","calendarData","useMemo","firstDayOfMonth","daysInMonth","startingDayOfWeek","getDay","totalDays","ceil","calendarDays","dayCounter","dayDate","isCurrentMonth","isSelectedDate","weeks","tempPetId","realPetData","realPetId","formattedPetData","justCreated","editedData","mergedPetData","petsBefore","tempId","realId","newPetsArray","newPetData","_addToTop","restoredPets","renderDatePickerModal","DateTimePicker","mode","monthNames","currentYear","handleOutsideClick","week","weekIndex","dayObj","dayIndex","cancelDeletePet","deletePet","handleAddNewPet","existingTempPets","tempPet","newPet","isEditing","editedPetData","handleUploadDocument","photoLoadError","displayUri","TIMEZONE_MAPPING","USER_TIMEZONE_OPTIONS","displayName","searchTerms","zone","getTimezoneDisplayName","timezoneId","desktopContainer","leftColumn","rightColumn","plansScroll","plansScrollContent","planCardContainer","planCard","currentPlanBorder","popularPlan","popularTag","popularTagText","planTitle","planPrice","planDescription","planButton","currentPlanButton","planButtonText","currentPlanButtonText","settingItem","settingContent","settingTextContainer","settingTitle","settingDescription","actionButtonText","currentPlanInfo","currentPlanTitle","currentPlanBilling","usageStats","usageText","usageBar","usageProgress","paymentItem","paymentContent","paymentTextContainer","paymentTitleRow","paymentTitle","paymentDescription","setDefaultButton","setDefaultText","viewAllButton","viewAllText","timezoneItem","selectedTimezoneItem","primaryLight","timezoneText","selectedTimezoneText","timezoneButton","timezoneButtonText","searchInput","timezoneGroup","timezoneGroupHeader","timezoneItemContent","noPaymentMethodsContainer","noPaymentMethodsText","SettingsPaymentsTab","push_notifications","email_updates","marketing_communications","profile_visibility","timezone","propTimezone","use_military_time","onUpdateSetting","paymentMethods","onAddPaymentMethod","onRemovePaymentMethod","onSetDefaultPayment","currentPlan","nextBilling","connections","used","total","onSwitchPlan","isApprovedProfessional","setTimezone","timezoneModalVisible","setTimezoneModalVisible","timezones","setTimezones","searchQuery","setSearchQuery","loading","setLoading","timeSettings","getTimeSettings","fetchTimeSettings","openTimezoneModal","getCurrentTimezoneDisplayName","renderNotificationSettings","handleUpdateSetting","renderPrivacySettings","settingName","then","renderTimezoneModal","groupedTimezones","getGroupedTimezones","groups","tz","searchTerm","term","searchTimezones","renderTimezoneGroup","zoneName","updateTimeSettings","newTimezone","friendlyName","handleTimezoneChange","initialNumToRender","maxToRenderPerBatch","windowSize","mobileTab","activeTab","tabText","mobileTabText","activeTabText","createStyles","mainContainer","transition","headerSection","tabScrollContainer","tabContainer","tabContent","MyProfile","useWindowDimensions","user","logout","setIsMobile","isWideScreen","setIsWideScreen","setActiveTab","hasUnsavedChanges","lastProfileLoadRef","isLoadingProfileRef","isMountedRef","setEditMode","setCurrentPlan","isTutorialVisible","loadActiveTab","urlParams","tabFromUrl","setStorage","getState","routes","route","initialTab","storedTab","getStorage","checkAndFixPetOwners","petsWithMissingOwners","lastUpdateFailed","ownerMissing","fixPetOwner","loadProfileData","timeSinceLastLoad","round","userProfile","processedResponse","URL","href","searchParams","set","history","replaceState","storeActiveTab","unsubscribe","tabs","handlePickImage","handleSaveComplete","newProfileData","handleUpdateField","handleSwitchPlan","planId","renderActiveTab","emergency_contact","authorized_household_members","updatedServices","shouldAddToTop","petToAdd","_objectWithoutPropertiesLoose","_excluded","updatedPets","updatedPetData","updatedPreferences","selected","payment_methods","updateData","CustomButton","spacing","extraLarge","createAccountContainer","createAccountText","createAccountLink","inputLabelContainer","passwordLabelContainer","showHideText","errorInput","rememberMeContainer","checkbox","checkboxInner","rememberMeText","loginButton","loginButtonText","forgotPasswordContainer","link","prototypeWarning","SignUp","useRoute","signIn","firstName","setFirstName","lastName","setLastName","setEmail","setPassword","setConfirmPassword","setSuccessMessage","inviterName","setInviterName","inviteToken","setInviteToken","inviteVerified","setInviteVerified","verifyingInvite","setVerifyingInvite","setLocation","showLocationDropdown","setShowLocationDropdown","locationError","setLocationError","locations","setLocations","loadingLocations","setLoadingLocations","fallbackLocations","supported","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","token","pathname","hash","pathParts","inviteIndex","signupIndex","searchToken","inviteInfo","verifyInvitation","valid","inviter_name","checkInvitation","fetchLocations","KeyboardAvoidingView","behavior","keyboardVerticalOffset","formContainer","inviteContainer","inviteText","dropdown","loadingContainer","dropdownWrapper","inputText","dropdownMenu","loc","selectLocation","selectedLocation","sanitizedText","removalPercentage","autoCapitalize","secureTextEntry","validateForm","firstNameValidation","lastNameValidation","emailValidation","passwordValidation","passwordMatchValidation","sanitizedFirstName","sanitizedLastName","sanitizedLocation","originalFirstName","originalLastName","originalEmail","originalLocation","passwordChanged","userTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","useMilitaryTime","userData","password2","phone_number","invitation_token","registrationData","directAxios","baseURL","registerResponse","loginResponse","access","refresh","errorData","firstError","messages","signupButton","waitlistContainer","waitlistMessage","waitlistSubMessage","navigateToWaitlist","loader","signInContainer","signInText","navigateToSignIn","signInLink","safeArea","backText","cursor","cardHovered","cardContent","mobileCardContent","topContent","mobileTopContent","profileImage","mobileProfileImage","mobileContentContainer","mobileHeaderContainer","nameAndPets","statusBadge","statusContent","statusText","clientContainer","mybookings","petContainer","mobileDivider","metaInfo","mobileMetaInfo","mobileMetaRow","metaItemContainer","metaText","viewDetailsButton","viewDetailsText","mobileClientContainer","mobileName","mobilePetContainer","mobilePetInfo","mobileStatusBadge","mobileStatusText","BookingCard","onViewDetails","client_name","professionalName","statusInfo","bgColor","textColor","confirmedBg","confirmedText","completedBg","completedText","getStatusInfo","isHovered","setIsHovered","convertedDateTime","convertDateTimeFromUTC","dateObj","getTime","monthName","toLocaleString","convertedTime","originalDate","originalTime","getMetaText","timeText","serviceText","ownername","alertContainer","alertHeader","alertBold","alertText","ProfessionalAlert","fromApprovalModal","sectionBody","footerContainer","closeFooterButton","TermsOfServiceModal","termsData","terms","badge","sectionHeaderContainer","breakdownSection","dateHeader","dateTextContainer","breakdownItem","breakdownLabelContainer","breakdownLabel","breakdownCalculation","breakdownAmount","totalItem","subtotalRow","subtotalLabel","subtotalAmount","feeRow","feeLabel","feeAmount","totalAmountContainer","totalLabel","totalAmount","divider","payoutContainer","payoutLabel","payoutAmount","payoutBreakdown","addRateContainer","rateNameAmountRow","rateEditContainer","amountInputContainer","rateInput","nameInput","descriptionInput","formDivider","editableAdditionalRateRow","rateNameAmountRowWithDelete","buttonsContainer","multipleDatesContainer","occurrenceCost","ratesToggleButton","ratesToggleText","ratesBreakdown","rateItem","rateAmount","rateDescription","occurrenceDivider","termsContainer","checkboxContainer","checkboxChecked","termsText","termsLink","termsAgreedText","additionalRatesDescription","serviceRateItem","serviceRateCheckbox","serviceRateInfo","serviceRateTitle","serviceRateAmount","serviceRateDescription","ReviewAndRatesCard","bookingData","onRatesUpdate","bookingId","showEditControls","onTermsAgreed","onTosAgreementChange","isAddingRate","setIsAddingRate","editedRates","setEditedRates","newRate","setNewRate","expandedRates","setExpandedRates","editingOccurrenceId","setEditingOccurrenceId","occurrenceEdits","setOccurrenceEdits","isAddingRateForOccurrence","setIsAddingRateForOccurrence","newOccurrenceRate","setNewOccurrenceRate","termsAgreed","setTermsAgreed","serviceAdditionalRatesEnabled","setServiceAdditionalRatesEnabled","availableAdditionalRates","setAvailableAdditionalRates","hasInitializedRates","setHasInitializedRates","lastBookingIdRef","currentTosStatus","getTosStatus","pro_agreed_tos","client_agreed_tos","showTermsModal","setShowTermsModal","defaultRates","safeRates","serviceAdditionalRates","availableRates","allOccurrenceRates","occ","occRates","uniqueRatesMap","Map","filteredRates","firstOccurrenceRates","enabledRates","serviceRate","isEnabled","occRate","occurrencesCount","formatCurrency","toFixed","toggleAddRate","sanitizeAmountInput","handleNewRateAmountChange","handleNewOccurrenceRateAmountChange","saveRateChanges","cleanEditedRates","occurrencesForApi","updateBookingDraftRates","draft_data","saveNewRate","updatedRates","updateBaseRate","updateAdditionalAnimalRate","updateHolidayRate","updateAdditionalRate","updatedAdditionalRates","deleteAdditionalRate","occIndex","handleEditOccurrence","occurrence","r","handleCancelEdit","handleOccurrenceInputChange","handleAdditionalRateChange","currentOccurrenceEdits","currentAdditionalRates","updated","updatedRate","allRates","deleteRateForOccurrence","rateIndex","updatedOccurrenceEdits","getAdditionalRateValue","renderServiceAdditionalRates","toggleServiceAdditionalRate","renderBookingBreakdown","isMultipleDates","count","firstOccurrence","multiple","formatDateTimeRangeFromUTC","includeTimes","includeTimezone","newExpandedRates","v","occurrenceId","rateName","occurrenceEditsRate","valueToShow","saveNewRateForOccurrence","toggleAddRateForOccurrence","cleanOccurrenceEdits","handleSaveOccurrenceRates","formattedDateRange","additional_animal_rate_total","holiday_rate_total","renderTotalAmount","costSummary","client_platform_fee","pro_platform_fee","tax_state","total_client_cost","pro_subscription_plan","renderTermsCheckbox","isChecked","hasAgreedTos","newValue","termsModalOverlay","termsModalContent","termsModalHeader","termsModalTitle","termsModalText","termsModalButton","termsModalButtonText","TosRequiredModal","actionType","approveButton","approveText","loadingText","errorContainer","retryButton","retryButtonText","serviceContainer","serviceLabel","serviceValue","petsContainer","petsLabel","petType","noPets","changeRequestContainer","changeRequestInput","buttonWrapper","changeRequestButtons","cancelRequestButton","cancelRequestButtonText","submitRequestButton","olive","submitRequestButtonText","changeButton","shortenedContainer","BookingApprovalModal","onApproveSuccess","onApproveError","onRequestChangesSuccess","onRequestChangesError","initialData","hideButtons","isReadOnly","defaultInitialData","setBookingData","setLoadingText","changeRequestMessage","setChangeRequestMessage","showChangeRequestInput","setShowChangeRequestInput","userTosAgreed","setUserTosAgreed","showTosRequiredModal","setShowTosRequiredModal","bookingDataRef","dataLoadedRef","fetchBookingDetails","dataProtectionInterval","setInterval","hasNoData","hasRefData","clearInterval","getBookingDetails","safeResponse","toISOString","handleApprove","existingTosAgreed","currentTosAgreed","tosValueToSend","approveBooking","handleShowChangeRequest","handleCancelChangeRequest","handleSubmitChangeRequest","requestBookingChanges","word","updatedData","renderFooter","isBookingUpdate","screenHeight","scrollView","scrollViewContent","headerRight","notificationButton","notificationBadge","notificationCount","profileButton","welcomeSection","welcomeContent","welcomeCard","backgroundImage","welcomeHeader","welcomeTextContainer","statsContainer","statsGrid","gridTemplateColumns","statCard","ios","android","android_ripple","statHeader","statIconContainer","bookingsContainer","bookingItem","bookingContent","bookingInfo","bookingDetails","bookingTitle","bookingTime","bookingStatus","progressBar","progress","timeLeft","emptyStateTitle","createServiceButton","createServiceButtonText","filterContainer","filterButtons","filterButton","activeFilterButton","filterText","activeFilterText","servicesContainer","serviceContent","serviceHeader","serviceTitle","serviceCategory","serviceFooter","bookingsCount","bookingsText","viewButton","viewButtonText","Dashboard","useTheme","signOut","is_prototype","bookings","setBookings","activeFilter","setActiveFilter","onboardingProgress","setOnboardingProgress","profile_complete","has_bank_account","has_services","subscription_plan","bookingModalVisible","setBookingModalVisible","selectedBookingId","setSelectedBookingId","isLargeScreen","filteredBookings","bookingDate","parsedDate","completed","dynamicStyles","welcomeTitle","bookingCount","statValue","statLabel","statChange","fetchDashboardData","prototypeServices","owner","dashboardData","getProfessionalDashboard","getClientDashboard","upcoming_bookings","firstBooking","client_name_exists","processedBookings","normalizedDate","onboarding_progress","servicesData","getProfessionalServices","useFocusEffect","hasActiveBookings","currentActiveFilter","List","b","LinearGradient","end","has_pets","handleViewBookingDetails","serviceId","renderServiceCard","handleCloseBookingModal","BecomeProfessional","selectedPets","setSelectedPets","dog","exotics","about","setAbout","certifications","setCertifications","insuranceProof","setInsuranceProof","currentRoute","sessionStorage","getItem","AsyncStorage","initializeNavigation","petButton","selectedPetButton","petButtonText","selectedPetButtonText","inputBackground","uploadedFileContainer","uploadedFilePreview","certificationText","removeFileButton","handleBackPress","togglePetSelection","newCertification","pop","cert","removeCertification","newProof","proof","removeInsuranceProof","confirm","webContent","listSection","webListItem","listItemTitle","switchRoleButton","logoutButton","MoreScreen","switchRole","initialRoute","setItem","initializeRoutes","handleNavigation","menuItems","renderMenuItems","items","titleStyle","Divider","Button","removeItem","multiRemove","labelStyle","lightGrey","removeButton","reason","seeMoreButton","seeMoreText","modalTime","UnavailableTimeSlot","onRemove","showAllServices","setShowAllServices","isAllDay","formatTime","parse","formatServicesDisplay","timeContainer","AvailabilityBookingCard","handlePress","timeButton","compactTimeButton","webInputContainer","webInput","outline","webIcon","errorBorder","TimePicker","showPicker","setShowPicker","showClockIcon","isChrome","userAgent","vendor","styleElement","inputElement","toTimeString","handleIconPress","querySelector","showTimepicker","toLocaleTimeString","hour","minute","is24Hour","handleChange","SCREEN_HEIGHT","availabilityButton","availableButton","unavailableButton","danger","availabilityButtonText","timePickerContainer","webTimePicker","unavailableTimesContainer","customDropdown","dropdownItemContent","activeToggle","toggleText","bookingsList","emptyState","contentScrollView","unavailableTimesWrapper","bookingsWrapper","selectedDatesText","AddAvailabilityModal","propIsVisible","selectedDates","currentAvailability","onRemoveTimeSlot","setIsAllDay","setStartTime","setEndTime","showStartTimePicker","setShowStartTimePicker","showEndTimePicker","setShowEndTimePicker","selectedServices","setSelectedServices","showServiceDropdown","setShowServiceDropdown","modalWidth","setModalWidth","getModalWidth","activeView","setActiveView","editingBooking","setEditingBooking","dimensionsHandler","remove","isTimeSlotUnavailable","unavailableTimes","existingStartHour","existingStartMin","Number","existingEndHour","existingEndMin","newStartStr","newEndStr","newStartHour","newStartMin","newEndHour","newEndMin","formatSelectedDates","nestedScrollEnabled","renderUnavailableTimes","handleRemoveTimeSlot","timeSlot","updatedAvailability","filteredTimes","renderBookings","dateBookings","handleBookingPress","withoutAll","handleMarkAvailable","handleMarkUnavailable","dates","serviceTypes","DatetimePicker","isInModal","selectedValues","setSelectedValues","days","hours","minutes","ampm","convertToDate","renderSelect","selectStyle","errorSelect","monthSelect","yearSelect","daySelect","handleSelectChange","newValues","row","rowIndex","selectContainer","appearance","WebkitAppearance","MozAppearance","ALL_DAYS","settingContainer","dayContainer","selectedTab","selectedTabText","daySettingsContainer","settingRow","enabledText","datePickerWrapper","validationErrorText","DefaultSettingsModal","defaultSettings","selectedDays","setSelectedDays","settings","setSettings","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","showTimePicker","setShowTimePicker","setShowDatePicker","isCurrentlyUnavailable","setIsCurrentlyUnavailable","showDayDropdown","setShowDayDropdown","spring","tension","friction","handleClickOutside","getElementById","contains","handleAvailabilityChange","makeAvailable","daysToUpdate","newSettings","renderTimePicker","selectedTime","timeString","renderEndDatePicker","onClick","onMouseDown","daySettings","updateDaySettings","prevSettings","checkCurrentAvailability","d","handleDaySelection","renderDaySettings","newTime","handleContainer","handle","headerMinimized","headerCenter","timeToggleContainer","customToggle","toggleButtonInactive","timeSection","serviceSection","serviceSelector","serviceSelectorText","serviceSelectorError","AvailabilityBottomSheet","onViewUnavailableTimes","onMinimize","isMinimized","setIsMinimized","animatedHeight","animatedOpacity","slideAnimation","getAvailabilityStatus","dateAvailability","isAvailable","validateAndSave","toggleMinimized","newMinimizedState","containerHeight","getStatusColor","timesList","timeSlotContainer","timeSlotContent","timeAndReason","reasonText","bookingButton","UnavailableTimesModal","setHours","getUnavailableTimes","allTimes","processedTimes","timeKey","isBooking","ownerId","sort","localeCompare","renderActionButton","renderTimeSlot","formattedStartTime","formattedEndTime","bottomSheetOverlay","centeredContainer","defaultSettingsButton","defaultSettingsText","colorKeyContainer","colorKeyTitle","colorKeyItem","colorBox","colorKeyText","bottomSheetContainer","calendar","AvailabilitySettings","markedDates","setMarkedDates","setSelectedDates","isAddModalVisible","setIsAddModalVisible","isSettingsModalVisible","setIsSettingsModalVisible","defaultAvailability","setDefaultAvailability","setCurrentAvailability","setDefaultSettings","showBottomSheet","setShowBottomSheet","showUnavailableTimesModal","setShowUnavailableTimesModal","isClosing","setIsClosing","isBottomSheetMinimized","setIsBottomSheetMinimized","availableDates","unavailableDates","updateMarkedDates","combinedAvailability","loadAvailabilityData","newMarkedDates","isFullDay","allServicesSelected","calendarColor","bookingList","marked","dotColor","calendarColorYellowBrown","toggleBottomSheet","show","handleAddAvailability","availabilityData","newCurrentAvailability","IconComponent","Icon","Calendar","onDayPress","setDate","firstDate","range","calendarBackground","textSectionTitleColor","selectedDayBackgroundColor","selectedDayTextColor","todayTextColor","dayTextColor","textDisabledColor","monthTextColor","arrowColor","indicatorColor","oneYearFromNow","daysMapping","UTC","targetDayNumber","currentDayNumber","getUTCDay","setUTCDate","getUTCDate","applyDefaultSettingsToCalendar","onViewBookings","handleViewBookings","minimized","currentDateAvailability","androidContainer","messageButtonContainer","messageButton","OwnerHistory","ownerData","contracts","invoices","upcomingBookings","Content","Card","Title","Paragraph","contract","Actions","invoice","dateTimeContainer","dateInputGroup","timeInputGroup","numberInput","yearInput","separator","periodButton","periodText","calendarHeaderText","calendarWeekDays","calendarWeekDay","calendarWeek","selectedDay","selectedDayText","timeSelector","timeSelectorColumn","timeSelectorLabel","timeSelectorScroll","timeSelectorItem","timeSelectorText","selectedTimeText","periodContainer","disabledDay","dollarSign","rateSection","baseRateInput","timeUnitInput","totalSection","rateAmountContainer","rateAmountInput","addRateButtonText","rateLabelContainer","rateTitleLabel","rateAmountLabel","serviceOptions","serviceButton","petOptions","dateContainer","timePickerWrapper","dropdownInput","addPetButton","addPetText","occurrenceCard","occurrenceDetails","addOccurrenceButton","addOccurrenceText","occurrenceActions","bookingRequestCard","bookingRequestHeader","bookingRequestTitle","bookingRequestDetails","detailLabel","acceptButton","acceptButtonText","occurrenceCardError","selectedServiceCard","selectedServiceText","selectedPetCard","petImageContainer","petImage","defaultPetImage","selectedItemsContainer","selectedItemsTitle","selectedItemsContent","selectedTag","selectedTagText","serviceCheckIcon","ServiceAndPetsCard","onServiceSelect","onPetSelect","currentBookingId","availableServices","setAvailableServices","availablePets","setAvailablePets","isLoadingServices","setIsLoadingServices","isLoadingPets","setIsLoadingPets","serviceError","setServiceError","petsError","setPetsError","fetchAvailableServices","fetchAvailablePets","getBookingAvailableServices","selected_service_id","serviceToSelect","isOvernightForced","getBookingAvailablePets","selected_pet_ids","getServiceIcon","isSelected","noServicesContainer","selectedPet","defaultSource","renderPetCard","maxCalendarHeight","isDesktopView","bookingTypeContainer","bookingTypeButton","selectedBookingTypeButton","bookingTypeText","selectedBookingTypeText","dateRangeTypeContainer","dateRangeTypeButton","selectedDateRangeTypeButton","dateRangeTypeText","selectedDateRangeTypeText","calendarContainer","calendarTitle","calendarNavButtonText","weekdaysContainer","weekdayText","weekRow","dateCell","otherMonthDate","otherMonthDateText","dateInRange","selectedDateText","selectedDatesContainer","selectedDatesTitle","selectedDatesList","selectedDateChip","selectedDateChipText","removeButtonText","recurringOptionsContainer","daysOfWeekContainer","dayOfWeekButton","selectedDayOfWeekButton","dayOfWeekText","selectedDayOfWeekText","dateRangeSection","dateRangeRow","dateRangeColumn","dateRangeLabel","dateRangeValue","frequencyContainer","frequencyButton","selectedFrequencyButton","frequencyText","selectedFrequencyText","recurrencePatternContainer","recurrencePatternTitle","recurrencePatternText","modalCloseButtonText","previewButton","previewButtonText","previewModalContent","previewCalendarContainer","recurringDate","recurringDateText","previewDateCell","dateRangeChip","removeRangeButton","oneTimeOptionsContainer","dateSelectionTitle","DateSelectionCard","onDateSelect","bookingType","dateRangeType","initialDateRange","currentMonth","setCurrentMonth","setSelectedDatesList","selectedBookingType","setSelectedBookingType","selectedDateRangeType","setSelectedDateRangeType","rangeStartDate","setRangeStartDate","selectedDaysOfWeek","setSelectedDaysOfWeek","selectedFrequency","setSelectedFrequency","dateRangeEnd","setDateRangeEnd","showRecurringCalendar","setShowRecurringCalendar","recurringStartDate","setRecurringStartDate","recurringEndDate","setRecurringEndDate","setMonth","isSelectingStartDate","setIsSelectingStartDate","showRecurringPreview","setShowRecurringPreview","showRecurringDropdownCalendar","setShowRecurringDropdownCalendar","tempRangeStart","setTempRangeStart","tempRangeEnd","setTempRangeEnd","datesFromRange","setDatesFromRange","lastRangeSelection","setLastRangeSelection","datesArray","dateItem","areConsecutiveDates","checkIfConsecutiveDates","sortedDates","dateData","rangeType","prevDate","currDate","dateRange","handleFrequencySelect","frequency","goToPreviousMonth","prevMonth","goToNextMonth","nextMonth","isDateSelected","handleDateRangeSelection","toggleDateSelection","newSelectedDates","getSelectedDaysText","dayNames","daysText","lastDay","weekNum","getWeekOfMonth","renderCalendar","monthStart","monthEnd","dateIndex","isSelectable","isDateSelectable","isInRange","isDateInRange","isInTempRange","isDateInTempRange","daysOfWeek","handleRecurringDateSelect","handleDateSelection","formatSelectedDate","clearDateRange","renderSelectedDates","handleDayOfWeekSelect","dropdownCalendar","dropdownCalendarContent","dropdownCloseButton","dropdownCloseButtonText","RecurringCalendarPreview","previewMonth","setPreviewMonth","renderPreviewCalendar","recurringDates","getRecurringDates","floor","isRecurring","HOURS","MINUTES","m","PERIODS","timeDisplay","inlineContainer","dropdownContent","column","buttonRow","TimePickerDropdown","initialTime","onTimeSelect","isOpen","uniqueId","showInlinePicker","hourScrollRef","minuteScrollRef","periodScrollRef","initTime","init12Hour","hours24","period","setSelectedTime","lastConfirmedTime","setLastConfirmedTime","timeError","setTimeError","scrollToSelections","handleConfirm","time12h","time24h","triggerTimeChange","handleCancel","hourOffset","indexOf","scrollTo","animated","minuteOffset","periodOffset","renderDropdownContent","handleHourSelect","handleMinuteSelect","handlePeriodSelect","MaterialIcons","formatTimeDisplay","timeSelectionContainer","dateLabel","timeLabel","timeButtonContent","durationContainer","bgColorModern","durationText","startModalContent","endModalContent","NewTimeRangeSelector","initialTimes","isIndividualDaySelector","times","setTimes","defaultTimes","activeTimePicker","setActiveTimePicker","updatedTimes","validHours","validMinutes","formatDate","toLocaleDateString","getStartDate","getEndDate","calculateDuration","diffDays","normalizedStartDate","normalizedEndDate","nights","startMinutes","endMinutes","durationMinutes","durationStr","isEndTimeMidnight","startTotalMinutes","endTotalMinutes","attemptedStart","currentEnd","newTimes","isNewEndTimeMidnight","currentStart","attemptedEnd","DayTimeSelector","onTimeChange","generateUniqueId","match","dateKey","generateDateKey","weekday","timesData","parseTimeValue","timeValue","customizeButtonContainer","customizeButton","customizeButtonText","individualDaysContainer","TimeSelectionCard","showIndividualDays","setShowIndividualDays","shouldShowIndividual","hasIndividualTimes","individualTimeRanges","setIndividualTimeRanges","isInitialRender","hasIndividualTimesFlag","startTimeValue","formattedTimes","selectedServiceIsOvernight","isOvernightForcedProp","initialTimesIsOvernightForced","hasDatesInDraft","hasDateRange","hasDates","newTimeRanges","dayTime","parsedStartTime","parsedEndTime","handleIndividualDayTimeSelect","updatedRanges","formattedRanges","timeData","handleToggleIndividualDays","getDates","SERVICES_AND_PETS","DATE_SELECTION","TIME_SELECTION","REVIEW_AND_RATES","spacer","smallMargin","smallScreenButton","cancelButtonSmall","nextButtonSmall","stepContent","confirmButtonColumn","BookingStepModal","onComplete","isSmallScreen","dateSelectionData","hasFetchedDates","getBookingDraftDatesAndTimes","fallbackUsed","parsedData","parseOccurrencesForBookingSteps","isOvernightService","firstOcc","lastOcc","daysDifference","occ1Date","occ2Date","daysBetween","date1","date2","date_range_type","initialCheck","afterOccurrenceChecks","finalIsOvernightForced","individualTimes","allTimesAreTheSame","booking_type","fetchDraftDatesAndTimes","handleServiceSelect","cleanDefaultTimes","previousTimes","newCleanTimes","serviceIsOvernight","handlePetSelect","handleDateSelect","currentDateRangeType","isServiceOvernight","isTimesOvernightForced","newDateRange","handleTimeSelect","hasServiceOvernight","timeDataIsOvernightForced","hasValidDates","hasValidDateRange","hasValidDateSelectionData","updateBookingDraftPetsAndServices","isServiceOvernightFlag","isTimeOvernightFlag","isAnyOvernightFlag","formatDateForAPI","formatTimeForAPI","userTz","utcStartDate","utcStartTime","convertToUTC","utcEndDate","utcEndTime","updateBookingDraftTimeAndDate","isTimeOvernight","isMultiDayRange","timesIsOvernightForced","endTimeIsMidnight","isMidnightEndTimeButNotForced","willTreatAsOvernight","updatedBookingData","isNonOvernightDateRange","willUseEndpoint","isMultiDay","formattedDates","dayTimes","needsNextDayDate","endDateObj","formattedEndDate","calculatedEndDate","isDifferentDates","updateBookingDraftMultipleDays","updateBookingDraftRecurring","stack","conversation_id","createBookingFromDraft","bookingMessageData","bookingMessage","type_of_message","sent_by_other_user","resetModal","dateSelectionIsOvernightMode","combinedMode","currentServiceIsOvernight","previousTimesIsOvernightForced","calculatedCurrentServiceIsOvernight","isOvernightMode","dateCount","combinedOvernight","sentCard","receivedCard","approvalCard","confirmedCard","colorBar","colorBarLeft","colorBarRight","requestHeader","approvalHeader","confirmedHeader","requestTitle","approvalTitle","changeRequestTitle","infoSection","datesSection","datesSectionHeader","datesCount","occurrenceContainer","occurrenceItem","dateTimeText","dstMessage","detailsButton","detailsButtonText","approveButtonText","statusOverlay","changeMessageContainer","changeMessageLabel","changeMessageText","showMoreButton","showMoreText","confirmationContainerClickable","confirmationContainer","confirmationText","confirmedTitle","confirmationBorder","completeButton","completeButtonText","BookingMessageCard","displayType","isFromMe","onEditDraft","hasChangeRequest","isNewestMessage","messageCreatedAt","hasNewerApprovalRequests","isAfterConfirmation","onMarkCompletedSuccess","onMarkCompletedError","isBookingCompleted","approvalModalVisible","setApprovalModalVisible","safeInitialData","setSafeInitialData","showAllDates","setShowAllDates","isMarkingCompleted","setIsMarkingCompleted","toastVisible","setToastVisible","toastMessage","setToastMessage","toastType","setToastType","preparedData","isConfirmed","isChangeRequest","isBookingConfirmed","shouldShowAsApproval","shouldShowOverlay","overlayText","overlayLogicChecks","isConfirmedButNotConfirmationMessage","isChangeRequestAndNewestMessage","isApprovalWithChangeRequest","isBookingConfirmedWithNewerApprovals","handleOpenApprovalModal","tempData","formatOccurrenceDateRange","formattedRange","checkDSTChange","startMoment","moment","endMoment","utcOffset","dst_message","formatted_start","formatted_end","getOccurrenceDuration","hoursDiff","diff","daysDiff","hasMoreDates","visibleOccurrences","hiddenDatesCount","getCardStyle","baseStyle","getTitle","markBookingCompleted","getCostValue","isLastVisibleItem","showBottomBorder","toggleDatesExpansion","DraftConfirmationModal","onContinueExisting","onCreateNew","useWebSocket","messageType","handlerId","random","substr","isConnected","setIsConnected","connectionStatus","setConnectionStatus","statusUpdateTimeRef","handlerRegisteredRef","failedAttemptsRef","unregisterHandlers","websocketManager","init","unregister","registerHandler","unregisterConn","prevStatus","prevConnected","unregisterUserStatus","user_id","is_online","initialize","initialConnectionCheck","initialCheckTimeout","checkStatus","secondsSinceUpdate","actuallyConnected","send","sendMessage","endpoint","payload","Authorization","reconnect","markMessagesAsRead","conversationId","messageIds","message_ids","disconnect","connect","bind","simulateConnection","isUsingFallback","ImageViewer","imageUrl","processedImageUrl","originalUrl","processedUrl","barStyle","ClickableImage","testID","MessageDateSeparator","formatCache","clearCacheIfNeeded","clear","formatMessageTime","cacheKey","dateTimeMatch","dateStr","timeStr","formatFromUTC","FORMAT_TYPES","TIME_ONLY","groupMessagesByDate","specificMessage","messageId","utcMoment","localMoment","utcDate","localDate","utcFullTime","localFullTime","tzOffset","totalGroups","dateKeys","totalMessageIds","flat","groupContents","ids","msg","MessageList","forwardRef","renderMessage","hasMore","isLoadingMore","onLoadMore","className","onScrollStart","flatListRef","isUserScrollingRef","isLoadingMoreRef","previousMessageCount","initialRenderRef","preventInitialPaginationRef","scrollPositionRef","lastPaginationTimeRef","PAGINATION_COOLDOWN","scrollStartHandlerRef","hasScrollStartedRef","scrollStartTimeoutRef","handler","paginatedIndicesRef","isNearPaginationBoundaryRef","prevCount","newCount","difference","triggerPagination","triggerIndex","forceTrigger","timeSinceLastPagination","isUserScrolling","initialRender","cooldown","paginatedIndices","messageCount","onViewableItemsChangedRef","viewableItems","changed","lastMessageIndex","viewableItemsCount","oldestVisibleIndex","newestChangedItem","change","isViewable","messagesLength","batchNumber","batchEndIndex","distanceToBatchBoundary","isNearEndOfList","isNearBoundary","distanceFromEnd","triggerPoints","matchingTriggerPoints","point","triggerPoint","alreadyPaginated","handleEndReached","node","getScrollableNode","scrollNode","scrollHeight","clientHeight","scrollTop","distanceFromBottom","endIndex","scrollPosition","preventInitialPagination","hasPaginatedAtEnd","hasPaginatedNearEnd","BATCH_SIZE","nextBestIndex","handleScroll","currentScrollY","contentOffset","previousScrollY","layoutMeasurement","contentSize","scrollDirection","isAtTop","canScrollUp","contentHeight","visibleHeight","distanceFromOldestMessages","scrollY","currentBatchNumber","targetIndex","exactBatchIndex","currentBatch","isNearPaginationBoundary","foundUnpaginatedBoundary","viewabilityConfigRef","itemVisiblePercentThreshold","minimumViewTime","onScrollBeginDragRef","onMomentumScrollEndRef","shouldTriggerPagination","created_at","senderHash","contentHash","extraPadding","isPad","scrollToOffset","offset","isPaginationLoad","previousCount","MSStream","styleTag","innerHTML","head","appendChild","handleFocusIn","tagName","classList","messageContainer","scrollIntoView","handleFocusOut","relatedTarget","visibilityState","scrollToTop","getDateKey","shouldShowDateSeparator","currentDateKey","nextMessage","nextDateKey","currentUtcMoment","nextUtcMoment","currentLocalMoment","nextLocalMoment","currentId","currentContent","nextId","nextContent","currentTimestamp","nextTimestamp","currentUtcDate","currentLocalDate","nextUtcDate","nextLocalDate","shouldShowSeparator","renderItemWithDateSeparator","isOldestMessage","localTime","needsDateSeparator","formatMessageDate","messageIdMatch","messageDate","isTestMessage","startOf","yesterday","subtract","clone","realToday","realYesterday","messageDateKey","todayToUse","yesterdayToUse","todayKey","yesterdayKey","yearToCompare","messageKey","isActuallyToday","renderedMessage","messageList","onEndReached","onEndReachedThreshold","scrollEventThrottle","onScroll","onViewableItemsChanged","viewabilityConfig","onScrollBeginDrag","onMomentumScrollEnd","inverted","maintainVisibleContentPosition","minIndexForVisible","autoscrollToTopThreshold","ListFooterComponent","loadingMore","removeClippedSubviews","ProfilePhoto","fallbackIconName","fallbackIconSize","ConversationList","conversations","selectedConversation","onSelectConversation","onSearchChange","getConversationUnreadCount","markConversationAsRead","conversationsCount","hasGetConversationUnreadCount","hasMarkConversationAsRead","conversationUnreadCounts","conv","unreadCount","conversationListContainer","searchContainer","searchInputContainer","searchIcon","clearButton","otherParticipantName","participant2_name","participant1_name","convUnreadFlag","conversationItem","previouslySelected","willCallMarkAsRead","selectedConversationId","hasUnread","forceRefresh","profile_picture","conversationProfilePhoto","conversationContent","conversationHeader","conversationName","other_user_name","conversationTime","last_message_time","conversationLastMessageContainer","conversationLastMessage","activeConversationText","unreadMessage","last_message","unreadBadge","unreadBadgeText","bookingStatusContainer","bookingPendingStatus","MessageInput","onSendMessage","onShowDropdown","showDropdown","messageContent","setMessageContent","selectedImages","setSelectedImages","setIsUploading","textInputRef","dismissKeyboard","activeElement","blur","scrollTimeout","handleScrollStart","resetInputHeight","details","asset","fileName","fileSize","prevImages","removeImage","handleSend","validatedMessage","lengthDiff","totalSize","sum","totalSizeBytes","totalSizeMB","imageCount","messageObject","uploadAndSendImageMessage","hasCaption","captionText","messageObjectContent","focus","adjustHeight","defaultHeight","newHeight","handleKeyPress","shiftKey","inputSection","inputContainerOuter","selectedImagesWrapper","selectedImagesScrollView","selectedImagesContainer","selectedImageContainer","selectedImagePreview","removeImageButton","uploadingOverlay","attachButtonContainer","attachButton","inputInnerContainer","onKeyPress","sendButton","sendButtonActive","sendButtonInactive","MessageHeader","selectedConversationData","hasDraft","draftData","onCreateBooking","onViewPets","setShowDropdown","dropdownRef","showDropdownButton","is_professional","mobileHeader","mobileHeaderContent","backArrow","mobileHeaderNameContainer","mobileProfilePhotoContainer","mobileProfilePhoto","mobileHeaderName","headerDropdownMenu","headerDropdownItem","headerDropdownText","draft_id","messageHeader","messageHeaderContent","messageHeaderName","headerTitle","ratingText","reviewCountText","reviewsList","reviewUserInfo","profileContainer","defaultProfileImage","reviewUserDetails","nameAndStarsRow","reviewerName","serviceRow","calendarIcon","serviceInfoText","ReviewsModal","averageRating","reviewCount","userName","forProfessional","renderStars","stars","renderProfilePicture","review","reviewer_profile_picture","last_occurrence_end_date","review_text","petListImageContainer","petListImage","petListImagePlaceholder","petTextContainer","modalContainerSmallMobile","headerLeft","headerTextContainer","clientProfilePhoto","clientProfilePhotoPlaceholder","clientName","clientSubtitleContainer","clientSubtitle","reviewBadge","reviewBadgeText","retryText","contentMobile","mobilePetsView","mobilePetItem","mobilePetContent","mobilePetName","mobilePetType","mobileDetailsView","mobileDetailsHeader","mobileDetailsTitle","mobileDetailsScrollView","borderRightWidth","borderRightColor","petsScrollView","petItemSelected","petNameSelected","petTypeSelected","detailsScrollView","detailsTitle","detailsSection","petImagePlaceholder","noSelectionContainer","noSelectionText","createBookingButton","createBookingButtonText","reviewSection","reviewSummary","reviewsScrollView","reviewHeader","reviewRating","reviewDate","ClientPetsModal","conversation","otherUserName","otherUserProfilePhoto","setPets","setReviews","setAverageRating","setReviewCount","setSelectedPet","mobileView","setMobileView","showReviewsModal","setShowReviewsModal","isSmallMobile","fetchPets","fetchReviews","petsData","getClientPets","reviewsData","getUserReviews","average_rating","review_count","renderPetDetails","is_dog","handleOpenReviewsModal","handleBackToPets","handleCreateBooking","handleCloseReviewsModal","MessageTimestamp","formattedTime","messageTimestampContainer","sentMessageTimestamp","receivedMessageTimestamp","image_url","image_urls","messageTimestampText","ratingLabel","starsRow","starContainer","reviewTextContainer","reviewTextLabel","reviewTextInput","noticeContainer","noticeText","actionButtons","ReviewModal","onSubmitReview","setRating","setReviewText","Keyboard","dismiss","completedBanner","reviewButton","reviewButtonText","ReviewRequestCard","reviewModalVisible","setReviewModalVisible","handleOpenReviewModal","submitBookingReview","reviewData","MessageHistory","createMessageStyles","mainSection","conversationProfilePhotoFallback","messageSection","mobileProfilePhotoFallback","messagesContainer","fullWidthMessage","sendButtonMobile","messageCard","sentMessage","receivedMessage","messageText","sentMessageContainer","receivedMessageContainer","sentMessageText","receivedMessageText","WebkitTapHighlightColor","editDraftButton","editDraftText","mobileEditDraftButton","createBookingContainer","createBookingHangingButton","createBookingHangingText","mobileMessageView","messageImage","messageImagesContainer","getInitialWidth","innerWidth","isLoadingConversations","setIsLoadingConversations","isLoadingMessages","setIsLoadingMessages","isSearchFocused","setIsSearchFocused","setSelectedConversation","setSelectedConversationData","isImageViewerVisible","selectedImageUrl","handleImagePress","closeImageViewer","useImageViewer","setIsImageViewerVisible","setSelectedImageUrl","setMessages","isSending","setIsSending","showRequestModal","setShowRequestModal","setConversations","filteredConversations","setFilteredConversations","isIntentionallyDeselecting","isKeyboardVisible","setIsKeyboardVisible","keyboardHeightRef","setHasMore","currentPage","setCurrentPage","setIsLoadingMore","prevScreenWidthRef","isInitialLoad","setIsInitialLoad","initialLoadRef","showBookingStepModal","setShowBookingStepModal","setCurrentBookingId","setHasDraft","setDraftData","showDraftConfirmModal","setShowDraftConfirmModal","wsConnectionStatus","setWsConnectionStatus","resetNotifications","updateRoute","MessageNotificationContext","showClientPetsModal","setShowClientPetsModal","isHandlingRouteParamsRef","hasLoadedMessagesRef","shouldOpenBookingCreationRef","markMessagesAsReadRef","lastViewedConversationRef","processedPagesRef","messageIdsRef","actualViewportHeightRef","inputContainerHeightRef","isAndroidChromeRef","isFetchingConversationsRef","isFetchingMessagesRef","keyboardDismissHandlerRef","renderCountRef","routeParams","detectKeyboard","visualViewport","keyboardHeight","innerHeight","keyboardVisible","visualViewportHeight","documentElement","fetchConversations","isWebMobile","isAndroidChrome","existingStyle","updateViewportHeight","vh","setProperty","previousHeight","currentActiveElement","handleResize","documentHeight","urlBarHeight","isKeyboardOpen","offsetHeight","inputRect","getBoundingClientRect","viewportHeight","inputBottom","needsExtraScroll","inputHeight","browser","stillActive","block","handleWebSocketMessage","currentMessageCount","statusUserId","isOnline","prevConversations","updatedConversations","participant1Id","participant2Id","other_participant_online","updatedCount","selectedParticipant1Id","selectedParticipant2Id","prevMessages","newMessageId","newMessageContent","_isOptimistic","updatedMessages","_wasOptimistic","messageLength","newMessageLength","oldLength","newLength","addedMessageId","WebSocket","isInitializingRef","lastWindowWidthRef","lastInitTimeRef","lastSelectedConversationRef","conversationData","currentWindowWidth","isResizeEvent","oldWidth","newWidth","hasSelectedConversation","hasStoredConversation","isResizeTriggeredSelectionRef","timeSinceLastInit","minRequiredTime","isFirstTime","hasNoConversationsAfterSignIn","currentTime","currentUrl","rawSelectedConversationId","rawUrlConversationId","urlConversationId","conversationToLoad","conversationsData","cleanUrl","paramsToKeep","c","has_profile_pic","newUrl","fetchMessages","availableIds","setParams","clientId","filteredByRole","sortedConversations","timeA","initializeData","lastConversationFetchTimeRef","minTimeBetweenFetches","timeSinceLastFetch","prevWidth","crossedFrom","crossedTo","prevFilterScreenWidthRef","wasPreviouslyDesktopView","shouldDetailLog","currentRole","totalConversations","originalCount","filteredCount","justCrossedToDesktop","needsInitialSelection","roleFiltered","lowercaseQuery","searchFiltered","roleFilteredCount","searchFilteredCount","conversationExists","isFound","stackTrace","routeName","screenParams","hasExistingConversations","caller","currentlySelected","current_url","getConversations","newConversation","found","total_conversations","route_params","matchingConversation","is_selected","page","hasConversationData","matchesId","matchesRole","conversation_is_professional","fromRouteParams","allConversations","fetchKey","getConversationMessages","newMessages","has_more","has_draft","isPagination","existingIds","uniqueNewMessages","combinedMessages","previous","newUnique","combined","updatedConversation","createNewDraft","loadMoreMessages","isAlreadyLoading","nextPageAlreadyProcessed","isLoadingMoreRefCurrent","nextPageProcessed","bookingMessages","groupMessagesByBookingId","confirmedBookingIds","Boolean","completedBookingIds","is_review_request","client_review","professional_review","action","prevMessage","showTimestamp","shouldShowTimestamp","isFirstInGroup","prevTime","timeDiff","is_attachment","hasImages","hasLegacyImage","isImageMessage","forceHasImage","bookingsWithUpdates","messagesForBooking","confirmationMessage","confirmationTime","newerApprovalRequests","bookingIsConfirmed","bookingMessagesList","hasAssociatedChangeRequest","isApprovalMessage","booking_status","isUpdateToConfirmedBooking","hasNewerRequestChanges","showEditDraft","handleEditDraft","isNewestChangeRequest","hasNewerApprovalMessages","originalIsNewest","hasNewerApprovals","effectivelyNewest","isRelatedToUpdate","hasOlderBookingConfirmedMessage","hasOlderApprovalMessage","payout","isAttachmentMessage","hasImageUrl","filtered","renderConversationList","renderedConversations","filteredConversationsCount","safeConversationsCount","convId","previousConversation","renderMessageSection","draftId","handleOpenExistingDraft","handleViewPets","handlerSetter","imageMessageIds","alreadySent","messageContentLength","messageContentPreview","selectedConversationType","hasImageMessageIds","hasMessageObject","hasImageUrls","beforeLength","afterLength","hasContent","requestData","image_message_ids","apiUrl","hasToken","responseStatus","responseData","errorResponse","errorStatus","requestedConversationId","requestedMessageContent","SendNormalMessage","oldValue","url_after","createDraftFromBooking","handleBeforeUnload","initialConversationId","performance","navigationEntry","getEntriesByType","previousCacheSize","previousMessageIdsSize","processedPagesSize","messageIdsSize","checkAndroidKeyboard","isInputFocused","viewportHeightReduced","keyboardIsLikelyOpen","handleAndroidFocus","checkInterval","ensureLatestMessageVisible","selectors","targetFound","selector","elements","querySelectorAll","el","cssText","childCount","childElementCount","intervalId","fixMessageVisibility","flatList","computedStyle","getComputedStyle","paddingApplied","marginApplied","child","adjustForKeyboard","useLayoutEffect","styleEl","styleId","ensureMessageListPadding","timeoutId","conversationsTotal","filteredTotal","originalConversations","safeFilteredConversations","resizeTimeoutRef","lastWidthRef","handleScreenWidthChange","currentWidth","lastWidth","previousWidth","brave","isBrave","fixGreySpace","borderTop","processedNavigationTimestampsRef","_timestamp","has_fullConversationData","fullConversationData","hasRecentTimestamp","isFromProfessionalModal","hasProcessedThisTimestamp","isScreenResizeEvent","navigationTimestamp","currentConversation","conversationCount","isUpdate","lastMessageText","handleContinueExisting","warningContainer","warningText","Settings","settingsItems","appName","paragraph","listItem","PrivacyPolicy","ProfessionalSettings","testSection","TermsOfService","HelpFAQ","ContactUs","handleFormspreeSubmit","setName","setMessage","messageError","setMessageError","maxContentWidth","succeeded","nameValidation","messageValidation","originalMessage","SearchBar","initialValue","inputRef","IconButton","returnKeyType","blurOnSubmit","memo","androidSafeArea","searchAndFilterContainer","searchBar","ownerList","ownerCard","petTypes","petChip","noOwnersContainer","filtersContainer","filterChip","applyButton","closeIcon","Owners","selectedFilters","setSelectedFilters","tempFilters","setTempFilters","isFilterModalVisible","setIsFilterModalVisible","owners","setOwners","fetchOwners","filters","toggleFilter","prevFilters","f","applyFilters","filteredOwners","matchesSearch","matchesFilters","every","lastBookingDate","weekAgo","monthAgo","yearAgo","setFullYear","renderOwner","Chip","handleSearchChange","CostCalculationModal","onContactPress","setStartDate","setEndDate","additionalAnimals","setAdditionalAnimals","isHolidayRate","setIsHolidayRate","selectedRates","setSelectedRates","setTotalCost","platformFees","setPlatformFees","ratesObj","calculateTotalCost","persistentScrollbar","counterContainer","counterButton","counterText","finalTotal","finalTotalText","contactButton","contactButtonText","dateSection","dateColumn","heartButton","flexShrink","animalTypeContainer","calculateButton","calculateButtonText","ServiceCard","onHeartPress","isFavorite","professionalId","isModalVisible","setIsModalVisible","handleContactPress","existingConversation","createNewConversation","isCurrentUserOwner","unshift","WebMap","mockReviews","textContent","platformStorage","topSection","gallerySection","bottomSection","aboutSection","hostingSection","hostTitle","weightRanges","weightRange","galleryPhoto","centered","statItem","skillsGrid","skillBadge","skillText","photoGallery","calculatorText","additionalRatesButton","additionalRatesText","calendarSection","readMoreButton","readMoreText","reviewItem","mapContainer","petsSection","petBreed","aboutSubsections","communicationSection","skillsSection","homeDetails","twoColumnLayout","singleColumnLayout","homeFeaturesGrid","featureBubble","reviewerPhoto","reviewerInfo","modalCloseIcon","modalScrollContent","reviewsGrid","specialistSection","specialistText","modalReviewItem","leftColumnMobile","seeAllButton","seeAllButtonText","modalServicesGrid","reviewMeta","ProfessionalProfile","professionalData","setProfessionalData","canGoBack","setCanGoBack","bioModalVisible","setBioModalVisible","reviewsModalVisible","setReviewsModalVisible","specialistModalVisible","setSpecialistModalVisible","favoriteServices","setFavoriteServices","servicesModalVisible","setServicesModalVisible","useResponsiveLayout","hasHistory","hasRouteParams","platform","storedProfessional","parsedProfessional","loadProfessionalData","toggleFavorite","renderProfilePhoto","renderRatingStars","TruncatedText","maxLines","renderMap","MapContainer","TileLayer","Marker","center","zoom","attribution","styles2","HomeFeature","renderReview","renderAvailability","dynamicServicesBox","servicesScroll","dynamicProfileSection","dynamicProfileSectionMobile","getContentWidth","availableWidth","profileSectionMobile","servicesWrapper","servicesScrollContent","homeSection","noContractsText","contractTitle","ContractList","setContracts","fetchContracts","modalPicker","pickerModalContainer","pickerCloseButton","pickerCloseButtonText","OwnerPicker","selectedOwner","onSelectOwner","showOwnerPicker","setShowOwnerPicker","templateGrid","templateBox","templateTitle","noTemplatesText","ownerPickerContainer","ContractTemplate","templates","isTemplateModalVisible","setTemplateModalVisible","isEditModalVisible","setEditModalVisible","selectedTemplate","setSelectedTemplate","contractContent","setContractContent","setSelectedOwner","template","handleTemplateSelect","handleAddSignableField","prevContent","chronicleTitle","summary","ChronicleSummary","chronicles","chronicle","outerContainer","QuestionInput","dropdownPosition","setDropdownPosition","layout","setLayout","measure","fx","fy","px","py","toggleDropdown","onLayout","createButton","createButtonText","webModalContent","petOption","petOptionText","photoPreview","photoThumbnail","questionContainer","modalButtonContainer","addQuestionButton","addQuestionButtonText","answerInputContainer","answerInput","summaryInput","photoContainer","ChronicleForm","onCreateChronicle","questions","setQuestions","question","answer","isPreset","setSummary","photos","setPhotos","isCreating","setIsCreating","updateQuestion","newQuestions","resetForm","PhotoPreview","addNewQuestion","uploadingText","uploadingSpinner","handleCreateChronicle","newChronicle","useTemplateButton","useTemplateButtonText","MyContracts","setChronicles","setTemplates","fetchChronicles","fetchTemplates","prevChronicles","eyeIcon","successText","forgotPasswordButton","forgotPasswordText","ChangePassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","setSuccess","showCurrentPassword","setShowCurrentPassword","showNewPassword","setShowNewPassword","showConfirmPassword","setShowConfirmPassword","contextScreenWidth","setToken","currentPasswordError","setCurrentPasswordError","newPasswordError","setNewPasswordError","storedToken","getToken","newPasswordValidation","sanitizedCurrentPassword","sanitizedNewPassword","changePassword","detail","handleForgotPassword","suggestionsWrapper","ServiceTypeSelect","filteredServices","setFilteredServices","onFocus","handleSelectService","ALL_ANIMAL_TYPES","SUPPORTED_LOCATIONS","zips","ALL_SEARCHABLE_LOCATIONS","getAllSearchableLocations","searchableItems","searchText","SearchRefiner","onFiltersChange","onShowProfessionals","onSearchResults","initialFilters","locationSuggestions","setLocationSuggestions","setService","service_query","selectedAnimals","setSelectedAnimals","overnightService","setOvernightService","overnight_service","priceRange","setPriceRange","price_max","verifiedOnly","setVerifiedOnly","insuredOnly","setInsuredOnly","filterBackgroundChecked","setFilterBackgroundChecked","filter_background_checked","filterInsured","setFilterInsured","filter_insured","filterElitePro","setFilterElitePro","filter_elite_pro","showOtherAnimalInput","setShowOtherAnimalInput","otherAnimalSearch","setOtherAnimalSearch","otherAnimalSuggestions","setOtherAnimalSuggestions","isSearching","setIsSearching","xlarge","locationInputWrapper","locationInput","modalBackdrop","suggestionItemNotSupported","suggestionTextNotSupported","suggestionType","datePickersContainer","dateInput","priceRangeContainer","priceText","selectedText","personButton","showProfessionalsButton","showProfessionalsText","useLocationButton","useLocationText","animalTypesContainer","animalTypeButton","animalTypeButtonSelected","animalTypeLabel","animalTypeLabelSelected","priceContainer","priceLabel","checkboxRow","checkboxLabel","badgeFilterRow","badgeIcon","headerButtons","iconButton","checkboxLabelContainer","searchButton","searchButtonText","searchButtonDisabled","otherAnimalInputWrapper","otherAnimalHeader","otherAnimalTitle","animalInputContainer","animalInput","addAnimalButton","addAnimalButtonText","animalSuggestionsWrapper","animalSuggestionsContainer","animalSuggestionItem","animalSuggestionText","animalSelectionWrapper","selectedAnimalsContainer","selectedAnimalsLabel","selectedAnimalTag","selectedAnimalText","modalSuggestionsWrapper","AnimalTypeButton","handleAnimalSelect","OtherAnimalInput","onSuggestionSelect","onAnimalSelect","animalInputRef","suggestionSelectedRef","closeButtonClickedRef","debouncedSearch","debounce","filteredAnimals","handleOtherAnimalClose","LocationInputSimple","isFocused","setIsFocused","suggestionsRef","containerRef","isOutsideContainer","hasSuggestions","suggestionsCount","handleTextChange","defaultSuggestions","filteredLocations","resultsCount","suggestion","price_min","radius_miles","page_size","searchProfessionals","ProfessionalCard","primary_service","backend_value","frontend_value","has_reviews","has_review_text","latest_highest_review_text","has_author_profile_pic","latest_review_author_profile_pic","has_reviewer_profile_pic","author_pic_url","reviewer_pic_url","hasReviews","hasBadges","badges","is_background_checked","is_insured","is_elite_pro","leftSection","profile_picture_url","fallbackIconContainer","distance","priceSection","fromText","price_per_visit","perNight","badgesContainer","backgroundCheckedBadge","badgeText","backgroundCheckedBadgeText","insuredBadge","insuredBadgeText","eliteProBadge","eliteProBadgeText","listContent","repeatOwners","bestReviewContainer","bestReviewTextContainer","bestReview","readMore","mobileHeaderRight","filterChips","filterChipText","emptyStateMessage","adjustSearchButton","adjustSearchButtonText","fallbackReviewerIconContainer","ProfessionalList","professionals","onProfessionalSelect","onFilterPress","renderEmptyState","getEmptyStateMessage","isColoradoSprings","criteria","animalText","criteriaText","renderHeader","professional_id","ReactNativeMapView","RNMarker","Callout","PROVIDER_GOOGLE","Popup","useMap","L","maps","MapView","reactLeaflet","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","HoverMarker","onShowServicesModal","markerRef","popupRef","MarkerIcon","divIcon","html","iconAnchor","popupAnchor","marker","leafletMarker","getElement","_leaflet_marker","on","openOn","_map","eventHandlers","click","originalEvent","openPopup","autoClose","closeOnClick","closeOnEscapeKey","handleViewDetails","WebMapComponent","onMarkerPress","region","fallbackContainer","fallbackText","mapBounds","calculateMapBounds","validProfessionals","prof","lats","lngs","minLat","maxLat","minLng","maxLng","centerLat","centerLng","latDiff","lngDiff","maxDiff","NativeMapComponent","mapReady","setMapReady","dimensions","setDimensions","mapRegion","calculateMapRegion","latitudeDelta","longitudeDelta","isValidLatitude","isValidLongitude","isValidDeltas","initialRegion","provider","showsUserLocation","showsMyLocationButton","mapType","loadingEnabled","moveOnMarkerPress","showsCompass","showsScale","showsBuildings","showsTraffic","showsIndoors","onMapReady","handleMapReady","onRegionChangeComplete","coordinate","customMarker","markerPin","markerInner","calloutContainer","calloutTitle","calloutLocation","calloutService","calloutPrice","calloutButton","calloutButtonText","markerText","calloutText","popupContent","popupTitle","popupLocation","popupService","popupPrice","popupButton","popupButtonText","MapViewComponent","headerTop","professionalLocation","headerLocationContainer","mobileMainView","mobileServiceItem","mobileServiceContent","mobileServiceName","mobileServicePrice","servicesScrollView","serviceItemSelected","serviceNameSelected","servicePriceSelected","serviceDetails","overnightBadge","additionalRateItem","additionalRateRow","additionalRateTitleContainer","additionalRateTitle","infoIcon","additionalRatePrice","tooltipModalOverlay","tooltipModalContent","tooltipHeader","tooltipTitle","tooltipCloseButton","contactButtonDisabled","contactButtonContent","errorModalCloseButton","errorModalText","errorModalOkButton","errorModalOkText","professionalProfilePhoto","professionalProfilePhotoPlaceholder","noReviewsText","reviewsTabContent","reviewProfileImage","defaultReviewProfileImage","headerBadgesContainer","headerBadgesScrollContent","headerBadge","headerBadgeText","headerBackgroundCheckedBadge","headerBackgroundCheckedBadgeText","headerInsuredBadge","headerInsuredBadgeText","headerEliteProBadge","headerEliteProBadgeText","ProfessionalServicesModal","primaryService","setShowTooltip","isCreatingConversation","setIsCreatingConversation","showErrorModal","setShowErrorModal","loadingReviews","setLoadingReviews","fetchServices","primaryServiceData","getProfessionalServicesDetailed","profile_pic_url","formatAnimalTypes","types","renderServiceDetails","rate_id","renderReviews","handleBackToServices","current_route","current_params","route_count","current_index","from_screen","previous_screen","createConversation","full_response","currentParams","from_route","navigation_timestamp","navigation_state","navigationParams","otherUserProfilePic","SearchProfessionalsListing","isSingleView","setIsSingleView","setProfessionals","setFilters","isMapMinimized","setIsMapMinimized","isLeftColumnExpanded","setIsLeftColumnExpanded","showingSearch","setShowingSearch","searchResults","setSearchResults","currentSearchParams","setCurrentSearchParams","setRegion","activeFilters","setActiveFilters","selectedProfessional","setSelectedProfessional","truncateLocation","generateFilterCategories","extractedCity","cityMatch","extractCity","finalCategories","loadInitialProfessionals","filterCategories","handleSearchResults","handleFiltersChange","newFilters","handleLoadMore","handleProfessionalSelect","handleShowServicesModal","toggleMapSize","handleShowProfessionals","view","toggleLeftColumn","leftColumnToggle","mapColumn","containerMobile","mobileHeaderText","headerIcon","mapToggleButton","renderContent","leftColumnWidth","mapColumnWidth","handleCloseServicesModal","bookingsContent","stickyHeader","stickyHeaderContent","filterScrollContent","filtersWrapper","filterButtonHovered","filterContent","allButton","allButtonText","pendingButton","pendingButtonText","confirmedButton","confirmedButtonText","completedButton","completedButtonText","listHeaderSpacing","listContainer","loadingMoreContainer","emptyStateSubtitle","outlineWidth","MyBookings","setPage","hoveredFilter","setHoveredFilter","subscription","fetchBookings","pageNum","isLoadMore","newBookings","professional_bookings","owner_bookings","searchLower","renderBookingCard","onCancel","handleCancelBooking","ListHeaderComponent","EmptyStateMessage","logoContainer","logoText","mobileLogo","LogoHeader","onProfilePress","userProfileImage","tintColor","handleProfilePress","safeAreaContainer","ServiceManagerScreen","isMobileBrowser","setIsMobileBrowser","previousRoute","setRouteHistory","searchBarContainer","webSearchInput","BlogScreen","filteredPosts","setFilteredPosts","handleSearch","Searchbar","clearIcon","truncatedContent","authorBio","postInfo","referencesTitle","reference","referenceText","errorButton","errorButtonText","BlogPost","setPost","isValidPost","postData","storedPost","parsedPost","postId","foundPost","loadPost","handleReferencePress","CrossPlatformContent","ValidationModal","CityDropdown","selectedCity","onSelectCity","setIsOpen","filteredCities","displayCities","requiredField","renderCityItem","cityItem","otherCityItem","cityItemText","otherCityText","cityList","formSection","nameField","checkboxGroup","checkboxIcon","radioGroup","radioContainer","radio","radioSelected","radioLabel","otherInputContainer","otherInput","addressSection","cityStateContainer","cityInput","stateInput","zipInput","addressNote","optional","referralSection","buttonSelected","buttonTextSelected","requiredFieldNote","requiredAsterisk","linkContainer","copyButton","Waitlist","setPhone","setPetInfo","userType","setUserType","hesitations","setHesitations","desiredFeatures","setDesiredFeatures","newsletter","setNewsletter","agreeToTerms","setAgreeToTerms","otherService","setOtherService","showOtherInput","setShowOtherInput","streetAddress","setStreetAddress","aptUnit","setAptUnit","setCity","stateRegion","setStateRegion","zipCode","setZipCode","referralSource","setReferralSource","otherReferralSource","setOtherReferralSource","validationModal","setValidationModal","phoneError","setPhoneError","setSelectedCity","otherCity","setOtherCity","cityError","setCityError","handleBackToSignup","handleCopyLink","Clipboard","setString","formatted","area","prefix","toggleService","TestToast","showSuccessToast","showErrorToast","showInfoToast","showWarningToast","showLongToast","verifyResult","acceptResult","acceptInvitation","acceptError","topRow","profileInfoWrap","avatar","nameContainerWide","petsText","petsTextWide","textOverflow","servicesLabel","servicesText","servicesTextWide","statusSection","lastBookingContainer","lastBookingText","noBookingsContainer","noBookingsText","pastBookingsContainer","pastBookingsText","upcomingContainer","upcomingText","buttonSection","buttonSectionWrap","mobileBtnSection","viewProfileButton","viewProfileText","createBookingText","buttonHovered","activeBookingsContainer","activeBookingsText","ConnectionCard","connection","onViewProfile","isClient","isExtraWideScreen","isViewMessagesHovered","setIsViewMessagesHovered","isCreateBookingHovered","setIsCreateBookingHovered","active_bookings_count","iconColor","textStyle","has_past_booking","connectionId","connectionName","connectionType","hasActivePastBooking","activeBookingsCount","upcoming_booking","connectionsContent","searchAndInviteContainer","searchContainerFocused","caretColor","inviteButtonSmall","inviteButtonSmallText","activeBookingsButton","activeBookingsButtonText","noBookingsButton","noBookingsButtonText","pastBookingsButton","pastBookingsButtonText","inviteButton","inviteButtonText","footerText","inviteTypeToggle","inviteTypeButton","inviteTypeButtonActive","inviteTypeText","inviteTypeTextActive","emailInput","emailInputError","generatedLinkContainer","generatedLink","sendInviteButton","sendInviteButtonText","columnWrapper","cardWrapper","mobileCardWrapper","wideScreenCardWrapper","Connections","setConnections","showInviteModal","setShowInviteModal","inviteEmail","setInviteEmail","isInviting","setIsInviting","searchFocused","setSearchFocused","searchInputRef","allConnections","setAllConnections","invitationType","setInvitationType","setGeneratedLink","inviteError","setInviteError","inviteSuccess","setInviteSuccess","isInviteButtonHovered","setIsInviteButtonHovered","isCreateServiceButtonHovered","setIsCreateServiceButtonHovered","emailValidationError","setEmailValidationError","handleRoleNavigation","fetchConnections","getUserConnections","connectionsList","newConnections","filterConnectionsLocally","validateInviteEmail","sanitizedLength","handleInviteClient","baseConnections","handleViewMessages","client_id","numColumns","columnWrapperStyle","clients","all","active","pending","past","clipboard","writeText","inviteClient","invitation_link","global","atob","chars","encoded1","encoded2","encoded3","encoded4","bitmap","fromCharCode","Stack","createStackNavigator","Tab","createBottomTabNavigator","screens","component","isMobileView","setIsUserScrolling","AutoScrollSection","cardWidth","scrollViewRef","currentIndex","setCurrentIndex","userScrolling","setUserScrolling","autoScrollTimerRef","nextIndex","scrollToIndex","handleScrollEnd","pagingEnabled","handleScrollBegin","onScrollEndDrag","handleDotPress","cardStyles","iconContainer","bounces","overScrollMode","Features","roadmapColors","featureItemStyle","featureContentStyle","FontAwesome6","FontAwesome","ReviewsSection","BlogSection","renderBlogPost","tagIndex","ContactSection","isSubmitted","setIsSubmitted","webFormData","handleSubmit","isWebSubmitted","webErrors","errors","currentlySubmitting","submitting","subject","mailtoUrl","encodeURIComponent","showPassword","setShowPassword","rememberMe","setRememberMe","handleLogin","method","fromScreen","handleDocumentKeyPress","platformNavigation","path","togglePasswordVisibility","uid","new_password","createLinking","authContext","enabled","prefixes","getInitialURL","waitCount","isInitialized","baseUrl","config","Home","SignIn","Invite","exact","ResetPassword","ResetPasswordConfirm","senderName","More","Blog","navigationRef","createNavigationContainerRef","isReady","TabNavigator","initialRouteName","Navigator","tabBar","Navigation","Screen","headerShown","AppContent","checkAuthStatus","setInitialRoute","currentPath","initializeApp","checkAndRedirectProtectedRoute","isOnProtectedPath","NavigationContainer","linking","onStateChange","MessageNotificationProvider","PaperProvider","screenOptions","TransitionPresets","SlideFromRightIOS","presentation","warningBanner","warningContent","waitlistButtonText","App","fontsLoaded","setFontsLoaded","loadFonts","initializeFonts","AuthProvider","clientAgreedTos","utcDates","startTimeStr","endTimeStr","endDateStr","isMidnightEnd","isTimeBeforeStart","recurringData","getUserName","isFormData","current_password","hasFile","pair","timeout","formattedAdditionalRates","getConnectionProfile","userId","is_professional_invite","sendReferral","referralType","referral_type","getInvitations","getInvitationDetails","already_accepted","deleteInvitation","resendInvitation","termsOfServiceAgreedByPro","terms_of_service_agreed_by_pro","getUnreadMessageCount","uploadMessageImage","compressImage","uriType","compressWebBase64Image","compressWebImage","originalWidth","originalHeight","newMaxWidth","newQuality","ratio","tempCanvas","tempCtx","tempWidth","tempHeight","compressedDataUrl","originalDimensions","newDimensions","sizeReduction","images","caption","totalEstimatedSize","totalEstimatedSizeMB","processedImages","imageSource","is_clickable","sendImageMessage","is_professional_review","toLocation","fromLocation","currentRouteInfo","currentRouteName","navigatingTo","newCurrentRoute","useReactRoute","_worklet_1130445313934_init_data","code","_worklet_238094918771_init_data","_worklet_7555450561358_init_data","NavigationContent","propState","descriptors","propNavigation","shouldRender","reactNavigation","useReactNavigation","reactRoute","setVisible","isMenuOpen","setIsMenuOpen","setCurrentRoute","setNotificationCount","setIsCollapsed","hasUnreadMessages","ownerUnreadCount","professionalUnreadCount","getCurrentRoleUnreadCount","getOtherRoleUnreadCount","hasCurrentRoleUnreadMessages","line1Rotation","useSharedValue","line2Opacity","line3Rotation","line1TranslateY","line3TranslateY","routeFromProps","routeFromHook","isInMessageHistory","animateHamburgerMenu","renderLogRef","stateSource","navSource","checkAndResetConversationNotifications","selectedConvId","onMessagesScreen","updateCurrentRoute","urlRoute","oldRoute","navigationExists","addListenerExists","removeNavigationListener","routeInfo","routeCheckInterval","lastCheckedRoute","AnimatedHamburgerMenu","line1Style","useAnimatedStyle","anonymous","__closure","__workletHash","__initData","line2Style","line3Style","toX","withTiming","closeMenu","toggleMenu","handleRoleSwitch","handleLogout","renderMobileMenuItems","currentRoleCount","hasCurrentRoleUnread","notification","mobileRoleToggleContainer","mobileRoleToggleTitle","mobileRoleButtonsContainer","mobileRoleButton","mobileRoleButtonActive","mobileRoleButtonText","mobileRoleButtonTextActive","roleNotificationBadge","roleNotificationText","mobileMenuItem","mobileLogoutItem","mobileMenuItemText","mobileLogoutText","mobileMessageNotificationBadge","mobileMessageNotificationText","navContainer","renderDesktopSidebar","sidebarWidth","logoutItem","sidebarItem","activeItem","sidebarItemText","messageNotificationBadge","messageNotificationText","sidebarContainer","sidebarLogoContainer","logoButton","sidebarLogo","menuItemsContainer","roleToggleContainer","roleToggleTitle","roleButtonsContainer","roleButton","roleButtonActive","roleButtonText","roleButtonTextActive","roleButtonTextCollapsed","logoutButtonContainer","signedOutHeaderWeb","webLogo","mobileRightContent","hamburgerMenuContainer","hamburgerNotificationBadge","hamburgerNotificationText","mobileMenu","webDesktopMenu","renderMobileNavBar","customNavBar","navButton","navText","shouldCheckMessageState","setShouldCheckMessageState","isPageReload","TYPE_RELOAD","hasURLParams","shouldHideNavigation","titleContainer","titleContainer2","desktopNav","navItem","webNavItem","webNavText","navLinkContainer","borderBottomRightRadius","logoutText","menuContent","notificationText","roleButtonDisabled","roleButtonTextDisabled","mobileRoleButtonDisabled","mobileRoleButtonTextDisabled","messageNotificationDot","mobileMessageNotificationDot","roleNotificationIndicator","signedOutOptions","signedOutButton","signedOutButtonText","signInButton","signedOutNavButtons","webSignInButton","webSignInText","NODE_ENV","STAGING_API_BASE_URL_ANDROID","STAGING_API_BASE_URL_IOS","STAGING_API_BASE_URL_WEB","PRODUCTION_API_BASE_URL_ANDROID","PRODUCTION_API_BASE_URL_IOS","PRODUCTION_API_BASE_URL_WEB","DEV_API_BASE_URL_ANDROID","DEV_API_BASE_URL_IOS","DEV_API_BASE_URL_WEB","STAGING_MEDIA_URL","PRODUCTION_MEDIA_URL","isDevelopment","isStaging","MEDIA_URL","isProduction","debugEnabled","setDebugEnabled","AuthService","accessToken","refreshToken","isRefreshing","refreshSubscribers","tokenExpiryTime","lastValidation","authStateCallbacks","isSigningOut","lastTokenCheck","TOKEN_REFRESH_THRESHOLD","TOKEN_PREEMPTIVE_REFRESH","VALIDATION_CACHE_TIME","onAuthStateChange","notifyAuthStateChange","parseJwt","base64Url","decoded","repeat","tokenLength","tokenStart","errorStack","getTimeUntilExpiry","parsedToken","exp","expiryTime","shouldRefreshToken","timeUntilExpiry","shouldRefresh","refreshTokens","sub","refreshStartTime","refreshDuration","clearTokens","getAccessToken","validateToken","setTokens","multiSet","isValidJWT","accessTokenExists","refreshTokenExists","accessTokenLength","refreshTokenLength","accessTokenStart","refreshTokenStart","hasAccessToken","hasRefreshToken","forceSignOut","sessionValue","localStorage","is_PRODUCTION","authService","isInitializedRef","signOutTimeoutRef","setIsSignedIn","setUserRole","setIsApprovedProfessional","setIsInitialized","setTimeSettings","timezone_abbrev","setIsPrototype","setIsDebug","isOnProtectedRoute","navError","fallbackError","consecutiveAuth401Errors","lastErrorTime","requestInterceptor","interceptors","request","use","responseInterceptor","originalRequest","_retry","isAuthLoggingCall","isMessageCall","isConversationCall","refreshPromise","timeoutPromise","race","newToken","refreshError","isNetworkError","errorCode","isBackendDown","eject","focusCheckTimeout","handleWindowFocus","initTimeout","storedAccessToken","storedRefreshToken","hasValidToken","fetchUserName","getProfessionalStatus","storedRole","finalRole","suggestedRole","first_name","is_approved","handleDimensionsChange","checkStateConsistency","hasStoredTokens","hasMemoryTokens","consistencyInterval","monitorInterval","refreshTokenValue","timeSettingsData","initialRole","newRole","getCurrentRoute","isAuthenticated","debugTokenStatus","isExpired","timeUntilExpirySeconds","setHasUnreadMessages","setUnreadCount","setOwnerUnreadCount","setProfessionalUnreadCount","conversationCounts","setConversationCounts","lastApiResponse","setLastApiResponse","websocketConnected","setWebsocketConnected","websocketInitialized","setWebsocketInitialized","lastApiCheck","setLastApiCheck","initialCheckDoneRef","pendingCheckRef","reconnectIntervalRef","debounceTimerRef","websocketDataReceivedRef","lastCheckTimeRef","connectionHealthyRef","websocketRetryAttemptsRef","lastHeartbeatReceivedRef","lastHeartbeatSentRef","heartbeatTimeoutRef","initialApiCallMadeRef","websocketTimeoutRef","lastApiCheckRef","prevUserRoleRef","checkUnreadMessages","force","makeApiCall","isWebSocketConnected","waitForWebSocketWithFallback","checkWebSocketAndWait","connected","unread_count","conversation_counts","ownerCount","proCount","conversation_role_map","owner_unread_count","professional_unread_count","totalCount","onNewMessage","messageData","messageRole","message_role","conversation_role","isForOwnerRole","isForProfessionalRole","recipient_role","sender_type","currentUserRole","recipientRole","senderType","userIsProfessionalInConversation","prevCounts","prevConvCount","newConvCount","totalUnreadCount","conversationUnreadCount","allConversationCounts","currentTotalUnread","newTotalCount","newCounts","newOwnerCount","newProCount","updatedCounts","previousOwnerCount","previousProCount","currentRoleHasUnread","conversationsRemaining","remainingConvs","setWebsocketDataReceivedRef","initializeWebSocket","newMessageHandler","messageHandler","unreadUpdateHandler","heartbeatHandler","connectionHandler","forced","handleVisibilityChange","isWSConnected","reconnectIfNeeded","startProgressiveRetry","debouncedCheckUnreadMessages","contextValue","allCounts","conversationCountsSize","returned","fontFamilies","fontWeights","semiBold","bold","DefaultTheme","accent","pathSegments","getURLParams","goBack","back","navigateTo","replaceRoute","updateURLParams","pushState","getURLHash","setURLHash","addNavigationListener","handlePopState","isWeb","getUserAgent","Version","redirectToSignIn","parseISO","momentDate","convertTo24Hour","modifier","convertTo12Hour","hours12","fromTimezone","utc","utcTime","output","originalMoment","isoString","parseError","toDate","timeParts","localDateStr","localTimeStr","getFormattedTimes","startYear","startMonth","startDay","startHours","endYear","endMonth","endDay","endHours","startDateStr","formatInTimeZone","startDateTime","durationMs","remainingMs","startLocalDate","endLocalDate","startZonedDate","fromZonedTime","toZonedTime","endZonedDate","startLocal","endLocal","getTimezoneOffset","formatOccurrenceFromUTC","fullTimezone","localStart","localEnd","hasDSTChange","tzAbbrev","SHORT_DATE","MEDIUM_DATE","LONG_DATE","TIME_ONLY_24H","DATE_TIME","DATE_TIME_WITH_TZ","DATE_RANGE","DATE_TIME_RANGE","formatType","zoneAbbr","startUtcMoment","endUtcMoment","startLocalMoment","endLocalMoment","startFormatted","endFormatted","finalStart","finalEnd","convertTimeFromUTC","targetTimezone","dateChanged","fullDateTime","local","adjustedDate","uniqueDates","sortedOccurrences","localStartTime","localEndTime","actualStartDate","actualEndDate","firstDateKey","firstTime","timeObj","socket","connectionAttempts","maxConnectionAttempts","heartbeatInterval","disconnectTimeout","messageHandlers","wsUrl","_reconnectTimeout","forceDisconnect","_hasVisibilityListener","readyState","OPEN","CLOSING","CLOSED","resetDisconnectTimeout","setupVisibilityListener","CONNECTING","wsEndpoint","onopen","handleOpen","onclose","onmessage","handleMessage","handleError","scheduleReconnect","startHeartbeat","notifyHandlers","wasConnected","delay","preserveToken","savedToken","close","unregisterHandler","webpackContext","req","webpackContextResolve","__webpack_require__","o","module","exports","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","n","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","hmd","obj","prop","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}